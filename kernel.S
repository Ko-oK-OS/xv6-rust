
kernel/target/riscv64gc-unknown-none-elf/debug/kernel:     file format elf64-littleriscv


Disassembly of section .text:

0000000080000000 <_entry>:
    80000000:	00036117          	auipc	sp,0x36
    80000004:	e9010113          	addi	sp,sp,-368 # 80035e90 <stack0>
    80000008:	6511                	lui	a0,0x4
    8000000a:	f14025f3          	csrr	a1,mhartid
    8000000e:	0585                	addi	a1,a1,1
    80000010:	02b50533          	mul	a0,a0,a1
    80000014:	912a                	add	sp,sp,a0
    80000016:	0000c097          	auipc	ra,0xc
    8000001a:	900080e7          	jalr	-1792(ra) # 8000b916 <start>
    8000001e:	0001                	nop

0000000080000020 <kernelvec>:
    80000020:	7111                	addi	sp,sp,-256
    80000022:	e006                	sd	ra,0(sp)
    80000024:	e40a                	sd	sp,8(sp)
    80000026:	e80e                	sd	gp,16(sp)
    80000028:	ec12                	sd	tp,24(sp)
    8000002a:	f016                	sd	t0,32(sp)
    8000002c:	f41a                	sd	t1,40(sp)
    8000002e:	f81e                	sd	t2,48(sp)
    80000030:	fc22                	sd	s0,56(sp)
    80000032:	e0a6                	sd	s1,64(sp)
    80000034:	e4aa                	sd	a0,72(sp)
    80000036:	e8ae                	sd	a1,80(sp)
    80000038:	ecb2                	sd	a2,88(sp)
    8000003a:	f0b6                	sd	a3,96(sp)
    8000003c:	f4ba                	sd	a4,104(sp)
    8000003e:	f8be                	sd	a5,112(sp)
    80000040:	fcc2                	sd	a6,120(sp)
    80000042:	e146                	sd	a7,128(sp)
    80000044:	e54a                	sd	s2,136(sp)
    80000046:	e94e                	sd	s3,144(sp)
    80000048:	ed52                	sd	s4,152(sp)
    8000004a:	f156                	sd	s5,160(sp)
    8000004c:	f55a                	sd	s6,168(sp)
    8000004e:	f95e                	sd	s7,176(sp)
    80000050:	fd62                	sd	s8,184(sp)
    80000052:	e1e6                	sd	s9,192(sp)
    80000054:	e5ea                	sd	s10,200(sp)
    80000056:	e9ee                	sd	s11,208(sp)
    80000058:	edf2                	sd	t3,216(sp)
    8000005a:	f1f6                	sd	t4,224(sp)
    8000005c:	f5fa                	sd	t5,232(sp)
    8000005e:	f9fe                	sd	t6,240(sp)
    80000060:	00015097          	auipc	ra,0x15
    80000064:	c64080e7          	jalr	-924(ra) # 80014cc4 <kerneltrap>
    80000068:	6082                	ld	ra,0(sp)
    8000006a:	6122                	ld	sp,8(sp)
    8000006c:	61c2                	ld	gp,16(sp)
    8000006e:	7282                	ld	t0,32(sp)
    80000070:	7322                	ld	t1,40(sp)
    80000072:	73c2                	ld	t2,48(sp)
    80000074:	7462                	ld	s0,56(sp)
    80000076:	6486                	ld	s1,64(sp)
    80000078:	6526                	ld	a0,72(sp)
    8000007a:	65c6                	ld	a1,80(sp)
    8000007c:	6666                	ld	a2,88(sp)
    8000007e:	7686                	ld	a3,96(sp)
    80000080:	7726                	ld	a4,104(sp)
    80000082:	77c6                	ld	a5,112(sp)
    80000084:	7866                	ld	a6,120(sp)
    80000086:	688a                	ld	a7,128(sp)
    80000088:	692a                	ld	s2,136(sp)
    8000008a:	69ca                	ld	s3,144(sp)
    8000008c:	6a6a                	ld	s4,152(sp)
    8000008e:	7a8a                	ld	s5,160(sp)
    80000090:	7b2a                	ld	s6,168(sp)
    80000092:	7bca                	ld	s7,176(sp)
    80000094:	7c6a                	ld	s8,184(sp)
    80000096:	6c8e                	ld	s9,192(sp)
    80000098:	6d2e                	ld	s10,200(sp)
    8000009a:	6dce                	ld	s11,208(sp)
    8000009c:	6e6e                	ld	t3,216(sp)
    8000009e:	7e8e                	ld	t4,224(sp)
    800000a0:	7f2e                	ld	t5,232(sp)
    800000a2:	7fce                	ld	t6,240(sp)
    800000a4:	6111                	addi	sp,sp,256
    800000a6:	10200073          	sret
    800000aa:	00000013          	nop
    800000ae:	0001                	nop

00000000800000b0 <timervec>:
    800000b0:	34051573          	csrrw	a0,mscratch,a0
    800000b4:	e10c                	sd	a1,0(a0)
    800000b6:	e510                	sd	a2,8(a0)
    800000b8:	e914                	sd	a3,16(a0)
    800000ba:	6d0c                	ld	a1,24(a0)
    800000bc:	7110                	ld	a2,32(a0)
    800000be:	6194                	ld	a3,0(a1)
    800000c0:	96b2                	add	a3,a3,a2
    800000c2:	e194                	sd	a3,0(a1)
    800000c4:	4589                	li	a1,2
    800000c6:	14459073          	csrw	sip,a1
    800000ca:	6914                	ld	a3,16(a0)
    800000cc:	6510                	ld	a2,8(a0)
    800000ce:	610c                	ld	a1,0(a0)
    800000d0:	34051573          	csrrw	a0,mscratch,a0
    800000d4:	30200073          	mret
	...

0000000080001000 <trampoline>:
    80001000:	14051573          	csrrw	a0,sscratch,a0
    80001004:	02153423          	sd	ra,40(a0) # 4028 <.Lline_table_start0+0x49d>
    80001008:	02253823          	sd	sp,48(a0)
    8000100c:	02353c23          	sd	gp,56(a0)
    80001010:	04453023          	sd	tp,64(a0)
    80001014:	04553423          	sd	t0,72(a0)
    80001018:	04653823          	sd	t1,80(a0)
    8000101c:	04753c23          	sd	t2,88(a0)
    80001020:	f120                	sd	s0,96(a0)
    80001022:	f524                	sd	s1,104(a0)
    80001024:	fd2c                	sd	a1,120(a0)
    80001026:	e150                	sd	a2,128(a0)
    80001028:	e554                	sd	a3,136(a0)
    8000102a:	e958                	sd	a4,144(a0)
    8000102c:	ed5c                	sd	a5,152(a0)
    8000102e:	0b053023          	sd	a6,160(a0)
    80001032:	0b153423          	sd	a7,168(a0)
    80001036:	0b253823          	sd	s2,176(a0)
    8000103a:	0b353c23          	sd	s3,184(a0)
    8000103e:	0d453023          	sd	s4,192(a0)
    80001042:	0d553423          	sd	s5,200(a0)
    80001046:	0d653823          	sd	s6,208(a0)
    8000104a:	0d753c23          	sd	s7,216(a0)
    8000104e:	0f853023          	sd	s8,224(a0)
    80001052:	0f953423          	sd	s9,232(a0)
    80001056:	0fa53823          	sd	s10,240(a0)
    8000105a:	0fb53c23          	sd	s11,248(a0)
    8000105e:	11c53023          	sd	t3,256(a0)
    80001062:	11d53423          	sd	t4,264(a0)
    80001066:	11e53823          	sd	t5,272(a0)
    8000106a:	11f53c23          	sd	t6,280(a0)
    8000106e:	140022f3          	csrr	t0,sscratch
    80001072:	06553823          	sd	t0,112(a0)
    80001076:	141022f3          	csrr	t0,sepc
    8000107a:	00553c23          	sd	t0,24(a0)
    8000107e:	00853103          	ld	sp,8(a0)
    80001082:	02053203          	ld	tp,32(a0)
    80001086:	01053283          	ld	t0,16(a0)
    8000108a:	00053303          	ld	t1,0(a0)
    8000108e:	18031073          	csrw	satp,t1
    80001092:	12000073          	sfence.vma
    80001096:	8282                	jr	t0
	...

00000000800010a0 <userret>:
    800010a0:	18059073          	csrw	satp,a1
    800010a4:	12000073          	sfence.vma
    800010a8:	07053283          	ld	t0,112(a0)
    800010ac:	14029073          	csrw	sscratch,t0
    800010b0:	02853083          	ld	ra,40(a0)
    800010b4:	03053103          	ld	sp,48(a0)
    800010b8:	03853183          	ld	gp,56(a0)
    800010bc:	04053203          	ld	tp,64(a0)
    800010c0:	04853283          	ld	t0,72(a0)
    800010c4:	05053303          	ld	t1,80(a0)
    800010c8:	05853383          	ld	t2,88(a0)
    800010cc:	7120                	ld	s0,96(a0)
    800010ce:	7524                	ld	s1,104(a0)
    800010d0:	7d2c                	ld	a1,120(a0)
    800010d2:	6150                	ld	a2,128(a0)
    800010d4:	6554                	ld	a3,136(a0)
    800010d6:	6958                	ld	a4,144(a0)
    800010d8:	6d5c                	ld	a5,152(a0)
    800010da:	0a053803          	ld	a6,160(a0)
    800010de:	0a853883          	ld	a7,168(a0)
    800010e2:	0b053903          	ld	s2,176(a0)
    800010e6:	0b853983          	ld	s3,184(a0)
    800010ea:	0c053a03          	ld	s4,192(a0)
    800010ee:	0c853a83          	ld	s5,200(a0)
    800010f2:	0d053b03          	ld	s6,208(a0)
    800010f6:	0d853b83          	ld	s7,216(a0)
    800010fa:	0e053c03          	ld	s8,224(a0)
    800010fe:	0e853c83          	ld	s9,232(a0)
    80001102:	0f053d03          	ld	s10,240(a0)
    80001106:	0f853d83          	ld	s11,248(a0)
    8000110a:	10053e03          	ld	t3,256(a0)
    8000110e:	10853e83          	ld	t4,264(a0)
    80001112:	11053f03          	ld	t5,272(a0)
    80001116:	11853f83          	ld	t6,280(a0)
    8000111a:	14051573          	csrrw	a0,sscratch,a0
    8000111e:	10200073          	sret

0000000080001122 <switch>:
    80001122:	00153023          	sd	ra,0(a0)
    80001126:	00253423          	sd	sp,8(a0)
    8000112a:	e900                	sd	s0,16(a0)
    8000112c:	ed04                	sd	s1,24(a0)
    8000112e:	03253023          	sd	s2,32(a0)
    80001132:	03353423          	sd	s3,40(a0)
    80001136:	03453823          	sd	s4,48(a0)
    8000113a:	03553c23          	sd	s5,56(a0)
    8000113e:	05653023          	sd	s6,64(a0)
    80001142:	05753423          	sd	s7,72(a0)
    80001146:	05853823          	sd	s8,80(a0)
    8000114a:	05953c23          	sd	s9,88(a0)
    8000114e:	07a53023          	sd	s10,96(a0)
    80001152:	07b53423          	sd	s11,104(a0)
    80001156:	0005b083          	ld	ra,0(a1)
    8000115a:	0085b103          	ld	sp,8(a1)
    8000115e:	6980                	ld	s0,16(a1)
    80001160:	6d84                	ld	s1,24(a1)
    80001162:	0205b903          	ld	s2,32(a1)
    80001166:	0285b983          	ld	s3,40(a1)
    8000116a:	0305ba03          	ld	s4,48(a1)
    8000116e:	0385ba83          	ld	s5,56(a1)
    80001172:	0405bb03          	ld	s6,64(a1)
    80001176:	0485bb83          	ld	s7,72(a1)
    8000117a:	0505bc03          	ld	s8,80(a1)
    8000117e:	0585bc83          	ld	s9,88(a1)
    80001182:	0605bd03          	ld	s10,96(a1)
    80001186:	0685bd83          	ld	s11,104(a1)
    8000118a:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E:

000000008000118c <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E>:
        }
    }

    /// Init the bcache.
    /// Should only be called once when the kernel inits itself.
    pub fn binit(&self) {
    8000118c:	7125                	addi	sp,sp,-416
    8000118e:	ef06                	sd	ra,408(sp)
    80001190:	faaa                	sd	a0,368(sp)
        let mut ctrl = self.ctrl.acquire();
    80001192:	00001097          	auipc	ra,0x1
    80001196:	3ae080e7          	jalr	942(ra) # 80002540 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE>
    8000119a:	ee2a                	sd	a0,280(sp)
    8000119c:	a009                	j	8000119e <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x12>
    8000119e:	0a28                	addi	a0,sp,280
        let len = ctrl.inner.len();
    800011a0:	00002097          	auipc	ra,0x2
    800011a4:	77c080e7          	jalr	1916(ra) # 8000391c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h987bdf5612280038E>
    800011a8:	ea2a                	sd	a0,272(sp)
    800011aa:	a009                	j	800011ac <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x20>
    800011ac:	45f9                	li	a1,30
    800011ae:	6552                	ld	a0,272(sp)
    800011b0:	00016097          	auipc	ra,0x16
    800011b4:	8ea080e7          	jalr	-1814(ra) # 80016a9a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2724de47f0e590ceE>
    800011b8:	85aa                	mv	a1,a0
    800011ba:	feaa                	sd	a0,376(sp)
    800011bc:	e62e                	sd	a1,264(sp)
    800011be:	a009                	j	800011c0 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x34>
    800011c0:	0a28                	addi	a0,sp,280

        // init the head and tail of the lru list
        ctrl.head = &mut ctrl.inner[0];
    800011c2:	00003097          	auipc	ra,0x3
    800011c6:	818080e7          	jalr	-2024(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    800011ca:	e22a                	sd	a0,256(sp)
    800011cc:	a009                	j	800011ce <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x42>
    800011ce:	6512                	ld	a0,256(sp)
    800011d0:	0a2c                	addi	a1,sp,280
    800011d2:	fdaa                	sd	a0,248(sp)
    800011d4:	852e                	mv	a0,a1
    800011d6:	00003097          	auipc	ra,0x3
    800011da:	804080e7          	jalr	-2044(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    800011de:	f9aa                	sd	a0,240(sp)
    800011e0:	a009                	j	800011e2 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x56>
    800011e2:	756e                	ld	a0,248(sp)
    800011e4:	75ce                	ld	a1,240(sp)
    800011e6:	4aa5b823          	sd	a0,1200(a1)
    800011ea:	0a28                	addi	a0,sp,280
        ctrl.tail = &mut ctrl.inner[len-1];
    800011ec:	00002097          	auipc	ra,0x2
    800011f0:	7ee080e7          	jalr	2030(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    800011f4:	f5aa                	sd	a0,232(sp)
    800011f6:	a009                	j	800011f8 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x6c>
    800011f8:	6532                	ld	a0,264(sp)
    800011fa:	fff50593          	addi	a1,a0,-1
    800011fe:	f1ae                	sd	a1,224(sp)
    80001200:	28b56763          	bltu	a0,a1,8000148e <.LBB0_62>
    80001204:	a009                	j	80001206 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x7a>
    80001206:	4575                	li	a0,29
    80001208:	758e                	ld	a1,224(sp)
    8000120a:	2ab56163          	bltu	a0,a1,800014ac <.LBB0_64>
    8000120e:	a009                	j	80001210 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x84>
    80001210:	02800513          	li	a0,40
    80001214:	758e                	ld	a1,224(sp)
    80001216:	02a58533          	mul	a0,a1,a0
    8000121a:	762e                	ld	a2,232(sp)
    8000121c:	9532                	add	a0,a0,a2
    8000121e:	0a34                	addi	a3,sp,280
    80001220:	edaa                	sd	a0,216(sp)
    80001222:	8536                	mv	a0,a3
    80001224:	00002097          	auipc	ra,0x2
    80001228:	7b6080e7          	jalr	1974(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    8000122c:	e9aa                	sd	a0,208(sp)
    8000122e:	a009                	j	80001230 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0xa4>
    80001230:	656e                	ld	a0,216(sp)
    80001232:	65ce                	ld	a1,208(sp)
    80001234:	4aa5bc23          	sd	a0,1208(a1)

        // init prev and next field
        ctrl.inner[0].prev = ptr::null_mut();
    80001238:	a009                	j	8000123a <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0xae>
    8000123a:	0a28                	addi	a0,sp,280
    8000123c:	00002097          	auipc	ra,0x2
    80001240:	79e080e7          	jalr	1950(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    80001244:	e5aa                	sd	a0,200(sp)
    80001246:	a009                	j	80001248 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0xbc>
    80001248:	4501                	li	a0,0
    8000124a:	65ae                	ld	a1,200(sp)
    8000124c:	e188                	sd	a0,0(a1)
    8000124e:	0a28                	addi	a0,sp,280
        ctrl.inner[0].next = &mut ctrl.inner[1];
    80001250:	00002097          	auipc	ra,0x2
    80001254:	78a080e7          	jalr	1930(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    80001258:	e1aa                	sd	a0,192(sp)
    8000125a:	a009                	j	8000125c <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0xd0>
    8000125c:	650e                	ld	a0,192(sp)
    8000125e:	02850593          	addi	a1,a0,40
    80001262:	0a28                	addi	a0,sp,280
    80001264:	fd2e                	sd	a1,184(sp)
    80001266:	00002097          	auipc	ra,0x2
    8000126a:	774080e7          	jalr	1908(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    8000126e:	f92a                	sd	a0,176(sp)
    80001270:	a009                	j	80001272 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0xe6>
    80001272:	756a                	ld	a0,184(sp)
    80001274:	75ca                	ld	a1,176(sp)
    80001276:	e588                	sd	a0,8(a1)
    80001278:	0a28                	addi	a0,sp,280
        ctrl.inner[len-1].prev = &mut ctrl.inner[len-2];
    8000127a:	00002097          	auipc	ra,0x2
    8000127e:	760080e7          	jalr	1888(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    80001282:	f52a                	sd	a0,168(sp)
    80001284:	a009                	j	80001286 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0xfa>
    80001286:	6532                	ld	a0,264(sp)
    80001288:	ffe50593          	addi	a1,a0,-2
    8000128c:	f12e                	sd	a1,160(sp)
    8000128e:	22b56a63          	bltu	a0,a1,800014c2 <.LBB0_65>
    80001292:	a009                	j	80001294 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x108>
    80001294:	4575                	li	a0,29
    80001296:	758a                	ld	a1,160(sp)
    80001298:	24b56463          	bltu	a0,a1,800014e0 <.LBB0_67>
    8000129c:	a009                	j	8000129e <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x112>
    8000129e:	02800513          	li	a0,40
    800012a2:	758a                	ld	a1,160(sp)
    800012a4:	02a58533          	mul	a0,a1,a0
    800012a8:	762a                	ld	a2,168(sp)
    800012aa:	9532                	add	a0,a0,a2
    800012ac:	0a34                	addi	a3,sp,280
    800012ae:	ed2a                	sd	a0,152(sp)
    800012b0:	8536                	mv	a0,a3
    800012b2:	00002097          	auipc	ra,0x2
    800012b6:	728080e7          	jalr	1832(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    800012ba:	e92a                	sd	a0,144(sp)
    800012bc:	a009                	j	800012be <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x132>
    800012be:	6532                	ld	a0,264(sp)
    800012c0:	fff50593          	addi	a1,a0,-1
    800012c4:	e52e                	sd	a1,136(sp)
    800012c6:	22b56863          	bltu	a0,a1,800014f6 <.LBB0_68>
    800012ca:	a009                	j	800012cc <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x140>
    800012cc:	4575                	li	a0,29
    800012ce:	65aa                	ld	a1,136(sp)
    800012d0:	24b56263          	bltu	a0,a1,80001514 <.LBB0_70>
    800012d4:	a009                	j	800012d6 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x14a>
    800012d6:	02800513          	li	a0,40
    800012da:	65aa                	ld	a1,136(sp)
    800012dc:	02a58533          	mul	a0,a1,a0
    800012e0:	664a                	ld	a2,144(sp)
    800012e2:	9532                	add	a0,a0,a2
    800012e4:	66ea                	ld	a3,152(sp)
    800012e6:	e114                	sd	a3,0(a0)
        ctrl.inner[len-1].next = ptr::null_mut();
    800012e8:	a009                	j	800012ea <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x15e>
    800012ea:	0a28                	addi	a0,sp,280
    800012ec:	00002097          	auipc	ra,0x2
    800012f0:	6ee080e7          	jalr	1774(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    800012f4:	e12a                	sd	a0,128(sp)
    800012f6:	a009                	j	800012f8 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x16c>
    800012f8:	6532                	ld	a0,264(sp)
    800012fa:	fff50593          	addi	a1,a0,-1
    800012fe:	fcae                	sd	a1,120(sp)
    80001300:	22b56563          	bltu	a0,a1,8000152a <.LBB0_71>
    80001304:	a009                	j	80001306 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x17a>
    80001306:	4575                	li	a0,29
    80001308:	75e6                	ld	a1,120(sp)
    8000130a:	22b56f63          	bltu	a0,a1,80001548 <.LBB0_73>
    8000130e:	a009                	j	80001310 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x184>
    80001310:	02800513          	li	a0,40
    80001314:	75e6                	ld	a1,120(sp)
    80001316:	02a58533          	mul	a0,a1,a0
    8000131a:	660a                	ld	a2,128(sp)
    8000131c:	9532                	add	a0,a0,a2
    8000131e:	4681                	li	a3,0
    80001320:	e514                	sd	a3,8(a0)
        for i in 1..(len-1) {
    80001322:	6532                	ld	a0,264(sp)
    80001324:	fff50693          	addi	a3,a0,-1
    80001328:	f8b6                	sd	a3,112(sp)
    8000132a:	22d56a63          	bltu	a0,a3,8000155e <.LBB0_74>
    8000132e:	a009                	j	80001330 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1a4>
    80001330:	4505                	li	a0,1
    80001332:	f22a                	sd	a0,288(sp)
    80001334:	75c6                	ld	a1,112(sp)
    80001336:	f62e                	sd	a1,296(sp)
    80001338:	0001e097          	auipc	ra,0x1e
    8000133c:	772080e7          	jalr	1906(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    80001340:	f4aa                	sd	a0,104(sp)
    80001342:	f0ae                	sd	a1,96(sp)
    80001344:	a009                	j	80001346 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1ba>
    80001346:	7526                	ld	a0,104(sp)
    80001348:	fa2a                	sd	a0,304(sp)
    8000134a:	7586                	ld	a1,96(sp)
    8000134c:	fe2e                	sd	a1,312(sp)
    8000134e:	a009                	j	80001350 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1c4>
    80001350:	1a08                	addi	a0,sp,304
    80001352:	0001e097          	auipc	ra,0x1e
    80001356:	6ea080e7          	jalr	1770(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000135a:	e2aa                	sd	a0,320(sp)
    8000135c:	e6ae                	sd	a1,328(sp)
    8000135e:	a009                	j	80001360 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1d4>
    80001360:	6516                	ld	a0,320(sp)
    80001362:	4581                	li	a1,0
    80001364:	00b50463          	beq	a0,a1,8000136c <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1e0>
    80001368:	a009                	j	8000136a <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1de>
    8000136a:	a809                	j	8000137c <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1f0>
    8000136c:	0a28                	addi	a0,sp,280
            ctrl.inner[i].prev = &mut ctrl.inner[i-1];
            ctrl.inner[i].next = &mut ctrl.inner[i+1];
        }
        
        // init index
        ctrl.inner.iter_mut()
    8000136e:	00002097          	auipc	ra,0x2
    80001372:	66c080e7          	jalr	1644(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    80001376:	ecaa                	sd	a0,88(sp)
    80001378:	a8d9                	j	8000144e <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x2c2>
        for i in 1..(len-1) {
    8000137a:	0000                	unimp
    8000137c:	6536                	ld	a0,328(sp)
    8000137e:	e32a                	sd	a0,384(sp)
    80001380:	e72a                	sd	a0,392(sp)
    80001382:	eb2a                	sd	a0,400(sp)
    80001384:	0a2c                	addi	a1,sp,280
            ctrl.inner[i].prev = &mut ctrl.inner[i-1];
    80001386:	e8aa                	sd	a0,80(sp)
    80001388:	852e                	mv	a0,a1
    8000138a:	00002097          	auipc	ra,0x2
    8000138e:	650080e7          	jalr	1616(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    80001392:	e4aa                	sd	a0,72(sp)
    80001394:	a009                	j	80001396 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x20a>
    80001396:	6546                	ld	a0,80(sp)
    80001398:	fff50593          	addi	a1,a0,-1
    8000139c:	e0ae                	sd	a1,64(sp)
    8000139e:	1cb56f63          	bltu	a0,a1,8000157c <.LBB0_76>
    800013a2:	a009                	j	800013a4 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x218>
    800013a4:	4575                	li	a0,29
    800013a6:	6586                	ld	a1,64(sp)
    800013a8:	1eb56963          	bltu	a0,a1,8000159a <.LBB0_78>
    800013ac:	a009                	j	800013ae <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x222>
    800013ae:	02800513          	li	a0,40
    800013b2:	6586                	ld	a1,64(sp)
    800013b4:	02a58533          	mul	a0,a1,a0
    800013b8:	6626                	ld	a2,72(sp)
    800013ba:	9532                	add	a0,a0,a2
    800013bc:	0a34                	addi	a3,sp,280
    800013be:	fc2a                	sd	a0,56(sp)
    800013c0:	8536                	mv	a0,a3
    800013c2:	00002097          	auipc	ra,0x2
    800013c6:	618080e7          	jalr	1560(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    800013ca:	f82a                	sd	a0,48(sp)
    800013cc:	a009                	j	800013ce <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x242>
    800013ce:	4575                	li	a0,29
    800013d0:	65c6                	ld	a1,80(sp)
    800013d2:	1cb56f63          	bltu	a0,a1,800015b0 <.LBB0_79>
    800013d6:	a009                	j	800013d8 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x24c>
    800013d8:	02800513          	li	a0,40
    800013dc:	65c6                	ld	a1,80(sp)
    800013de:	02a58533          	mul	a0,a1,a0
    800013e2:	7642                	ld	a2,48(sp)
    800013e4:	9532                	add	a0,a0,a2
    800013e6:	76e2                	ld	a3,56(sp)
    800013e8:	e114                	sd	a3,0(a0)
    800013ea:	0a28                	addi	a0,sp,280
            ctrl.inner[i].next = &mut ctrl.inner[i+1];
    800013ec:	00002097          	auipc	ra,0x2
    800013f0:	5ee080e7          	jalr	1518(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    800013f4:	f42a                	sd	a0,40(sp)
    800013f6:	a009                	j	800013f8 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x26c>
    800013f8:	6546                	ld	a0,80(sp)
    800013fa:	00150593          	addi	a1,a0,1
    800013fe:	f02e                	sd	a1,32(sp)
    80001400:	1ca5e363          	bltu	a1,a0,800015c6 <.LBB0_80>
    80001404:	a009                	j	80001406 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x27a>
    80001406:	4575                	li	a0,29
    80001408:	7582                	ld	a1,32(sp)
    8000140a:	1cb56c63          	bltu	a0,a1,800015e2 <.LBB0_82>
    8000140e:	a009                	j	80001410 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x284>
    80001410:	02800513          	li	a0,40
    80001414:	7582                	ld	a1,32(sp)
    80001416:	02a58533          	mul	a0,a1,a0
    8000141a:	7622                	ld	a2,40(sp)
    8000141c:	9532                	add	a0,a0,a2
    8000141e:	0a34                	addi	a3,sp,280
    80001420:	ec2a                	sd	a0,24(sp)
    80001422:	8536                	mv	a0,a3
    80001424:	00002097          	auipc	ra,0x2
    80001428:	5b6080e7          	jalr	1462(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    8000142c:	e82a                	sd	a0,16(sp)
    8000142e:	a009                	j	80001430 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x2a4>
    80001430:	4575                	li	a0,29
    80001432:	65c6                	ld	a1,80(sp)
    80001434:	1cb56263          	bltu	a0,a1,800015f8 <.LBB0_83>
    80001438:	a009                	j	8000143a <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x2ae>
    8000143a:	02800513          	li	a0,40
    8000143e:	65c6                	ld	a1,80(sp)
    80001440:	02a58533          	mul	a0,a1,a0
    80001444:	6642                	ld	a2,16(sp)
    80001446:	9532                	add	a0,a0,a2
    80001448:	66e2                	ld	a3,24(sp)
    8000144a:	e514                	sd	a3,8(a0)
        for i in 1..(len-1) {
    8000144c:	b711                	j	80001350 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x1c4>
    8000144e:	45f9                	li	a1,30
        ctrl.inner.iter_mut()
    80001450:	6566                	ld	a0,88(sp)
    80001452:	00015097          	auipc	ra,0x15
    80001456:	658080e7          	jalr	1624(ra) # 80016aaa <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hcfa1e835f1d2856bE>
    8000145a:	e42a                	sd	a0,8(sp)
    8000145c:	e02e                	sd	a1,0(sp)
    8000145e:	a009                	j	80001460 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x2d4>
    80001460:	0a88                	addi	a0,sp,336
    80001462:	65a2                	ld	a1,8(sp)
    80001464:	6602                	ld	a2,0(sp)
    80001466:	00012097          	auipc	ra,0x12
    8000146a:	936080e7          	jalr	-1738(ra) # 80012d9c <_ZN4core4iter6traits8iterator8Iterator9enumerate17hfb8292d51cdefbebE>
    8000146e:	a009                	j	80001470 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x2e4>
    80001470:	0a88                	addi	a0,sp,336
    80001472:	00015097          	auipc	ra,0x15
    80001476:	cd2080e7          	jalr	-814(ra) # 80016144 <_ZN4core4iter6traits8iterator8Iterator8for_each17ha2fb126c57faa0d0E>
    8000147a:	a009                	j	8000147c <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x2f0>
    8000147c:	0a28                	addi	a0,sp,280
            .enumerate()
            .for_each(|(i, b)| b.index = i);
    }
    8000147e:	00005097          	auipc	ra,0x5
    80001482:	53e080e7          	jalr	1342(ra) # 800069bc <_ZN4core3ptr89drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..bio..BufLru$GT$$GT$17heb8f06842278fadcE>
    80001486:	a009                	j	80001488 <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E+0x2fc>
    80001488:	60fa                	ld	ra,408(sp)
    8000148a:	611d                	addi	sp,sp,416
    8000148c:	8082                	ret

000000008000148e <.LBB0_62>:
        ctrl.tail = &mut ctrl.inner[len-1];
    8000148e:	00022517          	auipc	a0,0x22
    80001492:	48250513          	addi	a0,a0,1154 # 80023910 <str.0>

0000000080001496 <.LBB0_63>:
    80001496:	00022617          	auipc	a2,0x22
    8000149a:	46260613          	addi	a2,a2,1122 # 800238f8 <.L__unnamed_1>
    8000149e:	02100593          	li	a1,33
    800014a2:	00020097          	auipc	ra,0x20
    800014a6:	828080e7          	jalr	-2008(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800014ac <.LBB0_64>:
    800014ac:	00022617          	auipc	a2,0x22
    800014b0:	48c60613          	addi	a2,a2,1164 # 80023938 <.L__unnamed_2>
    800014b4:	45f9                	li	a1,30
    800014b6:	750e                	ld	a0,224(sp)
    800014b8:	00020097          	auipc	ra,0x20
    800014bc:	83e080e7          	jalr	-1986(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800014c2 <.LBB0_65>:
        ctrl.inner[len-1].prev = &mut ctrl.inner[len-2];
    800014c2:	00022517          	auipc	a0,0x22
    800014c6:	44e50513          	addi	a0,a0,1102 # 80023910 <str.0>

00000000800014ca <.LBB0_66>:
    800014ca:	00022617          	auipc	a2,0x22
    800014ce:	48660613          	addi	a2,a2,1158 # 80023950 <.L__unnamed_3>
    800014d2:	02100593          	li	a1,33
    800014d6:	0001f097          	auipc	ra,0x1f
    800014da:	7f4080e7          	jalr	2036(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800014e0 <.LBB0_67>:
    800014e0:	00022617          	auipc	a2,0x22
    800014e4:	48860613          	addi	a2,a2,1160 # 80023968 <.L__unnamed_4>
    800014e8:	45f9                	li	a1,30
    800014ea:	750a                	ld	a0,160(sp)
    800014ec:	00020097          	auipc	ra,0x20
    800014f0:	80a080e7          	jalr	-2038(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800014f6 <.LBB0_68>:
    800014f6:	00022517          	auipc	a0,0x22
    800014fa:	41a50513          	addi	a0,a0,1050 # 80023910 <str.0>

00000000800014fe <.LBB0_69>:
    800014fe:	00022617          	auipc	a2,0x22
    80001502:	48260613          	addi	a2,a2,1154 # 80023980 <.L__unnamed_5>
    80001506:	02100593          	li	a1,33
    8000150a:	0001f097          	auipc	ra,0x1f
    8000150e:	7c0080e7          	jalr	1984(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080001514 <.LBB0_70>:
    80001514:	00022617          	auipc	a2,0x22
    80001518:	48460613          	addi	a2,a2,1156 # 80023998 <.L__unnamed_6>
    8000151c:	45f9                	li	a1,30
    8000151e:	652a                	ld	a0,136(sp)
    80001520:	0001f097          	auipc	ra,0x1f
    80001524:	7d6080e7          	jalr	2006(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000152a <.LBB0_71>:
        ctrl.inner[len-1].next = ptr::null_mut();
    8000152a:	00022517          	auipc	a0,0x22
    8000152e:	3e650513          	addi	a0,a0,998 # 80023910 <str.0>

0000000080001532 <.LBB0_72>:
    80001532:	00022617          	auipc	a2,0x22
    80001536:	47e60613          	addi	a2,a2,1150 # 800239b0 <.L__unnamed_7>
    8000153a:	02100593          	li	a1,33
    8000153e:	0001f097          	auipc	ra,0x1f
    80001542:	78c080e7          	jalr	1932(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080001548 <.LBB0_73>:
    80001548:	00022617          	auipc	a2,0x22
    8000154c:	48060613          	addi	a2,a2,1152 # 800239c8 <.L__unnamed_8>
    80001550:	45f9                	li	a1,30
    80001552:	7566                	ld	a0,120(sp)
    80001554:	0001f097          	auipc	ra,0x1f
    80001558:	7a2080e7          	jalr	1954(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000155e <.LBB0_74>:
        for i in 1..(len-1) {
    8000155e:	00022517          	auipc	a0,0x22
    80001562:	3b250513          	addi	a0,a0,946 # 80023910 <str.0>

0000000080001566 <.LBB0_75>:
    80001566:	00022617          	auipc	a2,0x22
    8000156a:	47a60613          	addi	a2,a2,1146 # 800239e0 <.L__unnamed_9>
    8000156e:	02100593          	li	a1,33
    80001572:	0001f097          	auipc	ra,0x1f
    80001576:	758080e7          	jalr	1880(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000157c <.LBB0_76>:
            ctrl.inner[i].prev = &mut ctrl.inner[i-1];
    8000157c:	00022517          	auipc	a0,0x22
    80001580:	39450513          	addi	a0,a0,916 # 80023910 <str.0>

0000000080001584 <.LBB0_77>:
    80001584:	00022617          	auipc	a2,0x22
    80001588:	47460613          	addi	a2,a2,1140 # 800239f8 <.L__unnamed_10>
    8000158c:	02100593          	li	a1,33
    80001590:	0001f097          	auipc	ra,0x1f
    80001594:	73a080e7          	jalr	1850(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000159a <.LBB0_78>:
    8000159a:	00022617          	auipc	a2,0x22
    8000159e:	47660613          	addi	a2,a2,1142 # 80023a10 <.L__unnamed_11>
    800015a2:	45f9                	li	a1,30
    800015a4:	6506                	ld	a0,64(sp)
    800015a6:	0001f097          	auipc	ra,0x1f
    800015aa:	750080e7          	jalr	1872(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800015b0 <.LBB0_79>:
    800015b0:	00022617          	auipc	a2,0x22
    800015b4:	47860613          	addi	a2,a2,1144 # 80023a28 <.L__unnamed_12>
    800015b8:	45f9                	li	a1,30
    800015ba:	6546                	ld	a0,80(sp)
    800015bc:	0001f097          	auipc	ra,0x1f
    800015c0:	73a080e7          	jalr	1850(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800015c6 <.LBB0_80>:
            ctrl.inner[i].next = &mut ctrl.inner[i+1];
    800015c6:	00022517          	auipc	a0,0x22
    800015ca:	49a50513          	addi	a0,a0,1178 # 80023a60 <str.1>

00000000800015ce <.LBB0_81>:
    800015ce:	00022617          	auipc	a2,0x22
    800015d2:	47260613          	addi	a2,a2,1138 # 80023a40 <.L__unnamed_13>
    800015d6:	45f1                	li	a1,28
    800015d8:	0001f097          	auipc	ra,0x1f
    800015dc:	6f2080e7          	jalr	1778(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800015e2 <.LBB0_82>:
    800015e2:	00022617          	auipc	a2,0x22
    800015e6:	49e60613          	addi	a2,a2,1182 # 80023a80 <.L__unnamed_14>
    800015ea:	45f9                	li	a1,30
    800015ec:	7502                	ld	a0,32(sp)
    800015ee:	0001f097          	auipc	ra,0x1f
    800015f2:	708080e7          	jalr	1800(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800015f8 <.LBB0_83>:
    800015f8:	00022617          	auipc	a2,0x22
    800015fc:	4a060613          	addi	a2,a2,1184 # 80023a98 <.L__unnamed_15>
    80001600:	45f9                	li	a1,30
    80001602:	6546                	ld	a0,80(sp)
    80001604:	0001f097          	auipc	ra,0x1f
    80001608:	6f2080e7          	jalr	1778(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E:

000000008000160e <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E>:

    fn bget(&self, dev: u32, blockno: u32) -> Buf<'_> {
    8000160e:	716d                	addi	sp,sp,-272
    80001610:	e606                	sd	ra,264(sp)
    80001612:	8736                	mv	a4,a3
    80001614:	87b2                	mv	a5,a2
    80001616:	edae                	sd	a1,216(sp)
    80001618:	d1b2                	sw	a2,224(sp)
    8000161a:	d3b6                	sw	a3,228(sp)
        let mut ctrl = self.ctrl.acquire();
    8000161c:	f8aa                	sd	a0,112(sp)
    8000161e:	852e                	mv	a0,a1
    80001620:	f4ae                	sd	a1,104(sp)
    80001622:	f0ba                	sd	a4,96(sp)
    80001624:	ecbe                	sd	a5,88(sp)
    80001626:	00001097          	auipc	ra,0x1
    8000162a:	f1a080e7          	jalr	-230(ra) # 80002540 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE>
    8000162e:	fcaa                	sd	a0,120(sp)
    80001630:	a009                	j	80001632 <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x24>
    80001632:	18a8                	addi	a0,sp,120

        // find cached block
        match ctrl.find_cached(dev, blockno) {
    80001634:	00002097          	auipc	ra,0x2
    80001638:	3a6080e7          	jalr	934(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    8000163c:	e8aa                	sd	a0,80(sp)
    8000163e:	a009                	j	80001640 <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x32>
    80001640:	0108                	addi	a0,sp,128
    80001642:	65c6                	ld	a1,80(sp)
    80001644:	6666                	ld	a2,88(sp)
    80001646:	7686                	ld	a3,96(sp)
    80001648:	00000097          	auipc	ra,0x0
    8000164c:	444080e7          	jalr	1092(ra) # 80001a8c <_ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E>
    80001650:	a009                	j	80001652 <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x44>
            Some((index, rc_ptr)) => {
    80001652:	650a                	ld	a0,128(sp)
    80001654:	4581                	li	a1,0
    80001656:	00b50463          	beq	a0,a1,8000165e <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x50>
    8000165a:	a009                	j	8000165c <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x4e>
    8000165c:	a809                	j	8000166e <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x60>
    8000165e:	18a8                	addi	a0,sp,120
                }
            }
            None => {
                // not cached
                // recycle the least recently used (LRU) unused buffer
                match ctrl.recycle(dev, blockno) {
    80001660:	00002097          	auipc	ra,0x2
    80001664:	37a080e7          	jalr	890(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    80001668:	e4aa                	sd	a0,72(sp)
    8000166a:	a88d                	j	800016dc <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0xce>
        match ctrl.find_cached(dev, blockno) {
    8000166c:	0000                	unimp
            Some((index, rc_ptr)) => {
    8000166e:	652a                	ld	a0,136(sp)
    80001670:	f5aa                	sd	a0,232(sp)
    80001672:	65ca                	ld	a1,144(sp)
    80001674:	f9ae                	sd	a1,240(sp)
                drop(ctrl);
    80001676:	7666                	ld	a2,120(sp)
    80001678:	e0aa                	sd	a0,64(sp)
    8000167a:	8532                	mv	a0,a2
    8000167c:	fc2e                	sd	a1,56(sp)
    8000167e:	0000c097          	auipc	ra,0xc
    80001682:	38c080e7          	jalr	908(ra) # 8000da0a <_ZN4core3mem4drop17hc9b81b24632c5a18E>
    80001686:	a009                	j	80001688 <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x7a>
    80001688:	4575                	li	a0,29
                    data: Some(self.bufs[index].data.lock())
    8000168a:	6586                	ld	a1,64(sp)
    8000168c:	12b56863          	bltu	a0,a1,800017bc <.LBB1_28>
    80001690:	a009                	j	80001692 <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0x84>
    80001692:	44000513          	li	a0,1088
    80001696:	6586                	ld	a1,64(sp)
    80001698:	02a58533          	mul	a0,a1,a0
    8000169c:	7626                	ld	a2,104(sp)
    8000169e:	9532                	add	a0,a0,a2
    800016a0:	4e050513          	addi	a0,a0,1248
    800016a4:	00006097          	auipc	ra,0x6
    800016a8:	bf4080e7          	jalr	-1036(ra) # 80007298 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E>
    800016ac:	f82a                	sd	a0,48(sp)
    800016ae:	f42e                	sd	a1,40(sp)
    800016b0:	a009                	j	800016b2 <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0xa4>
    800016b2:	7542                	ld	a0,48(sp)
    800016b4:	ed2a                	sd	a0,152(sp)
    800016b6:	75a2                	ld	a1,40(sp)
    800016b8:	f12e                	sd	a1,160(sp)
                Buf {
    800016ba:	6606                	ld	a2,64(sp)
    800016bc:	76c6                	ld	a3,112(sp)
    800016be:	e290                	sd	a2,0(a3)
    800016c0:	6766                	ld	a4,88(sp)
    800016c2:	d298                	sw	a4,32(a3)
    800016c4:	7786                	ld	a5,96(sp)
    800016c6:	d2dc                	sw	a5,36(a3)
    800016c8:	7862                	ld	a6,56(sp)
    800016ca:	0106b423          	sd	a6,8(a3)
    800016ce:	68ea                	ld	a7,152(sp)
    800016d0:	728a                	ld	t0,160(sp)
    800016d2:	0116b823          	sd	a7,16(a3)
    800016d6:	0056bc23          	sd	t0,24(a3)
                    }
                    None => panic!("no usable buffer")
                }
            }
        }
    }
    800016da:	a8f1                	j	800017b6 <.LBB1_27+0xb4>
    800016dc:	1128                	addi	a0,sp,168
                match ctrl.recycle(dev, blockno) {
    800016de:	65a6                	ld	a1,72(sp)
    800016e0:	6666                	ld	a2,88(sp)
    800016e2:	7686                	ld	a3,96(sp)
    800016e4:	00000097          	auipc	ra,0x0
    800016e8:	49e080e7          	jalr	1182(ra) # 80001b82 <_ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE>
    800016ec:	a009                	j	800016ee <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0xe0>
                    Some((index, rc_ptr)) => {
    800016ee:	752a                	ld	a0,168(sp)
    800016f0:	4581                	li	a1,0
    800016f2:	00b50463          	beq	a0,a1,800016fa <.LBB1_26>
    800016f6:	a009                	j	800016f8 <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E+0xea>
    800016f8:	a005                	j	80001718 <.LBB1_27+0x16>

00000000800016fa <.LBB1_26>:
                    None => panic!("no usable buffer")
    800016fa:	00022517          	auipc	a0,0x22
    800016fe:	46e50513          	addi	a0,a0,1134 # 80023b68 <.L__unnamed_20+0x88>

0000000080001702 <.LBB1_27>:
    80001702:	00022617          	auipc	a2,0x22
    80001706:	49660613          	addi	a2,a2,1174 # 80023b98 <.L__unnamed_17>
    8000170a:	45c1                	li	a1,16
    8000170c:	0001f097          	auipc	ra,0x1f
    80001710:	5be080e7          	jalr	1470(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80001714:	0000                	unimp
                match ctrl.recycle(dev, blockno) {
    80001716:	0000                	unimp
                    Some((index, rc_ptr)) => {
    80001718:	754a                	ld	a0,176(sp)
    8000171a:	fdaa                	sd	a0,248(sp)
    8000171c:	75ea                	ld	a1,184(sp)
    8000171e:	e22e                	sd	a1,256(sp)
    80001720:	4675                	li	a2,29
                        self.bufs[index].valid.store(false, Ordering::Relaxed);
    80001722:	f02a                	sd	a0,32(sp)
    80001724:	ec2e                	sd	a1,24(sp)
    80001726:	0aa66663          	bltu	a2,a0,800017d2 <.LBB1_29>
    8000172a:	a009                	j	8000172c <.LBB1_27+0x2a>
    8000172c:	44000513          	li	a0,1088
    80001730:	7582                	ld	a1,32(sp)
    80001732:	02a58533          	mul	a0,a1,a0
    80001736:	7626                	ld	a2,104(sp)
    80001738:	9532                	add	a0,a0,a2
    8000173a:	48c50513          	addi	a0,a0,1164
    8000173e:	48c50513          	addi	a0,a0,1164
    80001742:	4681                	li	a3,0
    80001744:	0cd103a3          	sb	a3,199(sp)
    80001748:	85b6                	mv	a1,a3
    8000174a:	8636                	mv	a2,a3
    8000174c:	0000c097          	auipc	ra,0xc
    80001750:	86e080e7          	jalr	-1938(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80001754:	a009                	j	80001756 <.LBB1_27+0x54>
                        drop(ctrl);
    80001756:	7566                	ld	a0,120(sp)
    80001758:	0000c097          	auipc	ra,0xc
    8000175c:	2b2080e7          	jalr	690(ra) # 8000da0a <_ZN4core3mem4drop17hc9b81b24632c5a18E>
    80001760:	a009                	j	80001762 <.LBB1_27+0x60>
    80001762:	4575                	li	a0,29
                            data: Some(self.bufs[index].data.lock()),
    80001764:	7582                	ld	a1,32(sp)
    80001766:	08b56163          	bltu	a0,a1,800017e8 <.LBB1_30>
    8000176a:	a009                	j	8000176c <.LBB1_27+0x6a>
    8000176c:	44000513          	li	a0,1088
    80001770:	7582                	ld	a1,32(sp)
    80001772:	02a58533          	mul	a0,a1,a0
    80001776:	7626                	ld	a2,104(sp)
    80001778:	9532                	add	a0,a0,a2
    8000177a:	4e050513          	addi	a0,a0,1248
    8000177e:	00006097          	auipc	ra,0x6
    80001782:	b1a080e7          	jalr	-1254(ra) # 80007298 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E>
    80001786:	e82a                	sd	a0,16(sp)
    80001788:	e42e                	sd	a1,8(sp)
    8000178a:	a009                	j	8000178c <.LBB1_27+0x8a>
    8000178c:	6542                	ld	a0,16(sp)
    8000178e:	e5aa                	sd	a0,200(sp)
    80001790:	65a2                	ld	a1,8(sp)
    80001792:	e9ae                	sd	a1,208(sp)
                        return Buf {
    80001794:	7602                	ld	a2,32(sp)
    80001796:	76c6                	ld	a3,112(sp)
    80001798:	e290                	sd	a2,0(a3)
    8000179a:	6766                	ld	a4,88(sp)
    8000179c:	d298                	sw	a4,32(a3)
    8000179e:	7786                	ld	a5,96(sp)
    800017a0:	d2dc                	sw	a5,36(a3)
    800017a2:	6862                	ld	a6,24(sp)
    800017a4:	0106b423          	sd	a6,8(a3)
    800017a8:	68ae                	ld	a7,200(sp)
    800017aa:	62ce                	ld	t0,208(sp)
    800017ac:	0116b823          	sd	a7,16(a3)
    800017b0:	0056bc23          	sd	t0,24(a3)
    }
    800017b4:	a009                	j	800017b6 <.LBB1_27+0xb4>
    800017b6:	60b2                	ld	ra,264(sp)
    800017b8:	6151                	addi	sp,sp,272
    800017ba:	8082                	ret

00000000800017bc <.LBB1_28>:
                    data: Some(self.bufs[index].data.lock())
    800017bc:	00022617          	auipc	a2,0x22
    800017c0:	2f460613          	addi	a2,a2,756 # 80023ab0 <.L__unnamed_18>
    800017c4:	45f9                	li	a1,30
    800017c6:	6506                	ld	a0,64(sp)
    800017c8:	0001f097          	auipc	ra,0x1f
    800017cc:	52e080e7          	jalr	1326(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800017d2 <.LBB1_29>:
                        self.bufs[index].valid.store(false, Ordering::Relaxed);
    800017d2:	00022617          	auipc	a2,0x22
    800017d6:	2f660613          	addi	a2,a2,758 # 80023ac8 <.L__unnamed_19>
    800017da:	45f9                	li	a1,30
    800017dc:	7502                	ld	a0,32(sp)
    800017de:	0001f097          	auipc	ra,0x1f
    800017e2:	518080e7          	jalr	1304(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800017e8 <.LBB1_30>:
                            data: Some(self.bufs[index].data.lock()),
    800017e8:	00022617          	auipc	a2,0x22
    800017ec:	2f860613          	addi	a2,a2,760 # 80023ae0 <.L__unnamed_20>
    800017f0:	45f9                	li	a1,30
    800017f2:	7502                	ld	a0,32(sp)
    800017f4:	0001f097          	auipc	ra,0x1f
    800017f8:	502080e7          	jalr	1282(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE:

00000000800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>:

    /// Get the buf from the cache/disk
    pub fn bread<'a>(&'a self, dev: u32, blockno: u32) -> Buf<'a> {
    800017fe:	711d                	addi	sp,sp,-96
        let mut b = self.bget(dev, blockno);
    80001800:	ec86                	sd	ra,88(sp)
    80001802:	8736                	mv	a4,a3
    80001804:	87b2                	mv	a5,a2
    80001806:	e4ae                	sd	a1,72(sp)
    80001808:	c8b2                	sw	a2,80(sp)
    8000180a:	cab6                	sw	a3,84(sp)
    8000180c:	fc2a                	sd	a0,56(sp)
    8000180e:	f82e                	sd	a1,48(sp)
    80001810:	f43a                	sd	a4,40(sp)
    80001812:	f03e                	sd	a5,32(sp)
    80001814:	00000097          	auipc	ra,0x0
    80001818:	dfa080e7          	jalr	-518(ra) # 8000160e <_ZN6kernel2fs3bio6Bcache4bget17h8beb24e79d66a706E>
    8000181c:	a009                	j	8000181e <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE+0x20>
        if !self.bufs[b.index].valid.load(Ordering::Relaxed) {
    8000181e:	7562                	ld	a0,56(sp)
    80001820:	610c                	ld	a1,0(a0)
    80001822:	4675                	li	a2,29
    80001824:	ec2e                	sd	a1,24(sp)
    80001826:	08b66a63          	bltu	a2,a1,800018ba <.LBB2_13>
    8000182a:	a009                	j	8000182c <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE+0x2e>
    8000182c:	44000513          	li	a0,1088
    80001830:	65e2                	ld	a1,24(sp)
    80001832:	02a58533          	mul	a0,a1,a0
    80001836:	7642                	ld	a2,48(sp)
    80001838:	9532                	add	a0,a0,a2
    8000183a:	48c50513          	addi	a0,a0,1164
    8000183e:	48c50513          	addi	a0,a0,1164
    80001842:	4681                	li	a3,0
    80001844:	04d10323          	sb	a3,70(sp)
    80001848:	85b6                	mv	a1,a3
    8000184a:	0000b097          	auipc	ra,0xb
    8000184e:	6f2080e7          	jalr	1778(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    80001852:	e82a                	sd	a0,16(sp)
    80001854:	a009                	j	80001856 <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE+0x58>
    80001856:	6542                	ld	a0,16(sp)
    80001858:	e105                	bnez	a0,80001878 <.LBB2_12+0x1c>
    8000185a:	a009                	j	8000185c <.LBB2_12>

000000008000185c <.LBB2_12>:
            DISK.rw(&mut b, false);
    8000185c:	00054517          	auipc	a0,0x54
    80001860:	7a450513          	addi	a0,a0,1956 # 80056000 <_ZN6kernel6driver11virtio_disk4DISK17h48d93f2a1d70ec15E>
    80001864:	4581                	li	a1,0
    80001866:	7662                	ld	a2,56(sp)
    80001868:	e42e                	sd	a1,8(sp)
    8000186a:	85b2                	mv	a1,a2
    8000186c:	6622                	ld	a2,8(sp)
    8000186e:	00016097          	auipc	ra,0x16
    80001872:	01c080e7          	jalr	28(ra) # 8001788a <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E>
    80001876:	a011                	j	8000187a <.LBB2_12+0x1e>
        if !self.bufs[b.index].valid.load(Ordering::Relaxed) {
    80001878:	a835                	j	800018b4 <.LBB2_12+0x58>
            self.bufs[b.index].valid.store(true, Ordering::Relaxed);
    8000187a:	7562                	ld	a0,56(sp)
    8000187c:	610c                	ld	a1,0(a0)
    8000187e:	4675                	li	a2,29
    80001880:	e02e                	sd	a1,0(sp)
    80001882:	04b66763          	bltu	a2,a1,800018d0 <.LBB2_14>
    80001886:	a009                	j	80001888 <.LBB2_12+0x2c>
    80001888:	44000513          	li	a0,1088
    8000188c:	6582                	ld	a1,0(sp)
    8000188e:	02a58533          	mul	a0,a1,a0
    80001892:	7642                	ld	a2,48(sp)
    80001894:	9532                	add	a0,a0,a2
    80001896:	48c50513          	addi	a0,a0,1164
    8000189a:	48c50513          	addi	a0,a0,1164
    8000189e:	4681                	li	a3,0
    800018a0:	04d103a3          	sb	a3,71(sp)
    800018a4:	4585                	li	a1,1
    800018a6:	8636                	mv	a2,a3
    800018a8:	0000b097          	auipc	ra,0xb
    800018ac:	712080e7          	jalr	1810(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    800018b0:	a009                	j	800018b2 <.LBB2_12+0x56>
        if !self.bufs[b.index].valid.load(Ordering::Relaxed) {
    800018b2:	a009                	j	800018b4 <.LBB2_12+0x58>
        }
        b
    }
    800018b4:	60e6                	ld	ra,88(sp)
    800018b6:	6125                	addi	sp,sp,96
    800018b8:	8082                	ret

00000000800018ba <.LBB2_13>:
        if !self.bufs[b.index].valid.load(Ordering::Relaxed) {
    800018ba:	00022617          	auipc	a2,0x22
    800018be:	2f660613          	addi	a2,a2,758 # 80023bb0 <.L__unnamed_21>
    800018c2:	45f9                	li	a1,30
    800018c4:	6562                	ld	a0,24(sp)
    800018c6:	0001f097          	auipc	ra,0x1f
    800018ca:	430080e7          	jalr	1072(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800018d0 <.LBB2_14>:
            self.bufs[b.index].valid.store(true, Ordering::Relaxed);
    800018d0:	00022617          	auipc	a2,0x22
    800018d4:	2f860613          	addi	a2,a2,760 # 80023bc8 <.L__unnamed_22>
    800018d8:	45f9                	li	a1,30
    800018da:	6502                	ld	a0,0(sp)
    800018dc:	0001f097          	auipc	ra,0x1f
    800018e0:	41a080e7          	jalr	1050(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs3bio6Bcache6brelse17h469141cf5d3adce7E:

00000000800018e6 <_ZN6kernel2fs3bio6Bcache6brelse17h469141cf5d3adce7E>:

    /// Move an unlocked buf to the head of the most-recently-used list.
    fn brelse(&self, index: usize) {
    800018e6:	7179                	addi	sp,sp,-48
    800018e8:	f406                	sd	ra,40(sp)
    800018ea:	ec2a                	sd	a0,24(sp)
    800018ec:	f02e                	sd	a1,32(sp)
        self.ctrl.acquire().move_if_no_ref(index);
    800018ee:	e42e                	sd	a1,8(sp)
    800018f0:	00001097          	auipc	ra,0x1
    800018f4:	c50080e7          	jalr	-944(ra) # 80002540 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE>
    800018f8:	e82a                	sd	a0,16(sp)
    800018fa:	a009                	j	800018fc <_ZN6kernel2fs3bio6Bcache6brelse17h469141cf5d3adce7E+0x16>
    800018fc:	0808                	addi	a0,sp,16
    800018fe:	00002097          	auipc	ra,0x2
    80001902:	0dc080e7          	jalr	220(ra) # 800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>
    80001906:	e02a                	sd	a0,0(sp)
    80001908:	a009                	j	8000190a <_ZN6kernel2fs3bio6Bcache6brelse17h469141cf5d3adce7E+0x24>
    8000190a:	6502                	ld	a0,0(sp)
    8000190c:	65a2                	ld	a1,8(sp)
    8000190e:	00000097          	auipc	ra,0x0
    80001912:	340080e7          	jalr	832(ra) # 80001c4e <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE>
    80001916:	a009                	j	80001918 <_ZN6kernel2fs3bio6Bcache6brelse17h469141cf5d3adce7E+0x32>
    80001918:	0808                	addi	a0,sp,16
    8000191a:	00005097          	auipc	ra,0x5
    8000191e:	0a2080e7          	jalr	162(ra) # 800069bc <_ZN4core3ptr89drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..bio..BufLru$GT$$GT$17heb8f06842278fadcE>
    80001922:	a009                	j	80001924 <_ZN6kernel2fs3bio6Bcache6brelse17h469141cf5d3adce7E+0x3e>
    }
    80001924:	70a2                	ld	ra,40(sp)
    80001926:	6145                	addi	sp,sp,48
    80001928:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio3Buf12read_blockno17h273c260285cdf6bdE:

000000008000192a <_ZN6kernel2fs3bio3Buf12read_blockno17h273c260285cdf6bdE>:
    /// Introduced to let the sleeplock guard drop before the whole struct.
    data: Option<SleepLockGuard<'a, BufData>>,
}

impl<'a> Buf<'a> {
    pub fn read_blockno(&self) -> u32 {
    8000192a:	1141                	addi	sp,sp,-16
    8000192c:	e42a                	sd	a0,8(sp)
        self.blockno
    }
    8000192e:	5148                	lw	a0,36(a0)
    80001930:	0141                	addi	sp,sp,16
    80001932:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio3Buf6bwrite17he92a25be232d779bE:

0000000080001934 <_ZN6kernel2fs3bio3Buf6bwrite17he92a25be232d779bE>:

    pub fn bwrite(&mut self) {
    80001934:	1101                	addi	sp,sp,-32
    80001936:	ec06                	sd	ra,24(sp)
    80001938:	e82a                	sd	a0,16(sp)

000000008000193a <.LBB5_2>:
        DISK.rw(self, true);
    8000193a:	00054597          	auipc	a1,0x54
    8000193e:	6c658593          	addi	a1,a1,1734 # 80056000 <_ZN6kernel6driver11virtio_disk4DISK17h48d93f2a1d70ec15E>
    80001942:	4605                	li	a2,1
    80001944:	e42a                	sd	a0,8(sp)
    80001946:	852e                	mv	a0,a1
    80001948:	65a2                	ld	a1,8(sp)
    8000194a:	00016097          	auipc	ra,0x16
    8000194e:	f40080e7          	jalr	-192(ra) # 8001788a <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E>
    80001952:	a009                	j	80001954 <.LBB5_2+0x1a>
    }
    80001954:	60e2                	ld	ra,24(sp)
    80001956:	6105                	addi	sp,sp,32
    80001958:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E:

000000008000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>:

    /// Gives out a raw const pointer at the buf data. 
    pub fn raw_data(&self) -> *const BufData {
    8000195a:	7179                	addi	sp,sp,-48
    8000195c:	f406                	sd	ra,40(sp)
    8000195e:	ec2a                	sd	a0,24(sp)
        let guard = self.data.as_ref().unwrap();
    80001960:	0541                	addi	a0,a0,16
    80001962:	00017097          	auipc	ra,0x17
    80001966:	f82080e7          	jalr	-126(ra) # 800188e4 <_ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE>
    8000196a:	e82a                	sd	a0,16(sp)
    8000196c:	a009                	j	8000196e <.LBB6_4>

000000008000196e <.LBB6_4>:
    8000196e:	00022597          	auipc	a1,0x22
    80001972:	27258593          	addi	a1,a1,626 # 80023be0 <.L__unnamed_23>
    80001976:	6542                	ld	a0,16(sp)
    80001978:	00017097          	auipc	ra,0x17
    8000197c:	2c8080e7          	jalr	712(ra) # 80018c40 <_ZN4core6option15Option$LT$T$GT$6unwrap17h5dd6082ce602d81dE>
    80001980:	85aa                	mv	a1,a0
    80001982:	f02a                	sd	a0,32(sp)
    80001984:	e42e                	sd	a1,8(sp)
    80001986:	a009                	j	80001988 <.LBB6_4+0x1a>
        guard.deref()
    80001988:	6522                	ld	a0,8(sp)
    8000198a:	00006097          	auipc	ra,0x6
    8000198e:	acc080e7          	jalr	-1332(ra) # 80007456 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h22429bca59620296E>
    80001992:	e02a                	sd	a0,0(sp)
    80001994:	a009                	j	80001996 <.LBB6_4+0x28>
    }
    80001996:	6502                	ld	a0,0(sp)
    80001998:	70a2                	ld	ra,40(sp)
    8000199a:	6145                	addi	sp,sp,48
    8000199c:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE:

000000008000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>:

    /// Gives out a raw mut pointer at the buf data. 
    pub fn raw_data_mut(&mut self) -> *mut BufData {
    8000199e:	7179                	addi	sp,sp,-48
    800019a0:	f406                	sd	ra,40(sp)
    800019a2:	ec2a                	sd	a0,24(sp)
        let guard = self.data.as_mut().unwrap();
    800019a4:	0541                	addi	a0,a0,16
    800019a6:	00017097          	auipc	ra,0x17
    800019aa:	e62080e7          	jalr	-414(ra) # 80018808 <_ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E>
    800019ae:	e82a                	sd	a0,16(sp)
    800019b0:	a009                	j	800019b2 <.LBB7_4>

00000000800019b2 <.LBB7_4>:
    800019b2:	00022597          	auipc	a1,0x22
    800019b6:	24658593          	addi	a1,a1,582 # 80023bf8 <.L__unnamed_24>
    800019ba:	6542                	ld	a0,16(sp)
    800019bc:	00017097          	auipc	ra,0x17
    800019c0:	4a6080e7          	jalr	1190(ra) # 80018e62 <_ZN4core6option15Option$LT$T$GT$6unwrap17hdad3629ea4723373E>
    800019c4:	85aa                	mv	a1,a0
    800019c6:	f02a                	sd	a0,32(sp)
    800019c8:	e42e                	sd	a1,8(sp)
    800019ca:	a009                	j	800019cc <.LBB7_4+0x1a>
        guard.deref_mut()
    800019cc:	6522                	ld	a0,8(sp)
    800019ce:	00006097          	auipc	ra,0x6
    800019d2:	aa6080e7          	jalr	-1370(ra) # 80007474 <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf740b8f97f1862b1E>
    800019d6:	e02a                	sd	a0,0(sp)
    800019d8:	a009                	j	800019da <.LBB7_4+0x28>
    }
    800019da:	6502                	ld	a0,0(sp)
    800019dc:	70a2                	ld	ra,40(sp)
    800019de:	6145                	addi	sp,sp,48
    800019e0:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio3Buf3pin17hd9cbcf2459e86140E:

00000000800019e2 <_ZN6kernel2fs3bio3Buf3pin17hd9cbcf2459e86140E>:

    /// Pin the buf.
    /// SAFETY: it should be definitly safe.
    ///     Because the current refcnt >= 1, so the rc_ptr is valid.
    pub unsafe fn pin(&self) {
    800019e2:	1101                	addi	sp,sp,-32
    800019e4:	e82a                	sd	a0,16(sp)
        let rc = *self.rc_ptr;
    800019e6:	650c                	ld	a1,8(a0)
    800019e8:	618c                	ld	a1,0(a1)
    800019ea:	ec2e                	sd	a1,24(sp)
        *self.rc_ptr = rc + 1;
    800019ec:	00158613          	addi	a2,a1,1
    800019f0:	e42a                	sd	a0,8(sp)
    800019f2:	e032                	sd	a2,0(sp)
    800019f4:	00b66963          	bltu	a2,a1,80001a06 <.LBB8_3>
    800019f8:	a009                	j	800019fa <_ZN6kernel2fs3bio3Buf3pin17hd9cbcf2459e86140E+0x18>
    800019fa:	6522                	ld	a0,8(sp)
    800019fc:	650c                	ld	a1,8(a0)
    800019fe:	6602                	ld	a2,0(sp)
    80001a00:	e190                	sd	a2,0(a1)
    }
    80001a02:	6105                	addi	sp,sp,32
    80001a04:	8082                	ret

0000000080001a06 <.LBB8_3>:
        *self.rc_ptr = rc + 1;
    80001a06:	00022517          	auipc	a0,0x22
    80001a0a:	05a50513          	addi	a0,a0,90 # 80023a60 <str.1>

0000000080001a0e <.LBB8_4>:
    80001a0e:	00022617          	auipc	a2,0x22
    80001a12:	20260613          	addi	a2,a2,514 # 80023c10 <.L__unnamed_25>
    80001a16:	45f1                	li	a1,28
    80001a18:	0001f097          	auipc	ra,0x1f
    80001a1c:	2b2080e7          	jalr	690(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs3bio3Buf5unpin17h1d586dc6aecebdeaE:

0000000080001a22 <_ZN6kernel2fs3bio3Buf5unpin17h1d586dc6aecebdeaE>:

    /// Unpin the buf.
    /// SAFETY: it should be called matching pin.
    pub unsafe fn unpin(&self) {
    80001a22:	7179                	addi	sp,sp,-48
    80001a24:	f02a                	sd	a0,32(sp)
        let rc = *self.rc_ptr;
    80001a26:	650c                	ld	a1,8(a0)
    80001a28:	618c                	ld	a1,0(a1)
    80001a2a:	f42e                	sd	a1,40(sp)
    80001a2c:	4605                	li	a2,1
        if rc <= 1 {
    80001a2e:	ec2a                	sd	a0,24(sp)
    80001a30:	e82e                	sd	a1,16(sp)
    80001a32:	02b66163          	bltu	a2,a1,80001a54 <.LBB9_6+0x14>
    80001a36:	a009                	j	80001a38 <.LBB9_5>

0000000080001a38 <.LBB9_5>:
            panic!("buf unpin not match");
    80001a38:	00022517          	auipc	a0,0x22
    80001a3c:	1f050513          	addi	a0,a0,496 # 80023c28 <.L__unnamed_26>

0000000080001a40 <.LBB9_6>:
    80001a40:	00022617          	auipc	a2,0x22
    80001a44:	20060613          	addi	a2,a2,512 # 80023c40 <.L__unnamed_27>
    80001a48:	45cd                	li	a1,19
    80001a4a:	0001f097          	auipc	ra,0x1f
    80001a4e:	280080e7          	jalr	640(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80001a52:	0000                	unimp
        }
        *self.rc_ptr = rc - 1;
    80001a54:	6542                	ld	a0,16(sp)
    80001a56:	fff50593          	addi	a1,a0,-1
    80001a5a:	e42e                	sd	a1,8(sp)
    80001a5c:	00b56963          	bltu	a0,a1,80001a6e <.LBB9_7>
    80001a60:	a009                	j	80001a62 <.LBB9_6+0x22>
    80001a62:	6562                	ld	a0,24(sp)
    80001a64:	650c                	ld	a1,8(a0)
    80001a66:	6622                	ld	a2,8(sp)
    80001a68:	e190                	sd	a2,0(a1)
    }
    80001a6a:	6145                	addi	sp,sp,48
    80001a6c:	8082                	ret

0000000080001a6e <.LBB9_7>:
        *self.rc_ptr = rc - 1;
    80001a6e:	00022517          	auipc	a0,0x22
    80001a72:	ea250513          	addi	a0,a0,-350 # 80023910 <str.0>

0000000080001a76 <.LBB9_8>:
    80001a76:	00022617          	auipc	a2,0x22
    80001a7a:	1e260613          	addi	a2,a2,482 # 80023c58 <.L__unnamed_28>
    80001a7e:	02100593          	li	a1,33
    80001a82:	0001f097          	auipc	ra,0x1f
    80001a86:	248080e7          	jalr	584(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E:

0000000080001a8c <_ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E>:
        }
    }

    /// Find if the requested block is cached.
    /// Return its index and incr the refcnt if found.
    fn find_cached(&mut self, dev: u32, blockno: u32) -> Option<(usize, *mut usize)> {
    80001a8c:	7119                	addi	sp,sp,-128
    80001a8e:	fc86                	sd	ra,120(sp)
    80001a90:	8736                	mv	a4,a3
    80001a92:	87b2                	mv	a5,a2
    80001a94:	f0ae                	sd	a1,96(sp)
    80001a96:	d4b2                	sw	a2,104(sp)
    80001a98:	d6b6                	sw	a3,108(sp)
        let mut b = self.head;
    80001a9a:	4b05b583          	ld	a1,1200(a1)
    80001a9e:	e0ae                	sd	a1,64(sp)
        while !b.is_null() {
    80001aa0:	fc2a                	sd	a0,56(sp)
    80001aa2:	f83a                	sd	a4,48(sp)
    80001aa4:	f43e                	sd	a5,40(sp)
    80001aa6:	a009                	j	80001aa8 <_ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E+0x1c>
    80001aa8:	6506                	ld	a0,64(sp)
    80001aaa:	00015097          	auipc	ra,0x15
    80001aae:	fbe080e7          	jalr	-66(ra) # 80016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>
    80001ab2:	f02a                	sd	a0,32(sp)
    80001ab4:	a009                	j	80001ab6 <_ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E+0x2a>
    80001ab6:	4501                	li	a0,0
    80001ab8:	7582                	ld	a1,32(sp)
    80001aba:	00a58763          	beq	a1,a0,80001ac8 <_ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E+0x3c>
    80001abe:	a009                	j	80001ac0 <_ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E+0x34>
    80001ac0:	4501                	li	a0,0
                bref.refcnt += 1;
                return Some((bref.index, &mut bref.refcnt));
            }
            b = bref.next;
        }
        None
    80001ac2:	75e2                	ld	a1,56(sp)
    80001ac4:	e188                	sd	a0,0(a1)
    }
    80001ac6:	a869                	j	80001b60 <.LBB10_16+0x8a>
            let bref = unsafe { b.as_mut().unwrap() };
    80001ac8:	6506                	ld	a0,64(sp)
    80001aca:	00015097          	auipc	ra,0x15
    80001ace:	f50080e7          	jalr	-176(ra) # 80016a1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E>
    80001ad2:	ec2a                	sd	a0,24(sp)
    80001ad4:	a009                	j	80001ad6 <.LBB10_16>

0000000080001ad6 <.LBB10_16>:
    80001ad6:	00022597          	auipc	a1,0x22
    80001ada:	19a58593          	addi	a1,a1,410 # 80023c70 <.L__unnamed_29>
    80001ade:	6562                	ld	a0,24(sp)
    80001ae0:	00017097          	auipc	ra,0x17
    80001ae4:	1cc080e7          	jalr	460(ra) # 80018cac <_ZN4core6option15Option$LT$T$GT$6unwrap17h7d0483f37b144d32E>
    80001ae8:	e82a                	sd	a0,16(sp)
    80001aea:	a009                	j	80001aec <.LBB10_16+0x16>
    80001aec:	6542                	ld	a0,16(sp)
    80001aee:	f8aa                	sd	a0,112(sp)
            if bref.dev == dev && bref.blockno == blockno {
    80001af0:	510c                	lw	a1,32(a0)
    80001af2:	7622                	ld	a2,40(sp)
    80001af4:	0006069b          	sext.w	a3,a2
    80001af8:	00d58b63          	beq	a1,a3,80001b0e <.LBB10_16+0x38>
    80001afc:	a029                	j	80001b06 <.LBB10_16+0x30>
    80001afe:	4505                	li	a0,1
    80001b00:	04a107a3          	sb	a0,79(sp)
    80001b04:	a829                	j	80001b1e <.LBB10_16+0x48>
    80001b06:	4501                	li	a0,0
    80001b08:	04a107a3          	sb	a0,79(sp)
    80001b0c:	a809                	j	80001b1e <.LBB10_16+0x48>
    80001b0e:	6542                	ld	a0,16(sp)
    80001b10:	514c                	lw	a1,36(a0)
    80001b12:	7642                	ld	a2,48(sp)
    80001b14:	0006069b          	sext.w	a3,a2
    80001b18:	fed583e3          	beq	a1,a3,80001afe <.LBB10_16+0x28>
    80001b1c:	b7ed                	j	80001b06 <.LBB10_16+0x30>
    80001b1e:	04f14503          	lbu	a0,79(sp)
    80001b22:	8905                	andi	a0,a0,1
    80001b24:	4581                	li	a1,0
    80001b26:	00b50b63          	beq	a0,a1,80001b3c <.LBB10_16+0x66>
    80001b2a:	a009                	j	80001b2c <.LBB10_16+0x56>
                bref.refcnt += 1;
    80001b2c:	6542                	ld	a0,16(sp)
    80001b2e:	690c                	ld	a1,16(a0)
    80001b30:	00158613          	addi	a2,a1,1
    80001b34:	e432                	sd	a2,8(sp)
    80001b36:	02b66863          	bltu	a2,a1,80001b66 <.LBB10_17>
    80001b3a:	a029                	j	80001b44 <.LBB10_16+0x6e>
            b = bref.next;
    80001b3c:	6542                	ld	a0,16(sp)
    80001b3e:	650c                	ld	a1,8(a0)
    80001b40:	e0ae                	sd	a1,64(sp)
        while !b.is_null() {
    80001b42:	b79d                	j	80001aa8 <_ZN6kernel2fs3bio6BufLru11find_cached17hd82557e825fdfaf6E+0x1c>
                bref.refcnt += 1;
    80001b44:	6542                	ld	a0,16(sp)
    80001b46:	01050593          	addi	a1,a0,16
    80001b4a:	6622                	ld	a2,8(sp)
    80001b4c:	e910                	sd	a2,16(a0)
                return Some((bref.index, &mut bref.refcnt));
    80001b4e:	6d14                	ld	a3,24(a0)
    80001b50:	e8b6                	sd	a3,80(sp)
    80001b52:	ecae                	sd	a1,88(sp)
    80001b54:	7762                	ld	a4,56(sp)
    80001b56:	e714                	sd	a3,8(a4)
    80001b58:	eb0c                	sd	a1,16(a4)
    80001b5a:	4585                	li	a1,1
    80001b5c:	e30c                	sd	a1,0(a4)
    }
    80001b5e:	a009                	j	80001b60 <.LBB10_16+0x8a>
    80001b60:	70e6                	ld	ra,120(sp)
    80001b62:	6109                	addi	sp,sp,128
    80001b64:	8082                	ret

0000000080001b66 <.LBB10_17>:
                bref.refcnt += 1;
    80001b66:	00022517          	auipc	a0,0x22
    80001b6a:	efa50513          	addi	a0,a0,-262 # 80023a60 <str.1>

0000000080001b6e <.LBB10_18>:
    80001b6e:	00022617          	auipc	a2,0x22
    80001b72:	11a60613          	addi	a2,a2,282 # 80023c88 <.L__unnamed_30>
    80001b76:	45f1                	li	a1,28
    80001b78:	0001f097          	auipc	ra,0x1f
    80001b7c:	152080e7          	jalr	338(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE:

0000000080001b82 <_ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE>:

    /// Recycle an unused buffer from the tail.
    /// Return its index if found.
    fn recycle(&mut self, dev: u32, blockno: u32) -> Option<(usize, *mut usize)> {
    80001b82:	7159                	addi	sp,sp,-112
    80001b84:	f486                	sd	ra,104(sp)
    80001b86:	8736                	mv	a4,a3
    80001b88:	87b2                	mv	a5,a2
    80001b8a:	e8ae                	sd	a1,80(sp)
    80001b8c:	ccb2                	sw	a2,88(sp)
    80001b8e:	ceb6                	sw	a3,92(sp)
        let mut b = self.tail;
    80001b90:	4b85b583          	ld	a1,1208(a1)
    80001b94:	fc2e                	sd	a1,56(sp)
        while !b.is_null() {
    80001b96:	f82a                	sd	a0,48(sp)
    80001b98:	f43a                	sd	a4,40(sp)
    80001b9a:	f03e                	sd	a5,32(sp)
    80001b9c:	a009                	j	80001b9e <_ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE+0x1c>
    80001b9e:	7562                	ld	a0,56(sp)
    80001ba0:	00015097          	auipc	ra,0x15
    80001ba4:	ec8080e7          	jalr	-312(ra) # 80016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>
    80001ba8:	ec2a                	sd	a0,24(sp)
    80001baa:	a009                	j	80001bac <_ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE+0x2a>
    80001bac:	4501                	li	a0,0
    80001bae:	65e2                	ld	a1,24(sp)
    80001bb0:	00a58763          	beq	a1,a0,80001bbe <_ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE+0x3c>
    80001bb4:	a009                	j	80001bb6 <_ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE+0x34>
    80001bb6:	4501                	li	a0,0
                bref.refcnt += 1;
                return Some((bref.index, &mut bref.refcnt));
            }
            b = bref.prev;
        }
        None
    80001bb8:	75c2                	ld	a1,48(sp)
    80001bba:	e188                	sd	a0,0(a1)
    }
    80001bbc:	a885                	j	80001c2c <.LBB11_12+0x60>
            let bref = unsafe { b.as_mut().unwrap() };
    80001bbe:	7562                	ld	a0,56(sp)
    80001bc0:	00015097          	auipc	ra,0x15
    80001bc4:	e5a080e7          	jalr	-422(ra) # 80016a1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E>
    80001bc8:	e82a                	sd	a0,16(sp)
    80001bca:	a009                	j	80001bcc <.LBB11_12>

0000000080001bcc <.LBB11_12>:
    80001bcc:	00022597          	auipc	a1,0x22
    80001bd0:	0d458593          	addi	a1,a1,212 # 80023ca0 <.L__unnamed_31>
    80001bd4:	6542                	ld	a0,16(sp)
    80001bd6:	00017097          	auipc	ra,0x17
    80001bda:	0d6080e7          	jalr	214(ra) # 80018cac <_ZN4core6option15Option$LT$T$GT$6unwrap17h7d0483f37b144d32E>
    80001bde:	e42a                	sd	a0,8(sp)
    80001be0:	a009                	j	80001be2 <.LBB11_12+0x16>
    80001be2:	6522                	ld	a0,8(sp)
    80001be4:	f0aa                	sd	a0,96(sp)
            if bref.refcnt == 0 {
    80001be6:	690c                	ld	a1,16(a0)
    80001be8:	4601                	li	a2,0
    80001bea:	00c59f63          	bne	a1,a2,80001c08 <.LBB11_12+0x3c>
    80001bee:	a009                	j	80001bf0 <.LBB11_12+0x24>
                bref.dev = dev;
    80001bf0:	7502                	ld	a0,32(sp)
    80001bf2:	65a2                	ld	a1,8(sp)
    80001bf4:	d188                	sw	a0,32(a1)
                bref.blockno = blockno;
    80001bf6:	7622                	ld	a2,40(sp)
    80001bf8:	d1d0                	sw	a2,36(a1)
                bref.refcnt += 1;
    80001bfa:	6994                	ld	a3,16(a1)
    80001bfc:	00168713          	addi	a4,a3,1
    80001c00:	e03a                	sd	a4,0(sp)
    80001c02:	02d76863          	bltu	a4,a3,80001c32 <.LBB11_13>
    80001c06:	a029                	j	80001c10 <.LBB11_12+0x44>
            b = bref.prev;
    80001c08:	6522                	ld	a0,8(sp)
    80001c0a:	610c                	ld	a1,0(a0)
    80001c0c:	fc2e                	sd	a1,56(sp)
        while !b.is_null() {
    80001c0e:	bf41                	j	80001b9e <_ZN6kernel2fs3bio6BufLru7recycle17h85a1229316c63c5eE+0x1c>
                bref.refcnt += 1;
    80001c10:	6522                	ld	a0,8(sp)
    80001c12:	01050593          	addi	a1,a0,16
    80001c16:	6602                	ld	a2,0(sp)
    80001c18:	e910                	sd	a2,16(a0)
                return Some((bref.index, &mut bref.refcnt));
    80001c1a:	6d14                	ld	a3,24(a0)
    80001c1c:	e0b6                	sd	a3,64(sp)
    80001c1e:	e4ae                	sd	a1,72(sp)
    80001c20:	7742                	ld	a4,48(sp)
    80001c22:	e714                	sd	a3,8(a4)
    80001c24:	eb0c                	sd	a1,16(a4)
    80001c26:	4585                	li	a1,1
    80001c28:	e30c                	sd	a1,0(a4)
    }
    80001c2a:	a009                	j	80001c2c <.LBB11_12+0x60>
    80001c2c:	70a6                	ld	ra,104(sp)
    80001c2e:	6165                	addi	sp,sp,112
    80001c30:	8082                	ret

0000000080001c32 <.LBB11_13>:
                bref.refcnt += 1;
    80001c32:	00022517          	auipc	a0,0x22
    80001c36:	e2e50513          	addi	a0,a0,-466 # 80023a60 <str.1>

0000000080001c3a <.LBB11_14>:
    80001c3a:	00022617          	auipc	a2,0x22
    80001c3e:	07e60613          	addi	a2,a2,126 # 80023cb8 <.L__unnamed_32>
    80001c42:	45f1                	li	a1,28
    80001c44:	0001f097          	auipc	ra,0x1f
    80001c48:	086080e7          	jalr	134(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE:

0000000080001c4e <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE>:

    /// Move an entry to the head if no live ref.
    fn move_if_no_ref(&mut self, index: usize) {
    80001c4e:	7171                	addi	sp,sp,-176
    80001c50:	f506                	sd	ra,168(sp)
    80001c52:	ed2a                	sd	a0,152(sp)
    80001c54:	f12e                	sd	a1,160(sp)
    80001c56:	4675                	li	a2,29
        let b = &mut self.inner[index];
    80001c58:	f0ae                	sd	a1,96(sp)
    80001c5a:	ecaa                	sd	a0,88(sp)
    80001c5c:	16b66063          	bltu	a2,a1,80001dbc <.LBB12_29>
    80001c60:	a009                	j	80001c62 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x14>
    80001c62:	02800513          	li	a0,40
    80001c66:	7586                	ld	a1,96(sp)
    80001c68:	02a58533          	mul	a0,a1,a0
    80001c6c:	6666                	ld	a2,88(sp)
    80001c6e:	9532                	add	a0,a0,a2
    80001c70:	f8aa                	sd	a0,112(sp)
        b.refcnt -= 1;
    80001c72:	6908                	ld	a0,16(a0)
    80001c74:	fff50693          	addi	a3,a0,-1
    80001c78:	e8b6                	sd	a3,80(sp)
    80001c7a:	14d56c63          	bltu	a0,a3,80001dd2 <.LBB12_30>
    80001c7e:	a009                	j	80001c80 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x32>
    80001c80:	7546                	ld	a0,112(sp)
    80001c82:	65c6                	ld	a1,80(sp)
    80001c84:	e90c                	sd	a1,16(a0)
        if b.refcnt == 0 && !ptr::eq(self.head, b) {
    80001c86:	7546                	ld	a0,112(sp)
    80001c88:	6908                	ld	a0,16(a0)
    80001c8a:	4601                	li	a2,0
    80001c8c:	00c50b63          	beq	a0,a2,80001ca2 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x54>
    80001c90:	a029                	j	80001c9a <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x4c>
    80001c92:	4505                	li	a0,1
    80001c94:	06a10f23          	sb	a0,126(sp)
    80001c98:	a839                	j	80001cb6 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x68>
    80001c9a:	4501                	li	a0,0
    80001c9c:	06a10f23          	sb	a0,126(sp)
    80001ca0:	a819                	j	80001cb6 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x68>
    80001ca2:	6566                	ld	a0,88(sp)
    80001ca4:	4b053503          	ld	a0,1200(a0)
    80001ca8:	75c6                	ld	a1,112(sp)
    80001caa:	0000f097          	auipc	ra,0xf
    80001cae:	cb2080e7          	jalr	-846(ra) # 8001095c <_ZN4core3ptr2eq17h1bbcd7553e7a119fE>
    80001cb2:	e4aa                	sd	a0,72(sp)
    80001cb4:	a031                	j	80001cc0 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x72>
    80001cb6:	07e14503          	lbu	a0,126(sp)
    80001cba:	8905                	andi	a0,a0,1
    80001cbc:	e519                	bnez	a0,80001cca <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x7c>
    80001cbe:	a005                	j	80001cde <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x90>
    80001cc0:	4501                	li	a0,0
    80001cc2:	65a6                	ld	a1,72(sp)
    80001cc4:	fca587e3          	beq	a1,a0,80001c92 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x44>
    80001cc8:	bfc9                	j	80001c9a <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x4c>
            // forward the tail if b is at the tail
            // b may be the only entry in the lru list
            if ptr::eq(self.tail, b) && !b.prev.is_null() {
    80001cca:	6566                	ld	a0,88(sp)
    80001ccc:	4b853503          	ld	a0,1208(a0)
    80001cd0:	75c6                	ld	a1,112(sp)
    80001cd2:	0000f097          	auipc	ra,0xf
    80001cd6:	c8a080e7          	jalr	-886(ra) # 8001095c <_ZN4core3ptr2eq17h1bbcd7553e7a119fE>
    80001cda:	e0aa                	sd	a0,64(sp)
    80001cdc:	a03d                	j	80001d0a <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xbc>
        if b.refcnt == 0 && !ptr::eq(self.head, b) {
    80001cde:	a8e1                	j	80001db6 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x168>
    80001ce0:	4505                	li	a0,1
            if ptr::eq(self.tail, b) && !b.prev.is_null() {
    80001ce2:	06a10fa3          	sb	a0,127(sp)
    80001ce6:	a829                	j	80001d00 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xb2>
    80001ce8:	4501                	li	a0,0
    80001cea:	06a10fa3          	sb	a0,127(sp)
    80001cee:	a809                	j	80001d00 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xb2>
    80001cf0:	7546                	ld	a0,112(sp)
    80001cf2:	6108                	ld	a0,0(a0)
    80001cf4:	00015097          	auipc	ra,0x15
    80001cf8:	d74080e7          	jalr	-652(ra) # 80016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>
    80001cfc:	fc2a                	sd	a0,56(sp)
    80001cfe:	a809                	j	80001d10 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xc2>
    80001d00:	07f14503          	lbu	a0,127(sp)
    80001d04:	8905                	andi	a0,a0,1
    80001d06:	e911                	bnez	a0,80001d1a <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xcc>
    80001d08:	a839                	j	80001d26 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xd8>
    80001d0a:	6506                	ld	a0,64(sp)
    80001d0c:	f175                	bnez	a0,80001cf0 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xa2>
    80001d0e:	bfe9                	j	80001ce8 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x9a>
    80001d10:	4501                	li	a0,0
    80001d12:	75e2                	ld	a1,56(sp)
    80001d14:	fca586e3          	beq	a1,a0,80001ce0 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x92>
    80001d18:	bfc1                	j	80001ce8 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x9a>
                self.tail = b.prev;
    80001d1a:	7546                	ld	a0,112(sp)
    80001d1c:	6108                	ld	a0,0(a0)
    80001d1e:	65e6                	ld	a1,88(sp)
    80001d20:	4aa5bc23          	sd	a0,1208(a1)
            if ptr::eq(self.tail, b) && !b.prev.is_null() {
    80001d24:	a011                	j	80001d28 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xda>
    80001d26:	a009                	j	80001d28 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xda>
            }
            
            // detach b
            unsafe {
                b.next.as_mut().map(|b_next| b_next.prev = b.prev);
    80001d28:	7546                	ld	a0,112(sp)
    80001d2a:	6508                	ld	a0,8(a0)
    80001d2c:	00015097          	auipc	ra,0x15
    80001d30:	cee080e7          	jalr	-786(ra) # 80016a1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E>
    80001d34:	f82a                	sd	a0,48(sp)
    80001d36:	a009                	j	80001d38 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0xea>
    80001d38:	1888                	addi	a0,sp,112
    80001d3a:	e12a                	sd	a0,128(sp)
    80001d3c:	75c2                	ld	a1,48(sp)
    80001d3e:	f42a                	sd	a0,40(sp)
    80001d40:	852e                	mv	a0,a1
    80001d42:	75a2                	ld	a1,40(sp)
    80001d44:	00016097          	auipc	ra,0x16
    80001d48:	68a080e7          	jalr	1674(ra) # 800183ce <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE>
    80001d4c:	a009                	j	80001d4e <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x100>
                b.prev.as_mut().map(|b_prev| b_prev.next = b.next);
    80001d4e:	7546                	ld	a0,112(sp)
    80001d50:	6108                	ld	a0,0(a0)
    80001d52:	00015097          	auipc	ra,0x15
    80001d56:	cc8080e7          	jalr	-824(ra) # 80016a1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E>
    80001d5a:	f02a                	sd	a0,32(sp)
    80001d5c:	a009                	j	80001d5e <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x110>
    80001d5e:	1888                	addi	a0,sp,112
    80001d60:	e52a                	sd	a0,136(sp)
    80001d62:	7582                	ld	a1,32(sp)
    80001d64:	ec2a                	sd	a0,24(sp)
    80001d66:	852e                	mv	a0,a1
    80001d68:	65e2                	ld	a1,24(sp)
    80001d6a:	00016097          	auipc	ra,0x16
    80001d6e:	72c080e7          	jalr	1836(ra) # 80018496 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE>
    80001d72:	a009                	j	80001d74 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x126>
            }

            // attach b
            b.prev = ptr::null_mut();
    80001d74:	a009                	j	80001d76 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x128>
    80001d76:	7546                	ld	a0,112(sp)
    80001d78:	4581                	li	a1,0
    80001d7a:	e10c                	sd	a1,0(a0)
            b.next = self.head;
    80001d7c:	6566                	ld	a0,88(sp)
    80001d7e:	4b053583          	ld	a1,1200(a0)
    80001d82:	7646                	ld	a2,112(sp)
    80001d84:	e60c                	sd	a1,8(a2)
            unsafe {
                self.head.as_mut().map(|old_head| old_head.prev = b);
    80001d86:	4b053503          	ld	a0,1200(a0)
    80001d8a:	00015097          	auipc	ra,0x15
    80001d8e:	c90080e7          	jalr	-880(ra) # 80016a1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E>
    80001d92:	e82a                	sd	a0,16(sp)
    80001d94:	a009                	j	80001d96 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x148>
    80001d96:	1888                	addi	a0,sp,112
    80001d98:	e92a                	sd	a0,144(sp)
    80001d9a:	65c2                	ld	a1,16(sp)
    80001d9c:	e42a                	sd	a0,8(sp)
    80001d9e:	852e                	mv	a0,a1
    80001da0:	65a2                	ld	a1,8(sp)
    80001da2:	00016097          	auipc	ra,0x16
    80001da6:	690080e7          	jalr	1680(ra) # 80018432 <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E>
    80001daa:	a009                	j	80001dac <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x15e>
            }
            self.head = b;
    80001dac:	7546                	ld	a0,112(sp)
    80001dae:	65e6                	ld	a1,88(sp)
    80001db0:	4aa5b823          	sd	a0,1200(a1)
        if b.refcnt == 0 && !ptr::eq(self.head, b) {
    80001db4:	a009                	j	80001db6 <_ZN6kernel2fs3bio6BufLru14move_if_no_ref17h21abf3790891695dE+0x168>
        }
    }
    80001db6:	70aa                	ld	ra,168(sp)
    80001db8:	614d                	addi	sp,sp,176
    80001dba:	8082                	ret

0000000080001dbc <.LBB12_29>:
        let b = &mut self.inner[index];
    80001dbc:	00022617          	auipc	a2,0x22
    80001dc0:	f1460613          	addi	a2,a2,-236 # 80023cd0 <.L__unnamed_33>
    80001dc4:	45f9                	li	a1,30
    80001dc6:	7506                	ld	a0,96(sp)
    80001dc8:	0001f097          	auipc	ra,0x1f
    80001dcc:	f2e080e7          	jalr	-210(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080001dd2 <.LBB12_30>:
        b.refcnt -= 1;
    80001dd2:	00022517          	auipc	a0,0x22
    80001dd6:	b3e50513          	addi	a0,a0,-1218 # 80023910 <str.0>

0000000080001dda <.LBB12_31>:
    80001dda:	00022617          	auipc	a2,0x22
    80001dde:	f0e60613          	addi	a2,a2,-242 # 80023ce8 <.L__unnamed_34>
    80001de2:	02100593          	li	a1,33
    80001de6:	0001f097          	auipc	ra,0x1f
    80001dea:	ee4080e7          	jalr	-284(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E:

0000000080001df0 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E>:
    ///     println!("We got back the value: {}!", val_back);
    /// }
    /// ```
    #[stable(feature = "ptr_as_ref", since = "1.9.0")]
    #[inline]
    pub unsafe fn as_ref<'a>(self) -> Option<&'a T> {
    80001df0:	7179                	addi	sp,sp,-48
    80001df2:	f406                	sd	ra,40(sp)
    80001df4:	f02a                	sd	a0,32(sp)
        // SAFETY: the caller must guarantee that `self` is valid
        // for a reference if it isn't null.
        if self.is_null() { None } else { unsafe { Some(&*self) } }
    80001df6:	e82a                	sd	a0,16(sp)
    80001df8:	00000097          	auipc	ra,0x0
    80001dfc:	02a080e7          	jalr	42(ra) # 80001e22 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4d803be58c5cc0f3E>
    80001e00:	e42a                	sd	a0,8(sp)
    80001e02:	a009                	j	80001e04 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E+0x14>
    80001e04:	4501                	li	a0,0
    80001e06:	65a2                	ld	a1,8(sp)
    80001e08:	00a58663          	beq	a1,a0,80001e14 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E+0x24>
    80001e0c:	a009                	j	80001e0e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E+0x1e>
    80001e0e:	4501                	li	a0,0
    80001e10:	ec2a                	sd	a0,24(sp)
    80001e12:	a021                	j	80001e1a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E+0x2a>
    80001e14:	6542                	ld	a0,16(sp)
    80001e16:	ec2a                	sd	a0,24(sp)
    80001e18:	a009                	j	80001e1a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E+0x2a>
    }
    80001e1a:	6562                	ld	a0,24(sp)
    80001e1c:	70a2                	ld	ra,40(sp)
    80001e1e:	6145                	addi	sp,sp,48
    80001e20:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4d803be58c5cc0f3E:

0000000080001e22 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4d803be58c5cc0f3E>:
    pub const fn is_null(self) -> bool {
    80001e22:	7179                	addi	sp,sp,-48
    80001e24:	f406                	sd	ra,40(sp)
    80001e26:	f02a                	sd	a0,32(sp)
        (self as *const u8).guaranteed_eq(null())
    80001e28:	ec2a                	sd	a0,24(sp)
    80001e2a:	a009                	j	80001e2c <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4d803be58c5cc0f3E+0xa>
    80001e2c:	4501                	li	a0,0
    80001e2e:	65e2                	ld	a1,24(sp)
    80001e30:	e82a                	sd	a0,16(sp)
    80001e32:	852e                	mv	a0,a1
    80001e34:	65c2                	ld	a1,16(sp)
    80001e36:	0001f097          	auipc	ra,0x1f
    80001e3a:	b3c080e7          	jalr	-1220(ra) # 80020972 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h99e80ad9ba777ad7E>
    80001e3e:	e42a                	sd	a0,8(sp)
    80001e40:	a009                	j	80001e42 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4d803be58c5cc0f3E+0x20>
    }
    80001e42:	6522                	ld	a0,8(sp)
    80001e44:	70a2                	ld	ra,40(sp)
    80001e46:	6145                	addi	sp,sp,48
    80001e48:	8082                	ret

Disassembly of section .text._ZN5alloc7raw_vec11alloc_guard17h9a08200daba46f5bE:

0000000080001e4a <_ZN5alloc7raw_vec11alloc_guard17h9a08200daba46f5bE>:
// `> isize::MAX` bytes will surely fail. On 32-bit and 16-bit we need to add
// an extra guard for this in case we're running on a platform which can use
// all 4GB in user-space, e.g., PAE or x32.

#[inline]
fn alloc_guard(alloc_size: usize) -> Result<(), TryReserveError> {
    80001e4a:	1101                	addi	sp,sp,-32
    80001e4c:	ec2e                	sd	a1,24(sp)
    80001e4e:	4585                	li	a1,1
    if usize::BITS < 64 && alloc_size > isize::MAX as usize {
    80001e50:	e02a                	sd	a0,0(sp)
    80001e52:	e999                	bnez	a1,80001e68 <_ZN5alloc7raw_vec11alloc_guard17h9a08200daba46f5bE+0x1e>
    80001e54:	a009                	j	80001e56 <_ZN5alloc7raw_vec11alloc_guard17h9a08200daba46f5bE+0xc>
    80001e56:	4501                	li	a0,0
        Err(CapacityOverflow)
    80001e58:	e82a                	sd	a0,16(sp)
    80001e5a:	65a2                	ld	a1,8(sp)
    80001e5c:	6602                	ld	a2,0(sp)
    80001e5e:	e60c                	sd	a1,8(a2)
    80001e60:	ea08                	sd	a0,16(a2)
    80001e62:	4505                	li	a0,1
    80001e64:	e208                	sd	a0,0(a2)
    if usize::BITS < 64 && alloc_size > isize::MAX as usize {
    80001e66:	a029                	j	80001e70 <_ZN5alloc7raw_vec11alloc_guard17h9a08200daba46f5bE+0x26>
    80001e68:	4501                	li	a0,0
    } else {
        Ok(())
    80001e6a:	6582                	ld	a1,0(sp)
    80001e6c:	e188                	sd	a0,0(a1)
    if usize::BITS < 64 && alloc_size > isize::MAX as usize {
    80001e6e:	a009                	j	80001e70 <_ZN5alloc7raw_vec11alloc_guard17h9a08200daba46f5bE+0x26>
    }
}
    80001e70:	6105                	addi	sp,sp,32
    80001e72:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h21adf75b002a4242E:

0000000080001e74 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h21adf75b002a4242E>:
    ///
    /// # Safety
    ///
    /// `ptr` must be non-null.
    #[inline]
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001e74:	1101                	addi	sp,sp,-32
    80001e76:	ec2a                	sd	a0,24(sp)
        // SAFETY: the caller must guarantee that `ptr` is non-null.
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001e78:	e42a                	sd	a0,8(sp)
    }
    80001e7a:	6105                	addi	sp,sp,32
    80001e7c:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2f8c923d52c3c5a7E:

0000000080001e7e <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2f8c923d52c3c5a7E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001e7e:	1101                	addi	sp,sp,-32
    80001e80:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001e82:	e42a                	sd	a0,8(sp)
    }
    80001e84:	6105                	addi	sp,sp,32
    80001e86:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h3353e712eb2a3ffaE:

0000000080001e88 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h3353e712eb2a3ffaE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001e88:	1101                	addi	sp,sp,-32
    80001e8a:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001e8c:	e42a                	sd	a0,8(sp)
    }
    80001e8e:	6105                	addi	sp,sp,32
    80001e90:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h39f675013525d82dE:

0000000080001e92 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h39f675013525d82dE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001e92:	1101                	addi	sp,sp,-32
    80001e94:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001e96:	e42a                	sd	a0,8(sp)
    }
    80001e98:	6105                	addi	sp,sp,32
    80001e9a:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h4308fef04503f178E:

0000000080001e9c <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h4308fef04503f178E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001e9c:	1101                	addi	sp,sp,-32
    80001e9e:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001ea0:	e42a                	sd	a0,8(sp)
    }
    80001ea2:	6105                	addi	sp,sp,32
    80001ea4:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h924794941152a721E:

0000000080001ea6 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h924794941152a721E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001ea6:	1101                	addi	sp,sp,-32
    80001ea8:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001eaa:	e42a                	sd	a0,8(sp)
    }
    80001eac:	6105                	addi	sp,sp,32
    80001eae:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17ha7bd729a3c416b65E:

0000000080001eb0 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17ha7bd729a3c416b65E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001eb0:	1101                	addi	sp,sp,-32
    80001eb2:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001eb4:	e42a                	sd	a0,8(sp)
    }
    80001eb6:	6105                	addi	sp,sp,32
    80001eb8:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbebc9bb9f86d3ce3E:

0000000080001eba <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbebc9bb9f86d3ce3E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001eba:	1101                	addi	sp,sp,-32
    80001ebc:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001ebe:	e42a                	sd	a0,8(sp)
    }
    80001ec0:	6105                	addi	sp,sp,32
    80001ec2:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hccef918f8b6125c8E:

0000000080001ec4 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hccef918f8b6125c8E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001ec4:	1101                	addi	sp,sp,-32
    80001ec6:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001ec8:	e42a                	sd	a0,8(sp)
    }
    80001eca:	6105                	addi	sp,sp,32
    80001ecc:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE:

0000000080001ece <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001ece:	1101                	addi	sp,sp,-32
    80001ed0:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001ed2:	e42a                	sd	a0,8(sp)
    }
    80001ed4:	6105                	addi	sp,sp,32
    80001ed6:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17heee931e2ec7501e7E:

0000000080001ed8 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17heee931e2ec7501e7E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80001ed8:	1101                	addi	sp,sp,-32
    80001eda:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: ptr as _, _marker: PhantomData } }
    80001edc:	e42a                	sd	a0,8(sp)
    }
    80001ede:	6105                	addi	sp,sp,32
    80001ee0:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h0c1984262f2d00bfE:

0000000080001ee2 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h0c1984262f2d00bfE>:
        unsafe { &mut *self.as_ptr() }
    }

    /// Casts to a pointer of another type.
    #[inline]
    pub const fn cast<U>(self) -> Unique<U> {
    80001ee2:	1101                	addi	sp,sp,-32
    80001ee4:	ec06                	sd	ra,24(sp)
    80001ee6:	e82a                	sd	a0,16(sp)
        // SAFETY: Unique::new_unchecked() creates a new unique and needs
        // the given pointer to not be null.
        // Since we are passing self as a pointer, it cannot be null.
        unsafe { Unique::new_unchecked(self.as_ptr() as *mut U) }
    80001ee8:	00000097          	auipc	ra,0x0
    80001eec:	0f2080e7          	jalr	242(ra) # 80001fda <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf7b0492237203680E>
    80001ef0:	e42a                	sd	a0,8(sp)
    80001ef2:	a009                	j	80001ef4 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h0c1984262f2d00bfE+0x12>
    80001ef4:	6522                	ld	a0,8(sp)
    80001ef6:	00000097          	auipc	ra,0x0
    80001efa:	fd8080e7          	jalr	-40(ra) # 80001ece <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE>
    80001efe:	e02a                	sd	a0,0(sp)
    80001f00:	a009                	j	80001f02 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h0c1984262f2d00bfE+0x20>
    }
    80001f02:	6502                	ld	a0,0(sp)
    80001f04:	60e2                	ld	ra,24(sp)
    80001f06:	6105                	addi	sp,sp,32
    80001f08:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5d32a83f44028c26E:

0000000080001f0a <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5d32a83f44028c26E>:
    pub const fn cast<U>(self) -> Unique<U> {
    80001f0a:	1101                	addi	sp,sp,-32
    80001f0c:	ec06                	sd	ra,24(sp)
    80001f0e:	e82a                	sd	a0,16(sp)
        unsafe { Unique::new_unchecked(self.as_ptr() as *mut U) }
    80001f10:	00000097          	auipc	ra,0x0
    80001f14:	0aa080e7          	jalr	170(ra) # 80001fba <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9897251b4a8edbceE>
    80001f18:	e42a                	sd	a0,8(sp)
    80001f1a:	a009                	j	80001f1c <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5d32a83f44028c26E+0x12>
    80001f1c:	6522                	ld	a0,8(sp)
    80001f1e:	00000097          	auipc	ra,0x0
    80001f22:	fb0080e7          	jalr	-80(ra) # 80001ece <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE>
    80001f26:	e02a                	sd	a0,0(sp)
    80001f28:	a009                	j	80001f2a <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5d32a83f44028c26E+0x20>
    }
    80001f2a:	6502                	ld	a0,0(sp)
    80001f2c:	60e2                	ld	ra,24(sp)
    80001f2e:	6105                	addi	sp,sp,32
    80001f30:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hdc1230251483f2a6E:

0000000080001f32 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hdc1230251483f2a6E>:
    pub const fn cast<U>(self) -> Unique<U> {
    80001f32:	1101                	addi	sp,sp,-32
    80001f34:	ec06                	sd	ra,24(sp)
    80001f36:	e82a                	sd	a0,16(sp)
        unsafe { Unique::new_unchecked(self.as_ptr() as *mut U) }
    80001f38:	00000097          	auipc	ra,0x0
    80001f3c:	07a080e7          	jalr	122(ra) # 80001fb2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6ea3c7c3506344aeE>
    80001f40:	e42a                	sd	a0,8(sp)
    80001f42:	a009                	j	80001f44 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hdc1230251483f2a6E+0x12>
    80001f44:	6522                	ld	a0,8(sp)
    80001f46:	00000097          	auipc	ra,0x0
    80001f4a:	f88080e7          	jalr	-120(ra) # 80001ece <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE>
    80001f4e:	e02a                	sd	a0,0(sp)
    80001f50:	a009                	j	80001f52 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hdc1230251483f2a6E+0x20>
    }
    80001f52:	6502                	ld	a0,0(sp)
    80001f54:	60e2                	ld	ra,24(sp)
    80001f56:	6105                	addi	sp,sp,32
    80001f58:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf6d9149f6c36667bE:

0000000080001f5a <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf6d9149f6c36667bE>:
    pub const fn cast<U>(self) -> Unique<U> {
    80001f5a:	1101                	addi	sp,sp,-32
    80001f5c:	ec06                	sd	ra,24(sp)
    80001f5e:	e82a                	sd	a0,16(sp)
        unsafe { Unique::new_unchecked(self.as_ptr() as *mut U) }
    80001f60:	00000097          	auipc	ra,0x0
    80001f64:	06a080e7          	jalr	106(ra) # 80001fca <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdbbd95956b998284E>
    80001f68:	e42a                	sd	a0,8(sp)
    80001f6a:	a009                	j	80001f6c <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf6d9149f6c36667bE+0x12>
    80001f6c:	6522                	ld	a0,8(sp)
    80001f6e:	00000097          	auipc	ra,0x0
    80001f72:	f60080e7          	jalr	-160(ra) # 80001ece <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE>
    80001f76:	e02a                	sd	a0,0(sp)
    80001f78:	a009                	j	80001f7a <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf6d9149f6c36667bE+0x20>
    }
    80001f7a:	6502                	ld	a0,0(sp)
    80001f7c:	60e2                	ld	ra,24(sp)
    80001f7e:	6105                	addi	sp,sp,32
    80001f80:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h0386423813171eb0E:

0000000080001f82 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h0386423813171eb0E>:
    pub const fn as_ptr(self) -> *mut T {
    80001f82:	1141                	addi	sp,sp,-16
    80001f84:	e42a                	sd	a0,8(sp)
    }
    80001f86:	0141                	addi	sp,sp,16
    80001f88:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2181edd212a7ee9aE:

0000000080001f8a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2181edd212a7ee9aE>:
    pub const fn as_ptr(self) -> *mut T {
    80001f8a:	1141                	addi	sp,sp,-16
    80001f8c:	e42a                	sd	a0,8(sp)
    }
    80001f8e:	0141                	addi	sp,sp,16
    80001f90:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h468cf24034a9739bE:

0000000080001f92 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h468cf24034a9739bE>:
    pub const fn as_ptr(self) -> *mut T {
    80001f92:	1141                	addi	sp,sp,-16
    80001f94:	e42a                	sd	a0,8(sp)
    }
    80001f96:	0141                	addi	sp,sp,16
    80001f98:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h48c57f5ee2020847E:

0000000080001f9a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h48c57f5ee2020847E>:
    pub const fn as_ptr(self) -> *mut T {
    80001f9a:	1141                	addi	sp,sp,-16
    80001f9c:	e42a                	sd	a0,8(sp)
    }
    80001f9e:	0141                	addi	sp,sp,16
    80001fa0:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h56386e93ea326343E:

0000000080001fa2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h56386e93ea326343E>:
    pub const fn as_ptr(self) -> *mut T {
    80001fa2:	1141                	addi	sp,sp,-16
    80001fa4:	e42a                	sd	a0,8(sp)
    }
    80001fa6:	0141                	addi	sp,sp,16
    80001fa8:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6813dc49e09f1909E:

0000000080001faa <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6813dc49e09f1909E>:
    pub const fn as_ptr(self) -> *mut T {
    80001faa:	1141                	addi	sp,sp,-16
    80001fac:	e42a                	sd	a0,8(sp)
    }
    80001fae:	0141                	addi	sp,sp,16
    80001fb0:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6ea3c7c3506344aeE:

0000000080001fb2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6ea3c7c3506344aeE>:
    pub const fn as_ptr(self) -> *mut T {
    80001fb2:	1141                	addi	sp,sp,-16
    80001fb4:	e42a                	sd	a0,8(sp)
    }
    80001fb6:	0141                	addi	sp,sp,16
    80001fb8:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9897251b4a8edbceE:

0000000080001fba <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9897251b4a8edbceE>:
    pub const fn as_ptr(self) -> *mut T {
    80001fba:	1141                	addi	sp,sp,-16
    80001fbc:	e42a                	sd	a0,8(sp)
    }
    80001fbe:	0141                	addi	sp,sp,16
    80001fc0:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha9257223563d9ec5E:

0000000080001fc2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha9257223563d9ec5E>:
    pub const fn as_ptr(self) -> *mut T {
    80001fc2:	1141                	addi	sp,sp,-16
    80001fc4:	e42a                	sd	a0,8(sp)
    }
    80001fc6:	0141                	addi	sp,sp,16
    80001fc8:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdbbd95956b998284E:

0000000080001fca <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdbbd95956b998284E>:
    pub const fn as_ptr(self) -> *mut T {
    80001fca:	1141                	addi	sp,sp,-16
    80001fcc:	e42a                	sd	a0,8(sp)
    }
    80001fce:	0141                	addi	sp,sp,16
    80001fd0:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf41eaba29410c82aE:

0000000080001fd2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf41eaba29410c82aE>:
    pub const fn as_ptr(self) -> *mut T {
    80001fd2:	1141                	addi	sp,sp,-16
    80001fd4:	e42a                	sd	a0,8(sp)
    }
    80001fd6:	0141                	addi	sp,sp,16
    80001fd8:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf7b0492237203680E:

0000000080001fda <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf7b0492237203680E>:
    pub const fn as_ptr(self) -> *mut T {
    80001fda:	1141                	addi	sp,sp,-16
    80001fdc:	e42a                	sd	a0,8(sp)
    }
    80001fde:	0141                	addi	sp,sp,16
    80001fe0:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h79218c7991a833abE:

0000000080001fe2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h79218c7991a833abE>:
    pub unsafe fn as_ref(&self) -> &T {
    80001fe2:	1101                	addi	sp,sp,-32
    80001fe4:	ec06                	sd	ra,24(sp)
    80001fe6:	e82a                	sd	a0,16(sp)
        unsafe { &*self.as_ptr() }
    80001fe8:	6108                	ld	a0,0(a0)
    80001fea:	00000097          	auipc	ra,0x0
    80001fee:	fe0080e7          	jalr	-32(ra) # 80001fca <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdbbd95956b998284E>
    80001ff2:	e42a                	sd	a0,8(sp)
    80001ff4:	a009                	j	80001ff6 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h79218c7991a833abE+0x14>
    }
    80001ff6:	6522                	ld	a0,8(sp)
    80001ff8:	60e2                	ld	ra,24(sp)
    80001ffa:	6105                	addi	sp,sp,32
    80001ffc:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h8e2fe1161ed022c7E:

0000000080001ffe <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h8e2fe1161ed022c7E>:
    pub unsafe fn as_ref(&self) -> &T {
    80001ffe:	1101                	addi	sp,sp,-32
    80002000:	ec06                	sd	ra,24(sp)
    80002002:	e82a                	sd	a0,16(sp)
        unsafe { &*self.as_ptr() }
    80002004:	6108                	ld	a0,0(a0)
    80002006:	00000097          	auipc	ra,0x0
    8000200a:	fac080e7          	jalr	-84(ra) # 80001fb2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6ea3c7c3506344aeE>
    8000200e:	e42a                	sd	a0,8(sp)
    80002010:	a009                	j	80002012 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h8e2fe1161ed022c7E+0x14>
    }
    80002012:	6522                	ld	a0,8(sp)
    80002014:	60e2                	ld	ra,24(sp)
    80002016:	6105                	addi	sp,sp,32
    80002018:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hee41a35c2ca44304E:

000000008000201a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hee41a35c2ca44304E>:
    pub unsafe fn as_ref(&self) -> &T {
    8000201a:	1101                	addi	sp,sp,-32
    8000201c:	ec06                	sd	ra,24(sp)
    8000201e:	e82a                	sd	a0,16(sp)
        unsafe { &*self.as_ptr() }
    80002020:	6108                	ld	a0,0(a0)
    80002022:	00000097          	auipc	ra,0x0
    80002026:	fb8080e7          	jalr	-72(ra) # 80001fda <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf7b0492237203680E>
    8000202a:	e42a                	sd	a0,8(sp)
    8000202c:	a009                	j	8000202e <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hee41a35c2ca44304E+0x14>
    }
    8000202e:	6522                	ld	a0,8(sp)
    80002030:	60e2                	ld	ra,24(sp)
    80002032:	6105                	addi	sp,sp,32
    80002034:	8082                	ret

Disassembly of section .text._ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he5815a65a6879de1E:

0000000080002036 <_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he5815a65a6879de1E>:
    pub const fn dangling() -> Self {
    80002036:	1101                	addi	sp,sp,-32
    80002038:	ec06                	sd	ra,24(sp)
    8000203a:	4505                	li	a0,1
#[inline(always)]
#[stable(feature = "rust1", since = "1.0.0")]
#[rustc_promotable]
#[rustc_const_stable(feature = "const_align_of", since = "1.32.0")]
pub const fn align_of<T>() -> usize {
    intrinsics::min_align_of::<T>()
    8000203c:	e82a                	sd	a0,16(sp)
        unsafe { Unique::new_unchecked(mem::align_of::<T>() as *mut T) }
    8000203e:	e42a                	sd	a0,8(sp)
    80002040:	a009                	j	80002042 <_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he5815a65a6879de1E+0xc>
    80002042:	6522                	ld	a0,8(sp)
    80002044:	00000097          	auipc	ra,0x0
    80002048:	e8a080e7          	jalr	-374(ra) # 80001ece <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE>
    8000204c:	e02a                	sd	a0,0(sp)
    8000204e:	a009                	j	80002050 <_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he5815a65a6879de1E+0x1a>
    }
    80002050:	6502                	ld	a0,0(sp)
    80002052:	60e2                	ld	ra,24(sp)
    80002054:	6105                	addi	sp,sp,32
    80002056:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he3a5d381a0afee04E:

0000000080002058 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he3a5d381a0afee04E>:
#[stable(feature = "rust1", since = "1.0.0")]
impl<T, U> Into<U> for T
where
    U: From<T>,
{
    fn into(self) -> U {
    80002058:	1101                	addi	sp,sp,-32
    8000205a:	ec06                	sd	ra,24(sp)
    8000205c:	e82a                	sd	a0,16(sp)
        U::from(self)
    8000205e:	00003097          	auipc	ra,0x3
    80002062:	9da080e7          	jalr	-1574(ra) # 80004a38 <_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h3fad231efc23c2a5E>
    80002066:	e42a                	sd	a0,8(sp)
    80002068:	a009                	j	8000206a <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he3a5d381a0afee04E+0x12>
    }
    8000206a:	6522                	ld	a0,8(sp)
    8000206c:	60e2                	ld	ra,24(sp)
    8000206e:	6105                	addi	sp,sp,32
    80002070:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h006907329984ac95E:

0000000080002072 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h006907329984ac95E>:
}

#[unstable(feature = "ptr_internals", issue = "none")]
impl<T: ?Sized> From<&mut T> for Unique<T> {
    #[inline]
    fn from(reference: &mut T) -> Self {
    80002072:	1101                	addi	sp,sp,-32
    80002074:	ec2a                	sd	a0,24(sp)
        // SAFETY: A mutable reference cannot be null
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    80002076:	e42a                	sd	a0,8(sp)
    }
    80002078:	6105                	addi	sp,sp,32
    8000207a:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h51d1f1221f20c5f4E:

000000008000207c <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h51d1f1221f20c5f4E>:
    fn from(reference: &mut T) -> Self {
    8000207c:	1101                	addi	sp,sp,-32
    8000207e:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    80002080:	e42a                	sd	a0,8(sp)
    }
    80002082:	6105                	addi	sp,sp,32
    80002084:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h9edc2f33a0d276cbE:

0000000080002086 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h9edc2f33a0d276cbE>:
    fn from(reference: &mut T) -> Self {
    80002086:	1101                	addi	sp,sp,-32
    80002088:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    8000208a:	e42a                	sd	a0,8(sp)
    }
    8000208c:	6105                	addi	sp,sp,32
    8000208e:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hb0bac57ce42b758fE:

0000000080002090 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hb0bac57ce42b758fE>:
    fn from(reference: &mut T) -> Self {
    80002090:	1101                	addi	sp,sp,-32
    80002092:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    80002094:	e42a                	sd	a0,8(sp)
    }
    80002096:	6105                	addi	sp,sp,32
    80002098:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc2b9671993f6f790E:

000000008000209a <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc2b9671993f6f790E>:
    fn from(reference: &mut T) -> Self {
    8000209a:	1101                	addi	sp,sp,-32
    8000209c:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    8000209e:	e42a                	sd	a0,8(sp)
    }
    800020a0:	6105                	addi	sp,sp,32
    800020a2:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc4659dfa449ae3d8E:

00000000800020a4 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc4659dfa449ae3d8E>:
    fn from(reference: &mut T) -> Self {
    800020a4:	1101                	addi	sp,sp,-32
    800020a6:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    800020a8:	e42a                	sd	a0,8(sp)
    }
    800020aa:	6105                	addi	sp,sp,32
    800020ac:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hf0a72ea7b4162721E:

00000000800020ae <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hf0a72ea7b4162721E>:
    fn from(reference: &mut T) -> Self {
    800020ae:	1101                	addi	sp,sp,-32
    800020b0:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    800020b2:	e42a                	sd	a0,8(sp)
    }
    800020b4:	6105                	addi	sp,sp,32
    800020b6:	8082                	ret

Disassembly of section .text._ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hfda33f9aa45effc8E:

00000000800020b8 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hfda33f9aa45effc8E>:
    fn from(reference: &mut T) -> Self {
    800020b8:	1101                	addi	sp,sp,-32
    800020ba:	ec2a                	sd	a0,24(sp)
        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }
    800020bc:	e42a                	sd	a0,8(sp)
    }
    800020be:	6105                	addi	sp,sp,32
    800020c0:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h1ea99168cdebb0e1E:

00000000800020c2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h1ea99168cdebb0e1E>:
            data: UnsafeCell::new(data)
        };
        lock
    }

    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    800020c2:	7171                	addi	sp,sp,-176
    800020c4:	f506                	sd	ra,168(sp)
    800020c6:	e0aa                	sd	a0,64(sp)

        push_off();
    800020c8:	0001c097          	auipc	ra,0x1c
    800020cc:	aec080e7          	jalr	-1300(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    800020d0:	a009                	j	800020d2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h1ea99168cdebb0e1E+0x10>
        if self.holding() {
    800020d2:	6506                	ld	a0,64(sp)
    800020d4:	00001097          	auipc	ra,0x1
    800020d8:	4c4080e7          	jalr	1220(ra) # 80003598 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE>
    800020dc:	fc2a                	sd	a0,56(sp)
    800020de:	a009                	j	800020e0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h1ea99168cdebb0e1E+0x1e>
    800020e0:	4501                	li	a0,0
    800020e2:	75e2                	ld	a1,56(sp)
    800020e4:	02a58163          	beq	a1,a0,80002106 <.LBB0_15+0x16>
    800020e8:	a009                	j	800020ea <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h1ea99168cdebb0e1E+0x28>
            panic!("spinlock {} acquire", self.name);
    800020ea:	6506                	ld	a0,64(sp)
    800020ec:	e92a                	sd	a0,144(sp)
    800020ee:	f12a                	sd	a0,160(sp)

00000000800020f0 <.LBB0_15>:
    800020f0:	00006597          	auipc	a1,0x6
    800020f4:	c9258593          	addi	a1,a1,-878 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800020f8:	00006097          	auipc	ra,0x6
    800020fc:	d3e080e7          	jalr	-706(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002100:	f82a                	sd	a0,48(sp)
    80002102:	f42e                	sd	a1,40(sp)
    80002104:	a011                	j	80002108 <.LBB0_15+0x18>
        }
        
        while self.locked.swap(true, Ordering::Acquire){
    80002106:	a825                	j	8000213e <.LBB0_17+0x14>
            panic!("spinlock {} acquire", self.name);
    80002108:	7542                	ld	a0,48(sp)
    8000210a:	e12a                	sd	a0,128(sp)
    8000210c:	75a2                	ld	a1,40(sp)
    8000210e:	e52e                	sd	a1,136(sp)

0000000080002110 <.LBB0_16>:
    80002110:	00022597          	auipc	a1,0x22
    80002114:	cb058593          	addi	a1,a1,-848 # 80023dc0 <.L__unnamed_1>
    80002118:	0888                	addi	a0,sp,80
    8000211a:	4609                	li	a2,2
    8000211c:	0114                	addi	a3,sp,128
    8000211e:	4705                	li	a4,1
    80002120:	00003097          	auipc	ra,0x3
    80002124:	604080e7          	jalr	1540(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002128:	a009                	j	8000212a <.LBB0_17>

000000008000212a <.LBB0_17>:
    8000212a:	00022597          	auipc	a1,0x22
    8000212e:	cce58593          	addi	a1,a1,-818 # 80023df8 <.L__unnamed_2>
    80002132:	0888                	addi	a0,sp,80
    80002134:	0001f097          	auipc	ra,0x1f
    80002138:	c02080e7          	jalr	-1022(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000213c:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    8000213e:	6506                	ld	a0,64(sp)
    80002140:	0561                	addi	a0,a0,24
    80002142:	4589                	li	a1,2
    80002144:	08b10f23          	sb	a1,158(sp)
    80002148:	4605                	li	a2,1
    8000214a:	f02e                	sd	a1,32(sp)
    8000214c:	85b2                	mv	a1,a2
    8000214e:	7602                	ld	a2,32(sp)
    80002150:	0000b097          	auipc	ra,0xb
    80002154:	e26080e7          	jalr	-474(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    80002158:	ec2a                	sd	a0,24(sp)
    8000215a:	a009                	j	8000215c <.LBB0_17+0x32>
    8000215c:	6562                	ld	a0,24(sp)
    8000215e:	e911                	bnez	a0,80002172 <.LBB0_17+0x48>
    80002160:	a009                	j	80002162 <.LBB0_17+0x38>
    80002162:	4511                	li	a0,4
            // Now we signals the processor that it is inside a busy-wait spin-loop 
            spin_loop();
        }
        fence(Ordering::SeqCst);
    80002164:	08a10fa3          	sb	a0,159(sp)
    80002168:	0000b097          	auipc	ra,0xb
    8000216c:	f16080e7          	jalr	-234(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002170:	a039                	j	8000217e <.LBB0_17+0x54>
            spin_loop();
    80002172:	0000c097          	auipc	ra,0xc
    80002176:	bf8080e7          	jalr	-1032(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    8000217a:	a009                	j	8000217c <.LBB0_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    8000217c:	b7c9                	j	8000213e <.LBB0_17+0x14>
        unsafe {
            self.cpu_id.set(cpuid() as isize);
    8000217e:	6506                	ld	a0,64(sp)
    80002180:	0541                	addi	a0,a0,16
    80002182:	e82a                	sd	a0,16(sp)
    80002184:	0001b097          	auipc	ra,0x1b
    80002188:	54c080e7          	jalr	1356(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000218c:	e42a                	sd	a0,8(sp)
    8000218e:	a009                	j	80002190 <.LBB0_17+0x66>
    80002190:	6542                	ld	a0,16(sp)
    80002192:	65a2                	ld	a1,8(sp)
    80002194:	00014097          	auipc	ra,0x14
    80002198:	6de080e7          	jalr	1758(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    8000219c:	a009                	j	8000219e <.LBB0_17+0x74>
        }

        SpinlockGuard{spinlock: &self}
    8000219e:	6506                	ld	a0,64(sp)
    800021a0:	e4aa                	sd	a0,72(sp)
    }
    800021a2:	70aa                	ld	ra,168(sp)
    800021a4:	614d                	addi	sp,sp,176
    800021a6:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE:

00000000800021a8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    800021a8:	7171                	addi	sp,sp,-176
    800021aa:	f506                	sd	ra,168(sp)
    800021ac:	e0aa                	sd	a0,64(sp)
        push_off();
    800021ae:	0001c097          	auipc	ra,0x1c
    800021b2:	a06080e7          	jalr	-1530(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    800021b6:	a009                	j	800021b8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE+0x10>
        if self.holding() {
    800021b8:	6506                	ld	a0,64(sp)
    800021ba:	00001097          	auipc	ra,0x1
    800021be:	1d6080e7          	jalr	470(ra) # 80003390 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE>
    800021c2:	fc2a                	sd	a0,56(sp)
    800021c4:	a009                	j	800021c6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE+0x1e>
    800021c6:	4501                	li	a0,0
    800021c8:	75e2                	ld	a1,56(sp)
    800021ca:	02a58163          	beq	a1,a0,800021ec <.LBB1_15+0x16>
    800021ce:	a009                	j	800021d0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE+0x28>
            panic!("spinlock {} acquire", self.name);
    800021d0:	6506                	ld	a0,64(sp)
    800021d2:	e92a                	sd	a0,144(sp)
    800021d4:	f12a                	sd	a0,160(sp)

00000000800021d6 <.LBB1_15>:
    800021d6:	00006597          	auipc	a1,0x6
    800021da:	bac58593          	addi	a1,a1,-1108 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800021de:	00006097          	auipc	ra,0x6
    800021e2:	c58080e7          	jalr	-936(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    800021e6:	f82a                	sd	a0,48(sp)
    800021e8:	f42e                	sd	a1,40(sp)
    800021ea:	a011                	j	800021ee <.LBB1_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    800021ec:	a825                	j	80002224 <.LBB1_17+0x14>
            panic!("spinlock {} acquire", self.name);
    800021ee:	7542                	ld	a0,48(sp)
    800021f0:	e12a                	sd	a0,128(sp)
    800021f2:	75a2                	ld	a1,40(sp)
    800021f4:	e52e                	sd	a1,136(sp)

00000000800021f6 <.LBB1_16>:
    800021f6:	00022597          	auipc	a1,0x22
    800021fa:	bca58593          	addi	a1,a1,-1078 # 80023dc0 <.L__unnamed_1>
    800021fe:	0888                	addi	a0,sp,80
    80002200:	4609                	li	a2,2
    80002202:	0114                	addi	a3,sp,128
    80002204:	4705                	li	a4,1
    80002206:	00003097          	auipc	ra,0x3
    8000220a:	51e080e7          	jalr	1310(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000220e:	a009                	j	80002210 <.LBB1_17>

0000000080002210 <.LBB1_17>:
    80002210:	00022597          	auipc	a1,0x22
    80002214:	be858593          	addi	a1,a1,-1048 # 80023df8 <.L__unnamed_2>
    80002218:	0888                	addi	a0,sp,80
    8000221a:	0001f097          	auipc	ra,0x1f
    8000221e:	b1c080e7          	jalr	-1252(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002222:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    80002224:	6506                	ld	a0,64(sp)
    80002226:	0561                	addi	a0,a0,24
    80002228:	4589                	li	a1,2
    8000222a:	08b10f23          	sb	a1,158(sp)
    8000222e:	4605                	li	a2,1
    80002230:	f02e                	sd	a1,32(sp)
    80002232:	85b2                	mv	a1,a2
    80002234:	7602                	ld	a2,32(sp)
    80002236:	0000b097          	auipc	ra,0xb
    8000223a:	d40080e7          	jalr	-704(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    8000223e:	ec2a                	sd	a0,24(sp)
    80002240:	a009                	j	80002242 <.LBB1_17+0x32>
    80002242:	6562                	ld	a0,24(sp)
    80002244:	e911                	bnez	a0,80002258 <.LBB1_17+0x48>
    80002246:	a009                	j	80002248 <.LBB1_17+0x38>
    80002248:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    8000224a:	08a10fa3          	sb	a0,159(sp)
    8000224e:	0000b097          	auipc	ra,0xb
    80002252:	e30080e7          	jalr	-464(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002256:	a039                	j	80002264 <.LBB1_17+0x54>
            spin_loop();
    80002258:	0000c097          	auipc	ra,0xc
    8000225c:	b12080e7          	jalr	-1262(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    80002260:	a009                	j	80002262 <.LBB1_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    80002262:	b7c9                	j	80002224 <.LBB1_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    80002264:	6506                	ld	a0,64(sp)
    80002266:	0541                	addi	a0,a0,16
    80002268:	e82a                	sd	a0,16(sp)
    8000226a:	0001b097          	auipc	ra,0x1b
    8000226e:	466080e7          	jalr	1126(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80002272:	e42a                	sd	a0,8(sp)
    80002274:	a009                	j	80002276 <.LBB1_17+0x66>
    80002276:	6542                	ld	a0,16(sp)
    80002278:	65a2                	ld	a1,8(sp)
    8000227a:	00014097          	auipc	ra,0x14
    8000227e:	5f8080e7          	jalr	1528(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002282:	a009                	j	80002284 <.LBB1_17+0x74>
        SpinlockGuard{spinlock: &self}
    80002284:	6506                	ld	a0,64(sp)
    80002286:	e4aa                	sd	a0,72(sp)
    }
    80002288:	70aa                	ld	ra,168(sp)
    8000228a:	614d                	addi	sp,sp,176
    8000228c:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h40045d76933e66b9E:

000000008000228e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h40045d76933e66b9E>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    8000228e:	7171                	addi	sp,sp,-176
    80002290:	f506                	sd	ra,168(sp)
    80002292:	e0aa                	sd	a0,64(sp)
        push_off();
    80002294:	0001c097          	auipc	ra,0x1c
    80002298:	920080e7          	jalr	-1760(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    8000229c:	a009                	j	8000229e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h40045d76933e66b9E+0x10>
        if self.holding() {
    8000229e:	6506                	ld	a0,64(sp)
    800022a0:	00001097          	auipc	ra,0x1
    800022a4:	47e080e7          	jalr	1150(ra) # 8000371e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E>
    800022a8:	fc2a                	sd	a0,56(sp)
    800022aa:	a009                	j	800022ac <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h40045d76933e66b9E+0x1e>
    800022ac:	4501                	li	a0,0
    800022ae:	75e2                	ld	a1,56(sp)
    800022b0:	02a58163          	beq	a1,a0,800022d2 <.LBB2_15+0x16>
    800022b4:	a009                	j	800022b6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h40045d76933e66b9E+0x28>
            panic!("spinlock {} acquire", self.name);
    800022b6:	6506                	ld	a0,64(sp)
    800022b8:	e92a                	sd	a0,144(sp)
    800022ba:	f12a                	sd	a0,160(sp)

00000000800022bc <.LBB2_15>:
    800022bc:	00006597          	auipc	a1,0x6
    800022c0:	ac658593          	addi	a1,a1,-1338 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800022c4:	00006097          	auipc	ra,0x6
    800022c8:	b72080e7          	jalr	-1166(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    800022cc:	f82a                	sd	a0,48(sp)
    800022ce:	f42e                	sd	a1,40(sp)
    800022d0:	a011                	j	800022d4 <.LBB2_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    800022d2:	a825                	j	8000230a <.LBB2_17+0x14>
            panic!("spinlock {} acquire", self.name);
    800022d4:	7542                	ld	a0,48(sp)
    800022d6:	e12a                	sd	a0,128(sp)
    800022d8:	75a2                	ld	a1,40(sp)
    800022da:	e52e                	sd	a1,136(sp)

00000000800022dc <.LBB2_16>:
    800022dc:	00022597          	auipc	a1,0x22
    800022e0:	ae458593          	addi	a1,a1,-1308 # 80023dc0 <.L__unnamed_1>
    800022e4:	0888                	addi	a0,sp,80
    800022e6:	4609                	li	a2,2
    800022e8:	0114                	addi	a3,sp,128
    800022ea:	4705                	li	a4,1
    800022ec:	00003097          	auipc	ra,0x3
    800022f0:	438080e7          	jalr	1080(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800022f4:	a009                	j	800022f6 <.LBB2_17>

00000000800022f6 <.LBB2_17>:
    800022f6:	00022597          	auipc	a1,0x22
    800022fa:	b0258593          	addi	a1,a1,-1278 # 80023df8 <.L__unnamed_2>
    800022fe:	0888                	addi	a0,sp,80
    80002300:	0001f097          	auipc	ra,0x1f
    80002304:	a36080e7          	jalr	-1482(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002308:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    8000230a:	6506                	ld	a0,64(sp)
    8000230c:	0561                	addi	a0,a0,24
    8000230e:	4589                	li	a1,2
    80002310:	08b10f23          	sb	a1,158(sp)
    80002314:	4605                	li	a2,1
    80002316:	f02e                	sd	a1,32(sp)
    80002318:	85b2                	mv	a1,a2
    8000231a:	7602                	ld	a2,32(sp)
    8000231c:	0000b097          	auipc	ra,0xb
    80002320:	c5a080e7          	jalr	-934(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    80002324:	ec2a                	sd	a0,24(sp)
    80002326:	a009                	j	80002328 <.LBB2_17+0x32>
    80002328:	6562                	ld	a0,24(sp)
    8000232a:	e911                	bnez	a0,8000233e <.LBB2_17+0x48>
    8000232c:	a009                	j	8000232e <.LBB2_17+0x38>
    8000232e:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002330:	08a10fa3          	sb	a0,159(sp)
    80002334:	0000b097          	auipc	ra,0xb
    80002338:	d4a080e7          	jalr	-694(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    8000233c:	a039                	j	8000234a <.LBB2_17+0x54>
            spin_loop();
    8000233e:	0000c097          	auipc	ra,0xc
    80002342:	a2c080e7          	jalr	-1492(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    80002346:	a009                	j	80002348 <.LBB2_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    80002348:	b7c9                	j	8000230a <.LBB2_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    8000234a:	6506                	ld	a0,64(sp)
    8000234c:	0541                	addi	a0,a0,16
    8000234e:	e82a                	sd	a0,16(sp)
    80002350:	0001b097          	auipc	ra,0x1b
    80002354:	380080e7          	jalr	896(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80002358:	e42a                	sd	a0,8(sp)
    8000235a:	a009                	j	8000235c <.LBB2_17+0x66>
    8000235c:	6542                	ld	a0,16(sp)
    8000235e:	65a2                	ld	a1,8(sp)
    80002360:	00014097          	auipc	ra,0x14
    80002364:	512080e7          	jalr	1298(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002368:	a009                	j	8000236a <.LBB2_17+0x74>
        SpinlockGuard{spinlock: &self}
    8000236a:	6506                	ld	a0,64(sp)
    8000236c:	e4aa                	sd	a0,72(sp)
    }
    8000236e:	70aa                	ld	ra,168(sp)
    80002370:	614d                	addi	sp,sp,176
    80002372:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE:

0000000080002374 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    80002374:	7171                	addi	sp,sp,-176
    80002376:	f506                	sd	ra,168(sp)
    80002378:	e0aa                	sd	a0,64(sp)
        push_off();
    8000237a:	0001c097          	auipc	ra,0x1c
    8000237e:	83a080e7          	jalr	-1990(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    80002382:	a009                	j	80002384 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE+0x10>
        if self.holding() {
    80002384:	6506                	ld	a0,64(sp)
    80002386:	00001097          	auipc	ra,0x1
    8000238a:	190080e7          	jalr	400(ra) # 80003516 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E>
    8000238e:	fc2a                	sd	a0,56(sp)
    80002390:	a009                	j	80002392 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE+0x1e>
    80002392:	4501                	li	a0,0
    80002394:	75e2                	ld	a1,56(sp)
    80002396:	02a58163          	beq	a1,a0,800023b8 <.LBB3_15+0x16>
    8000239a:	a009                	j	8000239c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE+0x28>
            panic!("spinlock {} acquire", self.name);
    8000239c:	6506                	ld	a0,64(sp)
    8000239e:	e92a                	sd	a0,144(sp)
    800023a0:	f12a                	sd	a0,160(sp)

00000000800023a2 <.LBB3_15>:
    800023a2:	00006597          	auipc	a1,0x6
    800023a6:	9e058593          	addi	a1,a1,-1568 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800023aa:	00006097          	auipc	ra,0x6
    800023ae:	a8c080e7          	jalr	-1396(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    800023b2:	f82a                	sd	a0,48(sp)
    800023b4:	f42e                	sd	a1,40(sp)
    800023b6:	a011                	j	800023ba <.LBB3_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    800023b8:	a825                	j	800023f0 <.LBB3_17+0x14>
            panic!("spinlock {} acquire", self.name);
    800023ba:	7542                	ld	a0,48(sp)
    800023bc:	e12a                	sd	a0,128(sp)
    800023be:	75a2                	ld	a1,40(sp)
    800023c0:	e52e                	sd	a1,136(sp)

00000000800023c2 <.LBB3_16>:
    800023c2:	00022597          	auipc	a1,0x22
    800023c6:	9fe58593          	addi	a1,a1,-1538 # 80023dc0 <.L__unnamed_1>
    800023ca:	0888                	addi	a0,sp,80
    800023cc:	4609                	li	a2,2
    800023ce:	0114                	addi	a3,sp,128
    800023d0:	4705                	li	a4,1
    800023d2:	00003097          	auipc	ra,0x3
    800023d6:	352080e7          	jalr	850(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800023da:	a009                	j	800023dc <.LBB3_17>

00000000800023dc <.LBB3_17>:
    800023dc:	00022597          	auipc	a1,0x22
    800023e0:	a1c58593          	addi	a1,a1,-1508 # 80023df8 <.L__unnamed_2>
    800023e4:	0888                	addi	a0,sp,80
    800023e6:	0001f097          	auipc	ra,0x1f
    800023ea:	950080e7          	jalr	-1712(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    800023ee:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    800023f0:	6506                	ld	a0,64(sp)
    800023f2:	0561                	addi	a0,a0,24
    800023f4:	4589                	li	a1,2
    800023f6:	08b10f23          	sb	a1,158(sp)
    800023fa:	4605                	li	a2,1
    800023fc:	f02e                	sd	a1,32(sp)
    800023fe:	85b2                	mv	a1,a2
    80002400:	7602                	ld	a2,32(sp)
    80002402:	0000b097          	auipc	ra,0xb
    80002406:	b74080e7          	jalr	-1164(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    8000240a:	ec2a                	sd	a0,24(sp)
    8000240c:	a009                	j	8000240e <.LBB3_17+0x32>
    8000240e:	6562                	ld	a0,24(sp)
    80002410:	e911                	bnez	a0,80002424 <.LBB3_17+0x48>
    80002412:	a009                	j	80002414 <.LBB3_17+0x38>
    80002414:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002416:	08a10fa3          	sb	a0,159(sp)
    8000241a:	0000b097          	auipc	ra,0xb
    8000241e:	c64080e7          	jalr	-924(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002422:	a039                	j	80002430 <.LBB3_17+0x54>
            spin_loop();
    80002424:	0000c097          	auipc	ra,0xc
    80002428:	946080e7          	jalr	-1722(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    8000242c:	a009                	j	8000242e <.LBB3_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    8000242e:	b7c9                	j	800023f0 <.LBB3_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    80002430:	6506                	ld	a0,64(sp)
    80002432:	0541                	addi	a0,a0,16
    80002434:	e82a                	sd	a0,16(sp)
    80002436:	0001b097          	auipc	ra,0x1b
    8000243a:	29a080e7          	jalr	666(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000243e:	e42a                	sd	a0,8(sp)
    80002440:	a009                	j	80002442 <.LBB3_17+0x66>
    80002442:	6542                	ld	a0,16(sp)
    80002444:	65a2                	ld	a1,8(sp)
    80002446:	00014097          	auipc	ra,0x14
    8000244a:	42c080e7          	jalr	1068(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    8000244e:	a009                	j	80002450 <.LBB3_17+0x74>
        SpinlockGuard{spinlock: &self}
    80002450:	6506                	ld	a0,64(sp)
    80002452:	e4aa                	sd	a0,72(sp)
    }
    80002454:	70aa                	ld	ra,168(sp)
    80002456:	614d                	addi	sp,sp,176
    80002458:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E:

000000008000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    8000245a:	7171                	addi	sp,sp,-176
    8000245c:	f506                	sd	ra,168(sp)
    8000245e:	e0aa                	sd	a0,64(sp)
        push_off();
    80002460:	0001b097          	auipc	ra,0x1b
    80002464:	754080e7          	jalr	1876(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    80002468:	a009                	j	8000246a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E+0x10>
        if self.holding() {
    8000246a:	6506                	ld	a0,64(sp)
    8000246c:	00001097          	auipc	ra,0x1
    80002470:	230080e7          	jalr	560(ra) # 8000369c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E>
    80002474:	fc2a                	sd	a0,56(sp)
    80002476:	a009                	j	80002478 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E+0x1e>
    80002478:	4501                	li	a0,0
    8000247a:	75e2                	ld	a1,56(sp)
    8000247c:	02a58163          	beq	a1,a0,8000249e <.LBB4_15+0x16>
    80002480:	a009                	j	80002482 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E+0x28>
            panic!("spinlock {} acquire", self.name);
    80002482:	6506                	ld	a0,64(sp)
    80002484:	e92a                	sd	a0,144(sp)
    80002486:	f12a                	sd	a0,160(sp)

0000000080002488 <.LBB4_15>:
    80002488:	00006597          	auipc	a1,0x6
    8000248c:	8fa58593          	addi	a1,a1,-1798 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002490:	00006097          	auipc	ra,0x6
    80002494:	9a6080e7          	jalr	-1626(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002498:	f82a                	sd	a0,48(sp)
    8000249a:	f42e                	sd	a1,40(sp)
    8000249c:	a011                	j	800024a0 <.LBB4_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    8000249e:	a825                	j	800024d6 <.LBB4_17+0x14>
            panic!("spinlock {} acquire", self.name);
    800024a0:	7542                	ld	a0,48(sp)
    800024a2:	e12a                	sd	a0,128(sp)
    800024a4:	75a2                	ld	a1,40(sp)
    800024a6:	e52e                	sd	a1,136(sp)

00000000800024a8 <.LBB4_16>:
    800024a8:	00022597          	auipc	a1,0x22
    800024ac:	91858593          	addi	a1,a1,-1768 # 80023dc0 <.L__unnamed_1>
    800024b0:	0888                	addi	a0,sp,80
    800024b2:	4609                	li	a2,2
    800024b4:	0114                	addi	a3,sp,128
    800024b6:	4705                	li	a4,1
    800024b8:	00003097          	auipc	ra,0x3
    800024bc:	26c080e7          	jalr	620(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800024c0:	a009                	j	800024c2 <.LBB4_17>

00000000800024c2 <.LBB4_17>:
    800024c2:	00022597          	auipc	a1,0x22
    800024c6:	93658593          	addi	a1,a1,-1738 # 80023df8 <.L__unnamed_2>
    800024ca:	0888                	addi	a0,sp,80
    800024cc:	0001f097          	auipc	ra,0x1f
    800024d0:	86a080e7          	jalr	-1942(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    800024d4:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    800024d6:	6506                	ld	a0,64(sp)
    800024d8:	0561                	addi	a0,a0,24
    800024da:	4589                	li	a1,2
    800024dc:	08b10f23          	sb	a1,158(sp)
    800024e0:	4605                	li	a2,1
    800024e2:	f02e                	sd	a1,32(sp)
    800024e4:	85b2                	mv	a1,a2
    800024e6:	7602                	ld	a2,32(sp)
    800024e8:	0000b097          	auipc	ra,0xb
    800024ec:	a8e080e7          	jalr	-1394(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    800024f0:	ec2a                	sd	a0,24(sp)
    800024f2:	a009                	j	800024f4 <.LBB4_17+0x32>
    800024f4:	6562                	ld	a0,24(sp)
    800024f6:	e911                	bnez	a0,8000250a <.LBB4_17+0x48>
    800024f8:	a009                	j	800024fa <.LBB4_17+0x38>
    800024fa:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    800024fc:	08a10fa3          	sb	a0,159(sp)
    80002500:	0000b097          	auipc	ra,0xb
    80002504:	b7e080e7          	jalr	-1154(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002508:	a039                	j	80002516 <.LBB4_17+0x54>
            spin_loop();
    8000250a:	0000c097          	auipc	ra,0xc
    8000250e:	860080e7          	jalr	-1952(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    80002512:	a009                	j	80002514 <.LBB4_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    80002514:	b7c9                	j	800024d6 <.LBB4_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    80002516:	6506                	ld	a0,64(sp)
    80002518:	0541                	addi	a0,a0,16
    8000251a:	e82a                	sd	a0,16(sp)
    8000251c:	0001b097          	auipc	ra,0x1b
    80002520:	1b4080e7          	jalr	436(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80002524:	e42a                	sd	a0,8(sp)
    80002526:	a009                	j	80002528 <.LBB4_17+0x66>
    80002528:	6542                	ld	a0,16(sp)
    8000252a:	65a2                	ld	a1,8(sp)
    8000252c:	00014097          	auipc	ra,0x14
    80002530:	346080e7          	jalr	838(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002534:	a009                	j	80002536 <.LBB4_17+0x74>
        SpinlockGuard{spinlock: &self}
    80002536:	6506                	ld	a0,64(sp)
    80002538:	e4aa                	sd	a0,72(sp)
    }
    8000253a:	70aa                	ld	ra,168(sp)
    8000253c:	614d                	addi	sp,sp,176
    8000253e:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE:

0000000080002540 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    80002540:	7171                	addi	sp,sp,-176
    80002542:	f506                	sd	ra,168(sp)
    80002544:	e0aa                	sd	a0,64(sp)
        push_off();
    80002546:	0001b097          	auipc	ra,0x1b
    8000254a:	66e080e7          	jalr	1646(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    8000254e:	a009                	j	80002550 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE+0x10>
        if self.holding() {
    80002550:	6506                	ld	a0,64(sp)
    80002552:	00001097          	auipc	ra,0x1
    80002556:	d3a080e7          	jalr	-710(ra) # 8000328c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E>
    8000255a:	fc2a                	sd	a0,56(sp)
    8000255c:	a009                	j	8000255e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE+0x1e>
    8000255e:	4501                	li	a0,0
    80002560:	75e2                	ld	a1,56(sp)
    80002562:	02a58163          	beq	a1,a0,80002584 <.LBB5_15+0x16>
    80002566:	a009                	j	80002568 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h81cc64e5f1a97b0cE+0x28>
            panic!("spinlock {} acquire", self.name);
    80002568:	6506                	ld	a0,64(sp)
    8000256a:	e92a                	sd	a0,144(sp)
    8000256c:	f12a                	sd	a0,160(sp)

000000008000256e <.LBB5_15>:
    8000256e:	00006597          	auipc	a1,0x6
    80002572:	81458593          	addi	a1,a1,-2028 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002576:	00006097          	auipc	ra,0x6
    8000257a:	8c0080e7          	jalr	-1856(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    8000257e:	f82a                	sd	a0,48(sp)
    80002580:	f42e                	sd	a1,40(sp)
    80002582:	a011                	j	80002586 <.LBB5_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    80002584:	a825                	j	800025bc <.LBB5_17+0x14>
            panic!("spinlock {} acquire", self.name);
    80002586:	7542                	ld	a0,48(sp)
    80002588:	e12a                	sd	a0,128(sp)
    8000258a:	75a2                	ld	a1,40(sp)
    8000258c:	e52e                	sd	a1,136(sp)

000000008000258e <.LBB5_16>:
    8000258e:	00022597          	auipc	a1,0x22
    80002592:	83258593          	addi	a1,a1,-1998 # 80023dc0 <.L__unnamed_1>
    80002596:	0888                	addi	a0,sp,80
    80002598:	4609                	li	a2,2
    8000259a:	0114                	addi	a3,sp,128
    8000259c:	4705                	li	a4,1
    8000259e:	00003097          	auipc	ra,0x3
    800025a2:	186080e7          	jalr	390(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800025a6:	a009                	j	800025a8 <.LBB5_17>

00000000800025a8 <.LBB5_17>:
    800025a8:	00022597          	auipc	a1,0x22
    800025ac:	85058593          	addi	a1,a1,-1968 # 80023df8 <.L__unnamed_2>
    800025b0:	0888                	addi	a0,sp,80
    800025b2:	0001e097          	auipc	ra,0x1e
    800025b6:	784080e7          	jalr	1924(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    800025ba:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    800025bc:	6506                	ld	a0,64(sp)
    800025be:	0561                	addi	a0,a0,24
    800025c0:	4589                	li	a1,2
    800025c2:	08b10f23          	sb	a1,158(sp)
    800025c6:	4605                	li	a2,1
    800025c8:	f02e                	sd	a1,32(sp)
    800025ca:	85b2                	mv	a1,a2
    800025cc:	7602                	ld	a2,32(sp)
    800025ce:	0000b097          	auipc	ra,0xb
    800025d2:	9a8080e7          	jalr	-1624(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    800025d6:	ec2a                	sd	a0,24(sp)
    800025d8:	a009                	j	800025da <.LBB5_17+0x32>
    800025da:	6562                	ld	a0,24(sp)
    800025dc:	e911                	bnez	a0,800025f0 <.LBB5_17+0x48>
    800025de:	a009                	j	800025e0 <.LBB5_17+0x38>
    800025e0:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    800025e2:	08a10fa3          	sb	a0,159(sp)
    800025e6:	0000b097          	auipc	ra,0xb
    800025ea:	a98080e7          	jalr	-1384(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    800025ee:	a039                	j	800025fc <.LBB5_17+0x54>
            spin_loop();
    800025f0:	0000b097          	auipc	ra,0xb
    800025f4:	77a080e7          	jalr	1914(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    800025f8:	a009                	j	800025fa <.LBB5_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    800025fa:	b7c9                	j	800025bc <.LBB5_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    800025fc:	6506                	ld	a0,64(sp)
    800025fe:	0541                	addi	a0,a0,16
    80002600:	e82a                	sd	a0,16(sp)
    80002602:	0001b097          	auipc	ra,0x1b
    80002606:	0ce080e7          	jalr	206(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000260a:	e42a                	sd	a0,8(sp)
    8000260c:	a009                	j	8000260e <.LBB5_17+0x66>
    8000260e:	6542                	ld	a0,16(sp)
    80002610:	65a2                	ld	a1,8(sp)
    80002612:	00014097          	auipc	ra,0x14
    80002616:	260080e7          	jalr	608(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    8000261a:	a009                	j	8000261c <.LBB5_17+0x74>
        SpinlockGuard{spinlock: &self}
    8000261c:	6506                	ld	a0,64(sp)
    8000261e:	e4aa                	sd	a0,72(sp)
    }
    80002620:	70aa                	ld	ra,168(sp)
    80002622:	614d                	addi	sp,sp,176
    80002624:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE:

0000000080002626 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    80002626:	7171                	addi	sp,sp,-176
    80002628:	f506                	sd	ra,168(sp)
    8000262a:	e0aa                	sd	a0,64(sp)
        push_off();
    8000262c:	0001b097          	auipc	ra,0x1b
    80002630:	588080e7          	jalr	1416(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    80002634:	a009                	j	80002636 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE+0x10>
        if self.holding() {
    80002636:	6506                	ld	a0,64(sp)
    80002638:	00001097          	auipc	ra,0x1
    8000263c:	dda080e7          	jalr	-550(ra) # 80003412 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE>
    80002640:	fc2a                	sd	a0,56(sp)
    80002642:	a009                	j	80002644 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE+0x1e>
    80002644:	4501                	li	a0,0
    80002646:	75e2                	ld	a1,56(sp)
    80002648:	02a58163          	beq	a1,a0,8000266a <.LBB6_15+0x16>
    8000264c:	a009                	j	8000264e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE+0x28>
            panic!("spinlock {} acquire", self.name);
    8000264e:	6506                	ld	a0,64(sp)
    80002650:	e92a                	sd	a0,144(sp)
    80002652:	f12a                	sd	a0,160(sp)

0000000080002654 <.LBB6_15>:
    80002654:	00005597          	auipc	a1,0x5
    80002658:	72e58593          	addi	a1,a1,1838 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    8000265c:	00005097          	auipc	ra,0x5
    80002660:	7da080e7          	jalr	2010(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002664:	f82a                	sd	a0,48(sp)
    80002666:	f42e                	sd	a1,40(sp)
    80002668:	a011                	j	8000266c <.LBB6_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    8000266a:	a825                	j	800026a2 <.LBB6_17+0x14>
            panic!("spinlock {} acquire", self.name);
    8000266c:	7542                	ld	a0,48(sp)
    8000266e:	e12a                	sd	a0,128(sp)
    80002670:	75a2                	ld	a1,40(sp)
    80002672:	e52e                	sd	a1,136(sp)

0000000080002674 <.LBB6_16>:
    80002674:	00021597          	auipc	a1,0x21
    80002678:	74c58593          	addi	a1,a1,1868 # 80023dc0 <.L__unnamed_1>
    8000267c:	0888                	addi	a0,sp,80
    8000267e:	4609                	li	a2,2
    80002680:	0114                	addi	a3,sp,128
    80002682:	4705                	li	a4,1
    80002684:	00003097          	auipc	ra,0x3
    80002688:	0a0080e7          	jalr	160(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000268c:	a009                	j	8000268e <.LBB6_17>

000000008000268e <.LBB6_17>:
    8000268e:	00021597          	auipc	a1,0x21
    80002692:	76a58593          	addi	a1,a1,1898 # 80023df8 <.L__unnamed_2>
    80002696:	0888                	addi	a0,sp,80
    80002698:	0001e097          	auipc	ra,0x1e
    8000269c:	69e080e7          	jalr	1694(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    800026a0:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    800026a2:	6506                	ld	a0,64(sp)
    800026a4:	0561                	addi	a0,a0,24
    800026a6:	4589                	li	a1,2
    800026a8:	08b10f23          	sb	a1,158(sp)
    800026ac:	4605                	li	a2,1
    800026ae:	f02e                	sd	a1,32(sp)
    800026b0:	85b2                	mv	a1,a2
    800026b2:	7602                	ld	a2,32(sp)
    800026b4:	0000b097          	auipc	ra,0xb
    800026b8:	8c2080e7          	jalr	-1854(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    800026bc:	ec2a                	sd	a0,24(sp)
    800026be:	a009                	j	800026c0 <.LBB6_17+0x32>
    800026c0:	6562                	ld	a0,24(sp)
    800026c2:	e911                	bnez	a0,800026d6 <.LBB6_17+0x48>
    800026c4:	a009                	j	800026c6 <.LBB6_17+0x38>
    800026c6:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    800026c8:	08a10fa3          	sb	a0,159(sp)
    800026cc:	0000b097          	auipc	ra,0xb
    800026d0:	9b2080e7          	jalr	-1614(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    800026d4:	a039                	j	800026e2 <.LBB6_17+0x54>
            spin_loop();
    800026d6:	0000b097          	auipc	ra,0xb
    800026da:	694080e7          	jalr	1684(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    800026de:	a009                	j	800026e0 <.LBB6_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    800026e0:	b7c9                	j	800026a2 <.LBB6_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    800026e2:	6506                	ld	a0,64(sp)
    800026e4:	0541                	addi	a0,a0,16
    800026e6:	e82a                	sd	a0,16(sp)
    800026e8:	0001b097          	auipc	ra,0x1b
    800026ec:	fe8080e7          	jalr	-24(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800026f0:	e42a                	sd	a0,8(sp)
    800026f2:	a009                	j	800026f4 <.LBB6_17+0x66>
    800026f4:	6542                	ld	a0,16(sp)
    800026f6:	65a2                	ld	a1,8(sp)
    800026f8:	00014097          	auipc	ra,0x14
    800026fc:	17a080e7          	jalr	378(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002700:	a009                	j	80002702 <.LBB6_17+0x74>
        SpinlockGuard{spinlock: &self}
    80002702:	6506                	ld	a0,64(sp)
    80002704:	e4aa                	sd	a0,72(sp)
    }
    80002706:	70aa                	ld	ra,168(sp)
    80002708:	614d                	addi	sp,sp,176
    8000270a:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE:

000000008000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    8000270c:	7171                	addi	sp,sp,-176
    8000270e:	f506                	sd	ra,168(sp)
    80002710:	e0aa                	sd	a0,64(sp)
        push_off();
    80002712:	0001b097          	auipc	ra,0x1b
    80002716:	4a2080e7          	jalr	1186(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    8000271a:	a009                	j	8000271c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE+0x10>
        if self.holding() {
    8000271c:	6506                	ld	a0,64(sp)
    8000271e:	00001097          	auipc	ra,0x1
    80002722:	efc080e7          	jalr	-260(ra) # 8000361a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE>
    80002726:	fc2a                	sd	a0,56(sp)
    80002728:	a009                	j	8000272a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE+0x1e>
    8000272a:	4501                	li	a0,0
    8000272c:	75e2                	ld	a1,56(sp)
    8000272e:	02a58163          	beq	a1,a0,80002750 <.LBB7_15+0x16>
    80002732:	a009                	j	80002734 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE+0x28>
            panic!("spinlock {} acquire", self.name);
    80002734:	6506                	ld	a0,64(sp)
    80002736:	e92a                	sd	a0,144(sp)
    80002738:	f12a                	sd	a0,160(sp)

000000008000273a <.LBB7_15>:
    8000273a:	00005597          	auipc	a1,0x5
    8000273e:	64858593          	addi	a1,a1,1608 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002742:	00005097          	auipc	ra,0x5
    80002746:	6f4080e7          	jalr	1780(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    8000274a:	f82a                	sd	a0,48(sp)
    8000274c:	f42e                	sd	a1,40(sp)
    8000274e:	a011                	j	80002752 <.LBB7_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    80002750:	a825                	j	80002788 <.LBB7_17+0x14>
            panic!("spinlock {} acquire", self.name);
    80002752:	7542                	ld	a0,48(sp)
    80002754:	e12a                	sd	a0,128(sp)
    80002756:	75a2                	ld	a1,40(sp)
    80002758:	e52e                	sd	a1,136(sp)

000000008000275a <.LBB7_16>:
    8000275a:	00021597          	auipc	a1,0x21
    8000275e:	66658593          	addi	a1,a1,1638 # 80023dc0 <.L__unnamed_1>
    80002762:	0888                	addi	a0,sp,80
    80002764:	4609                	li	a2,2
    80002766:	0114                	addi	a3,sp,128
    80002768:	4705                	li	a4,1
    8000276a:	00003097          	auipc	ra,0x3
    8000276e:	fba080e7          	jalr	-70(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002772:	a009                	j	80002774 <.LBB7_17>

0000000080002774 <.LBB7_17>:
    80002774:	00021597          	auipc	a1,0x21
    80002778:	68458593          	addi	a1,a1,1668 # 80023df8 <.L__unnamed_2>
    8000277c:	0888                	addi	a0,sp,80
    8000277e:	0001e097          	auipc	ra,0x1e
    80002782:	5b8080e7          	jalr	1464(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002786:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    80002788:	6506                	ld	a0,64(sp)
    8000278a:	0561                	addi	a0,a0,24
    8000278c:	4589                	li	a1,2
    8000278e:	08b10f23          	sb	a1,158(sp)
    80002792:	4605                	li	a2,1
    80002794:	f02e                	sd	a1,32(sp)
    80002796:	85b2                	mv	a1,a2
    80002798:	7602                	ld	a2,32(sp)
    8000279a:	0000a097          	auipc	ra,0xa
    8000279e:	7dc080e7          	jalr	2012(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    800027a2:	ec2a                	sd	a0,24(sp)
    800027a4:	a009                	j	800027a6 <.LBB7_17+0x32>
    800027a6:	6562                	ld	a0,24(sp)
    800027a8:	e911                	bnez	a0,800027bc <.LBB7_17+0x48>
    800027aa:	a009                	j	800027ac <.LBB7_17+0x38>
    800027ac:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    800027ae:	08a10fa3          	sb	a0,159(sp)
    800027b2:	0000b097          	auipc	ra,0xb
    800027b6:	8cc080e7          	jalr	-1844(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    800027ba:	a039                	j	800027c8 <.LBB7_17+0x54>
            spin_loop();
    800027bc:	0000b097          	auipc	ra,0xb
    800027c0:	5ae080e7          	jalr	1454(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    800027c4:	a009                	j	800027c6 <.LBB7_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    800027c6:	b7c9                	j	80002788 <.LBB7_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    800027c8:	6506                	ld	a0,64(sp)
    800027ca:	0541                	addi	a0,a0,16
    800027cc:	e82a                	sd	a0,16(sp)
    800027ce:	0001b097          	auipc	ra,0x1b
    800027d2:	f02080e7          	jalr	-254(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800027d6:	e42a                	sd	a0,8(sp)
    800027d8:	a009                	j	800027da <.LBB7_17+0x66>
    800027da:	6542                	ld	a0,16(sp)
    800027dc:	65a2                	ld	a1,8(sp)
    800027de:	00014097          	auipc	ra,0x14
    800027e2:	094080e7          	jalr	148(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    800027e6:	a009                	j	800027e8 <.LBB7_17+0x74>
        SpinlockGuard{spinlock: &self}
    800027e8:	6506                	ld	a0,64(sp)
    800027ea:	e4aa                	sd	a0,72(sp)
    }
    800027ec:	70aa                	ld	ra,168(sp)
    800027ee:	614d                	addi	sp,sp,176
    800027f0:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E:

00000000800027f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    800027f2:	7171                	addi	sp,sp,-176
    800027f4:	f506                	sd	ra,168(sp)
    800027f6:	e0aa                	sd	a0,64(sp)
        push_off();
    800027f8:	0001b097          	auipc	ra,0x1b
    800027fc:	3bc080e7          	jalr	956(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    80002800:	a009                	j	80002802 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E+0x10>
        if self.holding() {
    80002802:	6506                	ld	a0,64(sp)
    80002804:	00001097          	auipc	ra,0x1
    80002808:	f9c080e7          	jalr	-100(ra) # 800037a0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE>
    8000280c:	fc2a                	sd	a0,56(sp)
    8000280e:	a009                	j	80002810 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E+0x1e>
    80002810:	4501                	li	a0,0
    80002812:	75e2                	ld	a1,56(sp)
    80002814:	02a58163          	beq	a1,a0,80002836 <.LBB8_15+0x16>
    80002818:	a009                	j	8000281a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E+0x28>
            panic!("spinlock {} acquire", self.name);
    8000281a:	6506                	ld	a0,64(sp)
    8000281c:	e92a                	sd	a0,144(sp)
    8000281e:	f12a                	sd	a0,160(sp)

0000000080002820 <.LBB8_15>:
    80002820:	00005597          	auipc	a1,0x5
    80002824:	56258593          	addi	a1,a1,1378 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002828:	00005097          	auipc	ra,0x5
    8000282c:	60e080e7          	jalr	1550(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002830:	f82a                	sd	a0,48(sp)
    80002832:	f42e                	sd	a1,40(sp)
    80002834:	a011                	j	80002838 <.LBB8_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    80002836:	a825                	j	8000286e <.LBB8_17+0x14>
            panic!("spinlock {} acquire", self.name);
    80002838:	7542                	ld	a0,48(sp)
    8000283a:	e12a                	sd	a0,128(sp)
    8000283c:	75a2                	ld	a1,40(sp)
    8000283e:	e52e                	sd	a1,136(sp)

0000000080002840 <.LBB8_16>:
    80002840:	00021597          	auipc	a1,0x21
    80002844:	58058593          	addi	a1,a1,1408 # 80023dc0 <.L__unnamed_1>
    80002848:	0888                	addi	a0,sp,80
    8000284a:	4609                	li	a2,2
    8000284c:	0114                	addi	a3,sp,128
    8000284e:	4705                	li	a4,1
    80002850:	00003097          	auipc	ra,0x3
    80002854:	ed4080e7          	jalr	-300(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002858:	a009                	j	8000285a <.LBB8_17>

000000008000285a <.LBB8_17>:
    8000285a:	00021597          	auipc	a1,0x21
    8000285e:	59e58593          	addi	a1,a1,1438 # 80023df8 <.L__unnamed_2>
    80002862:	0888                	addi	a0,sp,80
    80002864:	0001e097          	auipc	ra,0x1e
    80002868:	4d2080e7          	jalr	1234(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000286c:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    8000286e:	6506                	ld	a0,64(sp)
    80002870:	0561                	addi	a0,a0,24
    80002872:	4589                	li	a1,2
    80002874:	08b10f23          	sb	a1,158(sp)
    80002878:	4605                	li	a2,1
    8000287a:	f02e                	sd	a1,32(sp)
    8000287c:	85b2                	mv	a1,a2
    8000287e:	7602                	ld	a2,32(sp)
    80002880:	0000a097          	auipc	ra,0xa
    80002884:	6f6080e7          	jalr	1782(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    80002888:	ec2a                	sd	a0,24(sp)
    8000288a:	a009                	j	8000288c <.LBB8_17+0x32>
    8000288c:	6562                	ld	a0,24(sp)
    8000288e:	e911                	bnez	a0,800028a2 <.LBB8_17+0x48>
    80002890:	a009                	j	80002892 <.LBB8_17+0x38>
    80002892:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002894:	08a10fa3          	sb	a0,159(sp)
    80002898:	0000a097          	auipc	ra,0xa
    8000289c:	7e6080e7          	jalr	2022(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    800028a0:	a039                	j	800028ae <.LBB8_17+0x54>
            spin_loop();
    800028a2:	0000b097          	auipc	ra,0xb
    800028a6:	4c8080e7          	jalr	1224(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    800028aa:	a009                	j	800028ac <.LBB8_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    800028ac:	b7c9                	j	8000286e <.LBB8_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    800028ae:	6506                	ld	a0,64(sp)
    800028b0:	0541                	addi	a0,a0,16
    800028b2:	e82a                	sd	a0,16(sp)
    800028b4:	0001b097          	auipc	ra,0x1b
    800028b8:	e1c080e7          	jalr	-484(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800028bc:	e42a                	sd	a0,8(sp)
    800028be:	a009                	j	800028c0 <.LBB8_17+0x66>
    800028c0:	6542                	ld	a0,16(sp)
    800028c2:	65a2                	ld	a1,8(sp)
    800028c4:	00014097          	auipc	ra,0x14
    800028c8:	fae080e7          	jalr	-82(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    800028cc:	a009                	j	800028ce <.LBB8_17+0x74>
        SpinlockGuard{spinlock: &self}
    800028ce:	6506                	ld	a0,64(sp)
    800028d0:	e4aa                	sd	a0,72(sp)
    }
    800028d2:	70aa                	ld	ra,168(sp)
    800028d4:	614d                	addi	sp,sp,176
    800028d6:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E:

00000000800028d8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    800028d8:	7171                	addi	sp,sp,-176
    800028da:	f506                	sd	ra,168(sp)
    800028dc:	e0aa                	sd	a0,64(sp)
        push_off();
    800028de:	0001b097          	auipc	ra,0x1b
    800028e2:	2d6080e7          	jalr	726(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    800028e6:	a009                	j	800028e8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E+0x10>
        if self.holding() {
    800028e8:	6506                	ld	a0,64(sp)
    800028ea:	00001097          	auipc	ra,0x1
    800028ee:	a24080e7          	jalr	-1500(ra) # 8000330e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE>
    800028f2:	fc2a                	sd	a0,56(sp)
    800028f4:	a009                	j	800028f6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E+0x1e>
    800028f6:	4501                	li	a0,0
    800028f8:	75e2                	ld	a1,56(sp)
    800028fa:	02a58163          	beq	a1,a0,8000291c <.LBB9_15+0x16>
    800028fe:	a009                	j	80002900 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E+0x28>
            panic!("spinlock {} acquire", self.name);
    80002900:	6506                	ld	a0,64(sp)
    80002902:	e92a                	sd	a0,144(sp)
    80002904:	f12a                	sd	a0,160(sp)

0000000080002906 <.LBB9_15>:
    80002906:	00005597          	auipc	a1,0x5
    8000290a:	47c58593          	addi	a1,a1,1148 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    8000290e:	00005097          	auipc	ra,0x5
    80002912:	528080e7          	jalr	1320(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002916:	f82a                	sd	a0,48(sp)
    80002918:	f42e                	sd	a1,40(sp)
    8000291a:	a011                	j	8000291e <.LBB9_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    8000291c:	a825                	j	80002954 <.LBB9_17+0x14>
            panic!("spinlock {} acquire", self.name);
    8000291e:	7542                	ld	a0,48(sp)
    80002920:	e12a                	sd	a0,128(sp)
    80002922:	75a2                	ld	a1,40(sp)
    80002924:	e52e                	sd	a1,136(sp)

0000000080002926 <.LBB9_16>:
    80002926:	00021597          	auipc	a1,0x21
    8000292a:	49a58593          	addi	a1,a1,1178 # 80023dc0 <.L__unnamed_1>
    8000292e:	0888                	addi	a0,sp,80
    80002930:	4609                	li	a2,2
    80002932:	0114                	addi	a3,sp,128
    80002934:	4705                	li	a4,1
    80002936:	00003097          	auipc	ra,0x3
    8000293a:	dee080e7          	jalr	-530(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000293e:	a009                	j	80002940 <.LBB9_17>

0000000080002940 <.LBB9_17>:
    80002940:	00021597          	auipc	a1,0x21
    80002944:	4b858593          	addi	a1,a1,1208 # 80023df8 <.L__unnamed_2>
    80002948:	0888                	addi	a0,sp,80
    8000294a:	0001e097          	auipc	ra,0x1e
    8000294e:	3ec080e7          	jalr	1004(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002952:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    80002954:	6506                	ld	a0,64(sp)
    80002956:	0561                	addi	a0,a0,24
    80002958:	4589                	li	a1,2
    8000295a:	08b10f23          	sb	a1,158(sp)
    8000295e:	4605                	li	a2,1
    80002960:	f02e                	sd	a1,32(sp)
    80002962:	85b2                	mv	a1,a2
    80002964:	7602                	ld	a2,32(sp)
    80002966:	0000a097          	auipc	ra,0xa
    8000296a:	610080e7          	jalr	1552(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    8000296e:	ec2a                	sd	a0,24(sp)
    80002970:	a009                	j	80002972 <.LBB9_17+0x32>
    80002972:	6562                	ld	a0,24(sp)
    80002974:	e911                	bnez	a0,80002988 <.LBB9_17+0x48>
    80002976:	a009                	j	80002978 <.LBB9_17+0x38>
    80002978:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    8000297a:	08a10fa3          	sb	a0,159(sp)
    8000297e:	0000a097          	auipc	ra,0xa
    80002982:	700080e7          	jalr	1792(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002986:	a039                	j	80002994 <.LBB9_17+0x54>
            spin_loop();
    80002988:	0000b097          	auipc	ra,0xb
    8000298c:	3e2080e7          	jalr	994(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    80002990:	a009                	j	80002992 <.LBB9_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    80002992:	b7c9                	j	80002954 <.LBB9_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    80002994:	6506                	ld	a0,64(sp)
    80002996:	0541                	addi	a0,a0,16
    80002998:	e82a                	sd	a0,16(sp)
    8000299a:	0001b097          	auipc	ra,0x1b
    8000299e:	d36080e7          	jalr	-714(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800029a2:	e42a                	sd	a0,8(sp)
    800029a4:	a009                	j	800029a6 <.LBB9_17+0x66>
    800029a6:	6542                	ld	a0,16(sp)
    800029a8:	65a2                	ld	a1,8(sp)
    800029aa:	00014097          	auipc	ra,0x14
    800029ae:	ec8080e7          	jalr	-312(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    800029b2:	a009                	j	800029b4 <.LBB9_17+0x74>
        SpinlockGuard{spinlock: &self}
    800029b4:	6506                	ld	a0,64(sp)
    800029b6:	e4aa                	sd	a0,72(sp)
    }
    800029b8:	70aa                	ld	ra,168(sp)
    800029ba:	614d                	addi	sp,sp,176
    800029bc:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E:

00000000800029be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E>:
    pub fn acquire(&self) -> SpinlockGuard<'_, T> {
    800029be:	7171                	addi	sp,sp,-176
    800029c0:	f506                	sd	ra,168(sp)
    800029c2:	e0aa                	sd	a0,64(sp)
        push_off();
    800029c4:	0001b097          	auipc	ra,0x1b
    800029c8:	1f0080e7          	jalr	496(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    800029cc:	a009                	j	800029ce <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E+0x10>
        if self.holding() {
    800029ce:	6506                	ld	a0,64(sp)
    800029d0:	00001097          	auipc	ra,0x1
    800029d4:	ac4080e7          	jalr	-1340(ra) # 80003494 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E>
    800029d8:	fc2a                	sd	a0,56(sp)
    800029da:	a009                	j	800029dc <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E+0x1e>
    800029dc:	4501                	li	a0,0
    800029de:	75e2                	ld	a1,56(sp)
    800029e0:	02a58163          	beq	a1,a0,80002a02 <.LBB10_15+0x16>
    800029e4:	a009                	j	800029e6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E+0x28>
            panic!("spinlock {} acquire", self.name);
    800029e6:	6506                	ld	a0,64(sp)
    800029e8:	e92a                	sd	a0,144(sp)
    800029ea:	f12a                	sd	a0,160(sp)

00000000800029ec <.LBB10_15>:
    800029ec:	00005597          	auipc	a1,0x5
    800029f0:	39658593          	addi	a1,a1,918 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800029f4:	00005097          	auipc	ra,0x5
    800029f8:	442080e7          	jalr	1090(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    800029fc:	f82a                	sd	a0,48(sp)
    800029fe:	f42e                	sd	a1,40(sp)
    80002a00:	a011                	j	80002a04 <.LBB10_15+0x18>
        while self.locked.swap(true, Ordering::Acquire){
    80002a02:	a825                	j	80002a3a <.LBB10_17+0x14>
            panic!("spinlock {} acquire", self.name);
    80002a04:	7542                	ld	a0,48(sp)
    80002a06:	e12a                	sd	a0,128(sp)
    80002a08:	75a2                	ld	a1,40(sp)
    80002a0a:	e52e                	sd	a1,136(sp)

0000000080002a0c <.LBB10_16>:
    80002a0c:	00021597          	auipc	a1,0x21
    80002a10:	3b458593          	addi	a1,a1,948 # 80023dc0 <.L__unnamed_1>
    80002a14:	0888                	addi	a0,sp,80
    80002a16:	4609                	li	a2,2
    80002a18:	0114                	addi	a3,sp,128
    80002a1a:	4705                	li	a4,1
    80002a1c:	00003097          	auipc	ra,0x3
    80002a20:	d08080e7          	jalr	-760(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002a24:	a009                	j	80002a26 <.LBB10_17>

0000000080002a26 <.LBB10_17>:
    80002a26:	00021597          	auipc	a1,0x21
    80002a2a:	3d258593          	addi	a1,a1,978 # 80023df8 <.L__unnamed_2>
    80002a2e:	0888                	addi	a0,sp,80
    80002a30:	0001e097          	auipc	ra,0x1e
    80002a34:	306080e7          	jalr	774(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002a38:	0000                	unimp
        while self.locked.swap(true, Ordering::Acquire){
    80002a3a:	6506                	ld	a0,64(sp)
    80002a3c:	0561                	addi	a0,a0,24
    80002a3e:	4589                	li	a1,2
    80002a40:	08b10f23          	sb	a1,158(sp)
    80002a44:	4605                	li	a2,1
    80002a46:	f02e                	sd	a1,32(sp)
    80002a48:	85b2                	mv	a1,a2
    80002a4a:	7602                	ld	a2,32(sp)
    80002a4c:	0000a097          	auipc	ra,0xa
    80002a50:	52a080e7          	jalr	1322(ra) # 8000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>
    80002a54:	ec2a                	sd	a0,24(sp)
    80002a56:	a009                	j	80002a58 <.LBB10_17+0x32>
    80002a58:	6562                	ld	a0,24(sp)
    80002a5a:	e911                	bnez	a0,80002a6e <.LBB10_17+0x48>
    80002a5c:	a009                	j	80002a5e <.LBB10_17+0x38>
    80002a5e:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002a60:	08a10fa3          	sb	a0,159(sp)
    80002a64:	0000a097          	auipc	ra,0xa
    80002a68:	61a080e7          	jalr	1562(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002a6c:	a039                	j	80002a7a <.LBB10_17+0x54>
            spin_loop();
    80002a6e:	0000b097          	auipc	ra,0xb
    80002a72:	2fc080e7          	jalr	764(ra) # 8000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>
    80002a76:	a009                	j	80002a78 <.LBB10_17+0x52>
        while self.locked.swap(true, Ordering::Acquire){
    80002a78:	b7c9                	j	80002a3a <.LBB10_17+0x14>
            self.cpu_id.set(cpuid() as isize);
    80002a7a:	6506                	ld	a0,64(sp)
    80002a7c:	0541                	addi	a0,a0,16
    80002a7e:	e82a                	sd	a0,16(sp)
    80002a80:	0001b097          	auipc	ra,0x1b
    80002a84:	c50080e7          	jalr	-944(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80002a88:	e42a                	sd	a0,8(sp)
    80002a8a:	a009                	j	80002a8c <.LBB10_17+0x66>
    80002a8c:	6542                	ld	a0,16(sp)
    80002a8e:	65a2                	ld	a1,8(sp)
    80002a90:	00014097          	auipc	ra,0x14
    80002a94:	de2080e7          	jalr	-542(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002a98:	a009                	j	80002a9a <.LBB10_17+0x74>
        SpinlockGuard{spinlock: &self}
    80002a9a:	6506                	ld	a0,64(sp)
    80002a9c:	e4aa                	sd	a0,72(sp)
    }
    80002a9e:	70aa                	ld	ra,168(sp)
    80002aa0:	614d                	addi	sp,sp,176
    80002aa2:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h0a9fc2be2300cfbbE:

0000000080002aa4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h0a9fc2be2300cfbbE>:

    pub fn release(&self) {
    80002aa4:	7175                	addi	sp,sp,-144
    80002aa6:	e506                	sd	ra,136(sp)
    80002aa8:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002aaa:	f02a                	sd	a0,32(sp)
    80002aac:	00001097          	auipc	ra,0x1
    80002ab0:	b6e080e7          	jalr	-1170(ra) # 8000361a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE>
    80002ab4:	ec2a                	sd	a0,24(sp)
    80002ab6:	a009                	j	80002ab8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h0a9fc2be2300cfbbE+0x14>
    80002ab8:	6562                	ld	a0,24(sp)
    80002aba:	e105                	bnez	a0,80002ada <.LBB11_10+0x16>
    80002abc:	a009                	j	80002abe <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h0a9fc2be2300cfbbE+0x1a>
            panic!("spinlock {} release", self.name);
    80002abe:	7502                	ld	a0,32(sp)
    80002ac0:	f4aa                	sd	a0,104(sp)
    80002ac2:	e12a                	sd	a0,128(sp)

0000000080002ac4 <.LBB11_10>:
    80002ac4:	00005597          	auipc	a1,0x5
    80002ac8:	2be58593          	addi	a1,a1,702 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002acc:	00005097          	auipc	ra,0x5
    80002ad0:	36a080e7          	jalr	874(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002ad4:	e82a                	sd	a0,16(sp)
    80002ad6:	e42e                	sd	a1,8(sp)
    80002ad8:	a809                	j	80002aea <.LBB11_10+0x26>
        }
        self.cpu_id.set(-1);
    80002ada:	7502                	ld	a0,32(sp)
    80002adc:	0541                	addi	a0,a0,16
    80002ade:	55fd                	li	a1,-1
    80002ae0:	00014097          	auipc	ra,0x14
    80002ae4:	d92080e7          	jalr	-622(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002ae8:	a825                	j	80002b20 <.LBB11_12+0x14>
            panic!("spinlock {} release", self.name);
    80002aea:	6542                	ld	a0,16(sp)
    80002aec:	ecaa                	sd	a0,88(sp)
    80002aee:	65a2                	ld	a1,8(sp)
    80002af0:	f0ae                	sd	a1,96(sp)

0000000080002af2 <.LBB11_11>:
    80002af2:	00021597          	auipc	a1,0x21
    80002af6:	31e58593          	addi	a1,a1,798 # 80023e10 <.L__unnamed_3>
    80002afa:	1028                	addi	a0,sp,40
    80002afc:	4609                	li	a2,2
    80002afe:	08b4                	addi	a3,sp,88
    80002b00:	4705                	li	a4,1
    80002b02:	00003097          	auipc	ra,0x3
    80002b06:	c22080e7          	jalr	-990(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002b0a:	a009                	j	80002b0c <.LBB11_12>

0000000080002b0c <.LBB11_12>:
    80002b0c:	00021597          	auipc	a1,0x21
    80002b10:	32458593          	addi	a1,a1,804 # 80023e30 <.L__unnamed_4>
    80002b14:	1028                	addi	a0,sp,40
    80002b16:	0001e097          	auipc	ra,0x1e
    80002b1a:	220080e7          	jalr	544(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002b1e:	0000                	unimp
    80002b20:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002b22:	06a10b23          	sb	a0,118(sp)
    80002b26:	0000a097          	auipc	ra,0xa
    80002b2a:	558080e7          	jalr	1368(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002b2e:	a009                	j	80002b30 <.LBB11_12+0x24>
        self.locked.store(false, Ordering::Release);
    80002b30:	7502                	ld	a0,32(sp)
    80002b32:	0561                	addi	a0,a0,24
    80002b34:	4585                	li	a1,1
    80002b36:	06b10ba3          	sb	a1,119(sp)
    80002b3a:	4601                	li	a2,0
    80002b3c:	e02e                	sd	a1,0(sp)
    80002b3e:	85b2                	mv	a1,a2
    80002b40:	6602                	ld	a2,0(sp)
    80002b42:	0000a097          	auipc	ra,0xa
    80002b46:	478080e7          	jalr	1144(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80002b4a:	a009                	j	80002b4c <.LBB11_12+0x40>
        pop_off();
    80002b4c:	0001b097          	auipc	ra,0x1b
    80002b50:	0ec080e7          	jalr	236(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80002b54:	a009                	j	80002b56 <.LBB11_12+0x4a>
    }
    80002b56:	60aa                	ld	ra,136(sp)
    80002b58:	6149                	addi	sp,sp,144
    80002b5a:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3105c64f7ed3abd5E:

0000000080002b5c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3105c64f7ed3abd5E>:
    pub fn release(&self) {
    80002b5c:	7175                	addi	sp,sp,-144
    80002b5e:	e506                	sd	ra,136(sp)
    80002b60:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002b62:	f02a                	sd	a0,32(sp)
    80002b64:	00001097          	auipc	ra,0x1
    80002b68:	bba080e7          	jalr	-1094(ra) # 8000371e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E>
    80002b6c:	ec2a                	sd	a0,24(sp)
    80002b6e:	a009                	j	80002b70 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3105c64f7ed3abd5E+0x14>
    80002b70:	6562                	ld	a0,24(sp)
    80002b72:	e105                	bnez	a0,80002b92 <.LBB12_10+0x16>
    80002b74:	a009                	j	80002b76 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3105c64f7ed3abd5E+0x1a>
            panic!("spinlock {} release", self.name);
    80002b76:	7502                	ld	a0,32(sp)
    80002b78:	f4aa                	sd	a0,104(sp)
    80002b7a:	e12a                	sd	a0,128(sp)

0000000080002b7c <.LBB12_10>:
    80002b7c:	00005597          	auipc	a1,0x5
    80002b80:	20658593          	addi	a1,a1,518 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002b84:	00005097          	auipc	ra,0x5
    80002b88:	2b2080e7          	jalr	690(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002b8c:	e82a                	sd	a0,16(sp)
    80002b8e:	e42e                	sd	a1,8(sp)
    80002b90:	a809                	j	80002ba2 <.LBB12_10+0x26>
        self.cpu_id.set(-1);
    80002b92:	7502                	ld	a0,32(sp)
    80002b94:	0541                	addi	a0,a0,16
    80002b96:	55fd                	li	a1,-1
    80002b98:	00014097          	auipc	ra,0x14
    80002b9c:	cda080e7          	jalr	-806(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002ba0:	a825                	j	80002bd8 <.LBB12_12+0x14>
            panic!("spinlock {} release", self.name);
    80002ba2:	6542                	ld	a0,16(sp)
    80002ba4:	ecaa                	sd	a0,88(sp)
    80002ba6:	65a2                	ld	a1,8(sp)
    80002ba8:	f0ae                	sd	a1,96(sp)

0000000080002baa <.LBB12_11>:
    80002baa:	00021597          	auipc	a1,0x21
    80002bae:	26658593          	addi	a1,a1,614 # 80023e10 <.L__unnamed_3>
    80002bb2:	1028                	addi	a0,sp,40
    80002bb4:	4609                	li	a2,2
    80002bb6:	08b4                	addi	a3,sp,88
    80002bb8:	4705                	li	a4,1
    80002bba:	00003097          	auipc	ra,0x3
    80002bbe:	b6a080e7          	jalr	-1174(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002bc2:	a009                	j	80002bc4 <.LBB12_12>

0000000080002bc4 <.LBB12_12>:
    80002bc4:	00021597          	auipc	a1,0x21
    80002bc8:	26c58593          	addi	a1,a1,620 # 80023e30 <.L__unnamed_4>
    80002bcc:	1028                	addi	a0,sp,40
    80002bce:	0001e097          	auipc	ra,0x1e
    80002bd2:	168080e7          	jalr	360(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002bd6:	0000                	unimp
    80002bd8:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002bda:	06a10b23          	sb	a0,118(sp)
    80002bde:	0000a097          	auipc	ra,0xa
    80002be2:	4a0080e7          	jalr	1184(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002be6:	a009                	j	80002be8 <.LBB12_12+0x24>
        self.locked.store(false, Ordering::Release);
    80002be8:	7502                	ld	a0,32(sp)
    80002bea:	0561                	addi	a0,a0,24
    80002bec:	4585                	li	a1,1
    80002bee:	06b10ba3          	sb	a1,119(sp)
    80002bf2:	4601                	li	a2,0
    80002bf4:	e02e                	sd	a1,0(sp)
    80002bf6:	85b2                	mv	a1,a2
    80002bf8:	6602                	ld	a2,0(sp)
    80002bfa:	0000a097          	auipc	ra,0xa
    80002bfe:	3c0080e7          	jalr	960(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80002c02:	a009                	j	80002c04 <.LBB12_12+0x40>
        pop_off();
    80002c04:	0001b097          	auipc	ra,0x1b
    80002c08:	034080e7          	jalr	52(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80002c0c:	a009                	j	80002c0e <.LBB12_12+0x4a>
    }
    80002c0e:	60aa                	ld	ra,136(sp)
    80002c10:	6149                	addi	sp,sp,144
    80002c12:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h333990824090d9c9E:

0000000080002c14 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h333990824090d9c9E>:
    pub fn release(&self) {
    80002c14:	7175                	addi	sp,sp,-144
    80002c16:	e506                	sd	ra,136(sp)
    80002c18:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002c1a:	f02a                	sd	a0,32(sp)
    80002c1c:	00000097          	auipc	ra,0x0
    80002c20:	7f6080e7          	jalr	2038(ra) # 80003412 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE>
    80002c24:	ec2a                	sd	a0,24(sp)
    80002c26:	a009                	j	80002c28 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h333990824090d9c9E+0x14>
    80002c28:	6562                	ld	a0,24(sp)
    80002c2a:	e105                	bnez	a0,80002c4a <.LBB13_10+0x16>
    80002c2c:	a009                	j	80002c2e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h333990824090d9c9E+0x1a>
            panic!("spinlock {} release", self.name);
    80002c2e:	7502                	ld	a0,32(sp)
    80002c30:	f4aa                	sd	a0,104(sp)
    80002c32:	e12a                	sd	a0,128(sp)

0000000080002c34 <.LBB13_10>:
    80002c34:	00005597          	auipc	a1,0x5
    80002c38:	14e58593          	addi	a1,a1,334 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002c3c:	00005097          	auipc	ra,0x5
    80002c40:	1fa080e7          	jalr	506(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002c44:	e82a                	sd	a0,16(sp)
    80002c46:	e42e                	sd	a1,8(sp)
    80002c48:	a809                	j	80002c5a <.LBB13_10+0x26>
        self.cpu_id.set(-1);
    80002c4a:	7502                	ld	a0,32(sp)
    80002c4c:	0541                	addi	a0,a0,16
    80002c4e:	55fd                	li	a1,-1
    80002c50:	00014097          	auipc	ra,0x14
    80002c54:	c22080e7          	jalr	-990(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002c58:	a825                	j	80002c90 <.LBB13_12+0x14>
            panic!("spinlock {} release", self.name);
    80002c5a:	6542                	ld	a0,16(sp)
    80002c5c:	ecaa                	sd	a0,88(sp)
    80002c5e:	65a2                	ld	a1,8(sp)
    80002c60:	f0ae                	sd	a1,96(sp)

0000000080002c62 <.LBB13_11>:
    80002c62:	00021597          	auipc	a1,0x21
    80002c66:	1ae58593          	addi	a1,a1,430 # 80023e10 <.L__unnamed_3>
    80002c6a:	1028                	addi	a0,sp,40
    80002c6c:	4609                	li	a2,2
    80002c6e:	08b4                	addi	a3,sp,88
    80002c70:	4705                	li	a4,1
    80002c72:	00003097          	auipc	ra,0x3
    80002c76:	ab2080e7          	jalr	-1358(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002c7a:	a009                	j	80002c7c <.LBB13_12>

0000000080002c7c <.LBB13_12>:
    80002c7c:	00021597          	auipc	a1,0x21
    80002c80:	1b458593          	addi	a1,a1,436 # 80023e30 <.L__unnamed_4>
    80002c84:	1028                	addi	a0,sp,40
    80002c86:	0001e097          	auipc	ra,0x1e
    80002c8a:	0b0080e7          	jalr	176(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002c8e:	0000                	unimp
    80002c90:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002c92:	06a10b23          	sb	a0,118(sp)
    80002c96:	0000a097          	auipc	ra,0xa
    80002c9a:	3e8080e7          	jalr	1000(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002c9e:	a009                	j	80002ca0 <.LBB13_12+0x24>
        self.locked.store(false, Ordering::Release);
    80002ca0:	7502                	ld	a0,32(sp)
    80002ca2:	0561                	addi	a0,a0,24
    80002ca4:	4585                	li	a1,1
    80002ca6:	06b10ba3          	sb	a1,119(sp)
    80002caa:	4601                	li	a2,0
    80002cac:	e02e                	sd	a1,0(sp)
    80002cae:	85b2                	mv	a1,a2
    80002cb0:	6602                	ld	a2,0(sp)
    80002cb2:	0000a097          	auipc	ra,0xa
    80002cb6:	308080e7          	jalr	776(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80002cba:	a009                	j	80002cbc <.LBB13_12+0x40>
        pop_off();
    80002cbc:	0001b097          	auipc	ra,0x1b
    80002cc0:	f7c080e7          	jalr	-132(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80002cc4:	a009                	j	80002cc6 <.LBB13_12+0x4a>
    }
    80002cc6:	60aa                	ld	ra,136(sp)
    80002cc8:	6149                	addi	sp,sp,144
    80002cca:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3475fa44672a5874E:

0000000080002ccc <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3475fa44672a5874E>:
    pub fn release(&self) {
    80002ccc:	7175                	addi	sp,sp,-144
    80002cce:	e506                	sd	ra,136(sp)
    80002cd0:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002cd2:	f02a                	sd	a0,32(sp)
    80002cd4:	00001097          	auipc	ra,0x1
    80002cd8:	842080e7          	jalr	-1982(ra) # 80003516 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E>
    80002cdc:	ec2a                	sd	a0,24(sp)
    80002cde:	a009                	j	80002ce0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3475fa44672a5874E+0x14>
    80002ce0:	6562                	ld	a0,24(sp)
    80002ce2:	e105                	bnez	a0,80002d02 <.LBB14_10+0x16>
    80002ce4:	a009                	j	80002ce6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3475fa44672a5874E+0x1a>
            panic!("spinlock {} release", self.name);
    80002ce6:	7502                	ld	a0,32(sp)
    80002ce8:	f4aa                	sd	a0,104(sp)
    80002cea:	e12a                	sd	a0,128(sp)

0000000080002cec <.LBB14_10>:
    80002cec:	00005597          	auipc	a1,0x5
    80002cf0:	09658593          	addi	a1,a1,150 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002cf4:	00005097          	auipc	ra,0x5
    80002cf8:	142080e7          	jalr	322(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002cfc:	e82a                	sd	a0,16(sp)
    80002cfe:	e42e                	sd	a1,8(sp)
    80002d00:	a809                	j	80002d12 <.LBB14_10+0x26>
        self.cpu_id.set(-1);
    80002d02:	7502                	ld	a0,32(sp)
    80002d04:	0541                	addi	a0,a0,16
    80002d06:	55fd                	li	a1,-1
    80002d08:	00014097          	auipc	ra,0x14
    80002d0c:	b6a080e7          	jalr	-1174(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002d10:	a825                	j	80002d48 <.LBB14_12+0x14>
            panic!("spinlock {} release", self.name);
    80002d12:	6542                	ld	a0,16(sp)
    80002d14:	ecaa                	sd	a0,88(sp)
    80002d16:	65a2                	ld	a1,8(sp)
    80002d18:	f0ae                	sd	a1,96(sp)

0000000080002d1a <.LBB14_11>:
    80002d1a:	00021597          	auipc	a1,0x21
    80002d1e:	0f658593          	addi	a1,a1,246 # 80023e10 <.L__unnamed_3>
    80002d22:	1028                	addi	a0,sp,40
    80002d24:	4609                	li	a2,2
    80002d26:	08b4                	addi	a3,sp,88
    80002d28:	4705                	li	a4,1
    80002d2a:	00003097          	auipc	ra,0x3
    80002d2e:	9fa080e7          	jalr	-1542(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002d32:	a009                	j	80002d34 <.LBB14_12>

0000000080002d34 <.LBB14_12>:
    80002d34:	00021597          	auipc	a1,0x21
    80002d38:	0fc58593          	addi	a1,a1,252 # 80023e30 <.L__unnamed_4>
    80002d3c:	1028                	addi	a0,sp,40
    80002d3e:	0001e097          	auipc	ra,0x1e
    80002d42:	ff8080e7          	jalr	-8(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002d46:	0000                	unimp
    80002d48:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002d4a:	06a10b23          	sb	a0,118(sp)
    80002d4e:	0000a097          	auipc	ra,0xa
    80002d52:	330080e7          	jalr	816(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002d56:	a009                	j	80002d58 <.LBB14_12+0x24>
        self.locked.store(false, Ordering::Release);
    80002d58:	7502                	ld	a0,32(sp)
    80002d5a:	0561                	addi	a0,a0,24
    80002d5c:	4585                	li	a1,1
    80002d5e:	06b10ba3          	sb	a1,119(sp)
    80002d62:	4601                	li	a2,0
    80002d64:	e02e                	sd	a1,0(sp)
    80002d66:	85b2                	mv	a1,a2
    80002d68:	6602                	ld	a2,0(sp)
    80002d6a:	0000a097          	auipc	ra,0xa
    80002d6e:	250080e7          	jalr	592(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80002d72:	a009                	j	80002d74 <.LBB14_12+0x40>
        pop_off();
    80002d74:	0001b097          	auipc	ra,0x1b
    80002d78:	ec4080e7          	jalr	-316(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80002d7c:	a009                	j	80002d7e <.LBB14_12+0x4a>
    }
    80002d7e:	60aa                	ld	ra,136(sp)
    80002d80:	6149                	addi	sp,sp,144
    80002d82:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h6bed4fb4dc60ee27E:

0000000080002d84 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h6bed4fb4dc60ee27E>:
    pub fn release(&self) {
    80002d84:	7175                	addi	sp,sp,-144
    80002d86:	e506                	sd	ra,136(sp)
    80002d88:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002d8a:	f02a                	sd	a0,32(sp)
    80002d8c:	00001097          	auipc	ra,0x1
    80002d90:	a14080e7          	jalr	-1516(ra) # 800037a0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE>
    80002d94:	ec2a                	sd	a0,24(sp)
    80002d96:	a009                	j	80002d98 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h6bed4fb4dc60ee27E+0x14>
    80002d98:	6562                	ld	a0,24(sp)
    80002d9a:	e105                	bnez	a0,80002dba <.LBB15_10+0x16>
    80002d9c:	a009                	j	80002d9e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h6bed4fb4dc60ee27E+0x1a>
            panic!("spinlock {} release", self.name);
    80002d9e:	7502                	ld	a0,32(sp)
    80002da0:	f4aa                	sd	a0,104(sp)
    80002da2:	e12a                	sd	a0,128(sp)

0000000080002da4 <.LBB15_10>:
    80002da4:	00005597          	auipc	a1,0x5
    80002da8:	fde58593          	addi	a1,a1,-34 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002dac:	00005097          	auipc	ra,0x5
    80002db0:	08a080e7          	jalr	138(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002db4:	e82a                	sd	a0,16(sp)
    80002db6:	e42e                	sd	a1,8(sp)
    80002db8:	a809                	j	80002dca <.LBB15_10+0x26>
        self.cpu_id.set(-1);
    80002dba:	7502                	ld	a0,32(sp)
    80002dbc:	0541                	addi	a0,a0,16
    80002dbe:	55fd                	li	a1,-1
    80002dc0:	00014097          	auipc	ra,0x14
    80002dc4:	ab2080e7          	jalr	-1358(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002dc8:	a825                	j	80002e00 <.LBB15_12+0x14>
            panic!("spinlock {} release", self.name);
    80002dca:	6542                	ld	a0,16(sp)
    80002dcc:	ecaa                	sd	a0,88(sp)
    80002dce:	65a2                	ld	a1,8(sp)
    80002dd0:	f0ae                	sd	a1,96(sp)

0000000080002dd2 <.LBB15_11>:
    80002dd2:	00021597          	auipc	a1,0x21
    80002dd6:	03e58593          	addi	a1,a1,62 # 80023e10 <.L__unnamed_3>
    80002dda:	1028                	addi	a0,sp,40
    80002ddc:	4609                	li	a2,2
    80002dde:	08b4                	addi	a3,sp,88
    80002de0:	4705                	li	a4,1
    80002de2:	00003097          	auipc	ra,0x3
    80002de6:	942080e7          	jalr	-1726(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002dea:	a009                	j	80002dec <.LBB15_12>

0000000080002dec <.LBB15_12>:
    80002dec:	00021597          	auipc	a1,0x21
    80002df0:	04458593          	addi	a1,a1,68 # 80023e30 <.L__unnamed_4>
    80002df4:	1028                	addi	a0,sp,40
    80002df6:	0001e097          	auipc	ra,0x1e
    80002dfa:	f40080e7          	jalr	-192(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002dfe:	0000                	unimp
    80002e00:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002e02:	06a10b23          	sb	a0,118(sp)
    80002e06:	0000a097          	auipc	ra,0xa
    80002e0a:	278080e7          	jalr	632(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002e0e:	a009                	j	80002e10 <.LBB15_12+0x24>
        self.locked.store(false, Ordering::Release);
    80002e10:	7502                	ld	a0,32(sp)
    80002e12:	0561                	addi	a0,a0,24
    80002e14:	4585                	li	a1,1
    80002e16:	06b10ba3          	sb	a1,119(sp)
    80002e1a:	4601                	li	a2,0
    80002e1c:	e02e                	sd	a1,0(sp)
    80002e1e:	85b2                	mv	a1,a2
    80002e20:	6602                	ld	a2,0(sp)
    80002e22:	0000a097          	auipc	ra,0xa
    80002e26:	198080e7          	jalr	408(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80002e2a:	a009                	j	80002e2c <.LBB15_12+0x40>
        pop_off();
    80002e2c:	0001b097          	auipc	ra,0x1b
    80002e30:	e0c080e7          	jalr	-500(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80002e34:	a009                	j	80002e36 <.LBB15_12+0x4a>
    }
    80002e36:	60aa                	ld	ra,136(sp)
    80002e38:	6149                	addi	sp,sp,144
    80002e3a:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h8e15075d7634cc19E:

0000000080002e3c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h8e15075d7634cc19E>:
    pub fn release(&self) {
    80002e3c:	7175                	addi	sp,sp,-144
    80002e3e:	e506                	sd	ra,136(sp)
    80002e40:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002e42:	f02a                	sd	a0,32(sp)
    80002e44:	00000097          	auipc	ra,0x0
    80002e48:	448080e7          	jalr	1096(ra) # 8000328c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E>
    80002e4c:	ec2a                	sd	a0,24(sp)
    80002e4e:	a009                	j	80002e50 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h8e15075d7634cc19E+0x14>
    80002e50:	6562                	ld	a0,24(sp)
    80002e52:	e105                	bnez	a0,80002e72 <.LBB16_10+0x16>
    80002e54:	a009                	j	80002e56 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h8e15075d7634cc19E+0x1a>
            panic!("spinlock {} release", self.name);
    80002e56:	7502                	ld	a0,32(sp)
    80002e58:	f4aa                	sd	a0,104(sp)
    80002e5a:	e12a                	sd	a0,128(sp)

0000000080002e5c <.LBB16_10>:
    80002e5c:	00005597          	auipc	a1,0x5
    80002e60:	f2658593          	addi	a1,a1,-218 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002e64:	00005097          	auipc	ra,0x5
    80002e68:	fd2080e7          	jalr	-46(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002e6c:	e82a                	sd	a0,16(sp)
    80002e6e:	e42e                	sd	a1,8(sp)
    80002e70:	a809                	j	80002e82 <.LBB16_10+0x26>
        self.cpu_id.set(-1);
    80002e72:	7502                	ld	a0,32(sp)
    80002e74:	0541                	addi	a0,a0,16
    80002e76:	55fd                	li	a1,-1
    80002e78:	00014097          	auipc	ra,0x14
    80002e7c:	9fa080e7          	jalr	-1542(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002e80:	a825                	j	80002eb8 <.LBB16_12+0x14>
            panic!("spinlock {} release", self.name);
    80002e82:	6542                	ld	a0,16(sp)
    80002e84:	ecaa                	sd	a0,88(sp)
    80002e86:	65a2                	ld	a1,8(sp)
    80002e88:	f0ae                	sd	a1,96(sp)

0000000080002e8a <.LBB16_11>:
    80002e8a:	00021597          	auipc	a1,0x21
    80002e8e:	f8658593          	addi	a1,a1,-122 # 80023e10 <.L__unnamed_3>
    80002e92:	1028                	addi	a0,sp,40
    80002e94:	4609                	li	a2,2
    80002e96:	08b4                	addi	a3,sp,88
    80002e98:	4705                	li	a4,1
    80002e9a:	00003097          	auipc	ra,0x3
    80002e9e:	88a080e7          	jalr	-1910(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002ea2:	a009                	j	80002ea4 <.LBB16_12>

0000000080002ea4 <.LBB16_12>:
    80002ea4:	00021597          	auipc	a1,0x21
    80002ea8:	f8c58593          	addi	a1,a1,-116 # 80023e30 <.L__unnamed_4>
    80002eac:	1028                	addi	a0,sp,40
    80002eae:	0001e097          	auipc	ra,0x1e
    80002eb2:	e88080e7          	jalr	-376(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002eb6:	0000                	unimp
    80002eb8:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002eba:	06a10b23          	sb	a0,118(sp)
    80002ebe:	0000a097          	auipc	ra,0xa
    80002ec2:	1c0080e7          	jalr	448(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002ec6:	a009                	j	80002ec8 <.LBB16_12+0x24>
        self.locked.store(false, Ordering::Release);
    80002ec8:	7502                	ld	a0,32(sp)
    80002eca:	0561                	addi	a0,a0,24
    80002ecc:	4585                	li	a1,1
    80002ece:	06b10ba3          	sb	a1,119(sp)
    80002ed2:	4601                	li	a2,0
    80002ed4:	e02e                	sd	a1,0(sp)
    80002ed6:	85b2                	mv	a1,a2
    80002ed8:	6602                	ld	a2,0(sp)
    80002eda:	0000a097          	auipc	ra,0xa
    80002ede:	0e0080e7          	jalr	224(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80002ee2:	a009                	j	80002ee4 <.LBB16_12+0x40>
        pop_off();
    80002ee4:	0001b097          	auipc	ra,0x1b
    80002ee8:	d54080e7          	jalr	-684(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80002eec:	a009                	j	80002eee <.LBB16_12+0x4a>
    }
    80002eee:	60aa                	ld	ra,136(sp)
    80002ef0:	6149                	addi	sp,sp,144
    80002ef2:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hafcf7d3e54fd5e24E:

0000000080002ef4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hafcf7d3e54fd5e24E>:
    pub fn release(&self) {
    80002ef4:	7175                	addi	sp,sp,-144
    80002ef6:	e506                	sd	ra,136(sp)
    80002ef8:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002efa:	f02a                	sd	a0,32(sp)
    80002efc:	00000097          	auipc	ra,0x0
    80002f00:	412080e7          	jalr	1042(ra) # 8000330e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE>
    80002f04:	ec2a                	sd	a0,24(sp)
    80002f06:	a009                	j	80002f08 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hafcf7d3e54fd5e24E+0x14>
    80002f08:	6562                	ld	a0,24(sp)
    80002f0a:	e105                	bnez	a0,80002f2a <.LBB17_10+0x16>
    80002f0c:	a009                	j	80002f0e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hafcf7d3e54fd5e24E+0x1a>
            panic!("spinlock {} release", self.name);
    80002f0e:	7502                	ld	a0,32(sp)
    80002f10:	f4aa                	sd	a0,104(sp)
    80002f12:	e12a                	sd	a0,128(sp)

0000000080002f14 <.LBB17_10>:
    80002f14:	00005597          	auipc	a1,0x5
    80002f18:	e6e58593          	addi	a1,a1,-402 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002f1c:	00005097          	auipc	ra,0x5
    80002f20:	f1a080e7          	jalr	-230(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002f24:	e82a                	sd	a0,16(sp)
    80002f26:	e42e                	sd	a1,8(sp)
    80002f28:	a809                	j	80002f3a <.LBB17_10+0x26>
        self.cpu_id.set(-1);
    80002f2a:	7502                	ld	a0,32(sp)
    80002f2c:	0541                	addi	a0,a0,16
    80002f2e:	55fd                	li	a1,-1
    80002f30:	00014097          	auipc	ra,0x14
    80002f34:	942080e7          	jalr	-1726(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002f38:	a825                	j	80002f70 <.LBB17_12+0x14>
            panic!("spinlock {} release", self.name);
    80002f3a:	6542                	ld	a0,16(sp)
    80002f3c:	ecaa                	sd	a0,88(sp)
    80002f3e:	65a2                	ld	a1,8(sp)
    80002f40:	f0ae                	sd	a1,96(sp)

0000000080002f42 <.LBB17_11>:
    80002f42:	00021597          	auipc	a1,0x21
    80002f46:	ece58593          	addi	a1,a1,-306 # 80023e10 <.L__unnamed_3>
    80002f4a:	1028                	addi	a0,sp,40
    80002f4c:	4609                	li	a2,2
    80002f4e:	08b4                	addi	a3,sp,88
    80002f50:	4705                	li	a4,1
    80002f52:	00002097          	auipc	ra,0x2
    80002f56:	7d2080e7          	jalr	2002(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80002f5a:	a009                	j	80002f5c <.LBB17_12>

0000000080002f5c <.LBB17_12>:
    80002f5c:	00021597          	auipc	a1,0x21
    80002f60:	ed458593          	addi	a1,a1,-300 # 80023e30 <.L__unnamed_4>
    80002f64:	1028                	addi	a0,sp,40
    80002f66:	0001e097          	auipc	ra,0x1e
    80002f6a:	dd0080e7          	jalr	-560(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80002f6e:	0000                	unimp
    80002f70:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80002f72:	06a10b23          	sb	a0,118(sp)
    80002f76:	0000a097          	auipc	ra,0xa
    80002f7a:	108080e7          	jalr	264(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80002f7e:	a009                	j	80002f80 <.LBB17_12+0x24>
        self.locked.store(false, Ordering::Release);
    80002f80:	7502                	ld	a0,32(sp)
    80002f82:	0561                	addi	a0,a0,24
    80002f84:	4585                	li	a1,1
    80002f86:	06b10ba3          	sb	a1,119(sp)
    80002f8a:	4601                	li	a2,0
    80002f8c:	e02e                	sd	a1,0(sp)
    80002f8e:	85b2                	mv	a1,a2
    80002f90:	6602                	ld	a2,0(sp)
    80002f92:	0000a097          	auipc	ra,0xa
    80002f96:	028080e7          	jalr	40(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80002f9a:	a009                	j	80002f9c <.LBB17_12+0x40>
        pop_off();
    80002f9c:	0001b097          	auipc	ra,0x1b
    80002fa0:	c9c080e7          	jalr	-868(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80002fa4:	a009                	j	80002fa6 <.LBB17_12+0x4a>
    }
    80002fa6:	60aa                	ld	ra,136(sp)
    80002fa8:	6149                	addi	sp,sp,144
    80002faa:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hcfc08786fca62e40E:

0000000080002fac <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hcfc08786fca62e40E>:
    pub fn release(&self) {
    80002fac:	7175                	addi	sp,sp,-144
    80002fae:	e506                	sd	ra,136(sp)
    80002fb0:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80002fb2:	f02a                	sd	a0,32(sp)
    80002fb4:	00000097          	auipc	ra,0x0
    80002fb8:	6e8080e7          	jalr	1768(ra) # 8000369c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E>
    80002fbc:	ec2a                	sd	a0,24(sp)
    80002fbe:	a009                	j	80002fc0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hcfc08786fca62e40E+0x14>
    80002fc0:	6562                	ld	a0,24(sp)
    80002fc2:	e105                	bnez	a0,80002fe2 <.LBB18_10+0x16>
    80002fc4:	a009                	j	80002fc6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hcfc08786fca62e40E+0x1a>
            panic!("spinlock {} release", self.name);
    80002fc6:	7502                	ld	a0,32(sp)
    80002fc8:	f4aa                	sd	a0,104(sp)
    80002fca:	e12a                	sd	a0,128(sp)

0000000080002fcc <.LBB18_10>:
    80002fcc:	00005597          	auipc	a1,0x5
    80002fd0:	db658593          	addi	a1,a1,-586 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80002fd4:	00005097          	auipc	ra,0x5
    80002fd8:	e62080e7          	jalr	-414(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80002fdc:	e82a                	sd	a0,16(sp)
    80002fde:	e42e                	sd	a1,8(sp)
    80002fe0:	a809                	j	80002ff2 <.LBB18_10+0x26>
        self.cpu_id.set(-1);
    80002fe2:	7502                	ld	a0,32(sp)
    80002fe4:	0541                	addi	a0,a0,16
    80002fe6:	55fd                	li	a1,-1
    80002fe8:	00014097          	auipc	ra,0x14
    80002fec:	88a080e7          	jalr	-1910(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80002ff0:	a825                	j	80003028 <.LBB18_12+0x14>
            panic!("spinlock {} release", self.name);
    80002ff2:	6542                	ld	a0,16(sp)
    80002ff4:	ecaa                	sd	a0,88(sp)
    80002ff6:	65a2                	ld	a1,8(sp)
    80002ff8:	f0ae                	sd	a1,96(sp)

0000000080002ffa <.LBB18_11>:
    80002ffa:	00021597          	auipc	a1,0x21
    80002ffe:	e1658593          	addi	a1,a1,-490 # 80023e10 <.L__unnamed_3>
    80003002:	1028                	addi	a0,sp,40
    80003004:	4609                	li	a2,2
    80003006:	08b4                	addi	a3,sp,88
    80003008:	4705                	li	a4,1
    8000300a:	00002097          	auipc	ra,0x2
    8000300e:	71a080e7          	jalr	1818(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80003012:	a009                	j	80003014 <.LBB18_12>

0000000080003014 <.LBB18_12>:
    80003014:	00021597          	auipc	a1,0x21
    80003018:	e1c58593          	addi	a1,a1,-484 # 80023e30 <.L__unnamed_4>
    8000301c:	1028                	addi	a0,sp,40
    8000301e:	0001e097          	auipc	ra,0x1e
    80003022:	d18080e7          	jalr	-744(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80003026:	0000                	unimp
    80003028:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    8000302a:	06a10b23          	sb	a0,118(sp)
    8000302e:	0000a097          	auipc	ra,0xa
    80003032:	050080e7          	jalr	80(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80003036:	a009                	j	80003038 <.LBB18_12+0x24>
        self.locked.store(false, Ordering::Release);
    80003038:	7502                	ld	a0,32(sp)
    8000303a:	0561                	addi	a0,a0,24
    8000303c:	4585                	li	a1,1
    8000303e:	06b10ba3          	sb	a1,119(sp)
    80003042:	4601                	li	a2,0
    80003044:	e02e                	sd	a1,0(sp)
    80003046:	85b2                	mv	a1,a2
    80003048:	6602                	ld	a2,0(sp)
    8000304a:	0000a097          	auipc	ra,0xa
    8000304e:	f70080e7          	jalr	-144(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    80003052:	a009                	j	80003054 <.LBB18_12+0x40>
        pop_off();
    80003054:	0001b097          	auipc	ra,0x1b
    80003058:	be4080e7          	jalr	-1052(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    8000305c:	a009                	j	8000305e <.LBB18_12+0x4a>
    }
    8000305e:	60aa                	ld	ra,136(sp)
    80003060:	6149                	addi	sp,sp,144
    80003062:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he596454499902299E:

0000000080003064 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he596454499902299E>:
    pub fn release(&self) {
    80003064:	7175                	addi	sp,sp,-144
    80003066:	e506                	sd	ra,136(sp)
    80003068:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    8000306a:	f02a                	sd	a0,32(sp)
    8000306c:	00000097          	auipc	ra,0x0
    80003070:	428080e7          	jalr	1064(ra) # 80003494 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E>
    80003074:	ec2a                	sd	a0,24(sp)
    80003076:	a009                	j	80003078 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he596454499902299E+0x14>
    80003078:	6562                	ld	a0,24(sp)
    8000307a:	e105                	bnez	a0,8000309a <.LBB19_10+0x16>
    8000307c:	a009                	j	8000307e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he596454499902299E+0x1a>
            panic!("spinlock {} release", self.name);
    8000307e:	7502                	ld	a0,32(sp)
    80003080:	f4aa                	sd	a0,104(sp)
    80003082:	e12a                	sd	a0,128(sp)

0000000080003084 <.LBB19_10>:
    80003084:	00005597          	auipc	a1,0x5
    80003088:	cfe58593          	addi	a1,a1,-770 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    8000308c:	00005097          	auipc	ra,0x5
    80003090:	daa080e7          	jalr	-598(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80003094:	e82a                	sd	a0,16(sp)
    80003096:	e42e                	sd	a1,8(sp)
    80003098:	a809                	j	800030aa <.LBB19_10+0x26>
        self.cpu_id.set(-1);
    8000309a:	7502                	ld	a0,32(sp)
    8000309c:	0541                	addi	a0,a0,16
    8000309e:	55fd                	li	a1,-1
    800030a0:	00013097          	auipc	ra,0x13
    800030a4:	7d2080e7          	jalr	2002(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    800030a8:	a825                	j	800030e0 <.LBB19_12+0x14>
            panic!("spinlock {} release", self.name);
    800030aa:	6542                	ld	a0,16(sp)
    800030ac:	ecaa                	sd	a0,88(sp)
    800030ae:	65a2                	ld	a1,8(sp)
    800030b0:	f0ae                	sd	a1,96(sp)

00000000800030b2 <.LBB19_11>:
    800030b2:	00021597          	auipc	a1,0x21
    800030b6:	d5e58593          	addi	a1,a1,-674 # 80023e10 <.L__unnamed_3>
    800030ba:	1028                	addi	a0,sp,40
    800030bc:	4609                	li	a2,2
    800030be:	08b4                	addi	a3,sp,88
    800030c0:	4705                	li	a4,1
    800030c2:	00002097          	auipc	ra,0x2
    800030c6:	662080e7          	jalr	1634(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800030ca:	a009                	j	800030cc <.LBB19_12>

00000000800030cc <.LBB19_12>:
    800030cc:	00021597          	auipc	a1,0x21
    800030d0:	d6458593          	addi	a1,a1,-668 # 80023e30 <.L__unnamed_4>
    800030d4:	1028                	addi	a0,sp,40
    800030d6:	0001e097          	auipc	ra,0x1e
    800030da:	c60080e7          	jalr	-928(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    800030de:	0000                	unimp
    800030e0:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    800030e2:	06a10b23          	sb	a0,118(sp)
    800030e6:	0000a097          	auipc	ra,0xa
    800030ea:	f98080e7          	jalr	-104(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    800030ee:	a009                	j	800030f0 <.LBB19_12+0x24>
        self.locked.store(false, Ordering::Release);
    800030f0:	7502                	ld	a0,32(sp)
    800030f2:	0561                	addi	a0,a0,24
    800030f4:	4585                	li	a1,1
    800030f6:	06b10ba3          	sb	a1,119(sp)
    800030fa:	4601                	li	a2,0
    800030fc:	e02e                	sd	a1,0(sp)
    800030fe:	85b2                	mv	a1,a2
    80003100:	6602                	ld	a2,0(sp)
    80003102:	0000a097          	auipc	ra,0xa
    80003106:	eb8080e7          	jalr	-328(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    8000310a:	a009                	j	8000310c <.LBB19_12+0x40>
        pop_off();
    8000310c:	0001b097          	auipc	ra,0x1b
    80003110:	b2c080e7          	jalr	-1236(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80003114:	a009                	j	80003116 <.LBB19_12+0x4a>
    }
    80003116:	60aa                	ld	ra,136(sp)
    80003118:	6149                	addi	sp,sp,144
    8000311a:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he7f117cb3ee9e6c4E:

000000008000311c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he7f117cb3ee9e6c4E>:
    pub fn release(&self) {
    8000311c:	7175                	addi	sp,sp,-144
    8000311e:	e506                	sd	ra,136(sp)
    80003120:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    80003122:	f02a                	sd	a0,32(sp)
    80003124:	00000097          	auipc	ra,0x0
    80003128:	474080e7          	jalr	1140(ra) # 80003598 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE>
    8000312c:	ec2a                	sd	a0,24(sp)
    8000312e:	a009                	j	80003130 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he7f117cb3ee9e6c4E+0x14>
    80003130:	6562                	ld	a0,24(sp)
    80003132:	e105                	bnez	a0,80003152 <.LBB20_10+0x16>
    80003134:	a009                	j	80003136 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he7f117cb3ee9e6c4E+0x1a>
            panic!("spinlock {} release", self.name);
    80003136:	7502                	ld	a0,32(sp)
    80003138:	f4aa                	sd	a0,104(sp)
    8000313a:	e12a                	sd	a0,128(sp)

000000008000313c <.LBB20_10>:
    8000313c:	00005597          	auipc	a1,0x5
    80003140:	c4658593          	addi	a1,a1,-954 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80003144:	00005097          	auipc	ra,0x5
    80003148:	cf2080e7          	jalr	-782(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    8000314c:	e82a                	sd	a0,16(sp)
    8000314e:	e42e                	sd	a1,8(sp)
    80003150:	a809                	j	80003162 <.LBB20_10+0x26>
        self.cpu_id.set(-1);
    80003152:	7502                	ld	a0,32(sp)
    80003154:	0541                	addi	a0,a0,16
    80003156:	55fd                	li	a1,-1
    80003158:	00013097          	auipc	ra,0x13
    8000315c:	71a080e7          	jalr	1818(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80003160:	a825                	j	80003198 <.LBB20_12+0x14>
            panic!("spinlock {} release", self.name);
    80003162:	6542                	ld	a0,16(sp)
    80003164:	ecaa                	sd	a0,88(sp)
    80003166:	65a2                	ld	a1,8(sp)
    80003168:	f0ae                	sd	a1,96(sp)

000000008000316a <.LBB20_11>:
    8000316a:	00021597          	auipc	a1,0x21
    8000316e:	ca658593          	addi	a1,a1,-858 # 80023e10 <.L__unnamed_3>
    80003172:	1028                	addi	a0,sp,40
    80003174:	4609                	li	a2,2
    80003176:	08b4                	addi	a3,sp,88
    80003178:	4705                	li	a4,1
    8000317a:	00002097          	auipc	ra,0x2
    8000317e:	5aa080e7          	jalr	1450(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80003182:	a009                	j	80003184 <.LBB20_12>

0000000080003184 <.LBB20_12>:
    80003184:	00021597          	auipc	a1,0x21
    80003188:	cac58593          	addi	a1,a1,-852 # 80023e30 <.L__unnamed_4>
    8000318c:	1028                	addi	a0,sp,40
    8000318e:	0001e097          	auipc	ra,0x1e
    80003192:	ba8080e7          	jalr	-1112(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80003196:	0000                	unimp
    80003198:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    8000319a:	06a10b23          	sb	a0,118(sp)
    8000319e:	0000a097          	auipc	ra,0xa
    800031a2:	ee0080e7          	jalr	-288(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    800031a6:	a009                	j	800031a8 <.LBB20_12+0x24>
        self.locked.store(false, Ordering::Release);
    800031a8:	7502                	ld	a0,32(sp)
    800031aa:	0561                	addi	a0,a0,24
    800031ac:	4585                	li	a1,1
    800031ae:	06b10ba3          	sb	a1,119(sp)
    800031b2:	4601                	li	a2,0
    800031b4:	e02e                	sd	a1,0(sp)
    800031b6:	85b2                	mv	a1,a2
    800031b8:	6602                	ld	a2,0(sp)
    800031ba:	0000a097          	auipc	ra,0xa
    800031be:	e00080e7          	jalr	-512(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    800031c2:	a009                	j	800031c4 <.LBB20_12+0x40>
        pop_off();
    800031c4:	0001b097          	auipc	ra,0x1b
    800031c8:	a74080e7          	jalr	-1420(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    800031cc:	a009                	j	800031ce <.LBB20_12+0x4a>
    }
    800031ce:	60aa                	ld	ra,136(sp)
    800031d0:	6149                	addi	sp,sp,144
    800031d2:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hf94aca6222210a61E:

00000000800031d4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hf94aca6222210a61E>:
    pub fn release(&self) {
    800031d4:	7175                	addi	sp,sp,-144
    800031d6:	e506                	sd	ra,136(sp)
    800031d8:	fcaa                	sd	a0,120(sp)
        if !self.holding() {
    800031da:	f02a                	sd	a0,32(sp)
    800031dc:	00000097          	auipc	ra,0x0
    800031e0:	1b4080e7          	jalr	436(ra) # 80003390 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE>
    800031e4:	ec2a                	sd	a0,24(sp)
    800031e6:	a009                	j	800031e8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hf94aca6222210a61E+0x14>
    800031e8:	6562                	ld	a0,24(sp)
    800031ea:	e105                	bnez	a0,8000320a <.LBB21_10+0x16>
    800031ec:	a009                	j	800031ee <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hf94aca6222210a61E+0x1a>
            panic!("spinlock {} release", self.name);
    800031ee:	7502                	ld	a0,32(sp)
    800031f0:	f4aa                	sd	a0,104(sp)
    800031f2:	e12a                	sd	a0,128(sp)

00000000800031f4 <.LBB21_10>:
    800031f4:	00005597          	auipc	a1,0x5
    800031f8:	b8e58593          	addi	a1,a1,-1138 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800031fc:	00005097          	auipc	ra,0x5
    80003200:	c3a080e7          	jalr	-966(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80003204:	e82a                	sd	a0,16(sp)
    80003206:	e42e                	sd	a1,8(sp)
    80003208:	a809                	j	8000321a <.LBB21_10+0x26>
        self.cpu_id.set(-1);
    8000320a:	7502                	ld	a0,32(sp)
    8000320c:	0541                	addi	a0,a0,16
    8000320e:	55fd                	li	a1,-1
    80003210:	00013097          	auipc	ra,0x13
    80003214:	662080e7          	jalr	1634(ra) # 80016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>
    80003218:	a825                	j	80003250 <.LBB21_12+0x14>
            panic!("spinlock {} release", self.name);
    8000321a:	6542                	ld	a0,16(sp)
    8000321c:	ecaa                	sd	a0,88(sp)
    8000321e:	65a2                	ld	a1,8(sp)
    80003220:	f0ae                	sd	a1,96(sp)

0000000080003222 <.LBB21_11>:
    80003222:	00021597          	auipc	a1,0x21
    80003226:	bee58593          	addi	a1,a1,-1042 # 80023e10 <.L__unnamed_3>
    8000322a:	1028                	addi	a0,sp,40
    8000322c:	4609                	li	a2,2
    8000322e:	08b4                	addi	a3,sp,88
    80003230:	4705                	li	a4,1
    80003232:	00002097          	auipc	ra,0x2
    80003236:	4f2080e7          	jalr	1266(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000323a:	a009                	j	8000323c <.LBB21_12>

000000008000323c <.LBB21_12>:
    8000323c:	00021597          	auipc	a1,0x21
    80003240:	bf458593          	addi	a1,a1,-1036 # 80023e30 <.L__unnamed_4>
    80003244:	1028                	addi	a0,sp,40
    80003246:	0001e097          	auipc	ra,0x1e
    8000324a:	af0080e7          	jalr	-1296(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000324e:	0000                	unimp
    80003250:	4511                	li	a0,4
        fence(Ordering::SeqCst);
    80003252:	06a10b23          	sb	a0,118(sp)
    80003256:	0000a097          	auipc	ra,0xa
    8000325a:	e28080e7          	jalr	-472(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    8000325e:	a009                	j	80003260 <.LBB21_12+0x24>
        self.locked.store(false, Ordering::Release);
    80003260:	7502                	ld	a0,32(sp)
    80003262:	0561                	addi	a0,a0,24
    80003264:	4585                	li	a1,1
    80003266:	06b10ba3          	sb	a1,119(sp)
    8000326a:	4601                	li	a2,0
    8000326c:	e02e                	sd	a1,0(sp)
    8000326e:	85b2                	mv	a1,a2
    80003270:	6602                	ld	a2,0(sp)
    80003272:	0000a097          	auipc	ra,0xa
    80003276:	d48080e7          	jalr	-696(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    8000327a:	a009                	j	8000327c <.LBB21_12+0x40>
        pop_off();
    8000327c:	0001b097          	auipc	ra,0x1b
    80003280:	9bc080e7          	jalr	-1604(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    80003284:	a009                	j	80003286 <.LBB21_12+0x4a>
    }
    80003286:	60aa                	ld	ra,136(sp)
    80003288:	6149                	addi	sp,sp,144
    8000328a:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E:

000000008000328c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E>:

    // Check whether this cpu is holding the lock.
    // Interrupts must be off.
    pub fn holding(&self) -> bool{
    8000328c:	7139                	addi	sp,sp,-64
    8000328e:	fc06                	sd	ra,56(sp)
    80003290:	f82a                	sd	a0,48(sp)
        // self.locked.load(Ordering::Relaxed) && (self.cpu_id.get() == unsafe{ cpuid() } as isize)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    80003292:	01850593          	addi	a1,a0,24
    80003296:	4601                	li	a2,0
    80003298:	02c107a3          	sb	a2,47(sp)
    8000329c:	f02a                	sd	a0,32(sp)
    8000329e:	852e                	mv	a0,a1
    800032a0:	85b2                	mv	a1,a2
    800032a2:	0000a097          	auipc	ra,0xa
    800032a6:	c9a080e7          	jalr	-870(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    800032aa:	ec2a                	sd	a0,24(sp)
    800032ac:	a035                	j	800032d8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x4c>
    800032ae:	4505                	li	a0,1
    800032b0:	02a10723          	sb	a0,46(sp)
    800032b4:	a829                	j	800032ce <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x42>
    800032b6:	4501                	li	a0,0
    800032b8:	02a10723          	sb	a0,46(sp)
    800032bc:	a809                	j	800032ce <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x42>
    800032be:	7502                	ld	a0,32(sp)
    800032c0:	0541                	addi	a0,a0,16
    800032c2:	00013097          	auipc	ra,0x13
    800032c6:	594080e7          	jalr	1428(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    800032ca:	e82a                	sd	a0,16(sp)
    800032cc:	a809                	j	800032de <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x52>
    800032ce:	02e14503          	lbu	a0,46(sp)
    800032d2:	8905                	andi	a0,a0,1
    800032d4:	e105                	bnez	a0,800032f4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x68>
    800032d6:	a01d                	j	800032fc <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x70>
    800032d8:	6562                	ld	a0,24(sp)
    800032da:	f175                	bnez	a0,800032be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x32>
    800032dc:	bfe9                	j	800032b6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x2a>
    800032de:	0001a097          	auipc	ra,0x1a
    800032e2:	3f2080e7          	jalr	1010(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800032e6:	e42a                	sd	a0,8(sp)
    800032e8:	a009                	j	800032ea <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x5e>
    800032ea:	6542                	ld	a0,16(sp)
    800032ec:	65a2                	ld	a1,8(sp)
    800032ee:	fcb500e3          	beq	a0,a1,800032ae <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x22>
    800032f2:	b7d1                	j	800032b6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x2a>
    800032f4:	4505                	li	a0,1
            return true
    800032f6:	02a106a3          	sb	a0,45(sp)
        }
        false
    }
    800032fa:	a029                	j	80003304 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x78>
    800032fc:	4501                	li	a0,0
        false
    800032fe:	02a106a3          	sb	a0,45(sp)
    }
    80003302:	a009                	j	80003304 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h057493ae1eb3d720E+0x78>
    80003304:	02d14503          	lbu	a0,45(sp)
    80003308:	70e2                	ld	ra,56(sp)
    8000330a:	6121                	addi	sp,sp,64
    8000330c:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE:

000000008000330e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE>:
    pub fn holding(&self) -> bool{
    8000330e:	7139                	addi	sp,sp,-64
    80003310:	fc06                	sd	ra,56(sp)
    80003312:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    80003314:	01850593          	addi	a1,a0,24
    80003318:	4601                	li	a2,0
    8000331a:	02c107a3          	sb	a2,47(sp)
    8000331e:	f02a                	sd	a0,32(sp)
    80003320:	852e                	mv	a0,a1
    80003322:	85b2                	mv	a1,a2
    80003324:	0000a097          	auipc	ra,0xa
    80003328:	c18080e7          	jalr	-1000(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    8000332c:	ec2a                	sd	a0,24(sp)
    8000332e:	a035                	j	8000335a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x4c>
    80003330:	4505                	li	a0,1
    80003332:	02a10723          	sb	a0,46(sp)
    80003336:	a829                	j	80003350 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x42>
    80003338:	4501                	li	a0,0
    8000333a:	02a10723          	sb	a0,46(sp)
    8000333e:	a809                	j	80003350 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x42>
    80003340:	7502                	ld	a0,32(sp)
    80003342:	0541                	addi	a0,a0,16
    80003344:	00013097          	auipc	ra,0x13
    80003348:	512080e7          	jalr	1298(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    8000334c:	e82a                	sd	a0,16(sp)
    8000334e:	a809                	j	80003360 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x52>
    80003350:	02e14503          	lbu	a0,46(sp)
    80003354:	8905                	andi	a0,a0,1
    80003356:	e105                	bnez	a0,80003376 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x68>
    80003358:	a01d                	j	8000337e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x70>
    8000335a:	6562                	ld	a0,24(sp)
    8000335c:	f175                	bnez	a0,80003340 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x32>
    8000335e:	bfe9                	j	80003338 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x2a>
    80003360:	0001a097          	auipc	ra,0x1a
    80003364:	370080e7          	jalr	880(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80003368:	e42a                	sd	a0,8(sp)
    8000336a:	a009                	j	8000336c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x5e>
    8000336c:	6542                	ld	a0,16(sp)
    8000336e:	65a2                	ld	a1,8(sp)
    80003370:	fcb500e3          	beq	a0,a1,80003330 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x22>
    80003374:	b7d1                	j	80003338 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x2a>
    80003376:	4505                	li	a0,1
            return true
    80003378:	02a106a3          	sb	a0,45(sp)
    }
    8000337c:	a029                	j	80003386 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x78>
    8000337e:	4501                	li	a0,0
        false
    80003380:	02a106a3          	sb	a0,45(sp)
    }
    80003384:	a009                	j	80003386 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h18aae879958f987fE+0x78>
    80003386:	02d14503          	lbu	a0,45(sp)
    8000338a:	70e2                	ld	ra,56(sp)
    8000338c:	6121                	addi	sp,sp,64
    8000338e:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE:

0000000080003390 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE>:
    pub fn holding(&self) -> bool{
    80003390:	7139                	addi	sp,sp,-64
    80003392:	fc06                	sd	ra,56(sp)
    80003394:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    80003396:	01850593          	addi	a1,a0,24
    8000339a:	4601                	li	a2,0
    8000339c:	02c107a3          	sb	a2,47(sp)
    800033a0:	f02a                	sd	a0,32(sp)
    800033a2:	852e                	mv	a0,a1
    800033a4:	85b2                	mv	a1,a2
    800033a6:	0000a097          	auipc	ra,0xa
    800033aa:	b96080e7          	jalr	-1130(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    800033ae:	ec2a                	sd	a0,24(sp)
    800033b0:	a035                	j	800033dc <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x4c>
    800033b2:	4505                	li	a0,1
    800033b4:	02a10723          	sb	a0,46(sp)
    800033b8:	a829                	j	800033d2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x42>
    800033ba:	4501                	li	a0,0
    800033bc:	02a10723          	sb	a0,46(sp)
    800033c0:	a809                	j	800033d2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x42>
    800033c2:	7502                	ld	a0,32(sp)
    800033c4:	0541                	addi	a0,a0,16
    800033c6:	00013097          	auipc	ra,0x13
    800033ca:	490080e7          	jalr	1168(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    800033ce:	e82a                	sd	a0,16(sp)
    800033d0:	a809                	j	800033e2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x52>
    800033d2:	02e14503          	lbu	a0,46(sp)
    800033d6:	8905                	andi	a0,a0,1
    800033d8:	e105                	bnez	a0,800033f8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x68>
    800033da:	a01d                	j	80003400 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x70>
    800033dc:	6562                	ld	a0,24(sp)
    800033de:	f175                	bnez	a0,800033c2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x32>
    800033e0:	bfe9                	j	800033ba <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x2a>
    800033e2:	0001a097          	auipc	ra,0x1a
    800033e6:	2ee080e7          	jalr	750(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800033ea:	e42a                	sd	a0,8(sp)
    800033ec:	a009                	j	800033ee <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x5e>
    800033ee:	6542                	ld	a0,16(sp)
    800033f0:	65a2                	ld	a1,8(sp)
    800033f2:	fcb500e3          	beq	a0,a1,800033b2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x22>
    800033f6:	b7d1                	j	800033ba <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x2a>
    800033f8:	4505                	li	a0,1
            return true
    800033fa:	02a106a3          	sb	a0,45(sp)
    }
    800033fe:	a029                	j	80003408 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x78>
    80003400:	4501                	li	a0,0
        false
    80003402:	02a106a3          	sb	a0,45(sp)
    }
    80003406:	a009                	j	80003408 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h1eebf6e52373c52cE+0x78>
    80003408:	02d14503          	lbu	a0,45(sp)
    8000340c:	70e2                	ld	ra,56(sp)
    8000340e:	6121                	addi	sp,sp,64
    80003410:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE:

0000000080003412 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE>:
    pub fn holding(&self) -> bool{
    80003412:	7139                	addi	sp,sp,-64
    80003414:	fc06                	sd	ra,56(sp)
    80003416:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    80003418:	01850593          	addi	a1,a0,24
    8000341c:	4601                	li	a2,0
    8000341e:	02c107a3          	sb	a2,47(sp)
    80003422:	f02a                	sd	a0,32(sp)
    80003424:	852e                	mv	a0,a1
    80003426:	85b2                	mv	a1,a2
    80003428:	0000a097          	auipc	ra,0xa
    8000342c:	b14080e7          	jalr	-1260(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    80003430:	ec2a                	sd	a0,24(sp)
    80003432:	a035                	j	8000345e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x4c>
    80003434:	4505                	li	a0,1
    80003436:	02a10723          	sb	a0,46(sp)
    8000343a:	a829                	j	80003454 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x42>
    8000343c:	4501                	li	a0,0
    8000343e:	02a10723          	sb	a0,46(sp)
    80003442:	a809                	j	80003454 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x42>
    80003444:	7502                	ld	a0,32(sp)
    80003446:	0541                	addi	a0,a0,16
    80003448:	00013097          	auipc	ra,0x13
    8000344c:	40e080e7          	jalr	1038(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    80003450:	e82a                	sd	a0,16(sp)
    80003452:	a809                	j	80003464 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x52>
    80003454:	02e14503          	lbu	a0,46(sp)
    80003458:	8905                	andi	a0,a0,1
    8000345a:	e105                	bnez	a0,8000347a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x68>
    8000345c:	a01d                	j	80003482 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x70>
    8000345e:	6562                	ld	a0,24(sp)
    80003460:	f175                	bnez	a0,80003444 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x32>
    80003462:	bfe9                	j	8000343c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x2a>
    80003464:	0001a097          	auipc	ra,0x1a
    80003468:	26c080e7          	jalr	620(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000346c:	e42a                	sd	a0,8(sp)
    8000346e:	a009                	j	80003470 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x5e>
    80003470:	6542                	ld	a0,16(sp)
    80003472:	65a2                	ld	a1,8(sp)
    80003474:	fcb500e3          	beq	a0,a1,80003434 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x22>
    80003478:	b7d1                	j	8000343c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x2a>
    8000347a:	4505                	li	a0,1
            return true
    8000347c:	02a106a3          	sb	a0,45(sp)
    }
    80003480:	a029                	j	8000348a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x78>
    80003482:	4501                	li	a0,0
        false
    80003484:	02a106a3          	sb	a0,45(sp)
    }
    80003488:	a009                	j	8000348a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h3d6714fbd433d25eE+0x78>
    8000348a:	02d14503          	lbu	a0,45(sp)
    8000348e:	70e2                	ld	ra,56(sp)
    80003490:	6121                	addi	sp,sp,64
    80003492:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E:

0000000080003494 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E>:
    pub fn holding(&self) -> bool{
    80003494:	7139                	addi	sp,sp,-64
    80003496:	fc06                	sd	ra,56(sp)
    80003498:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    8000349a:	01850593          	addi	a1,a0,24
    8000349e:	4601                	li	a2,0
    800034a0:	02c107a3          	sb	a2,47(sp)
    800034a4:	f02a                	sd	a0,32(sp)
    800034a6:	852e                	mv	a0,a1
    800034a8:	85b2                	mv	a1,a2
    800034aa:	0000a097          	auipc	ra,0xa
    800034ae:	a92080e7          	jalr	-1390(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    800034b2:	ec2a                	sd	a0,24(sp)
    800034b4:	a035                	j	800034e0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x4c>
    800034b6:	4505                	li	a0,1
    800034b8:	02a10723          	sb	a0,46(sp)
    800034bc:	a829                	j	800034d6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x42>
    800034be:	4501                	li	a0,0
    800034c0:	02a10723          	sb	a0,46(sp)
    800034c4:	a809                	j	800034d6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x42>
    800034c6:	7502                	ld	a0,32(sp)
    800034c8:	0541                	addi	a0,a0,16
    800034ca:	00013097          	auipc	ra,0x13
    800034ce:	38c080e7          	jalr	908(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    800034d2:	e82a                	sd	a0,16(sp)
    800034d4:	a809                	j	800034e6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x52>
    800034d6:	02e14503          	lbu	a0,46(sp)
    800034da:	8905                	andi	a0,a0,1
    800034dc:	e105                	bnez	a0,800034fc <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x68>
    800034de:	a01d                	j	80003504 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x70>
    800034e0:	6562                	ld	a0,24(sp)
    800034e2:	f175                	bnez	a0,800034c6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x32>
    800034e4:	bfe9                	j	800034be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x2a>
    800034e6:	0001a097          	auipc	ra,0x1a
    800034ea:	1ea080e7          	jalr	490(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800034ee:	e42a                	sd	a0,8(sp)
    800034f0:	a009                	j	800034f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x5e>
    800034f2:	6542                	ld	a0,16(sp)
    800034f4:	65a2                	ld	a1,8(sp)
    800034f6:	fcb500e3          	beq	a0,a1,800034b6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x22>
    800034fa:	b7d1                	j	800034be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x2a>
    800034fc:	4505                	li	a0,1
            return true
    800034fe:	02a106a3          	sb	a0,45(sp)
    }
    80003502:	a029                	j	8000350c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x78>
    80003504:	4501                	li	a0,0
        false
    80003506:	02a106a3          	sb	a0,45(sp)
    }
    8000350a:	a009                	j	8000350c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h52dff029dbbc3408E+0x78>
    8000350c:	02d14503          	lbu	a0,45(sp)
    80003510:	70e2                	ld	ra,56(sp)
    80003512:	6121                	addi	sp,sp,64
    80003514:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E:

0000000080003516 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E>:
    pub fn holding(&self) -> bool{
    80003516:	7139                	addi	sp,sp,-64
    80003518:	fc06                	sd	ra,56(sp)
    8000351a:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    8000351c:	01850593          	addi	a1,a0,24
    80003520:	4601                	li	a2,0
    80003522:	02c107a3          	sb	a2,47(sp)
    80003526:	f02a                	sd	a0,32(sp)
    80003528:	852e                	mv	a0,a1
    8000352a:	85b2                	mv	a1,a2
    8000352c:	0000a097          	auipc	ra,0xa
    80003530:	a10080e7          	jalr	-1520(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    80003534:	ec2a                	sd	a0,24(sp)
    80003536:	a035                	j	80003562 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x4c>
    80003538:	4505                	li	a0,1
    8000353a:	02a10723          	sb	a0,46(sp)
    8000353e:	a829                	j	80003558 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x42>
    80003540:	4501                	li	a0,0
    80003542:	02a10723          	sb	a0,46(sp)
    80003546:	a809                	j	80003558 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x42>
    80003548:	7502                	ld	a0,32(sp)
    8000354a:	0541                	addi	a0,a0,16
    8000354c:	00013097          	auipc	ra,0x13
    80003550:	30a080e7          	jalr	778(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    80003554:	e82a                	sd	a0,16(sp)
    80003556:	a809                	j	80003568 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x52>
    80003558:	02e14503          	lbu	a0,46(sp)
    8000355c:	8905                	andi	a0,a0,1
    8000355e:	e105                	bnez	a0,8000357e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x68>
    80003560:	a01d                	j	80003586 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x70>
    80003562:	6562                	ld	a0,24(sp)
    80003564:	f175                	bnez	a0,80003548 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x32>
    80003566:	bfe9                	j	80003540 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x2a>
    80003568:	0001a097          	auipc	ra,0x1a
    8000356c:	168080e7          	jalr	360(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80003570:	e42a                	sd	a0,8(sp)
    80003572:	a009                	j	80003574 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x5e>
    80003574:	6542                	ld	a0,16(sp)
    80003576:	65a2                	ld	a1,8(sp)
    80003578:	fcb500e3          	beq	a0,a1,80003538 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x22>
    8000357c:	b7d1                	j	80003540 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x2a>
    8000357e:	4505                	li	a0,1
            return true
    80003580:	02a106a3          	sb	a0,45(sp)
    }
    80003584:	a029                	j	8000358e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x78>
    80003586:	4501                	li	a0,0
        false
    80003588:	02a106a3          	sb	a0,45(sp)
    }
    8000358c:	a009                	j	8000358e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h59971422c37849b4E+0x78>
    8000358e:	02d14503          	lbu	a0,45(sp)
    80003592:	70e2                	ld	ra,56(sp)
    80003594:	6121                	addi	sp,sp,64
    80003596:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE:

0000000080003598 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE>:
    pub fn holding(&self) -> bool{
    80003598:	7139                	addi	sp,sp,-64
    8000359a:	fc06                	sd	ra,56(sp)
    8000359c:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    8000359e:	01850593          	addi	a1,a0,24
    800035a2:	4601                	li	a2,0
    800035a4:	02c107a3          	sb	a2,47(sp)
    800035a8:	f02a                	sd	a0,32(sp)
    800035aa:	852e                	mv	a0,a1
    800035ac:	85b2                	mv	a1,a2
    800035ae:	0000a097          	auipc	ra,0xa
    800035b2:	98e080e7          	jalr	-1650(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    800035b6:	ec2a                	sd	a0,24(sp)
    800035b8:	a035                	j	800035e4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x4c>
    800035ba:	4505                	li	a0,1
    800035bc:	02a10723          	sb	a0,46(sp)
    800035c0:	a829                	j	800035da <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x42>
    800035c2:	4501                	li	a0,0
    800035c4:	02a10723          	sb	a0,46(sp)
    800035c8:	a809                	j	800035da <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x42>
    800035ca:	7502                	ld	a0,32(sp)
    800035cc:	0541                	addi	a0,a0,16
    800035ce:	00013097          	auipc	ra,0x13
    800035d2:	288080e7          	jalr	648(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    800035d6:	e82a                	sd	a0,16(sp)
    800035d8:	a809                	j	800035ea <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x52>
    800035da:	02e14503          	lbu	a0,46(sp)
    800035de:	8905                	andi	a0,a0,1
    800035e0:	e105                	bnez	a0,80003600 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x68>
    800035e2:	a01d                	j	80003608 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x70>
    800035e4:	6562                	ld	a0,24(sp)
    800035e6:	f175                	bnez	a0,800035ca <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x32>
    800035e8:	bfe9                	j	800035c2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x2a>
    800035ea:	0001a097          	auipc	ra,0x1a
    800035ee:	0e6080e7          	jalr	230(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800035f2:	e42a                	sd	a0,8(sp)
    800035f4:	a009                	j	800035f6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x5e>
    800035f6:	6542                	ld	a0,16(sp)
    800035f8:	65a2                	ld	a1,8(sp)
    800035fa:	fcb500e3          	beq	a0,a1,800035ba <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x22>
    800035fe:	b7d1                	j	800035c2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x2a>
    80003600:	4505                	li	a0,1
            return true
    80003602:	02a106a3          	sb	a0,45(sp)
    }
    80003606:	a029                	j	80003610 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x78>
    80003608:	4501                	li	a0,0
        false
    8000360a:	02a106a3          	sb	a0,45(sp)
    }
    8000360e:	a009                	j	80003610 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h5a90bba8cbf8105fE+0x78>
    80003610:	02d14503          	lbu	a0,45(sp)
    80003614:	70e2                	ld	ra,56(sp)
    80003616:	6121                	addi	sp,sp,64
    80003618:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE:

000000008000361a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE>:
    pub fn holding(&self) -> bool{
    8000361a:	7139                	addi	sp,sp,-64
    8000361c:	fc06                	sd	ra,56(sp)
    8000361e:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    80003620:	01850593          	addi	a1,a0,24
    80003624:	4601                	li	a2,0
    80003626:	02c107a3          	sb	a2,47(sp)
    8000362a:	f02a                	sd	a0,32(sp)
    8000362c:	852e                	mv	a0,a1
    8000362e:	85b2                	mv	a1,a2
    80003630:	0000a097          	auipc	ra,0xa
    80003634:	90c080e7          	jalr	-1780(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    80003638:	ec2a                	sd	a0,24(sp)
    8000363a:	a035                	j	80003666 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x4c>
    8000363c:	4505                	li	a0,1
    8000363e:	02a10723          	sb	a0,46(sp)
    80003642:	a829                	j	8000365c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x42>
    80003644:	4501                	li	a0,0
    80003646:	02a10723          	sb	a0,46(sp)
    8000364a:	a809                	j	8000365c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x42>
    8000364c:	7502                	ld	a0,32(sp)
    8000364e:	0541                	addi	a0,a0,16
    80003650:	00013097          	auipc	ra,0x13
    80003654:	206080e7          	jalr	518(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    80003658:	e82a                	sd	a0,16(sp)
    8000365a:	a809                	j	8000366c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x52>
    8000365c:	02e14503          	lbu	a0,46(sp)
    80003660:	8905                	andi	a0,a0,1
    80003662:	e105                	bnez	a0,80003682 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x68>
    80003664:	a01d                	j	8000368a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x70>
    80003666:	6562                	ld	a0,24(sp)
    80003668:	f175                	bnez	a0,8000364c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x32>
    8000366a:	bfe9                	j	80003644 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x2a>
    8000366c:	0001a097          	auipc	ra,0x1a
    80003670:	064080e7          	jalr	100(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80003674:	e42a                	sd	a0,8(sp)
    80003676:	a009                	j	80003678 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x5e>
    80003678:	6542                	ld	a0,16(sp)
    8000367a:	65a2                	ld	a1,8(sp)
    8000367c:	fcb500e3          	beq	a0,a1,8000363c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x22>
    80003680:	b7d1                	j	80003644 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x2a>
    80003682:	4505                	li	a0,1
            return true
    80003684:	02a106a3          	sb	a0,45(sp)
    }
    80003688:	a029                	j	80003692 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x78>
    8000368a:	4501                	li	a0,0
        false
    8000368c:	02a106a3          	sb	a0,45(sp)
    }
    80003690:	a009                	j	80003692 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE+0x78>
    80003692:	02d14503          	lbu	a0,45(sp)
    80003696:	70e2                	ld	ra,56(sp)
    80003698:	6121                	addi	sp,sp,64
    8000369a:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E:

000000008000369c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E>:
    pub fn holding(&self) -> bool{
    8000369c:	7139                	addi	sp,sp,-64
    8000369e:	fc06                	sd	ra,56(sp)
    800036a0:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    800036a2:	01850593          	addi	a1,a0,24
    800036a6:	4601                	li	a2,0
    800036a8:	02c107a3          	sb	a2,47(sp)
    800036ac:	f02a                	sd	a0,32(sp)
    800036ae:	852e                	mv	a0,a1
    800036b0:	85b2                	mv	a1,a2
    800036b2:	0000a097          	auipc	ra,0xa
    800036b6:	88a080e7          	jalr	-1910(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    800036ba:	ec2a                	sd	a0,24(sp)
    800036bc:	a035                	j	800036e8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x4c>
    800036be:	4505                	li	a0,1
    800036c0:	02a10723          	sb	a0,46(sp)
    800036c4:	a829                	j	800036de <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x42>
    800036c6:	4501                	li	a0,0
    800036c8:	02a10723          	sb	a0,46(sp)
    800036cc:	a809                	j	800036de <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x42>
    800036ce:	7502                	ld	a0,32(sp)
    800036d0:	0541                	addi	a0,a0,16
    800036d2:	00013097          	auipc	ra,0x13
    800036d6:	184080e7          	jalr	388(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    800036da:	e82a                	sd	a0,16(sp)
    800036dc:	a809                	j	800036ee <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x52>
    800036de:	02e14503          	lbu	a0,46(sp)
    800036e2:	8905                	andi	a0,a0,1
    800036e4:	e105                	bnez	a0,80003704 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x68>
    800036e6:	a01d                	j	8000370c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x70>
    800036e8:	6562                	ld	a0,24(sp)
    800036ea:	f175                	bnez	a0,800036ce <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x32>
    800036ec:	bfe9                	j	800036c6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x2a>
    800036ee:	0001a097          	auipc	ra,0x1a
    800036f2:	fe2080e7          	jalr	-30(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800036f6:	e42a                	sd	a0,8(sp)
    800036f8:	a009                	j	800036fa <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x5e>
    800036fa:	6542                	ld	a0,16(sp)
    800036fc:	65a2                	ld	a1,8(sp)
    800036fe:	fcb500e3          	beq	a0,a1,800036be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x22>
    80003702:	b7d1                	j	800036c6 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x2a>
    80003704:	4505                	li	a0,1
            return true
    80003706:	02a106a3          	sb	a0,45(sp)
    }
    8000370a:	a029                	j	80003714 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x78>
    8000370c:	4501                	li	a0,0
        false
    8000370e:	02a106a3          	sb	a0,45(sp)
    }
    80003712:	a009                	j	80003714 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17hd5fa1faa827a49a9E+0x78>
    80003714:	02d14503          	lbu	a0,45(sp)
    80003718:	70e2                	ld	ra,56(sp)
    8000371a:	6121                	addi	sp,sp,64
    8000371c:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E:

000000008000371e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E>:
    pub fn holding(&self) -> bool{
    8000371e:	7139                	addi	sp,sp,-64
    80003720:	fc06                	sd	ra,56(sp)
    80003722:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    80003724:	01850593          	addi	a1,a0,24
    80003728:	4601                	li	a2,0
    8000372a:	02c107a3          	sb	a2,47(sp)
    8000372e:	f02a                	sd	a0,32(sp)
    80003730:	852e                	mv	a0,a1
    80003732:	85b2                	mv	a1,a2
    80003734:	0000a097          	auipc	ra,0xa
    80003738:	808080e7          	jalr	-2040(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    8000373c:	ec2a                	sd	a0,24(sp)
    8000373e:	a035                	j	8000376a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x4c>
    80003740:	4505                	li	a0,1
    80003742:	02a10723          	sb	a0,46(sp)
    80003746:	a829                	j	80003760 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x42>
    80003748:	4501                	li	a0,0
    8000374a:	02a10723          	sb	a0,46(sp)
    8000374e:	a809                	j	80003760 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x42>
    80003750:	7502                	ld	a0,32(sp)
    80003752:	0541                	addi	a0,a0,16
    80003754:	00013097          	auipc	ra,0x13
    80003758:	102080e7          	jalr	258(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    8000375c:	e82a                	sd	a0,16(sp)
    8000375e:	a809                	j	80003770 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x52>
    80003760:	02e14503          	lbu	a0,46(sp)
    80003764:	8905                	andi	a0,a0,1
    80003766:	e105                	bnez	a0,80003786 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x68>
    80003768:	a01d                	j	8000378e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x70>
    8000376a:	6562                	ld	a0,24(sp)
    8000376c:	f175                	bnez	a0,80003750 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x32>
    8000376e:	bfe9                	j	80003748 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x2a>
    80003770:	0001a097          	auipc	ra,0x1a
    80003774:	f60080e7          	jalr	-160(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80003778:	e42a                	sd	a0,8(sp)
    8000377a:	a009                	j	8000377c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x5e>
    8000377c:	6542                	ld	a0,16(sp)
    8000377e:	65a2                	ld	a1,8(sp)
    80003780:	fcb500e3          	beq	a0,a1,80003740 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x22>
    80003784:	b7d1                	j	80003748 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x2a>
    80003786:	4505                	li	a0,1
            return true
    80003788:	02a106a3          	sb	a0,45(sp)
    }
    8000378c:	a029                	j	80003796 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x78>
    8000378e:	4501                	li	a0,0
        false
    80003790:	02a106a3          	sb	a0,45(sp)
    }
    80003794:	a009                	j	80003796 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17he43f41ceeb6d2160E+0x78>
    80003796:	02d14503          	lbu	a0,45(sp)
    8000379a:	70e2                	ld	ra,56(sp)
    8000379c:	6121                	addi	sp,sp,64
    8000379e:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE:

00000000800037a0 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE>:
    pub fn holding(&self) -> bool{
    800037a0:	7139                	addi	sp,sp,-64
    800037a2:	fc06                	sd	ra,56(sp)
    800037a4:	f82a                	sd	a0,48(sp)
        if self.locked.load(Ordering::Relaxed) && self.cpu_id.get() == unsafe{ cpuid() } as isize {
    800037a6:	01850593          	addi	a1,a0,24
    800037aa:	4601                	li	a2,0
    800037ac:	02c107a3          	sb	a2,47(sp)
    800037b0:	f02a                	sd	a0,32(sp)
    800037b2:	852e                	mv	a0,a1
    800037b4:	85b2                	mv	a1,a2
    800037b6:	00009097          	auipc	ra,0x9
    800037ba:	786080e7          	jalr	1926(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    800037be:	ec2a                	sd	a0,24(sp)
    800037c0:	a035                	j	800037ec <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x4c>
    800037c2:	4505                	li	a0,1
    800037c4:	02a10723          	sb	a0,46(sp)
    800037c8:	a829                	j	800037e2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x42>
    800037ca:	4501                	li	a0,0
    800037cc:	02a10723          	sb	a0,46(sp)
    800037d0:	a809                	j	800037e2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x42>
    800037d2:	7502                	ld	a0,32(sp)
    800037d4:	0541                	addi	a0,a0,16
    800037d6:	00013097          	auipc	ra,0x13
    800037da:	080080e7          	jalr	128(ra) # 80016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>
    800037de:	e82a                	sd	a0,16(sp)
    800037e0:	a809                	j	800037f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x52>
    800037e2:	02e14503          	lbu	a0,46(sp)
    800037e6:	8905                	andi	a0,a0,1
    800037e8:	e105                	bnez	a0,80003808 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x68>
    800037ea:	a01d                	j	80003810 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x70>
    800037ec:	6562                	ld	a0,24(sp)
    800037ee:	f175                	bnez	a0,800037d2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x32>
    800037f0:	bfe9                	j	800037ca <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x2a>
    800037f2:	0001a097          	auipc	ra,0x1a
    800037f6:	ede080e7          	jalr	-290(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    800037fa:	e42a                	sd	a0,8(sp)
    800037fc:	a009                	j	800037fe <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x5e>
    800037fe:	6542                	ld	a0,16(sp)
    80003800:	65a2                	ld	a1,8(sp)
    80003802:	fcb500e3          	beq	a0,a1,800037c2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x22>
    80003806:	b7d1                	j	800037ca <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x2a>
    80003808:	4505                	li	a0,1
            return true
    8000380a:	02a106a3          	sb	a0,45(sp)
    }
    8000380e:	a029                	j	80003818 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x78>
    80003810:	4501                	li	a0,0
        false
    80003812:	02a106a3          	sb	a0,45(sp)
    }
    80003816:	a009                	j	80003818 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17heb825e76c93963beE+0x78>
    80003818:	02d14503          	lbu	a0,45(sp)
    8000381c:	70e2                	ld	ra,56(sp)
    8000381e:	6121                	addi	sp,sp,64
    80003820:	8082                	ret

Disassembly of section .text._ZN6kernel4lock8spinlock22SpinlockGuard$LT$T$GT$7holding17h8b455dbe878c3579E:

0000000080003822 <_ZN6kernel4lock8spinlock22SpinlockGuard$LT$T$GT$7holding17h8b455dbe878c3579E>:


}

impl<'a, T> SpinlockGuard<'a, T>{
    pub unsafe fn holding(&self) -> bool{
    80003822:	1101                	addi	sp,sp,-32
    80003824:	ec06                	sd	ra,24(sp)
    80003826:	e82a                	sd	a0,16(sp)
        self.spinlock.holding()
    80003828:	6108                	ld	a0,0(a0)
    8000382a:	00000097          	auipc	ra,0x0
    8000382e:	df0080e7          	jalr	-528(ra) # 8000361a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7holding17h73a6541f93d2e3bfE>
    80003832:	e42a                	sd	a0,8(sp)
    80003834:	a009                	j	80003836 <_ZN6kernel4lock8spinlock22SpinlockGuard$LT$T$GT$7holding17h8b455dbe878c3579E+0x14>
    }
    80003836:	6522                	ld	a0,8(sp)
    80003838:	60e2                	ld	ra,24(sp)
    8000383a:	6105                	addi	sp,sp,32
    8000383c:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E:

000000008000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>:
}

impl<T> Deref for SpinlockGuard<'_, T>{
    type Target = T;

    fn deref(&self) -> &Self::Target {
    8000383e:	1101                	addi	sp,sp,-32
    80003840:	ec06                	sd	ra,24(sp)
    80003842:	e82a                	sd	a0,16(sp)
        unsafe{
            &*self.spinlock.data.get()
    80003844:	6108                	ld	a0,0(a0)
    80003846:	02050513          	addi	a0,a0,32
    8000384a:	00013097          	auipc	ra,0x13
    8000384e:	11e080e7          	jalr	286(ra) # 80016968 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h2a102518438837beE>
    80003852:	e42a                	sd	a0,8(sp)
    80003854:	a009                	j	80003856 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E+0x18>
        }
    }
    80003856:	6522                	ld	a0,8(sp)
    80003858:	60e2                	ld	ra,24(sp)
    8000385a:	6105                	addi	sp,sp,32
    8000385c:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h52b5113a9e8a7318E:

000000008000385e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h52b5113a9e8a7318E>:
    fn deref(&self) -> &Self::Target {
    8000385e:	1101                	addi	sp,sp,-32
    80003860:	ec06                	sd	ra,24(sp)
    80003862:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    80003864:	6108                	ld	a0,0(a0)
    80003866:	02050513          	addi	a0,a0,32
    8000386a:	0001d097          	auipc	ra,0x1d
    8000386e:	250080e7          	jalr	592(ra) # 80020aba <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h95cfec27c73dbf25E>
    80003872:	e42a                	sd	a0,8(sp)
    80003874:	a009                	j	80003876 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h52b5113a9e8a7318E+0x18>
    }
    80003876:	6522                	ld	a0,8(sp)
    80003878:	60e2                	ld	ra,24(sp)
    8000387a:	6105                	addi	sp,sp,32
    8000387c:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E:

000000008000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>:
    fn deref(&self) -> &Self::Target {
    8000387e:	1101                	addi	sp,sp,-32
    80003880:	ec06                	sd	ra,24(sp)
    80003882:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    80003884:	6108                	ld	a0,0(a0)
    80003886:	0571                	addi	a0,a0,28
    80003888:	00013097          	auipc	ra,0x13
    8000388c:	118080e7          	jalr	280(ra) # 800169a0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hbfeaf0bc1ca24adeE>
    80003890:	e42a                	sd	a0,8(sp)
    80003892:	a009                	j	80003894 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E+0x16>
    }
    80003894:	6522                	ld	a0,8(sp)
    80003896:	60e2                	ld	ra,24(sp)
    80003898:	6105                	addi	sp,sp,32
    8000389a:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE:

000000008000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>:
    fn deref(&self) -> &Self::Target {
    8000389c:	1101                	addi	sp,sp,-32
    8000389e:	ec06                	sd	ra,24(sp)
    800038a0:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    800038a2:	6108                	ld	a0,0(a0)
    800038a4:	02050513          	addi	a0,a0,32
    800038a8:	00013097          	auipc	ra,0x13
    800038ac:	0b0080e7          	jalr	176(ra) # 80016958 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h0b134a7d7fbf0d13E>
    800038b0:	e42a                	sd	a0,8(sp)
    800038b2:	a009                	j	800038b4 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE+0x18>
    }
    800038b4:	6522                	ld	a0,8(sp)
    800038b6:	60e2                	ld	ra,24(sp)
    800038b8:	6105                	addi	sp,sp,32
    800038ba:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7da9d3aa29c3e8d2E:

00000000800038bc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7da9d3aa29c3e8d2E>:
    fn deref(&self) -> &Self::Target {
    800038bc:	1101                	addi	sp,sp,-32
    800038be:	ec06                	sd	ra,24(sp)
    800038c0:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    800038c2:	6108                	ld	a0,0(a0)
    800038c4:	6585                	lui	a1,0x1
    800038c6:	952e                	add	a0,a0,a1
    800038c8:	00013097          	auipc	ra,0x13
    800038cc:	0d0080e7          	jalr	208(ra) # 80016998 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hb7bae59a35416950E>
    800038d0:	e42a                	sd	a0,8(sp)
    800038d2:	a009                	j	800038d4 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7da9d3aa29c3e8d2E+0x18>
    }
    800038d4:	6522                	ld	a0,8(sp)
    800038d6:	60e2                	ld	ra,24(sp)
    800038d8:	6105                	addi	sp,sp,32
    800038da:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E:

00000000800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>:
    fn deref(&self) -> &Self::Target {
    800038dc:	1101                	addi	sp,sp,-32
    800038de:	ec06                	sd	ra,24(sp)
    800038e0:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    800038e2:	6108                	ld	a0,0(a0)
    800038e4:	02050513          	addi	a0,a0,32
    800038e8:	00013097          	auipc	ra,0x13
    800038ec:	0c8080e7          	jalr	200(ra) # 800169b0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hd9bc18af06e3ba86E>
    800038f0:	e42a                	sd	a0,8(sp)
    800038f2:	a009                	j	800038f4 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E+0x18>
    }
    800038f4:	6522                	ld	a0,8(sp)
    800038f6:	60e2                	ld	ra,24(sp)
    800038f8:	6105                	addi	sp,sp,32
    800038fa:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E:

00000000800038fc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E>:
    fn deref(&self) -> &Self::Target {
    800038fc:	1101                	addi	sp,sp,-32
    800038fe:	ec06                	sd	ra,24(sp)
    80003900:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    80003902:	6108                	ld	a0,0(a0)
    80003904:	02050513          	addi	a0,a0,32
    80003908:	00013097          	auipc	ra,0x13
    8000390c:	048080e7          	jalr	72(ra) # 80016950 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h07a29974dbebee5bE>
    80003910:	e42a                	sd	a0,8(sp)
    80003912:	a009                	j	80003914 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E+0x18>
    }
    80003914:	6522                	ld	a0,8(sp)
    80003916:	60e2                	ld	ra,24(sp)
    80003918:	6105                	addi	sp,sp,32
    8000391a:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h987bdf5612280038E:

000000008000391c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h987bdf5612280038E>:
    fn deref(&self) -> &Self::Target {
    8000391c:	1101                	addi	sp,sp,-32
    8000391e:	ec06                	sd	ra,24(sp)
    80003920:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    80003922:	6108                	ld	a0,0(a0)
    80003924:	02050513          	addi	a0,a0,32
    80003928:	00013097          	auipc	ra,0x13
    8000392c:	020080e7          	jalr	32(ra) # 80016948 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h04a2b46c96f17fa9E>
    80003930:	e42a                	sd	a0,8(sp)
    80003932:	a009                	j	80003934 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h987bdf5612280038E+0x18>
    }
    80003934:	6522                	ld	a0,8(sp)
    80003936:	60e2                	ld	ra,24(sp)
    80003938:	6105                	addi	sp,sp,32
    8000393a:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17haf587ca18fa6b292E:

000000008000393c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17haf587ca18fa6b292E>:
    fn deref(&self) -> &Self::Target {
    8000393c:	1101                	addi	sp,sp,-32
    8000393e:	ec06                	sd	ra,24(sp)
    80003940:	e82a                	sd	a0,16(sp)
            &*self.spinlock.data.get()
    80003942:	6108                	ld	a0,0(a0)
    80003944:	02050513          	addi	a0,a0,32
    80003948:	00013097          	auipc	ra,0x13
    8000394c:	030080e7          	jalr	48(ra) # 80016978 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h439ad230354d4128E>
    80003950:	e42a                	sd	a0,8(sp)
    80003952:	a009                	j	80003954 <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17haf587ca18fa6b292E+0x18>
    }
    80003954:	6522                	ld	a0,8(sp)
    80003956:	60e2                	ld	ra,24(sp)
    80003958:	6105                	addi	sp,sp,32
    8000395a:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E:

000000008000395c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E>:
}   

impl<T> DerefMut for SpinlockGuard<'_, T>{
    fn deref_mut(&mut self) -> &mut Self::Target{
    8000395c:	1101                	addi	sp,sp,-32
    8000395e:	ec06                	sd	ra,24(sp)
    80003960:	e82a                	sd	a0,16(sp)
        unsafe{
            &mut *self.spinlock.data.get()
    80003962:	6108                	ld	a0,0(a0)
    80003964:	02050513          	addi	a0,a0,32
    80003968:	00013097          	auipc	ra,0x13
    8000396c:	010080e7          	jalr	16(ra) # 80016978 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h439ad230354d4128E>
    80003970:	e42a                	sd	a0,8(sp)
    80003972:	a009                	j	80003974 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E+0x18>
        }
    }
    80003974:	6522                	ld	a0,8(sp)
    80003976:	60e2                	ld	ra,24(sp)
    80003978:	6105                	addi	sp,sp,32
    8000397a:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E:

000000008000397c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    8000397c:	1101                	addi	sp,sp,-32
    8000397e:	ec06                	sd	ra,24(sp)
    80003980:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    80003982:	6108                	ld	a0,0(a0)
    80003984:	02050513          	addi	a0,a0,32
    80003988:	00013097          	auipc	ra,0x13
    8000398c:	fe0080e7          	jalr	-32(ra) # 80016968 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h2a102518438837beE>
    80003990:	e42a                	sd	a0,8(sp)
    80003992:	a009                	j	80003994 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E+0x18>
    }
    80003994:	6522                	ld	a0,8(sp)
    80003996:	60e2                	ld	ra,24(sp)
    80003998:	6105                	addi	sp,sp,32
    8000399a:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6ba8d8739836030bE:

000000008000399c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6ba8d8739836030bE>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    8000399c:	1101                	addi	sp,sp,-32
    8000399e:	ec06                	sd	ra,24(sp)
    800039a0:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    800039a2:	6108                	ld	a0,0(a0)
    800039a4:	02050513          	addi	a0,a0,32
    800039a8:	0001d097          	auipc	ra,0x1d
    800039ac:	112080e7          	jalr	274(ra) # 80020aba <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h95cfec27c73dbf25E>
    800039b0:	e42a                	sd	a0,8(sp)
    800039b2:	a009                	j	800039b4 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6ba8d8739836030bE+0x18>
    }
    800039b4:	6522                	ld	a0,8(sp)
    800039b6:	60e2                	ld	ra,24(sp)
    800039b8:	6105                	addi	sp,sp,32
    800039ba:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E:

00000000800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    800039bc:	1101                	addi	sp,sp,-32
    800039be:	ec06                	sd	ra,24(sp)
    800039c0:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    800039c2:	6108                	ld	a0,0(a0)
    800039c4:	0571                	addi	a0,a0,28
    800039c6:	00013097          	auipc	ra,0x13
    800039ca:	fda080e7          	jalr	-38(ra) # 800169a0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hbfeaf0bc1ca24adeE>
    800039ce:	e42a                	sd	a0,8(sp)
    800039d0:	a009                	j	800039d2 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E+0x16>
    }
    800039d2:	6522                	ld	a0,8(sp)
    800039d4:	60e2                	ld	ra,24(sp)
    800039d6:	6105                	addi	sp,sp,32
    800039d8:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E:

00000000800039da <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    800039da:	1101                	addi	sp,sp,-32
    800039dc:	ec06                	sd	ra,24(sp)
    800039de:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    800039e0:	6108                	ld	a0,0(a0)
    800039e2:	02050513          	addi	a0,a0,32
    800039e6:	00013097          	auipc	ra,0x13
    800039ea:	f62080e7          	jalr	-158(ra) # 80016948 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h04a2b46c96f17fa9E>
    800039ee:	e42a                	sd	a0,8(sp)
    800039f0:	a009                	j	800039f2 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7997af61478b5d27E+0x18>
    }
    800039f2:	6522                	ld	a0,8(sp)
    800039f4:	60e2                	ld	ra,24(sp)
    800039f6:	6105                	addi	sp,sp,32
    800039f8:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE:

00000000800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    800039fa:	1101                	addi	sp,sp,-32
    800039fc:	ec06                	sd	ra,24(sp)
    800039fe:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    80003a00:	6108                	ld	a0,0(a0)
    80003a02:	02050513          	addi	a0,a0,32
    80003a06:	00013097          	auipc	ra,0x13
    80003a0a:	faa080e7          	jalr	-86(ra) # 800169b0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hd9bc18af06e3ba86E>
    80003a0e:	e42a                	sd	a0,8(sp)
    80003a10:	a009                	j	80003a12 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE+0x18>
    }
    80003a12:	6522                	ld	a0,8(sp)
    80003a14:	60e2                	ld	ra,24(sp)
    80003a16:	6105                	addi	sp,sp,32
    80003a18:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9f4f0d98ac704e2dE:

0000000080003a1a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9f4f0d98ac704e2dE>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    80003a1a:	1101                	addi	sp,sp,-32
    80003a1c:	ec06                	sd	ra,24(sp)
    80003a1e:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    80003a20:	6108                	ld	a0,0(a0)
    80003a22:	02050513          	addi	a0,a0,32
    80003a26:	00013097          	auipc	ra,0x13
    80003a2a:	f3a080e7          	jalr	-198(ra) # 80016960 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h1a9b91f6c23748bcE>
    80003a2e:	e42a                	sd	a0,8(sp)
    80003a30:	a009                	j	80003a32 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9f4f0d98ac704e2dE+0x18>
    }
    80003a32:	6522                	ld	a0,8(sp)
    80003a34:	60e2                	ld	ra,24(sp)
    80003a36:	6105                	addi	sp,sp,32
    80003a38:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17haceeee835a7fc491E:

0000000080003a3a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17haceeee835a7fc491E>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    80003a3a:	1101                	addi	sp,sp,-32
    80003a3c:	ec06                	sd	ra,24(sp)
    80003a3e:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    80003a40:	6108                	ld	a0,0(a0)
    80003a42:	02050513          	addi	a0,a0,32
    80003a46:	00013097          	auipc	ra,0x13
    80003a4a:	f12080e7          	jalr	-238(ra) # 80016958 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h0b134a7d7fbf0d13E>
    80003a4e:	e42a                	sd	a0,8(sp)
    80003a50:	a009                	j	80003a52 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17haceeee835a7fc491E+0x18>
    }
    80003a52:	6522                	ld	a0,8(sp)
    80003a54:	60e2                	ld	ra,24(sp)
    80003a56:	6105                	addi	sp,sp,32
    80003a58:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE:

0000000080003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    80003a5a:	1101                	addi	sp,sp,-32
    80003a5c:	ec06                	sd	ra,24(sp)
    80003a5e:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    80003a60:	6108                	ld	a0,0(a0)
    80003a62:	02050513          	addi	a0,a0,32
    80003a66:	00013097          	auipc	ra,0x13
    80003a6a:	eea080e7          	jalr	-278(ra) # 80016950 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h07a29974dbebee5bE>
    80003a6e:	e42a                	sd	a0,8(sp)
    80003a70:	a009                	j	80003a72 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE+0x18>
    }
    80003a72:	6522                	ld	a0,8(sp)
    80003a74:	60e2                	ld	ra,24(sp)
    80003a76:	6105                	addi	sp,sp,32
    80003a78:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E:

0000000080003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>:
    fn deref_mut(&mut self) -> &mut Self::Target{
    80003a7a:	1101                	addi	sp,sp,-32
    80003a7c:	ec06                	sd	ra,24(sp)
    80003a7e:	e82a                	sd	a0,16(sp)
            &mut *self.spinlock.data.get()
    80003a80:	6108                	ld	a0,0(a0)
    80003a82:	6585                	lui	a1,0x1
    80003a84:	952e                	add	a0,a0,a1
    80003a86:	00013097          	auipc	ra,0x13
    80003a8a:	f12080e7          	jalr	-238(ra) # 80016998 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hb7bae59a35416950E>
    80003a8e:	e42a                	sd	a0,8(sp)
    80003a90:	a009                	j	80003a92 <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E+0x18>
    }
    80003a92:	6522                	ld	a0,8(sp)
    80003a94:	60e2                	ld	ra,24(sp)
    80003a96:	6105                	addi	sp,sp,32
    80003a98:	8082                	ret

Disassembly of section .text._ZN6kernel7process4exit17hb536ee8020d4475cE:

0000000080003a9a <_ZN6kernel7process4exit17hb536ee8020d4475cE>:
];

/// Exit the current process. Does not return. 
/// An exited process remains in the zombie state
/// until its parent calls wait()
pub unsafe fn exit(status: i32) {
    80003a9a:	81010113          	addi	sp,sp,-2032
    80003a9e:	7e113423          	sd	ra,2024(sp)
    80003aa2:	6591                	lui	a1,0x4
    80003aa4:	8f05859b          	addiw	a1,a1,-1808
    80003aa8:	40b10133          	sub	sp,sp,a1
    80003aac:	85aa                	mv	a1,a0
    80003aae:	660d                	lui	a2,0x3
    80003ab0:	7146061b          	addiw	a2,a2,1812
    80003ab4:	960a                	add	a2,a2,sp
    80003ab6:	c208                	sw	a0,0(a2)

0000000080003ab8 <.LBB0_46>:
    let my_proc = CPU_MANAGER.myproc().unwrap();
    80003ab8:	0006b517          	auipc	a0,0x6b
    80003abc:	54850513          	addi	a0,a0,1352 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80003ac0:	f6ae                	sd	a1,360(sp)
    80003ac2:	0001a097          	auipc	ra,0x1a
    80003ac6:	c76080e7          	jalr	-906(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    80003aca:	f2aa                	sd	a0,352(sp)
    80003acc:	a009                	j	80003ace <.LBB0_47>

0000000080003ace <.LBB0_47>:
    80003ace:	00020597          	auipc	a1,0x20
    80003ad2:	3c258593          	addi	a1,a1,962 # 80023e90 <.L__unnamed_1>
    80003ad6:	7516                	ld	a0,352(sp)
    80003ad8:	00015097          	auipc	ra,0x15
    80003adc:	090080e7          	jalr	144(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    80003ae0:	85aa                	mv	a1,a0
    80003ae2:	660d                	lui	a2,0x3
    80003ae4:	7206061b          	addiw	a2,a2,1824
    80003ae8:	960a                	add	a2,a2,sp
    80003aea:	e208                	sd	a0,0(a2)
    80003aec:	eeae                	sd	a1,344(sp)
    80003aee:	a009                	j	80003af0 <.LBB0_47+0x22>

    // TODO: initproc

    // Get extern data in current process. 
    let pdata = my_proc.data.get_mut();
    80003af0:	6576                	ld	a0,344(sp)
    80003af2:	04050513          	addi	a0,a0,64
    80003af6:	00013097          	auipc	ra,0x13
    80003afa:	ed4080e7          	jalr	-300(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    80003afe:	85aa                	mv	a1,a0
    80003b00:	660d                	lui	a2,0x3
    80003b02:	7286061b          	addiw	a2,a2,1832
    80003b06:	960a                	add	a2,a2,sp
    80003b08:	e208                	sd	a0,0(a2)
    80003b0a:	eaae                	sd	a1,336(sp)
    80003b0c:	a009                	j	80003b0e <.LBB0_47+0x40>

    // Close all open files
    for f in pdata.open_files.iter_mut() {
    80003b0e:	6556                	ld	a0,336(sp)
    80003b10:	0a050513          	addi	a0,a0,160
    80003b14:	06400593          	li	a1,100
    80003b18:	00015097          	auipc	ra,0x15
    80003b1c:	896080e7          	jalr	-1898(ra) # 800183ae <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h4e5a65e1bb540f22E>
    80003b20:	e6aa                	sd	a0,328(sp)
    80003b22:	e2ae                	sd	a1,320(sp)
    80003b24:	a009                	j	80003b26 <.LBB0_47+0x58>
    80003b26:	6536                	ld	a0,328(sp)
    80003b28:	6596                	ld	a1,320(sp)
    80003b2a:	0000f097          	auipc	ra,0xf
    80003b2e:	6f6080e7          	jalr	1782(ra) # 80013220 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h89c24c14ffde613cE>
    80003b32:	fe2a                	sd	a0,312(sp)
    80003b34:	fa2e                	sd	a1,304(sp)
    80003b36:	a009                	j	80003b38 <.LBB0_47+0x6a>
    80003b38:	7572                	ld	a0,312(sp)
    80003b3a:	faaa                	sd	a0,368(sp)
    80003b3c:	75d2                	ld	a1,304(sp)
    80003b3e:	feae                	sd	a1,376(sp)
    80003b40:	a009                	j	80003b42 <.LBB0_47+0x74>
    80003b42:	1a88                	addi	a0,sp,368
    80003b44:	00010097          	auipc	ra,0x10
    80003b48:	b34080e7          	jalr	-1228(ra) # 80013678 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E>
    80003b4c:	e32a                	sd	a0,384(sp)
    80003b4e:	a009                	j	80003b50 <.LBB0_47+0x82>
    80003b50:	651a                	ld	a0,384(sp)
    80003b52:	00a035b3          	snez	a1,a0
    80003b56:	4601                	li	a2,0
    80003b58:	00c50463          	beq	a0,a2,80003b60 <.LBB0_47+0x92>
    80003b5c:	a009                	j	80003b5e <.LBB0_47+0x90>
    80003b5e:	a019                	j	80003b64 <.LBB0_47+0x96>
        f.take();
    }
    pdata.open_files = array![_ => None; NFILE];
    80003b60:	a83d                	j	80003b9e <.LBB0_47+0xd0>
    for f in pdata.open_files.iter_mut() {
    80003b62:	0000                	unimp
    80003b64:	651a                	ld	a0,384(sp)
    80003b66:	658d                	lui	a1,0x3
    80003b68:	7305859b          	addiw	a1,a1,1840
    80003b6c:	958a                	add	a1,a1,sp
    80003b6e:	e188                	sd	a0,0(a1)
    80003b70:	658d                	lui	a1,0x3
    80003b72:	7385859b          	addiw	a1,a1,1848
    80003b76:	958a                	add	a1,a1,sp
    80003b78:	e188                	sd	a0,0(a1)
    80003b7a:	658d                	lui	a1,0x3
    80003b7c:	7405859b          	addiw	a1,a1,1856
    80003b80:	958a                	add	a1,a1,sp
    80003b82:	e188                	sd	a0,0(a1)
        f.take();
    80003b84:	00015097          	auipc	ra,0x15
    80003b88:	a12080e7          	jalr	-1518(ra) # 80018596 <_ZN4core6option15Option$LT$T$GT$4take17ha270ce5844af4e09E>
    80003b8c:	e72a                	sd	a0,392(sp)
    80003b8e:	a009                	j	80003b90 <.LBB0_47+0xc2>
    80003b90:	0328                	addi	a0,sp,392
    80003b92:	00003097          	auipc	ra,0x3
    80003b96:	ea0080e7          	jalr	-352(ra) # 80006a32 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E>
    80003b9a:	a009                	j	80003b9c <.LBB0_47+0xce>
    for f in pdata.open_files.iter_mut() {
    80003b9c:	b75d                	j	80003b42 <.LBB0_47+0x74>
    80003b9e:	6511                	lui	a0,0x4
    80003ba0:	db85051b          	addiw	a0,a0,-584
    80003ba4:	950a                	add	a0,a0,sp
    80003ba6:	852a                	mv	a0,a0
    80003ba8:	6585                	lui	a1,0x1
    80003baa:	7805859b          	addiw	a1,a1,1920
    80003bae:	958a                	add	a1,a1,sp
    80003bb0:	85ae                	mv	a1,a1
    80003bb2:	32000613          	li	a2,800
    #[must_use = "if you don't need the wrapper, you can use `mem::forget` instead"]
    #[stable(feature = "manually_drop", since = "1.20.0")]
    #[rustc_const_stable(feature = "const_manually_drop", since = "1.36.0")]
    #[inline(always)]
    pub const fn new(value: T) -> ManuallyDrop<T> {
        ManuallyDrop { value }
    80003bb6:	f62a                	sd	a0,296(sp)
    80003bb8:	f232                	sd	a2,288(sp)
    80003bba:	00020097          	auipc	ra,0x20
    80003bbe:	ca6080e7          	jalr	-858(ra) # 80023860 <memcpy>
    80003bc2:	6585                	lui	a1,0x1
    80003bc4:	4605859b          	addiw	a1,a1,1120
    80003bc8:	958a                	add	a1,a1,sp
    80003bca:	85ae                	mv	a1,a1
    80003bcc:	ee2a                	sd	a0,280(sp)
    80003bce:	852e                	mv	a0,a1
    80003bd0:	75b2                	ld	a1,296(sp)
    80003bd2:	7612                	ld	a2,288(sp)
    80003bd4:	00020097          	auipc	ra,0x20
    80003bd8:	c8c080e7          	jalr	-884(ra) # 80023860 <memcpy>
    pdata.open_files = array![_ => None; NFILE];
    80003bdc:	a009                	j	80003bde <.LBB0_47+0x110>
    80003bde:	6505                	lui	a0,0x1
    80003be0:	1405051b          	addiw	a0,a0,320
    80003be4:	950a                	add	a0,a0,sp
    80003be6:	852a                	mv	a0,a0
    80003be8:	6585                	lui	a1,0x1
    80003bea:	4605859b          	addiw	a1,a1,1120
    80003bee:	958a                	add	a1,a1,sp
    80003bf0:	85ae                	mv	a1,a1
    80003bf2:	32000613          	li	a2,800
    80003bf6:	ea2a                	sd	a0,272(sp)
    80003bf8:	e632                	sd	a2,264(sp)
    80003bfa:	00020097          	auipc	ra,0x20
    80003bfe:	c66080e7          	jalr	-922(ra) # 80023860 <memcpy>
    80003c02:	6585                	lui	a1,0x1
    80003c04:	e205859b          	addiw	a1,a1,-480
    80003c08:	958a                	add	a1,a1,sp
    80003c0a:	85ae                	mv	a1,a1
    80003c0c:	e22a                	sd	a0,256(sp)
    80003c0e:	852e                	mv	a0,a1
    80003c10:	6652                	ld	a2,272(sp)
    80003c12:	fdae                	sd	a1,248(sp)
    80003c14:	85b2                	mv	a1,a2
    80003c16:	6632                	ld	a2,264(sp)
    80003c18:	00020097          	auipc	ra,0x20
    80003c1c:	c48080e7          	jalr	-952(ra) # 80023860 <memcpy>
    80003c20:	6585                	lui	a1,0x1
    80003c22:	b005859b          	addiw	a1,a1,-1280
    80003c26:	958a                	add	a1,a1,sp
    80003c28:	85ae                	mv	a1,a1
    /// ```
    #[stable(feature = "manually_drop", since = "1.20.0")]
    #[rustc_const_stable(feature = "const_manually_drop", since = "1.36.0")]
    #[inline(always)]
    pub const fn into_inner(slot: ManuallyDrop<T>) -> T {
        slot.value
    80003c2a:	f9aa                	sd	a0,240(sp)
    80003c2c:	852e                	mv	a0,a1
    80003c2e:	75ee                	ld	a1,248(sp)
    80003c30:	6632                	ld	a2,264(sp)
    80003c32:	00020097          	auipc	ra,0x20
    80003c36:	c2e080e7          	jalr	-978(ra) # 80023860 <memcpy>
    80003c3a:	a009                	j	80003c3c <.LBB0_47+0x16e>
    80003c3c:	7d810513          	addi	a0,sp,2008
    80003c40:	6585                	lui	a1,0x1
    80003c42:	b005859b          	addiw	a1,a1,-1280
    80003c46:	958a                	add	a1,a1,sp
    80003c48:	85ae                	mv	a1,a1
    80003c4a:	00012097          	auipc	ra,0x12
    80003c4e:	5b4080e7          	jalr	1460(ra) # 800161fe <_ZN11array_macro28__ArrayVecInner$LT$T$C$_$GT$3new17h88def819a8e631a5E>
    80003c52:	a009                	j	80003c54 <.LBB0_47+0x186>
    80003c54:	4b010513          	addi	a0,sp,1200
    80003c58:	7d810593          	addi	a1,sp,2008
    80003c5c:	32800613          	li	a2,808
    80003c60:	00020097          	auipc	ra,0x20
    80003c64:	c00080e7          	jalr	-1024(ra) # 80023860 <memcpy>
    80003c68:	a009                	j	80003c6a <.LBB0_47+0x19c>
    80003c6a:	7d013503          	ld	a0,2000(sp)
    80003c6e:	06400593          	li	a1,100
    80003c72:	04b56f63          	bltu	a0,a1,80003cd0 <.LBB0_47+0x202>
    80003c76:	a009                	j	80003c78 <.LBB0_47+0x1aa>
    80003c78:	6509                	lui	a0,0x2
    80003c7a:	7405051b          	addiw	a0,a0,1856
    80003c7e:	950a                	add	a0,a0,sp
    80003c80:	852a                	mv	a0,a0
    80003c82:	4b010593          	addi	a1,sp,1200
    80003c86:	32800613          	li	a2,808
    80003c8a:	f5aa                	sd	a0,232(sp)
    80003c8c:	f1b2                	sd	a2,224(sp)
    80003c8e:	00020097          	auipc	ra,0x20
    80003c92:	bd2080e7          	jalr	-1070(ra) # 80023860 <memcpy>
    80003c96:	6591                	lui	a1,0x4
    80003c98:	a905859b          	addiw	a1,a1,-1392
    80003c9c:	958a                	add	a1,a1,sp
    80003c9e:	85ae                	mv	a1,a1
        ManuallyDrop { value }
    80003ca0:	edaa                	sd	a0,216(sp)
    80003ca2:	852e                	mv	a0,a1
    80003ca4:	762e                	ld	a2,232(sp)
    80003ca6:	e9ae                	sd	a1,208(sp)
    80003ca8:	85b2                	mv	a1,a2
    80003caa:	760e                	ld	a2,224(sp)
    80003cac:	00020097          	auipc	ra,0x20
    80003cb0:	bb4080e7          	jalr	-1100(ra) # 80023860 <memcpy>
    80003cb4:	6589                	lui	a1,0x2
    80003cb6:	4185859b          	addiw	a1,a1,1048
    80003cba:	958a                	add	a1,a1,sp
    80003cbc:	85ae                	mv	a1,a1
    80003cbe:	e5aa                	sd	a0,200(sp)
    80003cc0:	852e                	mv	a0,a1
    80003cc2:	65ce                	ld	a1,208(sp)
    80003cc4:	760e                	ld	a2,224(sp)
    80003cc6:	00020097          	auipc	ra,0x20
    80003cca:	b9a080e7          	jalr	-1126(ra) # 80023860 <memcpy>
    80003cce:	a885                	j	80003d3e <.LBB0_47+0x270>
    80003cd0:	4501                	li	a0,0
    80003cd2:	658d                	lui	a1,0x3
    80003cd4:	7485859b          	addiw	a1,a1,1864
    80003cd8:	958a                	add	a1,a1,sp
    80003cda:	e188                	sd	a0,0(a1)
    80003cdc:	6591                	lui	a1,0x4
    80003cde:	a785859b          	addiw	a1,a1,-1416
    80003ce2:	958a                	add	a1,a1,sp
    80003ce4:	e188                	sd	a0,0(a1)
    80003ce6:	6591                	lui	a1,0x4
    80003ce8:	a885859b          	addiw	a1,a1,-1400
    80003cec:	958a                	add	a1,a1,sp
    80003cee:	e188                	sd	a0,0(a1)
    80003cf0:	6591                	lui	a1,0x4
    80003cf2:	a805859b          	addiw	a1,a1,-1408
    80003cf6:	958a                	add	a1,a1,sp
    80003cf8:	e188                	sd	a0,0(a1)
    /// [`assume_init`]: MaybeUninit::assume_init
    #[stable(feature = "maybe_uninit", since = "1.36.0")]
    #[rustc_const_stable(feature = "const_maybe_uninit", since = "1.36.0")]
    #[inline(always)]
    pub const fn new(val: T) -> MaybeUninit<T> {
        MaybeUninit { value: ManuallyDrop::new(val) }
    80003cfa:	6591                	lui	a1,0x4
    80003cfc:	a705859b          	addiw	a1,a1,-1424
    80003d00:	958a                	add	a1,a1,sp
    80003d02:	e188                	sd	a0,0(a1)
    80003d04:	a009                	j	80003d06 <.LBB0_47+0x238>
    80003d06:	7d013503          	ld	a0,2000(sp)
    80003d0a:	06300593          	li	a1,99
    80003d0e:	e1aa                	sd	a0,192(sp)
    80003d10:	30a5e463          	bltu	a1,a0,80004018 <.LBB0_56>
    80003d14:	a009                	j	80003d16 <.LBB0_47+0x248>
    80003d16:	650e                	ld	a0,192(sp)
    80003d18:	00351593          	slli	a1,a0,0x3
    80003d1c:	4b010613          	addi	a2,sp,1200
    80003d20:	95b2                	add	a1,a1,a2
    80003d22:	4601                	li	a2,0
    80003d24:	e190                	sd	a2,0(a1)
    80003d26:	7d013583          	ld	a1,2000(sp)
    80003d2a:	00158613          	addi	a2,a1,1 # 4001 <.Lline_table_start0+0x476>
    80003d2e:	fd32                	sd	a2,184(sp)
    80003d30:	30b66063          	bltu	a2,a1,80004030 <.LBB0_57>
    80003d34:	a009                	j	80003d36 <.LBB0_47+0x268>
    80003d36:	756a                	ld	a0,184(sp)
    80003d38:	7ca13823          	sd	a0,2000(sp)
    80003d3c:	b73d                	j	80003c6a <.LBB0_47+0x19c>
    80003d3e:	6509                	lui	a0,0x2
    80003d40:	0f05051b          	addiw	a0,a0,240
    80003d44:	950a                	add	a0,a0,sp
    80003d46:	852a                	mv	a0,a0
    80003d48:	6589                	lui	a1,0x2
    80003d4a:	4185859b          	addiw	a1,a1,1048
    80003d4e:	958a                	add	a1,a1,sp
    80003d50:	85ae                	mv	a1,a1
    80003d52:	32800613          	li	a2,808
    80003d56:	f92a                	sd	a0,176(sp)
    80003d58:	f532                	sd	a2,168(sp)
    80003d5a:	00020097          	auipc	ra,0x20
    80003d5e:	b06080e7          	jalr	-1274(ra) # 80023860 <memcpy>
    80003d62:	6589                	lui	a1,0x2
    80003d64:	dc85859b          	addiw	a1,a1,-568
    80003d68:	958a                	add	a1,a1,sp
    80003d6a:	85ae                	mv	a1,a1
    80003d6c:	f12a                	sd	a0,160(sp)
    80003d6e:	852e                	mv	a0,a1
    80003d70:	764a                	ld	a2,176(sp)
    80003d72:	ed2e                	sd	a1,152(sp)
    80003d74:	85b2                	mv	a1,a2
    80003d76:	762a                	ld	a2,168(sp)
    80003d78:	00020097          	auipc	ra,0x20
    80003d7c:	ae8080e7          	jalr	-1304(ra) # 80023860 <memcpy>
    80003d80:	6589                	lui	a1,0x2
    80003d82:	aa05859b          	addiw	a1,a1,-1376
    80003d86:	958a                	add	a1,a1,sp
    80003d88:	85ae                	mv	a1,a1
        slot.value
    80003d8a:	e92a                	sd	a0,144(sp)
    80003d8c:	852e                	mv	a0,a1
    80003d8e:	65ea                	ld	a1,152(sp)
    80003d90:	762a                	ld	a2,168(sp)
    80003d92:	00020097          	auipc	ra,0x20
    80003d96:	ace080e7          	jalr	-1330(ra) # 80023860 <memcpy>
    80003d9a:	a009                	j	80003d9c <.LBB0_47+0x2ce>
    80003d9c:	650d                	lui	a0,0x3
    80003d9e:	3c85051b          	addiw	a0,a0,968
    80003da2:	950a                	add	a0,a0,sp
    80003da4:	852a                	mv	a0,a0
    80003da6:	6589                	lui	a1,0x2
    80003da8:	aa05859b          	addiw	a1,a1,-1376
    80003dac:	958a                	add	a1,a1,sp
    80003dae:	85ae                	mv	a1,a1
    80003db0:	32000613          	li	a2,800
    80003db4:	e52a                	sd	a0,136(sp)
    80003db6:	e132                	sd	a2,128(sp)
    80003db8:	00020097          	auipc	ra,0x20
    80003dbc:	aa8080e7          	jalr	-1368(ra) # 80023860 <memcpy>
    80003dc0:	658d                	lui	a1,0x3
    80003dc2:	7505859b          	addiw	a1,a1,1872
    80003dc6:	958a                	add	a1,a1,sp
    80003dc8:	85ae                	mv	a1,a1
        ManuallyDrop { value }
    80003dca:	fcaa                	sd	a0,120(sp)
    80003dcc:	852e                	mv	a0,a1
    80003dce:	662a                	ld	a2,136(sp)
    80003dd0:	f8ae                	sd	a1,112(sp)
    80003dd2:	85b2                	mv	a1,a2
    80003dd4:	660a                	ld	a2,128(sp)
    80003dd6:	00020097          	auipc	ra,0x20
    80003dda:	a8a080e7          	jalr	-1398(ra) # 80023860 <memcpy>
    80003dde:	658d                	lui	a1,0x3
    80003de0:	0a85859b          	addiw	a1,a1,168
    80003de4:	958a                	add	a1,a1,sp
    80003de6:	85ae                	mv	a1,a1
    80003de8:	f4aa                	sd	a0,104(sp)
    80003dea:	852e                	mv	a0,a1
    80003dec:	75c6                	ld	a1,112(sp)
    80003dee:	660a                	ld	a2,128(sp)
    80003df0:	00020097          	auipc	ra,0x20
    80003df4:	a70080e7          	jalr	-1424(ra) # 80023860 <memcpy>
    80003df8:	a009                	j	80003dfa <.LBB0_47+0x32c>
    80003dfa:	650d                	lui	a0,0x3
    80003dfc:	d885051b          	addiw	a0,a0,-632
    80003e00:	950a                	add	a0,a0,sp
    80003e02:	852a                	mv	a0,a0
    80003e04:	658d                	lui	a1,0x3
    80003e06:	0a85859b          	addiw	a1,a1,168
    80003e0a:	958a                	add	a1,a1,sp
    80003e0c:	85ae                	mv	a1,a1
    80003e0e:	32000613          	li	a2,800
    80003e12:	f0aa                	sd	a0,96(sp)
    80003e14:	ecb2                	sd	a2,88(sp)
    80003e16:	00020097          	auipc	ra,0x20
    80003e1a:	a4a080e7          	jalr	-1462(ra) # 80023860 <memcpy>
    80003e1e:	658d                	lui	a1,0x3
    80003e20:	a685859b          	addiw	a1,a1,-1432
    80003e24:	958a                	add	a1,a1,sp
    80003e26:	85ae                	mv	a1,a1
    80003e28:	e8aa                	sd	a0,80(sp)
    80003e2a:	852e                	mv	a0,a1
    80003e2c:	7606                	ld	a2,96(sp)
    80003e2e:	e4ae                	sd	a1,72(sp)
    80003e30:	85b2                	mv	a1,a2
    80003e32:	6666                	ld	a2,88(sp)
    80003e34:	00020097          	auipc	ra,0x20
    80003e38:	a2c080e7          	jalr	-1492(ra) # 80023860 <memcpy>
    80003e3c:	0b0c                	addi	a1,sp,400
        slot.value
    80003e3e:	e0aa                	sd	a0,64(sp)
    80003e40:	852e                	mv	a0,a1
    80003e42:	65a6                	ld	a1,72(sp)
    80003e44:	6666                	ld	a2,88(sp)
    80003e46:	00020097          	auipc	ra,0x20
    80003e4a:	a1a080e7          	jalr	-1510(ra) # 80023860 <memcpy>
    80003e4e:	a009                	j	80003e50 <.LBB0_47+0x382>
    80003e50:	6556                	ld	a0,336(sp)
    80003e52:	0a050513          	addi	a0,a0,160 # 30a0 <.Lline_table_start0+0x57a>
    80003e56:	00003097          	auipc	ra,0x3
    80003e5a:	912080e7          	jalr	-1774(ra) # 80006768 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E>
    80003e5e:	a281                	j	80003f9e <.LBB0_53+0x14>

    LOG.begin_op();
    // extern_data.cwd.as_ref().unwrap().put();
    // ICACHE.put(extern_data.cwd.as_ref());
    drop(pdata.cwd.as_mut());
    80003e60:	6556                	ld	a0,336(sp)
    80003e62:	3c050513          	addi	a0,a0,960
    80003e66:	00015097          	auipc	ra,0x15
    80003e6a:	976080e7          	jalr	-1674(ra) # 800187dc <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E>
    80003e6e:	fc2a                	sd	a0,56(sp)
    80003e70:	a009                	j	80003e72 <.LBB0_47+0x3a4>
    80003e72:	7562                	ld	a0,56(sp)
    80003e74:	0000a097          	auipc	ra,0xa
    80003e78:	a9c080e7          	jalr	-1380(ra) # 8000d910 <_ZN4core3mem4drop17h401f953ffa3efa2cE>
    80003e7c:	a009                	j	80003e7e <.LBB0_48>

0000000080003e7e <.LBB0_48>:
    LOG.end_op();
    80003e7e:	00056517          	auipc	a0,0x56
    80003e82:	1e250513          	addi	a0,a0,482 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80003e86:	00014097          	auipc	ra,0x14
    80003e8a:	848080e7          	jalr	-1976(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    80003e8e:	a009                	j	80003e90 <.LBB0_48+0x12>
    80003e90:	4501                	li	a0,0
    pdata.cwd = None;
    80003e92:	658d                	lui	a1,0x3
    80003e94:	6e85859b          	addiw	a1,a1,1768
    80003e98:	958a                	add	a1,a1,sp
    80003e9a:	e188                	sd	a0,0(a1)
    80003e9c:	6556                	ld	a0,336(sp)
    80003e9e:	3c050513          	addi	a0,a0,960
    80003ea2:	00003097          	auipc	ra,0x3
    80003ea6:	a76080e7          	jalr	-1418(ra) # 80006918 <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E>
    80003eaa:	aa39                	j	80003fc8 <.LBB0_54+0x16>

    let wait_guard = PROC_MANAGER.wait_lock.acquire();
    // TODO: Give any children to init
    
    // Parent might be sleeping in wait(). 
    PROC_MANAGER.wake_up(pdata.parent.unwrap() as usize);
    80003eac:	6556                	ld	a0,336(sp)
    80003eae:	6948                	ld	a0,144(a0)
    80003eb0:	65d6                	ld	a1,336(sp)
    80003eb2:	6dcc                	ld	a1,152(a1)

0000000080003eb4 <.LBB0_49>:
    80003eb4:	00020617          	auipc	a2,0x20
    80003eb8:	02c60613          	addi	a2,a2,44 # 80023ee0 <.L__unnamed_2>
    80003ebc:	00015097          	auipc	ra,0x15
    80003ec0:	f3a080e7          	jalr	-198(ra) # 80018df6 <_ZN4core6option15Option$LT$T$GT$6unwrap17hcae1c9af8f45f2c8E>
    80003ec4:	f82a                	sd	a0,48(sp)
    80003ec6:	a009                	j	80003ec8 <.LBB0_50>

0000000080003ec8 <.LBB0_50>:
    80003ec8:	00058517          	auipc	a0,0x58
    80003ecc:	03850513          	addi	a0,a0,56 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    80003ed0:	75c2                	ld	a1,48(sp)
    80003ed2:	00019097          	auipc	ra,0x19
    80003ed6:	dca080e7          	jalr	-566(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    80003eda:	a009                	j	80003edc <.LBB0_50+0x14>

    let mut guard = my_proc.meta.acquire();
    80003edc:	6576                	ld	a0,344(sp)
    80003ede:	fffff097          	auipc	ra,0xfffff
    80003ee2:	82e080e7          	jalr	-2002(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80003ee6:	658d                	lui	a1,0x3
    80003ee8:	7085859b          	addiw	a1,a1,1800
    80003eec:	958a                	add	a1,a1,sp
    80003eee:	e188                	sd	a0,0(a1)
    80003ef0:	a009                	j	80003ef2 <.LBB0_50+0x2a>
    80003ef2:	650d                	lui	a0,0x3
    80003ef4:	7085051b          	addiw	a0,a0,1800
    80003ef8:	950a                	add	a0,a0,sp
    80003efa:	852a                	mv	a0,a0

    guard.set_state(ProcState::ZOMBIE);
    80003efc:	00000097          	auipc	ra,0x0
    80003f00:	afe080e7          	jalr	-1282(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80003f04:	f42a                	sd	a0,40(sp)
    80003f06:	a009                	j	80003f08 <.LBB0_50+0x40>
    80003f08:	4515                	li	a0,5
    80003f0a:	658d                	lui	a1,0x3
    80003f0c:	7135859b          	addiw	a1,a1,1811
    80003f10:	958a                	add	a1,a1,sp
    80003f12:	00a58023          	sb	a0,0(a1) # 3000 <.Lline_table_start0+0x4da>
    80003f16:	75a2                	ld	a1,40(sp)
    80003f18:	f02a                	sd	a0,32(sp)
    80003f1a:	852e                	mv	a0,a1
    80003f1c:	7582                	ld	a1,32(sp)
    80003f1e:	0000e097          	auipc	ra,0xe
    80003f22:	b80080e7          	jalr	-1152(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    80003f26:	a009                	j	80003f28 <.LBB0_50+0x60>
    80003f28:	650d                	lui	a0,0x3
    80003f2a:	7085051b          	addiw	a0,a0,1800
    80003f2e:	950a                	add	a0,a0,sp
    80003f30:	852a                	mv	a0,a0
    guard.xstate = status as usize;
    80003f32:	00000097          	auipc	ra,0x0
    80003f36:	ac8080e7          	jalr	-1336(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80003f3a:	ec2a                	sd	a0,24(sp)
    80003f3c:	a009                	j	80003f3e <.LBB0_50+0x76>
    80003f3e:	7536                	ld	a0,360(sp)
    80003f40:	0005059b          	sext.w	a1,a0
    80003f44:	6662                	ld	a2,24(sp)
    80003f46:	e60c                	sd	a1,8(a2)
    
    drop(guard);
    80003f48:	650d                	lui	a0,0x3
    80003f4a:	7085051b          	addiw	a0,a0,1800
    80003f4e:	950a                	add	a0,a0,sp
    80003f50:	6108                	ld	a0,0(a0)
    80003f52:	0000a097          	auipc	ra,0xa
    80003f56:	954080e7          	jalr	-1708(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    80003f5a:	a009                	j	80003f5c <.LBB0_50+0x94>

    drop(wait_guard);
    80003f5c:	650d                	lui	a0,0x3
    80003f5e:	7005051b          	addiw	a0,a0,1792
    80003f62:	950a                	add	a0,a0,sp
    80003f64:	6108                	ld	a0,0(a0)
    80003f66:	0000a097          	auipc	ra,0xa
    80003f6a:	988080e7          	jalr	-1656(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    80003f6e:	a009                	j	80003f70 <.LBB0_51>

0000000080003f70 <.LBB0_51>:

    // Jump into scheduler, never to return. 
    CPU_MANAGER.scheduler();
    80003f70:	0006b517          	auipc	a0,0x6b
    80003f74:	09050513          	addi	a0,a0,144 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80003f78:	0001a097          	auipc	ra,0x1a
    80003f7c:	826080e7          	jalr	-2010(ra) # 8001d79e <_ZN6kernel7process3cpu10CPUManager9scheduler17hcbf70eaf12402349E>
    80003f80:	a009                	j	80003f82 <.LBB0_52>

0000000080003f82 <.LBB0_52>:
    panic!("zombine exit");
    80003f82:	00020517          	auipc	a0,0x20
    80003f86:	f7650513          	addi	a0,a0,-138 # 80023ef8 <.L__unnamed_3>

0000000080003f8a <.LBB0_53>:
    80003f8a:	00020617          	auipc	a2,0x20
    80003f8e:	f7e60613          	addi	a2,a2,-130 # 80023f08 <.L__unnamed_4>
    80003f92:	45b1                	li	a1,12
    80003f94:	0001d097          	auipc	ra,0x1d
    80003f98:	d36080e7          	jalr	-714(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80003f9c:	0000                	unimp
    pdata.open_files = array![_ => None; NFILE];
    80003f9e:	6556                	ld	a0,336(sp)
    80003fa0:	0a050513          	addi	a0,a0,160
    80003fa4:	0b0c                	addi	a1,sp,400
    80003fa6:	32000613          	li	a2,800
    80003faa:	00020097          	auipc	ra,0x20
    80003fae:	8b6080e7          	jalr	-1866(ra) # 80023860 <memcpy>

0000000080003fb2 <.LBB0_54>:
    LOG.begin_op();
    80003fb2:	00056597          	auipc	a1,0x56
    80003fb6:	0ae58593          	addi	a1,a1,174 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80003fba:	e82a                	sd	a0,16(sp)
    80003fbc:	852e                	mv	a0,a1
    80003fbe:	00013097          	auipc	ra,0x13
    80003fc2:	120080e7          	jalr	288(ra) # 800170de <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E>
    80003fc6:	bd69                	j	80003e60 <.LBB0_47+0x392>
    pdata.cwd = None;
    80003fc8:	650d                	lui	a0,0x3
    80003fca:	6f85051b          	addiw	a0,a0,1784
    80003fce:	950a                	add	a0,a0,sp
    80003fd0:	6108                	ld	a0,0(a0)
    80003fd2:	65d6                	ld	a1,336(sp)
    80003fd4:	3ca5b823          	sd	a0,976(a1)
    80003fd8:	650d                	lui	a0,0x3
    80003fda:	6f05051b          	addiw	a0,a0,1776
    80003fde:	950a                	add	a0,a0,sp
    80003fe0:	6108                	ld	a0,0(a0)
    80003fe2:	3ca5b423          	sd	a0,968(a1)
    80003fe6:	650d                	lui	a0,0x3
    80003fe8:	6e85051b          	addiw	a0,a0,1768
    80003fec:	950a                	add	a0,a0,sp
    80003fee:	6108                	ld	a0,0(a0)
    80003ff0:	3ca5b023          	sd	a0,960(a1)
    80003ff4:	6545                	lui	a0,0x11
    80003ff6:	a305051b          	addiw	a0,a0,-1488

0000000080003ffa <.LBB0_55>:
    80003ffa:	00058617          	auipc	a2,0x58
    80003ffe:	f0660613          	addi	a2,a2,-250 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    80004002:	9532                	add	a0,a0,a2
    let wait_guard = PROC_MANAGER.wait_lock.acquire();
    80004004:	ffffe097          	auipc	ra,0xffffe
    80004008:	456080e7          	jalr	1110(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    8000400c:	658d                	lui	a1,0x3
    8000400e:	7005859b          	addiw	a1,a1,1792
    80004012:	958a                	add	a1,a1,sp
    80004014:	e188                	sd	a0,0(a1)
    80004016:	bd59                	j	80003eac <.LBB0_48+0x2e>

0000000080004018 <.LBB0_56>:
    pdata.open_files = array![_ => None; NFILE];
    80004018:	00020617          	auipc	a2,0x20
    8000401c:	e9060613          	addi	a2,a2,-368 # 80023ea8 <.L__unnamed_5>
    80004020:	06400593          	li	a1,100
    80004024:	650e                	ld	a0,192(sp)
    80004026:	0001d097          	auipc	ra,0x1d
    8000402a:	cd0080e7          	jalr	-816(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080004030 <.LBB0_57>:
    80004030:	00020517          	auipc	a0,0x20
    80004034:	e9050513          	addi	a0,a0,-368 # 80023ec0 <str.0>

0000000080004038 <.LBB0_58>:
    80004038:	00020617          	auipc	a2,0x20
    8000403c:	e7060613          	addi	a2,a2,-400 # 80023ea8 <.L__unnamed_5>
    80004040:	45f1                	li	a1,28
    80004042:	0001d097          	auipc	ra,0x1d
    80004046:	c88080e7          	jalr	-888(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process8fork_ret17h0f53fd7a3b041115E:

000000008000404c <_ZN6kernel7process8fork_ret17h0f53fd7a3b041115E>:

/// A fork child's very first scheduling by scheduler()
/// will switch to forkret.
/// 
/// Need to be handled carefully, because CPU use ra to jump here
unsafe fn fork_ret() -> ! {
    8000404c:	715d                	addi	sp,sp,-80
    static mut FIRST: bool = true;
    
    // Still holding p->lock from scheduler
    CPU_MANAGER.myproc().unwrap().meta.release();
    8000404e:	e486                	sd	ra,72(sp)

0000000080004050 <.LBB1_10>:
    80004050:	0006b517          	auipc	a0,0x6b
    80004054:	fb050513          	addi	a0,a0,-80 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80004058:	00019097          	auipc	ra,0x19
    8000405c:	6e0080e7          	jalr	1760(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    80004060:	e82a                	sd	a0,16(sp)
    80004062:	a009                	j	80004064 <.LBB1_11>

0000000080004064 <.LBB1_11>:
    80004064:	00020597          	auipc	a1,0x20
    80004068:	ebc58593          	addi	a1,a1,-324 # 80023f20 <.L__unnamed_6>
    8000406c:	6542                	ld	a0,16(sp)
    8000406e:	00015097          	auipc	ra,0x15
    80004072:	afa080e7          	jalr	-1286(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    80004076:	e42a                	sd	a0,8(sp)
    80004078:	a009                	j	8000407a <.LBB1_11+0x16>
    8000407a:	6522                	ld	a0,8(sp)
    8000407c:	fffff097          	auipc	ra,0xfffff
    80004080:	a28080e7          	jalr	-1496(ra) # 80002aa4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h0a9fc2be2300cfbbE>
    80004084:	a009                	j	80004086 <.LBB1_12>

0000000080004086 <.LBB1_12>:
    
    if FIRST {
    80004086:	00069517          	auipc	a0,0x69
    8000408a:	8ca50513          	addi	a0,a0,-1846 # 8006c950 <_ZN6kernel7process8fork_ret5FIRST17hd0545f2f848334a3E>
    8000408e:	00054503          	lbu	a0,0(a0)
    80004092:	8905                	andi	a0,a0,1
    80004094:	4581                	li	a1,0
    80004096:	02b50063          	beq	a0,a1,800040b6 <.LBB1_13+0x1a>
    8000409a:	a009                	j	8000409c <.LBB1_13>

000000008000409c <.LBB1_13>:
        // File system initialization
        FIRST = false;
    8000409c:	00069517          	auipc	a0,0x69
    800040a0:	8b450513          	addi	a0,a0,-1868 # 8006c950 <_ZN6kernel7process8fork_ret5FIRST17hd0545f2f848334a3E>
    800040a4:	4581                	li	a1,0
    800040a6:	00b50023          	sb	a1,0(a0)
    800040aa:	4505                	li	a0,1
        init(ROOTDEV);
    800040ac:	00004097          	auipc	ra,0x4
    800040b0:	98e080e7          	jalr	-1650(ra) # 80007a3a <_ZN6kernel2fs4init17he50c5d7abc0cecaeE>
    800040b4:	a011                	j	800040b8 <.LBB1_13+0x1c>
    if FIRST {
    800040b6:	a011                	j	800040ba <.LBB1_14>
    800040b8:	a009                	j	800040ba <.LBB1_14>

00000000800040ba <.LBB1_14>:
    }
    println!("user trap return");
    800040ba:	00020597          	auipc	a1,0x20
    800040be:	e9658593          	addi	a1,a1,-362 # 80023f50 <.L__unnamed_7>

00000000800040c2 <.LBB1_15>:
    800040c2:	00020697          	auipc	a3,0x20
    800040c6:	e9e68693          	addi	a3,a3,-354 # 80023f60 <.L__unnamed_1>
    800040ca:	0828                	addi	a0,sp,24
    800040cc:	4605                	li	a2,1
    800040ce:	4701                	li	a4,0
    800040d0:	00001097          	auipc	ra,0x1
    800040d4:	654080e7          	jalr	1620(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800040d8:	a009                	j	800040da <.LBB1_15+0x18>
    800040da:	0828                	addi	a0,sp,24
    800040dc:	0000d097          	auipc	ra,0xd
    800040e0:	c14080e7          	jalr	-1004(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    800040e4:	a009                	j	800040e6 <.LBB1_15+0x24>
    usertrap_ret();
    800040e6:	00011097          	auipc	ra,0x11
    800040ea:	a00080e7          	jalr	-1536(ra) # 80014ae6 <usertrap_ret>
	...

Disassembly of section .text._ZN6kernel8register7medeleg5write17habc21dfcd785d64eE:

00000000800040f0 <_ZN6kernel8register7medeleg5write17habc21dfcd785d64eE>:
    llvm_asm!("csrr $0, medeleg":"=r"(ret):::"volatile");
    ret
}

#[inline]
pub unsafe fn write(medeleg: usize){
    800040f0:	1141                	addi	sp,sp,-16
    800040f2:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw medeleg, $0"::"r"(medeleg)::"volatile");
    800040f4:	30251073          	csrw	medeleg,a0
    800040f8:	0141                	addi	sp,sp,16
    800040fa:	8082                	ret

Disassembly of section .text._ZN5alloc2rc11is_dangling17h0e0687bb3405cb5aE:

00000000800040fc <_ZN5alloc2rc11is_dangling17h0e0687bb3405cb5aE>:
    pub fn new() -> Weak<T> {
        Weak { ptr: NonNull::new(usize::MAX as *mut RcBox<T>).expect("MAX is not 0") }
    }
}

pub(crate) fn is_dangling<T: ?Sized>(ptr: *mut T) -> bool {
    800040fc:	1141                	addi	sp,sp,-16
    800040fe:	e02a                	sd	a0,0(sp)
    let address = ptr as *mut () as usize;
    80004100:	e42a                	sd	a0,8(sp)
    address == usize::MAX
    80004102:	0505                	addi	a0,a0,1
    80004104:	00153513          	seqz	a0,a0
}
    80004108:	0141                	addi	sp,sp,16
    8000410a:	8082                	ret

Disassembly of section .text._ZN6kernel2fs4file5VFile4read17h76f4d5dce485aca3E:

000000008000410c <_ZN6kernel2fs4file5VFile4read17h76f4d5dce485aca3E>:
            offset: 0,
            major: 0
        }
    }

    pub fn read(
    8000410c:	7121                	addi	sp,sp,-448
    8000410e:	ff06                	sd	ra,440(sp)
    80004110:	e2ae                	sd	a1,320(sp)
    80004112:	e6b2                	sd	a2,328(sp)
    80004114:	eab6                	sd	a3,336(sp)
    80004116:	4701                	li	a4,0
        &self, 
        addr: usize, 
        len: usize
    ) -> Result<usize, &'static str> {
        let mut ret = 0;
    80004118:	12e10fa3          	sb	a4,319(sp)
    8000411c:	f53a                	sd	a4,168(sp)
        if !self.readable() {
    8000411e:	f12a                	sd	a0,160(sp)
    80004120:	852e                	mv	a0,a1
    80004122:	ed36                	sd	a3,152(sp)
    80004124:	e932                	sd	a2,144(sp)
    80004126:	e52e                	sd	a1,136(sp)
    80004128:	00001097          	auipc	ra,0x1
    8000412c:	828080e7          	jalr	-2008(ra) # 80004950 <_ZN6kernel2fs4file5VFile8readable17h4eb842d25f6684ebE>
    80004130:	e12a                	sd	a0,128(sp)
    80004132:	a009                	j	80004134 <_ZN6kernel2fs4file5VFile4read17h76f4d5dce485aca3E+0x28>
    80004134:	650a                	ld	a0,128(sp)
    80004136:	e105                	bnez	a0,80004156 <.LBB0_62+0x14>
    80004138:	a009                	j	8000413a <.LBB0_61>

000000008000413a <.LBB0_61>:
            panic!("File can't be read!")
    8000413a:	00020517          	auipc	a0,0x20
    8000413e:	e2650513          	addi	a0,a0,-474 # 80023f60 <.L__unnamed_1>

0000000080004142 <.LBB0_62>:
    80004142:	00020617          	auipc	a2,0x20
    80004146:	e4660613          	addi	a2,a2,-442 # 80023f88 <.L__unnamed_2>
    8000414a:	45cd                	li	a1,19
    8000414c:	0001d097          	auipc	ra,0x1d
    80004150:	b7e080e7          	jalr	-1154(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80004154:	0000                	unimp
        }

        match self.ftype {
            FileType::Pipe => {
    80004156:	652a                	ld	a0,136(sp)
    80004158:	03455583          	lhu	a1,52(a0)
    8000415c:	4605                	li	a2,1
    8000415e:	fcae                	sd	a1,120(sp)
    80004160:	02c58b63          	beq	a1,a2,80004196 <.LBB0_64+0x14>
    80004164:	a009                	j	80004166 <.LBB0_62+0x24>
    80004166:	4509                	li	a0,2
    80004168:	75e6                	ld	a1,120(sp)
    8000416a:	1ea58963          	beq	a1,a0,8000435c <.LBB0_69+0x6e>
    8000416e:	a009                	j	80004170 <.LBB0_62+0x2e>
    80004170:	450d                	li	a0,3
    80004172:	75e6                	ld	a1,120(sp)
    80004174:	0aa58463          	beq	a1,a0,8000421c <.LBB0_65+0x7e>
    80004178:	a009                	j	8000417a <.LBB0_63>

000000008000417a <.LBB0_63>:
                    }
                }
            },

            _ => {
                panic!("Invalid file!")
    8000417a:	00020517          	auipc	a0,0x20
    8000417e:	e2650513          	addi	a0,a0,-474 # 80023fa0 <.L__unnamed_3>

0000000080004182 <.LBB0_64>:
    80004182:	00020617          	auipc	a2,0x20
    80004186:	e2e60613          	addi	a2,a2,-466 # 80023fb0 <.L__unnamed_4>
    8000418a:	45b5                	li	a1,13
    8000418c:	0001d097          	auipc	ra,0x1d
    80004190:	b3e080e7          	jalr	-1218(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80004194:	0000                	unimp
                let pipe = unsafe{ &*self.pipe.unwrap() };
    80004196:	652a                	ld	a0,136(sp)
    80004198:	6908                	ld	a0,16(a0)
    8000419a:	65aa                	ld	a1,136(sp)
    8000419c:	6d8c                	ld	a1,24(a1)

000000008000419e <.LBB0_65>:
    8000419e:	00020617          	auipc	a2,0x20
    800041a2:	ee260613          	addi	a2,a2,-286 # 80024080 <.L__unnamed_5>
    800041a6:	00015097          	auipc	ra,0x15
    800041aa:	8ea080e7          	jalr	-1814(ra) # 80018a90 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0825b24fc19d61e6E>
    800041ae:	f8aa                	sd	a0,112(sp)
    800041b0:	a009                	j	800041b2 <.LBB0_65+0x14>
    800041b2:	7546                	ld	a0,112(sp)
    800041b4:	ef2a                	sd	a0,408(sp)
    800041b6:	01a8                	addi	a0,sp,200
                ret = pipe.read(addr, len)?;
    800041b8:	75c6                	ld	a1,112(sp)
    800041ba:	664a                	ld	a2,144(sp)
    800041bc:	66ea                	ld	a3,152(sp)
    800041be:	00008097          	auipc	ra,0x8
    800041c2:	054080e7          	jalr	84(ra) # 8000c212 <_ZN6kernel2fs4pipe4Pipe4read17h0a1d1c5b4cb6641aE>
    800041c6:	a009                	j	800041c8 <.LBB0_65+0x2a>
    800041c8:	1908                	addi	a0,sp,176
    800041ca:	01ac                	addi	a1,sp,200
    800041cc:	00009097          	auipc	ra,0x9
    800041d0:	d34080e7          	jalr	-716(ra) # 8000cf00 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h98bd22b69e1dae52E>
    800041d4:	a009                	j	800041d6 <.LBB0_65+0x38>
    800041d6:	754a                	ld	a0,176(sp)
    800041d8:	4581                	li	a1,0
    800041da:	00b50463          	beq	a0,a1,800041e2 <.LBB0_65+0x44>
    800041de:	a009                	j	800041e0 <.LBB0_65+0x42>
    800041e0:	a811                	j	800041f4 <.LBB0_65+0x56>
    800041e2:	756a                	ld	a0,184(sp)
    800041e4:	fb2a                	sd	a0,432(sp)
    800041e6:	f52a                	sd	a0,168(sp)
                return Ok(ret)
    800041e8:	758a                	ld	a1,160(sp)
    800041ea:	e588                	sd	a0,8(a1)
    800041ec:	4501                	li	a0,0
    800041ee:	e188                	sd	a0,0(a1)
    800041f0:	ac3d                	j	8000442e <.LBB0_70+0xca>
                ret = pipe.read(addr, len)?;
    800041f2:	0000                	unimp
    800041f4:	756a                	ld	a0,184(sp)
    800041f6:	658e                	ld	a1,192(sp)
    800041f8:	f32a                	sd	a0,416(sp)
    800041fa:	f72e                	sd	a1,424(sp)
    800041fc:	00015097          	auipc	ra,0x15
    80004200:	fe8080e7          	jalr	-24(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    80004204:	f4aa                	sd	a0,104(sp)
    80004206:	f0ae                	sd	a1,96(sp)
    80004208:	a009                	j	8000420a <.LBB0_65+0x6c>
    8000420a:	750a                	ld	a0,160(sp)
    8000420c:	75a6                	ld	a1,104(sp)
    8000420e:	7606                	ld	a2,96(sp)
    80004210:	00009097          	auipc	ra,0x9
    80004214:	c68080e7          	jalr	-920(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    80004218:	a009                	j	8000421a <.LBB0_65+0x7c>
#![no_std]
    8000421a:	ac11                	j	8000442e <.LBB0_70+0xca>
                if self.major < 0 || 
    8000421c:	652a                	ld	a0,136(sp)
    8000421e:	03651583          	lh	a1,54(a0)
    80004222:	4601                	li	a2,0
    80004224:	02c5c863          	blt	a1,a2,80004254 <.LBB0_65+0xb6>
    80004228:	a835                	j	80004264 <.LBB0_65+0xc6>
    8000422a:	4505                	li	a0,1
    8000422c:	0ea10323          	sb	a0,230(sp)
    80004230:	a829                	j	8000424a <.LBB0_65+0xac>
    80004232:	4501                	li	a0,0
    80004234:	0ea10323          	sb	a0,230(sp)
    80004238:	a809                	j	8000424a <.LBB0_65+0xac>
                unsafe{ DEVICE_LIST.table[self.major as usize].read as usize == 0 }{
    8000423a:	652a                	ld	a0,136(sp)
    8000423c:	03651583          	lh	a1,54(a0)
    80004240:	4629                	li	a2,10
    80004242:	ecae                	sd	a1,88(sp)
    80004244:	02c5ec63          	bltu	a1,a2,8000427c <.LBB0_65+0xde>
    80004248:	a419                	j	8000444e <.LBB0_71>
                if self.major < 0 || 
    8000424a:	0e614503          	lbu	a0,230(sp)
    8000424e:	8905                	andi	a0,a0,1
    80004250:	e139                	bnez	a0,80004296 <.LBB0_67>
    80004252:	a8a9                	j	800042ac <.LBB0_67+0x16>
    80004254:	4505                	li	a0,1
    80004256:	0ea103a3          	sb	a0,231(sp)
    8000425a:	a821                	j	80004272 <.LBB0_65+0xd4>
    8000425c:	4501                	li	a0,0
    8000425e:	0ea103a3          	sb	a0,231(sp)
    80004262:	a801                	j	80004272 <.LBB0_65+0xd4>
                self.major as usize >= NDEV || 
    80004264:	652a                	ld	a0,136(sp)
    80004266:	03651583          	lh	a1,54(a0)
    8000426a:	4625                	li	a2,9
                if self.major < 0 || 
    8000426c:	feb664e3          	bltu	a2,a1,80004254 <.LBB0_65+0xb6>
    80004270:	b7f5                	j	8000425c <.LBB0_65+0xbe>
    80004272:	0e714503          	lbu	a0,231(sp)
    80004276:	8905                	andi	a0,a0,1
    80004278:	f94d                	bnez	a0,8000422a <.LBB0_65+0x8c>
    8000427a:	b7c1                	j	8000423a <.LBB0_65+0x9c>
                unsafe{ DEVICE_LIST.table[self.major as usize].read as usize == 0 }{
    8000427c:	6566                	ld	a0,88(sp)
    8000427e:	00451593          	slli	a1,a0,0x4

0000000080004282 <.LBB0_66>:
    80004282:	00069617          	auipc	a2,0x69
    80004286:	d7e60613          	addi	a2,a2,-642 # 8006d000 <_ZN6kernel2fs7devices11DEVICE_LIST17h17dd10e781df8d62E>
    8000428a:	95b2                	add	a1,a1,a2
    8000428c:	618c                	ld	a1,0(a1)
    8000428e:	4601                	li	a2,0
                if self.major < 0 || 
    80004290:	f8c58de3          	beq	a1,a2,8000422a <.LBB0_65+0x8c>
    80004294:	bf79                	j	80004232 <.LBB0_65+0x94>

0000000080004296 <.LBB0_67>:
                    return Err("vfs: fail to read device")
    80004296:	00020517          	auipc	a0,0x20
    8000429a:	d4a50513          	addi	a0,a0,-694 # 80023fe0 <.L__unnamed_6>
    8000429e:	758a                	ld	a1,160(sp)
    800042a0:	e588                	sd	a0,8(a1)
    800042a2:	4561                	li	a0,24
    800042a4:	e988                	sd	a0,16(a1)
    800042a6:	4505                	li	a0,1
    800042a8:	e188                	sd	a0,0(a1)
    800042aa:	a259                	j	80004430 <.LBB0_70+0xcc>
                    DEVICE_LIST.table[self.major as usize].read()
    800042ac:	652a                	ld	a0,136(sp)
    800042ae:	03651583          	lh	a1,54(a0)
    800042b2:	4625                	li	a2,9
    800042b4:	e8ae                	sd	a1,80(sp)
    800042b6:	1ab66763          	bltu	a2,a1,80004464 <.LBB0_72>
    800042ba:	a009                	j	800042bc <.LBB0_67+0x26>
    800042bc:	6546                	ld	a0,80(sp)
    800042be:	00451593          	slli	a1,a0,0x4

00000000800042c2 <.LBB0_68>:
    800042c2:	00069617          	auipc	a2,0x69
    800042c6:	d3e60613          	addi	a2,a2,-706 # 8006d000 <_ZN6kernel2fs7devices11DEVICE_LIST17h17dd10e781df8d62E>
    800042ca:	00c58533          	add	a0,a1,a2
    800042ce:	00001097          	auipc	ra,0x1
    800042d2:	3dc080e7          	jalr	988(ra) # 800056aa <_ZN6kernel2fs7devices6Device4read17hc1af3a5850f94b51E>
    800042d6:	85aa                	mv	a1,a0
    800042d8:	eeaa                	sd	a0,344(sp)
    800042da:	e4ae                	sd	a1,72(sp)
    800042dc:	a009                	j	800042de <.LBB0_68+0x1c>
    800042de:	4505                	li	a0,1
                ret = read(true, addr, len).ok_or("Fail to read device")?;
    800042e0:	65ca                	ld	a1,144(sp)
    800042e2:	666a                	ld	a2,152(sp)
    800042e4:	66a6                	ld	a3,72(sp)
    800042e6:	9682                	jalr	a3
    800042e8:	e0aa                	sd	a0,64(sp)
    800042ea:	fc2e                	sd	a1,56(sp)
    800042ec:	a009                	j	800042ee <.LBB0_69>

00000000800042ee <.LBB0_69>:
    800042ee:	00020697          	auipc	a3,0x20
    800042f2:	d2268693          	addi	a3,a3,-734 # 80024010 <.L__unnamed_7>
    800042f6:	0208                	addi	a0,sp,256
    800042f8:	474d                	li	a4,19
    800042fa:	6586                	ld	a1,64(sp)
    800042fc:	7662                	ld	a2,56(sp)
    800042fe:	00014097          	auipc	ra,0x14
    80004302:	2d0080e7          	jalr	720(ra) # 800185ce <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE>
    80004306:	a009                	j	80004308 <.LBB0_69+0x1a>
    80004308:	11a8                	addi	a0,sp,232
    8000430a:	020c                	addi	a1,sp,256
    8000430c:	00009097          	auipc	ra,0x9
    80004310:	bf4080e7          	jalr	-1036(ra) # 8000cf00 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h98bd22b69e1dae52E>
    80004314:	a009                	j	80004316 <.LBB0_69+0x28>
    80004316:	752e                	ld	a0,232(sp)
    80004318:	4581                	li	a1,0
    8000431a:	00b50463          	beq	a0,a1,80004322 <.LBB0_69+0x34>
    8000431e:	a009                	j	80004320 <.LBB0_69+0x32>
    80004320:	a811                	j	80004334 <.LBB0_69+0x46>
    80004322:	754e                	ld	a0,240(sp)
    80004324:	faaa                	sd	a0,368(sp)
    80004326:	f52a                	sd	a0,168(sp)
                return Ok(ret)
    80004328:	758a                	ld	a1,160(sp)
    8000432a:	e588                	sd	a0,8(a1)
    8000432c:	4501                	li	a0,0
    8000432e:	e188                	sd	a0,0(a1)
    80004330:	a8f5                	j	8000442c <.LBB0_70+0xc8>
                ret = read(true, addr, len).ok_or("Fail to read device")?;
    80004332:	0000                	unimp
    80004334:	754e                	ld	a0,240(sp)
    80004336:	75ee                	ld	a1,248(sp)
    80004338:	f2aa                	sd	a0,352(sp)
    8000433a:	f6ae                	sd	a1,360(sp)
    8000433c:	00015097          	auipc	ra,0x15
    80004340:	ea8080e7          	jalr	-344(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    80004344:	f82a                	sd	a0,48(sp)
    80004346:	f42e                	sd	a1,40(sp)
    80004348:	a009                	j	8000434a <.LBB0_69+0x5c>
    8000434a:	750a                	ld	a0,160(sp)
    8000434c:	75c2                	ld	a1,48(sp)
    8000434e:	7622                	ld	a2,40(sp)
    80004350:	00009097          	auipc	ra,0x9
    80004354:	b28080e7          	jalr	-1240(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    80004358:	a009                	j	8000435a <.LBB0_69+0x6c>
    8000435a:	a8c9                	j	8000442c <.LBB0_70+0xc8>
                let inode = unsafe{ &*self.inode.unwrap() };
    8000435c:	652a                	ld	a0,136(sp)
    8000435e:	7108                	ld	a0,32(a0)
    80004360:	65aa                	ld	a1,136(sp)
    80004362:	758c                	ld	a1,40(a1)

0000000080004364 <.LBB0_70>:
    80004364:	00020617          	auipc	a2,0x20
    80004368:	cc460613          	addi	a2,a2,-828 # 80024028 <.L__unnamed_8>
    8000436c:	00015097          	auipc	ra,0x15
    80004370:	ac0080e7          	jalr	-1344(ra) # 80018e2c <_ZN4core6option15Option$LT$T$GT$6unwrap17hcee992c451ddfa70E>
    80004374:	f02a                	sd	a0,32(sp)
    80004376:	a009                	j	80004378 <.LBB0_70+0x14>
    80004378:	7502                	ld	a0,32(sp)
    8000437a:	feaa                	sd	a0,376(sp)
    8000437c:	4585                	li	a1,1
                let mut inode_guard = inode.lock();
    8000437e:	12b10fa3          	sb	a1,319(sp)
    80004382:	00018097          	auipc	ra,0x18
    80004386:	eba080e7          	jalr	-326(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    8000438a:	ee2a                	sd	a0,280(sp)
    8000438c:	f22e                	sd	a1,288(sp)
    8000438e:	a009                	j	80004390 <.LBB0_70+0x2c>
    80004390:	0a28                	addi	a0,sp,280
                match inode_guard.read(true, addr, self.offset, len as u32) {
    80004392:	00003097          	auipc	ra,0x3
    80004396:	0d8080e7          	jalr	216(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8000439a:	ec2a                	sd	a0,24(sp)
    8000439c:	a009                	j	8000439e <.LBB0_70+0x3a>
    8000439e:	652a                	ld	a0,136(sp)
    800043a0:	5914                	lw	a3,48(a0)
    800043a2:	4585                	li	a1,1
    800043a4:	6562                	ld	a0,24(sp)
    800043a6:	664a                	ld	a2,144(sp)
    800043a8:	676a                	ld	a4,152(sp)
    800043aa:	00017097          	auipc	ra,0x17
    800043ae:	30e080e7          	jalr	782(ra) # 8001b6b8 <_ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE>
    800043b2:	f62a                	sd	a0,296(sp)
    800043b4:	fa2e                	sd	a1,304(sp)
    800043b6:	a009                	j	800043b8 <.LBB0_70+0x54>
                    Ok(_) => {
    800043b8:	7532                	ld	a0,296(sp)
    800043ba:	00a035b3          	snez	a1,a0
    800043be:	4601                	li	a2,0
    800043c0:	00c50e63          	beq	a0,a2,800043dc <.LBB0_70+0x78>
    800043c4:	a009                	j	800043c6 <.LBB0_70+0x62>
                    Err(err) => {
    800043c6:	7532                	ld	a0,296(sp)
    800043c8:	75d2                	ld	a1,304(sp)
    800043ca:	e32a                	sd	a0,384(sp)
    800043cc:	e72e                	sd	a1,392(sp)
                        Err(err)
    800043ce:	760a                	ld	a2,160(sp)
    800043d0:	e608                	sd	a0,8(a2)
    800043d2:	ea0c                	sd	a1,16(a2)
    800043d4:	4505                	li	a0,1
    800043d6:	e208                	sd	a0,0(a2)
                match inode_guard.read(true, addr, self.offset, len as u32) {
    800043d8:	a0b5                	j	80004444 <.LBB0_70+0xe0>
    800043da:	0000                	unimp
                        let offset = unsafe { &mut *(&self.offset as *const _ as *mut u32)};
    800043dc:	652a                	ld	a0,136(sp)
    800043de:	03050593          	addi	a1,a0,48
    800043e2:	eb2e                	sd	a1,400(sp)
                        *offset += ret as u32;
    800043e4:	0a816603          	lwu	a2,168(sp)
    800043e8:	03056683          	lwu	a3,48(a0)
    800043ec:	9636                	add	a2,a2,a3
    800043ee:	02061693          	slli	a3,a2,0x20
    800043f2:	9281                	srli	a3,a3,0x20
    800043f4:	e82e                	sd	a1,16(sp)
    800043f6:	e432                	sd	a2,8(sp)
    800043f8:	08c69163          	bne	a3,a2,8000447a <.LBB0_73>
    800043fc:	a009                	j	800043fe <.LBB0_70+0x9a>
    800043fe:	6522                	ld	a0,8(sp)
    80004400:	65c2                	ld	a1,16(sp)
    80004402:	c188                	sw	a0,0(a1)
    80004404:	4601                	li	a2,0
                        drop(inode_guard);
    80004406:	12c10fa3          	sb	a2,319(sp)
    8000440a:	6572                	ld	a0,280(sp)
    8000440c:	7592                	ld	a1,288(sp)
    8000440e:	00009097          	auipc	ra,0x9
    80004412:	5b2080e7          	jalr	1458(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    80004416:	a009                	j	80004418 <.LBB0_70+0xb4>
                        Ok(ret)
    80004418:	752a                	ld	a0,168(sp)
    8000441a:	758a                	ld	a1,160(sp)
    8000441c:	e588                	sd	a0,8(a1)
    8000441e:	4501                	li	a0,0
    80004420:	e188                	sd	a0,0(a1)
                match inode_guard.read(true, addr, self.offset, len as u32) {
    80004422:	a00d                	j	80004444 <.LBB0_70+0xe0>
    80004424:	4501                	li	a0,0
            },
    80004426:	12a10fa3          	sb	a0,319(sp)
            },
        }
    }
    8000442a:	a021                	j	80004432 <.LBB0_70+0xce>
    8000442c:	a011                	j	80004430 <.LBB0_70+0xcc>
    8000442e:	a009                	j	80004430 <.LBB0_70+0xcc>
    80004430:	a009                	j	80004432 <.LBB0_70+0xce>
    80004432:	70fa                	ld	ra,440(sp)
    80004434:	6139                	addi	sp,sp,448
    80004436:	8082                	ret
    80004438:	0a28                	addi	a0,sp,280
            },
    8000443a:	00002097          	auipc	ra,0x2
    8000443e:	61c080e7          	jalr	1564(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    80004442:	b7cd                	j	80004424 <.LBB0_70+0xc0>
    80004444:	13f14503          	lbu	a0,319(sp)
    80004448:	8905                	andi	a0,a0,1
    8000444a:	f57d                	bnez	a0,80004438 <.LBB0_70+0xd4>
    8000444c:	bfe1                	j	80004424 <.LBB0_70+0xc0>

000000008000444e <.LBB0_71>:
                unsafe{ DEVICE_LIST.table[self.major as usize].read as usize == 0 }{
    8000444e:	00020617          	auipc	a2,0x20
    80004452:	b7a60613          	addi	a2,a2,-1158 # 80023fc8 <.L__unnamed_9>
    80004456:	45a9                	li	a1,10
    80004458:	6566                	ld	a0,88(sp)
    8000445a:	0001d097          	auipc	ra,0x1d
    8000445e:	89c080e7          	jalr	-1892(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080004464 <.LBB0_72>:
                    DEVICE_LIST.table[self.major as usize].read()
    80004464:	00020617          	auipc	a2,0x20
    80004468:	b9460613          	addi	a2,a2,-1132 # 80023ff8 <.L__unnamed_10>
    8000446c:	45a9                	li	a1,10
    8000446e:	6546                	ld	a0,80(sp)
    80004470:	0001d097          	auipc	ra,0x1d
    80004474:	886080e7          	jalr	-1914(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000447a <.LBB0_73>:
                        *offset += ret as u32;
    8000447a:	00020517          	auipc	a0,0x20
    8000447e:	be650513          	addi	a0,a0,-1050 # 80024060 <str.0>

0000000080004482 <.LBB0_74>:
    80004482:	00020617          	auipc	a2,0x20
    80004486:	bbe60613          	addi	a2,a2,-1090 # 80024040 <.L__unnamed_11>
    8000448a:	45f1                	li	a1,28
    8000448c:	0001d097          	auipc	ra,0x1d
    80004490:	83e080e7          	jalr	-1986(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs4file5VFile5write17h51ce02f6d6d466e6E:

0000000080004496 <_ZN6kernel2fs4file5VFile5write17h51ce02f6d6d466e6E>:

    /// Write to file f. 
    /// addr is a user virtual address.
    pub fn write(
    80004496:	dc010113          	addi	sp,sp,-576
    8000449a:	22113c23          	sd	ra,568(sp)
    8000449e:	fb2e                	sd	a1,432(sp)
    800044a0:	ff32                	sd	a2,440(sp)
    800044a2:	e3b6                	sd	a3,448(sp)

00000000800044a4 <.LBB1_77>:
        &self, 
        addr: usize, 
        len: usize
    ) -> Result<usize, &'static str> {
        let ret; 
    800044a4:	00020717          	auipc	a4,0x20
    800044a8:	c0470713          	addi	a4,a4,-1020 # 800240a8 <.L__unnamed_12>

00000000800044ac <.LBB1_78>:
    800044ac:	00020797          	auipc	a5,0x20
    800044b0:	c0c78793          	addi	a5,a5,-1012 # 800240b8 <.L__unnamed_14>
    800044b4:	0e010813          	addi	a6,sp,224
    800044b8:	4885                	li	a7,1
    800044ba:	4281                	li	t0,0
    800044bc:	edaa                	sd	a0,216(sp)
    800044be:	8542                	mv	a0,a6
    800044c0:	e9ae                	sd	a1,208(sp)
    800044c2:	85ba                	mv	a1,a4
    800044c4:	e5b2                	sd	a2,200(sp)
    800044c6:	8646                	mv	a2,a7
    800044c8:	e1b6                	sd	a3,192(sp)
    800044ca:	86be                	mv	a3,a5
    800044cc:	8716                	mv	a4,t0
    800044ce:	00001097          	auipc	ra,0x1
    800044d2:	256080e7          	jalr	598(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800044d6:	a009                	j	800044d8 <.LBB1_78+0x2c>
    800044d8:	1188                	addi	a0,sp,224
    800044da:	0000d097          	auipc	ra,0xd
    800044de:	816080e7          	jalr	-2026(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    800044e2:	a009                	j	800044e4 <.LBB1_78+0x38>
        if !self.writeable() {
            panic!("file can't be written")
    800044e4:	654e                	ld	a0,208(sp)
    800044e6:	00000097          	auipc	ra,0x0
    800044ea:	476080e7          	jalr	1142(ra) # 8000495c <_ZN6kernel2fs4file5VFile9writeable17hdfa76b14016c2f05E>
    800044ee:	fd2a                	sd	a0,184(sp)
    800044f0:	a009                	j	800044f2 <.LBB1_78+0x46>
    800044f2:	756a                	ld	a0,184(sp)
    800044f4:	e105                	bnez	a0,80004514 <.LBB1_80+0x14>
    800044f6:	a009                	j	800044f8 <.LBB1_79>

00000000800044f8 <.LBB1_79>:
        }
    800044f8:	00020517          	auipc	a0,0x20
    800044fc:	bc050513          	addi	a0,a0,-1088 # 800240b8 <.L__unnamed_14>

0000000080004500 <.LBB1_80>:
    80004500:	00020617          	auipc	a2,0x20
    80004504:	bd060613          	addi	a2,a2,-1072 # 800240d0 <.L__unnamed_15>
    80004508:	45d5                	li	a1,21
    8000450a:	0001c097          	auipc	ra,0x1c
    8000450e:	7c0080e7          	jalr	1984(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80004512:	0000                	unimp
        
        match self.ftype {
            FileType::Pipe => {
                let pipe = unsafe{ &*self.pipe.unwrap() };
    80004514:	654e                	ld	a0,208(sp)
    80004516:	03455583          	lhu	a1,52(a0)
    8000451a:	4605                	li	a2,1
    8000451c:	f92e                	sd	a1,176(sp)
    8000451e:	02c58b63          	beq	a1,a2,80004554 <.LBB1_82+0x14>
    80004522:	a009                	j	80004524 <.LBB1_80+0x24>
    80004524:	4509                	li	a0,2
    80004526:	75ca                	ld	a1,176(sp)
    80004528:	1ea58d63          	beq	a1,a0,80004722 <.LBB1_87+0x6e>
    8000452c:	a009                	j	8000452e <.LBB1_80+0x2e>
    8000452e:	450d                	li	a0,3
    80004530:	75ca                	ld	a1,176(sp)
    80004532:	0aa58863          	beq	a1,a0,800045e2 <.LBB1_83+0x86>
    80004536:	a009                	j	80004538 <.LBB1_81>

0000000080004538 <.LBB1_81>:
                Ok(ret)
            },

            _ => {
                panic!("Invalid File Type!")
            }
    80004538:	00020517          	auipc	a0,0x20
    8000453c:	bb050513          	addi	a0,a0,-1104 # 800240e8 <.L__unnamed_16>

0000000080004540 <.LBB1_82>:
    80004540:	00020617          	auipc	a2,0x20
    80004544:	bc060613          	addi	a2,a2,-1088 # 80024100 <.L__unnamed_17>
    80004548:	45c9                	li	a1,18
    8000454a:	0001c097          	auipc	ra,0x1c
    8000454e:	780080e7          	jalr	1920(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80004552:	0000                	unimp
                ret = pipe.write(addr, len)?;
    80004554:	654e                	ld	a0,208(sp)
    80004556:	6908                	ld	a0,16(a0)
    80004558:	65ce                	ld	a1,208(sp)
    8000455a:	6d8c                	ld	a1,24(a1)

000000008000455c <.LBB1_83>:
    8000455c:	00020617          	auipc	a2,0x20
    80004560:	cbc60613          	addi	a2,a2,-836 # 80024218 <.L__unnamed_18>
    80004564:	00014097          	auipc	ra,0x14
    80004568:	52c080e7          	jalr	1324(ra) # 80018a90 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0825b24fc19d61e6E>
    8000456c:	f52a                	sd	a0,168(sp)
    8000456e:	a009                	j	80004570 <.LBB1_83+0x14>
    80004570:	752a                	ld	a0,168(sp)
    80004572:	20a13c23          	sd	a0,536(sp)
    80004576:	1a08                	addi	a0,sp,304
                Ok(ret)
    80004578:	75aa                	ld	a1,168(sp)
    8000457a:	662e                	ld	a2,200(sp)
    8000457c:	668e                	ld	a3,192(sp)
    8000457e:	00008097          	auipc	ra,0x8
    80004582:	ff8080e7          	jalr	-8(ra) # 8000c576 <_ZN6kernel2fs4pipe4Pipe5write17h73901f6d84c32618E>
    80004586:	a009                	j	80004588 <.LBB1_83+0x2c>
    80004588:	0a28                	addi	a0,sp,280
    8000458a:	1a0c                	addi	a1,sp,304
    8000458c:	00009097          	auipc	ra,0x9
    80004590:	974080e7          	jalr	-1676(ra) # 8000cf00 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h98bd22b69e1dae52E>
    80004594:	a009                	j	80004596 <.LBB1_83+0x3a>
    80004596:	6572                	ld	a0,280(sp)
    80004598:	4581                	li	a1,0
    8000459a:	00b50463          	beq	a0,a1,800045a2 <.LBB1_83+0x46>
    8000459e:	a009                	j	800045a0 <.LBB1_83+0x44>
    800045a0:	a819                	j	800045b6 <.LBB1_83+0x5a>
    800045a2:	7512                	ld	a0,288(sp)
    800045a4:	22a13823          	sd	a0,560(sp)
    800045a8:	ea2a                	sd	a0,272(sp)
            },
    800045aa:	65ee                	ld	a1,216(sp)
    800045ac:	e588                	sd	a0,8(a1)
    800045ae:	4501                	li	a0,0
    800045b0:	e188                	sd	a0,0(a1)
            FileType::Pipe => {
    800045b2:	acc5                	j	800048a2 <.LBB1_90+0x50>
                Ok(ret)
    800045b4:	0000                	unimp
    800045b6:	7512                	ld	a0,288(sp)
    800045b8:	75b2                	ld	a1,296(sp)
    800045ba:	22a13023          	sd	a0,544(sp)
    800045be:	22b13423          	sd	a1,552(sp)
    800045c2:	00015097          	auipc	ra,0x15
    800045c6:	c22080e7          	jalr	-990(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    800045ca:	f12a                	sd	a0,160(sp)
    800045cc:	ed2e                	sd	a1,152(sp)
    800045ce:	a009                	j	800045d0 <.LBB1_83+0x74>
    800045d0:	656e                	ld	a0,216(sp)
    800045d2:	758a                	ld	a1,160(sp)
    800045d4:	666a                	ld	a2,152(sp)
    800045d6:	00009097          	auipc	ra,0x9
    800045da:	8a2080e7          	jalr	-1886(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    800045de:	a009                	j	800045e0 <.LBB1_83+0x84>
    800045e0:	a4d9                	j	800048a6 <.LBB1_90+0x54>
                self.major as usize >= NDEV || 
    800045e2:	654e                	ld	a0,208(sp)
    800045e4:	03651583          	lh	a1,54(a0)
    800045e8:	4601                	li	a2,0
    800045ea:	02c5c863          	blt	a1,a2,8000461a <.LBB1_83+0xbe>
    800045ee:	a835                	j	8000462a <.LBB1_83+0xce>
    800045f0:	4505                	li	a0,1
    800045f2:	14a10723          	sb	a0,334(sp)
    800045f6:	a829                	j	80004610 <.LBB1_83+0xb4>
    800045f8:	4501                	li	a0,0
    800045fa:	14a10723          	sb	a0,334(sp)
    800045fe:	a809                	j	80004610 <.LBB1_83+0xb4>
                    return Err("Fail to write to device")
    80004600:	654e                	ld	a0,208(sp)
    80004602:	03651583          	lh	a1,54(a0)
    80004606:	4629                	li	a2,10
    80004608:	e92e                	sd	a1,144(sp)
    8000460a:	02c5ec63          	bltu	a1,a2,80004642 <.LBB1_83+0xe6>
    8000460e:	a455                	j	800048b2 <.LBB1_91>
                self.major as usize >= NDEV || 
    80004610:	14e14503          	lbu	a0,334(sp)
    80004614:	8905                	andi	a0,a0,1
    80004616:	e139                	bnez	a0,8000465c <.LBB1_85>
    80004618:	a8a9                	j	80004672 <.LBB1_85+0x16>
    8000461a:	4505                	li	a0,1
    8000461c:	14a107a3          	sb	a0,335(sp)
    80004620:	a821                	j	80004638 <.LBB1_83+0xdc>
    80004622:	4501                	li	a0,0
    80004624:	14a107a3          	sb	a0,335(sp)
    80004628:	a801                	j	80004638 <.LBB1_83+0xdc>
                unsafe{ DEVICE_LIST.table[self.major as usize].write as usize == 0 } {
    8000462a:	654e                	ld	a0,208(sp)
    8000462c:	03651583          	lh	a1,54(a0)
    80004630:	4625                	li	a2,9
                self.major as usize >= NDEV || 
    80004632:	feb664e3          	bltu	a2,a1,8000461a <.LBB1_83+0xbe>
    80004636:	b7f5                	j	80004622 <.LBB1_83+0xc6>
    80004638:	14f14503          	lbu	a0,335(sp)
    8000463c:	8905                	andi	a0,a0,1
    8000463e:	f94d                	bnez	a0,800045f0 <.LBB1_83+0x94>
    80004640:	b7c1                	j	80004600 <.LBB1_83+0xa4>
                    return Err("Fail to write to device")
    80004642:	654a                	ld	a0,144(sp)
    80004644:	00451593          	slli	a1,a0,0x4

0000000080004648 <.LBB1_84>:
    80004648:	00069617          	auipc	a2,0x69
    8000464c:	9b860613          	addi	a2,a2,-1608 # 8006d000 <_ZN6kernel2fs7devices11DEVICE_LIST17h17dd10e781df8d62E>
    80004650:	95b2                	add	a1,a1,a2
    80004652:	658c                	ld	a1,8(a1)
    80004654:	4601                	li	a2,0
                self.major as usize >= NDEV || 
    80004656:	f8c58de3          	beq	a1,a2,800045f0 <.LBB1_83+0x94>
    8000465a:	bf79                	j	800045f8 <.LBB1_83+0x9c>

000000008000465c <.LBB1_85>:
                }
    8000465c:	00020517          	auipc	a0,0x20
    80004660:	ad450513          	addi	a0,a0,-1324 # 80024130 <.L__unnamed_19>
    80004664:	65ee                	ld	a1,216(sp)
    80004666:	e588                	sd	a0,8(a1)
    80004668:	455d                	li	a0,23
    8000466a:	e988                	sd	a0,16(a1)
    8000466c:	4505                	li	a0,1
    8000466e:	e188                	sd	a0,0(a1)
    80004670:	ac1d                	j	800048a6 <.LBB1_90+0x54>
                };
    80004672:	654e                	ld	a0,208(sp)
    80004674:	03651583          	lh	a1,54(a0)
    80004678:	4625                	li	a2,9
    8000467a:	e52e                	sd	a1,136(sp)
    8000467c:	24b66663          	bltu	a2,a1,800048c8 <.LBB1_92>
    80004680:	a009                	j	80004682 <.LBB1_85+0x26>
    80004682:	652a                	ld	a0,136(sp)
    80004684:	00451593          	slli	a1,a0,0x4

0000000080004688 <.LBB1_86>:
    80004688:	00069617          	auipc	a2,0x69
    8000468c:	97860613          	addi	a2,a2,-1672 # 8006d000 <_ZN6kernel2fs7devices11DEVICE_LIST17h17dd10e781df8d62E>
    80004690:	00c58533          	add	a0,a1,a2
    80004694:	00001097          	auipc	ra,0x1
    80004698:	02a080e7          	jalr	42(ra) # 800056be <_ZN6kernel2fs7devices6Device5write17hc5cbbc354637b5e6E>
    8000469c:	85aa                	mv	a1,a0
    8000469e:	ebaa                	sd	a0,464(sp)
    800046a0:	e12e                	sd	a1,128(sp)
    800046a2:	a009                	j	800046a4 <.LBB1_86+0x1c>
    800046a4:	4505                	li	a0,1
                Ok(ret)
    800046a6:	65ae                	ld	a1,200(sp)
    800046a8:	660e                	ld	a2,192(sp)
    800046aa:	668a                	ld	a3,128(sp)
    800046ac:	9682                	jalr	a3
    800046ae:	fcaa                	sd	a0,120(sp)
    800046b0:	f8ae                	sd	a1,112(sp)
    800046b2:	a009                	j	800046b4 <.LBB1_87>

00000000800046b4 <.LBB1_87>:
    800046b4:	00020697          	auipc	a3,0x20
    800046b8:	aac68693          	addi	a3,a3,-1364 # 80024160 <.L__unnamed_20>
    800046bc:	12a8                	addi	a0,sp,360
    800046be:	4751                	li	a4,20
    800046c0:	75e6                	ld	a1,120(sp)
    800046c2:	7646                	ld	a2,112(sp)
    800046c4:	00014097          	auipc	ra,0x14
    800046c8:	f0a080e7          	jalr	-246(ra) # 800185ce <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE>
    800046cc:	a009                	j	800046ce <.LBB1_87+0x1a>
    800046ce:	0a88                	addi	a0,sp,336
    800046d0:	12ac                	addi	a1,sp,360
    800046d2:	00009097          	auipc	ra,0x9
    800046d6:	82e080e7          	jalr	-2002(ra) # 8000cf00 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h98bd22b69e1dae52E>
    800046da:	a009                	j	800046dc <.LBB1_87+0x28>
    800046dc:	6556                	ld	a0,336(sp)
    800046de:	4581                	li	a1,0
    800046e0:	00b50463          	beq	a0,a1,800046e8 <.LBB1_87+0x34>
    800046e4:	a009                	j	800046e6 <.LBB1_87+0x32>
    800046e6:	a811                	j	800046fa <.LBB1_87+0x46>
    800046e8:	6576                	ld	a0,344(sp)
    800046ea:	f7aa                	sd	a0,488(sp)
    800046ec:	ea2a                	sd	a0,272(sp)
            },
    800046ee:	65ee                	ld	a1,216(sp)
    800046f0:	e588                	sd	a0,8(a1)
    800046f2:	4501                	li	a0,0
    800046f4:	e188                	sd	a0,0(a1)
            FileType::Pipe => {
    800046f6:	a275                	j	800048a2 <.LBB1_90+0x50>
                Ok(ret)
    800046f8:	0000                	unimp
    800046fa:	6576                	ld	a0,344(sp)
    800046fc:	7596                	ld	a1,352(sp)
    800046fe:	efaa                	sd	a0,472(sp)
    80004700:	f3ae                	sd	a1,480(sp)
    80004702:	00015097          	auipc	ra,0x15
    80004706:	ae2080e7          	jalr	-1310(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8000470a:	f4aa                	sd	a0,104(sp)
    8000470c:	f0ae                	sd	a1,96(sp)
    8000470e:	a009                	j	80004710 <.LBB1_87+0x5c>
    80004710:	656e                	ld	a0,216(sp)
    80004712:	75a6                	ld	a1,104(sp)
    80004714:	7606                	ld	a2,96(sp)
    80004716:	00008097          	auipc	ra,0x8
    8000471a:	762080e7          	jalr	1890(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    8000471e:	a009                	j	80004720 <.LBB1_87+0x6c>
    80004720:	a259                	j	800048a6 <.LBB1_90+0x54>
    80004722:	6505                	lui	a0,0x1
    80004724:	c005051b          	addiw	a0,a0,-1024
                let mut count  = 0;
    80004728:	fbaa                	sd	a0,496(sp)
    8000472a:	4501                	li	a0,0
                while count < len {
    8000472c:	e32a                	sd	a0,384(sp)
                    let mut write_bytes = len - count;
    8000472e:	a009                	j	80004730 <.LBB1_87+0x7c>
    80004730:	651a                	ld	a0,384(sp)
    80004732:	658e                	ld	a1,192(sp)
    80004734:	00b56a63          	bltu	a0,a1,80004748 <.LBB1_87+0x94>
    80004738:	a009                	j	8000473a <.LBB1_87+0x86>
                Ok(ret)
    8000473a:	651a                	ld	a0,384(sp)
    8000473c:	ea2a                	sd	a0,272(sp)
            },
    8000473e:	65ee                	ld	a1,216(sp)
    80004740:	e588                	sd	a0,8(a1)
    80004742:	4501                	li	a0,0
    80004744:	e188                	sd	a0,0(a1)
            FileType::Pipe => {
    80004746:	aab1                	j	800048a2 <.LBB1_90+0x50>
                    if write_bytes > max { write_bytes = max; }
    80004748:	651a                	ld	a0,384(sp)
    8000474a:	658e                	ld	a1,192(sp)
    8000474c:	40a58533          	sub	a0,a1,a0
    80004750:	ecaa                	sd	a0,88(sp)
    80004752:	18a5e663          	bltu	a1,a0,800048de <.LBB1_93>
    80004756:	a009                	j	80004758 <.LBB1_87+0xa4>
    80004758:	6566                	ld	a0,88(sp)
    8000475a:	e72a                	sd	a0,392(sp)
    8000475c:	6585                	lui	a1,0x1
    8000475e:	c015859b          	addiw	a1,a1,-1023

    80004762:	00b56863          	bltu	a0,a1,80004772 <.LBB1_87+0xbe>
    80004766:	a009                	j	80004768 <.LBB1_87+0xb4>
    80004768:	6505                	lui	a0,0x1
    8000476a:	c005051b          	addiw	a0,a0,-1024
    8000476e:	e72a                	sd	a0,392(sp)
    80004770:	a011                	j	80004774 <.LBB1_88>
    80004772:	a009                	j	80004774 <.LBB1_88>

0000000080004774 <.LBB1_88>:
                    let inode = unsafe{ &mut *self.inode.unwrap() };
    80004774:	00056517          	auipc	a0,0x56
    80004778:	8ec50513          	addi	a0,a0,-1812 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000477c:	00013097          	auipc	ra,0x13
    80004780:	962080e7          	jalr	-1694(ra) # 800170de <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E>
    80004784:	a009                	j	80004786 <.LBB1_88+0x12>
                    let mut inode_guard = inode.lock();
    80004786:	654e                	ld	a0,208(sp)
    80004788:	7108                	ld	a0,32(a0)
    8000478a:	65ce                	ld	a1,208(sp)
    8000478c:	758c                	ld	a1,40(a1)

000000008000478e <.LBB1_89>:
    8000478e:	00020617          	auipc	a2,0x20
    80004792:	a2a60613          	addi	a2,a2,-1494 # 800241b8 <.L__unnamed_21>
    80004796:	00014097          	auipc	ra,0x14
    8000479a:	696080e7          	jalr	1686(ra) # 80018e2c <_ZN4core6option15Option$LT$T$GT$6unwrap17hcee992c451ddfa70E>
    8000479e:	e8aa                	sd	a0,80(sp)
    800047a0:	a009                	j	800047a2 <.LBB1_89+0x14>
    800047a2:	6546                	ld	a0,80(sp)
    800047a4:	ffaa                	sd	a0,504(sp)

    800047a6:	00018097          	auipc	ra,0x18
    800047aa:	a96080e7          	jalr	-1386(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    800047ae:	eb2a                	sd	a0,400(sp)
    800047b0:	ef2e                	sd	a1,408(sp)
    800047b2:	a009                	j	800047b4 <.LBB1_89+0x26>
    800047b4:	0b08                	addi	a0,sp,400

    800047b6:	00003097          	auipc	ra,0x3
    800047ba:	cb4080e7          	jalr	-844(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    800047be:	e4aa                	sd	a0,72(sp)
    800047c0:	a009                	j	800047c2 <.LBB1_89+0x34>
    800047c2:	651a                	ld	a0,384(sp)
    800047c4:	65ae                	ld	a1,200(sp)
    800047c6:	952e                	add	a0,a0,a1
    800047c8:	e0aa                	sd	a0,64(sp)
    800047ca:	12b56963          	bltu	a0,a1,800048fc <.LBB1_95>
    800047ce:	a009                	j	800047d0 <.LBB1_89+0x42>
    800047d0:	673a                	ld	a4,392(sp)
    800047d2:	654e                	ld	a0,208(sp)
    800047d4:	5914                	lw	a3,48(a0)
    800047d6:	4585                	li	a1,1
    800047d8:	6526                	ld	a0,72(sp)
    800047da:	6606                	ld	a2,64(sp)
    800047dc:	00017097          	auipc	ra,0x17
    800047e0:	22e080e7          	jalr	558(ra) # 8001ba0a <_ZN6kernel2fs5inode9InodeData5write17h032930266959c2cbE>
    800047e4:	fc2a                	sd	a0,56(sp)
    800047e6:	f82e                	sd	a1,48(sp)
    800047e8:	a009                	j	800047ea <.LBB1_89+0x5c>
    800047ea:	7562                	ld	a0,56(sp)
    800047ec:	75c2                	ld	a1,48(sp)
    800047ee:	00008097          	auipc	ra,0x8
    800047f2:	6fa080e7          	jalr	1786(ra) # 8000cee8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h489706ecba0771b6E>
    800047f6:	f32a                	sd	a0,416(sp)
    800047f8:	f72e                	sd	a1,424(sp)
    800047fa:	a009                	j	800047fc <.LBB1_89+0x6e>
    800047fc:	751a                	ld	a0,416(sp)
    800047fe:	00a035b3          	snez	a1,a0
    80004802:	4601                	li	a2,0
    80004804:	00c50463          	beq	a0,a2,8000480c <.LBB1_89+0x7e>
    80004808:	a009                	j	8000480a <.LBB1_89+0x7c>
    8000480a:	a809                	j	8000481c <.LBB1_89+0x8e>
                    // end log
    8000480c:	655a                	ld	a0,400(sp)
    8000480e:	65fa                	ld	a1,408(sp)
    80004810:	00009097          	auipc	ra,0x9
    80004814:	1b0080e7          	jalr	432(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    80004818:	a82d                	j	80004852 <.LBB1_90>

    8000481a:	0000                	unimp
    8000481c:	751a                	ld	a0,416(sp)
    8000481e:	75ba                	ld	a1,424(sp)
    80004820:	20a13023          	sd	a0,512(sp)
    80004824:	20b13423          	sd	a1,520(sp)
    80004828:	00015097          	auipc	ra,0x15
    8000482c:	9bc080e7          	jalr	-1604(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    80004830:	f42a                	sd	a0,40(sp)
    80004832:	f02e                	sd	a1,32(sp)
    80004834:	a009                	j	80004836 <.LBB1_89+0xa8>
    80004836:	656e                	ld	a0,216(sp)
    80004838:	75a2                	ld	a1,40(sp)
    8000483a:	7602                	ld	a2,32(sp)
    8000483c:	00008097          	auipc	ra,0x8
    80004840:	63c080e7          	jalr	1596(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    80004844:	a009                	j	80004846 <.LBB1_89+0xb8>
    80004846:	0b08                	addi	a0,sp,400
                ret = count;
    80004848:	00002097          	auipc	ra,0x2
    8000484c:	20e080e7          	jalr	526(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    80004850:	a891                	j	800048a4 <.LBB1_90+0x52>

0000000080004852 <.LBB1_90>:

    80004852:	00056517          	auipc	a0,0x56
    80004856:	80e50513          	addi	a0,a0,-2034 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000485a:	00013097          	auipc	ra,0x13
    8000485e:	e74080e7          	jalr	-396(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    80004862:	a009                	j	80004864 <.LBB1_90+0x12>
                    *offset += write_bytes as u32;
    80004864:	654e                	ld	a0,208(sp)
    80004866:	03050593          	addi	a1,a0,48
    8000486a:	20b13823          	sd	a1,528(sp)
                    count += write_bytes;
    8000486e:	18816603          	lwu	a2,392(sp)
    80004872:	03056683          	lwu	a3,48(a0)
    80004876:	9636                	add	a2,a2,a3
    80004878:	02061693          	slli	a3,a2,0x20
    8000487c:	9281                	srli	a3,a3,0x20
    8000487e:	ec2e                	sd	a1,24(sp)
    80004880:	e832                	sd	a2,16(sp)
    80004882:	08c69b63          	bne	a3,a2,80004918 <.LBB1_97>
    80004886:	a009                	j	80004888 <.LBB1_90+0x36>
    80004888:	6542                	ld	a0,16(sp)
    8000488a:	65e2                	ld	a1,24(sp)
    8000488c:	c188                	sw	a0,0(a1)
                    
    8000488e:	663a                	ld	a2,392(sp)
    80004890:	669a                	ld	a3,384(sp)
    80004892:	9636                	add	a2,a2,a3
    80004894:	e432                	sd	a2,8(sp)
    80004896:	08d66f63          	bltu	a2,a3,80004934 <.LBB1_99>
    8000489a:	a009                	j	8000489c <.LBB1_90+0x4a>
    8000489c:	6522                	ld	a0,8(sp)
    8000489e:	e32a                	sd	a0,384(sp)
                    let mut write_bytes = len - count;
    800048a0:	bd41                	j	80004730 <.LBB1_87+0x7c>
        }

    }

    800048a2:	a019                	j	800048a8 <.LBB1_90+0x56>
    800048a4:	a009                	j	800048a6 <.LBB1_90+0x54>
    800048a6:	a009                	j	800048a8 <.LBB1_90+0x56>
    800048a8:	23813083          	ld	ra,568(sp)
    800048ac:	24010113          	addi	sp,sp,576
    800048b0:	8082                	ret

00000000800048b2 <.LBB1_91>:
                    return Err("Fail to write to device")
    800048b2:	00020617          	auipc	a2,0x20
    800048b6:	86660613          	addi	a2,a2,-1946 # 80024118 <.L__unnamed_22>
    800048ba:	45a9                	li	a1,10
    800048bc:	654a                	ld	a0,144(sp)
    800048be:	0001c097          	auipc	ra,0x1c
    800048c2:	438080e7          	jalr	1080(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800048c8 <.LBB1_92>:
                };
    800048c8:	00020617          	auipc	a2,0x20
    800048cc:	88060613          	addi	a2,a2,-1920 # 80024148 <.L__unnamed_23>
    800048d0:	45a9                	li	a1,10
    800048d2:	652a                	ld	a0,136(sp)
    800048d4:	0001c097          	auipc	ra,0x1c
    800048d8:	422080e7          	jalr	1058(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800048de <.LBB1_93>:
                    if write_bytes > max { write_bytes = max; }
    800048de:	00020517          	auipc	a0,0x20
    800048e2:	8b250513          	addi	a0,a0,-1870 # 80024190 <str.1>

00000000800048e6 <.LBB1_94>:
    800048e6:	00020617          	auipc	a2,0x20
    800048ea:	89260613          	addi	a2,a2,-1902 # 80024178 <.L__unnamed_24>
    800048ee:	02100593          	li	a1,33
    800048f2:	0001c097          	auipc	ra,0x1c
    800048f6:	3d8080e7          	jalr	984(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800048fc <.LBB1_95>:

    800048fc:	0001f517          	auipc	a0,0x1f
    80004900:	76450513          	addi	a0,a0,1892 # 80024060 <str.0>

0000000080004904 <.LBB1_96>:
    80004904:	00020617          	auipc	a2,0x20
    80004908:	8cc60613          	addi	a2,a2,-1844 # 800241d0 <.L__unnamed_25>
    8000490c:	45f1                	li	a1,28
    8000490e:	0001c097          	auipc	ra,0x1c
    80004912:	3bc080e7          	jalr	956(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080004918 <.LBB1_97>:
                    count += write_bytes;
    80004918:	0001f517          	auipc	a0,0x1f
    8000491c:	74850513          	addi	a0,a0,1864 # 80024060 <str.0>

0000000080004920 <.LBB1_98>:
    80004920:	00020617          	auipc	a2,0x20
    80004924:	8c860613          	addi	a2,a2,-1848 # 800241e8 <.L__unnamed_26>
    80004928:	45f1                	li	a1,28
    8000492a:	0001c097          	auipc	ra,0x1c
    8000492e:	3a0080e7          	jalr	928(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080004934 <.LBB1_99>:
                    
    80004934:	0001f517          	auipc	a0,0x1f
    80004938:	72c50513          	addi	a0,a0,1836 # 80024060 <str.0>

000000008000493c <.LBB1_100>:
    8000493c:	00020617          	auipc	a2,0x20
    80004940:	8c460613          	addi	a2,a2,-1852 # 80024200 <.L__unnamed_27>
    80004944:	45f1                	li	a1,28
    80004946:	0001c097          	auipc	ra,0x1c
    8000494a:	384080e7          	jalr	900(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs4file5VFile8readable17h4eb842d25f6684ebE:

0000000080004950 <_ZN6kernel2fs4file5VFile8readable17h4eb842d25f6684ebE>:
    fn readable(&self) -> bool {
        self.readable
    80004950:	1141                	addi	sp,sp,-16
    80004952:	e42a                	sd	a0,8(sp)
    }
    80004954:	03854503          	lbu	a0,56(a0)

    80004958:	0141                	addi	sp,sp,16
    8000495a:	8082                	ret

Disassembly of section .text._ZN6kernel2fs4file5VFile9writeable17hdfa76b14016c2f05E:

000000008000495c <_ZN6kernel2fs4file5VFile9writeable17hdfa76b14016c2f05E>:
    fn writeable(&self) -> bool {
        self.writeable
    8000495c:	1141                	addi	sp,sp,-16
    8000495e:	e42a                	sd	a0,8(sp)
    }
    80004960:	03954503          	lbu	a0,57(a0)

    80004964:	0141                	addi	sp,sp,16
    80004966:	8082                	ret

Disassembly of section .text._ZN6kernel2fs4file5VFile3dup17hdd368b285d10a161E:

0000000080004968 <_ZN6kernel2fs4file5VFile3dup17hdd368b285d10a161E>:
    /// Increment ref count for file f
    pub fn dup(&self) {
        let guard = unsafe{ FILE_TABLE.lock.acquire() };
    80004968:	7139                	addi	sp,sp,-64
    8000496a:	fc06                	sd	ra,56(sp)
    8000496c:	f02a                	sd	a0,32(sp)

000000008000496e <.LBB4_7>:
        if self.refs < 1 {
    8000496e:	00030597          	auipc	a1,0x30
    80004972:	baa58593          	addi	a1,a1,-1110 # 80034518 <_ZN6kernel2fs10file_table10FILE_TABLE17hc3a5ed6b98ffbfa5E>
    80004976:	ec2a                	sd	a0,24(sp)
    80004978:	852e                	mv	a0,a1
    8000497a:	ffffe097          	auipc	ra,0xffffe
    8000497e:	ae0080e7          	jalr	-1312(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    80004982:	85aa                	mv	a1,a0
    80004984:	f42a                	sd	a0,40(sp)
    80004986:	e82e                	sd	a1,16(sp)
    80004988:	a009                	j	8000498a <.LBB4_7+0x1c>
            panic!("vfile dup: no used file.")
    8000498a:	6562                	ld	a0,24(sp)
    8000498c:	650c                	ld	a1,8(a0)
    8000498e:	4601                	li	a2,0
    80004990:	02c59163          	bne	a1,a2,800049b2 <.LBB4_9+0x14>
    80004994:	a009                	j	80004996 <.LBB4_8>

0000000080004996 <.LBB4_8>:
        }
    80004996:	00020517          	auipc	a0,0x20
    8000499a:	89a50513          	addi	a0,a0,-1894 # 80024230 <.L__unnamed_28>

000000008000499e <.LBB4_9>:
    8000499e:	00020617          	auipc	a2,0x20
    800049a2:	8aa60613          	addi	a2,a2,-1878 # 80024248 <.L__unnamed_29>
    800049a6:	45e1                	li	a1,24
    800049a8:	0001c097          	auipc	ra,0x1c
    800049ac:	322080e7          	jalr	802(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800049b0:	0000                	unimp
        let refs = unsafe{ &mut *(&self.refs as *const _ as *mut usize)};
        *refs += 1;
    800049b2:	6562                	ld	a0,24(sp)
    800049b4:	00850593          	addi	a1,a0,8
    800049b8:	f82e                	sd	a1,48(sp)
        drop(guard);
    800049ba:	6510                	ld	a2,8(a0)
    800049bc:	00160693          	addi	a3,a2,1
    800049c0:	e42e                	sd	a1,8(sp)
    800049c2:	e036                	sd	a3,0(sp)
    800049c4:	00c6ef63          	bltu	a3,a2,800049e2 <.LBB4_10>
    800049c8:	a009                	j	800049ca <.LBB4_9+0x2c>
    800049ca:	6502                	ld	a0,0(sp)
    800049cc:	65a2                	ld	a1,8(sp)
    800049ce:	e188                	sd	a0,0(a1)
    }
    800049d0:	6542                	ld	a0,16(sp)
    800049d2:	00009097          	auipc	ra,0x9
    800049d6:	f1c080e7          	jalr	-228(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    800049da:	a009                	j	800049dc <.LBB4_9+0x3e>

    800049dc:	70e2                	ld	ra,56(sp)
    800049de:	6121                	addi	sp,sp,64
    800049e0:	8082                	ret

00000000800049e2 <.LBB4_10>:
        drop(guard);
    800049e2:	0001f517          	auipc	a0,0x1f
    800049e6:	67e50513          	addi	a0,a0,1662 # 80024060 <str.0>

00000000800049ea <.LBB4_11>:
    800049ea:	00020617          	auipc	a2,0x20
    800049ee:	87660613          	addi	a2,a2,-1930 # 80024260 <.L__unnamed_30>
    800049f2:	45f1                	li	a1,28
    800049f4:	0001c097          	auipc	ra,0x1c
    800049f8:	2d6080e7          	jalr	726(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h52b01649b741416aE:

00000000800049fe <_ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h52b01649b741416aE>:
    ($($t:ty)+) => ($(
        #[stable(feature = "op_assign_traits", since = "1.8.0")]
        impl AddAssign for $t {
            #[inline]
            #[rustc_inherit_overflow_checks]
            fn add_assign(&mut self, other: $t) { *self += other }
    800049fe:	1101                	addi	sp,sp,-32
    80004a00:	e82a                	sd	a0,16(sp)
    80004a02:	ec2e                	sd	a1,24(sp)
    80004a04:	6110                	ld	a2,0(a0)
    80004a06:	95b2                	add	a1,a1,a2
    80004a08:	e42a                	sd	a0,8(sp)
    80004a0a:	e02e                	sd	a1,0(sp)
    80004a0c:	00c5e863          	bltu	a1,a2,80004a1c <.LBB0_3>
    80004a10:	a009                	j	80004a12 <_ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h52b01649b741416aE+0x14>
    80004a12:	6502                	ld	a0,0(sp)
    80004a14:	65a2                	ld	a1,8(sp)
    80004a16:	e188                	sd	a0,0(a1)
    80004a18:	6105                	addi	sp,sp,32
    80004a1a:	8082                	ret

0000000080004a1c <.LBB0_3>:
    80004a1c:	00020517          	auipc	a0,0x20
    80004a20:	8f450513          	addi	a0,a0,-1804 # 80024310 <str.0>

0000000080004a24 <.LBB0_4>:
    80004a24:	00020617          	auipc	a2,0x20
    80004a28:	8cc60613          	addi	a2,a2,-1844 # 800242f0 <.L__unnamed_1>
    80004a2c:	45f1                	li	a1,28
    80004a2e:	0001c097          	auipc	ra,0x1c
    80004a32:	29c080e7          	jalr	668(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h3fad231efc23c2a5E:

0000000080004a38 <_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h3fad231efc23c2a5E>:
}

#[unstable(feature = "ptr_internals", issue = "none")]
impl<T: ?Sized> From<Unique<T>> for NonNull<T> {
    #[inline]
    fn from(unique: Unique<T>) -> Self {
    80004a38:	1101                	addi	sp,sp,-32
    80004a3a:	ec06                	sd	ra,24(sp)
    80004a3c:	e82a                	sd	a0,16(sp)
        // SAFETY: A Unique pointer cannot be null, so the conditions for
        // new_unchecked() are respected.
        unsafe { NonNull::new_unchecked(unique.as_ptr()) }
    80004a3e:	ffffd097          	auipc	ra,0xffffd
    80004a42:	57c080e7          	jalr	1404(ra) # 80001fba <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9897251b4a8edbceE>
    80004a46:	e42a                	sd	a0,8(sp)
    80004a48:	a009                	j	80004a4a <_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h3fad231efc23c2a5E+0x12>
    80004a4a:	6522                	ld	a0,8(sp)
    80004a4c:	00000097          	auipc	ra,0x0
    80004a50:	064080e7          	jalr	100(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    80004a54:	e02a                	sd	a0,0(sp)
    80004a56:	a009                	j	80004a58 <_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h3fad231efc23c2a5E+0x20>
    }
    80004a58:	6502                	ld	a0,0(sp)
    80004a5a:	60e2                	ld	ra,24(sp)
    80004a5c:	6105                	addi	sp,sp,32
    80004a5e:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h27916979f0ab992dE:

0000000080004a60 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h27916979f0ab992dE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004a60:	1141                	addi	sp,sp,-16
    80004a62:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004a64:	e02a                	sd	a0,0(sp)
    }
    80004a66:	0141                	addi	sp,sp,16
    80004a68:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3342b041f8f85d36E:

0000000080004a6a <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3342b041f8f85d36E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004a6a:	1141                	addi	sp,sp,-16
    80004a6c:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004a6e:	e02a                	sd	a0,0(sp)
    }
    80004a70:	0141                	addi	sp,sp,16
    80004a72:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h450bc69c96768377E:

0000000080004a74 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h450bc69c96768377E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004a74:	1141                	addi	sp,sp,-16
    80004a76:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004a78:	e02a                	sd	a0,0(sp)
    }
    80004a7a:	0141                	addi	sp,sp,16
    80004a7c:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4786fea9648ffd12E:

0000000080004a7e <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4786fea9648ffd12E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004a7e:	1141                	addi	sp,sp,-16
    80004a80:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004a82:	e02a                	sd	a0,0(sp)
    }
    80004a84:	0141                	addi	sp,sp,16
    80004a86:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4c23bebe906be8ebE:

0000000080004a88 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4c23bebe906be8ebE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004a88:	1141                	addi	sp,sp,-16
    80004a8a:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004a8c:	e02a                	sd	a0,0(sp)
    }
    80004a8e:	0141                	addi	sp,sp,16
    80004a90:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6348b076425842faE:

0000000080004a92 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6348b076425842faE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004a92:	1141                	addi	sp,sp,-16
    80004a94:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004a96:	e02a                	sd	a0,0(sp)
    }
    80004a98:	0141                	addi	sp,sp,16
    80004a9a:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h77edbd0aad47c5b9E:

0000000080004a9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h77edbd0aad47c5b9E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004a9c:	1141                	addi	sp,sp,-16
    80004a9e:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004aa0:	e02a                	sd	a0,0(sp)
    }
    80004aa2:	0141                	addi	sp,sp,16
    80004aa4:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8ada68b9c72ad3dcE:

0000000080004aa6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8ada68b9c72ad3dcE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004aa6:	1141                	addi	sp,sp,-16
    80004aa8:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004aaa:	e02a                	sd	a0,0(sp)
    }
    80004aac:	0141                	addi	sp,sp,16
    80004aae:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE:

0000000080004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004ab0:	1141                	addi	sp,sp,-16
    80004ab2:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004ab4:	e02a                	sd	a0,0(sp)
    }
    80004ab6:	0141                	addi	sp,sp,16
    80004ab8:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hce10262bf4f46376E:

0000000080004aba <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hce10262bf4f46376E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004aba:	1141                	addi	sp,sp,-16
    80004abc:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004abe:	e02a                	sd	a0,0(sp)
    }
    80004ac0:	0141                	addi	sp,sp,16
    80004ac2:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd11efa08513ccda6E:

0000000080004ac4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd11efa08513ccda6E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004ac4:	1101                	addi	sp,sp,-32
    80004ac6:	e82a                	sd	a0,16(sp)
    80004ac8:	ec2e                	sd	a1,24(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004aca:	e02a                	sd	a0,0(sp)
    80004acc:	e42e                	sd	a1,8(sp)
    }
    80004ace:	6105                	addi	sp,sp,32
    80004ad0:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf96dcf2eaef810b0E:

0000000080004ad2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf96dcf2eaef810b0E>:
    pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {
    80004ad2:	1141                	addi	sp,sp,-16
    80004ad4:	e42a                	sd	a0,8(sp)
        unsafe { NonNull { pointer: ptr as _ } }
    80004ad6:	e02a                	sd	a0,0(sp)
    }
    80004ad8:	0141                	addi	sp,sp,16
    80004ada:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E:

0000000080004adc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E>:
    pub fn new(ptr: *mut T) -> Option<Self> {
    80004adc:	7179                	addi	sp,sp,-48
    80004ade:	f406                	sd	ra,40(sp)
    80004ae0:	f02a                	sd	a0,32(sp)
        if !ptr.is_null() {
    80004ae2:	e82a                	sd	a0,16(sp)
    80004ae4:	00001097          	auipc	ra,0x1
    80004ae8:	1da080e7          	jalr	474(ra) # 80005cbe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE>
    80004aec:	e42a                	sd	a0,8(sp)
    80004aee:	a009                	j	80004af0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E+0x14>
    80004af0:	6522                	ld	a0,8(sp)
    80004af2:	e909                	bnez	a0,80004b04 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E+0x28>
    80004af4:	a009                	j	80004af6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E+0x1a>
            Some(unsafe { Self::new_unchecked(ptr) })
    80004af6:	6542                	ld	a0,16(sp)
    80004af8:	00000097          	auipc	ra,0x0
    80004afc:	f7c080e7          	jalr	-132(ra) # 80004a74 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h450bc69c96768377E>
    80004b00:	e02a                	sd	a0,0(sp)
    80004b02:	a021                	j	80004b0a <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E+0x2e>
    80004b04:	4501                	li	a0,0
            None
    80004b06:	ec2a                	sd	a0,24(sp)
        if !ptr.is_null() {
    80004b08:	a021                	j	80004b10 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E+0x34>
            Some(unsafe { Self::new_unchecked(ptr) })
    80004b0a:	6502                	ld	a0,0(sp)
    80004b0c:	ec2a                	sd	a0,24(sp)
        if !ptr.is_null() {
    80004b0e:	a009                	j	80004b10 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E+0x34>
    }
    80004b10:	6562                	ld	a0,24(sp)
    80004b12:	70a2                	ld	ra,40(sp)
    80004b14:	6145                	addi	sp,sp,48
    80004b16:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE:

0000000080004b18 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE>:
    pub fn new(ptr: *mut T) -> Option<Self> {
    80004b18:	7179                	addi	sp,sp,-48
    80004b1a:	f406                	sd	ra,40(sp)
    80004b1c:	f02a                	sd	a0,32(sp)
        if !ptr.is_null() {
    80004b1e:	e82a                	sd	a0,16(sp)
    80004b20:	0001c097          	auipc	ra,0x1c
    80004b24:	c4c080e7          	jalr	-948(ra) # 8002076c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE>
    80004b28:	e42a                	sd	a0,8(sp)
    80004b2a:	a009                	j	80004b2c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE+0x14>
    80004b2c:	6522                	ld	a0,8(sp)
    80004b2e:	e909                	bnez	a0,80004b40 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE+0x28>
    80004b30:	a009                	j	80004b32 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE+0x1a>
            Some(unsafe { Self::new_unchecked(ptr) })
    80004b32:	6542                	ld	a0,16(sp)
    80004b34:	00000097          	auipc	ra,0x0
    80004b38:	f7c080e7          	jalr	-132(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    80004b3c:	e02a                	sd	a0,0(sp)
    80004b3e:	a021                	j	80004b46 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE+0x2e>
    80004b40:	4501                	li	a0,0
            None
    80004b42:	ec2a                	sd	a0,24(sp)
        if !ptr.is_null() {
    80004b44:	a021                	j	80004b4c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE+0x34>
            Some(unsafe { Self::new_unchecked(ptr) })
    80004b46:	6502                	ld	a0,0(sp)
    80004b48:	ec2a                	sd	a0,24(sp)
        if !ptr.is_null() {
    80004b4a:	a009                	j	80004b4c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE+0x34>
    }
    80004b4c:	6562                	ld	a0,24(sp)
    80004b4e:	70a2                	ld	ra,40(sp)
    80004b50:	6145                	addi	sp,sp,48
    80004b52:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2681515e30a64b01E:

0000000080004b54 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2681515e30a64b01E>:
    pub const fn cast<U>(self) -> NonNull<U> {
    80004b54:	1101                	addi	sp,sp,-32
    80004b56:	ec06                	sd	ra,24(sp)
    80004b58:	e82a                	sd	a0,16(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr() as *mut U) }
    80004b5a:	00000097          	auipc	ra,0x0
    80004b5e:	172080e7          	jalr	370(ra) # 80004ccc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE>
    80004b62:	e42a                	sd	a0,8(sp)
    80004b64:	a009                	j	80004b66 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2681515e30a64b01E+0x12>
    80004b66:	6522                	ld	a0,8(sp)
    80004b68:	00000097          	auipc	ra,0x0
    80004b6c:	f48080e7          	jalr	-184(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    80004b70:	e02a                	sd	a0,0(sp)
    80004b72:	a009                	j	80004b74 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2681515e30a64b01E+0x20>
    }
    80004b74:	6502                	ld	a0,0(sp)
    80004b76:	60e2                	ld	ra,24(sp)
    80004b78:	6105                	addi	sp,sp,32
    80004b7a:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h428793c312ca8478E:

0000000080004b7c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h428793c312ca8478E>:
    pub const fn cast<U>(self) -> NonNull<U> {
    80004b7c:	7179                	addi	sp,sp,-48
    80004b7e:	f406                	sd	ra,40(sp)
    80004b80:	ec2a                	sd	a0,24(sp)
    80004b82:	f02e                	sd	a1,32(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr() as *mut U) }
    80004b84:	00000097          	auipc	ra,0x0
    80004b88:	160080e7          	jalr	352(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004b8c:	e82a                	sd	a0,16(sp)
    80004b8e:	a009                	j	80004b90 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h428793c312ca8478E+0x14>
    80004b90:	6542                	ld	a0,16(sp)
    80004b92:	00000097          	auipc	ra,0x0
    80004b96:	ece080e7          	jalr	-306(ra) # 80004a60 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h27916979f0ab992dE>
    80004b9a:	e42a                	sd	a0,8(sp)
    80004b9c:	a009                	j	80004b9e <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h428793c312ca8478E+0x22>
    }
    80004b9e:	6522                	ld	a0,8(sp)
    80004ba0:	70a2                	ld	ra,40(sp)
    80004ba2:	6145                	addi	sp,sp,48
    80004ba4:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h49f58a917cc8c3cbE:

0000000080004ba6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h49f58a917cc8c3cbE>:
    pub const fn cast<U>(self) -> NonNull<U> {
    80004ba6:	7179                	addi	sp,sp,-48
    80004ba8:	f406                	sd	ra,40(sp)
    80004baa:	ec2a                	sd	a0,24(sp)
    80004bac:	f02e                	sd	a1,32(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr() as *mut U) }
    80004bae:	00000097          	auipc	ra,0x0
    80004bb2:	136080e7          	jalr	310(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004bb6:	e82a                	sd	a0,16(sp)
    80004bb8:	a009                	j	80004bba <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h49f58a917cc8c3cbE+0x14>
    80004bba:	6542                	ld	a0,16(sp)
    80004bbc:	00000097          	auipc	ra,0x0
    80004bc0:	ef4080e7          	jalr	-268(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    80004bc4:	e42a                	sd	a0,8(sp)
    80004bc6:	a009                	j	80004bc8 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h49f58a917cc8c3cbE+0x22>
    }
    80004bc8:	6522                	ld	a0,8(sp)
    80004bca:	70a2                	ld	ra,40(sp)
    80004bcc:	6145                	addi	sp,sp,48
    80004bce:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h626b2b0237b6be84E:

0000000080004bd0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h626b2b0237b6be84E>:
    pub const fn cast<U>(self) -> NonNull<U> {
    80004bd0:	7179                	addi	sp,sp,-48
    80004bd2:	f406                	sd	ra,40(sp)
    80004bd4:	ec2a                	sd	a0,24(sp)
    80004bd6:	f02e                	sd	a1,32(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr() as *mut U) }
    80004bd8:	00000097          	auipc	ra,0x0
    80004bdc:	10c080e7          	jalr	268(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004be0:	e82a                	sd	a0,16(sp)
    80004be2:	a009                	j	80004be4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h626b2b0237b6be84E+0x14>
    80004be4:	6542                	ld	a0,16(sp)
    80004be6:	00000097          	auipc	ra,0x0
    80004bea:	ed4080e7          	jalr	-300(ra) # 80004aba <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hce10262bf4f46376E>
    80004bee:	e42a                	sd	a0,8(sp)
    80004bf0:	a009                	j	80004bf2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h626b2b0237b6be84E+0x22>
    }
    80004bf2:	6522                	ld	a0,8(sp)
    80004bf4:	70a2                	ld	ra,40(sp)
    80004bf6:	6145                	addi	sp,sp,48
    80004bf8:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h95dd4caf3038a0f9E:

0000000080004bfa <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h95dd4caf3038a0f9E>:
    pub const fn cast<U>(self) -> NonNull<U> {
    80004bfa:	7179                	addi	sp,sp,-48
    80004bfc:	f406                	sd	ra,40(sp)
    80004bfe:	ec2a                	sd	a0,24(sp)
    80004c00:	f02e                	sd	a1,32(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr() as *mut U) }
    80004c02:	00000097          	auipc	ra,0x0
    80004c06:	0e2080e7          	jalr	226(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004c0a:	e82a                	sd	a0,16(sp)
    80004c0c:	a009                	j	80004c0e <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h95dd4caf3038a0f9E+0x14>
    80004c0e:	6542                	ld	a0,16(sp)
    80004c10:	00000097          	auipc	ra,0x0
    80004c14:	e82080e7          	jalr	-382(ra) # 80004a92 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6348b076425842faE>
    80004c18:	e42a                	sd	a0,8(sp)
    80004c1a:	a009                	j	80004c1c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h95dd4caf3038a0f9E+0x22>
    }
    80004c1c:	6522                	ld	a0,8(sp)
    80004c1e:	70a2                	ld	ra,40(sp)
    80004c20:	6145                	addi	sp,sp,48
    80004c22:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb064ce68ef9b2e49E:

0000000080004c24 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb064ce68ef9b2e49E>:
    pub const fn cast<U>(self) -> NonNull<U> {
    80004c24:	7179                	addi	sp,sp,-48
    80004c26:	f406                	sd	ra,40(sp)
    80004c28:	ec2a                	sd	a0,24(sp)
    80004c2a:	f02e                	sd	a1,32(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr() as *mut U) }
    80004c2c:	00000097          	auipc	ra,0x0
    80004c30:	0b8080e7          	jalr	184(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004c34:	e82a                	sd	a0,16(sp)
    80004c36:	a009                	j	80004c38 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb064ce68ef9b2e49E+0x14>
    80004c38:	6542                	ld	a0,16(sp)
    80004c3a:	00000097          	auipc	ra,0x0
    80004c3e:	e98080e7          	jalr	-360(ra) # 80004ad2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf96dcf2eaef810b0E>
    80004c42:	e42a                	sd	a0,8(sp)
    80004c44:	a009                	j	80004c46 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb064ce68ef9b2e49E+0x22>
    }
    80004c46:	6522                	ld	a0,8(sp)
    80004c48:	70a2                	ld	ra,40(sp)
    80004c4a:	6145                	addi	sp,sp,48
    80004c4c:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe7bb7c4d45f4f92E:

0000000080004c4e <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe7bb7c4d45f4f92E>:
    pub const fn cast<U>(self) -> NonNull<U> {
    80004c4e:	7179                	addi	sp,sp,-48
    80004c50:	f406                	sd	ra,40(sp)
    80004c52:	ec2a                	sd	a0,24(sp)
    80004c54:	f02e                	sd	a1,32(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr() as *mut U) }
    80004c56:	00000097          	auipc	ra,0x0
    80004c5a:	08e080e7          	jalr	142(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004c5e:	e82a                	sd	a0,16(sp)
    80004c60:	a009                	j	80004c62 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe7bb7c4d45f4f92E+0x14>
    80004c62:	6542                	ld	a0,16(sp)
    80004c64:	00000097          	auipc	ra,0x0
    80004c68:	e42080e7          	jalr	-446(ra) # 80004aa6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8ada68b9c72ad3dcE>
    80004c6c:	e42a                	sd	a0,8(sp)
    80004c6e:	a009                	j	80004c70 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe7bb7c4d45f4f92E+0x22>
    }
    80004c70:	6522                	ld	a0,8(sp)
    80004c72:	70a2                	ld	ra,40(sp)
    80004c74:	6145                	addi	sp,sp,48
    80004c76:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h1ff4a2146a51b6c9E:

0000000080004c78 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h1ff4a2146a51b6c9E>:
    pub unsafe fn as_mut(&mut self) -> &mut T {
    80004c78:	1101                	addi	sp,sp,-32
    80004c7a:	ec06                	sd	ra,24(sp)
    80004c7c:	e82a                	sd	a0,16(sp)
        unsafe { &mut *self.as_ptr() }
    80004c7e:	6108                	ld	a0,0(a0)
    80004c80:	00000097          	auipc	ra,0x0
    80004c84:	034080e7          	jalr	52(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    80004c88:	e42a                	sd	a0,8(sp)
    80004c8a:	a009                	j	80004c8c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h1ff4a2146a51b6c9E+0x14>
    }
    80004c8c:	6522                	ld	a0,8(sp)
    80004c8e:	60e2                	ld	ra,24(sp)
    80004c90:	6105                	addi	sp,sp,32
    80004c92:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2a163514486903a6E:

0000000080004c94 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2a163514486903a6E>:
    pub const fn as_ptr(self) -> *mut T {
    80004c94:	1141                	addi	sp,sp,-16
    80004c96:	e42a                	sd	a0,8(sp)
    }
    80004c98:	0141                	addi	sp,sp,16
    80004c9a:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2b3b5915d08cee17E:

0000000080004c9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2b3b5915d08cee17E>:
    pub const fn as_ptr(self) -> *mut T {
    80004c9c:	1141                	addi	sp,sp,-16
    80004c9e:	e42a                	sd	a0,8(sp)
    }
    80004ca0:	0141                	addi	sp,sp,16
    80004ca2:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4d8ee9149c4302f4E:

0000000080004ca4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4d8ee9149c4302f4E>:
    pub const fn as_ptr(self) -> *mut T {
    80004ca4:	1141                	addi	sp,sp,-16
    80004ca6:	e42a                	sd	a0,8(sp)
    }
    80004ca8:	0141                	addi	sp,sp,16
    80004caa:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E:

0000000080004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>:
    pub const fn as_ptr(self) -> *mut T {
    80004cac:	1141                	addi	sp,sp,-16
    80004cae:	e42a                	sd	a0,8(sp)
    }
    80004cb0:	0141                	addi	sp,sp,16
    80004cb2:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE:

0000000080004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>:
    pub const fn as_ptr(self) -> *mut T {
    80004cb4:	1141                	addi	sp,sp,-16
    80004cb6:	e42a                	sd	a0,8(sp)
    }
    80004cb8:	0141                	addi	sp,sp,16
    80004cba:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7310b7309020d10cE:

0000000080004cbc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7310b7309020d10cE>:
    pub const fn as_ptr(self) -> *mut T {
    80004cbc:	1141                	addi	sp,sp,-16
    80004cbe:	e42a                	sd	a0,8(sp)
    }
    80004cc0:	0141                	addi	sp,sp,16
    80004cc2:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h75b9addfd3a1513bE:

0000000080004cc4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h75b9addfd3a1513bE>:
    pub const fn as_ptr(self) -> *mut T {
    80004cc4:	1141                	addi	sp,sp,-16
    80004cc6:	e42a                	sd	a0,8(sp)
    }
    80004cc8:	0141                	addi	sp,sp,16
    80004cca:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE:

0000000080004ccc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE>:
    pub const fn as_ptr(self) -> *mut T {
    80004ccc:	1141                	addi	sp,sp,-16
    80004cce:	e42a                	sd	a0,8(sp)
    }
    80004cd0:	0141                	addi	sp,sp,16
    80004cd2:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7b3e78a0adc9da94E:

0000000080004cd4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7b3e78a0adc9da94E>:
    pub const fn as_ptr(self) -> *mut T {
    80004cd4:	1141                	addi	sp,sp,-16
    80004cd6:	e42a                	sd	a0,8(sp)
    }
    80004cd8:	0141                	addi	sp,sp,16
    80004cda:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h88bde10dec68c78aE:

0000000080004cdc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h88bde10dec68c78aE>:
    pub const fn as_ptr(self) -> *mut T {
    80004cdc:	1141                	addi	sp,sp,-16
    80004cde:	e42a                	sd	a0,8(sp)
    }
    80004ce0:	0141                	addi	sp,sp,16
    80004ce2:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E:

0000000080004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>:
    pub const fn as_ptr(self) -> *mut T {
    80004ce4:	1141                	addi	sp,sp,-16
    80004ce6:	e02a                	sd	a0,0(sp)
    80004ce8:	e42e                	sd	a1,8(sp)
    }
    80004cea:	0141                	addi	sp,sp,16
    80004cec:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd6bc9c323a33c637E:

0000000080004cee <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd6bc9c323a33c637E>:
    pub const fn as_ptr(self) -> *mut T {
    80004cee:	1141                	addi	sp,sp,-16
    80004cf0:	e42a                	sd	a0,8(sp)
    }
    80004cf2:	0141                	addi	sp,sp,16
    80004cf4:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he7c69943ccdacf63E:

0000000080004cf6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he7c69943ccdacf63E>:
    pub const fn as_ptr(self) -> *mut T {
    80004cf6:	1141                	addi	sp,sp,-16
    80004cf8:	e42a                	sd	a0,8(sp)
    }
    80004cfa:	0141                	addi	sp,sp,16
    80004cfc:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h55741571bf86c938E:

0000000080004cfe <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h55741571bf86c938E>:
    pub unsafe fn as_ref(&self) -> &T {
    80004cfe:	1101                	addi	sp,sp,-32
    80004d00:	ec06                	sd	ra,24(sp)
    80004d02:	e82a                	sd	a0,16(sp)
        unsafe { &*self.as_ptr() }
    80004d04:	6108                	ld	a0,0(a0)
    80004d06:	00000097          	auipc	ra,0x0
    80004d0a:	fc6080e7          	jalr	-58(ra) # 80004ccc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE>
    80004d0e:	e42a                	sd	a0,8(sp)
    80004d10:	a009                	j	80004d12 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h55741571bf86c938E+0x14>
    }
    80004d12:	6522                	ld	a0,8(sp)
    80004d14:	60e2                	ld	ra,24(sp)
    80004d16:	6105                	addi	sp,sp,32
    80004d18:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb7d1a4619b15f97eE:

0000000080004d1a <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb7d1a4619b15f97eE>:
    pub const fn as_mut_ptr(self) -> *mut T {
    80004d1a:	7179                	addi	sp,sp,-48
    80004d1c:	f406                	sd	ra,40(sp)
    80004d1e:	ec2a                	sd	a0,24(sp)
    80004d20:	f02e                	sd	a1,32(sp)
        self.as_non_null_ptr().as_ptr()
    80004d22:	00000097          	auipc	ra,0x0
    80004d26:	022080e7          	jalr	34(ra) # 80004d44 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hf74ffe0228367224E>
    80004d2a:	e82a                	sd	a0,16(sp)
    80004d2c:	a009                	j	80004d2e <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb7d1a4619b15f97eE+0x14>
    80004d2e:	6542                	ld	a0,16(sp)
    80004d30:	00000097          	auipc	ra,0x0
    80004d34:	f7c080e7          	jalr	-132(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    80004d38:	e42a                	sd	a0,8(sp)
    80004d3a:	a009                	j	80004d3c <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb7d1a4619b15f97eE+0x22>
    }
    80004d3c:	6522                	ld	a0,8(sp)
    80004d3e:	70a2                	ld	ra,40(sp)
    80004d40:	6145                	addi	sp,sp,48
    80004d42:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hf74ffe0228367224E:

0000000080004d44 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hf74ffe0228367224E>:
    pub const fn as_non_null_ptr(self) -> NonNull<T> {
    80004d44:	7139                	addi	sp,sp,-64
    80004d46:	fc06                	sd	ra,56(sp)
    80004d48:	f42a                	sd	a0,40(sp)
    80004d4a:	f82e                	sd	a1,48(sp)
        unsafe { NonNull::new_unchecked(self.as_ptr().as_mut_ptr()) }
    80004d4c:	00000097          	auipc	ra,0x0
    80004d50:	f98080e7          	jalr	-104(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004d54:	f02a                	sd	a0,32(sp)
    80004d56:	ec2e                	sd	a1,24(sp)
    80004d58:	a009                	j	80004d5a <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hf74ffe0228367224E+0x16>
    80004d5a:	7502                	ld	a0,32(sp)
    80004d5c:	65e2                	ld	a1,24(sp)
    80004d5e:	0001c097          	auipc	ra,0x1c
    80004d62:	a36080e7          	jalr	-1482(ra) # 80020794 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h0c310f0697235e52E>
    80004d66:	e82a                	sd	a0,16(sp)
    80004d68:	a009                	j	80004d6a <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hf74ffe0228367224E+0x26>
    80004d6a:	6542                	ld	a0,16(sp)
    80004d6c:	00000097          	auipc	ra,0x0
    80004d70:	d44080e7          	jalr	-700(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    80004d74:	e42a                	sd	a0,8(sp)
    80004d76:	a009                	j	80004d78 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hf74ffe0228367224E+0x34>
    }
    80004d78:	6522                	ld	a0,8(sp)
    80004d7a:	70e2                	ld	ra,56(sp)
    80004d7c:	6121                	addi	sp,sp,64
    80004d7e:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0adffd1c34039d02E:

0000000080004d80 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0adffd1c34039d02E>:
    pub const fn slice_from_raw_parts(data: NonNull<T>, len: usize) -> Self {
    80004d80:	715d                	addi	sp,sp,-80
    80004d82:	e486                	sd	ra,72(sp)
    80004d84:	fc2a                	sd	a0,56(sp)
    80004d86:	e0ae                	sd	a1,64(sp)
        unsafe { Self::new_unchecked(super::slice_from_raw_parts_mut(data.as_ptr(), len)) }
    80004d88:	f82e                	sd	a1,48(sp)
    80004d8a:	00000097          	auipc	ra,0x0
    80004d8e:	f22080e7          	jalr	-222(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    80004d92:	f42a                	sd	a0,40(sp)
    80004d94:	a009                	j	80004d96 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0adffd1c34039d02E+0x16>
    80004d96:	7522                	ld	a0,40(sp)
    80004d98:	75c2                	ld	a1,48(sp)
    80004d9a:	0001b097          	auipc	ra,0x1b
    80004d9e:	734080e7          	jalr	1844(ra) # 800204ce <_ZN4core3ptr24slice_from_raw_parts_mut17h161906cb9cf0f72fE>
    80004da2:	f02a                	sd	a0,32(sp)
    80004da4:	ec2e                	sd	a1,24(sp)
    80004da6:	a009                	j	80004da8 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0adffd1c34039d02E+0x28>
    80004da8:	7502                	ld	a0,32(sp)
    80004daa:	65e2                	ld	a1,24(sp)
    80004dac:	00000097          	auipc	ra,0x0
    80004db0:	d18080e7          	jalr	-744(ra) # 80004ac4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd11efa08513ccda6E>
    80004db4:	e82a                	sd	a0,16(sp)
    80004db6:	e42e                	sd	a1,8(sp)
    80004db8:	a009                	j	80004dba <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0adffd1c34039d02E+0x3a>
    }
    80004dba:	6542                	ld	a0,16(sp)
    80004dbc:	65a2                	ld	a1,8(sp)
    80004dbe:	60a6                	ld	ra,72(sp)
    80004dc0:	6161                	addi	sp,sp,80
    80004dc2:	8082                	ret

Disassembly of section .text._ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h7daf78a77412b479E:

0000000080004dc4 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h7daf78a77412b479E>:
    pub const fn len(self) -> usize {
    80004dc4:	7179                	addi	sp,sp,-48
    80004dc6:	f406                	sd	ra,40(sp)
    80004dc8:	ec2a                	sd	a0,24(sp)
    80004dca:	f02e                	sd	a1,32(sp)
        self.as_ptr().len()
    80004dcc:	00000097          	auipc	ra,0x0
    80004dd0:	f18080e7          	jalr	-232(ra) # 80004ce4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h92666d6dc499e3b9E>
    80004dd4:	e82a                	sd	a0,16(sp)
    80004dd6:	e42e                	sd	a1,8(sp)
    80004dd8:	a009                	j	80004dda <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h7daf78a77412b479E+0x16>
    80004dda:	6542                	ld	a0,16(sp)
    80004ddc:	65a2                	ld	a1,8(sp)
    80004dde:	00014097          	auipc	ra,0x14
    80004de2:	5d6080e7          	jalr	1494(ra) # 800193b4 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h9b4abd808b57f7f6E>
    80004de6:	e02a                	sd	a0,0(sp)
    80004de8:	a009                	j	80004dea <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h7daf78a77412b479E+0x26>
    }
    80004dea:	6502                	ld	a0,0(sp)
    80004dec:	70a2                	ld	ra,40(sp)
    80004dee:	6145                	addi	sp,sp,48
    80004df0:	8082                	ret

Disassembly of section .text._ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3ba4aa72031e4620E:

0000000080004df2 <_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3ba4aa72031e4620E>:
}

#[stable(feature = "nonnull", since = "1.25.0")]
impl<T: ?Sized> From<&mut T> for NonNull<T> {
    #[inline]
    fn from(reference: &mut T) -> Self {
    80004df2:	1141                	addi	sp,sp,-16
    80004df4:	e42a                	sd	a0,8(sp)
        // SAFETY: A mutable reference cannot be null.
        unsafe { NonNull { pointer: reference as *mut T } }
    80004df6:	e02a                	sd	a0,0(sp)
    }
    80004df8:	0141                	addi	sp,sp,16
    80004dfa:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc98e9f902c2df372E:

0000000080004dfc <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc98e9f902c2df372E>:
    ///
    /// [`as_mut_ptr`]: #method.as_mut_ptr
    #[stable(feature = "rust1", since = "1.0.0")]
    #[rustc_const_stable(feature = "const_slice_as_ptr", since = "1.32.0")]
    #[inline]
    pub const fn as_ptr(&self) -> *const T {
    80004dfc:	1141                	addi	sp,sp,-16
    80004dfe:	e02a                	sd	a0,0(sp)
    80004e00:	e42e                	sd	a1,8(sp)
        self as *const [T] as *const T
    }
    80004e02:	0141                	addi	sp,sp,16
    80004e04:	8082                	ret

Disassembly of section .text._ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7a33391f1b968c7E:

0000000080004e06 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7a33391f1b968c7E>:
        // so the call to `add` is safe.
        unsafe { ptr::slice_from_raw_parts(slice.as_ptr().add(self.start), self.end - self.start) }
    }

    #[inline]
    unsafe fn get_unchecked_mut(self, slice: *mut [T]) -> *mut [T] {
    80004e06:	711d                	addi	sp,sp,-96
    80004e08:	ec86                	sd	ra,88(sp)
    80004e0a:	fc2a                	sd	a0,56(sp)
    80004e0c:	e0ae                	sd	a1,64(sp)
    80004e0e:	e4b2                	sd	a2,72(sp)
    80004e10:	e8b6                	sd	a3,80(sp)
        // SAFETY: see comments for `get_unchecked` above.
        unsafe {
            ptr::slice_from_raw_parts_mut(slice.as_mut_ptr().add(self.start), self.end - self.start)
    80004e12:	f82a                	sd	a0,48(sp)
    80004e14:	8532                	mv	a0,a2
    80004e16:	f42e                	sd	a1,40(sp)
    80004e18:	85b6                	mv	a1,a3
    80004e1a:	0001c097          	auipc	ra,0x1c
    80004e1e:	97a080e7          	jalr	-1670(ra) # 80020794 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h0c310f0697235e52E>
    80004e22:	f02a                	sd	a0,32(sp)
    80004e24:	a009                	j	80004e26 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7a33391f1b968c7E+0x20>
    80004e26:	7502                	ld	a0,32(sp)
    80004e28:	75c2                	ld	a1,48(sp)
    80004e2a:	0001c097          	auipc	ra,0x1c
    80004e2e:	8c6080e7          	jalr	-1850(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    80004e32:	ec2a                	sd	a0,24(sp)
    80004e34:	a009                	j	80004e36 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7a33391f1b968c7E+0x30>
    80004e36:	7522                	ld	a0,40(sp)
    80004e38:	75c2                	ld	a1,48(sp)
    80004e3a:	40b505b3          	sub	a1,a0,a1
    80004e3e:	6562                	ld	a0,24(sp)
    80004e40:	0001b097          	auipc	ra,0x1b
    80004e44:	68e080e7          	jalr	1678(ra) # 800204ce <_ZN4core3ptr24slice_from_raw_parts_mut17h161906cb9cf0f72fE>
    80004e48:	e82a                	sd	a0,16(sp)
    80004e4a:	e42e                	sd	a1,8(sp)
    80004e4c:	a009                	j	80004e4e <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7a33391f1b968c7E+0x48>
        }
    }
    80004e4e:	6542                	ld	a0,16(sp)
    80004e50:	65a2                	ld	a1,8(sp)
    80004e52:	60e6                	ld	ra,88(sp)
    80004e54:	6125                	addi	sp,sp,96
    80004e56:	8082                	ret

Disassembly of section .text._ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E:

0000000080004e58 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E>:
        // SAFETY: `self` is checked to be valid and in bounds above.
        unsafe { &*self.get_unchecked(slice) }
    }

    #[inline]
    fn index_mut(self, slice: &mut [T]) -> &mut [T] {
    80004e58:	7159                	addi	sp,sp,-112
    80004e5a:	f486                	sd	ra,104(sp)
    80004e5c:	e4aa                	sd	a0,72(sp)
    80004e5e:	e8ae                	sd	a1,80(sp)
    80004e60:	ecb2                	sd	a2,88(sp)
    80004e62:	f0b6                	sd	a3,96(sp)
        if self.start > self.end {
    80004e64:	e0ba                	sd	a4,64(sp)
    80004e66:	fc36                	sd	a3,56(sp)
    80004e68:	f832                	sd	a2,48(sp)
    80004e6a:	f42e                	sd	a1,40(sp)
    80004e6c:	f02a                	sd	a0,32(sp)
    80004e6e:	00a5fb63          	bgeu	a1,a0,80004e84 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E+0x2c>
    80004e72:	a009                	j	80004e74 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E+0x1c>
            slice_index_order_fail(self.start, self.end);
    80004e74:	7502                	ld	a0,32(sp)
    80004e76:	75a2                	ld	a1,40(sp)
    80004e78:	6606                	ld	a2,64(sp)
    80004e7a:	0001d097          	auipc	ra,0x1d
    80004e7e:	4d6080e7          	jalr	1238(ra) # 80022350 <_ZN4core5slice5index22slice_index_order_fail17h17f07731262cfc7fE>
    80004e82:	0000                	unimp
        } else if self.end > slice.len() {
    80004e84:	7542                	ld	a0,48(sp)
    80004e86:	75e2                	ld	a1,56(sp)
    80004e88:	0000e097          	auipc	ra,0xe
    80004e8c:	ddc080e7          	jalr	-548(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    80004e90:	ec2a                	sd	a0,24(sp)
    80004e92:	a009                	j	80004e94 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E+0x3c>
    80004e94:	6562                	ld	a0,24(sp)
    80004e96:	75a2                	ld	a1,40(sp)
    80004e98:	00b57b63          	bgeu	a0,a1,80004eae <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E+0x56>
    80004e9c:	a009                	j	80004e9e <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E+0x46>
            slice_end_index_len_fail(self.end, slice.len());
    80004e9e:	7542                	ld	a0,48(sp)
    80004ea0:	75e2                	ld	a1,56(sp)
    80004ea2:	0000e097          	auipc	ra,0xe
    80004ea6:	dc2080e7          	jalr	-574(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    80004eaa:	e82a                	sd	a0,16(sp)
    80004eac:	a821                	j	80004ec4 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E+0x6c>
        }
        // SAFETY: `self` is checked to be valid and in bounds above.
        unsafe { &mut *self.get_unchecked_mut(slice) }
    80004eae:	7502                	ld	a0,32(sp)
    80004eb0:	75a2                	ld	a1,40(sp)
    80004eb2:	7642                	ld	a2,48(sp)
    80004eb4:	76e2                	ld	a3,56(sp)
    80004eb6:	00000097          	auipc	ra,0x0
    80004eba:	f50080e7          	jalr	-176(ra) # 80004e06 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7a33391f1b968c7E>
    80004ebe:	e42a                	sd	a0,8(sp)
    80004ec0:	e02e                	sd	a1,0(sp)
    80004ec2:	a809                	j	80004ed4 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E+0x7c>
            slice_end_index_len_fail(self.end, slice.len());
    80004ec4:	7522                	ld	a0,40(sp)
    80004ec6:	65c2                	ld	a1,16(sp)
    80004ec8:	6606                	ld	a2,64(sp)
    80004eca:	0001d097          	auipc	ra,0x1d
    80004ece:	446080e7          	jalr	1094(ra) # 80022310 <_ZN4core5slice5index24slice_end_index_len_fail17h397499141087200aE>
    80004ed2:	0000                	unimp
    }
    80004ed4:	6522                	ld	a0,8(sp)
    80004ed6:	6582                	ld	a1,0(sp)
    80004ed8:	70a6                	ld	ra,104(sp)
    80004eda:	6165                	addi	sp,sp,112
    80004edc:	8082                	ret

Disassembly of section .text._ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf4ffe10e6b956610E:

0000000080004ede <_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf4ffe10e6b956610E>:
    fn index(self, slice: &[T]) -> &[T] {
        (0..self.end).index(slice)
    }

    #[inline]
    fn index_mut(self, slice: &mut [T]) -> &mut [T] {
    80004ede:	711d                	addi	sp,sp,-96
    80004ee0:	ec86                	sd	ra,88(sp)
    80004ee2:	e0aa                	sd	a0,64(sp)
    80004ee4:	e4ae                	sd	a1,72(sp)
    80004ee6:	e8b2                	sd	a2,80(sp)
    80004ee8:	4701                	li	a4,0
        (0..self.end).index_mut(slice)
    80004eea:	f83a                	sd	a4,48(sp)
    80004eec:	fc2a                	sd	a0,56(sp)
    80004eee:	f42a                	sd	a0,40(sp)
    80004ef0:	853a                	mv	a0,a4
    80004ef2:	7722                	ld	a4,40(sp)
    80004ef4:	f02e                	sd	a1,32(sp)
    80004ef6:	85ba                	mv	a1,a4
    80004ef8:	7782                	ld	a5,32(sp)
    80004efa:	ec32                	sd	a2,24(sp)
    80004efc:	863e                	mv	a2,a5
    80004efe:	6862                	ld	a6,24(sp)
    80004f00:	e836                	sd	a3,16(sp)
    80004f02:	86c2                	mv	a3,a6
    80004f04:	6742                	ld	a4,16(sp)
    80004f06:	00000097          	auipc	ra,0x0
    80004f0a:	f52080e7          	jalr	-174(ra) # 80004e58 <_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4dba6bb8d290d5a3E>
    80004f0e:	e42a                	sd	a0,8(sp)
    80004f10:	e02e                	sd	a1,0(sp)
    80004f12:	a009                	j	80004f14 <_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf4ffe10e6b956610E+0x36>
    }
    80004f14:	6522                	ld	a0,8(sp)
    80004f16:	6582                	ld	a1,0(sp)
    80004f18:	60e6                	ld	ra,88(sp)
    80004f1a:	6125                	addi	sp,sp,96
    80004f1c:	8082                	ret

Disassembly of section .text._ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h26ac620c2150db9dE:

0000000080004f1e <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h26ac620c2150db9dE>:
    #[lang = "range_inclusive_new"]
    #[stable(feature = "inclusive_range_methods", since = "1.27.0")]
    #[inline]
    #[rustc_promotable]
    #[rustc_const_stable(feature = "const_range_new", since = "1.32.0")]
    pub const fn new(start: Idx, end: Idx) -> Self {
    80004f1e:	1141                	addi	sp,sp,-16
    80004f20:	e02e                	sd	a1,0(sp)
    80004f22:	e432                	sd	a2,8(sp)
        Self { start, end, exhausted: false }
    80004f24:	e10c                	sd	a1,0(a0)
    80004f26:	e510                	sd	a2,8(a0)
    80004f28:	4581                	li	a1,0
    80004f2a:	00b50823          	sb	a1,16(a0)
    }
    80004f2e:	0141                	addi	sp,sp,16
    80004f30:	8082                	ret

Disassembly of section .text._ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE:

0000000080004f32 <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE>:
    /// // Precise field values are unspecified here
    /// assert!(r.is_empty());
    /// ```
    #[stable(feature = "range_is_empty", since = "1.47.0")]
    #[inline]
    pub fn is_empty(&self) -> bool {
    80004f32:	7179                	addi	sp,sp,-48
    80004f34:	f406                	sd	ra,40(sp)
    80004f36:	f02a                	sd	a0,32(sp)
        self.exhausted || !(self.start <= self.end)
    80004f38:	01054583          	lbu	a1,16(a0)
    80004f3c:	8985                	andi	a1,a1,1
    80004f3e:	4601                	li	a2,0
    80004f40:	e82a                	sd	a0,16(sp)
    80004f42:	00c58b63          	beq	a1,a2,80004f58 <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE+0x26>
    80004f46:	a009                	j	80004f48 <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE+0x16>
    80004f48:	4505                	li	a0,1
    80004f4a:	00a10fa3          	sb	a0,31(sp)
    80004f4e:	a831                	j	80004f6a <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE+0x38>
    80004f50:	4501                	li	a0,0
    80004f52:	00a10fa3          	sb	a0,31(sp)
    80004f56:	a811                	j	80004f6a <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE+0x38>
    80004f58:	6542                	ld	a0,16(sp)
    80004f5a:	00850593          	addi	a1,a0,8
    80004f5e:	0000d097          	auipc	ra,0xd
    80004f62:	b18080e7          	jalr	-1256(ra) # 80011a76 <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17hb362a5bf16f8439fE>
    80004f66:	e42a                	sd	a0,8(sp)
    80004f68:	a031                	j	80004f74 <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE+0x42>
    }
    80004f6a:	01f14503          	lbu	a0,31(sp)
    80004f6e:	70a2                	ld	ra,40(sp)
    80004f70:	6145                	addi	sp,sp,48
    80004f72:	8082                	ret
    80004f74:	4501                	li	a0,0
        self.exhausted || !(self.start <= self.end)
    80004f76:	65a2                	ld	a1,8(sp)
    80004f78:	fca588e3          	beq	a1,a0,80004f48 <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE+0x16>
    80004f7c:	bfd1                	j	80004f50 <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE+0x1e>

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E:

0000000080004f7e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E>:
            (0, Some(0))
        }
    }

    #[inline]
    fn nth(&mut self, n: usize) -> Option<A> {
    80004f7e:	7159                	addi	sp,sp,-112
    80004f80:	f486                	sd	ra,104(sp)
    80004f82:	ecaa                	sd	a0,88(sp)
    80004f84:	f0ae                	sd	a1,96(sp)
    80004f86:	4601                	li	a2,0
        if let Some(plus_n) = Step::forward_checked(self.start.clone(), n) {
    80004f88:	04c10ba3          	sb	a2,87(sp)
    80004f8c:	fc2a                	sd	a0,56(sp)
    80004f8e:	f82e                	sd	a1,48(sp)
    80004f90:	00012097          	auipc	ra,0x12
    80004f94:	a4e080e7          	jalr	-1458(ra) # 800169de <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h9a859945ed614a32E>
    80004f98:	f42a                	sd	a0,40(sp)
    80004f9a:	a009                	j	80004f9c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x1e>
    80004f9c:	4505                	li	a0,1
    80004f9e:	04a10ba3          	sb	a0,87(sp)
    80004fa2:	7522                	ld	a0,40(sp)
    80004fa4:	75c2                	ld	a1,48(sp)
    80004fa6:	00015097          	auipc	ra,0x15
    80004faa:	b86080e7          	jalr	-1146(ra) # 80019b2c <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E>
    80004fae:	c4aa                	sw	a0,72(sp)
    80004fb0:	c6ae                	sw	a1,76(sp)
    80004fb2:	a009                	j	80004fb4 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x36>
    80004fb4:	4526                	lw	a0,72(sp)
    80004fb6:	4585                	li	a1,1
    80004fb8:	00b50463          	beq	a0,a1,80004fc0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x42>
    80004fbc:	a009                	j	80004fbe <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x40>
    80004fbe:	a859                	j	80005054 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xd6>
    80004fc0:	4501                	li	a0,0
    80004fc2:	04a10ba3          	sb	a0,87(sp)
    80004fc6:	4536                	lw	a0,76(sp)
    80004fc8:	c8aa                	sw	a0,80(sp)
            if plus_n < self.end {
    80004fca:	7562                	ld	a0,56(sp)
    80004fcc:	00450593          	addi	a1,a0,4
    80004fd0:	0888                	addi	a0,sp,80
    80004fd2:	0000d097          	auipc	ra,0xd
    80004fd6:	a6a080e7          	jalr	-1430(ra) # 80011a3c <_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17hb4cd44ec6bcccaf1E>
    80004fda:	f02a                	sd	a0,32(sp)
    80004fdc:	a009                	j	80004fde <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x60>
    80004fde:	4501                	li	a0,0
    80004fe0:	7582                	ld	a1,32(sp)
    80004fe2:	00a58a63          	beq	a1,a0,80004ff6 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x78>
    80004fe6:	a009                	j	80004fe8 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x6a>
    80004fe8:	0888                	addi	a0,sp,80
                // SAFETY: just checked precondition
                self.start = unsafe { Step::forward_unchecked(plus_n.clone(), 1) };
    80004fea:	00012097          	auipc	ra,0x12
    80004fee:	9f4080e7          	jalr	-1548(ra) # 800169de <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h9a859945ed614a32E>
    80004ff2:	ec2a                	sd	a0,24(sp)
    80004ff4:	a011                	j	80004ff8 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x7a>
                return Some(plus_n);
            }
        }
    80004ff6:	a811                	j	8000500a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x8c>
    80004ff8:	4585                	li	a1,1
                self.start = unsafe { Step::forward_unchecked(plus_n.clone(), 1) };
    80004ffa:	6562                	ld	a0,24(sp)
    80004ffc:	00015097          	auipc	ra,0x15
    80005000:	b86080e7          	jalr	-1146(ra) # 80019b82 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h8acd1cf05a7e6fdfE>
    80005004:	e82a                	sd	a0,16(sp)
    80005006:	a009                	j	80005008 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x8a>
    80005008:	a801                	j	80005018 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x9a>
        if let Some(plus_n) = Step::forward_checked(self.start.clone(), n) {
    8000500a:	a0a9                	j	80005054 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xd6>

        self.start = self.end.clone();
    8000500c:	a889                	j	8000505e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xe0>
        None
    }
    8000500e:	4506                	lw	a0,64(sp)
    80005010:	4596                	lw	a1,68(sp)
    80005012:	70a6                	ld	ra,104(sp)
    80005014:	6165                	addi	sp,sp,112
    80005016:	8082                	ret
                self.start = unsafe { Step::forward_unchecked(plus_n.clone(), 1) };
    80005018:	6542                	ld	a0,16(sp)
    8000501a:	75e2                	ld	a1,56(sp)
    8000501c:	c188                	sw	a0,0(a1)
                return Some(plus_n);
    8000501e:	4646                	lw	a2,80(sp)
    80005020:	c2b2                	sw	a2,68(sp)
    80005022:	4605                	li	a2,1
    80005024:	c0b2                	sw	a2,64(sp)
    80005026:	4601                	li	a2,0
        }
    80005028:	04c10ba3          	sb	a2,87(sp)
    }
    8000502c:	b7cd                	j	8000500e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x90>
    8000502e:	4501                	li	a0,0
        }
    80005030:	04a10ba3          	sb	a0,87(sp)
        self.start = self.end.clone();
    80005034:	7562                	ld	a0,56(sp)
    80005036:	0511                	addi	a0,a0,4
    80005038:	00012097          	auipc	ra,0x12
    8000503c:	9a6080e7          	jalr	-1626(ra) # 800169de <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h9a859945ed614a32E>
    80005040:	e42a                	sd	a0,8(sp)
    80005042:	b7e9                	j	8000500c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x8e>
        }
    80005044:	05714503          	lbu	a0,87(sp)
    80005048:	8905                	andi	a0,a0,1
    8000504a:	4581                	li	a1,0
    8000504c:	feb501e3          	beq	a0,a1,8000502e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xb0>
    80005050:	a009                	j	80005052 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xd4>
    80005052:	bff1                	j	8000502e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xb0>
    80005054:	4526                	lw	a0,72(sp)
    80005056:	4585                	li	a1,1
    80005058:	feb506e3          	beq	a0,a1,80005044 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xc6>
    8000505c:	bfc9                	j	8000502e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0xb0>
        self.start = self.end.clone();
    8000505e:	6522                	ld	a0,8(sp)
    80005060:	75e2                	ld	a1,56(sp)
    80005062:	c188                	sw	a0,0(a1)
    80005064:	4601                	li	a2,0
        None
    80005066:	c0b2                	sw	a2,64(sp)
    }
    80005068:	b75d                	j	8000500e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E+0x90>

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E:

000000008000506a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E>:
    fn nth(&mut self, n: usize) -> Option<A> {
    8000506a:	7119                	addi	sp,sp,-128
    8000506c:	fc86                	sd	ra,120(sp)
    8000506e:	f4aa                	sd	a0,104(sp)
    80005070:	f8ae                	sd	a1,112(sp)
    80005072:	4601                	li	a2,0
        if let Some(plus_n) = Step::forward_checked(self.start.clone(), n) {
    80005074:	06c103a3          	sb	a2,103(sp)
    80005078:	f82a                	sd	a0,48(sp)
    8000507a:	f42e                	sd	a1,40(sp)
    8000507c:	00012097          	auipc	ra,0x12
    80005080:	96c080e7          	jalr	-1684(ra) # 800169e8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE>
    80005084:	f02a                	sd	a0,32(sp)
    80005086:	a009                	j	80005088 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x1e>
    80005088:	4505                	li	a0,1
    8000508a:	06a103a3          	sb	a0,103(sp)
    8000508e:	7502                	ld	a0,32(sp)
    80005090:	75a2                	ld	a1,40(sp)
    80005092:	00015097          	auipc	ra,0x15
    80005096:	b10080e7          	jalr	-1264(ra) # 80019ba2 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$15forward_checked17hea59e799b9f5a348E>
    8000509a:	e4aa                	sd	a0,72(sp)
    8000509c:	e8ae                	sd	a1,80(sp)
    8000509e:	a009                	j	800050a0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x36>
    800050a0:	6526                	ld	a0,72(sp)
    800050a2:	4585                	li	a1,1
    800050a4:	00b50463          	beq	a0,a1,800050ac <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x42>
    800050a8:	a009                	j	800050aa <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x40>
    800050aa:	a859                	j	80005140 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xd6>
    800050ac:	4501                	li	a0,0
    800050ae:	06a103a3          	sb	a0,103(sp)
    800050b2:	6546                	ld	a0,80(sp)
    800050b4:	ecaa                	sd	a0,88(sp)
            if plus_n < self.end {
    800050b6:	7542                	ld	a0,48(sp)
    800050b8:	00850593          	addi	a1,a0,8
    800050bc:	08a8                	addi	a0,sp,88
    800050be:	0000d097          	auipc	ra,0xd
    800050c2:	9ce080e7          	jalr	-1586(ra) # 80011a8c <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbd123249fa251e75E>
    800050c6:	ec2a                	sd	a0,24(sp)
    800050c8:	a009                	j	800050ca <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x60>
    800050ca:	4501                	li	a0,0
    800050cc:	65e2                	ld	a1,24(sp)
    800050ce:	00a58a63          	beq	a1,a0,800050e2 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x78>
    800050d2:	a009                	j	800050d4 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x6a>
    800050d4:	08a8                	addi	a0,sp,88
                self.start = unsafe { Step::forward_unchecked(plus_n.clone(), 1) };
    800050d6:	00012097          	auipc	ra,0x12
    800050da:	912080e7          	jalr	-1774(ra) # 800169e8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE>
    800050de:	e82a                	sd	a0,16(sp)
    800050e0:	a011                	j	800050e4 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x7a>
        }
    800050e2:	a811                	j	800050f6 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x8c>
    800050e4:	4585                	li	a1,1
                self.start = unsafe { Step::forward_unchecked(plus_n.clone(), 1) };
    800050e6:	6542                	ld	a0,16(sp)
    800050e8:	00015097          	auipc	ra,0x15
    800050ec:	af6080e7          	jalr	-1290(ra) # 80019bde <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h1996eb6577f0eccfE>
    800050f0:	e42a                	sd	a0,8(sp)
    800050f2:	a009                	j	800050f4 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x8a>
    800050f4:	a801                	j	80005104 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x9a>
        if let Some(plus_n) = Step::forward_checked(self.start.clone(), n) {
    800050f6:	a0a9                	j	80005140 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xd6>
        self.start = self.end.clone();
    800050f8:	a889                	j	8000514a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xe0>
    }
    800050fa:	7562                	ld	a0,56(sp)
    800050fc:	6586                	ld	a1,64(sp)
    800050fe:	70e6                	ld	ra,120(sp)
    80005100:	6109                	addi	sp,sp,128
    80005102:	8082                	ret
                self.start = unsafe { Step::forward_unchecked(plus_n.clone(), 1) };
    80005104:	6522                	ld	a0,8(sp)
    80005106:	75c2                	ld	a1,48(sp)
    80005108:	e188                	sd	a0,0(a1)
                return Some(plus_n);
    8000510a:	6666                	ld	a2,88(sp)
    8000510c:	e0b2                	sd	a2,64(sp)
    8000510e:	4605                	li	a2,1
    80005110:	fc32                	sd	a2,56(sp)
    80005112:	4601                	li	a2,0
        }
    80005114:	06c103a3          	sb	a2,103(sp)
    }
    80005118:	b7cd                	j	800050fa <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x90>
    8000511a:	4501                	li	a0,0
        }
    8000511c:	06a103a3          	sb	a0,103(sp)
        self.start = self.end.clone();
    80005120:	7542                	ld	a0,48(sp)
    80005122:	0521                	addi	a0,a0,8
    80005124:	00012097          	auipc	ra,0x12
    80005128:	8c4080e7          	jalr	-1852(ra) # 800169e8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE>
    8000512c:	e02a                	sd	a0,0(sp)
    8000512e:	b7e9                	j	800050f8 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x8e>
        }
    80005130:	06714503          	lbu	a0,103(sp)
    80005134:	8905                	andi	a0,a0,1
    80005136:	4581                	li	a1,0
    80005138:	feb501e3          	beq	a0,a1,8000511a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xb0>
    8000513c:	a009                	j	8000513e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xd4>
    8000513e:	bff1                	j	8000511a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xb0>
    80005140:	6526                	ld	a0,72(sp)
    80005142:	4585                	li	a1,1
    80005144:	feb506e3          	beq	a0,a1,80005130 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xc6>
    80005148:	bfc9                	j	8000511a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0xb0>
        self.start = self.end.clone();
    8000514a:	6502                	ld	a0,0(sp)
    8000514c:	75c2                	ld	a1,48(sp)
    8000514e:	e188                	sd	a0,0(a1)
    80005150:	4601                	li	a2,0
        None
    80005152:	fc32                	sd	a2,56(sp)
    }
    80005154:	b75d                	j	800050fa <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E+0x90>

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E:

0000000080005156 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E>:
    fn next(&mut self) -> Option<A> {
    80005156:	715d                	addi	sp,sp,-80
    80005158:	e486                	sd	ra,72(sp)
    8000515a:	fc2a                	sd	a0,56(sp)
        if self.start < self.end {
    8000515c:	00250593          	addi	a1,a0,2
    80005160:	f42a                	sd	a0,40(sp)
    80005162:	0000d097          	auipc	ra,0xd
    80005166:	8c4080e7          	jalr	-1852(ra) # 80011a26 <_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u16$GT$2lt17h36c43ba75efaa90dE>
    8000516a:	f02a                	sd	a0,32(sp)
    8000516c:	a009                	j	8000516e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x18>
    8000516e:	4501                	li	a0,0
    80005170:	7582                	ld	a1,32(sp)
    80005172:	00a58a63          	beq	a1,a0,80005186 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x30>
    80005176:	a009                	j	80005178 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x22>
            let n = unsafe { Step::forward_unchecked(self.start.clone(), 1) };
    80005178:	7522                	ld	a0,40(sp)
    8000517a:	00012097          	auipc	ra,0x12
    8000517e:	858080e7          	jalr	-1960(ra) # 800169d2 <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h9ddf81ec8b1e9077E>
    80005182:	ec2a                	sd	a0,24(sp)
    80005184:	a029                	j	8000518e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x38>
    80005186:	4501                	li	a0,0
            None
    80005188:	02a11823          	sh	a0,48(sp)
        if self.start < self.end {
    8000518c:	a81d                	j	800051c2 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x6c>
    8000518e:	4585                	li	a1,1
            let n = unsafe { Step::forward_unchecked(self.start.clone(), 1) };
    80005190:	6562                	ld	a0,24(sp)
    80005192:	00015097          	auipc	ra,0x15
    80005196:	978080e7          	jalr	-1672(ra) # 80019b0a <_ZN47_$LT$u16$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h6c2d3ed3bee26cdfE>
    8000519a:	85aa                	mv	a1,a0
    8000519c:	04a11323          	sh	a0,70(sp)
    800051a0:	e82e                	sd	a1,16(sp)
    800051a2:	a009                	j	800051a4 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x4e>
            Some(mem::replace(&mut self.start, n))
    800051a4:	7522                	ld	a0,40(sp)
    800051a6:	65c2                	ld	a1,16(sp)
    800051a8:	00009097          	auipc	ra,0x9
    800051ac:	b0e080e7          	jalr	-1266(ra) # 8000dcb6 <_ZN4core3mem7replace17hf9ceb9ef0ca17dc5E>
    800051b0:	e42a                	sd	a0,8(sp)
    800051b2:	a009                	j	800051b4 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x5e>
    800051b4:	6522                	ld	a0,8(sp)
    800051b6:	02a11923          	sh	a0,50(sp)
    800051ba:	4585                	li	a1,1
    800051bc:	02b11823          	sh	a1,48(sp)
        if self.start < self.end {
    800051c0:	a009                	j	800051c2 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E+0x6c>
    }
    800051c2:	03011503          	lh	a0,48(sp)
    800051c6:	03211583          	lh	a1,50(sp)
    800051ca:	60a6                	ld	ra,72(sp)
    800051cc:	6161                	addi	sp,sp,80
    800051ce:	8082                	ret

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE:

00000000800051d0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE>:
    fn next(&mut self) -> Option<A> {
    800051d0:	715d                	addi	sp,sp,-80
    800051d2:	e486                	sd	ra,72(sp)
    800051d4:	fc2a                	sd	a0,56(sp)
        if self.start < self.end {
    800051d6:	00450593          	addi	a1,a0,4
    800051da:	f42a                	sd	a0,40(sp)
    800051dc:	0000d097          	auipc	ra,0xd
    800051e0:	860080e7          	jalr	-1952(ra) # 80011a3c <_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17hb4cd44ec6bcccaf1E>
    800051e4:	f02a                	sd	a0,32(sp)
    800051e6:	a009                	j	800051e8 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x18>
    800051e8:	4501                	li	a0,0
    800051ea:	7582                	ld	a1,32(sp)
    800051ec:	00a58a63          	beq	a1,a0,80005200 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x30>
    800051f0:	a009                	j	800051f2 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x22>
            let n = unsafe { Step::forward_unchecked(self.start.clone(), 1) };
    800051f2:	7522                	ld	a0,40(sp)
    800051f4:	00011097          	auipc	ra,0x11
    800051f8:	7ea080e7          	jalr	2026(ra) # 800169de <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h9a859945ed614a32E>
    800051fc:	ec2a                	sd	a0,24(sp)
    800051fe:	a021                	j	80005206 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x36>
    80005200:	4501                	li	a0,0
            None
    80005202:	d82a                	sw	a0,48(sp)
        if self.start < self.end {
    80005204:	a805                	j	80005234 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x64>
    80005206:	4585                	li	a1,1
            let n = unsafe { Step::forward_unchecked(self.start.clone(), 1) };
    80005208:	6562                	ld	a0,24(sp)
    8000520a:	00015097          	auipc	ra,0x15
    8000520e:	978080e7          	jalr	-1672(ra) # 80019b82 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h8acd1cf05a7e6fdfE>
    80005212:	85aa                	mv	a1,a0
    80005214:	c2aa                	sw	a0,68(sp)
    80005216:	e82e                	sd	a1,16(sp)
    80005218:	a009                	j	8000521a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x4a>
            Some(mem::replace(&mut self.start, n))
    8000521a:	7522                	ld	a0,40(sp)
    8000521c:	65c2                	ld	a1,16(sp)
    8000521e:	00009097          	auipc	ra,0x9
    80005222:	a5c080e7          	jalr	-1444(ra) # 8000dc7a <_ZN4core3mem7replace17h8728dc8bcf9ec0a3E>
    80005226:	e42a                	sd	a0,8(sp)
    80005228:	a009                	j	8000522a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x5a>
    8000522a:	6522                	ld	a0,8(sp)
    8000522c:	da2a                	sw	a0,52(sp)
    8000522e:	4585                	li	a1,1
    80005230:	d82e                	sw	a1,48(sp)
        if self.start < self.end {
    80005232:	a009                	j	80005234 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE+0x64>
    }
    80005234:	5542                	lw	a0,48(sp)
    80005236:	55d2                	lw	a1,52(sp)
    80005238:	60a6                	ld	ra,72(sp)
    8000523a:	6161                	addi	sp,sp,80
    8000523c:	8082                	ret

Disassembly of section .text._ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E:

000000008000523e <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E>:
}

#[stable(feature = "inclusive_range", since = "1.26.0")]
impl<A: Step> DoubleEndedIterator for ops::RangeInclusive<A> {
    #[inline]
    fn next_back(&mut self) -> Option<A> {
    8000523e:	711d                	addi	sp,sp,-96
    80005240:	ec86                	sd	ra,88(sp)
    80005242:	e0aa                	sd	a0,64(sp)
        if self.is_empty() {
    80005244:	f02a                	sd	a0,32(sp)
    80005246:	00000097          	auipc	ra,0x0
    8000524a:	cec080e7          	jalr	-788(ra) # 80004f32 <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17hf93ae95260956d3fE>
    8000524e:	ec2a                	sd	a0,24(sp)
    80005250:	a009                	j	80005252 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x14>
    80005252:	4501                	li	a0,0
    80005254:	65e2                	ld	a1,24(sp)
    80005256:	00a58663          	beq	a1,a0,80005262 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x24>
    8000525a:	a009                	j	8000525c <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x1e>
    8000525c:	4501                	li	a0,0
            return None;
    8000525e:	f42a                	sd	a0,40(sp)
            mem::replace(&mut self.end, n)
        } else {
            self.exhausted = true;
            self.end.clone()
        })
    }
    80005260:	a041                	j	800052e0 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0xa2>
        let is_iterating = self.start < self.end;
    80005262:	7502                	ld	a0,32(sp)
    80005264:	00850593          	addi	a1,a0,8
    80005268:	0000d097          	auipc	ra,0xd
    8000526c:	824080e7          	jalr	-2012(ra) # 80011a8c <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbd123249fa251e75E>
    80005270:	85aa                	mv	a1,a0
    80005272:	04a107a3          	sb	a0,79(sp)
    80005276:	e82e                	sd	a1,16(sp)
    80005278:	a009                	j	8000527a <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x3c>
    8000527a:	4501                	li	a0,0
        Some(if is_iterating {
    8000527c:	65c2                	ld	a1,16(sp)
    8000527e:	00a58b63          	beq	a1,a0,80005294 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x56>
    80005282:	a009                	j	80005284 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x46>
            let n = unsafe { Step::backward_unchecked(self.end.clone(), 1) };
    80005284:	7502                	ld	a0,32(sp)
    80005286:	0521                	addi	a0,a0,8
    80005288:	00011097          	auipc	ra,0x11
    8000528c:	760080e7          	jalr	1888(ra) # 800169e8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE>
    80005290:	e42a                	sd	a0,8(sp)
    80005292:	a829                	j	800052ac <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x6e>
    80005294:	4505                	li	a0,1
            self.exhausted = true;
    80005296:	7582                	ld	a1,32(sp)
    80005298:	00a58823          	sb	a0,16(a1)
            self.end.clone()
    8000529c:	00858513          	addi	a0,a1,8
    800052a0:	00011097          	auipc	ra,0x11
    800052a4:	748080e7          	jalr	1864(ra) # 800169e8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE>
    800052a8:	fc2a                	sd	a0,56(sp)
    800052aa:	a02d                	j	800052d4 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x96>
    800052ac:	4585                	li	a1,1
            let n = unsafe { Step::backward_unchecked(self.end.clone(), 1) };
    800052ae:	6522                	ld	a0,8(sp)
    800052b0:	00015097          	auipc	ra,0x15
    800052b4:	94a080e7          	jalr	-1718(ra) # 80019bfa <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hff4addd6504b2501E>
    800052b8:	85aa                	mv	a1,a0
    800052ba:	e8aa                	sd	a0,80(sp)
    800052bc:	e02e                	sd	a1,0(sp)
    800052be:	a009                	j	800052c0 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x82>
            mem::replace(&mut self.end, n)
    800052c0:	7502                	ld	a0,32(sp)
    800052c2:	0521                	addi	a0,a0,8
    800052c4:	6582                	ld	a1,0(sp)
    800052c6:	0001b097          	auipc	ra,0x1b
    800052ca:	dd8080e7          	jalr	-552(ra) # 8002009e <_ZN4core3mem7replace17h3fd89486113d7373E>
    800052ce:	fc2a                	sd	a0,56(sp)
    800052d0:	a009                	j	800052d2 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x94>
        Some(if is_iterating {
    800052d2:	a011                	j	800052d6 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x98>
    800052d4:	a009                	j	800052d6 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0x98>
    800052d6:	7562                	ld	a0,56(sp)
    800052d8:	f82a                	sd	a0,48(sp)
    800052da:	4505                	li	a0,1
    800052dc:	f42a                	sd	a0,40(sp)
    }
    800052de:	a009                	j	800052e0 <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E+0xa2>
    800052e0:	7522                	ld	a0,40(sp)
    800052e2:	75c2                	ld	a1,48(sp)
    800052e4:	60e6                	ld	ra,88(sp)
    800052e6:	6125                	addi	sp,sp,96
    800052e8:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator3rev17hd963d1bbf30802c8E:

00000000800052ea <_ZN4core4iter6traits8iterator8Iterator3rev17hd963d1bbf30802c8E>:
    ///
    /// assert_eq!(iter.next(), None);
    /// ```
    #[inline]
    #[stable(feature = "rust1", since = "1.0.0")]
    fn rev(self) -> Rev<Self>
    800052ea:	1101                	addi	sp,sp,-32
    where
        Self: Sized + DoubleEndedIterator,
    {
        Rev::new(self)
    800052ec:	ec06                	sd	ra,24(sp)
    800052ee:	6990                	ld	a2,16(a1)
    800052f0:	e832                	sd	a2,16(sp)
    800052f2:	6590                	ld	a2,8(a1)
    800052f4:	e432                	sd	a2,8(sp)
    800052f6:	618c                	ld	a1,0(a1)
    800052f8:	e02e                	sd	a1,0(sp)
    800052fa:	858a                	mv	a1,sp
    800052fc:	0000c097          	auipc	ra,0xc
    80005300:	5f6080e7          	jalr	1526(ra) # 800118f2 <_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17hacb394750ad24a5dE>
    80005304:	a009                	j	80005306 <_ZN4core4iter6traits8iterator8Iterator3rev17hd963d1bbf30802c8E+0x1c>
    }
    80005306:	60e2                	ld	ra,24(sp)
    80005308:	6105                	addi	sp,sp,32
    8000530a:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator7step_by17h1006fc7bdafed74fE:

000000008000530c <_ZN4core4iter6traits8iterator8Iterator7step_by17h1006fc7bdafed74fE>:
    fn step_by(self, step: usize) -> StepBy<Self>
    8000530c:	1101                	addi	sp,sp,-32
    8000530e:	ec06                	sd	ra,24(sp)
    80005310:	e02e                	sd	a1,0(sp)
    80005312:	e432                	sd	a2,8(sp)
    80005314:	e836                	sd	a3,16(sp)
        StepBy::new(self, step)
    80005316:	00014097          	auipc	ra,0x14
    8000531a:	1a4080e7          	jalr	420(ra) # 800194ba <_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17hd06ad15fe774cd44E>
    8000531e:	a009                	j	80005320 <_ZN4core4iter6traits8iterator8Iterator7step_by17h1006fc7bdafed74fE+0x14>
    }
    80005320:	60e2                	ld	ra,24(sp)
    80005322:	6105                	addi	sp,sp,32
    80005324:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator7step_by17h6545e1d52944f994E:

0000000080005326 <_ZN4core4iter6traits8iterator8Iterator7step_by17h6545e1d52944f994E>:
    fn step_by(self, step: usize) -> StepBy<Self>
    80005326:	7179                	addi	sp,sp,-48
    80005328:	f406                	sd	ra,40(sp)
    8000532a:	8732                	mv	a4,a2
    8000532c:	87ae                	mv	a5,a1
    8000532e:	cc2e                	sw	a1,24(sp)
    80005330:	ce32                	sw	a2,28(sp)
    80005332:	f036                	sd	a3,32(sp)
        StepBy::new(self, step)
    80005334:	e83a                	sd	a4,16(sp)
    80005336:	e43e                	sd	a5,8(sp)
    80005338:	00014097          	auipc	ra,0x14
    8000533c:	12e080e7          	jalr	302(ra) # 80019466 <_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17hb71d5648258dbefbE>
    80005340:	a009                	j	80005342 <_ZN4core4iter6traits8iterator8Iterator7step_by17h6545e1d52944f994E+0x1c>
    }
    80005342:	70a2                	ld	ra,40(sp)
    80005344:	6145                	addi	sp,sp,48
    80005346:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb3f70b8b942a274cE:

0000000080005348 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb3f70b8b942a274cE>:
#[stable(feature = "rust1", since = "1.0.0")]
impl<I: Iterator> IntoIterator for I {
    type Item = I::Item;
    type IntoIter = I;

    fn into_iter(self) -> I {
    80005348:	1141                	addi	sp,sp,-16
    8000534a:	862e                	mv	a2,a1
    8000534c:	86aa                	mv	a3,a0
    8000534e:	c42a                	sw	a0,8(sp)
    80005350:	c62e                	sw	a1,12(sp)
        self
    }
    80005352:	0141                	addi	sp,sp,16
    80005354:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf3aa14e7b5f0d30aE:

0000000080005356 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf3aa14e7b5f0d30aE>:
    fn into_iter(self) -> I {
    80005356:	1141                	addi	sp,sp,-16
    80005358:	862e                	mv	a2,a1
    8000535a:	86aa                	mv	a3,a0
    8000535c:	00a11423          	sh	a0,8(sp)
    80005360:	00b11523          	sh	a1,10(sp)
    }
    80005364:	0141                	addi	sp,sp,16
    80005366:	8082                	ret

Disassembly of section .text._ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb0b3801e92c6e74bE:

0000000080005368 <_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb0b3801e92c6e74bE>:
    fn index(self, slice: &[T]) -> &[T] {
        slice
    }

    #[inline]
    fn index_mut(self, slice: &mut [T]) -> &mut [T] {
    80005368:	1101                	addi	sp,sp,-32
    8000536a:	e82a                	sd	a0,16(sp)
    8000536c:	ec2e                	sd	a1,24(sp)
        slice
    }
    8000536e:	6105                	addi	sp,sp,32
    80005370:	8082                	ret

Disassembly of section .text._ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h07fd531db752633dE:

0000000080005372 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h07fd531db752633dE>:
        #[stable(feature = "rust1", since = "1.0.0")]
        impl Add for Wrapping<$t> {
            type Output = Wrapping<$t>;

            #[inline]
            fn add(self, other: Wrapping<$t>) -> Wrapping<$t> {
    80005372:	7179                	addi	sp,sp,-48
    80005374:	f406                	sd	ra,40(sp)
    80005376:	ec2a                	sd	a0,24(sp)
    80005378:	f02e                	sd	a1,32(sp)
                Wrapping(self.0.wrapping_add(other.0))
    8000537a:	00011097          	auipc	ra,0x11
    8000537e:	136080e7          	jalr	310(ra) # 800164b0 <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hd953d4ef26e36608E>
    80005382:	e42a                	sd	a0,8(sp)
    80005384:	a009                	j	80005386 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h07fd531db752633dE+0x14>
    80005386:	6522                	ld	a0,8(sp)
    80005388:	e82a                	sd	a0,16(sp)
            }
    8000538a:	70a2                	ld	ra,40(sp)
    8000538c:	6145                	addi	sp,sp,48
    8000538e:	8082                	ret

Disassembly of section .text._ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17hdd61030f480377c8E:

0000000080005390 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17hdd61030f480377c8E>:
        #[stable(feature = "rust1", since = "1.0.0")]
        impl Sub for Wrapping<$t> {
            type Output = Wrapping<$t>;

            #[inline]
            fn sub(self, other: Wrapping<$t>) -> Wrapping<$t> {
    80005390:	7179                	addi	sp,sp,-48
    80005392:	f406                	sd	ra,40(sp)
    80005394:	ec2a                	sd	a0,24(sp)
    80005396:	f02e                	sd	a1,32(sp)
                Wrapping(self.0.wrapping_sub(other.0))
    80005398:	00011097          	auipc	ra,0x11
    8000539c:	124080e7          	jalr	292(ra) # 800164bc <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17ha895a6f73d27b4f7E>
    800053a0:	e42a                	sd	a0,8(sp)
    800053a2:	a009                	j	800053a4 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17hdd61030f480377c8E+0x14>
    800053a4:	6522                	ld	a0,8(sp)
    800053a6:	e82a                	sd	a0,16(sp)
            }
    800053a8:	70a2                	ld	ra,40(sp)
    800053aa:	6145                	addi	sp,sp,48
    800053ac:	8082                	ret

Disassembly of section .text._ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hcde6a2ec0c355ebdE:

00000000800053ae <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hcde6a2ec0c355ebdE>:
            fn add_assign(&mut self, other: Wrapping<$t>) {
    800053ae:	7179                	addi	sp,sp,-48
    800053b0:	f406                	sd	ra,40(sp)
    800053b2:	ec2a                	sd	a0,24(sp)
    800053b4:	f02e                	sd	a1,32(sp)
                *self = *self + other;
    800053b6:	6110                	ld	a2,0(a0)
    800053b8:	e82a                	sd	a0,16(sp)
    800053ba:	8532                	mv	a0,a2
    800053bc:	00000097          	auipc	ra,0x0
    800053c0:	fb6080e7          	jalr	-74(ra) # 80005372 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h07fd531db752633dE>
    800053c4:	e42a                	sd	a0,8(sp)
    800053c6:	a009                	j	800053c8 <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hcde6a2ec0c355ebdE+0x1a>
    800053c8:	6522                	ld	a0,8(sp)
    800053ca:	65c2                	ld	a1,16(sp)
    800053cc:	e188                	sd	a0,0(a1)
            }
    800053ce:	70a2                	ld	ra,40(sp)
    800053d0:	6145                	addi	sp,sp,48
    800053d2:	8082                	ret

Disassembly of section .text._ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..SubAssign$GT$10sub_assign17h264a97eeb238b98aE:

00000000800053d4 <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..SubAssign$GT$10sub_assign17h264a97eeb238b98aE>:
                #[stable(feature = "wrapping_ref", since = "1.14.0")] }

        #[stable(feature = "op_assign_traits", since = "1.8.0")]
        impl SubAssign for Wrapping<$t> {
            #[inline]
            fn sub_assign(&mut self, other: Wrapping<$t>) {
    800053d4:	7179                	addi	sp,sp,-48
    800053d6:	f406                	sd	ra,40(sp)
    800053d8:	ec2a                	sd	a0,24(sp)
    800053da:	f02e                	sd	a1,32(sp)
                *self = *self - other;
    800053dc:	6110                	ld	a2,0(a0)
    800053de:	e82a                	sd	a0,16(sp)
    800053e0:	8532                	mv	a0,a2
    800053e2:	00000097          	auipc	ra,0x0
    800053e6:	fae080e7          	jalr	-82(ra) # 80005390 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17hdd61030f480377c8E>
    800053ea:	e42a                	sd	a0,8(sp)
    800053ec:	a009                	j	800053ee <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..SubAssign$GT$10sub_assign17h264a97eeb238b98aE+0x1a>
    800053ee:	6522                	ld	a0,8(sp)
    800053f0:	65c2                	ld	a1,16(sp)
    800053f2:	e188                	sd	a0,0(a1)
            }
    800053f4:	70a2                	ld	ra,40(sp)
    800053f6:	6145                	addi	sp,sp,48
    800053f8:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout12pad_to_align17h93cfba0e1d2cc87bE:

00000000800053fa <_ZN4core5alloc6layout6Layout12pad_to_align17h93cfba0e1d2cc87bE>:
    ///
    /// This is equivalent to adding the result of `padding_needed_for`
    /// to the layout's current size.
    #[stable(feature = "alloc_layout_manipulation", since = "1.44.0")]
    #[inline]
    pub fn pad_to_align(&self) -> Layout {
    800053fa:	7159                	addi	sp,sp,-112
    800053fc:	f486                	sd	ra,104(sp)
    800053fe:	e8aa                	sd	a0,80(sp)
        let pad = self.padding_needed_for(self.align());
    80005400:	e4aa                	sd	a0,72(sp)
    80005402:	00000097          	auipc	ra,0x0
    80005406:	17c080e7          	jalr	380(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    8000540a:	e0aa                	sd	a0,64(sp)
    8000540c:	a009                	j	8000540e <_ZN4core5alloc6layout6Layout12pad_to_align17h93cfba0e1d2cc87bE+0x14>
    8000540e:	6526                	ld	a0,72(sp)
    80005410:	6586                	ld	a1,64(sp)
    80005412:	00000097          	auipc	ra,0x0
    80005416:	0ce080e7          	jalr	206(ra) # 800054e0 <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE>
    8000541a:	85aa                	mv	a1,a0
    8000541c:	ecaa                	sd	a0,88(sp)
    8000541e:	fc2e                	sd	a1,56(sp)
    80005420:	a009                	j	80005422 <_ZN4core5alloc6layout6Layout12pad_to_align17h93cfba0e1d2cc87bE+0x28>
        // This cannot overflow. Quoting from the invariant of Layout:
        // > `size`, when rounded up to the nearest multiple of `align`,
        // > must not overflow (i.e., the rounded value must be less than
        // > `usize::MAX`)
        let new_size = self.size() + pad;
    80005422:	6526                	ld	a0,72(sp)
    80005424:	00000097          	auipc	ra,0x0
    80005428:	150080e7          	jalr	336(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    8000542c:	f82a                	sd	a0,48(sp)
    8000542e:	a009                	j	80005430 <_ZN4core5alloc6layout6Layout12pad_to_align17h93cfba0e1d2cc87bE+0x36>
    80005430:	7542                	ld	a0,48(sp)
    80005432:	75e2                	ld	a1,56(sp)
    80005434:	00b50633          	add	a2,a0,a1
    80005438:	f0b2                	sd	a2,96(sp)

        Layout::from_size_align(new_size, self.align()).unwrap()
    8000543a:	6526                	ld	a0,72(sp)
    8000543c:	f432                	sd	a2,40(sp)
    8000543e:	00000097          	auipc	ra,0x0
    80005442:	140080e7          	jalr	320(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    80005446:	f02a                	sd	a0,32(sp)
    80005448:	a009                	j	8000544a <_ZN4core5alloc6layout6Layout12pad_to_align17h93cfba0e1d2cc87bE+0x50>
    8000544a:	7522                	ld	a0,40(sp)
    8000544c:	7582                	ld	a1,32(sp)
    8000544e:	00000097          	auipc	ra,0x0
    80005452:	032080e7          	jalr	50(ra) # 80005480 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E>
    80005456:	ec2a                	sd	a0,24(sp)
    80005458:	e82e                	sd	a1,16(sp)
    8000545a:	a009                	j	8000545c <.LBB0_7>

000000008000545c <.LBB0_7>:
    8000545c:	0001f617          	auipc	a2,0x1f
    80005460:	f4c60613          	addi	a2,a2,-180 # 800243a8 <.L__unnamed_1>
    80005464:	6562                	ld	a0,24(sp)
    80005466:	65c2                	ld	a1,16(sp)
    80005468:	00008097          	auipc	ra,0x8
    8000546c:	952080e7          	jalr	-1710(ra) # 8000cdba <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd933c09fc41d7d6eE>
    80005470:	e42a                	sd	a0,8(sp)
    80005472:	e02e                	sd	a1,0(sp)
    80005474:	a009                	j	80005476 <.LBB0_7+0x1a>
    }
    80005476:	6522                	ld	a0,8(sp)
    80005478:	6582                	ld	a1,0(sp)
    8000547a:	70a6                	ld	ra,104(sp)
    8000547c:	6165                	addi	sp,sp,112
    8000547e:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E:

0000000080005480 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E>:
    pub const fn from_size_align(size: usize, align: usize) -> Result<Self, LayoutError> {
    80005480:	715d                	addi	sp,sp,-80
    80005482:	e486                	sd	ra,72(sp)
    80005484:	fc2a                	sd	a0,56(sp)
    80005486:	e0ae                	sd	a1,64(sp)
        if !align.is_power_of_two() {
    80005488:	f02a                	sd	a0,32(sp)
    8000548a:	852e                	mv	a0,a1
    8000548c:	ec2e                	sd	a1,24(sp)
    8000548e:	00011097          	auipc	ra,0x11
    80005492:	0a2080e7          	jalr	162(ra) # 80016530 <_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17hcb48402cc74226bcE>
    80005496:	e82a                	sd	a0,16(sp)
    80005498:	a009                	j	8000549a <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x1a>
    8000549a:	6542                	ld	a0,16(sp)
    8000549c:	e509                	bnez	a0,800054a6 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x26>
    8000549e:	a009                	j	800054a0 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x20>
    800054a0:	4501                	li	a0,0
            return Err(LayoutError { private: () });
    800054a2:	f82a                	sd	a0,48(sp)
    800054a4:	a80d                	j	800054d6 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x56>
    800054a6:	4501                	li	a0,0
        if size > usize::MAX - (align - 1) {
    800054a8:	65e2                	ld	a1,24(sp)
    800054aa:	8d0d                	sub	a0,a0,a1
    800054ac:	7602                	ld	a2,32(sp)
    800054ae:	00c57663          	bgeu	a0,a2,800054ba <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x3a>
    800054b2:	a009                	j	800054b4 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x34>
    800054b4:	4501                	li	a0,0
            return Err(LayoutError { private: () });
    800054b6:	f82a                	sd	a0,48(sp)
    800054b8:	a839                	j	800054d6 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x56>
        unsafe { Ok(Layout::from_size_align_unchecked(size, align)) }
    800054ba:	7502                	ld	a0,32(sp)
    800054bc:	65e2                	ld	a1,24(sp)
    800054be:	00000097          	auipc	ra,0x0
    800054c2:	090080e7          	jalr	144(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    800054c6:	e42a                	sd	a0,8(sp)
    800054c8:	e02e                	sd	a1,0(sp)
    800054ca:	a009                	j	800054cc <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x4c>
    800054cc:	6522                	ld	a0,8(sp)
    800054ce:	f42a                	sd	a0,40(sp)
    800054d0:	6582                	ld	a1,0(sp)
    800054d2:	f82e                	sd	a1,48(sp)
    }
    800054d4:	a009                	j	800054d6 <_ZN4core5alloc6layout6Layout15from_size_align17h92408338f2ac3410E+0x56>
    800054d6:	7522                	ld	a0,40(sp)
    800054d8:	75c2                	ld	a1,48(sp)
    800054da:	60a6                	ld	ra,72(sp)
    800054dc:	6161                	addi	sp,sp,80
    800054de:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE:

00000000800054e0 <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE>:
    pub const fn padding_needed_for(&self, align: usize) -> usize {
    800054e0:	711d                	addi	sp,sp,-96
    800054e2:	ec86                	sd	ra,88(sp)
    800054e4:	fc2a                	sd	a0,56(sp)
    800054e6:	e0ae                	sd	a1,64(sp)
        let len = self.size();
    800054e8:	f82e                	sd	a1,48(sp)
    800054ea:	00000097          	auipc	ra,0x0
    800054ee:	08a080e7          	jalr	138(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    800054f2:	85aa                	mv	a1,a0
    800054f4:	e4aa                	sd	a0,72(sp)
    800054f6:	f42e                	sd	a1,40(sp)
    800054f8:	a009                	j	800054fa <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE+0x1a>
        let len_rounded_up = len.wrapping_add(align).wrapping_sub(1) & !align.wrapping_sub(1);
    800054fa:	7522                	ld	a0,40(sp)
    800054fc:	75c2                	ld	a1,48(sp)
    800054fe:	00011097          	auipc	ra,0x11
    80005502:	fb2080e7          	jalr	-78(ra) # 800164b0 <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hd953d4ef26e36608E>
    80005506:	f02a                	sd	a0,32(sp)
    80005508:	a009                	j	8000550a <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE+0x2a>
    8000550a:	4585                	li	a1,1
    8000550c:	7502                	ld	a0,32(sp)
    8000550e:	00011097          	auipc	ra,0x11
    80005512:	fae080e7          	jalr	-82(ra) # 800164bc <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17ha895a6f73d27b4f7E>
    80005516:	ec2a                	sd	a0,24(sp)
    80005518:	a009                	j	8000551a <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE+0x3a>
    8000551a:	4585                	li	a1,1
    8000551c:	7542                	ld	a0,48(sp)
    8000551e:	00011097          	auipc	ra,0x11
    80005522:	f9e080e7          	jalr	-98(ra) # 800164bc <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17ha895a6f73d27b4f7E>
    80005526:	e82a                	sd	a0,16(sp)
    80005528:	a009                	j	8000552a <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE+0x4a>
    8000552a:	6542                	ld	a0,16(sp)
    8000552c:	fff54593          	not	a1,a0
    80005530:	6662                	ld	a2,24(sp)
    80005532:	8df1                	and	a1,a1,a2
    80005534:	e8ae                	sd	a1,80(sp)
        len_rounded_up.wrapping_sub(len)
    80005536:	852e                	mv	a0,a1
    80005538:	75a2                	ld	a1,40(sp)
    8000553a:	00011097          	auipc	ra,0x11
    8000553e:	f82080e7          	jalr	-126(ra) # 800164bc <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17ha895a6f73d27b4f7E>
    80005542:	e42a                	sd	a0,8(sp)
    80005544:	a009                	j	80005546 <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE+0x66>
    }
    80005546:	6522                	ld	a0,8(sp)
    80005548:	60e6                	ld	ra,88(sp)
    8000554a:	6125                	addi	sp,sp,96
    8000554c:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E:

000000008000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>:
    pub const unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {
    8000554e:	7139                	addi	sp,sp,-64
    80005550:	fc06                	sd	ra,56(sp)
    80005552:	f42a                	sd	a0,40(sp)
    80005554:	f82e                	sd	a1,48(sp)
        Layout { size_: size, align_: unsafe { NonZeroUsize::new_unchecked(align) } }
    80005556:	e82a                	sd	a0,16(sp)
    80005558:	852e                	mv	a0,a1
    8000555a:	00014097          	auipc	ra,0x14
    8000555e:	c70080e7          	jalr	-912(ra) # 800191ca <_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h19dfbc6cd5553891E>
    80005562:	e42a                	sd	a0,8(sp)
    80005564:	a009                	j	80005566 <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E+0x18>
    80005566:	6542                	ld	a0,16(sp)
    80005568:	ec2a                	sd	a0,24(sp)
    8000556a:	65a2                	ld	a1,8(sp)
    8000556c:	f02e                	sd	a1,32(sp)
    }
    8000556e:	70e2                	ld	ra,56(sp)
    80005570:	6121                	addi	sp,sp,64
    80005572:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E:

0000000080005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>:
    pub const fn size(&self) -> usize {
    80005574:	1141                	addi	sp,sp,-16
    80005576:	e42a                	sd	a0,8(sp)
        self.size_
    80005578:	6108                	ld	a0,0(a0)
    }
    8000557a:	0141                	addi	sp,sp,16
    8000557c:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E:

000000008000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>:
    pub const fn align(&self) -> usize {
    8000557e:	1101                	addi	sp,sp,-32
    80005580:	ec06                	sd	ra,24(sp)
    80005582:	e82a                	sd	a0,16(sp)
        self.align_.get()
    80005584:	6508                	ld	a0,8(a0)
    80005586:	00014097          	auipc	ra,0x14
    8000558a:	c4e080e7          	jalr	-946(ra) # 800191d4 <_ZN4core3num7nonzero12NonZeroUsize3get17h0472924fe1637b3cE>
    8000558e:	e42a                	sd	a0,8(sp)
    80005590:	a009                	j	80005592 <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E+0x14>
    }
    80005592:	6522                	ld	a0,8(sp)
    80005594:	60e2                	ld	ra,24(sp)
    80005596:	6105                	addi	sp,sp,32
    80005598:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E:

000000008000559a <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E>:
    /// of each element in the array.
    ///
    /// On arithmetic overflow, returns `LayoutError`.
    #[unstable(feature = "alloc_layout_extra", issue = "55724")]
    #[inline]
    pub fn repeat(&self, n: usize) -> Result<(Self, usize), LayoutError> {
    8000559a:	7115                	addi	sp,sp,-224
    8000559c:	ed86                	sd	ra,216(sp)
    8000559e:	f52e                	sd	a1,168(sp)
    800055a0:	f932                	sd	a2,176(sp)
        // This cannot overflow. Quoting from the invariant of Layout:
        // > `size`, when rounded up to the nearest multiple of `align`,
        // > must not overflow (i.e., the rounded value must be less than
        // > `usize::MAX`)
        let padded_size = self.size() + self.padding_needed_for(self.align());
    800055a2:	f8aa                	sd	a0,112(sp)
    800055a4:	852e                	mv	a0,a1
    800055a6:	f4b2                	sd	a2,104(sp)
    800055a8:	f0ae                	sd	a1,96(sp)
    800055aa:	00000097          	auipc	ra,0x0
    800055ae:	fca080e7          	jalr	-54(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    800055b2:	ecaa                	sd	a0,88(sp)
    800055b4:	a009                	j	800055b6 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x1c>
    800055b6:	7506                	ld	a0,96(sp)
    800055b8:	00000097          	auipc	ra,0x0
    800055bc:	fc6080e7          	jalr	-58(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    800055c0:	e8aa                	sd	a0,80(sp)
    800055c2:	a009                	j	800055c4 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x2a>
    800055c4:	7506                	ld	a0,96(sp)
    800055c6:	65c6                	ld	a1,80(sp)
    800055c8:	00000097          	auipc	ra,0x0
    800055cc:	f18080e7          	jalr	-232(ra) # 800054e0 <_ZN4core5alloc6layout6Layout18padding_needed_for17h0dba1e24029c3ecbE>
    800055d0:	e4aa                	sd	a0,72(sp)
    800055d2:	a009                	j	800055d4 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x3a>
    800055d4:	6566                	ld	a0,88(sp)
    800055d6:	65a6                	ld	a1,72(sp)
    800055d8:	00b50633          	add	a2,a0,a1
    800055dc:	e1b2                	sd	a2,192(sp)
        let alloc_size = padded_size.checked_mul(n).ok_or(LayoutError { private: () })?;
    800055de:	8532                	mv	a0,a2
    800055e0:	75a6                	ld	a1,104(sp)
    800055e2:	e0b2                	sd	a2,64(sp)
    800055e4:	00011097          	auipc	ra,0x11
    800055e8:	e2c080e7          	jalr	-468(ra) # 80016410 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E>
    800055ec:	fc2a                	sd	a0,56(sp)
    800055ee:	f82e                	sd	a1,48(sp)
    800055f0:	a009                	j	800055f2 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x58>
    800055f2:	7562                	ld	a0,56(sp)
    800055f4:	75c2                	ld	a1,48(sp)
    800055f6:	00013097          	auipc	ra,0x13
    800055fa:	088080e7          	jalr	136(ra) # 8001867e <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E>
    800055fe:	f42a                	sd	a0,40(sp)
    80005600:	f02e                	sd	a1,32(sp)
    80005602:	a009                	j	80005604 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x6a>
    80005604:	7522                	ld	a0,40(sp)
    80005606:	7582                	ld	a1,32(sp)
    80005608:	00008097          	auipc	ra,0x8
    8000560c:	92a080e7          	jalr	-1750(ra) # 8000cf32 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc146fdf871206e38E>
    80005610:	fcaa                	sd	a0,120(sp)
    80005612:	e12e                	sd	a1,128(sp)
    80005614:	a009                	j	80005616 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x7c>
    80005616:	7566                	ld	a0,120(sp)
    80005618:	4581                	li	a1,0
    8000561a:	00b50463          	beq	a0,a1,80005622 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x88>
    8000561e:	a009                	j	80005620 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0x86>
    80005620:	a831                	j	8000563c <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0xa2>
    80005622:	650a                	ld	a0,128(sp)
    80005624:	e5aa                	sd	a0,200(sp)
    80005626:	e9aa                	sd	a0,208(sp)

        // SAFETY: self.align is already known to be valid and alloc_size has been
        // padded already.
        unsafe { Ok((Layout::from_size_align_unchecked(alloc_size, self.align()), padded_size)) }
    80005628:	7586                	ld	a1,96(sp)
    8000562a:	ec2a                	sd	a0,24(sp)
    8000562c:	852e                	mv	a0,a1
    8000562e:	00000097          	auipc	ra,0x0
    80005632:	f50080e7          	jalr	-176(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    80005636:	e82a                	sd	a0,16(sp)
    80005638:	a831                	j	80005654 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0xba>
        let alloc_size = padded_size.checked_mul(n).ok_or(LayoutError { private: () })?;
    8000563a:	0000                	unimp
    8000563c:	0000c097          	auipc	ra,0xc
    80005640:	2b0080e7          	jalr	688(ra) # 800118ec <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8d5d2700446bde9dE>
    80005644:	a009                	j	80005646 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0xac>
    80005646:	7546                	ld	a0,112(sp)
    80005648:	00008097          	auipc	ra,0x8
    8000564c:	880080e7          	jalr	-1920(ra) # 8000cec8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hf8a47798b34f298dE>
    80005650:	a009                	j	80005652 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0xb8>
    }
    80005652:	a02d                	j	8000567c <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0xe2>
        unsafe { Ok((Layout::from_size_align_unchecked(alloc_size, self.align()), padded_size)) }
    80005654:	6562                	ld	a0,24(sp)
    80005656:	65c2                	ld	a1,16(sp)
    80005658:	00000097          	auipc	ra,0x0
    8000565c:	ef6080e7          	jalr	-266(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80005660:	e42a                	sd	a0,8(sp)
    80005662:	e02e                	sd	a1,0(sp)
    80005664:	a009                	j	80005666 <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0xcc>
    80005666:	6522                	ld	a0,8(sp)
    80005668:	e92a                	sd	a0,144(sp)
    8000566a:	6582                	ld	a1,0(sp)
    8000566c:	ed2e                	sd	a1,152(sp)
    8000566e:	6606                	ld	a2,64(sp)
    80005670:	f132                	sd	a2,160(sp)
    80005672:	76c6                	ld	a3,112(sp)
    80005674:	ea90                	sd	a2,16(a3)
    80005676:	e68c                	sd	a1,8(a3)
    80005678:	e288                	sd	a0,0(a3)
    }
    8000567a:	a009                	j	8000567c <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E+0xe2>
    8000567c:	60ee                	ld	ra,216(sp)
    8000567e:	612d                	addi	sp,sp,224
    80005680:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout8dangling17h1d30c6520b8fc2d8E:

0000000080005682 <_ZN4core5alloc6layout6Layout8dangling17h1d30c6520b8fc2d8E>:
    pub const fn dangling(&self) -> NonNull<u8> {
    80005682:	1101                	addi	sp,sp,-32
    80005684:	ec06                	sd	ra,24(sp)
    80005686:	e82a                	sd	a0,16(sp)
        unsafe { NonNull::new_unchecked(self.align() as *mut u8) }
    80005688:	00000097          	auipc	ra,0x0
    8000568c:	ef6080e7          	jalr	-266(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    80005690:	e42a                	sd	a0,8(sp)
    80005692:	a009                	j	80005694 <_ZN4core5alloc6layout6Layout8dangling17h1d30c6520b8fc2d8E+0x12>
    80005694:	6522                	ld	a0,8(sp)
    80005696:	fffff097          	auipc	ra,0xfffff
    8000569a:	41a080e7          	jalr	1050(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    8000569e:	e02a                	sd	a0,0(sp)
    800056a0:	a009                	j	800056a2 <_ZN4core5alloc6layout6Layout8dangling17h1d30c6520b8fc2d8E+0x20>
    }
    800056a2:	6502                	ld	a0,0(sp)
    800056a4:	60e2                	ld	ra,24(sp)
    800056a6:	6105                	addi	sp,sp,32
    800056a8:	8082                	ret

Disassembly of section .text._ZN6kernel2fs7devices6Device4read17hc1af3a5850f94b51E:

00000000800056aa <_ZN6kernel2fs7devices6Device4read17hc1af3a5850f94b51E>:
            read: 0 as *const u8,
            write: 0 as *const u8
        }
    }

    pub fn read(&self) -> ReadFn {
    800056aa:	1101                	addi	sp,sp,-32
    800056ac:	e42a                	sd	a0,8(sp)
        let func = unsafe {
            transmute::<*const u8, ReadFn>(self.read)
    800056ae:	6108                	ld	a0,0(a0)
    800056b0:	e82a                	sd	a0,16(sp)
    800056b2:	ec2a                	sd	a0,24(sp)
    800056b4:	e02a                	sd	a0,0(sp)
    800056b6:	a009                	j	800056b8 <_ZN6kernel2fs7devices6Device4read17hc1af3a5850f94b51E+0xe>
        };
        func
    }
    800056b8:	6502                	ld	a0,0(sp)
    800056ba:	6105                	addi	sp,sp,32
    800056bc:	8082                	ret

Disassembly of section .text._ZN6kernel2fs7devices6Device5write17hc5cbbc354637b5e6E:

00000000800056be <_ZN6kernel2fs7devices6Device5write17hc5cbbc354637b5e6E>:

    pub fn write(&self) -> WriteFn {
    800056be:	1101                	addi	sp,sp,-32
    800056c0:	e42a                	sd	a0,8(sp)
        let func = unsafe {
            transmute::<*const u8, WriteFn>(self.write)
    800056c2:	6508                	ld	a0,8(a0)
    800056c4:	e82a                	sd	a0,16(sp)
    800056c6:	ec2a                	sd	a0,24(sp)
    800056c8:	e02a                	sd	a0,0(sp)
    800056ca:	a009                	j	800056cc <_ZN6kernel2fs7devices6Device5write17hc5cbbc354637b5e6E+0xe>
        };
        func
    }
    800056cc:	6502                	ld	a0,0(sp)
    800056ce:	6105                	addi	sp,sp,32
    800056d0:	8082                	ret

Disassembly of section .text._ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h05781f7372819a75E:

00000000800056d2 <_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h05781f7372819a75E>:
}

#[stable(feature = "rust1", since = "1.0.0")]
impl Debug for () {
    #[inline]
    fn fmt(&self, f: &mut Formatter<'_>) -> Result {
    800056d2:	7179                	addi	sp,sp,-48
    800056d4:	f406                	sd	ra,40(sp)
    800056d6:	ec2a                	sd	a0,24(sp)
    800056d8:	f02e                	sd	a1,32(sp)

00000000800056da <.LBB0_2>:
        f.pad("()")
    800056da:	0001f517          	auipc	a0,0x1f
    800056de:	ce650513          	addi	a0,a0,-794 # 800243c0 <.L__unnamed_1>
    800056e2:	4609                	li	a2,2
    800056e4:	e82a                	sd	a0,16(sp)
    800056e6:	852e                	mv	a0,a1
    800056e8:	65c2                	ld	a1,16(sp)
    800056ea:	0001c097          	auipc	ra,0x1c
    800056ee:	0de080e7          	jalr	222(ra) # 800217c8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E>
    800056f2:	e42a                	sd	a0,8(sp)
    800056f4:	a009                	j	800056f6 <.LBB0_2+0x1c>
    }
    800056f6:	6522                	ld	a0,8(sp)
    800056f8:	70a2                	ld	ra,40(sp)
    800056fa:	6145                	addi	sp,sp,48
    800056fc:	8082                	ret

Disassembly of section .text._ZN4core3fmt9Arguments16new_v1_formatted17h3e98f428f5d207a2E:

00000000800056fe <_ZN4core3fmt9Arguments16new_v1_formatted17h3e98f428f5d207a2E>:
    pub fn new_v1_formatted(
    800056fe:	7139                	addi	sp,sp,-64
    80005700:	e82e                	sd	a1,16(sp)
    80005702:	ec32                	sd	a2,24(sp)
    80005704:	f036                	sd	a3,32(sp)
    80005706:	f43a                	sd	a4,40(sp)
    80005708:	f83e                	sd	a5,48(sp)
    8000570a:	fc42                	sd	a6,56(sp)
        Arguments { pieces, fmt: Some(fmt), args }
    8000570c:	e03e                	sd	a5,0(sp)
    8000570e:	e442                	sd	a6,8(sp)
    80005710:	e10c                	sd	a1,0(a0)
    80005712:	e510                	sd	a2,8(a0)
    80005714:	6582                	ld	a1,0(sp)
    80005716:	6622                	ld	a2,8(sp)
    80005718:	e90c                	sd	a1,16(a0)
    8000571a:	ed10                	sd	a2,24(a0)
    8000571c:	f114                	sd	a3,32(a0)
    8000571e:	f518                	sd	a4,40(a0)
    }
    80005720:	6121                	addi	sp,sp,64
    80005722:	8082                	ret

Disassembly of section .text._ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E:

0000000080005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>:
    pub fn new_v1(pieces: &'a [&'static str], args: &'a [ArgumentV1<'a>]) -> Arguments<'a> {
    80005724:	7179                	addi	sp,sp,-48
    80005726:	e82e                	sd	a1,16(sp)
    80005728:	ec32                	sd	a2,24(sp)
    8000572a:	f036                	sd	a3,32(sp)
    8000572c:	f43a                	sd	a4,40(sp)
    8000572e:	4781                	li	a5,0
        Arguments { pieces, fmt: None, args }
    80005730:	e03e                	sd	a5,0(sp)
    80005732:	e10c                	sd	a1,0(a0)
    80005734:	e510                	sd	a2,8(a0)
    80005736:	6582                	ld	a1,0(sp)
    80005738:	6622                	ld	a2,8(sp)
    8000573a:	e90c                	sd	a1,16(a0)
    8000573c:	ed10                	sd	a2,24(a0)
    8000573e:	f114                	sd	a3,32(a0)
    80005740:	f518                	sd	a4,40(a0)
    }
    80005742:	6145                	addi	sp,sp,48
    80005744:	8082                	ret

Disassembly of section .text._ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7get_bit17h99ad8dfcddb9a62bE:

0000000080005746 <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7get_bit17h99ad8dfcddb9a62bE>:
    ($($t:ty)*) => ($(
        impl BitField for $t {
            const BIT_LENGTH: usize = ::core::mem::size_of::<Self>() as usize * 8;

            #[inline]
            fn get_bit(&self, bit: usize) -> bool {
    80005746:	7179                	addi	sp,sp,-48
    80005748:	f02a                	sd	a0,32(sp)
    8000574a:	f42e                	sd	a1,40(sp)
    8000574c:	4621                	li	a2,8
                assert!(bit < Self::BIT_LENGTH);
    8000574e:	ec2e                	sd	a1,24(sp)
    80005750:	e82a                	sd	a0,16(sp)
    80005752:	02c5e263          	bltu	a1,a2,80005776 <.LBB0_6+0x16>
    80005756:	a009                	j	80005758 <.LBB0_5>

0000000080005758 <.LBB0_5>:
    80005758:	0001f517          	auipc	a0,0x1f
    8000575c:	c6a50513          	addi	a0,a0,-918 # 800243c2 <.L__unnamed_1>

0000000080005760 <.LBB0_6>:
    80005760:	0001f617          	auipc	a2,0x1f
    80005764:	ce860613          	addi	a2,a2,-792 # 80024448 <.L__unnamed_2>
    80005768:	02800593          	li	a1,40
    8000576c:	0001b097          	auipc	ra,0x1b
    80005770:	55e080e7          	jalr	1374(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80005774:	0000                	unimp

                (*self & (1 << bit)) != 0
    80005776:	6542                	ld	a0,16(sp)
    80005778:	00054583          	lbu	a1,0(a0)
    8000577c:	6662                	ld	a2,24(sp)
    8000577e:	ff867693          	andi	a3,a2,-8
    80005782:	00767713          	andi	a4,a2,7
    80005786:	4785                	li	a5,1
    80005788:	00e79733          	sll	a4,a5,a4
    8000578c:	4781                	li	a5,0
    8000578e:	e42e                	sd	a1,8(sp)
    80005790:	e03a                	sd	a4,0(sp)
    80005792:	00f69b63          	bne	a3,a5,800057a8 <.LBB0_7>
    80005796:	a009                	j	80005798 <.LBB0_6+0x38>
    80005798:	6522                	ld	a0,8(sp)
    8000579a:	6582                	ld	a1,0(sp)
    8000579c:	00b57633          	and	a2,a0,a1
    800057a0:	00c03533          	snez	a0,a2
            }
    800057a4:	6145                	addi	sp,sp,48
    800057a6:	8082                	ret

00000000800057a8 <.LBB0_7>:
                (*self & (1 << bit)) != 0
    800057a8:	0001f517          	auipc	a0,0x1f
    800057ac:	cb850513          	addi	a0,a0,-840 # 80024460 <str.0>

00000000800057b0 <.LBB0_8>:
    800057b0:	0001f617          	auipc	a2,0x1f
    800057b4:	c9860613          	addi	a2,a2,-872 # 80024448 <.L__unnamed_2>
    800057b8:	02300593          	li	a1,35
    800057bc:	0001b097          	auipc	ra,0x1b
    800057c0:	50e080e7          	jalr	1294(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7set_bit17hef1828122bb9e00cE:

00000000800057c6 <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7set_bit17hef1828122bb9e00cE>:
                // shift away low bits
                bits >> range.start
            }

            #[inline]
            fn set_bit(&mut self, bit: usize, value: bool) -> &mut Self {
    800057c6:	7139                	addi	sp,sp,-64
    800057c8:	86b2                	mv	a3,a2
    800057ca:	f42a                	sd	a0,40(sp)
    800057cc:	f82e                	sd	a1,48(sp)
    800057ce:	02c10fa3          	sb	a2,63(sp)
    800057d2:	4621                	li	a2,8
                assert!(bit < Self::BIT_LENGTH);
    800057d4:	f02e                	sd	a1,32(sp)
    800057d6:	ec2a                	sd	a0,24(sp)
    800057d8:	e836                	sd	a3,16(sp)
    800057da:	02c5e263          	bltu	a1,a2,800057fe <.LBB1_11+0x16>
    800057de:	a009                	j	800057e0 <.LBB1_10>

00000000800057e0 <.LBB1_10>:
    800057e0:	0001f517          	auipc	a0,0x1f
    800057e4:	be250513          	addi	a0,a0,-1054 # 800243c2 <.L__unnamed_1>

00000000800057e8 <.LBB1_11>:
    800057e8:	0001f617          	auipc	a2,0x1f
    800057ec:	c6060613          	addi	a2,a2,-928 # 80024448 <.L__unnamed_2>
    800057f0:	02800593          	li	a1,40
    800057f4:	0001b097          	auipc	ra,0x1b
    800057f8:	4d6080e7          	jalr	1238(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800057fc:	0000                	unimp
    800057fe:	4501                	li	a0,0

                if value {
    80005800:	65c2                	ld	a1,16(sp)
    80005802:	02a58063          	beq	a1,a0,80005822 <.LBB1_11+0x3a>
    80005806:	a009                	j	80005808 <.LBB1_11+0x20>
                    *self |= 1 << bit;
    80005808:	7502                	ld	a0,32(sp)
    8000580a:	ff857593          	andi	a1,a0,-8
    8000580e:	00757613          	andi	a2,a0,7
    80005812:	4685                	li	a3,1
    80005814:	00c69633          	sll	a2,a3,a2
    80005818:	4681                	li	a3,0
    8000581a:	e432                	sd	a2,8(sp)
    8000581c:	04d59563          	bne	a1,a3,80005866 <.LBB1_12>
    80005820:	a831                	j	8000583c <.LBB1_11+0x54>
                } else {
                    *self &= !(1 << bit);
    80005822:	7502                	ld	a0,32(sp)
    80005824:	ff857593          	andi	a1,a0,-8
    80005828:	00757613          	andi	a2,a0,7
    8000582c:	4685                	li	a3,1
    8000582e:	00c69633          	sll	a2,a3,a2
    80005832:	4681                	li	a3,0
    80005834:	e032                	sd	a2,0(sp)
    80005836:	04d59763          	bne	a1,a3,80005884 <.LBB1_14>
    8000583a:	a809                	j	8000584c <.LBB1_11+0x64>
                    *self |= 1 << bit;
    8000583c:	6562                	ld	a0,24(sp)
    8000583e:	00050583          	lb	a1,0(a0)
    80005842:	6622                	ld	a2,8(sp)
    80005844:	8dd1                	or	a1,a1,a2
    80005846:	00b50023          	sb	a1,0(a0)
                if value {
    8000584a:	a819                	j	80005860 <.LBB1_11+0x78>
                    *self &= !(1 << bit);
    8000584c:	6502                	ld	a0,0(sp)
    8000584e:	fff54593          	not	a1,a0
    80005852:	6662                	ld	a2,24(sp)
    80005854:	00060683          	lb	a3,0(a2)
    80005858:	8df5                	and	a1,a1,a3
    8000585a:	00b60023          	sb	a1,0(a2)
                if value {
    8000585e:	a009                	j	80005860 <.LBB1_11+0x78>
                }

                self
            }
    80005860:	6562                	ld	a0,24(sp)
    80005862:	6121                	addi	sp,sp,64
    80005864:	8082                	ret

0000000080005866 <.LBB1_12>:
                    *self |= 1 << bit;
    80005866:	0001f517          	auipc	a0,0x1f
    8000586a:	bfa50513          	addi	a0,a0,-1030 # 80024460 <str.0>

000000008000586e <.LBB1_13>:
    8000586e:	0001f617          	auipc	a2,0x1f
    80005872:	bda60613          	addi	a2,a2,-1062 # 80024448 <.L__unnamed_2>
    80005876:	02300593          	li	a1,35
    8000587a:	0001b097          	auipc	ra,0x1b
    8000587e:	450080e7          	jalr	1104(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080005884 <.LBB1_14>:
                    *self &= !(1 << bit);
    80005884:	0001f517          	auipc	a0,0x1f
    80005888:	bdc50513          	addi	a0,a0,-1060 # 80024460 <str.0>

000000008000588c <.LBB1_15>:
    8000588c:	0001f617          	auipc	a2,0x1f
    80005890:	bbc60613          	addi	a2,a2,-1092 # 80024448 <.L__unnamed_2>
    80005894:	02300593          	li	a1,35
    80005898:	0001b097          	auipc	ra,0x1b
    8000589c:	432080e7          	jalr	1074(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7get_bit17h517b97e33b3f68fcE:

00000000800058a2 <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7get_bit17h517b97e33b3f68fcE>:
            fn get_bit(&self, bit: usize) -> bool {
    800058a2:	7179                	addi	sp,sp,-48
    800058a4:	f02a                	sd	a0,32(sp)
    800058a6:	f42e                	sd	a1,40(sp)
    800058a8:	04000613          	li	a2,64
                assert!(bit < Self::BIT_LENGTH);
    800058ac:	ec2e                	sd	a1,24(sp)
    800058ae:	e82a                	sd	a0,16(sp)
    800058b0:	02c5e263          	bltu	a1,a2,800058d4 <.LBB2_6+0x16>
    800058b4:	a009                	j	800058b6 <.LBB2_5>

00000000800058b6 <.LBB2_5>:
    800058b6:	0001f517          	auipc	a0,0x1f
    800058ba:	b0c50513          	addi	a0,a0,-1268 # 800243c2 <.L__unnamed_1>

00000000800058be <.LBB2_6>:
    800058be:	0001f617          	auipc	a2,0x1f
    800058c2:	b8a60613          	addi	a2,a2,-1142 # 80024448 <.L__unnamed_2>
    800058c6:	02800593          	li	a1,40
    800058ca:	0001b097          	auipc	ra,0x1b
    800058ce:	400080e7          	jalr	1024(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800058d2:	0000                	unimp
                (*self & (1 << bit)) != 0
    800058d4:	6542                	ld	a0,16(sp)
    800058d6:	610c                	ld	a1,0(a0)
    800058d8:	6662                	ld	a2,24(sp)
    800058da:	fc067693          	andi	a3,a2,-64
    800058de:	4705                	li	a4,1
    800058e0:	00c71733          	sll	a4,a4,a2
    800058e4:	4781                	li	a5,0
    800058e6:	e42e                	sd	a1,8(sp)
    800058e8:	e03a                	sd	a4,0(sp)
    800058ea:	00f69b63          	bne	a3,a5,80005900 <.LBB2_7>
    800058ee:	a009                	j	800058f0 <.LBB2_6+0x32>
    800058f0:	6522                	ld	a0,8(sp)
    800058f2:	6582                	ld	a1,0(sp)
    800058f4:	00b57633          	and	a2,a0,a1
    800058f8:	00c03533          	snez	a0,a2
            }
    800058fc:	6145                	addi	sp,sp,48
    800058fe:	8082                	ret

0000000080005900 <.LBB2_7>:
                (*self & (1 << bit)) != 0
    80005900:	0001f517          	auipc	a0,0x1f
    80005904:	b6050513          	addi	a0,a0,-1184 # 80024460 <str.0>

0000000080005908 <.LBB2_8>:
    80005908:	0001f617          	auipc	a2,0x1f
    8000590c:	b4060613          	addi	a2,a2,-1216 # 80024448 <.L__unnamed_2>
    80005910:	02300593          	li	a1,35
    80005914:	0001b097          	auipc	ra,0x1b
    80005918:	3b6080e7          	jalr	950(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7set_bit17h7ad29ded6ce22ce0E:

000000008000591e <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7set_bit17h7ad29ded6ce22ce0E>:
            fn set_bit(&mut self, bit: usize, value: bool) -> &mut Self {
    8000591e:	7139                	addi	sp,sp,-64
    80005920:	86b2                	mv	a3,a2
    80005922:	f42a                	sd	a0,40(sp)
    80005924:	f82e                	sd	a1,48(sp)
    80005926:	02c10fa3          	sb	a2,63(sp)
    8000592a:	04000613          	li	a2,64
                assert!(bit < Self::BIT_LENGTH);
    8000592e:	f02e                	sd	a1,32(sp)
    80005930:	ec2a                	sd	a0,24(sp)
    80005932:	e836                	sd	a3,16(sp)
    80005934:	02c5e263          	bltu	a1,a2,80005958 <.LBB3_11+0x16>
    80005938:	a009                	j	8000593a <.LBB3_10>

000000008000593a <.LBB3_10>:
    8000593a:	0001f517          	auipc	a0,0x1f
    8000593e:	a8850513          	addi	a0,a0,-1400 # 800243c2 <.L__unnamed_1>

0000000080005942 <.LBB3_11>:
    80005942:	0001f617          	auipc	a2,0x1f
    80005946:	b0660613          	addi	a2,a2,-1274 # 80024448 <.L__unnamed_2>
    8000594a:	02800593          	li	a1,40
    8000594e:	0001b097          	auipc	ra,0x1b
    80005952:	37c080e7          	jalr	892(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80005956:	0000                	unimp
    80005958:	4501                	li	a0,0
                if value {
    8000595a:	65c2                	ld	a1,16(sp)
    8000595c:	00a58e63          	beq	a1,a0,80005978 <.LBB3_11+0x36>
    80005960:	a009                	j	80005962 <.LBB3_11+0x20>
                    *self |= 1 << bit;
    80005962:	7502                	ld	a0,32(sp)
    80005964:	fc057593          	andi	a1,a0,-64
    80005968:	4605                	li	a2,1
    8000596a:	00a61633          	sll	a2,a2,a0
    8000596e:	4681                	li	a3,0
    80005970:	e432                	sd	a2,8(sp)
    80005972:	02d59f63          	bne	a1,a3,800059b0 <.LBB3_12>
    80005976:	a821                	j	8000598e <.LBB3_11+0x4c>
                    *self &= !(1 << bit);
    80005978:	7502                	ld	a0,32(sp)
    8000597a:	fc057593          	andi	a1,a0,-64
    8000597e:	4605                	li	a2,1
    80005980:	00a61633          	sll	a2,a2,a0
    80005984:	4681                	li	a3,0
    80005986:	e032                	sd	a2,0(sp)
    80005988:	04d59363          	bne	a1,a3,800059ce <.LBB3_14>
    8000598c:	a039                	j	8000599a <.LBB3_11+0x58>
                    *self |= 1 << bit;
    8000598e:	6562                	ld	a0,24(sp)
    80005990:	610c                	ld	a1,0(a0)
    80005992:	6622                	ld	a2,8(sp)
    80005994:	8dd1                	or	a1,a1,a2
    80005996:	e10c                	sd	a1,0(a0)
                if value {
    80005998:	a809                	j	800059aa <.LBB3_11+0x68>
                    *self &= !(1 << bit);
    8000599a:	6502                	ld	a0,0(sp)
    8000599c:	fff54593          	not	a1,a0
    800059a0:	6662                	ld	a2,24(sp)
    800059a2:	6214                	ld	a3,0(a2)
    800059a4:	8df5                	and	a1,a1,a3
    800059a6:	e20c                	sd	a1,0(a2)
                if value {
    800059a8:	a009                	j	800059aa <.LBB3_11+0x68>
            }
    800059aa:	6562                	ld	a0,24(sp)
    800059ac:	6121                	addi	sp,sp,64
    800059ae:	8082                	ret

00000000800059b0 <.LBB3_12>:
                    *self |= 1 << bit;
    800059b0:	0001f517          	auipc	a0,0x1f
    800059b4:	ab050513          	addi	a0,a0,-1360 # 80024460 <str.0>

00000000800059b8 <.LBB3_13>:
    800059b8:	0001f617          	auipc	a2,0x1f
    800059bc:	a9060613          	addi	a2,a2,-1392 # 80024448 <.L__unnamed_2>
    800059c0:	02300593          	li	a1,35
    800059c4:	0001b097          	auipc	ra,0x1b
    800059c8:	306080e7          	jalr	774(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800059ce <.LBB3_14>:
                    *self &= !(1 << bit);
    800059ce:	0001f517          	auipc	a0,0x1f
    800059d2:	a9250513          	addi	a0,a0,-1390 # 80024460 <str.0>

00000000800059d6 <.LBB3_15>:
    800059d6:	0001f617          	auipc	a2,0x1f
    800059da:	a7260613          	addi	a2,a2,-1422 # 80024448 <.L__unnamed_2>
    800059de:	02300593          	li	a1,35
    800059e2:	0001b097          	auipc	ra,0x1b
    800059e6:	2e8080e7          	jalr	744(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core10intrinsics11write_bytes17h2c81542382cc4d54E:

00000000800059ec <_ZN4core10intrinsics11write_bytes17h2c81542382cc4d54E>:
/// // Now the box is fine
/// assert_eq!(*v, 42);
/// ```
#[stable(feature = "rust1", since = "1.0.0")]
#[inline]
pub unsafe fn write_bytes<T>(dst: *mut T, val: u8, count: usize) {
    800059ec:	7179                	addi	sp,sp,-48
    800059ee:	f406                	sd	ra,40(sp)
    800059f0:	86ae                	mv	a3,a1
    800059f2:	e82a                	sd	a0,16(sp)
    800059f4:	00b10fa3          	sb	a1,31(sp)
    800059f8:	f032                	sd	a2,32(sp)
    }

    debug_assert!(is_aligned_and_not_null(dst), "attempt to write to unaligned or null pointer");

    // SAFETY: the safety contract for `write_bytes` must be upheld by the caller.
    unsafe { write_bytes(dst, val, count) }
    800059fa:	061a                	slli	a2,a2,0x6
    800059fc:	e436                	sd	a3,8(sp)
    800059fe:	0001e097          	auipc	ra,0x1e
    80005a02:	eb4080e7          	jalr	-332(ra) # 800238b2 <memset>
    80005a06:	a009                	j	80005a08 <_ZN4core10intrinsics11write_bytes17h2c81542382cc4d54E+0x1c>
}
    80005a08:	70a2                	ld	ra,40(sp)
    80005a0a:	6145                	addi	sp,sp,48
    80005a0c:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h1b2cde1854500dacE:

0000000080005a0e <_ZN4core10intrinsics19copy_nonoverlapping17h1b2cde1854500dacE>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005a0e:	7179                	addi	sp,sp,-48
    80005a10:	f406                	sd	ra,40(sp)
    80005a12:	e82a                	sd	a0,16(sp)
    80005a14:	ec2e                	sd	a1,24(sp)
    80005a16:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005a18:	0606                	slli	a2,a2,0x1
    80005a1a:	e42a                	sd	a0,8(sp)
    80005a1c:	852e                	mv	a0,a1
    80005a1e:	65a2                	ld	a1,8(sp)
    80005a20:	0001e097          	auipc	ra,0x1e
    80005a24:	e40080e7          	jalr	-448(ra) # 80023860 <memcpy>
    80005a28:	a009                	j	80005a2a <_ZN4core10intrinsics19copy_nonoverlapping17h1b2cde1854500dacE+0x1c>
}
    80005a2a:	70a2                	ld	ra,40(sp)
    80005a2c:	6145                	addi	sp,sp,48
    80005a2e:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h6a4318f11b67d4f7E:

0000000080005a30 <_ZN4core10intrinsics19copy_nonoverlapping17h6a4318f11b67d4f7E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005a30:	7179                	addi	sp,sp,-48
    80005a32:	f406                	sd	ra,40(sp)
    80005a34:	e82a                	sd	a0,16(sp)
    80005a36:	ec2e                	sd	a1,24(sp)
    80005a38:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005a3a:	0612                	slli	a2,a2,0x4
    80005a3c:	e42a                	sd	a0,8(sp)
    80005a3e:	852e                	mv	a0,a1
    80005a40:	65a2                	ld	a1,8(sp)
    80005a42:	0001e097          	auipc	ra,0x1e
    80005a46:	e1e080e7          	jalr	-482(ra) # 80023860 <memcpy>
    80005a4a:	a009                	j	80005a4c <_ZN4core10intrinsics19copy_nonoverlapping17h6a4318f11b67d4f7E+0x1c>
}
    80005a4c:	70a2                	ld	ra,40(sp)
    80005a4e:	6145                	addi	sp,sp,48
    80005a50:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h70e04db9dbb72338E:

0000000080005a52 <_ZN4core10intrinsics19copy_nonoverlapping17h70e04db9dbb72338E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005a52:	7179                	addi	sp,sp,-48
    80005a54:	f406                	sd	ra,40(sp)
    80005a56:	e82a                	sd	a0,16(sp)
    80005a58:	ec2e                	sd	a1,24(sp)
    80005a5a:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005a5c:	061a                	slli	a2,a2,0x6
    80005a5e:	e42a                	sd	a0,8(sp)
    80005a60:	852e                	mv	a0,a1
    80005a62:	65a2                	ld	a1,8(sp)
    80005a64:	0001e097          	auipc	ra,0x1e
    80005a68:	dfc080e7          	jalr	-516(ra) # 80023860 <memcpy>
    80005a6c:	a009                	j	80005a6e <_ZN4core10intrinsics19copy_nonoverlapping17h70e04db9dbb72338E+0x1c>
}
    80005a6e:	70a2                	ld	ra,40(sp)
    80005a70:	6145                	addi	sp,sp,48
    80005a72:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h725faea97d1685c1E:

0000000080005a74 <_ZN4core10intrinsics19copy_nonoverlapping17h725faea97d1685c1E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005a74:	7179                	addi	sp,sp,-48
    80005a76:	f406                	sd	ra,40(sp)
    80005a78:	e82a                	sd	a0,16(sp)
    80005a7a:	ec2e                	sd	a1,24(sp)
    80005a7c:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005a7e:	060e                	slli	a2,a2,0x3
    80005a80:	e42a                	sd	a0,8(sp)
    80005a82:	852e                	mv	a0,a1
    80005a84:	65a2                	ld	a1,8(sp)
    80005a86:	0001e097          	auipc	ra,0x1e
    80005a8a:	dda080e7          	jalr	-550(ra) # 80023860 <memcpy>
    80005a8e:	a009                	j	80005a90 <_ZN4core10intrinsics19copy_nonoverlapping17h725faea97d1685c1E+0x1c>
}
    80005a90:	70a2                	ld	ra,40(sp)
    80005a92:	6145                	addi	sp,sp,48
    80005a94:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h79862fcc9c5f6dfeE:

0000000080005a96 <_ZN4core10intrinsics19copy_nonoverlapping17h79862fcc9c5f6dfeE>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005a96:	7179                	addi	sp,sp,-48
    80005a98:	f406                	sd	ra,40(sp)
    80005a9a:	e82a                	sd	a0,16(sp)
    80005a9c:	ec2e                	sd	a1,24(sp)
    80005a9e:	f032                	sd	a2,32(sp)
    80005aa0:	4601                	li	a2,0
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005aa2:	e42a                	sd	a0,8(sp)
    80005aa4:	852e                	mv	a0,a1
    80005aa6:	65a2                	ld	a1,8(sp)
    80005aa8:	0001e097          	auipc	ra,0x1e
    80005aac:	db8080e7          	jalr	-584(ra) # 80023860 <memcpy>
    80005ab0:	a009                	j	80005ab2 <_ZN4core10intrinsics19copy_nonoverlapping17h79862fcc9c5f6dfeE+0x1c>
}
    80005ab2:	70a2                	ld	ra,40(sp)
    80005ab4:	6145                	addi	sp,sp,48
    80005ab6:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h9563a61b51500449E:

0000000080005ab8 <_ZN4core10intrinsics19copy_nonoverlapping17h9563a61b51500449E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005ab8:	7179                	addi	sp,sp,-48
    80005aba:	f406                	sd	ra,40(sp)
    80005abc:	e82a                	sd	a0,16(sp)
    80005abe:	ec2e                	sd	a1,24(sp)
    80005ac0:	f032                	sd	a2,32(sp)
    80005ac2:	07800693          	li	a3,120
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005ac6:	02d60633          	mul	a2,a2,a3
    80005aca:	e42a                	sd	a0,8(sp)
    80005acc:	852e                	mv	a0,a1
    80005ace:	65a2                	ld	a1,8(sp)
    80005ad0:	0001e097          	auipc	ra,0x1e
    80005ad4:	d90080e7          	jalr	-624(ra) # 80023860 <memcpy>
    80005ad8:	a009                	j	80005ada <_ZN4core10intrinsics19copy_nonoverlapping17h9563a61b51500449E+0x22>
}
    80005ada:	70a2                	ld	ra,40(sp)
    80005adc:	6145                	addi	sp,sp,48
    80005ade:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h977eb2abcd65823aE:

0000000080005ae0 <_ZN4core10intrinsics19copy_nonoverlapping17h977eb2abcd65823aE>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005ae0:	7179                	addi	sp,sp,-48
    80005ae2:	f406                	sd	ra,40(sp)
    80005ae4:	e82a                	sd	a0,16(sp)
    80005ae6:	ec2e                	sd	a1,24(sp)
    80005ae8:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005aea:	060a                	slli	a2,a2,0x2
    80005aec:	e42a                	sd	a0,8(sp)
    80005aee:	852e                	mv	a0,a1
    80005af0:	65a2                	ld	a1,8(sp)
    80005af2:	0001e097          	auipc	ra,0x1e
    80005af6:	d6e080e7          	jalr	-658(ra) # 80023860 <memcpy>
    80005afa:	a009                	j	80005afc <_ZN4core10intrinsics19copy_nonoverlapping17h977eb2abcd65823aE+0x1c>
}
    80005afc:	70a2                	ld	ra,40(sp)
    80005afe:	6145                	addi	sp,sp,48
    80005b00:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hac225dd597e2d360E:

0000000080005b02 <_ZN4core10intrinsics19copy_nonoverlapping17hac225dd597e2d360E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005b02:	7179                	addi	sp,sp,-48
    80005b04:	f406                	sd	ra,40(sp)
    80005b06:	e82a                	sd	a0,16(sp)
    80005b08:	ec2e                	sd	a1,24(sp)
    80005b0a:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005b0c:	060e                	slli	a2,a2,0x3
    80005b0e:	e42a                	sd	a0,8(sp)
    80005b10:	852e                	mv	a0,a1
    80005b12:	65a2                	ld	a1,8(sp)
    80005b14:	0001e097          	auipc	ra,0x1e
    80005b18:	d4c080e7          	jalr	-692(ra) # 80023860 <memcpy>
    80005b1c:	a009                	j	80005b1e <_ZN4core10intrinsics19copy_nonoverlapping17hac225dd597e2d360E+0x1c>
}
    80005b1e:	70a2                	ld	ra,40(sp)
    80005b20:	6145                	addi	sp,sp,48
    80005b22:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hb3d9626197851ba0E:

0000000080005b24 <_ZN4core10intrinsics19copy_nonoverlapping17hb3d9626197851ba0E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005b24:	7179                	addi	sp,sp,-48
    80005b26:	f406                	sd	ra,40(sp)
    80005b28:	e82a                	sd	a0,16(sp)
    80005b2a:	ec2e                	sd	a1,24(sp)
    80005b2c:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005b2e:	0616                	slli	a2,a2,0x5
    80005b30:	e42a                	sd	a0,8(sp)
    80005b32:	852e                	mv	a0,a1
    80005b34:	65a2                	ld	a1,8(sp)
    80005b36:	0001e097          	auipc	ra,0x1e
    80005b3a:	d2a080e7          	jalr	-726(ra) # 80023860 <memcpy>
    80005b3e:	a009                	j	80005b40 <_ZN4core10intrinsics19copy_nonoverlapping17hb3d9626197851ba0E+0x1c>
}
    80005b40:	70a2                	ld	ra,40(sp)
    80005b42:	6145                	addi	sp,sp,48
    80005b44:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hb8a7ef6ec1e77e87E:

0000000080005b46 <_ZN4core10intrinsics19copy_nonoverlapping17hb8a7ef6ec1e77e87E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005b46:	7179                	addi	sp,sp,-48
    80005b48:	f406                	sd	ra,40(sp)
    80005b4a:	e82a                	sd	a0,16(sp)
    80005b4c:	ec2e                	sd	a1,24(sp)
    80005b4e:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005b50:	060e                	slli	a2,a2,0x3
    80005b52:	e42a                	sd	a0,8(sp)
    80005b54:	852e                	mv	a0,a1
    80005b56:	65a2                	ld	a1,8(sp)
    80005b58:	0001e097          	auipc	ra,0x1e
    80005b5c:	d08080e7          	jalr	-760(ra) # 80023860 <memcpy>
    80005b60:	a009                	j	80005b62 <_ZN4core10intrinsics19copy_nonoverlapping17hb8a7ef6ec1e77e87E+0x1c>
}
    80005b62:	70a2                	ld	ra,40(sp)
    80005b64:	6145                	addi	sp,sp,48
    80005b66:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hbea39e0f916c166dE:

0000000080005b68 <_ZN4core10intrinsics19copy_nonoverlapping17hbea39e0f916c166dE>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005b68:	7179                	addi	sp,sp,-48
    80005b6a:	f406                	sd	ra,40(sp)
    80005b6c:	e82a                	sd	a0,16(sp)
    80005b6e:	ec2e                	sd	a1,24(sp)
    80005b70:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005b72:	e42a                	sd	a0,8(sp)
    80005b74:	852e                	mv	a0,a1
    80005b76:	65a2                	ld	a1,8(sp)
    80005b78:	0001e097          	auipc	ra,0x1e
    80005b7c:	ce8080e7          	jalr	-792(ra) # 80023860 <memcpy>
    80005b80:	a009                	j	80005b82 <_ZN4core10intrinsics19copy_nonoverlapping17hbea39e0f916c166dE+0x1a>
}
    80005b82:	70a2                	ld	ra,40(sp)
    80005b84:	6145                	addi	sp,sp,48
    80005b86:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hc3ca3e2499cc3b72E:

0000000080005b88 <_ZN4core10intrinsics19copy_nonoverlapping17hc3ca3e2499cc3b72E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80005b88:	7179                	addi	sp,sp,-48
    80005b8a:	f406                	sd	ra,40(sp)
    80005b8c:	e82a                	sd	a0,16(sp)
    80005b8e:	ec2e                	sd	a1,24(sp)
    80005b90:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80005b92:	0612                	slli	a2,a2,0x4
    80005b94:	e42a                	sd	a0,8(sp)
    80005b96:	852e                	mv	a0,a1
    80005b98:	65a2                	ld	a1,8(sp)
    80005b9a:	0001e097          	auipc	ra,0x1e
    80005b9e:	cc6080e7          	jalr	-826(ra) # 80023860 <memcpy>
    80005ba2:	a009                	j	80005ba4 <_ZN4core10intrinsics19copy_nonoverlapping17hc3ca3e2499cc3b72E+0x1c>
}
    80005ba4:	70a2                	ld	ra,40(sp)
    80005ba6:	6145                	addi	sp,sp,48
    80005ba8:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics4copy17h1abba3ce65d68c9dE:

0000000080005baa <_ZN4core10intrinsics4copy17h1abba3ce65d68c9dE>:
pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {
    80005baa:	7179                	addi	sp,sp,-48
    80005bac:	f406                	sd	ra,40(sp)
    80005bae:	e82a                	sd	a0,16(sp)
    80005bb0:	ec2e                	sd	a1,24(sp)
    80005bb2:	f032                	sd	a2,32(sp)
    80005bb4:	12000693          	li	a3,288
    unsafe { copy(src, dst, count) }
    80005bb8:	02d60633          	mul	a2,a2,a3
    80005bbc:	e42a                	sd	a0,8(sp)
    80005bbe:	852e                	mv	a0,a1
    80005bc0:	65a2                	ld	a1,8(sp)
    80005bc2:	0001e097          	auipc	ra,0x1e
    80005bc6:	cb4080e7          	jalr	-844(ra) # 80023876 <memmove>
    80005bca:	a009                	j	80005bcc <_ZN4core10intrinsics4copy17h1abba3ce65d68c9dE+0x22>
}
    80005bcc:	70a2                	ld	ra,40(sp)
    80005bce:	6145                	addi	sp,sp,48
    80005bd0:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics4copy17h82ffe9525b0a7e13E:

0000000080005bd2 <_ZN4core10intrinsics4copy17h82ffe9525b0a7e13E>:
pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {
    80005bd2:	7179                	addi	sp,sp,-48
    80005bd4:	f406                	sd	ra,40(sp)
    80005bd6:	e82a                	sd	a0,16(sp)
    80005bd8:	ec2e                	sd	a1,24(sp)
    80005bda:	f032                	sd	a2,32(sp)
    unsafe { copy(src, dst, count) }
    80005bdc:	062a                	slli	a2,a2,0xa
    80005bde:	e42a                	sd	a0,8(sp)
    80005be0:	852e                	mv	a0,a1
    80005be2:	65a2                	ld	a1,8(sp)
    80005be4:	0001e097          	auipc	ra,0x1e
    80005be8:	c92080e7          	jalr	-878(ra) # 80023876 <memmove>
    80005bec:	a009                	j	80005bee <_ZN4core10intrinsics4copy17h82ffe9525b0a7e13E+0x1c>
}
    80005bee:	70a2                	ld	ra,40(sp)
    80005bf0:	6145                	addi	sp,sp,48
    80005bf2:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics4copy17ha63a18373ccfe4abE:

0000000080005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>:
pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {
    80005bf4:	7179                	addi	sp,sp,-48
    80005bf6:	f406                	sd	ra,40(sp)
    80005bf8:	e82a                	sd	a0,16(sp)
    80005bfa:	ec2e                	sd	a1,24(sp)
    80005bfc:	f032                	sd	a2,32(sp)
    unsafe { copy(src, dst, count) }
    80005bfe:	e42a                	sd	a0,8(sp)
    80005c00:	852e                	mv	a0,a1
    80005c02:	65a2                	ld	a1,8(sp)
    80005c04:	0001e097          	auipc	ra,0x1e
    80005c08:	c72080e7          	jalr	-910(ra) # 80023876 <memmove>
    80005c0c:	a009                	j	80005c0e <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE+0x1a>
}
    80005c0e:	70a2                	ld	ra,40(sp)
    80005c10:	6145                	addi	sp,sp,48
    80005c12:	8082                	ret

Disassembly of section .text._ZN6kernel8register4sepc4read17h72f396ba007db608E:

0000000080005c14 <_ZN6kernel8register4sepc4read17h72f396ba007db608E>:
// machine exception program counter, holds the
// instruction address to which a return from
// exception will go.
#[inline]
pub unsafe fn read() -> usize {
    80005c14:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, sepc":"=r"(ret):::"volatile");
    80005c16:	14102573          	csrr	a0,sepc
    80005c1a:	e42a                	sd	a0,8(sp)
    ret
}
    80005c1c:	0141                	addi	sp,sp,16
    80005c1e:	8082                	ret

Disassembly of section .text._ZN6kernel8register4sepc5write17hb628f5972fcdd7c3E:

0000000080005c20 <_ZN6kernel8register4sepc5write17hb628f5972fcdd7c3E>:

#[inline]
pub unsafe fn write(x:usize){
    80005c20:	1141                	addi	sp,sp,-16
    80005c22:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw sepc, $0"::"r"(x)::"volatile");
    80005c24:	14151073          	csrw	sepc,a0
    80005c28:	0141                	addi	sp,sp,16
    80005c2a:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1b5bab886cb6c589E:

0000000080005c2c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1b5bab886cb6c589E>:
    /// ```
    #[stable(feature = "pointer_methods", since = "1.26.0")]
    #[must_use = "returns a new pointer rather than modifying its argument"]
    #[rustc_const_unstable(feature = "const_ptr_offset", issue = "71499")]
    #[inline]
    pub const unsafe fn add(self, count: usize) -> Self
    80005c2c:	1101                	addi	sp,sp,-32
    80005c2e:	ec06                	sd	ra,24(sp)
    80005c30:	e42a                	sd	a0,8(sp)
    80005c32:	e82e                	sd	a1,16(sp)
    where
        T: Sized,
    {
        // SAFETY: the caller must uphold the safety contract for `offset`.
        unsafe { self.offset(count as isize) }
    80005c34:	00000097          	auipc	ra,0x0
    80005c38:	046080e7          	jalr	70(ra) # 80005c7a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha1968a1ac50d96ddE>
    80005c3c:	e02a                	sd	a0,0(sp)
    80005c3e:	a009                	j	80005c40 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1b5bab886cb6c589E+0x14>
    }
    80005c40:	6502                	ld	a0,0(sp)
    80005c42:	60e2                	ld	ra,24(sp)
    80005c44:	6105                	addi	sp,sp,32
    80005c46:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE:

0000000080005c48 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    80005c48:	7179                	addi	sp,sp,-48
    80005c4a:	f406                	sd	ra,40(sp)
    80005c4c:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    80005c4e:	e82a                	sd	a0,16(sp)
    80005c50:	00000097          	auipc	ra,0x0
    80005c54:	046080e7          	jalr	70(ra) # 80005c96 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0722e5aa5a1d6cd0E>
    80005c58:	e42a                	sd	a0,8(sp)
    80005c5a:	a009                	j	80005c5c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE+0x14>
    80005c5c:	4501                	li	a0,0
    80005c5e:	65a2                	ld	a1,8(sp)
    80005c60:	00a58663          	beq	a1,a0,80005c6c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE+0x24>
    80005c64:	a009                	j	80005c66 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE+0x1e>
    80005c66:	4501                	li	a0,0
    80005c68:	ec2a                	sd	a0,24(sp)
    80005c6a:	a021                	j	80005c72 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE+0x2a>
    80005c6c:	6542                	ld	a0,16(sp)
    80005c6e:	ec2a                	sd	a0,24(sp)
    80005c70:	a009                	j	80005c72 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE+0x2a>
    }
    80005c72:	6562                	ld	a0,24(sp)
    80005c74:	70a2                	ld	ra,40(sp)
    80005c76:	6145                	addi	sp,sp,48
    80005c78:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha1968a1ac50d96ddE:

0000000080005c7a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha1968a1ac50d96ddE>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    80005c7a:	1101                	addi	sp,sp,-32
    80005c7c:	e42a                	sd	a0,8(sp)
    80005c7e:	e82e                	sd	a1,16(sp)
    80005c80:	42800613          	li	a2,1064
        unsafe { intrinsics::offset(self, count) as *mut T }
    80005c84:	02c585b3          	mul	a1,a1,a2
    80005c88:	952e                	add	a0,a0,a1
    80005c8a:	ec2a                	sd	a0,24(sp)
    80005c8c:	e02a                	sd	a0,0(sp)
    80005c8e:	a009                	j	80005c90 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha1968a1ac50d96ddE+0x16>
    }
    80005c90:	6502                	ld	a0,0(sp)
    80005c92:	6105                	addi	sp,sp,32
    80005c94:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0722e5aa5a1d6cd0E:

0000000080005c96 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0722e5aa5a1d6cd0E>:
    pub const fn is_null(self) -> bool {
    80005c96:	7179                	addi	sp,sp,-48
    80005c98:	f406                	sd	ra,40(sp)
    80005c9a:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    80005c9c:	ec2a                	sd	a0,24(sp)
    80005c9e:	a009                	j	80005ca0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0722e5aa5a1d6cd0E+0xa>
    80005ca0:	4501                	li	a0,0
    80005ca2:	65e2                	ld	a1,24(sp)
    80005ca4:	e82a                	sd	a0,16(sp)
    80005ca6:	852e                	mv	a0,a1
    80005ca8:	65c2                	ld	a1,16(sp)
    80005caa:	0001b097          	auipc	ra,0x1b
    80005cae:	d04080e7          	jalr	-764(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    80005cb2:	e42a                	sd	a0,8(sp)
    80005cb4:	a009                	j	80005cb6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0722e5aa5a1d6cd0E+0x20>
    }
    80005cb6:	6522                	ld	a0,8(sp)
    80005cb8:	70a2                	ld	ra,40(sp)
    80005cba:	6145                	addi	sp,sp,48
    80005cbc:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE:

0000000080005cbe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE>:
    pub const fn is_null(self) -> bool {
    80005cbe:	7179                	addi	sp,sp,-48
    80005cc0:	f406                	sd	ra,40(sp)
    80005cc2:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    80005cc4:	ec2a                	sd	a0,24(sp)
    80005cc6:	a009                	j	80005cc8 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE+0xa>
    80005cc8:	4501                	li	a0,0
    80005cca:	65e2                	ld	a1,24(sp)
    80005ccc:	e82a                	sd	a0,16(sp)
    80005cce:	852e                	mv	a0,a1
    80005cd0:	65c2                	ld	a1,16(sp)
    80005cd2:	0001b097          	auipc	ra,0x1b
    80005cd6:	cdc080e7          	jalr	-804(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    80005cda:	e42a                	sd	a0,8(sp)
    80005cdc:	a009                	j	80005cde <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE+0x20>
    }
    80005cde:	6522                	ld	a0,8(sp)
    80005ce0:	70a2                	ld	ra,40(sp)
    80005ce2:	6145                	addi	sp,sp,48
    80005ce4:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h2b9b836b7d2cbc5aE:

0000000080005ce6 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h2b9b836b7d2cbc5aE>:
    /// ```
    #[stable(feature = "pointer_methods", since = "1.26.0")]
    #[must_use = "returns a new pointer rather than modifying its argument"]
    #[rustc_const_unstable(feature = "const_ptr_offset", issue = "71499")]
    #[inline]
    pub const unsafe fn add(self, count: usize) -> Self
    80005ce6:	1101                	addi	sp,sp,-32
    80005ce8:	ec06                	sd	ra,24(sp)
    80005cea:	e42a                	sd	a0,8(sp)
    80005cec:	e82e                	sd	a1,16(sp)
    where
        T: Sized,
    {
        // SAFETY: the caller must uphold the safety contract for `offset`.
        unsafe { self.offset(count as isize) }
    80005cee:	00000097          	auipc	ra,0x0
    80005cf2:	014080e7          	jalr	20(ra) # 80005d02 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4e4675f56877c4a0E>
    80005cf6:	e02a                	sd	a0,0(sp)
    80005cf8:	a009                	j	80005cfa <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h2b9b836b7d2cbc5aE+0x14>
    }
    80005cfa:	6502                	ld	a0,0(sp)
    80005cfc:	60e2                	ld	ra,24(sp)
    80005cfe:	6105                	addi	sp,sp,32
    80005d00:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4e4675f56877c4a0E:

0000000080005d02 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4e4675f56877c4a0E>:
    pub const unsafe fn offset(self, count: isize) -> *const T
    80005d02:	1101                	addi	sp,sp,-32
    80005d04:	e42a                	sd	a0,8(sp)
    80005d06:	e82e                	sd	a1,16(sp)
    80005d08:	42800613          	li	a2,1064
        unsafe { intrinsics::offset(self, count) }
    80005d0c:	02c585b3          	mul	a1,a1,a2
    80005d10:	952e                	add	a0,a0,a1
    80005d12:	ec2a                	sd	a0,24(sp)
    80005d14:	e02a                	sd	a0,0(sp)
    80005d16:	a009                	j	80005d18 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4e4675f56877c4a0E+0x16>
    }
    80005d18:	6502                	ld	a0,0(sp)
    80005d1a:	6105                	addi	sp,sp,32
    80005d1c:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5f9be0dc4cb5e613E:

0000000080005d1e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5f9be0dc4cb5e613E>:
    pub const fn is_null(self) -> bool {
    80005d1e:	7179                	addi	sp,sp,-48
    80005d20:	f406                	sd	ra,40(sp)
    80005d22:	f02a                	sd	a0,32(sp)
        (self as *const u8).guaranteed_eq(null())
    80005d24:	ec2a                	sd	a0,24(sp)
    80005d26:	a009                	j	80005d28 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5f9be0dc4cb5e613E+0xa>
    80005d28:	4501                	li	a0,0
    80005d2a:	65e2                	ld	a1,24(sp)
    80005d2c:	e82a                	sd	a0,16(sp)
    80005d2e:	852e                	mv	a0,a1
    80005d30:	65c2                	ld	a1,16(sp)
    80005d32:	0001b097          	auipc	ra,0x1b
    80005d36:	c40080e7          	jalr	-960(ra) # 80020972 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h99e80ad9ba777ad7E>
    80005d3a:	e42a                	sd	a0,8(sp)
    80005d3c:	a009                	j	80005d3e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5f9be0dc4cb5e613E+0x20>
    }
    80005d3e:	6522                	ld	a0,8(sp)
    80005d40:	70a2                	ld	ra,40(sp)
    80005d42:	6145                	addi	sp,sp,48
    80005d44:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7f1394d59155a160E:

0000000080005d46 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7f1394d59155a160E>:
    /// assert_eq!(x, &[3, 4, 6]);
    /// ```
    #[stable(feature = "rust1", since = "1.0.0")]
    #[rustc_const_unstable(feature = "const_ptr_offset", issue = "71499")]
    #[inline]
    pub const fn as_mut_ptr(&mut self) -> *mut T {
    80005d46:	1141                	addi	sp,sp,-16
    80005d48:	e02a                	sd	a0,0(sp)
    80005d4a:	e42e                	sd	a1,8(sp)
        self as *mut [T] as *mut T
    }
    80005d4c:	0141                	addi	sp,sp,16
    80005d4e:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE:

0000000080005d50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE>:
    pub const fn len(&self) -> usize {
    80005d50:	1101                	addi	sp,sp,-32
    80005d52:	e82a                	sd	a0,16(sp)
    80005d54:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    80005d56:	e02a                	sd	a0,0(sp)
    80005d58:	e42e                	sd	a1,8(sp)
    }
    80005d5a:	852e                	mv	a0,a1
    80005d5c:	6105                	addi	sp,sp,32
    80005d5e:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h65350c64fa8e0a0eE:

0000000080005d60 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h65350c64fa8e0a0eE>:
    /// assert_eq!(iterator.next(), Some(&4));
    /// assert_eq!(iterator.next(), None);
    /// ```
    #[stable(feature = "rust1", since = "1.0.0")]
    #[inline]
    pub fn iter(&self) -> Iter<'_, T> {
    80005d60:	7179                	addi	sp,sp,-48
    80005d62:	f406                	sd	ra,40(sp)
    80005d64:	ec2a                	sd	a0,24(sp)
    80005d66:	f02e                	sd	a1,32(sp)
        Iter::new(self)
    80005d68:	0000d097          	auipc	ra,0xd
    80005d6c:	04c080e7          	jalr	76(ra) # 80012db4 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E>
    80005d70:	e82a                	sd	a0,16(sp)
    80005d72:	e42e                	sd	a1,8(sp)
    80005d74:	a009                	j	80005d76 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h65350c64fa8e0a0eE+0x16>
    }
    80005d76:	6542                	ld	a0,16(sp)
    80005d78:	65a2                	ld	a1,8(sp)
    80005d7a:	70a2                	ld	ra,40(sp)
    80005d7c:	6145                	addi	sp,sp,48
    80005d7e:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h00ccdc1c984c0484E:

0000000080005d80 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h00ccdc1c984c0484E>:
    pub const fn as_ptr(&self) -> *const T {
    80005d80:	1141                	addi	sp,sp,-16
    80005d82:	e02a                	sd	a0,0(sp)
    80005d84:	e42e                	sd	a1,8(sp)
    }
    80005d86:	0141                	addi	sp,sp,16
    80005d88:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h9b081b90140a954cE:

0000000080005d8a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h9b081b90140a954cE>:
    /// }
    /// assert_eq!(x, &[3, 4, 6]);
    /// ```
    #[stable(feature = "rust1", since = "1.0.0")]
    #[inline]
    pub fn iter_mut(&mut self) -> IterMut<'_, T> {
    80005d8a:	7179                	addi	sp,sp,-48
    80005d8c:	f406                	sd	ra,40(sp)
    80005d8e:	ec2a                	sd	a0,24(sp)
    80005d90:	f02e                	sd	a1,32(sp)
        IterMut::new(self)
    80005d92:	0000d097          	auipc	ra,0xd
    80005d96:	3e2080e7          	jalr	994(ra) # 80013174 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE>
    80005d9a:	e82a                	sd	a0,16(sp)
    80005d9c:	e42e                	sd	a1,8(sp)
    80005d9e:	a009                	j	80005da0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h9b081b90140a954cE+0x16>
    }
    80005da0:	6542                	ld	a0,16(sp)
    80005da2:	65a2                	ld	a1,8(sp)
    80005da4:	70a2                	ld	ra,40(sp)
    80005da6:	6145                	addi	sp,sp,48
    80005da8:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process5sleep17h6f528152a54896a9E:

0000000080005daa <_ZN6kernel7process7process7Process5sleep17h6f528152a54896a9E>:
        drop(pmeta)
    }

    /// Atomically release lock and sleep on chan
    /// Reacquires lock when awakened.
    pub fn sleep<T>(&self, channel: usize, lock: SpinlockGuard<'_, T>) {
    80005daa:	7135                	addi	sp,sp,-160
    80005dac:	ed06                	sd	ra,152(sp)
    80005dae:	f8aa                	sd	a0,112(sp)
    80005db0:	fcae                	sd	a1,120(sp)
    80005db2:	e132                	sd	a2,128(sp)
        // change p->state and then call sched.
        // Once we hold p->lock, we can be
        // guaranteed that we won't miss any wakeup
        // (wakeup locks p->lock)
        // so it's okay to release lk;
        let mut guard = self.meta.acquire();
    80005db4:	ecaa                	sd	a0,88(sp)
    80005db6:	e8b2                	sd	a2,80(sp)
    80005db8:	e4ae                	sd	a1,72(sp)
    80005dba:	ffffd097          	auipc	ra,0xffffd
    80005dbe:	952080e7          	jalr	-1710(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80005dc2:	f0aa                	sd	a0,96(sp)
    80005dc4:	a009                	j	80005dc6 <_ZN6kernel7process7process7Process5sleep17h6f528152a54896a9E+0x1c>
        drop(lock);
    80005dc6:	6546                	ld	a0,80(sp)
    80005dc8:	00008097          	auipc	ra,0x8
    80005dcc:	c2a080e7          	jalr	-982(ra) # 8000d9f2 <_ZN4core3mem4drop17hc7855bb71645f11bE>
    80005dd0:	a009                	j	80005dd2 <_ZN6kernel7process7process7Process5sleep17h6f528152a54896a9E+0x28>
    80005dd2:	1088                	addi	a0,sp,96
        // Go to sleep.
        guard.channel = channel;
    80005dd4:	ffffe097          	auipc	ra,0xffffe
    80005dd8:	c26080e7          	jalr	-986(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005ddc:	e0aa                	sd	a0,64(sp)
    80005dde:	a009                	j	80005de0 <_ZN6kernel7process7process7Process5sleep17h6f528152a54896a9E+0x36>
    80005de0:	6526                	ld	a0,72(sp)
    80005de2:	6586                	ld	a1,64(sp)
    80005de4:	e188                	sd	a0,0(a1)
    80005de6:	1088                	addi	a0,sp,96
        guard.set_state(ProcState::SLEEPING);
    80005de8:	ffffe097          	auipc	ra,0xffffe
    80005dec:	c12080e7          	jalr	-1006(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005df0:	fc2a                	sd	a0,56(sp)
    80005df2:	a009                	j	80005df4 <_ZN6kernel7process7process7Process5sleep17h6f528152a54896a9E+0x4a>
    80005df4:	4509                	li	a0,2
    80005df6:	06a107a3          	sb	a0,111(sp)
    80005dfa:	75e2                	ld	a1,56(sp)
    80005dfc:	f82a                	sd	a0,48(sp)
    80005dfe:	852e                	mv	a0,a1
    80005e00:	75c2                	ld	a1,48(sp)
    80005e02:	0000c097          	auipc	ra,0xc
    80005e06:	c9c080e7          	jalr	-868(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    80005e0a:	a009                	j	80005e0c <.LBB13_12>

0000000080005e0c <.LBB13_12>:
        unsafe {
            let my_cpu = CPU_MANAGER.mycpu();
    80005e0c:	00069517          	auipc	a0,0x69
    80005e10:	1f450513          	addi	a0,a0,500 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80005e14:	00018097          	auipc	ra,0x18
    80005e18:	8d8080e7          	jalr	-1832(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    80005e1c:	85aa                	mv	a1,a0
    80005e1e:	e52a                	sd	a0,136(sp)
    80005e20:	f42e                	sd	a1,40(sp)
    80005e22:	a009                	j	80005e24 <.LBB13_12+0x18>
            let ctx = (&mut (*self.data.get())).get_context_mut();      
    80005e24:	6566                	ld	a0,88(sp)
    80005e26:	04050513          	addi	a0,a0,64
    80005e2a:	00011097          	auipc	ra,0x11
    80005e2e:	b5e080e7          	jalr	-1186(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80005e32:	f02a                	sd	a0,32(sp)
    80005e34:	a009                	j	80005e36 <.LBB13_12+0x2a>
    80005e36:	7502                	ld	a0,32(sp)
    80005e38:	0000c097          	auipc	ra,0xc
    80005e3c:	d2c080e7          	jalr	-724(ra) # 80011b64 <_ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E>
    80005e40:	85aa                	mv	a1,a0
    80005e42:	e92a                	sd	a0,144(sp)
    80005e44:	ec2e                	sd	a1,24(sp)
    80005e46:	a009                	j	80005e48 <.LBB13_12+0x3c>
            // get schedule process
            guard = my_cpu.sched(
                guard, 
    80005e48:	7586                	ld	a1,96(sp)
            guard = my_cpu.sched(
    80005e4a:	7522                	ld	a0,40(sp)
    80005e4c:	6662                	ld	a2,24(sp)
    80005e4e:	00018097          	auipc	ra,0x18
    80005e52:	b30080e7          	jalr	-1232(ra) # 8001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>
    80005e56:	e82a                	sd	a0,16(sp)
    80005e58:	a009                	j	80005e5a <.LBB13_12+0x4e>
    80005e5a:	6542                	ld	a0,16(sp)
    80005e5c:	f0aa                	sd	a0,96(sp)
    80005e5e:	1088                	addi	a0,sp,96
                ctx
            );
            // Tide up
            guard.channel = 0;
    80005e60:	ffffe097          	auipc	ra,0xffffe
    80005e64:	b9a080e7          	jalr	-1126(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005e68:	e42a                	sd	a0,8(sp)
    80005e6a:	a009                	j	80005e6c <.LBB13_12+0x60>
    80005e6c:	4501                	li	a0,0
    80005e6e:	65a2                	ld	a1,8(sp)
    80005e70:	e188                	sd	a0,0(a1)
            drop(guard);
    80005e72:	7506                	ld	a0,96(sp)
    80005e74:	00008097          	auipc	ra,0x8
    80005e78:	a32080e7          	jalr	-1486(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    80005e7c:	a009                	j	80005e7e <.LBB13_12+0x72>
        }
    }
    80005e7e:	60ea                	ld	ra,152(sp)
    80005e80:	610d                	addi	sp,sp,160
    80005e82:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE:

0000000080005e84 <_ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE>:
    pub fn sleep<T>(&self, channel: usize, lock: SpinlockGuard<'_, T>) {
    80005e84:	7135                	addi	sp,sp,-160
    80005e86:	ed06                	sd	ra,152(sp)
    80005e88:	f8aa                	sd	a0,112(sp)
    80005e8a:	fcae                	sd	a1,120(sp)
    80005e8c:	e132                	sd	a2,128(sp)
        let mut guard = self.meta.acquire();
    80005e8e:	ecaa                	sd	a0,88(sp)
    80005e90:	e8b2                	sd	a2,80(sp)
    80005e92:	e4ae                	sd	a1,72(sp)
    80005e94:	ffffd097          	auipc	ra,0xffffd
    80005e98:	878080e7          	jalr	-1928(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80005e9c:	f0aa                	sd	a0,96(sp)
    80005e9e:	a009                	j	80005ea0 <_ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE+0x1c>
        drop(lock);
    80005ea0:	6546                	ld	a0,80(sp)
    80005ea2:	00008097          	auipc	ra,0x8
    80005ea6:	a9e080e7          	jalr	-1378(ra) # 8000d940 <_ZN4core3mem4drop17h6097269dfa89368aE>
    80005eaa:	a009                	j	80005eac <_ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE+0x28>
    80005eac:	1088                	addi	a0,sp,96
        guard.channel = channel;
    80005eae:	ffffe097          	auipc	ra,0xffffe
    80005eb2:	b4c080e7          	jalr	-1204(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005eb6:	e0aa                	sd	a0,64(sp)
    80005eb8:	a009                	j	80005eba <_ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE+0x36>
    80005eba:	6526                	ld	a0,72(sp)
    80005ebc:	6586                	ld	a1,64(sp)
    80005ebe:	e188                	sd	a0,0(a1)
    80005ec0:	1088                	addi	a0,sp,96
        guard.set_state(ProcState::SLEEPING);
    80005ec2:	ffffe097          	auipc	ra,0xffffe
    80005ec6:	b38080e7          	jalr	-1224(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005eca:	fc2a                	sd	a0,56(sp)
    80005ecc:	a009                	j	80005ece <_ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE+0x4a>
    80005ece:	4509                	li	a0,2
    80005ed0:	06a107a3          	sb	a0,111(sp)
    80005ed4:	75e2                	ld	a1,56(sp)
    80005ed6:	f82a                	sd	a0,48(sp)
    80005ed8:	852e                	mv	a0,a1
    80005eda:	75c2                	ld	a1,48(sp)
    80005edc:	0000c097          	auipc	ra,0xc
    80005ee0:	bc2080e7          	jalr	-1086(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    80005ee4:	a009                	j	80005ee6 <.LBB14_12>

0000000080005ee6 <.LBB14_12>:
            let my_cpu = CPU_MANAGER.mycpu();
    80005ee6:	00069517          	auipc	a0,0x69
    80005eea:	11a50513          	addi	a0,a0,282 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80005eee:	00017097          	auipc	ra,0x17
    80005ef2:	7fe080e7          	jalr	2046(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    80005ef6:	85aa                	mv	a1,a0
    80005ef8:	e52a                	sd	a0,136(sp)
    80005efa:	f42e                	sd	a1,40(sp)
    80005efc:	a009                	j	80005efe <.LBB14_12+0x18>
            let ctx = (&mut (*self.data.get())).get_context_mut();      
    80005efe:	6566                	ld	a0,88(sp)
    80005f00:	04050513          	addi	a0,a0,64
    80005f04:	00011097          	auipc	ra,0x11
    80005f08:	a84080e7          	jalr	-1404(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80005f0c:	f02a                	sd	a0,32(sp)
    80005f0e:	a009                	j	80005f10 <.LBB14_12+0x2a>
    80005f10:	7502                	ld	a0,32(sp)
    80005f12:	0000c097          	auipc	ra,0xc
    80005f16:	c52080e7          	jalr	-942(ra) # 80011b64 <_ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E>
    80005f1a:	85aa                	mv	a1,a0
    80005f1c:	e92a                	sd	a0,144(sp)
    80005f1e:	ec2e                	sd	a1,24(sp)
    80005f20:	a009                	j	80005f22 <.LBB14_12+0x3c>
                guard, 
    80005f22:	7586                	ld	a1,96(sp)
            guard = my_cpu.sched(
    80005f24:	7522                	ld	a0,40(sp)
    80005f26:	6662                	ld	a2,24(sp)
    80005f28:	00018097          	auipc	ra,0x18
    80005f2c:	a56080e7          	jalr	-1450(ra) # 8001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>
    80005f30:	e82a                	sd	a0,16(sp)
    80005f32:	a009                	j	80005f34 <.LBB14_12+0x4e>
    80005f34:	6542                	ld	a0,16(sp)
    80005f36:	f0aa                	sd	a0,96(sp)
    80005f38:	1088                	addi	a0,sp,96
            guard.channel = 0;
    80005f3a:	ffffe097          	auipc	ra,0xffffe
    80005f3e:	ac0080e7          	jalr	-1344(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005f42:	e42a                	sd	a0,8(sp)
    80005f44:	a009                	j	80005f46 <.LBB14_12+0x60>
    80005f46:	4501                	li	a0,0
    80005f48:	65a2                	ld	a1,8(sp)
    80005f4a:	e188                	sd	a0,0(a1)
            drop(guard);
    80005f4c:	7506                	ld	a0,96(sp)
    80005f4e:	00008097          	auipc	ra,0x8
    80005f52:	958080e7          	jalr	-1704(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    80005f56:	a009                	j	80005f58 <.LBB14_12+0x72>
    }
    80005f58:	60ea                	ld	ra,152(sp)
    80005f5a:	610d                	addi	sp,sp,160
    80005f5c:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E:

0000000080005f5e <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E>:
    pub fn sleep<T>(&self, channel: usize, lock: SpinlockGuard<'_, T>) {
    80005f5e:	7135                	addi	sp,sp,-160
    80005f60:	ed06                	sd	ra,152(sp)
    80005f62:	f8aa                	sd	a0,112(sp)
    80005f64:	fcae                	sd	a1,120(sp)
    80005f66:	e132                	sd	a2,128(sp)
        let mut guard = self.meta.acquire();
    80005f68:	ecaa                	sd	a0,88(sp)
    80005f6a:	e8b2                	sd	a2,80(sp)
    80005f6c:	e4ae                	sd	a1,72(sp)
    80005f6e:	ffffc097          	auipc	ra,0xffffc
    80005f72:	79e080e7          	jalr	1950(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80005f76:	f0aa                	sd	a0,96(sp)
    80005f78:	a009                	j	80005f7a <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E+0x1c>
        drop(lock);
    80005f7a:	6546                	ld	a0,80(sp)
    80005f7c:	00008097          	auipc	ra,0x8
    80005f80:	972080e7          	jalr	-1678(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    80005f84:	a009                	j	80005f86 <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E+0x28>
    80005f86:	1088                	addi	a0,sp,96
        guard.channel = channel;
    80005f88:	ffffe097          	auipc	ra,0xffffe
    80005f8c:	a72080e7          	jalr	-1422(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005f90:	e0aa                	sd	a0,64(sp)
    80005f92:	a009                	j	80005f94 <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E+0x36>
    80005f94:	6526                	ld	a0,72(sp)
    80005f96:	6586                	ld	a1,64(sp)
    80005f98:	e188                	sd	a0,0(a1)
    80005f9a:	1088                	addi	a0,sp,96
        guard.set_state(ProcState::SLEEPING);
    80005f9c:	ffffe097          	auipc	ra,0xffffe
    80005fa0:	a5e080e7          	jalr	-1442(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80005fa4:	fc2a                	sd	a0,56(sp)
    80005fa6:	a009                	j	80005fa8 <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E+0x4a>
    80005fa8:	4509                	li	a0,2
    80005faa:	06a107a3          	sb	a0,111(sp)
    80005fae:	75e2                	ld	a1,56(sp)
    80005fb0:	f82a                	sd	a0,48(sp)
    80005fb2:	852e                	mv	a0,a1
    80005fb4:	75c2                	ld	a1,48(sp)
    80005fb6:	0000c097          	auipc	ra,0xc
    80005fba:	ae8080e7          	jalr	-1304(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    80005fbe:	a009                	j	80005fc0 <.LBB15_12>

0000000080005fc0 <.LBB15_12>:
            let my_cpu = CPU_MANAGER.mycpu();
    80005fc0:	00069517          	auipc	a0,0x69
    80005fc4:	04050513          	addi	a0,a0,64 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80005fc8:	00017097          	auipc	ra,0x17
    80005fcc:	724080e7          	jalr	1828(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    80005fd0:	85aa                	mv	a1,a0
    80005fd2:	e52a                	sd	a0,136(sp)
    80005fd4:	f42e                	sd	a1,40(sp)
    80005fd6:	a009                	j	80005fd8 <.LBB15_12+0x18>
            let ctx = (&mut (*self.data.get())).get_context_mut();      
    80005fd8:	6566                	ld	a0,88(sp)
    80005fda:	04050513          	addi	a0,a0,64
    80005fde:	00011097          	auipc	ra,0x11
    80005fe2:	9aa080e7          	jalr	-1622(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80005fe6:	f02a                	sd	a0,32(sp)
    80005fe8:	a009                	j	80005fea <.LBB15_12+0x2a>
    80005fea:	7502                	ld	a0,32(sp)
    80005fec:	0000c097          	auipc	ra,0xc
    80005ff0:	b78080e7          	jalr	-1160(ra) # 80011b64 <_ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E>
    80005ff4:	85aa                	mv	a1,a0
    80005ff6:	e92a                	sd	a0,144(sp)
    80005ff8:	ec2e                	sd	a1,24(sp)
    80005ffa:	a009                	j	80005ffc <.LBB15_12+0x3c>
                guard, 
    80005ffc:	7586                	ld	a1,96(sp)
            guard = my_cpu.sched(
    80005ffe:	7522                	ld	a0,40(sp)
    80006000:	6662                	ld	a2,24(sp)
    80006002:	00018097          	auipc	ra,0x18
    80006006:	97c080e7          	jalr	-1668(ra) # 8001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>
    8000600a:	e82a                	sd	a0,16(sp)
    8000600c:	a009                	j	8000600e <.LBB15_12+0x4e>
    8000600e:	6542                	ld	a0,16(sp)
    80006010:	f0aa                	sd	a0,96(sp)
    80006012:	1088                	addi	a0,sp,96
            guard.channel = 0;
    80006014:	ffffe097          	auipc	ra,0xffffe
    80006018:	9e6080e7          	jalr	-1562(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8000601c:	e42a                	sd	a0,8(sp)
    8000601e:	a009                	j	80006020 <.LBB15_12+0x60>
    80006020:	4501                	li	a0,0
    80006022:	65a2                	ld	a1,8(sp)
    80006024:	e188                	sd	a0,0(a1)
            drop(guard);
    80006026:	7506                	ld	a0,96(sp)
    80006028:	00008097          	auipc	ra,0x8
    8000602c:	87e080e7          	jalr	-1922(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    80006030:	a009                	j	80006032 <.LBB15_12+0x72>
    }
    80006032:	60ea                	ld	ra,152(sp)
    80006034:	610d                	addi	sp,sp,160
    80006036:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process5sleep17ha58964a638b57238E:

0000000080006038 <_ZN6kernel7process7process7Process5sleep17ha58964a638b57238E>:
    pub fn sleep<T>(&self, channel: usize, lock: SpinlockGuard<'_, T>) {
    80006038:	7135                	addi	sp,sp,-160
    8000603a:	ed06                	sd	ra,152(sp)
    8000603c:	f8aa                	sd	a0,112(sp)
    8000603e:	fcae                	sd	a1,120(sp)
    80006040:	e132                	sd	a2,128(sp)
        let mut guard = self.meta.acquire();
    80006042:	ecaa                	sd	a0,88(sp)
    80006044:	e8b2                	sd	a2,80(sp)
    80006046:	e4ae                	sd	a1,72(sp)
    80006048:	ffffc097          	auipc	ra,0xffffc
    8000604c:	6c4080e7          	jalr	1732(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80006050:	f0aa                	sd	a0,96(sp)
    80006052:	a009                	j	80006054 <_ZN6kernel7process7process7Process5sleep17ha58964a638b57238E+0x1c>
        drop(lock);
    80006054:	6546                	ld	a0,80(sp)
    80006056:	00008097          	auipc	ra,0x8
    8000605a:	924080e7          	jalr	-1756(ra) # 8000d97a <_ZN4core3mem4drop17h8799ff770ebf2dd0E>
    8000605e:	a009                	j	80006060 <_ZN6kernel7process7process7Process5sleep17ha58964a638b57238E+0x28>
    80006060:	1088                	addi	a0,sp,96
        guard.channel = channel;
    80006062:	ffffe097          	auipc	ra,0xffffe
    80006066:	998080e7          	jalr	-1640(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8000606a:	e0aa                	sd	a0,64(sp)
    8000606c:	a009                	j	8000606e <_ZN6kernel7process7process7Process5sleep17ha58964a638b57238E+0x36>
    8000606e:	6526                	ld	a0,72(sp)
    80006070:	6586                	ld	a1,64(sp)
    80006072:	e188                	sd	a0,0(a1)
    80006074:	1088                	addi	a0,sp,96
        guard.set_state(ProcState::SLEEPING);
    80006076:	ffffe097          	auipc	ra,0xffffe
    8000607a:	984080e7          	jalr	-1660(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8000607e:	fc2a                	sd	a0,56(sp)
    80006080:	a009                	j	80006082 <_ZN6kernel7process7process7Process5sleep17ha58964a638b57238E+0x4a>
    80006082:	4509                	li	a0,2
    80006084:	06a107a3          	sb	a0,111(sp)
    80006088:	75e2                	ld	a1,56(sp)
    8000608a:	f82a                	sd	a0,48(sp)
    8000608c:	852e                	mv	a0,a1
    8000608e:	75c2                	ld	a1,48(sp)
    80006090:	0000c097          	auipc	ra,0xc
    80006094:	a0e080e7          	jalr	-1522(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    80006098:	a009                	j	8000609a <.LBB16_12>

000000008000609a <.LBB16_12>:
            let my_cpu = CPU_MANAGER.mycpu();
    8000609a:	00069517          	auipc	a0,0x69
    8000609e:	f6650513          	addi	a0,a0,-154 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    800060a2:	00017097          	auipc	ra,0x17
    800060a6:	64a080e7          	jalr	1610(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    800060aa:	85aa                	mv	a1,a0
    800060ac:	e52a                	sd	a0,136(sp)
    800060ae:	f42e                	sd	a1,40(sp)
    800060b0:	a009                	j	800060b2 <.LBB16_12+0x18>
            let ctx = (&mut (*self.data.get())).get_context_mut();      
    800060b2:	6566                	ld	a0,88(sp)
    800060b4:	04050513          	addi	a0,a0,64
    800060b8:	00011097          	auipc	ra,0x11
    800060bc:	8d0080e7          	jalr	-1840(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    800060c0:	f02a                	sd	a0,32(sp)
    800060c2:	a009                	j	800060c4 <.LBB16_12+0x2a>
    800060c4:	7502                	ld	a0,32(sp)
    800060c6:	0000c097          	auipc	ra,0xc
    800060ca:	a9e080e7          	jalr	-1378(ra) # 80011b64 <_ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E>
    800060ce:	85aa                	mv	a1,a0
    800060d0:	e92a                	sd	a0,144(sp)
    800060d2:	ec2e                	sd	a1,24(sp)
    800060d4:	a009                	j	800060d6 <.LBB16_12+0x3c>
                guard, 
    800060d6:	7586                	ld	a1,96(sp)
            guard = my_cpu.sched(
    800060d8:	7522                	ld	a0,40(sp)
    800060da:	6662                	ld	a2,24(sp)
    800060dc:	00018097          	auipc	ra,0x18
    800060e0:	8a2080e7          	jalr	-1886(ra) # 8001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>
    800060e4:	e82a                	sd	a0,16(sp)
    800060e6:	a009                	j	800060e8 <.LBB16_12+0x4e>
    800060e8:	6542                	ld	a0,16(sp)
    800060ea:	f0aa                	sd	a0,96(sp)
    800060ec:	1088                	addi	a0,sp,96
            guard.channel = 0;
    800060ee:	ffffe097          	auipc	ra,0xffffe
    800060f2:	90c080e7          	jalr	-1780(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    800060f6:	e42a                	sd	a0,8(sp)
    800060f8:	a009                	j	800060fa <.LBB16_12+0x60>
    800060fa:	4501                	li	a0,0
    800060fc:	65a2                	ld	a1,8(sp)
    800060fe:	e188                	sd	a0,0(a1)
            drop(guard);
    80006100:	7506                	ld	a0,96(sp)
    80006102:	00007097          	auipc	ra,0x7
    80006106:	7a4080e7          	jalr	1956(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8000610a:	a009                	j	8000610c <.LBB16_12+0x72>
    }
    8000610c:	60ea                	ld	ra,152(sp)
    8000610e:	610d                	addi	sp,sp,160
    80006110:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process5sleep17hc96bd88cc1d866b8E:

0000000080006112 <_ZN6kernel7process7process7Process5sleep17hc96bd88cc1d866b8E>:
    pub fn sleep<T>(&self, channel: usize, lock: SpinlockGuard<'_, T>) {
    80006112:	7135                	addi	sp,sp,-160
    80006114:	ed06                	sd	ra,152(sp)
    80006116:	f8aa                	sd	a0,112(sp)
    80006118:	fcae                	sd	a1,120(sp)
    8000611a:	e132                	sd	a2,128(sp)
        let mut guard = self.meta.acquire();
    8000611c:	ecaa                	sd	a0,88(sp)
    8000611e:	e8b2                	sd	a2,80(sp)
    80006120:	e4ae                	sd	a1,72(sp)
    80006122:	ffffc097          	auipc	ra,0xffffc
    80006126:	5ea080e7          	jalr	1514(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8000612a:	f0aa                	sd	a0,96(sp)
    8000612c:	a009                	j	8000612e <_ZN6kernel7process7process7Process5sleep17hc96bd88cc1d866b8E+0x1c>
        drop(lock);
    8000612e:	6546                	ld	a0,80(sp)
    80006130:	00007097          	auipc	ra,0x7
    80006134:	7f8080e7          	jalr	2040(ra) # 8000d928 <_ZN4core3mem4drop17h5cfedcef037f9974E>
    80006138:	a009                	j	8000613a <_ZN6kernel7process7process7Process5sleep17hc96bd88cc1d866b8E+0x28>
    8000613a:	1088                	addi	a0,sp,96
        guard.channel = channel;
    8000613c:	ffffe097          	auipc	ra,0xffffe
    80006140:	8be080e7          	jalr	-1858(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80006144:	e0aa                	sd	a0,64(sp)
    80006146:	a009                	j	80006148 <_ZN6kernel7process7process7Process5sleep17hc96bd88cc1d866b8E+0x36>
    80006148:	6526                	ld	a0,72(sp)
    8000614a:	6586                	ld	a1,64(sp)
    8000614c:	e188                	sd	a0,0(a1)
    8000614e:	1088                	addi	a0,sp,96
        guard.set_state(ProcState::SLEEPING);
    80006150:	ffffe097          	auipc	ra,0xffffe
    80006154:	8aa080e7          	jalr	-1878(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80006158:	fc2a                	sd	a0,56(sp)
    8000615a:	a009                	j	8000615c <_ZN6kernel7process7process7Process5sleep17hc96bd88cc1d866b8E+0x4a>
    8000615c:	4509                	li	a0,2
    8000615e:	06a107a3          	sb	a0,111(sp)
    80006162:	75e2                	ld	a1,56(sp)
    80006164:	f82a                	sd	a0,48(sp)
    80006166:	852e                	mv	a0,a1
    80006168:	75c2                	ld	a1,48(sp)
    8000616a:	0000c097          	auipc	ra,0xc
    8000616e:	934080e7          	jalr	-1740(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    80006172:	a009                	j	80006174 <.LBB17_12>

0000000080006174 <.LBB17_12>:
            let my_cpu = CPU_MANAGER.mycpu();
    80006174:	00069517          	auipc	a0,0x69
    80006178:	e8c50513          	addi	a0,a0,-372 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000617c:	00017097          	auipc	ra,0x17
    80006180:	570080e7          	jalr	1392(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    80006184:	85aa                	mv	a1,a0
    80006186:	e52a                	sd	a0,136(sp)
    80006188:	f42e                	sd	a1,40(sp)
    8000618a:	a009                	j	8000618c <.LBB17_12+0x18>
            let ctx = (&mut (*self.data.get())).get_context_mut();      
    8000618c:	6566                	ld	a0,88(sp)
    8000618e:	04050513          	addi	a0,a0,64
    80006192:	00010097          	auipc	ra,0x10
    80006196:	7f6080e7          	jalr	2038(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8000619a:	f02a                	sd	a0,32(sp)
    8000619c:	a009                	j	8000619e <.LBB17_12+0x2a>
    8000619e:	7502                	ld	a0,32(sp)
    800061a0:	0000c097          	auipc	ra,0xc
    800061a4:	9c4080e7          	jalr	-1596(ra) # 80011b64 <_ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E>
    800061a8:	85aa                	mv	a1,a0
    800061aa:	e92a                	sd	a0,144(sp)
    800061ac:	ec2e                	sd	a1,24(sp)
    800061ae:	a009                	j	800061b0 <.LBB17_12+0x3c>
                guard, 
    800061b0:	7586                	ld	a1,96(sp)
            guard = my_cpu.sched(
    800061b2:	7522                	ld	a0,40(sp)
    800061b4:	6662                	ld	a2,24(sp)
    800061b6:	00017097          	auipc	ra,0x17
    800061ba:	7c8080e7          	jalr	1992(ra) # 8001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>
    800061be:	e82a                	sd	a0,16(sp)
    800061c0:	a009                	j	800061c2 <.LBB17_12+0x4e>
    800061c2:	6542                	ld	a0,16(sp)
    800061c4:	f0aa                	sd	a0,96(sp)
    800061c6:	1088                	addi	a0,sp,96
            guard.channel = 0;
    800061c8:	ffffe097          	auipc	ra,0xffffe
    800061cc:	832080e7          	jalr	-1998(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    800061d0:	e42a                	sd	a0,8(sp)
    800061d2:	a009                	j	800061d4 <.LBB17_12+0x60>
    800061d4:	4501                	li	a0,0
    800061d6:	65a2                	ld	a1,8(sp)
    800061d8:	e188                	sd	a0,0(a1)
            drop(guard);
    800061da:	7506                	ld	a0,96(sp)
    800061dc:	00007097          	auipc	ra,0x7
    800061e0:	6ca080e7          	jalr	1738(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    800061e4:	a009                	j	800061e6 <.LBB17_12+0x72>
    }
    800061e6:	60ea                	ld	ra,152(sp)
    800061e8:	610d                	addi	sp,sp,160
    800061ea:	8082                	ret

Disassembly of section .text._ZN6kernel7console7console4putc17h9d26d9a7319197b4E:

00000000800061ec <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E>:
        }
    }
}

/// Put a single character to console. 
pub(crate) fn putc(c: u8) {
    800061ec:	1101                	addi	sp,sp,-32
    800061ee:	ec06                	sd	ra,24(sp)
    800061f0:	0ff57593          	zext.b	a1,a0
    800061f4:	862a                	mv	a2,a0
    800061f6:	00a10ba3          	sb	a0,23(sp)
    800061fa:	4521                	li	a0,8
    if c == CTRL_BS {
    800061fc:	e432                	sd	a2,8(sp)
    800061fe:	00a59963          	bne	a1,a0,80006210 <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x24>
    80006202:	a009                	j	80006204 <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x18>
    80006204:	4521                	li	a0,8
        putc_sync(CTRL_BS);
    80006206:	00002097          	auipc	ra,0x2
    8000620a:	3fe080e7          	jalr	1022(ra) # 80008604 <_ZN6kernel7console4uart9putc_sync17h1cbaf4ecd54ce4ceE>
    8000620e:	a039                	j	8000621c <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x30>
        putc_sync(b' ');
        putc_sync(CTRL_BS);
    } else {
        putc_sync(c);
    80006210:	6522                	ld	a0,8(sp)
    80006212:	00002097          	auipc	ra,0x2
    80006216:	3f2080e7          	jalr	1010(ra) # 80008604 <_ZN6kernel7console4uart9putc_sync17h1cbaf4ecd54ce4ceE>
    8000621a:	a839                	j	80006238 <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x4c>
    8000621c:	02000513          	li	a0,32
        putc_sync(b' ');
    80006220:	00002097          	auipc	ra,0x2
    80006224:	3e4080e7          	jalr	996(ra) # 80008604 <_ZN6kernel7console4uart9putc_sync17h1cbaf4ecd54ce4ceE>
    80006228:	a009                	j	8000622a <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x3e>
    8000622a:	4521                	li	a0,8
        putc_sync(CTRL_BS);
    8000622c:	00002097          	auipc	ra,0x2
    80006230:	3d8080e7          	jalr	984(ra) # 80008604 <_ZN6kernel7console4uart9putc_sync17h1cbaf4ecd54ce4ceE>
    80006234:	a009                	j	80006236 <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x4a>
    if c == CTRL_BS {
    80006236:	a011                	j	8000623a <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x4e>
    80006238:	a009                	j	8000623a <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E+0x4e>
    }
}
    8000623a:	60e2                	ld	ra,24(sp)
    8000623c:	6105                	addi	sp,sp,32
    8000623e:	8082                	ret

Disassembly of section .text._ZN6kernel7console7console13console_write17h16dde0bf731c8a28E:

0000000080006240 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E>:
    }
    Some(0)
}

/// User write to the console go here. 
pub(super) fn console_write(
    80006240:	7155                	addi	sp,sp,-208
    80006242:	e586                	sd	ra,200(sp)
    80006244:	86aa                	mv	a3,a0
    80006246:	e0ae                	sd	a1,64(sp)
    80006248:	0aa103a3          	sb	a0,167(sp)
    8000624c:	f532                	sd	a2,168(sp)
    8000624e:	4501                	li	a0,0
    is_user: bool,
    mut src: usize,
    size: usize
) -> Option<usize> {
    for i in 0..size {
    80006250:	ecaa                	sd	a0,88(sp)
    80006252:	f0b2                	sd	a2,96(sp)
    80006254:	85b2                	mv	a1,a2
    80006256:	fc32                	sd	a2,56(sp)
    80006258:	f836                	sd	a3,48(sp)
    8000625a:	0001a097          	auipc	ra,0x1a
    8000625e:	850080e7          	jalr	-1968(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    80006262:	f42a                	sd	a0,40(sp)
    80006264:	f02e                	sd	a1,32(sp)
    80006266:	a009                	j	80006268 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x28>
    80006268:	7522                	ld	a0,40(sp)
    8000626a:	f4aa                	sd	a0,104(sp)
    8000626c:	7582                	ld	a1,32(sp)
    8000626e:	f8ae                	sd	a1,112(sp)
    80006270:	a009                	j	80006272 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x32>
    80006272:	10a8                	addi	a0,sp,104
    80006274:	00019097          	auipc	ra,0x19
    80006278:	7c8080e7          	jalr	1992(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000627c:	fcaa                	sd	a0,120(sp)
    8000627e:	e12e                	sd	a1,128(sp)
    80006280:	a009                	j	80006282 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x42>
    80006282:	7566                	ld	a0,120(sp)
    80006284:	4581                	li	a1,0
    80006286:	00b50463          	beq	a0,a1,8000628e <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x4e>
    8000628a:	a009                	j	8000628c <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x4c>
    8000628c:	a039                	j	8000629a <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x5a>
            return Some(i)
        }
        UART.putc(c);
        src += 1;
    }
    Some(size)
    8000628e:	7562                	ld	a0,56(sp)
    80006290:	e8aa                	sd	a0,80(sp)
    80006292:	4585                	li	a1,1
    80006294:	e4ae                	sd	a1,72(sp)
}
    80006296:	a8ad                	j	80006310 <.LBB1_16+0x26>
    for i in 0..size {
    80006298:	0000                	unimp
    8000629a:	650a                	ld	a0,128(sp)
    8000629c:	f92a                	sd	a0,176(sp)
    8000629e:	fd2a                	sd	a0,184(sp)
    800062a0:	e1aa                	sd	a0,192(sp)
    800062a2:	4581                	li	a1,0
        let mut c = 0u8;
    800062a4:	08b107a3          	sb	a1,143(sp)
        if copy_to_kernel(&mut c as *mut u8, is_user, src, 1).is_err() {
    800062a8:	6606                	ld	a2,64(sp)
    800062aa:	08f10593          	addi	a1,sp,143
    800062ae:	4685                	li	a3,1
    800062b0:	ec2a                	sd	a0,24(sp)
    800062b2:	852e                	mv	a0,a1
    800062b4:	75c2                	ld	a1,48(sp)
    800062b6:	00009097          	auipc	ra,0x9
    800062ba:	806080e7          	jalr	-2042(ra) # 8000eabc <_ZN6kernel6memory14copy_to_kernel17hdbaa2aea54d3530eE>
    800062be:	e92a                	sd	a0,144(sp)
    800062c0:	ed2e                	sd	a1,152(sp)
    800062c2:	a009                	j	800062c4 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x84>
    800062c4:	0908                	addi	a0,sp,144
    800062c6:	00007097          	auipc	ra,0x7
    800062ca:	9b8080e7          	jalr	-1608(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    800062ce:	e82a                	sd	a0,16(sp)
    800062d0:	a009                	j	800062d2 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x92>
    800062d2:	4501                	li	a0,0
    800062d4:	65c2                	ld	a1,16(sp)
    800062d6:	00a58863          	beq	a1,a0,800062e6 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0xa6>
    800062da:	a009                	j	800062dc <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x9c>
            return Some(i)
    800062dc:	6562                	ld	a0,24(sp)
    800062de:	e8aa                	sd	a0,80(sp)
    800062e0:	4585                	li	a1,1
    800062e2:	e4ae                	sd	a1,72(sp)
}
    800062e4:	a035                	j	80006310 <.LBB1_16+0x26>
        UART.putc(c);
    800062e6:	08f10583          	lb	a1,143(sp)

00000000800062ea <.LBB1_16>:
    800062ea:	00030517          	auipc	a0,0x30
    800062ee:	b4e50513          	addi	a0,a0,-1202 # 80035e38 <_ZN6kernel7console4uart4UART17hc32d6c0da573df73E>
    800062f2:	00011097          	auipc	ra,0x11
    800062f6:	c3a080e7          	jalr	-966(ra) # 80016f2c <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4putc17he64b05db7d2daa05E>
    800062fa:	a009                	j	800062fc <.LBB1_16+0x12>
        src += 1;
    800062fc:	6506                	ld	a0,64(sp)
    800062fe:	00150593          	addi	a1,a0,1
    80006302:	e42e                	sd	a1,8(sp)
    80006304:	00a5eb63          	bltu	a1,a0,8000631a <.LBB1_17>
    80006308:	a009                	j	8000630a <.LBB1_16+0x20>
    8000630a:	6522                	ld	a0,8(sp)
    8000630c:	e0aa                	sd	a0,64(sp)
    for i in 0..size {
    8000630e:	b795                	j	80006272 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E+0x32>
}
    80006310:	6526                	ld	a0,72(sp)
    80006312:	65c6                	ld	a1,80(sp)
    80006314:	60ae                	ld	ra,200(sp)
    80006316:	6169                	addi	sp,sp,208
    80006318:	8082                	ret

000000008000631a <.LBB1_17>:
        src += 1;
    8000631a:	0001e517          	auipc	a0,0x1e
    8000631e:	1a650513          	addi	a0,a0,422 # 800244c0 <str.0>

0000000080006322 <.LBB1_18>:
    80006322:	0001e617          	auipc	a2,0x1e
    80006326:	17e60613          	addi	a2,a2,382 # 800244a0 <.L__unnamed_1>
    8000632a:	45f1                	li	a1,28
    8000632c:	0001b097          	auipc	ra,0x1b
    80006330:	99e080e7          	jalr	-1634(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7console7console12console_intr17hdd8efd451c5130d6E:

0000000080006336 <_ZN6kernel7console7console12console_intr17hdd8efd451c5130d6E>:
/// The normal routine is: 
/// 1. user input;
/// 2. uart handler interrupt;
/// 3. console handle interrupt. 
/// 4. console echo back input or do extra controlling. 
pub(super) fn console_intr(c: u8) {
    80006336:	710d                	addi	sp,sp,-352
    80006338:	ee86                	sd	ra,344(sp)
    8000633a:	85aa                	mv	a1,a0
    8000633c:	14a107a3          	sb	a0,335(sp)

0000000080006340 <.LBB2_76>:
    let mut console = CONSOLE.acquire();
    80006340:	0002e517          	auipc	a0,0x2e
    80006344:	12050513          	addi	a0,a0,288 # 80034460 <_ZN6kernel7console7console7CONSOLE17haf33ba8e0e21c177E>
    80006348:	e22e                	sd	a1,256(sp)
    8000634a:	ffffc097          	auipc	ra,0xffffc
    8000634e:	d78080e7          	jalr	-648(ra) # 800020c2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h1ea99168cdebb0e1E>
    80006352:	ea2a                	sd	a0,272(sp)
    80006354:	a009                	j	80006356 <.LBB2_76+0x16>

    match c {
        CTRL_PRINT_PROCESS => {
    80006356:	6512                	ld	a0,256(sp)
    80006358:	0ff57593          	zext.b	a1,a0
    8000635c:	4621                	li	a2,8
    8000635e:	12c58963          	beq	a1,a2,80006490 <.LBB2_77+0xf2>
    80006362:	a009                	j	80006364 <.LBB2_76+0x24>
    80006364:	6512                	ld	a0,256(sp)
    80006366:	0ff57593          	zext.b	a1,a0
    8000636a:	4641                	li	a2,16
    8000636c:	02c58963          	beq	a1,a2,8000639e <.LBB2_77>
    80006370:	a009                	j	80006372 <.LBB2_76+0x32>
    80006372:	6512                	ld	a0,256(sp)
    80006374:	0ff57593          	zext.b	a1,a0
    80006378:	4655                	li	a2,21
    8000637a:	02c58c63          	beq	a1,a2,800063b2 <.LBB2_77+0x14>
    8000637e:	a009                	j	80006380 <.LBB2_76+0x40>
    80006380:	6512                	ld	a0,256(sp)
    80006382:	0ff57593          	zext.b	a1,a0
    80006386:	07f00613          	li	a2,127
    8000638a:	10c58363          	beq	a1,a2,80006490 <.LBB2_77+0xf2>
    8000638e:	a009                	j	80006390 <.LBB2_76+0x50>
            }
        },

        _ => {
            // echo back
            if c != 0 && (console.edit_index - console.read_index).0 < INPUT_BUF {
    80006390:	6512                	ld	a0,256(sp)
    80006392:	0ff57593          	zext.b	a1,a0
    80006396:	4601                	li	a2,0
    80006398:	16c58a63          	beq	a1,a2,8000650c <.LBB2_77+0x16e>
    8000639c:	aaa5                	j	80006514 <.LBB2_77+0x176>

000000008000639e <.LBB2_77>:
                PROC_MANAGER.proc_dump();
    8000639e:	00056517          	auipc	a0,0x56
    800063a2:	b6250513          	addi	a0,a0,-1182 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    800063a6:	00017097          	auipc	ra,0x17
    800063aa:	0f2080e7          	jalr	242(ra) # 8001d498 <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE>
    800063ae:	a009                	j	800063b0 <.LBB2_77+0x12>
    match c {
    800063b0:	a61d                	j	800066d6 <.LBB2_78+0x1a>
    800063b2:	0a08                	addi	a0,sp,272
            while console.edit_index != console.write_index &&
    800063b4:	ffffd097          	auipc	ra,0xffffd
    800063b8:	48a080e7          	jalr	1162(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    800063bc:	fdaa                	sd	a0,248(sp)
    800063be:	a02d                	j	800063e8 <.LBB2_77+0x4a>
    800063c0:	4505                	li	a0,1
    800063c2:	10a10fa3          	sb	a0,287(sp)
    800063c6:	a821                	j	800063de <.LBB2_77+0x40>
    800063c8:	4501                	li	a0,0
    800063ca:	10a10fa3          	sb	a0,287(sp)
    800063ce:	a801                	j	800063de <.LBB2_77+0x40>
    800063d0:	0a08                	addi	a0,sp,272
            console.buf[(console.edit_index - Wrapping(1)).0 % INPUT_BUF] != CTRL_LF {
    800063d2:	ffffd097          	auipc	ra,0xffffd
    800063d6:	46c080e7          	jalr	1132(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    800063da:	f9aa                	sd	a0,240(sp)
    800063dc:	a835                	j	80006418 <.LBB2_77+0x7a>
            while console.edit_index != console.write_index &&
    800063de:	11f14503          	lbu	a0,287(sp)
    800063e2:	8905                	andi	a0,a0,1
    800063e4:	ed3d                	bnez	a0,80006462 <.LBB2_77+0xc4>
    800063e6:	a8ad                	j	80006460 <.LBB2_77+0xc2>
    800063e8:	756e                	ld	a0,248(sp)
    800063ea:	0541                	addi	a0,a0,16
    800063ec:	0a0c                	addi	a1,sp,272
    800063ee:	f5aa                	sd	a0,232(sp)
    800063f0:	852e                	mv	a0,a1
    800063f2:	ffffd097          	auipc	ra,0xffffd
    800063f6:	44c080e7          	jalr	1100(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    800063fa:	f1aa                	sd	a0,224(sp)
    800063fc:	a009                	j	800063fe <.LBB2_77+0x60>
    800063fe:	750e                	ld	a0,224(sp)
    80006400:	00850593          	addi	a1,a0,8
    80006404:	752e                	ld	a0,232(sp)
    80006406:	00001097          	auipc	ra,0x1
    8000640a:	614080e7          	jalr	1556(ra) # 80007a1a <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h06a595a60ebf50d1E>
    8000640e:	edaa                	sd	a0,216(sp)
    80006410:	a009                	j	80006412 <.LBB2_77+0x74>
    80006412:	656e                	ld	a0,216(sp)
    80006414:	fd55                	bnez	a0,800063d0 <.LBB2_77+0x32>
    80006416:	bf4d                	j	800063c8 <.LBB2_77+0x2a>
    80006418:	0a08                	addi	a0,sp,272
            console.buf[(console.edit_index - Wrapping(1)).0 % INPUT_BUF] != CTRL_LF {
    8000641a:	ffffd097          	auipc	ra,0xffffd
    8000641e:	424080e7          	jalr	1060(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    80006422:	e9aa                	sd	a0,208(sp)
    80006424:	a009                	j	80006426 <.LBB2_77+0x88>
    80006426:	654e                	ld	a0,208(sp)
    80006428:	6908                	ld	a0,16(a0)
    8000642a:	4585                	li	a1,1
    8000642c:	f22e                	sd	a1,288(sp)
    8000642e:	fffff097          	auipc	ra,0xfffff
    80006432:	f62080e7          	jalr	-158(ra) # 80005390 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17hdd61030f480377c8E>
    80006436:	e5aa                	sd	a0,200(sp)
    80006438:	a009                	j	8000643a <.LBB2_77+0x9c>
    8000643a:	652e                	ld	a0,200(sp)
    8000643c:	07f57593          	andi	a1,a0,127
    80006440:	07f00613          	li	a2,127
    80006444:	e1ae                	sd	a1,192(sp)
    80006446:	2ab66d63          	bltu	a2,a1,80006700 <.LBB2_80>
    8000644a:	a009                	j	8000644c <.LBB2_77+0xae>
    8000644c:	754e                	ld	a0,240(sp)
    8000644e:	658e                	ld	a1,192(sp)
    80006450:	00b50633          	add	a2,a0,a1
    80006454:	01864603          	lbu	a2,24(a2)
    80006458:	46a9                	li	a3,10
            while console.edit_index != console.write_index &&
    8000645a:	f6d613e3          	bne	a2,a3,800063c0 <.LBB2_77+0x22>
    8000645e:	b7ad                	j	800063c8 <.LBB2_77+0x2a>
    match c {
    80006460:	ac9d                	j	800066d6 <.LBB2_78+0x1a>
    80006462:	0a08                	addi	a0,sp,272
                console.edit_index -= Wrapping(1);
    80006464:	ffffd097          	auipc	ra,0xffffd
    80006468:	518080e7          	jalr	1304(ra) # 8000397c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E>
    8000646c:	fd2a                	sd	a0,184(sp)
    8000646e:	a009                	j	80006470 <.LBB2_77+0xd2>
    80006470:	756a                	ld	a0,184(sp)
    80006472:	0541                	addi	a0,a0,16
    80006474:	4585                	li	a1,1
    80006476:	f62e                	sd	a1,296(sp)
    80006478:	fffff097          	auipc	ra,0xfffff
    8000647c:	f5c080e7          	jalr	-164(ra) # 800053d4 <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..SubAssign$GT$10sub_assign17h264a97eeb238b98aE>
    80006480:	a009                	j	80006482 <.LBB2_77+0xe4>
    80006482:	4521                	li	a0,8
                putc(CTRL_BS);
    80006484:	00000097          	auipc	ra,0x0
    80006488:	d68080e7          	jalr	-664(ra) # 800061ec <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E>
    8000648c:	a009                	j	8000648e <.LBB2_77+0xf0>
            while console.edit_index != console.write_index &&
    8000648e:	b715                	j	800063b2 <.LBB2_77+0x14>
    80006490:	0a08                	addi	a0,sp,272
            if console.edit_index != console.write_index {
    80006492:	ffffd097          	auipc	ra,0xffffd
    80006496:	3ac080e7          	jalr	940(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    8000649a:	f92a                	sd	a0,176(sp)
    8000649c:	a009                	j	8000649e <.LBB2_77+0x100>
    8000649e:	754a                	ld	a0,176(sp)
    800064a0:	0541                	addi	a0,a0,16
    800064a2:	0a0c                	addi	a1,sp,272
    800064a4:	f52a                	sd	a0,168(sp)
    800064a6:	852e                	mv	a0,a1
    800064a8:	ffffd097          	auipc	ra,0xffffd
    800064ac:	396080e7          	jalr	918(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    800064b0:	f12a                	sd	a0,160(sp)
    800064b2:	a009                	j	800064b4 <.LBB2_77+0x116>
    800064b4:	750a                	ld	a0,160(sp)
    800064b6:	00850593          	addi	a1,a0,8
    800064ba:	752a                	ld	a0,168(sp)
    800064bc:	00001097          	auipc	ra,0x1
    800064c0:	55e080e7          	jalr	1374(ra) # 80007a1a <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h06a595a60ebf50d1E>
    800064c4:	ed2a                	sd	a0,152(sp)
    800064c6:	a009                	j	800064c8 <.LBB2_77+0x12a>
    800064c8:	4501                	li	a0,0
    800064ca:	65ea                	ld	a1,152(sp)
    800064cc:	00a58a63          	beq	a1,a0,800064e0 <.LBB2_77+0x142>
    800064d0:	a009                	j	800064d2 <.LBB2_77+0x134>
    800064d2:	0a08                	addi	a0,sp,272
                console.edit_index -= Wrapping(1);
    800064d4:	ffffd097          	auipc	ra,0xffffd
    800064d8:	4a8080e7          	jalr	1192(ra) # 8000397c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E>
    800064dc:	e92a                	sd	a0,144(sp)
    800064de:	a011                	j	800064e2 <.LBB2_77+0x144>
            if console.edit_index != console.write_index {
    800064e0:	a00d                	j	80006502 <.LBB2_77+0x164>
                console.edit_index -= Wrapping(1);
    800064e2:	654a                	ld	a0,144(sp)
    800064e4:	0541                	addi	a0,a0,16
    800064e6:	4585                	li	a1,1
    800064e8:	fa2e                	sd	a1,304(sp)
    800064ea:	fffff097          	auipc	ra,0xfffff
    800064ee:	eea080e7          	jalr	-278(ra) # 800053d4 <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..SubAssign$GT$10sub_assign17h264a97eeb238b98aE>
    800064f2:	a009                	j	800064f4 <.LBB2_77+0x156>
    800064f4:	4521                	li	a0,8
                putc(CTRL_BS);
    800064f6:	00000097          	auipc	ra,0x0
    800064fa:	cf6080e7          	jalr	-778(ra) # 800061ec <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E>
    800064fe:	a009                	j	80006500 <.LBB2_77+0x162>
            if console.edit_index != console.write_index {
    80006500:	a009                	j	80006502 <.LBB2_77+0x164>
    match c {
    80006502:	aad1                	j	800066d6 <.LBB2_78+0x1a>
    80006504:	4505                	li	a0,1
            if c != 0 && (console.edit_index - console.read_index).0 < INPUT_BUF {
    80006506:	12a10f23          	sb	a0,318(sp)
    8000650a:	a821                	j	80006522 <.LBB2_77+0x184>
    8000650c:	4501                	li	a0,0
    8000650e:	12a10f23          	sb	a0,318(sp)
    80006512:	a801                	j	80006522 <.LBB2_77+0x184>
    80006514:	0a08                	addi	a0,sp,272
    80006516:	ffffd097          	auipc	ra,0xffffd
    8000651a:	328080e7          	jalr	808(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    8000651e:	e52a                	sd	a0,136(sp)
    80006520:	a031                	j	8000652c <.LBB2_77+0x18e>
    80006522:	13e14503          	lbu	a0,318(sp)
    80006526:	8905                	andi	a0,a0,1
    80006528:	ed05                	bnez	a0,80006560 <.LBB2_77+0x1c2>
    8000652a:	a091                	j	8000656e <.LBB2_77+0x1d0>
    8000652c:	652a                	ld	a0,136(sp)
    8000652e:	6908                	ld	a0,16(a0)
    80006530:	0a0c                	addi	a1,sp,272
    80006532:	e12a                	sd	a0,128(sp)
    80006534:	852e                	mv	a0,a1
    80006536:	ffffd097          	auipc	ra,0xffffd
    8000653a:	308080e7          	jalr	776(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    8000653e:	fcaa                	sd	a0,120(sp)
    80006540:	a009                	j	80006542 <.LBB2_77+0x1a4>
    80006542:	7566                	ld	a0,120(sp)
    80006544:	610c                	ld	a1,0(a0)
    80006546:	650a                	ld	a0,128(sp)
    80006548:	fffff097          	auipc	ra,0xfffff
    8000654c:	e48080e7          	jalr	-440(ra) # 80005390 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17hdd61030f480377c8E>
    80006550:	f8aa                	sd	a0,112(sp)
    80006552:	a009                	j	80006554 <.LBB2_77+0x1b6>
    80006554:	08000513          	li	a0,128
    80006558:	75c6                	ld	a1,112(sp)
    8000655a:	faa5e5e3          	bltu	a1,a0,80006504 <.LBB2_77+0x166>
    8000655e:	b77d                	j	8000650c <.LBB2_77+0x16e>
                let c = if c == CTRL_CR { CTRL_LF } else { c };
    80006560:	6512                	ld	a0,256(sp)
    80006562:	0ff57593          	zext.b	a1,a0
    80006566:	4635                	li	a2,13
    80006568:	00c58463          	beq	a1,a2,80006570 <.LBB2_77+0x1d2>
    8000656c:	a031                	j	80006578 <.LBB2_77+0x1da>
            if c != 0 && (console.edit_index - console.read_index).0 < INPUT_BUF {
    8000656e:	a29d                	j	800066d4 <.LBB2_78+0x18>
    80006570:	4529                	li	a0,10
                let c = if c == CTRL_CR { CTRL_LF } else { c };
    80006572:	12a10fa3          	sb	a0,319(sp)
    80006576:	a029                	j	80006580 <.LBB2_77+0x1e2>
    80006578:	6512                	ld	a0,256(sp)
    8000657a:	12a10fa3          	sb	a0,319(sp)
    8000657e:	a009                	j	80006580 <.LBB2_77+0x1e2>
                putc(c);
    80006580:	13f10503          	lb	a0,319(sp)
    80006584:	00000097          	auipc	ra,0x0
    80006588:	c68080e7          	jalr	-920(ra) # 800061ec <_ZN6kernel7console7console4putc17h9d26d9a7319197b4E>
    8000658c:	a009                	j	8000658e <.LBB2_77+0x1f0>
    8000658e:	0a08                	addi	a0,sp,272
                let edit_index = console.edit_index.0 % INPUT_BUF;
    80006590:	ffffd097          	auipc	ra,0xffffd
    80006594:	2ae080e7          	jalr	686(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    80006598:	f4aa                	sd	a0,104(sp)
    8000659a:	a009                	j	8000659c <.LBB2_77+0x1fe>
    8000659c:	7526                	ld	a0,104(sp)
    8000659e:	690c                	ld	a1,16(a0)
    800065a0:	07f5f593          	andi	a1,a1,127
    800065a4:	eaae                	sd	a1,336(sp)
                console.buf[edit_index] = c;
    800065a6:	13f14603          	lbu	a2,319(sp)
    800065aa:	0a08                	addi	a0,sp,272
    800065ac:	f0ae                	sd	a1,96(sp)
    800065ae:	ecb2                	sd	a2,88(sp)
    800065b0:	ffffd097          	auipc	ra,0xffffd
    800065b4:	3cc080e7          	jalr	972(ra) # 8000397c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E>
    800065b8:	e8aa                	sd	a0,80(sp)
    800065ba:	a009                	j	800065bc <.LBB2_77+0x21e>
    800065bc:	07f00513          	li	a0,127
    800065c0:	7586                	ld	a1,96(sp)
    800065c2:	12b56363          	bltu	a0,a1,800066e8 <.LBB2_79>
    800065c6:	a009                	j	800065c8 <.LBB2_77+0x22a>
    800065c8:	6546                	ld	a0,80(sp)
    800065ca:	7586                	ld	a1,96(sp)
    800065cc:	00b50633          	add	a2,a0,a1
    800065d0:	66e6                	ld	a3,88(sp)
    800065d2:	00d60c23          	sb	a3,24(a2)
    800065d6:	0a08                	addi	a0,sp,272
                console.edit_index += Wrapping(1);
    800065d8:	ffffd097          	auipc	ra,0xffffd
    800065dc:	3a4080e7          	jalr	932(ra) # 8000397c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E>
    800065e0:	e4aa                	sd	a0,72(sp)
    800065e2:	a009                	j	800065e4 <.LBB2_77+0x246>
    800065e4:	6526                	ld	a0,72(sp)
    800065e6:	0541                	addi	a0,a0,16
    800065e8:	4585                	li	a1,1
    800065ea:	e2ae                	sd	a1,320(sp)
    800065ec:	fffff097          	auipc	ra,0xfffff
    800065f0:	dc2080e7          	jalr	-574(ra) # 800053ae <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hcde6a2ec0c355ebdE>
    800065f4:	a009                	j	800065f6 <.LBB2_77+0x258>
                if c == CTRL_LF || c == CTRL_EOT || (console.edit_index - console.read_index).0 == INPUT_BUF {
    800065f6:	13f14503          	lbu	a0,319(sp)
    800065fa:	45a9                	li	a1,10
    800065fc:	02b50763          	beq	a0,a1,8000662a <.LBB2_77+0x28c>
    80006600:	a82d                	j	8000663a <.LBB2_77+0x29c>
    80006602:	4505                	li	a0,1
    80006604:	14a106a3          	sb	a0,333(sp)
    80006608:	a821                	j	80006620 <.LBB2_77+0x282>
    8000660a:	4501                	li	a0,0
    8000660c:	14a106a3          	sb	a0,333(sp)
    80006610:	a801                	j	80006620 <.LBB2_77+0x282>
    80006612:	0a08                	addi	a0,sp,272
    80006614:	ffffd097          	auipc	ra,0xffffd
    80006618:	22a080e7          	jalr	554(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    8000661c:	e0aa                	sd	a0,64(sp)
    8000661e:	a80d                	j	80006650 <.LBB2_77+0x2b2>
    80006620:	14d14503          	lbu	a0,333(sp)
    80006624:	8905                	andi	a0,a0,1
    80006626:	ed39                	bnez	a0,80006684 <.LBB2_77+0x2e6>
    80006628:	a0ad                	j	80006692 <.LBB2_77+0x2f4>
    8000662a:	4505                	li	a0,1
    8000662c:	14a10723          	sb	a0,334(sp)
    80006630:	a819                	j	80006646 <.LBB2_77+0x2a8>
    80006632:	4501                	li	a0,0
    80006634:	14a10723          	sb	a0,334(sp)
    80006638:	a039                	j	80006646 <.LBB2_77+0x2a8>
    8000663a:	13f14503          	lbu	a0,319(sp)
    8000663e:	4591                	li	a1,4
    80006640:	feb505e3          	beq	a0,a1,8000662a <.LBB2_77+0x28c>
    80006644:	b7fd                	j	80006632 <.LBB2_77+0x294>
    80006646:	14e14503          	lbu	a0,334(sp)
    8000664a:	8905                	andi	a0,a0,1
    8000664c:	f95d                	bnez	a0,80006602 <.LBB2_77+0x264>
    8000664e:	b7d1                	j	80006612 <.LBB2_77+0x274>
    80006650:	6506                	ld	a0,64(sp)
    80006652:	6908                	ld	a0,16(a0)
    80006654:	0a0c                	addi	a1,sp,272
    80006656:	fc2a                	sd	a0,56(sp)
    80006658:	852e                	mv	a0,a1
    8000665a:	ffffd097          	auipc	ra,0xffffd
    8000665e:	1e4080e7          	jalr	484(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    80006662:	f82a                	sd	a0,48(sp)
    80006664:	a009                	j	80006666 <.LBB2_77+0x2c8>
    80006666:	7542                	ld	a0,48(sp)
    80006668:	610c                	ld	a1,0(a0)
    8000666a:	7562                	ld	a0,56(sp)
    8000666c:	fffff097          	auipc	ra,0xfffff
    80006670:	d24080e7          	jalr	-732(ra) # 80005390 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17hdd61030f480377c8E>
    80006674:	f42a                	sd	a0,40(sp)
    80006676:	a009                	j	80006678 <.LBB2_77+0x2da>
    80006678:	08000513          	li	a0,128
    8000667c:	75a2                	ld	a1,40(sp)
    8000667e:	f8a582e3          	beq	a1,a0,80006602 <.LBB2_77+0x264>
    80006682:	b761                	j	8000660a <.LBB2_77+0x26c>
    80006684:	0a08                	addi	a0,sp,272
                    console.write_index = console.edit_index;
    80006686:	ffffd097          	auipc	ra,0xffffd
    8000668a:	1b8080e7          	jalr	440(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    8000668e:	f02a                	sd	a0,32(sp)
    80006690:	a011                	j	80006694 <.LBB2_77+0x2f6>
                if c == CTRL_LF || c == CTRL_EOT || (console.edit_index - console.read_index).0 == INPUT_BUF {
    80006692:	a081                	j	800066d2 <.LBB2_78+0x16>
                    console.write_index = console.edit_index;
    80006694:	7502                	ld	a0,32(sp)
    80006696:	690c                	ld	a1,16(a0)
    80006698:	0a08                	addi	a0,sp,272
    8000669a:	ec2e                	sd	a1,24(sp)
    8000669c:	ffffd097          	auipc	ra,0xffffd
    800066a0:	2e0080e7          	jalr	736(ra) # 8000397c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4cf7d317df4463a3E>
    800066a4:	e82a                	sd	a0,16(sp)
    800066a6:	a009                	j	800066a8 <.LBB2_77+0x30a>
    800066a8:	6562                	ld	a0,24(sp)
    800066aa:	65c2                	ld	a1,16(sp)
    800066ac:	e588                	sd	a0,8(a1)
    800066ae:	0a08                	addi	a0,sp,272
                    unsafe{
                        PROC_MANAGER.wake_up(&console.read_index as *const _ as usize)
    800066b0:	ffffd097          	auipc	ra,0xffffd
    800066b4:	18e080e7          	jalr	398(ra) # 8000383e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0135175d7c9aa280E>
    800066b8:	e42a                	sd	a0,8(sp)
    800066ba:	a009                	j	800066bc <.LBB2_78>

00000000800066bc <.LBB2_78>:
    800066bc:	00056517          	auipc	a0,0x56
    800066c0:	84450513          	addi	a0,a0,-1980 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    800066c4:	65a2                	ld	a1,8(sp)
    800066c6:	00016097          	auipc	ra,0x16
    800066ca:	5d6080e7          	jalr	1494(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    800066ce:	a009                	j	800066d0 <.LBB2_78+0x14>
                if c == CTRL_LF || c == CTRL_EOT || (console.edit_index - console.read_index).0 == INPUT_BUF {
    800066d0:	a009                	j	800066d2 <.LBB2_78+0x16>
            if c != 0 && (console.edit_index - console.read_index).0 < INPUT_BUF {
    800066d2:	a009                	j	800066d4 <.LBB2_78+0x18>
    match c {
    800066d4:	a009                	j	800066d6 <.LBB2_78+0x1a>
    800066d6:	0a08                	addi	a0,sp,272
                    };
                }
            }
        }
    }
    800066d8:	00000097          	auipc	ra,0x0
    800066dc:	394080e7          	jalr	916(ra) # 80006a6c <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..console..Console$GT$$GT$17h665b28228683f724E>
    800066e0:	a009                	j	800066e2 <.LBB2_78+0x26>
    800066e2:	60f6                	ld	ra,344(sp)
    800066e4:	6135                	addi	sp,sp,352
    800066e6:	8082                	ret

00000000800066e8 <.LBB2_79>:
                console.buf[edit_index] = c;
    800066e8:	0001e617          	auipc	a2,0x1e
    800066ec:	df860613          	addi	a2,a2,-520 # 800244e0 <.L__unnamed_2>
    800066f0:	08000593          	li	a1,128
    800066f4:	7506                	ld	a0,96(sp)
    800066f6:	0001a097          	auipc	ra,0x1a
    800066fa:	600080e7          	jalr	1536(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080006700 <.LBB2_80>:
            console.buf[(console.edit_index - Wrapping(1)).0 % INPUT_BUF] != CTRL_LF {
    80006700:	0001e617          	auipc	a2,0x1e
    80006704:	df860613          	addi	a2,a2,-520 # 800244f8 <.L__unnamed_3>
    80006708:	08000593          	li	a1,128
    8000670c:	650e                	ld	a0,192(sp)
    8000670e:	0001a097          	auipc	ra,0x1a
    80006712:	5e8080e7          	jalr	1512(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator8for_each4call17h80e5b101f6bd2f11E:

0000000080006718 <_ZN4core4iter6traits8iterator8Iterator8for_each4call17h80e5b101f6bd2f11E>:
        fn call<T>(mut f: impl FnMut(T)) -> impl FnMut((), T) {
    80006718:	1141                	addi	sp,sp,-16
        }
    8000671a:	0141                	addi	sp,sp,16
    8000671c:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hdff32788bbd3f93fE:

000000008000671e <_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hdff32788bbd3f93fE>:
            move |(), item| f(item)
    8000671e:	7139                	addi	sp,sp,-64
    80006720:	fc06                	sd	ra,56(sp)
    80006722:	ec2a                	sd	a0,24(sp)
    80006724:	f42e                	sd	a1,40(sp)
    80006726:	f832                	sd	a2,48(sp)
    80006728:	e42e                	sd	a1,8(sp)
    8000672a:	e832                	sd	a2,16(sp)
    8000672c:	00010097          	auipc	ra,0x10
    80006730:	39e080e7          	jalr	926(ra) # 80016aca <_ZN6kernel2fs3bio6Bcache5binit28_$u7b$$u7b$closure$u7d$$u7d$17h552a96d4bdd13689E>
    80006734:	a009                	j	80006736 <_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hdff32788bbd3f93fE+0x18>
    80006736:	70e2                	ld	ra,56(sp)
    80006738:	6121                	addi	sp,sp,64
    8000673a:	8082                	ret

Disassembly of section .text._ZN4core3ptr100drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..process..process..ProcMeta$GT$$GT$17h708a1d723b054e11E:

000000008000673c <_ZN4core3ptr100drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..process..process..ProcMeta$GT$$GT$17h708a1d723b054e11E>:
/// i.e., you do not usually have to worry about such issues unless you call `drop_in_place`
/// manually.
#[stable(feature = "drop_in_place", since = "1.8.0")]
#[lang = "drop_in_place"]
#[allow(unconditional_recursion)]
pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {
    8000673c:	1101                	addi	sp,sp,-32
    8000673e:	ec06                	sd	ra,24(sp)
    80006740:	e82a                	sd	a0,16(sp)
    80006742:	00000097          	auipc	ra,0x0
    80006746:	594080e7          	jalr	1428(ra) # 80006cd6 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48d25f965ff6e46eE>
    8000674a:	a009                	j	8000674c <_ZN4core3ptr100drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..process..process..ProcMeta$GT$$GT$17h708a1d723b054e11E+0x10>
    8000674c:	60e2                	ld	ra,24(sp)
    8000674e:	6105                	addi	sp,sp,32
    80006750:	8082                	ret

Disassembly of section .text._ZN4core3ptr116drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$u5b$kernel..fs..inode..InodeMeta$u3b$$u20$50$u5d$$GT$$GT$17hfc695816f935467aE:

0000000080006752 <_ZN4core3ptr116drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$u5b$kernel..fs..inode..InodeMeta$u3b$$u20$50$u5d$$GT$$GT$17hfc695816f935467aE>:
    80006752:	1101                	addi	sp,sp,-32
    80006754:	ec06                	sd	ra,24(sp)
    80006756:	e82a                	sd	a0,16(sp)
    80006758:	00000097          	auipc	ra,0x0
    8000675c:	5ae080e7          	jalr	1454(ra) # 80006d06 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6ff4b216d5eed463E>
    80006760:	a009                	j	80006762 <_ZN4core3ptr116drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$u5b$kernel..fs..inode..InodeMeta$u3b$$u20$50$u5d$$GT$$GT$17hfc695816f935467aE+0x10>
    80006762:	60e2                	ld	ra,24(sp)
    80006764:	6105                	addi	sp,sp,32
    80006766:	8082                	ret

Disassembly of section .text._ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E:

0000000080006768 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E>:
    80006768:	7139                	addi	sp,sp,-64
    8000676a:	fc06                	sd	ra,56(sp)
    8000676c:	f82a                	sd	a0,48(sp)
    8000676e:	4581                	li	a1,0
    80006770:	e42a                	sd	a0,8(sp)
    80006772:	e985                	bnez	a1,800067a2 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x3a>
    80006774:	a881                	j	800067c4 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x5c>
    80006776:	70e2                	ld	ra,56(sp)
    80006778:	6121                	addi	sp,sp,64
    8000677a:	8082                	ret
    8000677c:	6562                	ld	a0,24(sp)
    8000677e:	00351593          	slli	a1,a0,0x3
    80006782:	6622                	ld	a2,8(sp)
    80006784:	95b2                	add	a1,a1,a2
    80006786:	0505                	addi	a0,a0,1
    80006788:	ec2a                	sd	a0,24(sp)
    8000678a:	852e                	mv	a0,a1
    8000678c:	00000097          	auipc	ra,0x0
    80006790:	2a6080e7          	jalr	678(ra) # 80006a32 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E>
    80006794:	a009                	j	80006796 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x2e>
    80006796:	6562                	ld	a0,24(sp)
    80006798:	06400593          	li	a1,100
    8000679c:	fcb50de3          	beq	a0,a1,80006776 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0xe>
    800067a0:	bff1                	j	8000677c <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x14>
    800067a2:	4501                	li	a0,0
    800067a4:	ec2a                	sd	a0,24(sp)
    800067a6:	bfc5                	j	80006796 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x2e>
    800067a8:	7502                	ld	a0,32(sp)
    800067aa:	00850593          	addi	a1,a0,8
    800067ae:	f02e                	sd	a1,32(sp)
    800067b0:	00000097          	auipc	ra,0x0
    800067b4:	282080e7          	jalr	642(ra) # 80006a32 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E>
    800067b8:	a009                	j	800067ba <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x52>
    800067ba:	7502                	ld	a0,32(sp)
    800067bc:	75a2                	ld	a1,40(sp)
    800067be:	fab50ce3          	beq	a0,a1,80006776 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0xe>
    800067c2:	b7dd                	j	800067a8 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x40>
    800067c4:	6522                	ld	a0,8(sp)
    800067c6:	f02a                	sd	a0,32(sp)
    800067c8:	32050593          	addi	a1,a0,800
    800067cc:	f42e                	sd	a1,40(sp)
    800067ce:	b7f5                	j	800067ba <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E+0x52>

Disassembly of section .text._ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E:

00000000800067d0 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E>:
    800067d0:	1101                	addi	sp,sp,-32
    800067d2:	ec06                	sd	ra,24(sp)
    800067d4:	e82a                	sd	a0,16(sp)
    800067d6:	610c                	ld	a1,0(a0)
    800067d8:	4601                	li	a2,0
    800067da:	e02a                	sd	a0,0(sp)
    800067dc:	00c59663          	bne	a1,a2,800067e8 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E+0x18>
    800067e0:	a009                	j	800067e2 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E+0x12>
    800067e2:	60e2                	ld	ra,24(sp)
    800067e4:	6105                	addi	sp,sp,32
    800067e6:	8082                	ret
    800067e8:	6502                	ld	a0,0(sp)
    800067ea:	00000097          	auipc	ra,0x0
    800067ee:	1e8080e7          	jalr	488(ra) # 800069d2 <_ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E>
    800067f2:	bfc5                	j	800067e2 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E+0x12>

Disassembly of section .text._ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$$GT$17h12cfd51edcc4550fE:

00000000800067f4 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$$GT$17h12cfd51edcc4550fE>:
    800067f4:	1101                	addi	sp,sp,-32
    800067f6:	ec06                	sd	ra,24(sp)
    800067f8:	e82a                	sd	a0,16(sp)
    800067fa:	610c                	ld	a1,0(a0)
    800067fc:	4601                	li	a2,0
    800067fe:	e02a                	sd	a0,0(sp)
    80006800:	00c59663          	bne	a1,a2,8000680c <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$$GT$17h12cfd51edcc4550fE+0x18>
    80006804:	a009                	j	80006806 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$$GT$17h12cfd51edcc4550fE+0x12>
    80006806:	60e2                	ld	ra,24(sp)
    80006808:	6105                	addi	sp,sp,32
    8000680a:	8082                	ret
    8000680c:	6502                	ld	a0,0(sp)
    8000680e:	00000097          	auipc	ra,0x0
    80006812:	1e2080e7          	jalr	482(ra) # 800069f0 <_ZN4core3ptr92drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$17h5f0f60c1e81b906cE>
    80006816:	bfc5                	j	80006806 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$$GT$17h12cfd51edcc4550fE+0x12>

Disassembly of section .text._ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h373969759112ef31E:

0000000080006818 <_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h373969759112ef31E>:
    80006818:	1141                	addi	sp,sp,-16
    8000681a:	e42a                	sd	a0,8(sp)
    8000681c:	0141                	addi	sp,sp,16
    8000681e:	8082                	ret

Disassembly of section .text._ZN4core3ptr29drop_in_place$LT$$LP$$RP$$GT$17h6fd3d6c20543ba5eE:

0000000080006820 <_ZN4core3ptr29drop_in_place$LT$$LP$$RP$$GT$17h6fd3d6c20543ba5eE>:
    80006820:	1141                	addi	sp,sp,-16
    80006822:	e42a                	sd	a0,8(sp)
    80006824:	0141                	addi	sp,sp,16
    80006826:	8082                	ret

Disassembly of section .text._ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h9183ed8abb82bcccE:

0000000080006828 <_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h9183ed8abb82bcccE>:
    80006828:	1141                	addi	sp,sp,-16
    8000682a:	e42a                	sd	a0,8(sp)
    8000682c:	0141                	addi	sp,sp,16
    8000682e:	8082                	ret

Disassembly of section .text._ZN4core3ptr41drop_in_place$LT$kernel..fs..bio..Buf$GT$17h1d3a39863b90b2abE:

0000000080006830 <_ZN4core3ptr41drop_in_place$LT$kernel..fs..bio..Buf$GT$17h1d3a39863b90b2abE>:
    80006830:	1101                	addi	sp,sp,-32
    80006832:	ec06                	sd	ra,24(sp)
    80006834:	e82a                	sd	a0,16(sp)
    80006836:	e02a                	sd	a0,0(sp)
    80006838:	00000097          	auipc	ra,0x0
    8000683c:	576080e7          	jalr	1398(ra) # 80006dae <_ZN62_$LT$kernel..fs..bio..Buf$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1634535ead730fdfE>
    80006840:	a021                	j	80006848 <_ZN4core3ptr41drop_in_place$LT$kernel..fs..bio..Buf$GT$17h1d3a39863b90b2abE+0x18>
    80006842:	60e2                	ld	ra,24(sp)
    80006844:	6105                	addi	sp,sp,32
    80006846:	8082                	ret
    80006848:	6502                	ld	a0,0(sp)
    8000684a:	0541                	addi	a0,a0,16
    8000684c:	00000097          	auipc	ra,0x0
    80006850:	fa8080e7          	jalr	-88(ra) # 800067f4 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$$GT$17h12cfd51edcc4550fE>
    80006854:	b7fd                	j	80006842 <_ZN4core3ptr41drop_in_place$LT$kernel..fs..bio..Buf$GT$17h1d3a39863b90b2abE+0x12>

Disassembly of section .text._ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E:

0000000080006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>:
    80006856:	1101                	addi	sp,sp,-32
    80006858:	ec06                	sd	ra,24(sp)
    8000685a:	e82a                	sd	a0,16(sp)
    8000685c:	00000097          	auipc	ra,0x0
    80006860:	598080e7          	jalr	1432(ra) # 80006df4 <_ZN66_$LT$kernel..fs..inode..Inode$u20$as$u20$core..ops..drop..Drop$GT$4drop17h729e4baa48b3979dE>
    80006864:	a009                	j	80006866 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E+0x10>
    80006866:	60e2                	ld	ra,24(sp)
    80006868:	6105                	addi	sp,sp,32
    8000686a:	8082                	ret

Disassembly of section .text._ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf808aad7710e9ab8E:

000000008000686c <_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf808aad7710e9ab8E>:
    8000686c:	1101                	addi	sp,sp,-32
    8000686e:	ec06                	sd	ra,24(sp)
    80006870:	e82a                	sd	a0,16(sp)
    80006872:	e02a                	sd	a0,0(sp)
    80006874:	00000097          	auipc	ra,0x0
    80006878:	380080e7          	jalr	896(ra) # 80006bf4 <_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45b8b7e66c0a7430E>
    8000687c:	a021                	j	80006884 <_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf808aad7710e9ab8E+0x18>
    8000687e:	60e2                	ld	ra,24(sp)
    80006880:	6105                	addi	sp,sp,32
    80006882:	8082                	ret
    80006884:	6502                	ld	a0,0(sp)
    80006886:	00000097          	auipc	ra,0x0
    8000688a:	012080e7          	jalr	18(ra) # 80006898 <_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha66751c84363e260E>
    8000688e:	bfc5                	j	8000687e <_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf808aad7710e9ab8E+0x12>

Disassembly of section .text._ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h3fd9bb39e1ec2a72E:

0000000080006890 <_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h3fd9bb39e1ec2a72E>:
    80006890:	1141                	addi	sp,sp,-16
    80006892:	e42a                	sd	a0,8(sp)
    80006894:	0141                	addi	sp,sp,16
    80006896:	8082                	ret

Disassembly of section .text._ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha66751c84363e260E:

0000000080006898 <_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha66751c84363e260E>:
    80006898:	1101                	addi	sp,sp,-32
    8000689a:	ec06                	sd	ra,24(sp)
    8000689c:	e82a                	sd	a0,16(sp)
    8000689e:	00000097          	auipc	ra,0x0
    800068a2:	382080e7          	jalr	898(ra) # 80006c20 <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E>
    800068a6:	a009                	j	800068a8 <_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha66751c84363e260E+0x10>
    800068a8:	60e2                	ld	ra,24(sp)
    800068aa:	6105                	addi	sp,sp,32
    800068ac:	8082                	ret

Disassembly of section .text._ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h5b5f71090fc23350E:

00000000800068ae <_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h5b5f71090fc23350E>:
    800068ae:	1141                	addi	sp,sp,-16
    800068b0:	e42a                	sd	a0,8(sp)
    800068b2:	0141                	addi	sp,sp,16
    800068b4:	8082                	ret

Disassembly of section .text._ZN4core3ptr54drop_in_place$LT$core..num..error..TryFromIntError$GT$17h862bc36837f9ed0bE:

00000000800068b6 <_ZN4core3ptr54drop_in_place$LT$core..num..error..TryFromIntError$GT$17h862bc36837f9ed0bE>:
    800068b6:	1141                	addi	sp,sp,-16
    800068b8:	e42a                	sd	a0,8(sp)
    800068ba:	0141                	addi	sp,sp,16
    800068bc:	8082                	ret

Disassembly of section .text._ZN4core3ptr60drop_in_place$LT$$RF$kernel..register..scause..Exception$GT$17h8a12e66d3d5e5f56E:

00000000800068be <_ZN4core3ptr60drop_in_place$LT$$RF$kernel..register..scause..Exception$GT$17h8a12e66d3d5e5f56E>:
    800068be:	1141                	addi	sp,sp,-16
    800068c0:	e42a                	sd	a0,8(sp)
    800068c2:	0141                	addi	sp,sp,16
    800068c4:	8082                	ret

Disassembly of section .text._ZN4core3ptr60drop_in_place$LT$$RF$kernel..register..scause..Interrupt$GT$17hee7fe061b1c27cd4E:

00000000800068c6 <_ZN4core3ptr60drop_in_place$LT$$RF$kernel..register..scause..Interrupt$GT$17hee7fe061b1c27cd4E>:
    800068c6:	1141                	addi	sp,sp,-16
    800068c8:	e42a                	sd	a0,8(sp)
    800068ca:	0141                	addi	sp,sp,16
    800068cc:	8082                	ret

Disassembly of section .text._ZN4core3ptr60drop_in_place$LT$$RF$mut$u20$kernel..console..uart..Uart$GT$17h22c03a2af2bb0e55E:

00000000800068ce <_ZN4core3ptr60drop_in_place$LT$$RF$mut$u20$kernel..console..uart..Uart$GT$17h22c03a2af2bb0e55E>:
    800068ce:	1141                	addi	sp,sp,-16
    800068d0:	e42a                	sd	a0,8(sp)
    800068d2:	0141                	addi	sp,sp,16
    800068d4:	8082                	ret

Disassembly of section .text._ZN4core3ptr68drop_in_place$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$17hd130d4597bfe8397E:

00000000800068d6 <_ZN4core3ptr68drop_in_place$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$17hd130d4597bfe8397E>:
    800068d6:	1101                	addi	sp,sp,-32
    800068d8:	ec06                	sd	ra,24(sp)
    800068da:	e82a                	sd	a0,16(sp)
    800068dc:	00000097          	auipc	ra,0x0
    800068e0:	206080e7          	jalr	518(ra) # 80006ae2 <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E>
    800068e4:	a009                	j	800068e6 <_ZN4core3ptr68drop_in_place$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$17hd130d4597bfe8397E+0x10>
    800068e6:	60e2                	ld	ra,24(sp)
    800068e8:	6105                	addi	sp,sp,32
    800068ea:	8082                	ret

Disassembly of section .text._ZN4core3ptr69drop_in_place$LT$alloc..sync..Weak$LT$kernel..fs..file..VFile$GT$$GT$17h5cb5e17a31abd294E:

00000000800068ec <_ZN4core3ptr69drop_in_place$LT$alloc..sync..Weak$LT$kernel..fs..file..VFile$GT$$GT$17h5cb5e17a31abd294E>:
    800068ec:	1101                	addi	sp,sp,-32
    800068ee:	ec06                	sd	ra,24(sp)
    800068f0:	e82a                	sd	a0,16(sp)
    800068f2:	00000097          	auipc	ra,0x0
    800068f6:	250080e7          	jalr	592(ra) # 80006b42 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E>
    800068fa:	a009                	j	800068fc <_ZN4core3ptr69drop_in_place$LT$alloc..sync..Weak$LT$kernel..fs..file..VFile$GT$$GT$17h5cb5e17a31abd294E+0x10>
    800068fc:	60e2                	ld	ra,24(sp)
    800068fe:	6105                	addi	sp,sp,32
    80006900:	8082                	ret

Disassembly of section .text._ZN4core3ptr71drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$usize$GT$$GT$17hb2e18bebf123fd09E:

0000000080006902 <_ZN4core3ptr71drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$usize$GT$$GT$17hb2e18bebf123fd09E>:
    80006902:	1101                	addi	sp,sp,-32
    80006904:	ec06                	sd	ra,24(sp)
    80006906:	e82a                	sd	a0,16(sp)
    80006908:	00000097          	auipc	ra,0x0
    8000690c:	42e080e7          	jalr	1070(ra) # 80006d36 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc80c9f77592aeae7E>
    80006910:	a009                	j	80006912 <_ZN4core3ptr71drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$usize$GT$$GT$17hb2e18bebf123fd09E+0x10>
    80006912:	60e2                	ld	ra,24(sp)
    80006914:	6105                	addi	sp,sp,32
    80006916:	8082                	ret

Disassembly of section .text._ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E:

0000000080006918 <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E>:
    80006918:	1101                	addi	sp,sp,-32
    8000691a:	ec06                	sd	ra,24(sp)
    8000691c:	e82a                	sd	a0,16(sp)
    8000691e:	610c                	ld	a1,0(a0)
    80006920:	4601                	li	a2,0
    80006922:	e02a                	sd	a0,0(sp)
    80006924:	00c59663          	bne	a1,a2,80006930 <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E+0x18>
    80006928:	a009                	j	8000692a <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E+0x12>
    8000692a:	60e2                	ld	ra,24(sp)
    8000692c:	6105                	addi	sp,sp,32
    8000692e:	8082                	ret
    80006930:	6502                	ld	a0,0(sp)
    80006932:	0521                	addi	a0,a0,8
    80006934:	00000097          	auipc	ra,0x0
    80006938:	f22080e7          	jalr	-222(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8000693c:	b7fd                	j	8000692a <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E+0x12>

Disassembly of section .text._ZN4core3ptr74drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$LP$$RP$$GT$$GT$17hf87d4bd211c4ab98E:

000000008000693e <_ZN4core3ptr74drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$LP$$RP$$GT$$GT$17hf87d4bd211c4ab98E>:
    8000693e:	1101                	addi	sp,sp,-32
    80006940:	ec06                	sd	ra,24(sp)
    80006942:	e82a                	sd	a0,16(sp)
    80006944:	00000097          	auipc	ra,0x0
    80006948:	37a080e7          	jalr	890(ra) # 80006cbe <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3cbdacfd6cfb05f6E>
    8000694c:	a009                	j	8000694e <_ZN4core3ptr74drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$LP$$RP$$GT$$GT$17hf87d4bd211c4ab98E+0x10>
    8000694e:	60e2                	ld	ra,24(sp)
    80006950:	6105                	addi	sp,sp,32
    80006952:	8082                	ret

Disassembly of section .text._ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ElfHeader$GT$$GT$17h791a4532c5bca0b8E:

0000000080006954 <_ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ElfHeader$GT$$GT$17h791a4532c5bca0b8E>:
    80006954:	1101                	addi	sp,sp,-32
    80006956:	ec06                	sd	ra,24(sp)
    80006958:	e82a                	sd	a0,16(sp)
    8000695a:	e02a                	sd	a0,0(sp)
    8000695c:	a021                	j	80006964 <_ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ElfHeader$GT$$GT$17h791a4532c5bca0b8E+0x10>
    8000695e:	60e2                	ld	ra,24(sp)
    80006960:	6105                	addi	sp,sp,32
    80006962:	8082                	ret
    80006964:	6502                	ld	a0,0(sp)
    80006966:	6108                	ld	a0,0(a0)
    80006968:	00000097          	auipc	ra,0x0
    8000696c:	532080e7          	jalr	1330(ra) # 80006e9a <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E>
    80006970:	b7fd                	j	8000695e <_ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ElfHeader$GT$$GT$17h791a4532c5bca0b8E+0xa>

Disassembly of section .text._ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ProgHeader$GT$$GT$17hd15e891d3fea5a95E:

0000000080006972 <_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ProgHeader$GT$$GT$17hd15e891d3fea5a95E>:
    80006972:	1101                	addi	sp,sp,-32
    80006974:	ec06                	sd	ra,24(sp)
    80006976:	e82a                	sd	a0,16(sp)
    80006978:	e02a                	sd	a0,0(sp)
    8000697a:	a021                	j	80006982 <_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ProgHeader$GT$$GT$17hd15e891d3fea5a95E+0x10>
    8000697c:	60e2                	ld	ra,24(sp)
    8000697e:	6105                	addi	sp,sp,32
    80006980:	8082                	ret
    80006982:	6502                	ld	a0,0(sp)
    80006984:	6108                	ld	a0,0(a0)
    80006986:	00000097          	auipc	ra,0x0
    8000698a:	598080e7          	jalr	1432(ra) # 80006f1e <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E>
    8000698e:	b7fd                	j	8000697c <_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ProgHeader$GT$$GT$17hd15e891d3fea5a95E+0xa>

Disassembly of section .text._ZN4core3ptr86drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..log..Log$GT$$GT$17hd96a256307aab26dE:

0000000080006990 <_ZN4core3ptr86drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..log..Log$GT$$GT$17hd96a256307aab26dE>:
    80006990:	1101                	addi	sp,sp,-32
    80006992:	ec06                	sd	ra,24(sp)
    80006994:	e82a                	sd	a0,16(sp)
    80006996:	00000097          	auipc	ra,0x0
    8000699a:	310080e7          	jalr	784(ra) # 80006ca6 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h244d32bc65819942E>
    8000699e:	a009                	j	800069a0 <_ZN4core3ptr86drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..log..Log$GT$$GT$17hd96a256307aab26dE+0x10>
    800069a0:	60e2                	ld	ra,24(sp)
    800069a2:	6105                	addi	sp,sp,32
    800069a4:	8082                	ret

Disassembly of section .text._ZN4core3ptr88drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$allocator..BuddySystem$GT$$GT$17h4f0ad123d07d9c96E:

00000000800069a6 <_ZN4core3ptr88drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$allocator..BuddySystem$GT$$GT$17h4f0ad123d07d9c96E>:
    800069a6:	1101                	addi	sp,sp,-32
    800069a8:	ec06                	sd	ra,24(sp)
    800069aa:	e82a                	sd	a0,16(sp)
    800069ac:	00000097          	auipc	ra,0x0
    800069b0:	372080e7          	jalr	882(ra) # 80006d1e <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7851e217fa060620E>
    800069b4:	a009                	j	800069b6 <_ZN4core3ptr88drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$allocator..BuddySystem$GT$$GT$17h4f0ad123d07d9c96E+0x10>
    800069b6:	60e2                	ld	ra,24(sp)
    800069b8:	6105                	addi	sp,sp,32
    800069ba:	8082                	ret

Disassembly of section .text._ZN4core3ptr89drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..bio..BufLru$GT$$GT$17heb8f06842278fadcE:

00000000800069bc <_ZN4core3ptr89drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..bio..BufLru$GT$$GT$17heb8f06842278fadcE>:
    800069bc:	1101                	addi	sp,sp,-32
    800069be:	ec06                	sd	ra,24(sp)
    800069c0:	e82a                	sd	a0,16(sp)
    800069c2:	00000097          	auipc	ra,0x0
    800069c6:	3a4080e7          	jalr	932(ra) # 80006d66 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hecbf736f992027fdE>
    800069ca:	a009                	j	800069cc <_ZN4core3ptr89drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..bio..BufLru$GT$$GT$17heb8f06842278fadcE+0x10>
    800069cc:	60e2                	ld	ra,24(sp)
    800069ce:	6105                	addi	sp,sp,32
    800069d0:	8082                	ret

Disassembly of section .text._ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E:

00000000800069d2 <_ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E>:
    800069d2:	1101                	addi	sp,sp,-32
    800069d4:	ec06                	sd	ra,24(sp)
    800069d6:	e82a                	sd	a0,16(sp)
    800069d8:	e02a                	sd	a0,0(sp)
    800069da:	a021                	j	800069e2 <_ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E+0x10>
    800069dc:	60e2                	ld	ra,24(sp)
    800069de:	6105                	addi	sp,sp,32
    800069e0:	8082                	ret
    800069e2:	6502                	ld	a0,0(sp)
    800069e4:	6108                	ld	a0,0(a0)
    800069e6:	00000097          	auipc	ra,0x0
    800069ea:	432080e7          	jalr	1074(ra) # 80006e18 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E>
    800069ee:	b7fd                	j	800069dc <_ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E+0xa>

Disassembly of section .text._ZN4core3ptr92drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$17h5f0f60c1e81b906cE:

00000000800069f0 <_ZN4core3ptr92drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$17h5f0f60c1e81b906cE>:
    800069f0:	1101                	addi	sp,sp,-32
    800069f2:	ec06                	sd	ra,24(sp)
    800069f4:	e82a                	sd	a0,16(sp)
    800069f6:	00000097          	auipc	ra,0x0
    800069fa:	388080e7          	jalr	904(ra) # 80006d7e <_ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a90c86e51583be4E>
    800069fe:	a009                	j	80006a00 <_ZN4core3ptr92drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$17h5f0f60c1e81b906cE+0x10>
    80006a00:	60e2                	ld	ra,24(sp)
    80006a02:	6105                	addi	sp,sp,32
    80006a04:	8082                	ret

Disassembly of section .text._ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..uart..Uart$GT$$GT$17h54382ef7f7dfed0fE:

0000000080006a06 <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..uart..Uart$GT$$GT$17h54382ef7f7dfed0fE>:
    80006a06:	1101                	addi	sp,sp,-32
    80006a08:	ec06                	sd	ra,24(sp)
    80006a0a:	e82a                	sd	a0,16(sp)
    80006a0c:	00000097          	auipc	ra,0x0
    80006a10:	342080e7          	jalr	834(ra) # 80006d4e <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hda502dfa9645bbb0E>
    80006a14:	a009                	j	80006a16 <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..uart..Uart$GT$$GT$17h54382ef7f7dfed0fE+0x10>
    80006a16:	60e2                	ld	ra,24(sp)
    80006a18:	6105                	addi	sp,sp,32
    80006a1a:	8082                	ret

Disassembly of section .text._ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..pipe..PipeGuard$GT$$GT$17hc0094ed0be314ca3E:

0000000080006a1c <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..pipe..PipeGuard$GT$$GT$17hc0094ed0be314ca3E>:
    80006a1c:	1101                	addi	sp,sp,-32
    80006a1e:	ec06                	sd	ra,24(sp)
    80006a20:	e82a                	sd	a0,16(sp)
    80006a22:	00000097          	auipc	ra,0x0
    80006a26:	254080e7          	jalr	596(ra) # 80006c76 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a5433bb8ad95f6dE>
    80006a2a:	a009                	j	80006a2c <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..pipe..PipeGuard$GT$$GT$17hc0094ed0be314ca3E+0x10>
    80006a2c:	60e2                	ld	ra,24(sp)
    80006a2e:	6105                	addi	sp,sp,32
    80006a30:	8082                	ret

Disassembly of section .text._ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E:

0000000080006a32 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E>:
    80006a32:	1101                	addi	sp,sp,-32
    80006a34:	ec06                	sd	ra,24(sp)
    80006a36:	e82a                	sd	a0,16(sp)
    80006a38:	610c                	ld	a1,0(a0)
    80006a3a:	4601                	li	a2,0
    80006a3c:	e02a                	sd	a0,0(sp)
    80006a3e:	00c59663          	bne	a1,a2,80006a4a <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E+0x18>
    80006a42:	a009                	j	80006a44 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E+0x12>
    80006a44:	60e2                	ld	ra,24(sp)
    80006a46:	6105                	addi	sp,sp,32
    80006a48:	8082                	ret
    80006a4a:	6502                	ld	a0,0(sp)
    80006a4c:	00000097          	auipc	ra,0x0
    80006a50:	e8a080e7          	jalr	-374(ra) # 800068d6 <_ZN4core3ptr68drop_in_place$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$17hd130d4597bfe8397E>
    80006a54:	bfc5                	j	80006a44 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E+0x12>

Disassembly of section .text._ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE:

0000000080006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>:
    80006a56:	1101                	addi	sp,sp,-32
    80006a58:	ec06                	sd	ra,24(sp)
    80006a5a:	e82a                	sd	a0,16(sp)
    80006a5c:	00000097          	auipc	ra,0x0
    80006a60:	33a080e7          	jalr	826(ra) # 80006d96 <_ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h881b2ec553d00217E>
    80006a64:	a009                	j	80006a66 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE+0x10>
    80006a66:	60e2                	ld	ra,24(sp)
    80006a68:	6105                	addi	sp,sp,32
    80006a6a:	8082                	ret

Disassembly of section .text._ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..console..Console$GT$$GT$17h665b28228683f724E:

0000000080006a6c <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..console..Console$GT$$GT$17h665b28228683f724E>:
    80006a6c:	1101                	addi	sp,sp,-32
    80006a6e:	ec06                	sd	ra,24(sp)
    80006a70:	e82a                	sd	a0,16(sp)
    80006a72:	00000097          	auipc	ra,0x0
    80006a76:	27c080e7          	jalr	636(ra) # 80006cee <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h61c474a0202a1b54E>
    80006a7a:	a009                	j	80006a7c <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..console..Console$GT$$GT$17h665b28228683f724E+0x10>
    80006a7c:	60e2                	ld	ra,24(sp)
    80006a7e:	6105                	addi	sp,sp,32
    80006a80:	8082                	ret

Disassembly of section .text._ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..driver..virtio_disk..Disk$GT$$GT$17h3a869af89cb88c7dE:

0000000080006a82 <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..driver..virtio_disk..Disk$GT$$GT$17h3a869af89cb88c7dE>:
    80006a82:	1101                	addi	sp,sp,-32
    80006a84:	ec06                	sd	ra,24(sp)
    80006a86:	e82a                	sd	a0,16(sp)
    80006a88:	00000097          	auipc	ra,0x0
    80006a8c:	206080e7          	jalr	518(ra) # 80006c8e <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1826deeee0a81922E>
    80006a90:	a009                	j	80006a92 <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..driver..virtio_disk..Disk$GT$$GT$17h3a869af89cb88c7dE+0x10>
    80006a92:	60e2                	ld	ra,24(sp)
    80006a94:	6105                	addi	sp,sp,32
    80006a96:	8082                	ret

Disassembly of section .text._ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE:

0000000080006a98 <_ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE>:
    ///
    /// assert_eq!("Hello", hello.clone());
    /// ```
    #[stable(feature = "rust1", since = "1.0.0")]
    #[must_use = "cloning is often expensive and is not expected to have side effects"]
    fn clone(&self) -> Self;
    80006a98:	7179                	addi	sp,sp,-48
    80006a9a:	f406                	sd	ra,40(sp)
    80006a9c:	f02e                	sd	a1,32(sp)
    80006a9e:	4601                	li	a2,0
    80006aa0:	ec32                	sd	a2,24(sp)
    80006aa2:	e82e                	sd	a1,16(sp)
    80006aa4:	e42a                	sd	a0,8(sp)
    80006aa6:	a009                	j	80006aa8 <_ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE+0x10>
    80006aa8:	6562                	ld	a0,24(sp)
    80006aaa:	06400593          	li	a1,100
    80006aae:	02b50763          	beq	a0,a1,80006adc <_ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE+0x44>
    80006ab2:	a009                	j	80006ab4 <_ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE+0x1c>
    80006ab4:	6562                	ld	a0,24(sp)
    80006ab6:	050e                	slli	a0,a0,0x3
    80006ab8:	65c2                	ld	a1,16(sp)
    80006aba:	00a58633          	add	a2,a1,a0
    80006abe:	66a2                	ld	a3,8(sp)
    80006ac0:	9536                	add	a0,a0,a3
    80006ac2:	e02a                	sd	a0,0(sp)
    80006ac4:	8532                	mv	a0,a2
    80006ac6:	00012097          	auipc	ra,0x12
    80006aca:	5a4080e7          	jalr	1444(ra) # 8001906a <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E>
    80006ace:	6582                	ld	a1,0(sp)
    80006ad0:	e188                	sd	a0,0(a1)
    80006ad2:	a009                	j	80006ad4 <_ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE+0x3c>
    80006ad4:	6562                	ld	a0,24(sp)
    80006ad6:	0505                	addi	a0,a0,1
    80006ad8:	ec2a                	sd	a0,24(sp)
    80006ada:	b7f9                	j	80006aa8 <_ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE+0x10>
    80006adc:	70a2                	ld	ra,40(sp)
    80006ade:	6145                	addi	sp,sp,48
    80006ae0:	8082                	ret

Disassembly of section .text._ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E:

0000000080006ae2 <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E>:
    ///
    /// drop(foo);    // Doesn't print anything
    /// drop(foo2);   // Prints "dropped!"
    /// ```
    #[inline]
    fn drop(&mut self) {
    80006ae2:	7139                	addi	sp,sp,-64
    80006ae4:	fc06                	sd	ra,56(sp)
    80006ae6:	f82a                	sd	a0,48(sp)
        // Because `fetch_sub` is already atomic, we do not need to synchronize
        // with other threads unless we are going to delete the object. This
        // same logic applies to the below `fetch_sub` to the `weak` count.
        if self.inner().strong.fetch_sub(1, Release) != 1 {
    80006ae8:	f02a                	sd	a0,32(sp)
    80006aea:	00000097          	auipc	ra,0x0
    80006aee:	5b6080e7          	jalr	1462(ra) # 800070a0 <_ZN5alloc4sync12Arc$LT$T$GT$5inner17h12267b24423996bdE>
    80006af2:	ec2a                	sd	a0,24(sp)
    80006af4:	a009                	j	80006af6 <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x14>
    80006af6:	4505                	li	a0,1
    80006af8:	02a10723          	sb	a0,46(sp)
    80006afc:	65e2                	ld	a1,24(sp)
    80006afe:	e82a                	sd	a0,16(sp)
    80006b00:	852e                	mv	a0,a1
    80006b02:	65c2                	ld	a1,16(sp)
    80006b04:	6642                	ld	a2,16(sp)
    80006b06:	00006097          	auipc	ra,0x6
    80006b0a:	540080e7          	jalr	1344(ra) # 8000d046 <_ZN4core4sync6atomic11AtomicUsize9fetch_sub17hbf163b7d32f1c9ddE>
    80006b0e:	e42a                	sd	a0,8(sp)
    80006b10:	a009                	j	80006b12 <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x30>
    80006b12:	4505                	li	a0,1
    80006b14:	65a2                	ld	a1,8(sp)
    80006b16:	00a58463          	beq	a1,a0,80006b1e <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x3c>
    80006b1a:	a009                	j	80006b1c <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x3a>
        acquire!(self.inner().strong);

        unsafe {
            self.drop_slow();
        }
    }
    80006b1c:	a005                	j	80006b3c <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x5a>
    80006b1e:	4509                	li	a0,2
        acquire!(self.inner().strong);
    80006b20:	02a107a3          	sb	a0,47(sp)
    80006b24:	00006097          	auipc	ra,0x6
    80006b28:	55a080e7          	jalr	1370(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80006b2c:	a009                	j	80006b2e <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x4c>
            self.drop_slow();
    80006b2e:	7502                	ld	a0,32(sp)
    80006b30:	00000097          	auipc	ra,0x0
    80006b34:	58a080e7          	jalr	1418(ra) # 800070ba <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hba4de10fe3575ae0E>
    80006b38:	a009                	j	80006b3a <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x58>
    }
    80006b3a:	a009                	j	80006b3c <_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h833f8426e12f15f4E+0x5a>
    80006b3c:	70e2                	ld	ra,56(sp)
    80006b3e:	6121                	addi	sp,sp,64
    80006b40:	8082                	ret

Disassembly of section .text._ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E:

0000000080006b42 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E>:
    /// drop(weak_foo);   // Doesn't print anything
    /// drop(foo);        // Prints "dropped!"
    ///
    /// assert!(other_weak_foo.upgrade().is_none());
    /// ```
    fn drop(&mut self) {
    80006b42:	7175                	addi	sp,sp,-144
    80006b44:	e506                	sd	ra,136(sp)
    80006b46:	f0aa                	sd	a0,96(sp)
        //
        // It's not necessary to check for the locked state here, because the
        // weak count can only be locked if there was precisely one weak ref,
        // meaning that drop could only subsequently run ON that remaining weak
        // ref, which can only happen after the lock is released.
        let inner = if let Some(inner) = self.inner() { inner } else { return };
    80006b48:	fc2a                	sd	a0,56(sp)
    80006b4a:	00000097          	auipc	ra,0x0
    80006b4e:	59c080e7          	jalr	1436(ra) # 800070e6 <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE>
    80006b52:	e4aa                	sd	a0,72(sp)
    80006b54:	e8ae                	sd	a1,80(sp)
    80006b56:	a009                	j	80006b58 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x16>
    80006b58:	6526                	ld	a0,72(sp)
    80006b5a:	4581                	li	a1,0
    80006b5c:	00b51463          	bne	a0,a1,80006b64 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x22>
    80006b60:	a009                	j	80006b62 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x20>

        if inner.weak.fetch_sub(1, Release) == 1 {
            acquire!(inner.weak);
            unsafe { Global.deallocate(self.ptr.cast(), Layout::for_value_raw(self.ptr.as_ptr())) }
        }
    }
    80006b62:	a071                	j	80006bee <.LBB44_14+0x1c>
        let inner = if let Some(inner) = self.inner() { inner } else { return };
    80006b64:	6526                	ld	a0,72(sp)
    80006b66:	65c6                	ld	a1,80(sp)
    80006b68:	f4aa                	sd	a0,104(sp)
    80006b6a:	f8ae                	sd	a1,112(sp)
    80006b6c:	fcaa                	sd	a0,120(sp)
    80006b6e:	e12e                	sd	a1,128(sp)
    80006b70:	4585                	li	a1,1
        if inner.weak.fetch_sub(1, Release) == 1 {
    80006b72:	04b10f23          	sb	a1,94(sp)
    80006b76:	f82e                	sd	a1,48(sp)
    80006b78:	7642                	ld	a2,48(sp)
    80006b7a:	00006097          	auipc	ra,0x6
    80006b7e:	4cc080e7          	jalr	1228(ra) # 8000d046 <_ZN4core4sync6atomic11AtomicUsize9fetch_sub17hbf163b7d32f1c9ddE>
    80006b82:	f42a                	sd	a0,40(sp)
    80006b84:	a009                	j	80006b86 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x44>
    80006b86:	4505                	li	a0,1
    80006b88:	75a2                	ld	a1,40(sp)
    80006b8a:	00a59b63          	bne	a1,a0,80006ba0 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x5e>
    80006b8e:	a009                	j	80006b90 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x4e>
    80006b90:	4509                	li	a0,2
            acquire!(inner.weak);
    80006b92:	04a10fa3          	sb	a0,95(sp)
    80006b96:	00006097          	auipc	ra,0x6
    80006b9a:	4e8080e7          	jalr	1256(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80006b9e:	a011                	j	80006ba2 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x60>
        if inner.weak.fetch_sub(1, Release) == 1 {
    80006ba0:	a0b1                	j	80006bec <.LBB44_14+0x1a>
            unsafe { Global.deallocate(self.ptr.cast(), Layout::for_value_raw(self.ptr.as_ptr())) }
    80006ba2:	7562                	ld	a0,56(sp)
    80006ba4:	6108                	ld	a0,0(a0)
    80006ba6:	ffffe097          	auipc	ra,0xffffe
    80006baa:	fae080e7          	jalr	-82(ra) # 80004b54 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2681515e30a64b01E>
    80006bae:	f02a                	sd	a0,32(sp)
    80006bb0:	a009                	j	80006bb2 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x70>
    80006bb2:	7562                	ld	a0,56(sp)
    80006bb4:	6108                	ld	a0,0(a0)
    80006bb6:	ffffe097          	auipc	ra,0xffffe
    80006bba:	116080e7          	jalr	278(ra) # 80004ccc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE>
    80006bbe:	ec2a                	sd	a0,24(sp)
    80006bc0:	a009                	j	80006bc2 <_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf959808a8420f06E+0x80>
    80006bc2:	6562                	ld	a0,24(sp)
    80006bc4:	0000b097          	auipc	ra,0xb
    80006bc8:	b1a080e7          	jalr	-1254(ra) # 800116de <_ZN4core5alloc6layout6Layout13for_value_raw17h2981a545f9c5eb82E>
    80006bcc:	e82a                	sd	a0,16(sp)
    80006bce:	e42e                	sd	a1,8(sp)
    80006bd0:	a009                	j	80006bd2 <.LBB44_14>

0000000080006bd2 <.LBB44_14>:
    80006bd2:	0001e517          	auipc	a0,0x1e
    80006bd6:	93e50513          	addi	a0,a0,-1730 # 80024510 <.L__unnamed_2>
    80006bda:	7582                	ld	a1,32(sp)
    80006bdc:	6642                	ld	a2,16(sp)
    80006bde:	66a2                	ld	a3,8(sp)
    80006be0:	00001097          	auipc	ra,0x1
    80006be4:	bca080e7          	jalr	-1078(ra) # 800077aa <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E>
    80006be8:	a009                	j	80006bea <.LBB44_14+0x18>
        if inner.weak.fetch_sub(1, Release) == 1 {
    80006bea:	a009                	j	80006bec <.LBB44_14+0x1a>
    }
    80006bec:	a009                	j	80006bee <.LBB44_14+0x1c>
    80006bee:	60aa                	ld	ra,136(sp)
    80006bf0:	6149                	addi	sp,sp,144
    80006bf2:	8082                	ret

Disassembly of section .text._ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45b8b7e66c0a7430E:

0000000080006bf4 <_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45b8b7e66c0a7430E>:
    }
}

#[stable(feature = "rust1", since = "1.0.0")]
unsafe impl<#[may_dangle] T, A: Allocator> Drop for Vec<T, A> {
    fn drop(&mut self) {
    80006bf4:	1101                	addi	sp,sp,-32
    80006bf6:	ec06                	sd	ra,24(sp)
    80006bf8:	e82a                	sd	a0,16(sp)
        unsafe {
            // use drop for [T]
            // use a raw slice to refer to the elements of the vector as weakest necessary type;
            // could avoid questions of validity in certain cases
            ptr::drop_in_place(ptr::slice_from_raw_parts_mut(self.as_mut_ptr(), self.len))
    80006bfa:	e42a                	sd	a0,8(sp)
    80006bfc:	00013097          	auipc	ra,0x13
    80006c00:	e5c080e7          	jalr	-420(ra) # 80019a58 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E>
    80006c04:	e02a                	sd	a0,0(sp)
    80006c06:	a009                	j	80006c08 <_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45b8b7e66c0a7430E+0x14>
    80006c08:	6522                	ld	a0,8(sp)
    80006c0a:	690c                	ld	a1,16(a0)
    80006c0c:	6502                	ld	a0,0(sp)
    80006c0e:	0001a097          	auipc	ra,0x1a
    80006c12:	8c0080e7          	jalr	-1856(ra) # 800204ce <_ZN4core3ptr24slice_from_raw_parts_mut17h161906cb9cf0f72fE>
    80006c16:	a009                	j	80006c18 <_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45b8b7e66c0a7430E+0x24>
    80006c18:	a009                	j	80006c1a <_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45b8b7e66c0a7430E+0x26>
        }
        // RawVec handles deallocation
    }
    80006c1a:	60e2                	ld	ra,24(sp)
    80006c1c:	6105                	addi	sp,sp,32
    80006c1e:	8082                	ret

Disassembly of section .text._ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E:

0000000080006c20 <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E>:
    fn drop(&mut self) {
    80006c20:	7159                	addi	sp,sp,-112
    80006c22:	f486                	sd	ra,104(sp)
    80006c24:	e4aa                	sd	a0,72(sp)
    80006c26:	180c                	addi	a1,sp,48
        if let Some((ptr, layout)) = self.current_memory() {
    80006c28:	f02a                	sd	a0,32(sp)
    80006c2a:	852e                	mv	a0,a1
    80006c2c:	7582                	ld	a1,32(sp)
    80006c2e:	00007097          	auipc	ra,0x7
    80006c32:	a6c080e7          	jalr	-1428(ra) # 8000d69a <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E>
    80006c36:	a009                	j	80006c38 <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E+0x18>
    80006c38:	7542                	ld	a0,48(sp)
    80006c3a:	4581                	li	a1,0
    80006c3c:	00b51463          	bne	a0,a1,80006c44 <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E+0x24>
    80006c40:	a009                	j	80006c42 <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E+0x22>
    80006c42:	a03d                	j	80006c70 <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E+0x50>
    80006c44:	7542                	ld	a0,48(sp)
    80006c46:	e8aa                	sd	a0,80(sp)
    80006c48:	75e2                	ld	a1,56(sp)
    80006c4a:	6606                	ld	a2,64(sp)
    80006c4c:	ecae                	sd	a1,88(sp)
    80006c4e:	f0b2                	sd	a2,96(sp)
            unsafe { self.alloc.deallocate(ptr, layout) }
    80006c50:	7682                	ld	a3,32(sp)
    80006c52:	ec2a                	sd	a0,24(sp)
    80006c54:	8536                	mv	a0,a3
    80006c56:	6762                	ld	a4,24(sp)
    80006c58:	e82e                	sd	a1,16(sp)
    80006c5a:	85ba                	mv	a1,a4
    80006c5c:	67c2                	ld	a5,16(sp)
    80006c5e:	e432                	sd	a2,8(sp)
    80006c60:	863e                	mv	a2,a5
    80006c62:	66a2                	ld	a3,8(sp)
    80006c64:	00001097          	auipc	ra,0x1
    80006c68:	b46080e7          	jalr	-1210(ra) # 800077aa <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E>
    80006c6c:	a009                	j	80006c6e <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E+0x4e>
        if let Some((ptr, layout)) = self.current_memory() {
    80006c6e:	a009                	j	80006c70 <_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19b377d013c4c049E+0x50>
    }
    80006c70:	70a6                	ld	ra,104(sp)
    80006c72:	6165                	addi	sp,sp,112
    80006c74:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a5433bb8ad95f6dE:

0000000080006c76 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a5433bb8ad95f6dE>:
}

impl<T> Drop for SpinlockGuard<'_, T>{
    fn drop(&mut self){
    80006c76:	1141                	addi	sp,sp,-16
    80006c78:	e406                	sd	ra,8(sp)
    80006c7a:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006c7c:	6108                	ld	a0,0(a0)
    80006c7e:	ffffc097          	auipc	ra,0xffffc
    80006c82:	276080e7          	jalr	630(ra) # 80002ef4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hafcf7d3e54fd5e24E>
    80006c86:	a009                	j	80006c88 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a5433bb8ad95f6dE+0x12>
    }
    80006c88:	60a2                	ld	ra,8(sp)
    80006c8a:	0141                	addi	sp,sp,16
    80006c8c:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1826deeee0a81922E:

0000000080006c8e <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1826deeee0a81922E>:
    fn drop(&mut self){
    80006c8e:	1141                	addi	sp,sp,-16
    80006c90:	e406                	sd	ra,8(sp)
    80006c92:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006c94:	6108                	ld	a0,0(a0)
    80006c96:	ffffc097          	auipc	ra,0xffffc
    80006c9a:	f7e080e7          	jalr	-130(ra) # 80002c14 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h333990824090d9c9E>
    80006c9e:	a009                	j	80006ca0 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1826deeee0a81922E+0x12>
    }
    80006ca0:	60a2                	ld	ra,8(sp)
    80006ca2:	0141                	addi	sp,sp,16
    80006ca4:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h244d32bc65819942E:

0000000080006ca6 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h244d32bc65819942E>:
    fn drop(&mut self){
    80006ca6:	1141                	addi	sp,sp,-16
    80006ca8:	e406                	sd	ra,8(sp)
    80006caa:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006cac:	6108                	ld	a0,0(a0)
    80006cae:	ffffc097          	auipc	ra,0xffffc
    80006cb2:	526080e7          	jalr	1318(ra) # 800031d4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hf94aca6222210a61E>
    80006cb6:	a009                	j	80006cb8 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h244d32bc65819942E+0x12>
    }
    80006cb8:	60a2                	ld	ra,8(sp)
    80006cba:	0141                	addi	sp,sp,16
    80006cbc:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3cbdacfd6cfb05f6E:

0000000080006cbe <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3cbdacfd6cfb05f6E>:
    fn drop(&mut self){
    80006cbe:	1141                	addi	sp,sp,-16
    80006cc0:	e406                	sd	ra,8(sp)
    80006cc2:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006cc4:	6108                	ld	a0,0(a0)
    80006cc6:	ffffc097          	auipc	ra,0xffffc
    80006cca:	2e6080e7          	jalr	742(ra) # 80002fac <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17hcfc08786fca62e40E>
    80006cce:	a009                	j	80006cd0 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3cbdacfd6cfb05f6E+0x12>
    }
    80006cd0:	60a2                	ld	ra,8(sp)
    80006cd2:	0141                	addi	sp,sp,16
    80006cd4:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48d25f965ff6e46eE:

0000000080006cd6 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48d25f965ff6e46eE>:
    fn drop(&mut self){
    80006cd6:	1141                	addi	sp,sp,-16
    80006cd8:	e406                	sd	ra,8(sp)
    80006cda:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006cdc:	6108                	ld	a0,0(a0)
    80006cde:	ffffc097          	auipc	ra,0xffffc
    80006ce2:	dc6080e7          	jalr	-570(ra) # 80002aa4 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h0a9fc2be2300cfbbE>
    80006ce6:	a009                	j	80006ce8 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48d25f965ff6e46eE+0x12>
    }
    80006ce8:	60a2                	ld	ra,8(sp)
    80006cea:	0141                	addi	sp,sp,16
    80006cec:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h61c474a0202a1b54E:

0000000080006cee <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h61c474a0202a1b54E>:
    fn drop(&mut self){
    80006cee:	1141                	addi	sp,sp,-16
    80006cf0:	e406                	sd	ra,8(sp)
    80006cf2:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006cf4:	6108                	ld	a0,0(a0)
    80006cf6:	ffffc097          	auipc	ra,0xffffc
    80006cfa:	426080e7          	jalr	1062(ra) # 8000311c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he7f117cb3ee9e6c4E>
    80006cfe:	a009                	j	80006d00 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h61c474a0202a1b54E+0x12>
    }
    80006d00:	60a2                	ld	ra,8(sp)
    80006d02:	0141                	addi	sp,sp,16
    80006d04:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6ff4b216d5eed463E:

0000000080006d06 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6ff4b216d5eed463E>:
    fn drop(&mut self){
    80006d06:	1141                	addi	sp,sp,-16
    80006d08:	e406                	sd	ra,8(sp)
    80006d0a:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006d0c:	6108                	ld	a0,0(a0)
    80006d0e:	ffffc097          	auipc	ra,0xffffc
    80006d12:	fbe080e7          	jalr	-66(ra) # 80002ccc <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3475fa44672a5874E>
    80006d16:	a009                	j	80006d18 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6ff4b216d5eed463E+0x12>
    }
    80006d18:	60a2                	ld	ra,8(sp)
    80006d1a:	0141                	addi	sp,sp,16
    80006d1c:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7851e217fa060620E:

0000000080006d1e <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7851e217fa060620E>:
    fn drop(&mut self){
    80006d1e:	1141                	addi	sp,sp,-16
    80006d20:	e406                	sd	ra,8(sp)
    80006d22:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006d24:	6108                	ld	a0,0(a0)
    80006d26:	ffffc097          	auipc	ra,0xffffc
    80006d2a:	33e080e7          	jalr	830(ra) # 80003064 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17he596454499902299E>
    80006d2e:	a009                	j	80006d30 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7851e217fa060620E+0x12>
    }
    80006d30:	60a2                	ld	ra,8(sp)
    80006d32:	0141                	addi	sp,sp,16
    80006d34:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc80c9f77592aeae7E:

0000000080006d36 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc80c9f77592aeae7E>:
    fn drop(&mut self){
    80006d36:	1141                	addi	sp,sp,-16
    80006d38:	e406                	sd	ra,8(sp)
    80006d3a:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006d3c:	6108                	ld	a0,0(a0)
    80006d3e:	ffffc097          	auipc	ra,0xffffc
    80006d42:	e1e080e7          	jalr	-482(ra) # 80002b5c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h3105c64f7ed3abd5E>
    80006d46:	a009                	j	80006d48 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc80c9f77592aeae7E+0x12>
    }
    80006d48:	60a2                	ld	ra,8(sp)
    80006d4a:	0141                	addi	sp,sp,16
    80006d4c:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hda502dfa9645bbb0E:

0000000080006d4e <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hda502dfa9645bbb0E>:
    fn drop(&mut self){
    80006d4e:	1141                	addi	sp,sp,-16
    80006d50:	e406                	sd	ra,8(sp)
    80006d52:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006d54:	6108                	ld	a0,0(a0)
    80006d56:	ffffc097          	auipc	ra,0xffffc
    80006d5a:	02e080e7          	jalr	46(ra) # 80002d84 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h6bed4fb4dc60ee27E>
    80006d5e:	a009                	j	80006d60 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hda502dfa9645bbb0E+0x12>
    }
    80006d60:	60a2                	ld	ra,8(sp)
    80006d62:	0141                	addi	sp,sp,16
    80006d64:	8082                	ret

Disassembly of section .text._ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hecbf736f992027fdE:

0000000080006d66 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hecbf736f992027fdE>:
    fn drop(&mut self){
    80006d66:	1141                	addi	sp,sp,-16
    80006d68:	e406                	sd	ra,8(sp)
    80006d6a:	e02a                	sd	a0,0(sp)
        self.spinlock.release()
    80006d6c:	6108                	ld	a0,0(a0)
    80006d6e:	ffffc097          	auipc	ra,0xffffc
    80006d72:	0ce080e7          	jalr	206(ra) # 80002e3c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7release17h8e15075d7634cc19E>
    80006d76:	a009                	j	80006d78 <_ZN88_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hecbf736f992027fdE+0x12>
    }
    80006d78:	60a2                	ld	ra,8(sp)
    80006d7a:	0141                	addi	sp,sp,16
    80006d7c:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a90c86e51583be4E:

0000000080006d7e <_ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a90c86e51583be4E>:
}

impl<'a, T: ?Sized> Drop for SleepLockGuard<'a, T> {
    /// The dropping of the SpinLockGuard will call spinlock's release_lock(),
    /// through its reference to its original spinlock.
    fn drop(&mut self) {
    80006d7e:	1141                	addi	sp,sp,-16
    80006d80:	e406                	sd	ra,8(sp)
    80006d82:	e02a                	sd	a0,0(sp)
        self.lock.unlock();
    80006d84:	6108                	ld	a0,0(a0)
    80006d86:	00000097          	auipc	ra,0x0
    80006d8a:	628080e7          	jalr	1576(ra) # 800073ae <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17hc039bf67fcdc6dc7E>
    80006d8e:	a009                	j	80006d90 <_ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0a90c86e51583be4E+0x12>
    }
    80006d90:	60a2                	ld	ra,8(sp)
    80006d92:	0141                	addi	sp,sp,16
    80006d94:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h881b2ec553d00217E:

0000000080006d96 <_ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h881b2ec553d00217E>:
    fn drop(&mut self) {
    80006d96:	1141                	addi	sp,sp,-16
    80006d98:	e406                	sd	ra,8(sp)
    80006d9a:	e02a                	sd	a0,0(sp)
        self.lock.unlock();
    80006d9c:	6108                	ld	a0,0(a0)
    80006d9e:	00000097          	auipc	ra,0x0
    80006da2:	5c8080e7          	jalr	1480(ra) # 80007366 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17h6c8c1cd7b0081987E>
    80006da6:	a009                	j	80006da8 <_ZN90_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h881b2ec553d00217E+0x12>
    }
    80006da8:	60a2                	ld	ra,8(sp)
    80006daa:	0141                	addi	sp,sp,16
    80006dac:	8082                	ret

Disassembly of section .text._ZN62_$LT$kernel..fs..bio..Buf$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1634535ead730fdfE:

0000000080006dae <_ZN62_$LT$kernel..fs..bio..Buf$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1634535ead730fdfE>:
    fn drop(&mut self) {
    80006dae:	7179                	addi	sp,sp,-48
    80006db0:	f406                	sd	ra,40(sp)
    80006db2:	f02a                	sd	a0,32(sp)
        drop(self.data.take());
    80006db4:	01050593          	addi	a1,a0,16
    80006db8:	ec2a                	sd	a0,24(sp)
    80006dba:	852e                	mv	a0,a1
    80006dbc:	00011097          	auipc	ra,0x11
    80006dc0:	7a2080e7          	jalr	1954(ra) # 8001855e <_ZN4core6option15Option$LT$T$GT$4take17h3f9802c777712151E>
    80006dc4:	e82a                	sd	a0,16(sp)
    80006dc6:	e42e                	sd	a1,8(sp)
    80006dc8:	a009                	j	80006dca <_ZN62_$LT$kernel..fs..bio..Buf$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1634535ead730fdfE+0x1c>
    80006dca:	6542                	ld	a0,16(sp)
    80006dcc:	65a2                	ld	a1,8(sp)
    80006dce:	00007097          	auipc	ra,0x7
    80006dd2:	bd8080e7          	jalr	-1064(ra) # 8000d9a6 <_ZN4core3mem4drop17ha8580e789fd6e9b5E>
    80006dd6:	a009                	j	80006dd8 <_ZN62_$LT$kernel..fs..bio..Buf$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1634535ead730fdfE+0x2a>
        BCACHE.brelse(self.index);        
    80006dd8:	6562                	ld	a0,24(sp)
    80006dda:	610c                	ld	a1,0(a0)

0000000080006ddc <.LBB60_4>:
    80006ddc:	00025517          	auipc	a0,0x25
    80006de0:	22450513          	addi	a0,a0,548 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80006de4:	ffffb097          	auipc	ra,0xffffb
    80006de8:	b02080e7          	jalr	-1278(ra) # 800018e6 <_ZN6kernel2fs3bio6Bcache6brelse17h469141cf5d3adce7E>
    80006dec:	a009                	j	80006dee <.LBB60_4+0x12>
    }
    80006dee:	70a2                	ld	ra,40(sp)
    80006df0:	6145                	addi	sp,sp,48
    80006df2:	8082                	ret

Disassembly of section .text._ZN66_$LT$kernel..fs..inode..Inode$u20$as$u20$core..ops..drop..Drop$GT$4drop17h729e4baa48b3979dE:

0000000080006df4 <_ZN66_$LT$kernel..fs..inode..Inode$u20$as$u20$core..ops..drop..Drop$GT$4drop17h729e4baa48b3979dE>:

impl Drop for Inode {
    /// Done with this inode. 
    /// If this is the last reference in the inode cache, then is might be recycled. 
    /// Further, if this inode has no links anymore, free this inode in the disk. 
    fn drop(&mut self) {
    80006df4:	1101                	addi	sp,sp,-32
    80006df6:	ec06                	sd	ra,24(sp)
    80006df8:	e82a                	sd	a0,16(sp)

0000000080006dfa <.LBB61_2>:
        ICACHE.put(self)
    80006dfa:	00053597          	auipc	a1,0x53
    80006dfe:	33658593          	addi	a1,a1,822 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    80006e02:	e42a                	sd	a0,8(sp)
    80006e04:	852e                	mv	a0,a1
    80006e06:	65a2                	ld	a1,8(sp)
    80006e08:	00013097          	auipc	ra,0x13
    80006e0c:	ec0080e7          	jalr	-320(ra) # 80019cc8 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E>
    80006e10:	a009                	j	80006e12 <.LBB61_2+0x18>
    }
    80006e12:	60e2                	ld	ra,24(sp)
    80006e14:	6105                	addi	sp,sp,32
    80006e16:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc8box_free17h671ccf2e699f13f3E:

0000000080006e18 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E>:
// This signature has to be the same as `Box`, otherwise an ICE will happen.
// When an additional parameter to `Box` is added (like `A: Allocator`), this has to be added here as
// well.
// For example if `Box` is changed to  `struct Box<T: ?Sized, A: Allocator>(Unique<T>, A)`,
// this function has to be changed to `fn box_free<T: ?Sized, A: Allocator>(Unique<T>, A)` as well.
pub(crate) unsafe fn box_free<T: ?Sized, A: Allocator>(ptr: Unique<T>, alloc: A) {
    80006e18:	7119                	addi	sp,sp,-128
    80006e1a:	fc86                	sd	ra,120(sp)
    80006e1c:	fc2a                	sd	a0,56(sp)
    80006e1e:	1828                	addi	a0,sp,56
    unsafe {
        let size = size_of_val(ptr.as_ref());
    80006e20:	ffffb097          	auipc	ra,0xffffb
    80006e24:	1c2080e7          	jalr	450(ra) # 80001fe2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h79218c7991a833abE>
    80006e28:	a009                	j	80006e2a <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x12>
    80006e2a:	6505                	lui	a0,0x1
    80006e2c:	e4aa                	sd	a0,72(sp)
    80006e2e:	e8aa                	sd	a0,80(sp)
    80006e30:	f82a                	sd	a0,48(sp)
    80006e32:	a009                	j	80006e34 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x1c>
    80006e34:	1828                	addi	a0,sp,56
        let align = min_align_of_val(ptr.as_ref());
    80006e36:	ffffb097          	auipc	ra,0xffffb
    80006e3a:	1ac080e7          	jalr	428(ra) # 80001fe2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h79218c7991a833abE>
    80006e3e:	a009                	j	80006e40 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x28>
    80006e40:	6505                	lui	a0,0x1
    80006e42:	ecaa                	sd	a0,88(sp)
    80006e44:	f0aa                	sd	a0,96(sp)
    80006e46:	f42a                	sd	a0,40(sp)
    80006e48:	a009                	j	80006e4a <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x32>
        let layout = Layout::from_size_align_unchecked(size, align);
    80006e4a:	7542                	ld	a0,48(sp)
    80006e4c:	75a2                	ld	a1,40(sp)
    80006e4e:	ffffe097          	auipc	ra,0xffffe
    80006e52:	700080e7          	jalr	1792(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80006e56:	862a                	mv	a2,a0
    80006e58:	86ae                	mv	a3,a1
    80006e5a:	f4aa                	sd	a0,104(sp)
    80006e5c:	f8ae                	sd	a1,112(sp)
    80006e5e:	f032                	sd	a2,32(sp)
    80006e60:	ec36                	sd	a3,24(sp)
    80006e62:	a009                	j	80006e64 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x4c>
        alloc.deallocate(ptr.cast().into(), layout)
    80006e64:	7562                	ld	a0,56(sp)
    80006e66:	ffffb097          	auipc	ra,0xffffb
    80006e6a:	0f4080e7          	jalr	244(ra) # 80001f5a <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf6d9149f6c36667bE>
    80006e6e:	e82a                	sd	a0,16(sp)
    80006e70:	a009                	j	80006e72 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x5a>
    80006e72:	6542                	ld	a0,16(sp)
    80006e74:	ffffb097          	auipc	ra,0xffffb
    80006e78:	1e4080e7          	jalr	484(ra) # 80002058 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he3a5d381a0afee04E>
    80006e7c:	e42a                	sd	a0,8(sp)
    80006e7e:	a009                	j	80006e80 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x68>
    80006e80:	0088                	addi	a0,sp,64
    80006e82:	65a2                	ld	a1,8(sp)
    80006e84:	7602                	ld	a2,32(sp)
    80006e86:	66e2                	ld	a3,24(sp)
    80006e88:	00001097          	auipc	ra,0x1
    80006e8c:	922080e7          	jalr	-1758(ra) # 800077aa <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E>
    80006e90:	a009                	j	80006e92 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x7a>
    }
}
    80006e92:	a009                	j	80006e94 <_ZN5alloc5alloc8box_free17h671ccf2e699f13f3E+0x7c>
    80006e94:	70e6                	ld	ra,120(sp)
    80006e96:	6109                	addi	sp,sp,128
    80006e98:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E:

0000000080006e9a <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E>:
pub(crate) unsafe fn box_free<T: ?Sized, A: Allocator>(ptr: Unique<T>, alloc: A) {
    80006e9a:	7119                	addi	sp,sp,-128
    80006e9c:	fc86                	sd	ra,120(sp)
    80006e9e:	fc2a                	sd	a0,56(sp)
    80006ea0:	1828                	addi	a0,sp,56
        let size = size_of_val(ptr.as_ref());
    80006ea2:	ffffb097          	auipc	ra,0xffffb
    80006ea6:	178080e7          	jalr	376(ra) # 8000201a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hee41a35c2ca44304E>
    80006eaa:	a009                	j	80006eac <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x12>
    80006eac:	04000513          	li	a0,64
    80006eb0:	e4aa                	sd	a0,72(sp)
    80006eb2:	e8aa                	sd	a0,80(sp)
    80006eb4:	f82a                	sd	a0,48(sp)
    80006eb6:	a009                	j	80006eb8 <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x1e>
    80006eb8:	1828                	addi	a0,sp,56
        let align = min_align_of_val(ptr.as_ref());
    80006eba:	ffffb097          	auipc	ra,0xffffb
    80006ebe:	160080e7          	jalr	352(ra) # 8000201a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hee41a35c2ca44304E>
    80006ec2:	a009                	j	80006ec4 <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x2a>
    80006ec4:	4521                	li	a0,8
    80006ec6:	ecaa                	sd	a0,88(sp)
    80006ec8:	f0aa                	sd	a0,96(sp)
    80006eca:	f42a                	sd	a0,40(sp)
    80006ecc:	a009                	j	80006ece <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x34>
        let layout = Layout::from_size_align_unchecked(size, align);
    80006ece:	7542                	ld	a0,48(sp)
    80006ed0:	75a2                	ld	a1,40(sp)
    80006ed2:	ffffe097          	auipc	ra,0xffffe
    80006ed6:	67c080e7          	jalr	1660(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80006eda:	862a                	mv	a2,a0
    80006edc:	86ae                	mv	a3,a1
    80006ede:	f4aa                	sd	a0,104(sp)
    80006ee0:	f8ae                	sd	a1,112(sp)
    80006ee2:	f032                	sd	a2,32(sp)
    80006ee4:	ec36                	sd	a3,24(sp)
    80006ee6:	a009                	j	80006ee8 <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x4e>
        alloc.deallocate(ptr.cast().into(), layout)
    80006ee8:	7562                	ld	a0,56(sp)
    80006eea:	ffffb097          	auipc	ra,0xffffb
    80006eee:	ff8080e7          	jalr	-8(ra) # 80001ee2 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h0c1984262f2d00bfE>
    80006ef2:	e82a                	sd	a0,16(sp)
    80006ef4:	a009                	j	80006ef6 <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x5c>
    80006ef6:	6542                	ld	a0,16(sp)
    80006ef8:	ffffb097          	auipc	ra,0xffffb
    80006efc:	160080e7          	jalr	352(ra) # 80002058 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he3a5d381a0afee04E>
    80006f00:	e42a                	sd	a0,8(sp)
    80006f02:	a009                	j	80006f04 <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x6a>
    80006f04:	0088                	addi	a0,sp,64
    80006f06:	65a2                	ld	a1,8(sp)
    80006f08:	7602                	ld	a2,32(sp)
    80006f0a:	66e2                	ld	a3,24(sp)
    80006f0c:	00001097          	auipc	ra,0x1
    80006f10:	89e080e7          	jalr	-1890(ra) # 800077aa <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E>
    80006f14:	a009                	j	80006f16 <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x7c>
}
    80006f16:	a009                	j	80006f18 <_ZN5alloc5alloc8box_free17hc4c8f6648b5ef6d7E+0x7e>
    80006f18:	70e6                	ld	ra,120(sp)
    80006f1a:	6109                	addi	sp,sp,128
    80006f1c:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E:

0000000080006f1e <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E>:
pub(crate) unsafe fn box_free<T: ?Sized, A: Allocator>(ptr: Unique<T>, alloc: A) {
    80006f1e:	7119                	addi	sp,sp,-128
    80006f20:	fc86                	sd	ra,120(sp)
    80006f22:	fc2a                	sd	a0,56(sp)
    80006f24:	1828                	addi	a0,sp,56
        let size = size_of_val(ptr.as_ref());
    80006f26:	ffffb097          	auipc	ra,0xffffb
    80006f2a:	0d8080e7          	jalr	216(ra) # 80001ffe <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h8e2fe1161ed022c7E>
    80006f2e:	a009                	j	80006f30 <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x12>
    80006f30:	03800513          	li	a0,56
    80006f34:	e4aa                	sd	a0,72(sp)
    80006f36:	e8aa                	sd	a0,80(sp)
    80006f38:	f82a                	sd	a0,48(sp)
    80006f3a:	a009                	j	80006f3c <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x1e>
    80006f3c:	1828                	addi	a0,sp,56
        let align = min_align_of_val(ptr.as_ref());
    80006f3e:	ffffb097          	auipc	ra,0xffffb
    80006f42:	0c0080e7          	jalr	192(ra) # 80001ffe <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h8e2fe1161ed022c7E>
    80006f46:	a009                	j	80006f48 <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x2a>
    80006f48:	4521                	li	a0,8
    80006f4a:	ecaa                	sd	a0,88(sp)
    80006f4c:	f0aa                	sd	a0,96(sp)
    80006f4e:	f42a                	sd	a0,40(sp)
    80006f50:	a009                	j	80006f52 <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x34>
        let layout = Layout::from_size_align_unchecked(size, align);
    80006f52:	7542                	ld	a0,48(sp)
    80006f54:	75a2                	ld	a1,40(sp)
    80006f56:	ffffe097          	auipc	ra,0xffffe
    80006f5a:	5f8080e7          	jalr	1528(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80006f5e:	862a                	mv	a2,a0
    80006f60:	86ae                	mv	a3,a1
    80006f62:	f4aa                	sd	a0,104(sp)
    80006f64:	f8ae                	sd	a1,112(sp)
    80006f66:	f032                	sd	a2,32(sp)
    80006f68:	ec36                	sd	a3,24(sp)
    80006f6a:	a009                	j	80006f6c <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x4e>
        alloc.deallocate(ptr.cast().into(), layout)
    80006f6c:	7562                	ld	a0,56(sp)
    80006f6e:	ffffb097          	auipc	ra,0xffffb
    80006f72:	fc4080e7          	jalr	-60(ra) # 80001f32 <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hdc1230251483f2a6E>
    80006f76:	e82a                	sd	a0,16(sp)
    80006f78:	a009                	j	80006f7a <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x5c>
    80006f7a:	6542                	ld	a0,16(sp)
    80006f7c:	ffffb097          	auipc	ra,0xffffb
    80006f80:	0dc080e7          	jalr	220(ra) # 80002058 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he3a5d381a0afee04E>
    80006f84:	e42a                	sd	a0,8(sp)
    80006f86:	a009                	j	80006f88 <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x6a>
    80006f88:	0088                	addi	a0,sp,64
    80006f8a:	65a2                	ld	a1,8(sp)
    80006f8c:	7602                	ld	a2,32(sp)
    80006f8e:	66e2                	ld	a3,24(sp)
    80006f90:	00001097          	auipc	ra,0x1
    80006f94:	81a080e7          	jalr	-2022(ra) # 800077aa <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E>
    80006f98:	a009                	j	80006f9a <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x7c>
}
    80006f9a:	a009                	j	80006f9c <_ZN5alloc5alloc8box_free17hd35d7731b1d3f5a6E+0x7e>
    80006f9c:	70e6                	ld	ra,120(sp)
    80006f9e:	6109                	addi	sp,sp,128
    80006fa0:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h11b0077e1746bda8E:

0000000080006fa2 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h11b0077e1746bda8E>:
    fn into(self) -> U {
    80006fa2:	1101                	addi	sp,sp,-32
    80006fa4:	ec06                	sd	ra,24(sp)
    80006fa6:	e82a                	sd	a0,16(sp)
        U::from(self)
    80006fa8:	ffffe097          	auipc	ra,0xffffe
    80006fac:	e4a080e7          	jalr	-438(ra) # 80004df2 <_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3ba4aa72031e4620E>
    80006fb0:	e42a                	sd	a0,8(sp)
    80006fb2:	a009                	j	80006fb4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h11b0077e1746bda8E+0x12>
    }
    80006fb4:	6522                	ld	a0,8(sp)
    80006fb6:	60e2                	ld	ra,24(sp)
    80006fb8:	6105                	addi	sp,sp,32
    80006fba:	8082                	ret

Disassembly of section .text._ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h95c2d0e77d18f73aE:

0000000080006fbc <_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h95c2d0e77d18f73aE>:
    fn from_inner(ptr: NonNull<ArcInner<T>>) -> Self {
    80006fbc:	1101                	addi	sp,sp,-32
    80006fbe:	ec2a                	sd	a0,24(sp)
        Self { ptr, phantom: PhantomData }
    80006fc0:	e42a                	sd	a0,8(sp)
    }
    80006fc2:	6105                	addi	sp,sp,32
    80006fc4:	8082                	ret

Disassembly of section .text._ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17had976c9596d4cdcfE:

0000000080006fc6 <_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17had976c9596d4cdcfE>:
    pub unsafe fn get_mut_unchecked(this: &mut Self) -> &mut T {
    80006fc6:	1101                	addi	sp,sp,-32
    80006fc8:	ec06                	sd	ra,24(sp)
    80006fca:	e82a                	sd	a0,16(sp)
        unsafe { &mut (*this.ptr.as_ptr()).data }
    80006fcc:	6108                	ld	a0,0(a0)
    80006fce:	ffffe097          	auipc	ra,0xffffe
    80006fd2:	cfe080e7          	jalr	-770(ra) # 80004ccc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE>
    80006fd6:	e42a                	sd	a0,8(sp)
    80006fd8:	a009                	j	80006fda <_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17had976c9596d4cdcfE+0x14>
    80006fda:	6522                	ld	a0,8(sp)
    80006fdc:	0541                	addi	a0,a0,16
    }
    80006fde:	60e2                	ld	ra,24(sp)
    80006fe0:	6105                	addi	sp,sp,32
    80006fe2:	8082                	ret

Disassembly of section .text._ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE:

0000000080006fe4 <_ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE>:
    pub fn new(data: T) -> Arc<T> {
    80006fe4:	7135                	addi	sp,sp,-160
    80006fe6:	ed06                	sd	ra,152(sp)
    80006fe8:	05000593          	li	a1,80
    80006fec:	4621                	li	a2,8
        let x: Box<_> = box ArcInner {
    80006fee:	f42a                	sd	a0,40(sp)
    80006ff0:	852e                	mv	a0,a1
    80006ff2:	85b2                	mv	a1,a2
    80006ff4:	00000097          	auipc	ra,0x0
    80006ff8:	5be080e7          	jalr	1470(ra) # 800075b2 <_ZN5alloc5alloc15exchange_malloc17h4aee5a7c3b8f858bE>
    80006ffc:	4585                	li	a1,1
            strong: atomic::AtomicUsize::new(1),
    80006ffe:	f02a                	sd	a0,32(sp)
    80007000:	852e                	mv	a0,a1
    80007002:	00006097          	auipc	ra,0x6
    80007006:	ff0080e7          	jalr	-16(ra) # 8000cff2 <_ZN4core4sync6atomic11AtomicUsize3new17hea74115b980a3925E>
    8000700a:	e12a                	sd	a0,128(sp)
    8000700c:	f82a                	sd	a0,48(sp)
    8000700e:	a009                	j	80007010 <_ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE+0x2c>
    80007010:	4505                	li	a0,1
            weak: atomic::AtomicUsize::new(1),
    80007012:	00006097          	auipc	ra,0x6
    80007016:	fe0080e7          	jalr	-32(ra) # 8000cff2 <_ZN4core4sync6atomic11AtomicUsize3new17hea74115b980a3925E>
    8000701a:	e52a                	sd	a0,136(sp)
    8000701c:	fc2a                	sd	a0,56(sp)
    8000701e:	a009                	j	80007020 <_ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE+0x3c>
            data,
    80007020:	7522                	ld	a0,40(sp)
    80007022:	7d0c                	ld	a1,56(a0)
    80007024:	fcae                	sd	a1,120(sp)
    80007026:	790c                	ld	a1,48(a0)
    80007028:	f8ae                	sd	a1,112(sp)
    8000702a:	750c                	ld	a1,40(a0)
    8000702c:	f4ae                	sd	a1,104(sp)
    8000702e:	710c                	ld	a1,32(a0)
    80007030:	f0ae                	sd	a1,96(sp)
    80007032:	6d0c                	ld	a1,24(a0)
    80007034:	ecae                	sd	a1,88(sp)
    80007036:	690c                	ld	a1,16(a0)
    80007038:	e8ae                	sd	a1,80(sp)
    8000703a:	650c                	ld	a1,8(a0)
    8000703c:	e4ae                	sd	a1,72(sp)
    8000703e:	610c                	ld	a1,0(a0)
    80007040:	e0ae                	sd	a1,64(sp)
        let x: Box<_> = box ArcInner {
    80007042:	75c2                	ld	a1,48(sp)
    80007044:	7602                	ld	a2,32(sp)
    80007046:	e20c                	sd	a1,0(a2)
    80007048:	75e2                	ld	a1,56(sp)
    8000704a:	e60c                	sd	a1,8(a2)
    8000704c:	75c6                	ld	a1,112(sp)
    8000704e:	e22c                	sd	a1,64(a2)
    80007050:	75a6                	ld	a1,104(sp)
    80007052:	fe0c                	sd	a1,56(a2)
    80007054:	7586                	ld	a1,96(sp)
    80007056:	fa0c                	sd	a1,48(a2)
    80007058:	65e6                	ld	a1,88(sp)
    8000705a:	f60c                	sd	a1,40(a2)
    8000705c:	65c6                	ld	a1,80(sp)
    8000705e:	f20c                	sd	a1,32(a2)
    80007060:	65a6                	ld	a1,72(sp)
    80007062:	ee0c                	sd	a1,24(a2)
    80007064:	6586                	ld	a1,64(sp)
    80007066:	ea0c                	sd	a1,16(a2)
    80007068:	75e6                	ld	a1,120(sp)
    8000706a:	e62c                	sd	a1,72(a2)
    8000706c:	e932                	sd	a2,144(sp)
        Self::from_inner(Box::leak(x).into())
    8000706e:	8532                	mv	a0,a2
    80007070:	0000f097          	auipc	ra,0xf
    80007074:	d96080e7          	jalr	-618(ra) # 80015e06 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf4d2de252b031521E>
    80007078:	ec2a                	sd	a0,24(sp)
    8000707a:	a009                	j	8000707c <_ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE+0x98>
    8000707c:	6562                	ld	a0,24(sp)
    8000707e:	00000097          	auipc	ra,0x0
    80007082:	f24080e7          	jalr	-220(ra) # 80006fa2 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h11b0077e1746bda8E>
    80007086:	e82a                	sd	a0,16(sp)
    80007088:	a009                	j	8000708a <_ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE+0xa6>
    8000708a:	6542                	ld	a0,16(sp)
    8000708c:	00000097          	auipc	ra,0x0
    80007090:	f30080e7          	jalr	-208(ra) # 80006fbc <_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h95c2d0e77d18f73aE>
    80007094:	e42a                	sd	a0,8(sp)
    80007096:	a009                	j	80007098 <_ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE+0xb4>
    }
    80007098:	6522                	ld	a0,8(sp)
    8000709a:	60ea                	ld	ra,152(sp)
    8000709c:	610d                	addi	sp,sp,160
    8000709e:	8082                	ret

Disassembly of section .text._ZN5alloc4sync12Arc$LT$T$GT$5inner17h12267b24423996bdE:

00000000800070a0 <_ZN5alloc4sync12Arc$LT$T$GT$5inner17h12267b24423996bdE>:
    fn inner(&self) -> &ArcInner<T> {
    800070a0:	1101                	addi	sp,sp,-32
    800070a2:	ec06                	sd	ra,24(sp)
    800070a4:	e82a                	sd	a0,16(sp)
        unsafe { self.ptr.as_ref() }
    800070a6:	ffffe097          	auipc	ra,0xffffe
    800070aa:	c58080e7          	jalr	-936(ra) # 80004cfe <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h55741571bf86c938E>
    800070ae:	e42a                	sd	a0,8(sp)
    800070b0:	a009                	j	800070b2 <_ZN5alloc4sync12Arc$LT$T$GT$5inner17h12267b24423996bdE+0x12>
    }
    800070b2:	6522                	ld	a0,8(sp)
    800070b4:	60e2                	ld	ra,24(sp)
    800070b6:	6105                	addi	sp,sp,32
    800070b8:	8082                	ret

Disassembly of section .text._ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hba4de10fe3575ae0E:

00000000800070ba <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hba4de10fe3575ae0E>:
    unsafe fn drop_slow(&mut self) {
    800070ba:	1101                	addi	sp,sp,-32
    800070bc:	ec06                	sd	ra,24(sp)
    800070be:	e82a                	sd	a0,16(sp)
        unsafe { ptr::drop_in_place(Self::get_mut_unchecked(self)) };
    800070c0:	e02a                	sd	a0,0(sp)
    800070c2:	00000097          	auipc	ra,0x0
    800070c6:	f04080e7          	jalr	-252(ra) # 80006fc6 <_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17had976c9596d4cdcfE>
    800070ca:	a009                	j	800070cc <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hba4de10fe3575ae0E+0x12>
    800070cc:	a009                	j	800070ce <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hba4de10fe3575ae0E+0x14>
        drop(Weak { ptr: self.ptr });
    800070ce:	6502                	ld	a0,0(sp)
    800070d0:	610c                	ld	a1,0(a0)
    800070d2:	e42e                	sd	a1,8(sp)
    800070d4:	852e                	mv	a0,a1
    800070d6:	00007097          	auipc	ra,0x7
    800070da:	96e080e7          	jalr	-1682(ra) # 8000da44 <_ZN4core3mem4drop17he87ffc0238a1a8c3E>
    800070de:	a009                	j	800070e0 <_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hba4de10fe3575ae0E+0x26>
    }
    800070e0:	60e2                	ld	ra,24(sp)
    800070e2:	6105                	addi	sp,sp,32
    800070e4:	8082                	ret

Disassembly of section .text._ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE:

00000000800070e6 <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE>:
    fn inner(&self) -> Option<WeakInner<'_>> {
    800070e6:	711d                	addi	sp,sp,-96
    800070e8:	ec86                	sd	ra,88(sp)
    800070ea:	e4aa                	sd	a0,72(sp)
        if is_dangling(self.ptr.as_ptr()) {
    800070ec:	610c                	ld	a1,0(a0)
    800070ee:	f02a                	sd	a0,32(sp)
    800070f0:	852e                	mv	a0,a1
    800070f2:	ffffe097          	auipc	ra,0xffffe
    800070f6:	bda080e7          	jalr	-1062(ra) # 80004ccc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE>
    800070fa:	ec2a                	sd	a0,24(sp)
    800070fc:	a009                	j	800070fe <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE+0x18>
    800070fe:	6562                	ld	a0,24(sp)
    80007100:	ffffd097          	auipc	ra,0xffffd
    80007104:	ffc080e7          	jalr	-4(ra) # 800040fc <_ZN5alloc2rc11is_dangling17h0e0687bb3405cb5aE>
    80007108:	e82a                	sd	a0,16(sp)
    8000710a:	a009                	j	8000710c <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE+0x26>
    8000710c:	4501                	li	a0,0
    8000710e:	65c2                	ld	a1,16(sp)
    80007110:	00a58663          	beq	a1,a0,8000711c <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE+0x36>
    80007114:	a009                	j	80007116 <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE+0x30>
    80007116:	4501                	li	a0,0
            None
    80007118:	f42a                	sd	a0,40(sp)
        if is_dangling(self.ptr.as_ptr()) {
    8000711a:	a01d                	j	80007140 <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE+0x5a>
                let ptr = self.ptr.as_ptr();
    8000711c:	7502                	ld	a0,32(sp)
    8000711e:	6108                	ld	a0,0(a0)
    80007120:	ffffe097          	auipc	ra,0xffffe
    80007124:	bac080e7          	jalr	-1108(ra) # 80004ccc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h791cb46df7de694dE>
    80007128:	85aa                	mv	a1,a0
    8000712a:	e8aa                	sd	a0,80(sp)
    8000712c:	e42e                	sd	a1,8(sp)
    8000712e:	a009                	j	80007130 <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE+0x4a>
                WeakInner { strong: &(*ptr).strong, weak: &(*ptr).weak }
    80007130:	6522                	ld	a0,8(sp)
    80007132:	00850593          	addi	a1,a0,8 # 1008 <.Lline_table_start0+0x262>
    80007136:	fc2e                	sd	a1,56(sp)
    80007138:	e0aa                	sd	a0,64(sp)
            Some(unsafe {
    8000713a:	f42e                	sd	a1,40(sp)
    8000713c:	f82a                	sd	a0,48(sp)
        if is_dangling(self.ptr.as_ptr()) {
    8000713e:	a009                	j	80007140 <_ZN5alloc4sync13Weak$LT$T$GT$5inner17h989b8b5998d4053bE+0x5a>
    }
    80007140:	7522                	ld	a0,40(sp)
    80007142:	75c2                	ld	a1,48(sp)
    80007144:	60e6                	ld	ra,88(sp)
    80007146:	6125                	addi	sp,sp,96
    80007148:	8082                	ret

Disassembly of section .text._ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E:

000000008000714a <_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E>:
    fn clone(&self) -> Arc<T> {
    8000714a:	715d                	addi	sp,sp,-80
    8000714c:	e486                	sd	ra,72(sp)
    8000714e:	fc2a                	sd	a0,56(sp)
        let old_size = self.inner().strong.fetch_add(1, Relaxed);
    80007150:	f42a                	sd	a0,40(sp)
    80007152:	00000097          	auipc	ra,0x0
    80007156:	f4e080e7          	jalr	-178(ra) # 800070a0 <_ZN5alloc4sync12Arc$LT$T$GT$5inner17h12267b24423996bdE>
    8000715a:	f02a                	sd	a0,32(sp)
    8000715c:	a009                	j	8000715e <_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E+0x14>
    8000715e:	4501                	li	a0,0
    80007160:	02a10ba3          	sb	a0,55(sp)
    80007164:	4585                	li	a1,1
    80007166:	7602                	ld	a2,32(sp)
    80007168:	ec2a                	sd	a0,24(sp)
    8000716a:	8532                	mv	a0,a2
    8000716c:	6662                	ld	a2,24(sp)
    8000716e:	00006097          	auipc	ra,0x6
    80007172:	ea0080e7          	jalr	-352(ra) # 8000d00e <_ZN4core4sync6atomic11AtomicUsize9fetch_add17h665917eede16f7e6E>
    80007176:	85aa                	mv	a1,a0
    80007178:	e0aa                	sd	a0,64(sp)
    8000717a:	e82e                	sd	a1,16(sp)
    8000717c:	a009                	j	8000717e <_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E+0x34>
    8000717e:	557d                	li	a0,-1
        if old_size > MAX_REFCOUNT {
    80007180:	65c2                	ld	a1,16(sp)
    80007182:	00b54563          	blt	a0,a1,8000718c <_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E+0x42>
    80007186:	a009                	j	80007188 <_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E+0x3e>
            abort();
    80007188:	0000                	unimp
    8000718a:	0000                	unimp
        Self::from_inner(self.ptr)
    8000718c:	7522                	ld	a0,40(sp)
    8000718e:	6108                	ld	a0,0(a0)
    80007190:	00000097          	auipc	ra,0x0
    80007194:	e2c080e7          	jalr	-468(ra) # 80006fbc <_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h95c2d0e77d18f73aE>
    80007198:	e42a                	sd	a0,8(sp)
    8000719a:	a009                	j	8000719c <_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E+0x52>
    }
    8000719c:	6522                	ld	a0,8(sp)
    8000719e:	60a6                	ld	ra,72(sp)
    800071a0:	6161                	addi	sp,sp,80
    800071a2:	8082                	ret

Disassembly of section .text._ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he32eb554c76d51fbE:

00000000800071a4 <_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he32eb554c76d51fbE>:
    fn deref(&self) -> &T {
    800071a4:	1101                	addi	sp,sp,-32
    800071a6:	ec06                	sd	ra,24(sp)
    800071a8:	e82a                	sd	a0,16(sp)
        &self.inner().data
    800071aa:	00000097          	auipc	ra,0x0
    800071ae:	ef6080e7          	jalr	-266(ra) # 800070a0 <_ZN5alloc4sync12Arc$LT$T$GT$5inner17h12267b24423996bdE>
    800071b2:	e42a                	sd	a0,8(sp)
    800071b4:	a009                	j	800071b6 <_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he32eb554c76d51fbE+0x12>
    800071b6:	6522                	ld	a0,8(sp)
    800071b8:	0541                	addi	a0,a0,16
    }
    800071ba:	60e2                	ld	ra,24(sp)
    800071bc:	6105                	addi	sp,sp,32
    800071be:	8082                	ret

Disassembly of section .text._ZN4core3str8converts23from_utf8_unchecked_mut17h128d31fadbde6f60E:

00000000800071c0 <_ZN4core3str8converts23from_utf8_unchecked_mut17h128d31fadbde6f60E>:
///
/// assert_eq!("💖", heart);
/// ```
#[inline]
#[stable(feature = "str_mut_extras", since = "1.20.0")]
pub unsafe fn from_utf8_unchecked_mut(v: &mut [u8]) -> &mut str {
    800071c0:	1141                	addi	sp,sp,-16
    800071c2:	e02a                	sd	a0,0(sp)
    800071c4:	e42e                	sd	a1,8(sp)
    // SAFETY: the caller must guarantee that the bytes `v`
    // are valid UTF-8, thus the cast to `*mut str` is safe.
    // Also, the pointer dereference is safe because that pointer
    // comes from a reference which is guaranteed to be valid for writes.
    unsafe { &mut *(v as *mut [u8] as *mut str) }
}
    800071c6:	0141                	addi	sp,sp,16
    800071c8:	8082                	ret

Disassembly of section .text._ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE:

00000000800071ca <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE>:
    pub fn lock(&self) -> SleepLockGuard<T> {
    800071ca:	711d                	addi	sp,sp,-96
    800071cc:	ec86                	sd	ra,88(sp)
    800071ce:	fc2a                	sd	a0,56(sp)
        let mut guard = self.lock.acquire();
    800071d0:	ffffb097          	auipc	ra,0xffffb
    800071d4:	28a080e7          	jalr	650(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    800071d8:	e8aa                	sd	a0,80(sp)
    800071da:	a009                	j	800071dc <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE+0x12>
        while self.locked.get() {
    800071dc:	a009                	j	800071de <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE+0x14>
    800071de:	7562                	ld	a0,56(sp)
    800071e0:	03050513          	addi	a0,a0,48
    800071e4:	0000f097          	auipc	ra,0xf
    800071e8:	654080e7          	jalr	1620(ra) # 80016838 <_ZN4core4cell13Cell$LT$T$GT$3get17h0e12a3149c7662f9E>
    800071ec:	f82a                	sd	a0,48(sp)
    800071ee:	a009                	j	800071f0 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE+0x26>
    800071f0:	7542                	ld	a0,48(sp)
    800071f2:	e919                	bnez	a0,80007208 <.LBB0_14>
    800071f4:	a009                	j	800071f6 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE+0x2c>
        self.locked.set(true);
    800071f6:	7562                	ld	a0,56(sp)
    800071f8:	03050513          	addi	a0,a0,48
    800071fc:	4585                	li	a1,1
    800071fe:	0000f097          	auipc	ra,0xf
    80007202:	69e080e7          	jalr	1694(ra) # 8001689c <_ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE>
    80007206:	a08d                	j	80007268 <.LBB0_15+0x4c>

0000000080007208 <.LBB0_14>:
                CPU_MANAGER.myproc().unwrap().sleep(self.locked.as_ptr() as usize, guard);
    80007208:	00068517          	auipc	a0,0x68
    8000720c:	df850513          	addi	a0,a0,-520 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80007210:	00016097          	auipc	ra,0x16
    80007214:	528080e7          	jalr	1320(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    80007218:	f42a                	sd	a0,40(sp)
    8000721a:	a009                	j	8000721c <.LBB0_15>

000000008000721c <.LBB0_15>:
    8000721c:	0001d597          	auipc	a1,0x1d
    80007220:	30c58593          	addi	a1,a1,780 # 80024528 <.L__unnamed_1>
    80007224:	7522                	ld	a0,40(sp)
    80007226:	00012097          	auipc	ra,0x12
    8000722a:	942080e7          	jalr	-1726(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    8000722e:	f02a                	sd	a0,32(sp)
    80007230:	a009                	j	80007232 <.LBB0_15+0x16>
    80007232:	7562                	ld	a0,56(sp)
    80007234:	03050513          	addi	a0,a0,48
    80007238:	0000f097          	auipc	ra,0xf
    8000723c:	696080e7          	jalr	1686(ra) # 800168ce <_ZN4core4cell13Cell$LT$T$GT$6as_ptr17h42045593e383af58E>
    80007240:	ec2a                	sd	a0,24(sp)
    80007242:	a009                	j	80007244 <.LBB0_15+0x28>
    80007244:	6646                	ld	a2,80(sp)
    80007246:	7502                	ld	a0,32(sp)
    80007248:	65e2                	ld	a1,24(sp)
    8000724a:	fffff097          	auipc	ra,0xfffff
    8000724e:	d14080e7          	jalr	-748(ra) # 80005f5e <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E>
    80007252:	a009                	j	80007254 <.LBB0_15+0x38>
            guard = self.lock.acquire();
    80007254:	7562                	ld	a0,56(sp)
    80007256:	ffffb097          	auipc	ra,0xffffb
    8000725a:	204080e7          	jalr	516(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    8000725e:	e82a                	sd	a0,16(sp)
    80007260:	a009                	j	80007262 <.LBB0_15+0x46>
    80007262:	6542                	ld	a0,16(sp)
    80007264:	e8aa                	sd	a0,80(sp)
        while self.locked.get() {
    80007266:	bfa5                	j	800071de <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE+0x14>
        drop(guard);
    80007268:	6546                	ld	a0,80(sp)
    8000726a:	00006097          	auipc	ra,0x6
    8000726e:	684080e7          	jalr	1668(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    80007272:	a009                	j	80007274 <.LBB0_15+0x58>
            lock: &self,
    80007274:	7562                	ld	a0,56(sp)
            data: unsafe { &mut *self.data.get() }
    80007276:	03450593          	addi	a1,a0,52
    8000727a:	e42a                	sd	a0,8(sp)
    8000727c:	852e                	mv	a0,a1
    8000727e:	0000f097          	auipc	ra,0xf
    80007282:	73a080e7          	jalr	1850(ra) # 800169b8 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hf72365034576d8c6E>
    80007286:	e02a                	sd	a0,0(sp)
    80007288:	a009                	j	8000728a <.LBB0_15+0x6e>
        SleepLockGuard {
    8000728a:	6522                	ld	a0,8(sp)
    8000728c:	e0aa                	sd	a0,64(sp)
    8000728e:	6582                	ld	a1,0(sp)
    80007290:	e4ae                	sd	a1,72(sp)
    }
    80007292:	60e6                	ld	ra,88(sp)
    80007294:	6125                	addi	sp,sp,96
    80007296:	8082                	ret

Disassembly of section .text._ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E:

0000000080007298 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E>:
    pub fn lock(&self) -> SleepLockGuard<T> {
    80007298:	711d                	addi	sp,sp,-96
    8000729a:	ec86                	sd	ra,88(sp)
    8000729c:	fc2a                	sd	a0,56(sp)
        let mut guard = self.lock.acquire();
    8000729e:	ffffb097          	auipc	ra,0xffffb
    800072a2:	1bc080e7          	jalr	444(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    800072a6:	e8aa                	sd	a0,80(sp)
    800072a8:	a009                	j	800072aa <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E+0x12>
        while self.locked.get() {
    800072aa:	a009                	j	800072ac <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E+0x14>
    800072ac:	7562                	ld	a0,56(sp)
    800072ae:	03050513          	addi	a0,a0,48
    800072b2:	0000f097          	auipc	ra,0xf
    800072b6:	586080e7          	jalr	1414(ra) # 80016838 <_ZN4core4cell13Cell$LT$T$GT$3get17h0e12a3149c7662f9E>
    800072ba:	f82a                	sd	a0,48(sp)
    800072bc:	a009                	j	800072be <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E+0x26>
    800072be:	7542                	ld	a0,48(sp)
    800072c0:	e919                	bnez	a0,800072d6 <.LBB1_14>
    800072c2:	a009                	j	800072c4 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E+0x2c>
        self.locked.set(true);
    800072c4:	7562                	ld	a0,56(sp)
    800072c6:	03050513          	addi	a0,a0,48
    800072ca:	4585                	li	a1,1
    800072cc:	0000f097          	auipc	ra,0xf
    800072d0:	5d0080e7          	jalr	1488(ra) # 8001689c <_ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE>
    800072d4:	a08d                	j	80007336 <.LBB1_15+0x4c>

00000000800072d6 <.LBB1_14>:
                CPU_MANAGER.myproc().unwrap().sleep(self.locked.as_ptr() as usize, guard);
    800072d6:	00068517          	auipc	a0,0x68
    800072da:	d2a50513          	addi	a0,a0,-726 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    800072de:	00016097          	auipc	ra,0x16
    800072e2:	45a080e7          	jalr	1114(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    800072e6:	f42a                	sd	a0,40(sp)
    800072e8:	a009                	j	800072ea <.LBB1_15>

00000000800072ea <.LBB1_15>:
    800072ea:	0001d597          	auipc	a1,0x1d
    800072ee:	23e58593          	addi	a1,a1,574 # 80024528 <.L__unnamed_1>
    800072f2:	7522                	ld	a0,40(sp)
    800072f4:	00012097          	auipc	ra,0x12
    800072f8:	874080e7          	jalr	-1932(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    800072fc:	f02a                	sd	a0,32(sp)
    800072fe:	a009                	j	80007300 <.LBB1_15+0x16>
    80007300:	7562                	ld	a0,56(sp)
    80007302:	03050513          	addi	a0,a0,48
    80007306:	0000f097          	auipc	ra,0xf
    8000730a:	5c8080e7          	jalr	1480(ra) # 800168ce <_ZN4core4cell13Cell$LT$T$GT$6as_ptr17h42045593e383af58E>
    8000730e:	ec2a                	sd	a0,24(sp)
    80007310:	a009                	j	80007312 <.LBB1_15+0x28>
    80007312:	6646                	ld	a2,80(sp)
    80007314:	7502                	ld	a0,32(sp)
    80007316:	65e2                	ld	a1,24(sp)
    80007318:	fffff097          	auipc	ra,0xfffff
    8000731c:	c46080e7          	jalr	-954(ra) # 80005f5e <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E>
    80007320:	a009                	j	80007322 <.LBB1_15+0x38>
            guard = self.lock.acquire();
    80007322:	7562                	ld	a0,56(sp)
    80007324:	ffffb097          	auipc	ra,0xffffb
    80007328:	136080e7          	jalr	310(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    8000732c:	e82a                	sd	a0,16(sp)
    8000732e:	a009                	j	80007330 <.LBB1_15+0x46>
    80007330:	6542                	ld	a0,16(sp)
    80007332:	e8aa                	sd	a0,80(sp)
        while self.locked.get() {
    80007334:	bfa5                	j	800072ac <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17hb46c354802470312E+0x14>
        drop(guard);
    80007336:	6546                	ld	a0,80(sp)
    80007338:	00006097          	auipc	ra,0x6
    8000733c:	5b6080e7          	jalr	1462(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    80007340:	a009                	j	80007342 <.LBB1_15+0x58>
            lock: &self,
    80007342:	7562                	ld	a0,56(sp)
            data: unsafe { &mut *self.data.get() }
    80007344:	03850593          	addi	a1,a0,56
    80007348:	e42a                	sd	a0,8(sp)
    8000734a:	852e                	mv	a0,a1
    8000734c:	0000f097          	auipc	ra,0xf
    80007350:	624080e7          	jalr	1572(ra) # 80016970 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h2a617dc7b1b924cfE>
    80007354:	e02a                	sd	a0,0(sp)
    80007356:	a009                	j	80007358 <.LBB1_15+0x6e>
        SleepLockGuard {
    80007358:	6522                	ld	a0,8(sp)
    8000735a:	e0aa                	sd	a0,64(sp)
    8000735c:	6582                	ld	a1,0(sp)
    8000735e:	e4ae                	sd	a1,72(sp)
    }
    80007360:	60e6                	ld	ra,88(sp)
    80007362:	6125                	addi	sp,sp,96
    80007364:	8082                	ret

Disassembly of section .text._ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17h6c8c1cd7b0081987E:

0000000080007366 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17h6c8c1cd7b0081987E>:
    pub fn unlock(&self) {
    80007366:	7179                	addi	sp,sp,-48
    80007368:	f406                	sd	ra,40(sp)
    8000736a:	ec2a                	sd	a0,24(sp)
        let guard = self.lock.acquire();
    8000736c:	e82a                	sd	a0,16(sp)
    8000736e:	ffffb097          	auipc	ra,0xffffb
    80007372:	0ec080e7          	jalr	236(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    80007376:	85aa                	mv	a1,a0
    80007378:	f02a                	sd	a0,32(sp)
    8000737a:	e42e                	sd	a1,8(sp)
    8000737c:	a009                	j	8000737e <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17h6c8c1cd7b0081987E+0x18>
        self.locked.set(false);
    8000737e:	6542                	ld	a0,16(sp)
    80007380:	03050513          	addi	a0,a0,48
    80007384:	4581                	li	a1,0
    80007386:	0000f097          	auipc	ra,0xf
    8000738a:	516080e7          	jalr	1302(ra) # 8001689c <_ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE>
    8000738e:	a009                	j	80007390 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17h6c8c1cd7b0081987E+0x2a>
        self.wake_up();
    80007390:	6542                	ld	a0,16(sp)
    80007392:	00000097          	auipc	ra,0x0
    80007396:	064080e7          	jalr	100(ra) # 800073f6 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$7wake_up17h95507e20d64934f4E>
    8000739a:	a009                	j	8000739c <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17h6c8c1cd7b0081987E+0x36>
        drop(guard);
    8000739c:	6522                	ld	a0,8(sp)
    8000739e:	00006097          	auipc	ra,0x6
    800073a2:	550080e7          	jalr	1360(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    800073a6:	a009                	j	800073a8 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17h6c8c1cd7b0081987E+0x42>
    }
    800073a8:	70a2                	ld	ra,40(sp)
    800073aa:	6145                	addi	sp,sp,48
    800073ac:	8082                	ret

Disassembly of section .text._ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17hc039bf67fcdc6dc7E:

00000000800073ae <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17hc039bf67fcdc6dc7E>:
    pub fn unlock(&self) {
    800073ae:	7179                	addi	sp,sp,-48
    800073b0:	f406                	sd	ra,40(sp)
    800073b2:	ec2a                	sd	a0,24(sp)
        let guard = self.lock.acquire();
    800073b4:	e82a                	sd	a0,16(sp)
    800073b6:	ffffb097          	auipc	ra,0xffffb
    800073ba:	0a4080e7          	jalr	164(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    800073be:	85aa                	mv	a1,a0
    800073c0:	f02a                	sd	a0,32(sp)
    800073c2:	e42e                	sd	a1,8(sp)
    800073c4:	a009                	j	800073c6 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17hc039bf67fcdc6dc7E+0x18>
        self.locked.set(false);
    800073c6:	6542                	ld	a0,16(sp)
    800073c8:	03050513          	addi	a0,a0,48
    800073cc:	4581                	li	a1,0
    800073ce:	0000f097          	auipc	ra,0xf
    800073d2:	4ce080e7          	jalr	1230(ra) # 8001689c <_ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE>
    800073d6:	a009                	j	800073d8 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17hc039bf67fcdc6dc7E+0x2a>
        self.wake_up();
    800073d8:	6542                	ld	a0,16(sp)
    800073da:	00000097          	auipc	ra,0x0
    800073de:	04c080e7          	jalr	76(ra) # 80007426 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$7wake_up17heba67484689db56fE>
    800073e2:	a009                	j	800073e4 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17hc039bf67fcdc6dc7E+0x36>
        drop(guard);
    800073e4:	6522                	ld	a0,8(sp)
    800073e6:	00006097          	auipc	ra,0x6
    800073ea:	508080e7          	jalr	1288(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    800073ee:	a009                	j	800073f0 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$6unlock17hc039bf67fcdc6dc7E+0x42>
    }
    800073f0:	70a2                	ld	ra,40(sp)
    800073f2:	6145                	addi	sp,sp,48
    800073f4:	8082                	ret

Disassembly of section .text._ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$7wake_up17h95507e20d64934f4E:

00000000800073f6 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$7wake_up17h95507e20d64934f4E>:
    fn wake_up(&self) {
    800073f6:	1101                	addi	sp,sp,-32
    800073f8:	ec06                	sd	ra,24(sp)
    800073fa:	e82a                	sd	a0,16(sp)
            PROC_MANAGER.wake_up(self.locked.as_ptr() as usize);
    800073fc:	03050513          	addi	a0,a0,48
    80007400:	0000f097          	auipc	ra,0xf
    80007404:	4ce080e7          	jalr	1230(ra) # 800168ce <_ZN4core4cell13Cell$LT$T$GT$6as_ptr17h42045593e383af58E>
    80007408:	e42a                	sd	a0,8(sp)
    8000740a:	a009                	j	8000740c <.LBB4_3>

000000008000740c <.LBB4_3>:
    8000740c:	00055517          	auipc	a0,0x55
    80007410:	af450513          	addi	a0,a0,-1292 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    80007414:	65a2                	ld	a1,8(sp)
    80007416:	00016097          	auipc	ra,0x16
    8000741a:	886080e7          	jalr	-1914(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8000741e:	a009                	j	80007420 <.LBB4_3+0x14>
    }
    80007420:	60e2                	ld	ra,24(sp)
    80007422:	6105                	addi	sp,sp,32
    80007424:	8082                	ret

Disassembly of section .text._ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$7wake_up17heba67484689db56fE:

0000000080007426 <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$7wake_up17heba67484689db56fE>:
    fn wake_up(&self) {
    80007426:	1101                	addi	sp,sp,-32
    80007428:	ec06                	sd	ra,24(sp)
    8000742a:	e82a                	sd	a0,16(sp)
            PROC_MANAGER.wake_up(self.locked.as_ptr() as usize);
    8000742c:	03050513          	addi	a0,a0,48
    80007430:	0000f097          	auipc	ra,0xf
    80007434:	49e080e7          	jalr	1182(ra) # 800168ce <_ZN4core4cell13Cell$LT$T$GT$6as_ptr17h42045593e383af58E>
    80007438:	e42a                	sd	a0,8(sp)
    8000743a:	a009                	j	8000743c <.LBB5_3>

000000008000743c <.LBB5_3>:
    8000743c:	00055517          	auipc	a0,0x55
    80007440:	ac450513          	addi	a0,a0,-1340 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    80007444:	65a2                	ld	a1,8(sp)
    80007446:	00016097          	auipc	ra,0x16
    8000744a:	856080e7          	jalr	-1962(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8000744e:	a009                	j	80007450 <.LBB5_3+0x14>
    }
    80007450:	60e2                	ld	ra,24(sp)
    80007452:	6105                	addi	sp,sp,32
    80007454:	8082                	ret

Disassembly of section .text._ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h22429bca59620296E:

0000000080007456 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h22429bca59620296E>:
    fn deref(&self) -> &T {
    80007456:	1141                	addi	sp,sp,-16
    80007458:	e42a                	sd	a0,8(sp)
        &*self.data
    8000745a:	6508                	ld	a0,8(a0)
    }
    8000745c:	0141                	addi	sp,sp,16
    8000745e:	8082                	ret

Disassembly of section .text._ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E:

0000000080007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>:
    fn deref(&self) -> &T {
    80007460:	1141                	addi	sp,sp,-16
    80007462:	e42a                	sd	a0,8(sp)
        &*self.data
    80007464:	6508                	ld	a0,8(a0)
    }
    80007466:	0141                	addi	sp,sp,16
    80007468:	8082                	ret

Disassembly of section .text._ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE:

000000008000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>:
    fn deref_mut(&mut self) -> &mut T {
    8000746a:	1141                	addi	sp,sp,-16
    8000746c:	e42a                	sd	a0,8(sp)
        &mut *self.data
    8000746e:	6508                	ld	a0,8(a0)
    }
    80007470:	0141                	addi	sp,sp,16
    80007472:	8082                	ret

Disassembly of section .text._ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf740b8f97f1862b1E:

0000000080007474 <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf740b8f97f1862b1E>:
    fn deref_mut(&mut self) -> &mut T {
    80007474:	1141                	addi	sp,sp,-16
    80007476:	e42a                	sd	a0,8(sp)
        &mut *self.data
    80007478:	6508                	ld	a0,8(a0)
    }
    8000747a:	0141                	addi	sp,sp,16
    8000747c:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h778dd669df41f000E:

000000008000747e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h778dd669df41f000E>:
    pub const fn is_null(self) -> bool {
    8000747e:	7179                	addi	sp,sp,-48
    80007480:	f406                	sd	ra,40(sp)
    80007482:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    80007484:	ec2a                	sd	a0,24(sp)
    80007486:	a009                	j	80007488 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h778dd669df41f000E+0xa>
    80007488:	4501                	li	a0,0
    8000748a:	65e2                	ld	a1,24(sp)
    8000748c:	e82a                	sd	a0,16(sp)
    8000748e:	852e                	mv	a0,a1
    80007490:	65c2                	ld	a1,16(sp)
    80007492:	00019097          	auipc	ra,0x19
    80007496:	51c080e7          	jalr	1308(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    8000749a:	e42a                	sd	a0,8(sp)
    8000749c:	a009                	j	8000749e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h778dd669df41f000E+0x20>
    }
    8000749e:	6522                	ld	a0,8(sp)
    800074a0:	70a2                	ld	ra,40(sp)
    800074a2:	6145                	addi	sp,sp,48
    800074a4:	8082                	ret

Disassembly of section .text._ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb2f1a51ca9164b4E:

00000000800074a6 <_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb2f1a51ca9164b4E>:
    I: Iterator<Item = &'a T>,
    T: Copy,
{
    type Item = T;

    fn next(&mut self) -> Option<T> {
    800074a6:	7179                	addi	sp,sp,-48
    800074a8:	f406                	sd	ra,40(sp)
    800074aa:	f02a                	sd	a0,32(sp)
        self.it.next().copied()
    800074ac:	0000c097          	auipc	ra,0xc
    800074b0:	e3e080e7          	jalr	-450(ra) # 800132ea <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E>
    800074b4:	ec2a                	sd	a0,24(sp)
    800074b6:	a009                	j	800074b8 <_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb2f1a51ca9164b4E+0x12>
    800074b8:	6562                	ld	a0,24(sp)
    800074ba:	00012097          	auipc	ra,0x12
    800074be:	b06080e7          	jalr	-1274(ra) # 80018fc0 <_ZN4core6option19Option$LT$$RF$T$GT$6copied17h2b1512b25771a537E>
    800074c2:	e82a                	sd	a0,16(sp)
    800074c4:	e42e                	sd	a1,8(sp)
    800074c6:	a009                	j	800074c8 <_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb2f1a51ca9164b4E+0x22>
    }
    800074c8:	6542                	ld	a0,16(sp)
    800074ca:	8905                	andi	a0,a0,1
    800074cc:	65a2                	ld	a1,8(sp)
    800074ce:	70a2                	ld	ra,40(sp)
    800074d0:	6145                	addi	sp,sp,48
    800074d2:	8082                	ret

Disassembly of section .text._ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hea780529cde9430aE:

00000000800074d4 <_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hea780529cde9430aE>:
    pub(in crate::iter) fn new(it: I) -> Copied<I> {
    800074d4:	1101                	addi	sp,sp,-32
    800074d6:	e82a                	sd	a0,16(sp)
    800074d8:	ec2e                	sd	a1,24(sp)
        Copied { it }
    800074da:	e02a                	sd	a0,0(sp)
    800074dc:	e42e                	sd	a1,8(sp)
    }
    800074de:	6105                	addi	sp,sp,32
    800074e0:	8082                	ret

Disassembly of section .text._ZN6kernel6memory13PageAllocator10new_zeroed17h2661979a9606057fE:

00000000800074e2 <_ZN6kernel6memory13PageAllocator10new_zeroed17h2661979a9606057fE>:
use crate::misc::mem_copy;

use alloc::{boxed::Box, vec};

pub trait PageAllocator: Sized {
    unsafe fn new_zeroed() -> usize {
    800074e2:	7179                	addi	sp,sp,-48
        let boxed_page = Box::<Self>::new_zeroed().assume_init();
    800074e4:	f406                	sd	ra,40(sp)
    800074e6:	0000e097          	auipc	ra,0xe
    800074ea:	eb2080e7          	jalr	-334(ra) # 80015398 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hf51afb00ae7c861cE>
    800074ee:	e82a                	sd	a0,16(sp)
    800074f0:	a009                	j	800074f2 <_ZN6kernel6memory13PageAllocator10new_zeroed17h2661979a9606057fE+0x10>
    800074f2:	6542                	ld	a0,16(sp)
    800074f4:	0000f097          	auipc	ra,0xf
    800074f8:	a26080e7          	jalr	-1498(ra) # 80015f1a <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h21a3543f341f6249E>
    800074fc:	85aa                	mv	a1,a0
    800074fe:	ec2a                	sd	a0,24(sp)
    80007500:	e42e                	sd	a1,8(sp)
    80007502:	a009                	j	80007504 <_ZN6kernel6memory13PageAllocator10new_zeroed17h2661979a9606057fE+0x22>
        let ptr = Box::into_raw(boxed_page) as usize;
    80007504:	6522                	ld	a0,8(sp)
    80007506:	0000f097          	auipc	ra,0xf
    8000750a:	9ca080e7          	jalr	-1590(ra) # 80015ed0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17hd1999be463f28fceE>
    8000750e:	e02a                	sd	a0,0(sp)
    80007510:	a009                	j	80007512 <_ZN6kernel6memory13PageAllocator10new_zeroed17h2661979a9606057fE+0x30>
    80007512:	6502                	ld	a0,0(sp)
    80007514:	f02a                	sd	a0,32(sp)
        ptr
    }
    80007516:	70a2                	ld	ra,40(sp)
    80007518:	6145                	addi	sp,sp,48
    8000751a:	8082                	ret

Disassembly of section .text._ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE:

000000008000751c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE>:
    unsafe fn new_zeroed() -> usize {
    8000751c:	7179                	addi	sp,sp,-48
        let boxed_page = Box::<Self>::new_zeroed().assume_init();
    8000751e:	f406                	sd	ra,40(sp)
    80007520:	0000e097          	auipc	ra,0xe
    80007524:	e60080e7          	jalr	-416(ra) # 80015380 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hcdd52b02a2811be1E>
    80007528:	e82a                	sd	a0,16(sp)
    8000752a:	a009                	j	8000752c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE+0x10>
    8000752c:	6542                	ld	a0,16(sp)
    8000752e:	0000f097          	auipc	ra,0xf
    80007532:	9c2080e7          	jalr	-1598(ra) # 80015ef0 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h1200dab49321eeb1E>
    80007536:	85aa                	mv	a1,a0
    80007538:	ec2a                	sd	a0,24(sp)
    8000753a:	e42e                	sd	a1,8(sp)
    8000753c:	a009                	j	8000753e <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE+0x22>
        let ptr = Box::into_raw(boxed_page) as usize;
    8000753e:	6522                	ld	a0,8(sp)
    80007540:	0000f097          	auipc	ra,0xf
    80007544:	970080e7          	jalr	-1680(ra) # 80015eb0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h4cdd2d5b1d5df5feE>
    80007548:	e02a                	sd	a0,0(sp)
    8000754a:	a009                	j	8000754c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE+0x30>
    8000754c:	6502                	ld	a0,0(sp)
    8000754e:	f02a                	sd	a0,32(sp)
    }
    80007550:	70a2                	ld	ra,40(sp)
    80007552:	6145                	addi	sp,sp,48
    80007554:	8082                	ret

Disassembly of section .text._ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7dfa916bf84dc559E:

0000000080007556 <_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7dfa916bf84dc559E>:
#[stable(feature = "rust1", since = "1.0.0")]
impl Iterator for Bytes<'_> {
    type Item = u8;

    #[inline]
    fn next(&mut self) -> Option<u8> {
    80007556:	1101                	addi	sp,sp,-32
    80007558:	ec06                	sd	ra,24(sp)
    8000755a:	e82a                	sd	a0,16(sp)
        self.0.next()
    8000755c:	00000097          	auipc	ra,0x0
    80007560:	f4a080e7          	jalr	-182(ra) # 800074a6 <_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb2f1a51ca9164b4E>
    80007564:	e42a                	sd	a0,8(sp)
    80007566:	e02e                	sd	a1,0(sp)
    80007568:	a009                	j	8000756a <_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7dfa916bf84dc559E+0x14>
    }
    8000756a:	6522                	ld	a0,8(sp)
    8000756c:	8905                	andi	a0,a0,1
    8000756e:	6582                	ld	a1,0(sp)
    80007570:	60e2                	ld	ra,24(sp)
    80007572:	6105                	addi	sp,sp,32
    80007574:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc12alloc_zeroed17h246f34f85329f6e4E:

0000000080007576 <_ZN5alloc5alloc12alloc_zeroed17h246f34f85329f6e4E>:
pub unsafe fn alloc_zeroed(layout: Layout) -> *mut u8 {
    80007576:	7179                	addi	sp,sp,-48
    80007578:	f406                	sd	ra,40(sp)
    8000757a:	ec2a                	sd	a0,24(sp)
    8000757c:	f02e                	sd	a1,32(sp)
    8000757e:	0828                	addi	a0,sp,24
    unsafe { __rust_alloc_zeroed(layout.size(), layout.align()) }
    80007580:	ffffe097          	auipc	ra,0xffffe
    80007584:	ff4080e7          	jalr	-12(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    80007588:	e82a                	sd	a0,16(sp)
    8000758a:	a009                	j	8000758c <_ZN5alloc5alloc12alloc_zeroed17h246f34f85329f6e4E+0x16>
    8000758c:	0828                	addi	a0,sp,24
    8000758e:	ffffe097          	auipc	ra,0xffffe
    80007592:	ff0080e7          	jalr	-16(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    80007596:	e42a                	sd	a0,8(sp)
    80007598:	a009                	j	8000759a <_ZN5alloc5alloc12alloc_zeroed17h246f34f85329f6e4E+0x24>
    8000759a:	6542                	ld	a0,16(sp)
    8000759c:	65a2                	ld	a1,8(sp)
    8000759e:	00016097          	auipc	ra,0x16
    800075a2:	7b8080e7          	jalr	1976(ra) # 8001dd56 <__rust_alloc_zeroed>
    800075a6:	e02a                	sd	a0,0(sp)
    800075a8:	a009                	j	800075aa <_ZN5alloc5alloc12alloc_zeroed17h246f34f85329f6e4E+0x34>
}
    800075aa:	6502                	ld	a0,0(sp)
    800075ac:	70a2                	ld	ra,40(sp)
    800075ae:	6145                	addi	sp,sp,48
    800075b0:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc15exchange_malloc17h4aee5a7c3b8f858bE:

00000000800075b2 <_ZN5alloc5alloc15exchange_malloc17h4aee5a7c3b8f858bE>:
unsafe fn exchange_malloc(size: usize, align: usize) -> *mut u8 {
    800075b2:	711d                	addi	sp,sp,-96
    800075b4:	ec86                	sd	ra,88(sp)
    800075b6:	f42a                	sd	a0,40(sp)
    800075b8:	f82e                	sd	a1,48(sp)
    let layout = unsafe { Layout::from_size_align_unchecked(size, align) };
    800075ba:	ffffe097          	auipc	ra,0xffffe
    800075be:	f94080e7          	jalr	-108(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    800075c2:	862a                	mv	a2,a0
    800075c4:	86ae                	mv	a3,a1
    800075c6:	fc2a                	sd	a0,56(sp)
    800075c8:	e0ae                	sd	a1,64(sp)
    800075ca:	e832                	sd	a2,16(sp)
    800075cc:	e436                	sd	a3,8(sp)
    800075ce:	a009                	j	800075d0 <.LBB1_8>

00000000800075d0 <.LBB1_8>:
    match Global.allocate(layout) {
    800075d0:	0001d517          	auipc	a0,0x1d
    800075d4:	f7050513          	addi	a0,a0,-144 # 80024540 <.L__unnamed_4>
    800075d8:	65c2                	ld	a1,16(sp)
    800075da:	6622                	ld	a2,8(sp)
    800075dc:	00000097          	auipc	ra,0x0
    800075e0:	240080e7          	jalr	576(ra) # 8000781c <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h3a2e227bff0b90ccE>
    800075e4:	ec2a                	sd	a0,24(sp)
    800075e6:	f02e                	sd	a1,32(sp)
    800075e8:	a009                	j	800075ea <.LBB1_8+0x1a>
        Ok(ptr) => ptr.as_mut_ptr(),
    800075ea:	6562                	ld	a0,24(sp)
    800075ec:	00153593          	seqz	a1,a0
    800075f0:	4601                	li	a2,0
    800075f2:	00c51b63          	bne	a0,a2,80007608 <.LBB1_8+0x38>
    800075f6:	a009                	j	800075f8 <.LBB1_8+0x28>
        Err(_) => handle_alloc_error(layout),
    800075f8:	6542                	ld	a0,16(sp)
    800075fa:	65a2                	ld	a1,8(sp)
    800075fc:	00019097          	auipc	ra,0x19
    80007600:	482080e7          	jalr	1154(ra) # 80020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>
    80007604:	0000                	unimp
    match Global.allocate(layout) {
    80007606:	0000                	unimp
        Ok(ptr) => ptr.as_mut_ptr(),
    80007608:	6562                	ld	a0,24(sp)
    8000760a:	7582                	ld	a1,32(sp)
    8000760c:	e4aa                	sd	a0,72(sp)
    8000760e:	e8ae                	sd	a1,80(sp)
    80007610:	ffffd097          	auipc	ra,0xffffd
    80007614:	70a080e7          	jalr	1802(ra) # 80004d1a <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb7d1a4619b15f97eE>
    80007618:	e02a                	sd	a0,0(sp)
    8000761a:	a009                	j	8000761c <.LBB1_8+0x4c>
}
    8000761c:	6502                	ld	a0,0(sp)
    8000761e:	60e6                	ld	ra,88(sp)
    80007620:	6125                	addi	sp,sp,96
    80007622:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc5alloc17hf81f224b748910d3E:

0000000080007624 <_ZN5alloc5alloc5alloc17hf81f224b748910d3E>:
pub unsafe fn alloc(layout: Layout) -> *mut u8 {
    80007624:	7179                	addi	sp,sp,-48
    80007626:	f406                	sd	ra,40(sp)
    80007628:	ec2a                	sd	a0,24(sp)
    8000762a:	f02e                	sd	a1,32(sp)
    8000762c:	0828                	addi	a0,sp,24
    unsafe { __rust_alloc(layout.size(), layout.align()) }
    8000762e:	ffffe097          	auipc	ra,0xffffe
    80007632:	f46080e7          	jalr	-186(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    80007636:	e82a                	sd	a0,16(sp)
    80007638:	a009                	j	8000763a <_ZN5alloc5alloc5alloc17hf81f224b748910d3E+0x16>
    8000763a:	0828                	addi	a0,sp,24
    8000763c:	ffffe097          	auipc	ra,0xffffe
    80007640:	f42080e7          	jalr	-190(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    80007644:	e42a                	sd	a0,8(sp)
    80007646:	a009                	j	80007648 <_ZN5alloc5alloc5alloc17hf81f224b748910d3E+0x24>
    80007648:	6542                	ld	a0,16(sp)
    8000764a:	65a2                	ld	a1,8(sp)
    8000764c:	00016097          	auipc	ra,0x16
    80007650:	6fa080e7          	jalr	1786(ra) # 8001dd46 <__rust_alloc>
    80007654:	e02a                	sd	a0,0(sp)
    80007656:	a009                	j	80007658 <_ZN5alloc5alloc5alloc17hf81f224b748910d3E+0x34>
}
    80007658:	6502                	ld	a0,0(sp)
    8000765a:	70a2                	ld	ra,40(sp)
    8000765c:	6145                	addi	sp,sp,48
    8000765e:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E:

0000000080007660 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E>:
    fn alloc_impl(&self, layout: Layout, zeroed: bool) -> Result<NonNull<[u8]>, AllocError> {
    80007660:	7131                	addi	sp,sp,-192
    80007662:	fd06                	sd	ra,184(sp)
    80007664:	8736                	mv	a4,a3
    80007666:	e8ae                	sd	a1,80(sp)
    80007668:	ecb2                	sd	a2,88(sp)
    8000766a:	e52a                	sd	a0,136(sp)
    8000766c:	08d10ba3          	sb	a3,151(sp)
    80007670:	0888                	addi	a0,sp,80
        match layout.size() {
    80007672:	e4ba                	sd	a4,72(sp)
    80007674:	ffffe097          	auipc	ra,0xffffe
    80007678:	f00080e7          	jalr	-256(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    8000767c:	e0aa                	sd	a0,64(sp)
    8000767e:	a009                	j	80007680 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x20>
    80007680:	4501                	li	a0,0
            0 => Ok(NonNull::slice_from_raw_parts(layout.dangling(), 0)),
    80007682:	6586                	ld	a1,64(sp)
    80007684:	00a58863          	beq	a1,a0,80007694 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x34>
    80007688:	a009                	j	8000768a <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x2a>
            size => unsafe {
    8000768a:	6506                	ld	a0,64(sp)
    8000768c:	f12a                	sd	a0,160(sp)
                let raw_ptr = if zeroed { alloc_zeroed(layout) } else { alloc(layout) };
    8000768e:	65a6                	ld	a1,72(sp)
    80007690:	e995                	bnez	a1,800076c4 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x64>
    80007692:	a089                	j	800076d4 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x74>
    80007694:	0888                	addi	a0,sp,80
            0 => Ok(NonNull::slice_from_raw_parts(layout.dangling(), 0)),
    80007696:	ffffe097          	auipc	ra,0xffffe
    8000769a:	fec080e7          	jalr	-20(ra) # 80005682 <_ZN4core5alloc6layout6Layout8dangling17h1d30c6520b8fc2d8E>
    8000769e:	fc2a                	sd	a0,56(sp)
    800076a0:	a009                	j	800076a2 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x42>
    800076a2:	4501                	li	a0,0
    800076a4:	75e2                	ld	a1,56(sp)
    800076a6:	f82a                	sd	a0,48(sp)
    800076a8:	852e                	mv	a0,a1
    800076aa:	75c2                	ld	a1,48(sp)
    800076ac:	ffffd097          	auipc	ra,0xffffd
    800076b0:	6d4080e7          	jalr	1748(ra) # 80004d80 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0adffd1c34039d02E>
    800076b4:	f42a                	sd	a0,40(sp)
    800076b6:	f02e                	sd	a1,32(sp)
    800076b8:	a009                	j	800076ba <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x5a>
    800076ba:	7522                	ld	a0,40(sp)
    800076bc:	f0aa                	sd	a0,96(sp)
    800076be:	7582                	ld	a1,32(sp)
    800076c0:	f4ae                	sd	a1,104(sp)
        match layout.size() {
    800076c2:	a871                	j	8000775e <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xfe>
                let raw_ptr = if zeroed { alloc_zeroed(layout) } else { alloc(layout) };
    800076c4:	6546                	ld	a0,80(sp)
    800076c6:	65e6                	ld	a1,88(sp)
    800076c8:	00000097          	auipc	ra,0x0
    800076cc:	eae080e7          	jalr	-338(ra) # 80007576 <_ZN5alloc5alloc12alloc_zeroed17h246f34f85329f6e4E>
    800076d0:	f8aa                	sd	a0,112(sp)
    800076d2:	a809                	j	800076e4 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x84>
    800076d4:	6546                	ld	a0,80(sp)
    800076d6:	65e6                	ld	a1,88(sp)
    800076d8:	00000097          	auipc	ra,0x0
    800076dc:	f4c080e7          	jalr	-180(ra) # 80007624 <_ZN5alloc5alloc5alloc17hf81f224b748910d3E>
    800076e0:	f8aa                	sd	a0,112(sp)
    800076e2:	a011                	j	800076e6 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x86>
    800076e4:	a011                	j	800076e8 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x88>
    800076e6:	a009                	j	800076e8 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x88>
                let ptr = NonNull::new(raw_ptr).ok_or(AllocError)?;
    800076e8:	7546                	ld	a0,112(sp)
    800076ea:	ffffd097          	auipc	ra,0xffffd
    800076ee:	42e080e7          	jalr	1070(ra) # 80004b18 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17heac8b1e00856b96cE>
    800076f2:	ec2a                	sd	a0,24(sp)
    800076f4:	a009                	j	800076f6 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x96>
    800076f6:	6562                	ld	a0,24(sp)
    800076f8:	00011097          	auipc	ra,0x11
    800076fc:	fcc080e7          	jalr	-52(ra) # 800186c4 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E>
    80007700:	e82a                	sd	a0,16(sp)
    80007702:	a009                	j	80007704 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xa4>
    80007704:	6542                	ld	a0,16(sp)
    80007706:	00005097          	auipc	ra,0x5
    8000770a:	7da080e7          	jalr	2010(ra) # 8000cee0 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h28fc2a69048ad7e2E>
    8000770e:	fcaa                	sd	a0,120(sp)
    80007710:	a009                	j	80007712 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xb2>
    80007712:	7566                	ld	a0,120(sp)
    80007714:	00153593          	seqz	a1,a0
    80007718:	4601                	li	a2,0
    8000771a:	00c51463          	bne	a0,a2,80007722 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xc2>
    8000771e:	a009                	j	80007720 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xc0>
    80007720:	a829                	j	8000773a <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xda>
    80007722:	7566                	ld	a0,120(sp)
    80007724:	f52a                	sd	a0,168(sp)
    80007726:	f92a                	sd	a0,176(sp)
                Ok(NonNull::slice_from_raw_parts(ptr, size))
    80007728:	6586                	ld	a1,64(sp)
    8000772a:	ffffd097          	auipc	ra,0xffffd
    8000772e:	656080e7          	jalr	1622(ra) # 80004d80 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0adffd1c34039d02E>
    80007732:	e42a                	sd	a0,8(sp)
    80007734:	e02e                	sd	a1,0(sp)
    80007736:	a839                	j	80007754 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xf4>
                let ptr = NonNull::new(raw_ptr).ok_or(AllocError)?;
    80007738:	0000                	unimp
    8000773a:	00012097          	auipc	ra,0x12
    8000773e:	a8a080e7          	jalr	-1398(ra) # 800191c4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E>
    80007742:	a009                	j	80007744 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xe4>
    80007744:	00005097          	auipc	ra,0x5
    80007748:	6f6080e7          	jalr	1782(ra) # 8000ce3a <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h0d691c0acdd0ed17E>
    8000774c:	f0aa                	sd	a0,96(sp)
    8000774e:	f4ae                	sd	a1,104(sp)
    80007750:	a009                	j	80007752 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xf2>
    }
    80007752:	a039                	j	80007760 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x100>
                Ok(NonNull::slice_from_raw_parts(ptr, size))
    80007754:	6522                	ld	a0,8(sp)
    80007756:	f0aa                	sd	a0,96(sp)
    80007758:	6582                	ld	a1,0(sp)
    8000775a:	f4ae                	sd	a1,104(sp)
        match layout.size() {
    8000775c:	a009                	j	8000775e <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0xfe>
    }
    8000775e:	a009                	j	80007760 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E+0x100>
    80007760:	7506                	ld	a0,96(sp)
    80007762:	75a6                	ld	a1,104(sp)
    80007764:	70ea                	ld	ra,184(sp)
    80007766:	6129                	addi	sp,sp,192
    80007768:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc7dealloc17h943048180d34088fE:

000000008000776a <_ZN5alloc5alloc7dealloc17h943048180d34088fE>:
pub unsafe fn dealloc(ptr: *mut u8, layout: Layout) {
    8000776a:	7139                	addi	sp,sp,-64
    8000776c:	fc06                	sd	ra,56(sp)
    8000776e:	f02e                	sd	a1,32(sp)
    80007770:	f432                	sd	a2,40(sp)
    80007772:	f82a                	sd	a0,48(sp)
    80007774:	100c                	addi	a1,sp,32
    unsafe { __rust_dealloc(ptr, layout.size(), layout.align()) }
    80007776:	ec2a                	sd	a0,24(sp)
    80007778:	852e                	mv	a0,a1
    8000777a:	ffffe097          	auipc	ra,0xffffe
    8000777e:	dfa080e7          	jalr	-518(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    80007782:	e82a                	sd	a0,16(sp)
    80007784:	a009                	j	80007786 <_ZN5alloc5alloc7dealloc17h943048180d34088fE+0x1c>
    80007786:	1008                	addi	a0,sp,32
    80007788:	ffffe097          	auipc	ra,0xffffe
    8000778c:	df6080e7          	jalr	-522(ra) # 8000557e <_ZN4core5alloc6layout6Layout5align17h5e9adafa7fbf5c52E>
    80007790:	e42a                	sd	a0,8(sp)
    80007792:	a009                	j	80007794 <_ZN5alloc5alloc7dealloc17h943048180d34088fE+0x2a>
    80007794:	6562                	ld	a0,24(sp)
    80007796:	65c2                	ld	a1,16(sp)
    80007798:	6622                	ld	a2,8(sp)
    8000779a:	00016097          	auipc	ra,0x16
    8000779e:	5b4080e7          	jalr	1460(ra) # 8001dd4e <__rust_dealloc>
    800077a2:	a009                	j	800077a4 <_ZN5alloc5alloc7dealloc17h943048180d34088fE+0x3a>
}
    800077a4:	70e2                	ld	ra,56(sp)
    800077a6:	6121                	addi	sp,sp,64
    800077a8:	8082                	ret

Disassembly of section .text._ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E:

00000000800077aa <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E>:
    unsafe fn deallocate(&self, ptr: NonNull<u8>, layout: Layout) {
    800077aa:	715d                	addi	sp,sp,-80
    800077ac:	e486                	sd	ra,72(sp)
    800077ae:	f032                	sd	a2,32(sp)
    800077b0:	f436                	sd	a3,40(sp)
    800077b2:	fc2a                	sd	a0,56(sp)
    800077b4:	e0ae                	sd	a1,64(sp)
    800077b6:	1008                	addi	a0,sp,32
        if layout.size() != 0 {
    800077b8:	ec2e                	sd	a1,24(sp)
    800077ba:	ffffe097          	auipc	ra,0xffffe
    800077be:	dba080e7          	jalr	-582(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    800077c2:	e82a                	sd	a0,16(sp)
    800077c4:	a009                	j	800077c6 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E+0x1c>
    800077c6:	4501                	li	a0,0
    800077c8:	65c2                	ld	a1,16(sp)
    800077ca:	00a58a63          	beq	a1,a0,800077de <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E+0x34>
    800077ce:	a009                	j	800077d0 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E+0x26>
            unsafe { dealloc(ptr.as_ptr(), layout) }
    800077d0:	6562                	ld	a0,24(sp)
    800077d2:	ffffd097          	auipc	ra,0xffffd
    800077d6:	4da080e7          	jalr	1242(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    800077da:	e42a                	sd	a0,8(sp)
    800077dc:	a011                	j	800077e0 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E+0x36>
        if layout.size() != 0 {
    800077de:	a811                	j	800077f2 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E+0x48>
            unsafe { dealloc(ptr.as_ptr(), layout) }
    800077e0:	7582                	ld	a1,32(sp)
    800077e2:	7622                	ld	a2,40(sp)
    800077e4:	6522                	ld	a0,8(sp)
    800077e6:	00000097          	auipc	ra,0x0
    800077ea:	f84080e7          	jalr	-124(ra) # 8000776a <_ZN5alloc5alloc7dealloc17h943048180d34088fE>
    800077ee:	a009                	j	800077f0 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E+0x46>
        if layout.size() != 0 {
    800077f0:	a009                	j	800077f2 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h95d98c3237d0fa94E+0x48>
    }
    800077f2:	60a6                	ld	ra,72(sp)
    800077f4:	6161                	addi	sp,sp,80
    800077f6:	8082                	ret

Disassembly of section .text._ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E:

00000000800077f8 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E>:
    fn allocate_zeroed(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {
    800077f8:	7179                	addi	sp,sp,-48
    800077fa:	f406                	sd	ra,40(sp)
    800077fc:	e82a                	sd	a0,16(sp)
    800077fe:	ec2e                	sd	a1,24(sp)
    80007800:	f032                	sd	a2,32(sp)
    80007802:	4685                	li	a3,1
        self.alloc_impl(layout, true)
    80007804:	00000097          	auipc	ra,0x0
    80007808:	e5c080e7          	jalr	-420(ra) # 80007660 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E>
    8000780c:	e42a                	sd	a0,8(sp)
    8000780e:	e02e                	sd	a1,0(sp)
    80007810:	a009                	j	80007812 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E+0x1a>
    }
    80007812:	6522                	ld	a0,8(sp)
    80007814:	6582                	ld	a1,0(sp)
    80007816:	70a2                	ld	ra,40(sp)
    80007818:	6145                	addi	sp,sp,48
    8000781a:	8082                	ret

Disassembly of section .text._ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h3a2e227bff0b90ccE:

000000008000781c <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h3a2e227bff0b90ccE>:
    fn allocate(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {
    8000781c:	7179                	addi	sp,sp,-48
    8000781e:	f406                	sd	ra,40(sp)
    80007820:	e82a                	sd	a0,16(sp)
    80007822:	ec2e                	sd	a1,24(sp)
    80007824:	f032                	sd	a2,32(sp)
    80007826:	4681                	li	a3,0
        self.alloc_impl(layout, false)
    80007828:	00000097          	auipc	ra,0x0
    8000782c:	e38080e7          	jalr	-456(ra) # 80007660 <_ZN5alloc5alloc6Global10alloc_impl17h20bd73885d963ab5E>
    80007830:	e42a                	sd	a0,8(sp)
    80007832:	e02e                	sd	a1,0(sp)
    80007834:	a009                	j	80007836 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h3a2e227bff0b90ccE+0x1a>
    }
    80007836:	6522                	ld	a0,8(sp)
    80007838:	6582                	ld	a1,0(sp)
    8000783a:	70a2                	ld	ra,40(sp)
    8000783c:	6145                	addi	sp,sp,48
    8000783e:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E:

0000000080007840 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    80007840:	7179                	addi	sp,sp,-48
    80007842:	f406                	sd	ra,40(sp)
    80007844:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    80007846:	e82a                	sd	a0,16(sp)
    80007848:	00000097          	auipc	ra,0x0
    8000784c:	084080e7          	jalr	132(ra) # 800078cc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ae8bb1f8e2e5549E>
    80007850:	e42a                	sd	a0,8(sp)
    80007852:	a009                	j	80007854 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E+0x14>
    80007854:	4501                	li	a0,0
    80007856:	65a2                	ld	a1,8(sp)
    80007858:	00a58663          	beq	a1,a0,80007864 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E+0x24>
    8000785c:	a009                	j	8000785e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E+0x1e>
    8000785e:	4501                	li	a0,0
    80007860:	ec2a                	sd	a0,24(sp)
    80007862:	a021                	j	8000786a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E+0x2a>
    80007864:	6542                	ld	a0,16(sp)
    80007866:	ec2a                	sd	a0,24(sp)
    80007868:	a009                	j	8000786a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E+0x2a>
    }
    8000786a:	6562                	ld	a0,24(sp)
    8000786c:	70a2                	ld	ra,40(sp)
    8000786e:	6145                	addi	sp,sp,48
    80007870:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E:

0000000080007872 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    80007872:	7179                	addi	sp,sp,-48
    80007874:	f406                	sd	ra,40(sp)
    80007876:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    80007878:	e82a                	sd	a0,16(sp)
    8000787a:	00000097          	auipc	ra,0x0
    8000787e:	02a080e7          	jalr	42(ra) # 800078a4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h001cae8077e6fec4E>
    80007882:	e42a                	sd	a0,8(sp)
    80007884:	a009                	j	80007886 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E+0x14>
    80007886:	4501                	li	a0,0
    80007888:	65a2                	ld	a1,8(sp)
    8000788a:	00a58663          	beq	a1,a0,80007896 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E+0x24>
    8000788e:	a009                	j	80007890 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E+0x1e>
    80007890:	4501                	li	a0,0
    80007892:	ec2a                	sd	a0,24(sp)
    80007894:	a021                	j	8000789c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E+0x2a>
    80007896:	6542                	ld	a0,16(sp)
    80007898:	ec2a                	sd	a0,24(sp)
    8000789a:	a009                	j	8000789c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E+0x2a>
    }
    8000789c:	6562                	ld	a0,24(sp)
    8000789e:	70a2                	ld	ra,40(sp)
    800078a0:	6145                	addi	sp,sp,48
    800078a2:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h001cae8077e6fec4E:

00000000800078a4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h001cae8077e6fec4E>:
    pub const fn is_null(self) -> bool {
    800078a4:	7179                	addi	sp,sp,-48
    800078a6:	f406                	sd	ra,40(sp)
    800078a8:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    800078aa:	ec2a                	sd	a0,24(sp)
    800078ac:	a009                	j	800078ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h001cae8077e6fec4E+0xa>
    800078ae:	4501                	li	a0,0
    800078b0:	65e2                	ld	a1,24(sp)
    800078b2:	e82a                	sd	a0,16(sp)
    800078b4:	852e                	mv	a0,a1
    800078b6:	65c2                	ld	a1,16(sp)
    800078b8:	00019097          	auipc	ra,0x19
    800078bc:	0f6080e7          	jalr	246(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    800078c0:	e42a                	sd	a0,8(sp)
    800078c2:	a009                	j	800078c4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h001cae8077e6fec4E+0x20>
    }
    800078c4:	6522                	ld	a0,8(sp)
    800078c6:	70a2                	ld	ra,40(sp)
    800078c8:	6145                	addi	sp,sp,48
    800078ca:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ae8bb1f8e2e5549E:

00000000800078cc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ae8bb1f8e2e5549E>:
    pub const fn is_null(self) -> bool {
    800078cc:	7179                	addi	sp,sp,-48
    800078ce:	f406                	sd	ra,40(sp)
    800078d0:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    800078d2:	ec2a                	sd	a0,24(sp)
    800078d4:	a009                	j	800078d6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ae8bb1f8e2e5549E+0xa>
    800078d6:	4501                	li	a0,0
    800078d8:	65e2                	ld	a1,24(sp)
    800078da:	e82a                	sd	a0,16(sp)
    800078dc:	852e                	mv	a0,a1
    800078de:	65c2                	ld	a1,16(sp)
    800078e0:	00019097          	auipc	ra,0x19
    800078e4:	0ce080e7          	jalr	206(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    800078e8:	e42a                	sd	a0,8(sp)
    800078ea:	a009                	j	800078ec <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ae8bb1f8e2e5549E+0x20>
    }
    800078ec:	6522                	ld	a0,8(sp)
    800078ee:	70a2                	ld	ra,40(sp)
    800078f0:	6145                	addi	sp,sp,48
    800078f2:	8082                	ret

Disassembly of section .text._ZN6kernel6driver11virtio_disk4Disk4init28_$u7b$$u7b$closure$u7d$$u7d$17h689471537d47629aE:

00000000800078f4 <_ZN6kernel6driver11virtio_disk4Disk4init28_$u7b$$u7b$closure$u7d$$u7d$17h689471537d47629aE>:
        write(VIRTIO_MMIO_QUEUE_NUM, NUM as u32);
        let pfn: usize = (self as *const Disk as usize) >> PGSHIFT;
        write(VIRTIO_MMIO_QUEUE_PFN, u32::try_from(pfn).unwrap());

        // set the descriptors free
        self.free.iter_mut().for_each(|f| *f = true);
    800078f4:	1141                	addi	sp,sp,-16
    800078f6:	e02a                	sd	a0,0(sp)
    800078f8:	e42e                	sd	a1,8(sp)
    800078fa:	4505                	li	a0,1
    800078fc:	00a58023          	sb	a0,0(a1)
    80007900:	0141                	addi	sp,sp,16
    80007902:	8082                	ret

Disassembly of section .text._ZN6kernel8register10sfence_vma17h5dd28d1c77dda526E:

0000000080007904 <_ZN6kernel8register10sfence_vma17h5dd28d1c77dda526E>:
pub mod ra;
pub mod clint;

#[inline]
// flush the TLB.
pub unsafe fn sfence_vma(){
    80007904:	7159                	addi	sp,sp,-112
    println!("flush the TLB");
    80007906:	f486                	sd	ra,104(sp)

0000000080007908 <.LBB0_5>:
    80007908:	0001d597          	auipc	a1,0x1d
    8000790c:	c4858593          	addi	a1,a1,-952 # 80024550 <.L__unnamed_1>

0000000080007910 <.LBB0_6>:
    80007910:	0001d697          	auipc	a3,0x1d
    80007914:	c5068693          	addi	a3,a3,-944 # 80024560 <.L__unnamed_5>
    80007918:	0028                	addi	a0,sp,8
    8000791a:	4605                	li	a2,1
    8000791c:	4701                	li	a4,0
    8000791e:	ffffe097          	auipc	ra,0xffffe
    80007922:	e06080e7          	jalr	-506(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80007926:	a009                	j	80007928 <.LBB0_6+0x18>
    80007928:	0028                	addi	a0,sp,8
    8000792a:	00009097          	auipc	ra,0x9
    8000792e:	3c6080e7          	jalr	966(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80007932:	a009                	j	80007934 <.LBB0_6+0x24>
    llvm_asm!("sfence.vma zero, zero"::::"volatile");
    80007934:	12000073          	sfence.vma

0000000080007938 <.LBB0_7>:
    println!("finish sfence vma");
    80007938:	0001d597          	auipc	a1,0x1d
    8000793c:	c4058593          	addi	a1,a1,-960 # 80024578 <.L__unnamed_3>

0000000080007940 <.LBB0_8>:
    80007940:	0001d697          	auipc	a3,0x1d
    80007944:	c2068693          	addi	a3,a3,-992 # 80024560 <.L__unnamed_5>
    80007948:	1828                	addi	a0,sp,56
    8000794a:	4605                	li	a2,1
    8000794c:	4701                	li	a4,0
    8000794e:	ffffe097          	auipc	ra,0xffffe
    80007952:	dd6080e7          	jalr	-554(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80007956:	a009                	j	80007958 <.LBB0_8+0x18>
    80007958:	1828                	addi	a0,sp,56
    8000795a:	00009097          	auipc	ra,0x9
    8000795e:	396080e7          	jalr	918(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80007962:	a009                	j	80007964 <.LBB0_8+0x24>
    80007964:	70a6                	ld	ra,104(sp)
    80007966:	6165                	addi	sp,sp,112
    80007968:	8082                	ret

Disassembly of section .text._ZN6kernel8register2tp4read17h6b8b58c7ee01e713E:

000000008000796a <_ZN6kernel8register2tp4read17h6b8b58c7ee01e713E>:
// read and write tp, the thread pointer, which holds
// this core's hartid (core number), the index into cpus[].
#[inline]
pub unsafe fn read() -> usize {
    8000796a:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("mv $0, tp":"=r"(ret):::"volatile");
    8000796c:	8512                	mv	a0,tp
    8000796e:	e42a                	sd	a0,8(sp)
    ret
}
    80007970:	0141                	addi	sp,sp,16
    80007972:	8082                	ret

Disassembly of section .text._ZN6kernel8register2tp5write17heb39b5120cc919f7E:

0000000080007974 <_ZN6kernel8register2tp5write17heb39b5120cc919f7E>:

#[inline]
pub unsafe fn write(x:usize){
    80007974:	1141                	addi	sp,sp,-16
    80007976:	e42a                	sd	a0,8(sp)
    llvm_asm!("mv tp, $0"::"r"(x)::"volatile");
    80007978:	822a                	mv	tp,a0
    8000797a:	0141                	addi	sp,sp,16
    8000797c:	8082                	ret

Disassembly of section .text._ZN6kernel8register5stval4read17h20f8eee1779dac39E:

000000008000797e <_ZN6kernel8register5stval4read17h20f8eee1779dac39E>:
// Supervisor Trap Value
#[inline]
pub unsafe fn read() -> usize {
    8000797e:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, stval":"=r"(ret):::"volatile");
    80007980:	14302573          	csrr	a0,stval
    80007984:	e42a                	sd	a0,8(sp)
    ret
}
    80007986:	0141                	addi	sp,sp,16
    80007988:	8082                	ret

Disassembly of section .text._ZN6kernel4misc3min17h54b90595eef0e281E:

000000008000798a <_ZN6kernel4misc3min17h54b90595eef0e281E>:
use core::ptr::read;
use core::cmp::Ord;
use core::ptr::{ write, write_bytes };

pub fn min<T>(a: T, b: T) -> T 
    8000798a:	7179                	addi	sp,sp,-48
    8000798c:	f406                	sd	ra,40(sp)
    8000798e:	e82a                	sd	a0,16(sp)
    80007990:	ec2e                	sd	a1,24(sp)
    80007992:	0808                	addi	a0,sp,16
    80007994:	082c                	addi	a1,sp,24
    where T: Ord
{
    if a < b {
    80007996:	0000a097          	auipc	ra,0xa
    8000799a:	0f6080e7          	jalr	246(ra) # 80011a8c <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbd123249fa251e75E>
    8000799e:	e42a                	sd	a0,8(sp)
    800079a0:	a009                	j	800079a2 <_ZN6kernel4misc3min17h54b90595eef0e281E+0x18>
    800079a2:	4501                	li	a0,0
    800079a4:	65a2                	ld	a1,8(sp)
    800079a6:	00a58663          	beq	a1,a0,800079b2 <_ZN6kernel4misc3min17h54b90595eef0e281E+0x28>
    800079aa:	a009                	j	800079ac <_ZN6kernel4misc3min17h54b90595eef0e281E+0x22>
        return a
    800079ac:	6542                	ld	a0,16(sp)
    800079ae:	f02a                	sd	a0,32(sp)
    }
    b
}
    800079b0:	a021                	j	800079b8 <_ZN6kernel4misc3min17h54b90595eef0e281E+0x2e>
    b
    800079b2:	6562                	ld	a0,24(sp)
    800079b4:	f02a                	sd	a0,32(sp)
}
    800079b6:	a009                	j	800079b8 <_ZN6kernel4misc3min17h54b90595eef0e281E+0x2e>
    800079b8:	7502                	ld	a0,32(sp)
    800079ba:	70a2                	ld	ra,40(sp)
    800079bc:	6145                	addi	sp,sp,48
    800079be:	8082                	ret

Disassembly of section .text._ZN4core5clone5Clone10clone_from17hdab277ae1ce4c01cE:

00000000800079c0 <_ZN4core5clone5Clone10clone_from17hdab277ae1ce4c01cE>:
    /// `a.clone_from(&b)` is equivalent to `a = b.clone()` in functionality,
    /// but can be overridden to reuse the resources of `a` to avoid unnecessary
    /// allocations.
    #[inline]
    #[stable(feature = "rust1", since = "1.0.0")]
    fn clone_from(&mut self, source: &Self) {
    800079c0:	715d                	addi	sp,sp,-80
    800079c2:	e486                	sd	ra,72(sp)
    800079c4:	f02a                	sd	a0,32(sp)
    800079c6:	f42e                	sd	a1,40(sp)
        *self = source.clone()
    800079c8:	e42a                	sd	a0,8(sp)
    800079ca:	852e                	mv	a0,a1
    800079cc:	00015097          	auipc	ra,0x15
    800079d0:	840080e7          	jalr	-1984(ra) # 8001c20c <_ZN63_$LT$kernel..fs..inode..Inode$u20$as$u20$core..clone..Clone$GT$5clone17h9e8c77d0c705e5bdE>
    800079d4:	f82a                	sd	a0,48(sp)
    800079d6:	fc2e                	sd	a1,56(sp)
    800079d8:	e82a                	sd	a0,16(sp)
    800079da:	ec2e                	sd	a1,24(sp)
    800079dc:	a009                	j	800079de <_ZN4core5clone5Clone10clone_from17hdab277ae1ce4c01cE+0x1e>
    800079de:	6522                	ld	a0,8(sp)
    800079e0:	fffff097          	auipc	ra,0xfffff
    800079e4:	e76080e7          	jalr	-394(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    800079e8:	a009                	j	800079ea <_ZN4core5clone5Clone10clone_from17hdab277ae1ce4c01cE+0x2a>
    800079ea:	6562                	ld	a0,24(sp)
    800079ec:	65a2                	ld	a1,8(sp)
    800079ee:	e588                	sd	a0,8(a1)
    800079f0:	6542                	ld	a0,16(sp)
    800079f2:	e188                	sd	a0,0(a1)
    }
    800079f4:	60a6                	ld	ra,72(sp)
    800079f6:	6161                	addi	sp,sp,80
    800079f8:	8082                	ret

Disassembly of section .text._ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4ec36c5424dd304fE:

00000000800079fa <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4ec36c5424dd304fE>:
#[derive(PartialEq, Eq, PartialOrd, Ord, Clone, Copy, Default, Hash)]
    800079fa:	7179                	addi	sp,sp,-48
    800079fc:	f406                	sd	ra,40(sp)
    800079fe:	e42a                	sd	a0,8(sp)
    80007a00:	e82e                	sd	a1,16(sp)
pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    80007a02:	ec2e                	sd	a1,24(sp)
    80007a04:	f02a                	sd	a0,32(sp)
    80007a06:	0000a097          	auipc	ra,0xa
    80007a0a:	048080e7          	jalr	72(ra) # 80011a4e <_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h5b3f3bd726ecf834E>
    80007a0e:	e02a                	sd	a0,0(sp)
    80007a10:	a009                	j	80007a12 <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4ec36c5424dd304fE+0x18>
#[derive(PartialEq, Eq, PartialOrd, Ord, Clone, Copy, Default, Hash)]
    80007a12:	6502                	ld	a0,0(sp)
    80007a14:	70a2                	ld	ra,40(sp)
    80007a16:	6145                	addi	sp,sp,48
    80007a18:	8082                	ret

Disassembly of section .text._ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h06a595a60ebf50d1E:

0000000080007a1a <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h06a595a60ebf50d1E>:
    80007a1a:	7179                	addi	sp,sp,-48
    80007a1c:	f406                	sd	ra,40(sp)
    80007a1e:	e42a                	sd	a0,8(sp)
    80007a20:	e82e                	sd	a1,16(sp)
pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    80007a22:	ec2e                	sd	a1,24(sp)
    80007a24:	f02a                	sd	a0,32(sp)
    80007a26:	0000a097          	auipc	ra,0xa
    80007a2a:	03c080e7          	jalr	60(ra) # 80011a62 <_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2ne17h8edcfa1ced57bbcfE>
    80007a2e:	e02a                	sd	a0,0(sp)
    80007a30:	a009                	j	80007a32 <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h06a595a60ebf50d1E+0x18>
#[derive(PartialEq, Eq, PartialOrd, Ord, Clone, Copy, Default, Hash)]
    80007a32:	6502                	ld	a0,0(sp)
    80007a34:	70a2                	ld	ra,40(sp)
    80007a36:	6145                	addi	sp,sp,48
    80007a38:	8082                	ret

Disassembly of section .text._ZN6kernel2fs4init17he50c5d7abc0cecaeE:

0000000080007a3a <_ZN6kernel2fs4init17he50c5d7abc0cecaeE>:
use crate::lock::sleeplock::SleepLockGuard;

/// Init fs.
/// Read super block info.
/// Init log info and recover if necessary.
pub unsafe fn init(dev: u32) {
    80007a3a:	7119                	addi	sp,sp,-128
    80007a3c:	fc86                	sd	ra,120(sp)
    80007a3e:	85aa                	mv	a1,a0
    80007a40:	d6aa                	sw	a0,108(sp)

0000000080007a42 <.LBB0_10>:
    SUPER_BLOCK.init(dev);
    80007a42:	00065617          	auipc	a2,0x65
    80007a46:	79e60613          	addi	a2,a2,1950 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    80007a4a:	f42a                	sd	a0,40(sp)
    80007a4c:	8532                	mv	a0,a2
    80007a4e:	7622                	ld	a2,40(sp)
    80007a50:	f02e                	sd	a1,32(sp)
    80007a52:	85b2                	mv	a1,a2
    80007a54:	00005097          	auipc	ra,0x5
    80007a58:	69c080e7          	jalr	1692(ra) # 8000d0f0 <_ZN6kernel2fs10superblock10SuperBlock4init17hbc156d1f9075dc38E>
    80007a5c:	a009                	j	80007a5e <.LBB0_11>

0000000080007a5e <.LBB0_11>:
    let log_ptr = LOG.acquire().deref_mut() as *mut Log;
    80007a5e:	00052517          	auipc	a0,0x52
    80007a62:	60250513          	addi	a0,a0,1538 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80007a66:	ffffa097          	auipc	ra,0xffffa
    80007a6a:	742080e7          	jalr	1858(ra) # 800021a8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE>
    80007a6e:	f82a                	sd	a0,48(sp)
    80007a70:	a009                	j	80007a72 <.LBB0_11+0x14>
    80007a72:	1808                	addi	a0,sp,48
    80007a74:	ffffc097          	auipc	ra,0xffffc
    80007a78:	f48080e7          	jalr	-184(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    80007a7c:	ec2a                	sd	a0,24(sp)
    80007a7e:	a009                	j	80007a80 <.LBB0_11+0x22>
    80007a80:	6562                	ld	a0,24(sp)
    80007a82:	f8aa                	sd	a0,112(sp)
    80007a84:	1808                	addi	a0,sp,48
    80007a86:	fffff097          	auipc	ra,0xfffff
    80007a8a:	f0a080e7          	jalr	-246(ra) # 80006990 <_ZN4core3ptr86drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..log..Log$GT$$GT$17hd96a256307aab26dE>
    80007a8e:	a009                	j	80007a90 <.LBB0_11+0x32>
    log_ptr.as_mut().unwrap().init(dev);
    80007a90:	6562                	ld	a0,24(sp)
    80007a92:	00000097          	auipc	ra,0x0
    80007a96:	de0080e7          	jalr	-544(ra) # 80007872 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E>
    80007a9a:	e82a                	sd	a0,16(sp)
    80007a9c:	a009                	j	80007a9e <.LBB0_12>

0000000080007a9e <.LBB0_12>:
    80007a9e:	0001d597          	auipc	a1,0x1d
    80007aa2:	afa58593          	addi	a1,a1,-1286 # 80024598 <.L__unnamed_1>
    80007aa6:	6542                	ld	a0,16(sp)
    80007aa8:	00011097          	auipc	ra,0x11
    80007aac:	3f0080e7          	jalr	1008(ra) # 80018e98 <_ZN4core6option15Option$LT$T$GT$6unwrap17hf05086444e17f716E>
    80007ab0:	e42a                	sd	a0,8(sp)
    80007ab2:	a009                	j	80007ab4 <.LBB0_12+0x16>
    80007ab4:	6522                	ld	a0,8(sp)
    80007ab6:	7582                	ld	a1,32(sp)
    80007ab8:	0000c097          	auipc	ra,0xc
    80007abc:	4a2080e7          	jalr	1186(ra) # 80013f5a <_ZN6kernel2fs3log3Log4init17ha65acaf2dd191df6E>
    80007ac0:	a009                	j	80007ac2 <.LBB0_13>

0000000080007ac2 <.LBB0_13>:
    println!("file system: setup done");
    80007ac2:	0001d597          	auipc	a1,0x1d
    80007ac6:	b0658593          	addi	a1,a1,-1274 # 800245c8 <.L__unnamed_2>

0000000080007aca <.LBB0_14>:
    80007aca:	0001d697          	auipc	a3,0x1d
    80007ace:	b0e68693          	addi	a3,a3,-1266 # 800245d8 <.L__unnamed_4>
    80007ad2:	1828                	addi	a0,sp,56
    80007ad4:	4605                	li	a2,1
    80007ad6:	4701                	li	a4,0
    80007ad8:	ffffe097          	auipc	ra,0xffffe
    80007adc:	c4c080e7          	jalr	-948(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80007ae0:	a009                	j	80007ae2 <.LBB0_14+0x18>
    80007ae2:	1828                	addi	a0,sp,56
    80007ae4:	00009097          	auipc	ra,0x9
    80007ae8:	20c080e7          	jalr	524(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80007aec:	a009                	j	80007aee <.LBB0_14+0x24>
}
    80007aee:	70e6                	ld	ra,120(sp)
    80007af0:	6109                	addi	sp,sp,128
    80007af2:	8082                	ret

Disassembly of section .text._ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE:

0000000080007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>:
    }
}

impl Addr for VirtualAddress{
    #[inline]
    fn as_usize(&self) -> usize{
    80007af4:	1141                	addi	sp,sp,-16
    80007af6:	e42a                	sd	a0,8(sp)
        self.0
    80007af8:	6108                	ld	a0,0(a0)
    }
    80007afa:	0141                	addi	sp,sp,16
    80007afc:	8082                	ret

Disassembly of section .text._ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h7da1e6231c2c2373E:

0000000080007afe <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h7da1e6231c2c2373E>:
    fn data_ref(&self) -> &usize{
        &self.0
    }

    #[inline]
    fn data_mut(&mut self) -> &mut usize{
    80007afe:	1141                	addi	sp,sp,-16
    80007b00:	e42a                	sd	a0,8(sp)
        &mut self.0
    }
    80007b02:	0141                	addi	sp,sp,16
    80007b04:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE:

0000000080007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>:

impl Addr for PhysicalAddress{


    #[inline]
    fn as_usize(&self) -> usize{
    80007b06:	1141                	addi	sp,sp,-16
    80007b08:	e42a                	sd	a0,8(sp)
        self.0
    80007b0a:	6108                	ld	a0,0(a0)
    }
    80007b0c:	0141                	addi	sp,sp,16
    80007b0e:	8082                	ret

Disassembly of section .text._ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h48dd5356ad1e5662E:

0000000080007b10 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h48dd5356ad1e5662E>:
    fn data_ref(&self) -> &usize{
        &self.0
    }

    #[inline]
    fn data_mut(&mut self) -> &mut usize{
    80007b10:	1141                	addi	sp,sp,-16
    80007b12:	e42a                	sd	a0,8(sp)
        &mut self.0
    }
    80007b14:	0141                	addi	sp,sp,16
    80007b16:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E:

0000000080007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>:

}

impl VirtualAddress{
    pub fn new(addr: usize) -> Self{
    80007b18:	1141                	addi	sp,sp,-16
    80007b1a:	e42a                	sd	a0,8(sp)
        Self(addr)
    80007b1c:	e02a                	sd	a0,0(sp)
    }
    80007b1e:	0141                	addi	sp,sp,16
    80007b20:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE:

0000000080007b22 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE>:
    pub fn add_addr(&self, addr:usize) -> Self{
        Self(self.0+addr)
    }


    pub fn page_num(&self, level: usize) -> usize{
    80007b22:	7179                	addi	sp,sp,-48
    80007b24:	f02a                	sd	a0,32(sp)
    80007b26:	f42e                	sd	a1,40(sp)
        (self.0 >> (PGSHIFT + level * PGMASKLEN)) & PGMASK
    80007b28:	6108                	ld	a0,0(a0)
    80007b2a:	00359613          	slli	a2,a1,0x3
    80007b2e:	962e                	add	a2,a2,a1
    80007b30:	46a5                	li	a3,9
    80007b32:	02d5b5b3          	mulhu	a1,a1,a3
    80007b36:	4681                	li	a3,0
    80007b38:	ec2a                	sd	a0,24(sp)
    80007b3a:	e832                	sd	a2,16(sp)
    80007b3c:	02d59a63          	bne	a1,a3,80007b70 <.LBB5_7>
    80007b40:	a009                	j	80007b42 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE+0x20>
    80007b42:	6542                	ld	a0,16(sp)
    80007b44:	00c50593          	addi	a1,a0,12
    80007b48:	e42e                	sd	a1,8(sp)
    80007b4a:	04a5e263          	bltu	a1,a0,80007b8e <.LBB5_9>
    80007b4e:	a009                	j	80007b50 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE+0x2e>
    80007b50:	6522                	ld	a0,8(sp)
    80007b52:	fc057593          	andi	a1,a0,-64
    80007b56:	6662                	ld	a2,24(sp)
    80007b58:	00a656b3          	srl	a3,a2,a0
    80007b5c:	4701                	li	a4,0
    80007b5e:	e036                	sd	a3,0(sp)
    80007b60:	04e59563          	bne	a1,a4,80007baa <.LBB5_11>
    80007b64:	a009                	j	80007b66 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE+0x44>
    80007b66:	6502                	ld	a0,0(sp)
    80007b68:	1ff57513          	andi	a0,a0,511
    }
    80007b6c:	6145                	addi	sp,sp,48
    80007b6e:	8082                	ret

0000000080007b70 <.LBB5_7>:
        (self.0 >> (PGSHIFT + level * PGMASKLEN)) & PGMASK
    80007b70:	0001d517          	auipc	a0,0x1d
    80007b74:	aa050513          	addi	a0,a0,-1376 # 80024610 <str.0>

0000000080007b78 <.LBB5_8>:
    80007b78:	0001d617          	auipc	a2,0x1d
    80007b7c:	a7860613          	addi	a2,a2,-1416 # 800245f0 <.L__unnamed_1>
    80007b80:	02100593          	li	a1,33
    80007b84:	00019097          	auipc	ra,0x19
    80007b88:	146080e7          	jalr	326(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080007b8e <.LBB5_9>:
    80007b8e:	0001d517          	auipc	a0,0x1d
    80007b92:	ac250513          	addi	a0,a0,-1342 # 80024650 <str.1>

0000000080007b96 <.LBB5_10>:
    80007b96:	0001d617          	auipc	a2,0x1d
    80007b9a:	aa260613          	addi	a2,a2,-1374 # 80024638 <.L__unnamed_2>
    80007b9e:	45f1                	li	a1,28
    80007ba0:	00019097          	auipc	ra,0x19
    80007ba4:	12a080e7          	jalr	298(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080007baa <.LBB5_11>:
    80007baa:	0001d517          	auipc	a0,0x1d
    80007bae:	ae650513          	addi	a0,a0,-1306 # 80024690 <str.2>

0000000080007bb2 <.LBB5_12>:
    80007bb2:	0001d617          	auipc	a2,0x1d
    80007bb6:	abe60613          	addi	a2,a2,-1346 # 80024670 <.L__unnamed_3>
    80007bba:	02400593          	li	a1,36
    80007bbe:	00019097          	auipc	ra,0x19
    80007bc2:	10c080e7          	jalr	268(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E:

0000000080007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>:

}

impl PhysicalAddress{
    pub fn new(value:usize) -> Self{
    80007bc8:	1141                	addi	sp,sp,-16
    80007bca:	e42a                	sd	a0,8(sp)
        Self(value)
    80007bcc:	e02a                	sd	a0,0(sp)
    }
    80007bce:	0141                	addi	sp,sp,16
    80007bd0:	8082                	ret

Disassembly of section .text._ZN80_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$core..cmp..PartialEq$GT$2ne17hd326e7ca8a6473daE:

0000000080007bd2 <_ZN80_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$core..cmp..PartialEq$GT$2ne17hd326e7ca8a6473daE>:
#[derive(Debug, Copy, Clone, PartialEq)]
    80007bd2:	1101                	addi	sp,sp,-32
    80007bd4:	e02a                	sd	a0,0(sp)
    80007bd6:	e42e                	sd	a1,8(sp)
pub struct VirtualAddress(pub usize);
    80007bd8:	e82e                	sd	a1,16(sp)
    80007bda:	ec2a                	sd	a0,24(sp)
    80007bdc:	6108                	ld	a0,0(a0)
    80007bde:	618c                	ld	a1,0(a1)
    80007be0:	8d2d                	xor	a0,a0,a1
    80007be2:	00a03533          	snez	a0,a0
#[derive(Debug, Copy, Clone, PartialEq)]
    80007be6:	6105                	addi	sp,sp,32
    80007be8:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry8PteFlags3new17h7be3f0afab4c8bddE:

0000000080007bea <_ZN6kernel6memory7mapping16page_table_entry8PteFlags3new17h7be3f0afab4c8bddE>:
    }

}

impl PteFlags {
    pub fn new(x: usize) -> Self {
    80007bea:	1141                	addi	sp,sp,-16
    80007bec:	e42a                	sd	a0,8(sp)
        Self{
    80007bee:	e02a                	sd	a0,0(sp)
            bits: x
        }
    }
    80007bf0:	0141                	addi	sp,sp,16
    80007bf2:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_usize17h486ac0941c123b16E:

0000000080007bf4 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_usize17h486ac0941c123b16E>:
        let addr = self.as_usize() as *mut u8;
        addr
    }

    #[inline]
    pub fn as_usize(&self) -> usize{
    80007bf4:	1141                	addi	sp,sp,-16
    80007bf6:	e42a                	sd	a0,8(sp)
        self.0
    80007bf8:	6108                	ld	a0,0(a0)
    }
    80007bfa:	0141                	addi	sp,sp,16
    80007bfc:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E:

0000000080007bfe <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E>:

    #[inline]
    pub fn is_valid(&self) -> bool{
    80007bfe:	1101                	addi	sp,sp,-32
    80007c00:	ec06                	sd	ra,24(sp)
    80007c02:	e82a                	sd	a0,16(sp)
        (self.0 & (PteFlags::V.bits())) > 0
    80007c04:	6108                	ld	a0,0(a0)

0000000080007c06 <.LBB2_2>:
    80007c06:	0001c597          	auipc	a1,0x1c
    80007c0a:	16a58593          	addi	a1,a1,362 # 80023d70 <.L__unnamed_5+0x70>
    80007c0e:	e42a                	sd	a0,8(sp)
    80007c10:	852e                	mv	a0,a1
    80007c12:	00000097          	auipc	ra,0x0
    80007c16:	12c080e7          	jalr	300(ra) # 80007d3e <_ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE>
    80007c1a:	e02a                	sd	a0,0(sp)
    80007c1c:	a009                	j	80007c1e <.LBB2_2+0x18>
    80007c1e:	6522                	ld	a0,8(sp)
    80007c20:	6582                	ld	a1,0(sp)
    80007c22:	00b57633          	and	a2,a0,a1
    80007c26:	00c03533          	snez	a0,a2
    }
    80007c2a:	60e2                	ld	ra,24(sp)
    80007c2c:	6105                	addi	sp,sp,32
    80007c2e:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry7is_user17hc8193ece9ac985e1E:

0000000080007c30 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry7is_user17hc8193ece9ac985e1E>:

    #[inline]
    pub fn is_user(&self) -> bool {
    80007c30:	1101                	addi	sp,sp,-32
    80007c32:	ec06                	sd	ra,24(sp)
    80007c34:	e82a                	sd	a0,16(sp)
        (self.0 & (PteFlags::V.bits())) > 0
    80007c36:	6108                	ld	a0,0(a0)

0000000080007c38 <.LBB3_2>:
    80007c38:	0001c597          	auipc	a1,0x1c
    80007c3c:	13858593          	addi	a1,a1,312 # 80023d70 <.L__unnamed_5+0x70>
    80007c40:	e42a                	sd	a0,8(sp)
    80007c42:	852e                	mv	a0,a1
    80007c44:	00000097          	auipc	ra,0x0
    80007c48:	0fa080e7          	jalr	250(ra) # 80007d3e <_ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE>
    80007c4c:	e02a                	sd	a0,0(sp)
    80007c4e:	a009                	j	80007c50 <.LBB3_2+0x18>
    80007c50:	6522                	ld	a0,8(sp)
    80007c52:	6582                	ld	a1,0(sp)
    80007c54:	00b57633          	and	a2,a0,a1
    80007c58:	00c03533          	snez	a0,a2
    }
    80007c5c:	60e2                	ld	ra,24(sp)
    80007c5e:	6105                	addi	sp,sp,32
    80007c60:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry11rm_user_bit17h04bbee7c0383a4ddE:

0000000080007c62 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry11rm_user_bit17h04bbee7c0383a4ddE>:
        let pte = self.as_usize() | (PteFlags::U.bits());
        Self(pte)
    }

    #[inline]
    pub fn rm_user_bit(&mut self) {
    80007c62:	1101                	addi	sp,sp,-32
    80007c64:	ec06                	sd	ra,24(sp)
    80007c66:	e82a                	sd	a0,16(sp)

0000000080007c68 <.LBB4_2>:
        self.0 &= !(PteFlags::U.bits());
    80007c68:	0001c597          	auipc	a1,0x1c
    80007c6c:	13058593          	addi	a1,a1,304 # 80023d98 <.L__unnamed_5+0x98>
    80007c70:	e42a                	sd	a0,8(sp)
    80007c72:	852e                	mv	a0,a1
    80007c74:	00000097          	auipc	ra,0x0
    80007c78:	0ca080e7          	jalr	202(ra) # 80007d3e <_ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE>
    80007c7c:	e02a                	sd	a0,0(sp)
    80007c7e:	a009                	j	80007c80 <.LBB4_2+0x18>
    80007c80:	6502                	ld	a0,0(sp)
    80007c82:	fff54593          	not	a1,a0
    80007c86:	6622                	ld	a2,8(sp)
    80007c88:	6214                	ld	a3,0(a2)
    80007c8a:	8df5                	and	a1,a1,a3
    80007c8c:	e20c                	sd	a1,0(a2)
    }
    80007c8e:	60e2                	ld	ra,24(sp)
    80007c90:	6105                	addi	sp,sp,32
    80007c92:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E:

0000000080007c94 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E>:

    // implement PTE2PA
    #[inline]
    pub fn as_pagetable(&self) -> *mut PageTable{
    80007c94:	1101                	addi	sp,sp,-32
    80007c96:	e82a                	sd	a0,16(sp)
        let ret = ((self.0 >> 10) << 12) as *mut PageTable;
    80007c98:	6108                	ld	a0,0(a0)
    80007c9a:	8129                	srli	a0,a0,0xa
    80007c9c:	e42a                	sd	a0,8(sp)
    80007c9e:	a009                	j	80007ca0 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E+0xc>
    80007ca0:	6522                	ld	a0,8(sp)
    80007ca2:	00c51593          	slli	a1,a0,0xc
    80007ca6:	e02e                	sd	a1,0(sp)
    80007ca8:	a009                	j	80007caa <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E+0x16>
    80007caa:	6502                	ld	a0,0(sp)
    80007cac:	ec2a                	sd	a0,24(sp)
        ret
    }
    80007cae:	6105                	addi	sp,sp,32
    80007cb0:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_flags17h7591d6ffa8a3f225E:

0000000080007cb2 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_flags17h7591d6ffa8a3f225E>:
        Self((addr >> 12) << 10)
    }

    // implement PTE_FLAGES
    #[inline]
    pub fn as_flags(&self) -> usize {
    80007cb2:	1101                	addi	sp,sp,-32
    80007cb4:	ec06                	sd	ra,24(sp)
    80007cb6:	e82a                	sd	a0,16(sp)
        self.as_usize() & 0x3FF
    80007cb8:	00000097          	auipc	ra,0x0
    80007cbc:	f3c080e7          	jalr	-196(ra) # 80007bf4 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_usize17h486ac0941c123b16E>
    80007cc0:	e42a                	sd	a0,8(sp)
    80007cc2:	a009                	j	80007cc4 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_flags17h7591d6ffa8a3f225E+0x12>
    80007cc4:	6522                	ld	a0,8(sp)
    80007cc6:	3ff57513          	andi	a0,a0,1023
    }
    80007cca:	60e2                	ld	ra,24(sp)
    80007ccc:	6105                	addi	sp,sp,32
    80007cce:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E:

0000000080007cd0 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E>:
    pub fn write_zero(&mut self){
        self.0 = 0;
    }

    #[inline]
    pub fn write_perm(&mut self, pa:PhysicalAddress, perm: PteFlags){
    80007cd0:	711d                	addi	sp,sp,-96
    80007cd2:	ec86                	sd	ra,88(sp)
    80007cd4:	fc2e                	sd	a1,56(sp)
    80007cd6:	e4aa                	sd	a0,72(sp)
    80007cd8:	e8b2                	sd	a2,80(sp)
    80007cda:	182c                	addi	a1,sp,56
        self.0 = ((pa.as_usize() >> 12) << 10) | (perm | PteFlags::V).bits()
    80007cdc:	f82a                	sd	a0,48(sp)
    80007cde:	852e                	mv	a0,a1
    80007ce0:	f432                	sd	a2,40(sp)
    80007ce2:	00000097          	auipc	ra,0x0
    80007ce6:	e24080e7          	jalr	-476(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    80007cea:	f02a                	sd	a0,32(sp)
    80007cec:	a009                	j	80007cee <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E+0x1e>
    80007cee:	7502                	ld	a0,32(sp)
    80007cf0:	00c55593          	srli	a1,a0,0xc
    80007cf4:	ec2e                	sd	a1,24(sp)
    80007cf6:	a009                	j	80007cf8 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E+0x28>
    80007cf8:	6562                	ld	a0,24(sp)
    80007cfa:	00a51593          	slli	a1,a0,0xa
    80007cfe:	e82e                	sd	a1,16(sp)
    80007d00:	a009                	j	80007d02 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E+0x32>
    80007d02:	4585                	li	a1,1
    80007d04:	7522                	ld	a0,40(sp)
    80007d06:	00000097          	auipc	ra,0x0
    80007d0a:	042080e7          	jalr	66(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80007d0e:	e0aa                	sd	a0,64(sp)
    80007d10:	a009                	j	80007d12 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E+0x42>
    80007d12:	0088                	addi	a0,sp,64
    80007d14:	00000097          	auipc	ra,0x0
    80007d18:	02a080e7          	jalr	42(ra) # 80007d3e <_ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE>
    80007d1c:	e42a                	sd	a0,8(sp)
    80007d1e:	a009                	j	80007d20 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E+0x50>
    80007d20:	6542                	ld	a0,16(sp)
    80007d22:	65a2                	ld	a1,8(sp)
    80007d24:	00b56633          	or	a2,a0,a1
    80007d28:	76c2                	ld	a3,48(sp)
    80007d2a:	e290                	sd	a2,0(a3)
    }
    80007d2c:	60e6                	ld	ra,88(sp)
    80007d2e:	6125                	addi	sp,sp,96
    80007d30:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry14PageTableEntry5write17h7f4744887241f17eE:

0000000080007d32 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry5write17h7f4744887241f17eE>:

    #[inline]
    pub fn write(&mut self, addr: usize) {
    80007d32:	1141                	addi	sp,sp,-16
    80007d34:	e02a                	sd	a0,0(sp)
    80007d36:	e42e                	sd	a1,8(sp)
        self.0 = addr
    80007d38:	e10c                	sd	a1,0(a0)
    }
    80007d3a:	0141                	addi	sp,sp,16
    80007d3c:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE:

0000000080007d3e <_ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE>:
                }
            }

            /// Returns the raw value of the flags currently stored.
            #[inline]
            pub const fn bits(&self) -> $T {
    80007d3e:	1141                	addi	sp,sp,-16
    80007d40:	e42a                	sd	a0,8(sp)
                self.bits
    80007d42:	6108                	ld	a0,0(a0)
            }
    80007d44:	0141                	addi	sp,sp,16
    80007d46:	8082                	ret

Disassembly of section .text._ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E:

0000000080007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>:
        impl $crate::_core::ops::BitOr for $BitFlags {
            type Output = Self;

            /// Returns the union of the two sets of flags.
            #[inline]
            fn bitor(self, other: $BitFlags) -> Self {
    80007d48:	1101                	addi	sp,sp,-32
    80007d4a:	e82a                	sd	a0,16(sp)
    80007d4c:	ec2e                	sd	a1,24(sp)
                Self { bits: self.bits | other.bits }
    80007d4e:	8d4d                	or	a0,a0,a1
    80007d50:	e42a                	sd	a0,8(sp)
            }
    80007d52:	6105                	addi	sp,sp,32
    80007d54:	8082                	ret

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0cd3b941be0d0d37E:

0000000080007d56 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0cd3b941be0d0d37E>:
            fn fmt(&self, f: &mut Formatter<'_>) -> Result { $tr::fmt(&**self, f) }
    80007d56:	7179                	addi	sp,sp,-48
    80007d58:	f406                	sd	ra,40(sp)
    80007d5a:	ec2a                	sd	a0,24(sp)
    80007d5c:	f02e                	sd	a1,32(sp)
    80007d5e:	6110                	ld	a2,0(a0)
    80007d60:	6508                	ld	a0,8(a0)
    80007d62:	e82a                	sd	a0,16(sp)
    80007d64:	8532                	mv	a0,a2
    80007d66:	6642                	ld	a2,16(sp)
    80007d68:	e42e                	sd	a1,8(sp)
    80007d6a:	85b2                	mv	a1,a2
    80007d6c:	6622                	ld	a2,8(sp)
    80007d6e:	0001a097          	auipc	ra,0x1a
    80007d72:	d6e080e7          	jalr	-658(ra) # 80021adc <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE>
    80007d76:	e02a                	sd	a0,0(sp)
    80007d78:	a009                	j	80007d7a <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0cd3b941be0d0d37E+0x24>
    80007d7a:	6502                	ld	a0,0(sp)
    80007d7c:	70a2                	ld	ra,40(sp)
    80007d7e:	6145                	addi	sp,sp,48
    80007d80:	8082                	ret

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E:

0000000080007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>:
    80007d82:	7179                	addi	sp,sp,-48
    80007d84:	f406                	sd	ra,40(sp)
    80007d86:	ec2a                	sd	a0,24(sp)
    80007d88:	f02e                	sd	a1,32(sp)
    80007d8a:	6110                	ld	a2,0(a0)
    80007d8c:	6508                	ld	a0,8(a0)
    80007d8e:	e82a                	sd	a0,16(sp)
    80007d90:	8532                	mv	a0,a2
    80007d92:	6642                	ld	a2,16(sp)
    80007d94:	e42e                	sd	a1,8(sp)
    80007d96:	85b2                	mv	a1,a2
    80007d98:	6622                	ld	a2,8(sp)
    80007d9a:	0001a097          	auipc	ra,0x1a
    80007d9e:	1aa080e7          	jalr	426(ra) # 80021f44 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h669958e415ffd666E>
    80007da2:	e02a                	sd	a0,0(sp)
    80007da4:	a009                	j	80007da6 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E+0x24>
    80007da6:	6502                	ld	a0,0(sp)
    80007da8:	70a2                	ld	ra,40(sp)
    80007daa:	6145                	addi	sp,sp,48
    80007dac:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h11722b493b1ededaE:

0000000080007dae <_ZN4core3fmt10ArgumentV13new17h11722b493b1ededaE>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    80007dae:	715d                	addi	sp,sp,-80
    80007db0:	f82a                	sd	a0,48(sp)
    80007db2:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    80007db4:	e0ae                	sd	a1,64(sp)
    80007db6:	ec2a                	sd	a0,24(sp)
    80007db8:	e82e                	sd	a1,16(sp)
    80007dba:	a009                	j	80007dbc <_ZN4core3fmt10ArgumentV13new17h11722b493b1ededaE+0xe>
    80007dbc:	6562                	ld	a0,24(sp)
    80007dbe:	e4aa                	sd	a0,72(sp)
    80007dc0:	e42a                	sd	a0,8(sp)
    80007dc2:	a009                	j	80007dc4 <_ZN4core3fmt10ArgumentV13new17h11722b493b1ededaE+0x16>
    80007dc4:	6522                	ld	a0,8(sp)
    80007dc6:	f02a                	sd	a0,32(sp)
    80007dc8:	65c2                	ld	a1,16(sp)
    80007dca:	f42e                	sd	a1,40(sp)
    }
    80007dcc:	6161                	addi	sp,sp,80
    80007dce:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h7abf13edf5284605E:

0000000080007dd0 <_ZN4core3fmt10ArgumentV13new17h7abf13edf5284605E>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    80007dd0:	715d                	addi	sp,sp,-80
    80007dd2:	f82a                	sd	a0,48(sp)
    80007dd4:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    80007dd6:	e0ae                	sd	a1,64(sp)
    80007dd8:	ec2a                	sd	a0,24(sp)
    80007dda:	e82e                	sd	a1,16(sp)
    80007ddc:	a009                	j	80007dde <_ZN4core3fmt10ArgumentV13new17h7abf13edf5284605E+0xe>
    80007dde:	6562                	ld	a0,24(sp)
    80007de0:	e4aa                	sd	a0,72(sp)
    80007de2:	e42a                	sd	a0,8(sp)
    80007de4:	a009                	j	80007de6 <_ZN4core3fmt10ArgumentV13new17h7abf13edf5284605E+0x16>
    80007de6:	6522                	ld	a0,8(sp)
    80007de8:	f02a                	sd	a0,32(sp)
    80007dea:	65c2                	ld	a1,16(sp)
    80007dec:	f42e                	sd	a1,40(sp)
    }
    80007dee:	6161                	addi	sp,sp,80
    80007df0:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h8309c5c5260def1dE:

0000000080007df2 <_ZN4core3fmt10ArgumentV13new17h8309c5c5260def1dE>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    80007df2:	715d                	addi	sp,sp,-80
    80007df4:	f82a                	sd	a0,48(sp)
    80007df6:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    80007df8:	e0ae                	sd	a1,64(sp)
    80007dfa:	ec2a                	sd	a0,24(sp)
    80007dfc:	e82e                	sd	a1,16(sp)
    80007dfe:	a009                	j	80007e00 <_ZN4core3fmt10ArgumentV13new17h8309c5c5260def1dE+0xe>
    80007e00:	6562                	ld	a0,24(sp)
    80007e02:	e4aa                	sd	a0,72(sp)
    80007e04:	e42a                	sd	a0,8(sp)
    80007e06:	a009                	j	80007e08 <_ZN4core3fmt10ArgumentV13new17h8309c5c5260def1dE+0x16>
    80007e08:	6522                	ld	a0,8(sp)
    80007e0a:	f02a                	sd	a0,32(sp)
    80007e0c:	65c2                	ld	a1,16(sp)
    80007e0e:	f42e                	sd	a1,40(sp)
    }
    80007e10:	6161                	addi	sp,sp,80
    80007e12:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h8cb3450fede3818dE:

0000000080007e14 <_ZN4core3fmt10ArgumentV13new17h8cb3450fede3818dE>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    80007e14:	715d                	addi	sp,sp,-80
    80007e16:	f82a                	sd	a0,48(sp)
    80007e18:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    80007e1a:	e0ae                	sd	a1,64(sp)
    80007e1c:	ec2a                	sd	a0,24(sp)
    80007e1e:	e82e                	sd	a1,16(sp)
    80007e20:	a009                	j	80007e22 <_ZN4core3fmt10ArgumentV13new17h8cb3450fede3818dE+0xe>
    80007e22:	6562                	ld	a0,24(sp)
    80007e24:	e4aa                	sd	a0,72(sp)
    80007e26:	e42a                	sd	a0,8(sp)
    80007e28:	a009                	j	80007e2a <_ZN4core3fmt10ArgumentV13new17h8cb3450fede3818dE+0x16>
    80007e2a:	6522                	ld	a0,8(sp)
    80007e2c:	f02a                	sd	a0,32(sp)
    80007e2e:	65c2                	ld	a1,16(sp)
    80007e30:	f42e                	sd	a1,40(sp)
    }
    80007e32:	6161                	addi	sp,sp,80
    80007e34:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E:

0000000080007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    80007e36:	715d                	addi	sp,sp,-80
    80007e38:	f82a                	sd	a0,48(sp)
    80007e3a:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    80007e3c:	e0ae                	sd	a1,64(sp)
    80007e3e:	ec2a                	sd	a0,24(sp)
    80007e40:	e82e                	sd	a1,16(sp)
    80007e42:	a009                	j	80007e44 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E+0xe>
    80007e44:	6562                	ld	a0,24(sp)
    80007e46:	e4aa                	sd	a0,72(sp)
    80007e48:	e42a                	sd	a0,8(sp)
    80007e4a:	a009                	j	80007e4c <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E+0x16>
    80007e4c:	6522                	ld	a0,8(sp)
    80007e4e:	f02a                	sd	a0,32(sp)
    80007e50:	65c2                	ld	a1,16(sp)
    80007e52:	f42e                	sd	a1,40(sp)
    }
    80007e54:	6161                	addi	sp,sp,80
    80007e56:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17hb87ed6827629affbE:

0000000080007e58 <_ZN4core3fmt10ArgumentV13new17hb87ed6827629affbE>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    80007e58:	715d                	addi	sp,sp,-80
    80007e5a:	f82a                	sd	a0,48(sp)
    80007e5c:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    80007e5e:	e0ae                	sd	a1,64(sp)
    80007e60:	ec2a                	sd	a0,24(sp)
    80007e62:	e82e                	sd	a1,16(sp)
    80007e64:	a009                	j	80007e66 <_ZN4core3fmt10ArgumentV13new17hb87ed6827629affbE+0xe>
    80007e66:	6562                	ld	a0,24(sp)
    80007e68:	e4aa                	sd	a0,72(sp)
    80007e6a:	e42a                	sd	a0,8(sp)
    80007e6c:	a009                	j	80007e6e <_ZN4core3fmt10ArgumentV13new17hb87ed6827629affbE+0x16>
    80007e6e:	6522                	ld	a0,8(sp)
    80007e70:	f02a                	sd	a0,32(sp)
    80007e72:	65c2                	ld	a1,16(sp)
    80007e74:	f42e                	sd	a1,40(sp)
    }
    80007e76:	6161                	addi	sp,sp,80
    80007e78:	8082                	ret

Disassembly of section .text._ZN6kernel2fs10file_table9FileTable9get_table17hd7b6fef31903ec50E:

0000000080007e7a <_ZN6kernel2fs10file_table9FileTable9get_table17hd7b6fef31903ec50E>:
            lock: Spinlock::new((), "filetable"),
            table: UnsafeCell::new(array![_ => VFile::init();NFILE])
        }
    }

    pub fn get_table(&self) -> &mut [VFile;NFILE]{
    80007e7a:	7179                	addi	sp,sp,-48
    80007e7c:	f406                	sd	ra,40(sp)
    80007e7e:	f02a                	sd	a0,32(sp)
        unsafe{
            self.table.get().as_mut().unwrap()
    80007e80:	02050513          	addi	a0,a0,32
    80007e84:	0000f097          	auipc	ra,0xf
    80007e88:	b0c080e7          	jalr	-1268(ra) # 80016990 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h9e5f3f7327874a42E>
    80007e8c:	ec2a                	sd	a0,24(sp)
    80007e8e:	a009                	j	80007e90 <_ZN6kernel2fs10file_table9FileTable9get_table17hd7b6fef31903ec50E+0x16>
    80007e90:	6562                	ld	a0,24(sp)
    80007e92:	00014097          	auipc	ra,0x14
    80007e96:	7f2080e7          	jalr	2034(ra) # 8001c684 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E>
    80007e9a:	e82a                	sd	a0,16(sp)
    80007e9c:	a009                	j	80007e9e <.LBB0_4>

0000000080007e9e <.LBB0_4>:
    80007e9e:	0001d597          	auipc	a1,0x1d
    80007ea2:	83a58593          	addi	a1,a1,-1990 # 800246d8 <.L__unnamed_1>
    80007ea6:	6542                	ld	a0,16(sp)
    80007ea8:	00011097          	auipc	ra,0x11
    80007eac:	d2c080e7          	jalr	-724(ra) # 80018bd4 <_ZN4core6option15Option$LT$T$GT$6unwrap17h5333c331f0942639E>
    80007eb0:	e42a                	sd	a0,8(sp)
    80007eb2:	a009                	j	80007eb4 <.LBB0_4+0x16>
        }
    }
    80007eb4:	6522                	ld	a0,8(sp)
    80007eb6:	70a2                	ld	ra,40(sp)
    80007eb8:	6145                	addi	sp,sp,48
    80007eba:	8082                	ret

Disassembly of section .text._ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E:

0000000080007ebc <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E>:

    /// Allocate a file structure
    pub fn allocate(&self) -> Option<&mut VFile> {
    80007ebc:	7115                	addi	sp,sp,-224
    80007ebe:	ed86                	sd	ra,216(sp)
    80007ec0:	ed2a                	sd	a0,152(sp)
        let guard = self.lock.acquire();
    80007ec2:	f82a                	sd	a0,48(sp)
    80007ec4:	ffffa097          	auipc	ra,0xffffa
    80007ec8:	596080e7          	jalr	1430(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    80007ecc:	85aa                	mv	a1,a0
    80007ece:	f12a                	sd	a0,160(sp)
    80007ed0:	f42e                	sd	a1,40(sp)
    80007ed2:	a009                	j	80007ed4 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x18>
        for (index, f) in self.get_table().iter_mut().enumerate() {
    80007ed4:	7542                	ld	a0,48(sp)
    80007ed6:	00000097          	auipc	ra,0x0
    80007eda:	fa4080e7          	jalr	-92(ra) # 80007e7a <_ZN6kernel2fs10file_table9FileTable9get_table17hd7b6fef31903ec50E>
    80007ede:	f02a                	sd	a0,32(sp)
    80007ee0:	a009                	j	80007ee2 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x26>
    80007ee2:	06400593          	li	a1,100
    80007ee6:	7502                	ld	a0,32(sp)
    80007ee8:	00015097          	auipc	ra,0x15
    80007eec:	84e080e7          	jalr	-1970(ra) # 8001c736 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17heb568913a42125a3E>
    80007ef0:	ec2a                	sd	a0,24(sp)
    80007ef2:	e82e                	sd	a1,16(sp)
    80007ef4:	a009                	j	80007ef6 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x3a>
    80007ef6:	08a8                	addi	a0,sp,88
    80007ef8:	65e2                	ld	a1,24(sp)
    80007efa:	6642                	ld	a2,16(sp)
    80007efc:	0000b097          	auipc	ra,0xb
    80007f00:	e88080e7          	jalr	-376(ra) # 80012d84 <_ZN4core4iter6traits8iterator8Iterator9enumerate17hebcc1fc7a32476d8E>
    80007f04:	a009                	j	80007f06 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x4a>
    80007f06:	0088                	addi	a0,sp,64
    80007f08:	08ac                	addi	a1,sp,88
    80007f0a:	0000e097          	auipc	ra,0xe
    80007f0e:	29c080e7          	jalr	668(ra) # 800161a6 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h71e328a14c9107ffE>
    80007f12:	a009                	j	80007f14 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x58>
    80007f14:	6546                	ld	a0,80(sp)
    80007f16:	e12a                	sd	a0,128(sp)
    80007f18:	6526                	ld	a0,72(sp)
    80007f1a:	fcaa                	sd	a0,120(sp)
    80007f1c:	6506                	ld	a0,64(sp)
    80007f1e:	f8aa                	sd	a0,112(sp)
    80007f20:	a009                	j	80007f22 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x66>
    80007f22:	1888                	addi	a0,sp,112
    80007f24:	0000e097          	auipc	ra,0xe
    80007f28:	110080e7          	jalr	272(ra) # 80016034 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E>
    80007f2c:	e52a                	sd	a0,136(sp)
    80007f2e:	e92e                	sd	a1,144(sp)
    80007f30:	a009                	j	80007f32 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x76>
    80007f32:	654a                	ld	a0,144(sp)
    80007f34:	00a035b3          	snez	a1,a0
    80007f38:	4601                	li	a2,0
    80007f3a:	00c50463          	beq	a0,a2,80007f42 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x86>
    80007f3e:	a009                	j	80007f40 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x84>
    80007f40:	a801                	j	80007f50 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x94>
                f.refs = 1;
                drop(guard);
                return Some(f)
            }
        }
        drop(guard);
    80007f42:	7522                	ld	a0,40(sp)
    80007f44:	00006097          	auipc	ra,0x6
    80007f48:	9aa080e7          	jalr	-1622(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    80007f4c:	a081                	j	80007f8c <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0xd0>
        for (index, f) in self.get_table().iter_mut().enumerate() {
    80007f4e:	0000                	unimp
    80007f50:	652a                	ld	a0,136(sp)
    80007f52:	65ca                	ld	a1,144(sp)
    80007f54:	f52a                	sd	a0,168(sp)
    80007f56:	f92e                	sd	a1,176(sp)
    80007f58:	fd2a                	sd	a0,184(sp)
    80007f5a:	e1ae                	sd	a1,192(sp)
    80007f5c:	e5aa                	sd	a0,200(sp)
    80007f5e:	e9ae                	sd	a1,208(sp)
            if f.refs == 0 {
    80007f60:	6590                	ld	a2,8(a1)
    80007f62:	4681                	li	a3,0
    80007f64:	e42a                	sd	a0,8(sp)
    80007f66:	e02e                	sd	a1,0(sp)
    80007f68:	00d61e63          	bne	a2,a3,80007f84 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0xc8>
    80007f6c:	a009                	j	80007f6e <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0xb2>
                f.index = index;
    80007f6e:	6522                	ld	a0,8(sp)
    80007f70:	6582                	ld	a1,0(sp)
    80007f72:	e188                	sd	a0,0(a1)
    80007f74:	4605                	li	a2,1
                f.refs = 1;
    80007f76:	e590                	sd	a2,8(a1)
                drop(guard);
    80007f78:	7522                	ld	a0,40(sp)
    80007f7a:	00006097          	auipc	ra,0x6
    80007f7e:	974080e7          	jalr	-1676(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    80007f82:	a011                	j	80007f86 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0xca>
        for (index, f) in self.get_table().iter_mut().enumerate() {
    80007f84:	bf79                	j	80007f22 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0x66>
                return Some(f)
    80007f86:	6502                	ld	a0,0(sp)
    80007f88:	fc2a                	sd	a0,56(sp)
        None
    }
    80007f8a:	a021                	j	80007f92 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0xd6>
    80007f8c:	4501                	li	a0,0
        None
    80007f8e:	fc2a                	sd	a0,56(sp)
    }
    80007f90:	a009                	j	80007f92 <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E+0xd6>
    80007f92:	7562                	ld	a0,56(sp)
    80007f94:	60ee                	ld	ra,216(sp)
    80007f96:	612d                	addi	sp,sp,224
    80007f98:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE:

0000000080007f9a <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE>:
}

/// Returns the previous value (like __sync_fetch_and_add).
#[inline]
#[cfg(target_has_atomic = "8")]
unsafe fn atomic_add<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
    80007f9a:	7139                	addi	sp,sp,-64
    80007f9c:	86b2                	mv	a3,a2
    80007f9e:	02c103a3          	sb	a2,39(sp)
    80007fa2:	f82a                	sd	a0,48(sp)
    80007fa4:	fc2e                	sd	a1,56(sp)
    // SAFETY: the caller must uphold the safety contract for `atomic_add`.
    unsafe {
        match order {
            Acquire => intrinsics::atomic_xadd_acq(dst, val),
    80007fa6:	0ff67613          	zext.b	a2,a2
    80007faa:	4701                	li	a4,0
    80007fac:	ec2e                	sd	a1,24(sp)
    80007fae:	e82a                	sd	a0,16(sp)
    80007fb0:	e432                	sd	a2,8(sp)
    80007fb2:	04e60e63          	beq	a2,a4,8000800e <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x74>
    80007fb6:	a009                	j	80007fb8 <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x1e>
    80007fb8:	4505                	li	a0,1
    80007fba:	65a2                	ld	a1,8(sp)
    80007fbc:	02a58b63          	beq	a1,a0,80007ff2 <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x58>
    80007fc0:	a009                	j	80007fc2 <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x28>
    80007fc2:	4509                	li	a0,2
    80007fc4:	65a2                	ld	a1,8(sp)
    80007fc6:	00a58f63          	beq	a1,a0,80007fe4 <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x4a>
    80007fca:	a009                	j	80007fcc <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x32>
    80007fcc:	450d                	li	a0,3
    80007fce:	65a2                	ld	a1,8(sp)
    80007fd0:	02a58863          	beq	a1,a0,80008000 <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x66>
    80007fd4:	a009                	j	80007fd6 <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x3c>
            Release => intrinsics::atomic_xadd_rel(dst, val),
            AcqRel => intrinsics::atomic_xadd_acqrel(dst, val),
            Relaxed => intrinsics::atomic_xadd_relaxed(dst, val),
            SeqCst => intrinsics::atomic_xadd(dst, val),
    80007fd6:	6542                	ld	a0,16(sp)
    80007fd8:	65e2                	ld	a1,24(sp)
    80007fda:	06b5362f          	amoadd.d.aqrl	a2,a1,(a0)
    80007fde:	f432                	sd	a2,40(sp)
    80007fe0:	a835                	j	8000801c <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x82>
        match order {
    80007fe2:	0000                	unimp
            Acquire => intrinsics::atomic_xadd_acq(dst, val),
    80007fe4:	6542                	ld	a0,16(sp)
    80007fe6:	65e2                	ld	a1,24(sp)
    80007fe8:	04b5362f          	amoadd.d.aq	a2,a1,(a0)
    80007fec:	f432                	sd	a2,40(sp)
    80007fee:	a009                	j	80007ff0 <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x56>
        match order {
    80007ff0:	a03d                	j	8000801e <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x84>
            Release => intrinsics::atomic_xadd_rel(dst, val),
    80007ff2:	6542                	ld	a0,16(sp)
    80007ff4:	65e2                	ld	a1,24(sp)
    80007ff6:	02b5362f          	amoadd.d.rl	a2,a1,(a0)
    80007ffa:	f432                	sd	a2,40(sp)
    80007ffc:	a009                	j	80007ffe <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x64>
        match order {
    80007ffe:	a005                	j	8000801e <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x84>
            AcqRel => intrinsics::atomic_xadd_acqrel(dst, val),
    80008000:	6542                	ld	a0,16(sp)
    80008002:	65e2                	ld	a1,24(sp)
    80008004:	06b5362f          	amoadd.d.aqrl	a2,a1,(a0)
    80008008:	f432                	sd	a2,40(sp)
    8000800a:	a009                	j	8000800c <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x72>
        match order {
    8000800c:	a809                	j	8000801e <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x84>
            Relaxed => intrinsics::atomic_xadd_relaxed(dst, val),
    8000800e:	6542                	ld	a0,16(sp)
    80008010:	65e2                	ld	a1,24(sp)
    80008012:	00b5362f          	amoadd.d	a2,a1,(a0)
    80008016:	f432                	sd	a2,40(sp)
    80008018:	a009                	j	8000801a <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x80>
        match order {
    8000801a:	a011                	j	8000801e <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x84>
    8000801c:	a009                	j	8000801e <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE+0x84>
        }
    }
}
    8000801e:	7522                	ld	a0,40(sp)
    80008020:	6121                	addi	sp,sp,64
    80008022:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE:

0000000080008024 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE>:

/// Returns the previous value (like __sync_fetch_and_sub).
#[inline]
#[cfg(target_has_atomic = "8")]
unsafe fn atomic_sub<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
    80008024:	7139                	addi	sp,sp,-64
    80008026:	86b2                	mv	a3,a2
    80008028:	02c103a3          	sb	a2,39(sp)
    8000802c:	f82a                	sd	a0,48(sp)
    8000802e:	fc2e                	sd	a1,56(sp)
    // SAFETY: the caller must uphold the safety contract for `atomic_sub`.
    unsafe {
        match order {
            Acquire => intrinsics::atomic_xsub_acq(dst, val),
    80008030:	0ff67613          	zext.b	a2,a2
    80008034:	4701                	li	a4,0
    80008036:	ec2e                	sd	a1,24(sp)
    80008038:	e82a                	sd	a0,16(sp)
    8000803a:	e432                	sd	a2,8(sp)
    8000803c:	06e60663          	beq	a2,a4,800080a8 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x84>
    80008040:	a009                	j	80008042 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x1e>
    80008042:	4505                	li	a0,1
    80008044:	65a2                	ld	a1,8(sp)
    80008046:	02a58f63          	beq	a1,a0,80008084 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x60>
    8000804a:	a009                	j	8000804c <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x28>
    8000804c:	4509                	li	a0,2
    8000804e:	65a2                	ld	a1,8(sp)
    80008050:	02a58163          	beq	a1,a0,80008072 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x4e>
    80008054:	a009                	j	80008056 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x32>
    80008056:	450d                	li	a0,3
    80008058:	65a2                	ld	a1,8(sp)
    8000805a:	02a58e63          	beq	a1,a0,80008096 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x72>
    8000805e:	a009                	j	80008060 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x3c>
            Release => intrinsics::atomic_xsub_rel(dst, val),
            AcqRel => intrinsics::atomic_xsub_acqrel(dst, val),
            Relaxed => intrinsics::atomic_xsub_relaxed(dst, val),
            SeqCst => intrinsics::atomic_xsub(dst, val),
    80008060:	6562                	ld	a0,24(sp)
    80008062:	40a005b3          	neg	a1,a0
    80008066:	6642                	ld	a2,16(sp)
    80008068:	06b635af          	amoadd.d.aqrl	a1,a1,(a2)
    8000806c:	f42e                	sd	a1,40(sp)
    8000806e:	a0b1                	j	800080ba <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x96>
        match order {
    80008070:	0000                	unimp
            Acquire => intrinsics::atomic_xsub_acq(dst, val),
    80008072:	6562                	ld	a0,24(sp)
    80008074:	40a005b3          	neg	a1,a0
    80008078:	6642                	ld	a2,16(sp)
    8000807a:	04b635af          	amoadd.d.aq	a1,a1,(a2)
    8000807e:	f42e                	sd	a1,40(sp)
    80008080:	a009                	j	80008082 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x5e>
        match order {
    80008082:	a82d                	j	800080bc <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x98>
            Release => intrinsics::atomic_xsub_rel(dst, val),
    80008084:	6562                	ld	a0,24(sp)
    80008086:	40a005b3          	neg	a1,a0
    8000808a:	6642                	ld	a2,16(sp)
    8000808c:	02b635af          	amoadd.d.rl	a1,a1,(a2)
    80008090:	f42e                	sd	a1,40(sp)
    80008092:	a009                	j	80008094 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x70>
        match order {
    80008094:	a025                	j	800080bc <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x98>
            AcqRel => intrinsics::atomic_xsub_acqrel(dst, val),
    80008096:	6562                	ld	a0,24(sp)
    80008098:	40a005b3          	neg	a1,a0
    8000809c:	6642                	ld	a2,16(sp)
    8000809e:	06b635af          	amoadd.d.aqrl	a1,a1,(a2)
    800080a2:	f42e                	sd	a1,40(sp)
    800080a4:	a009                	j	800080a6 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x82>
        match order {
    800080a6:	a819                	j	800080bc <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x98>
            Relaxed => intrinsics::atomic_xsub_relaxed(dst, val),
    800080a8:	6562                	ld	a0,24(sp)
    800080aa:	40a005b3          	neg	a1,a0
    800080ae:	6642                	ld	a2,16(sp)
    800080b0:	00b635af          	amoadd.d	a1,a1,(a2)
    800080b4:	f42e                	sd	a1,40(sp)
    800080b6:	a009                	j	800080b8 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x94>
        match order {
    800080b8:	a011                	j	800080bc <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x98>
    800080ba:	a009                	j	800080bc <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE+0x98>
        }
    }
}
    800080bc:	7522                	ld	a0,40(sp)
    800080be:	6121                	addi	sp,sp,64
    800080c0:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E:

00000000800080c2 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E>:
unsafe fn atomic_swap<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {
    800080c2:	7179                	addi	sp,sp,-48
    800080c4:	86b2                	mv	a3,a2
    800080c6:	872e                	mv	a4,a1
    800080c8:	00c10f23          	sb	a2,30(sp)
    800080cc:	f02a                	sd	a0,32(sp)
    800080ce:	02b107a3          	sb	a1,47(sp)
            Acquire => intrinsics::atomic_xchg_acq(dst, val),
    800080d2:	0ff67593          	zext.b	a1,a2
    800080d6:	4601                	li	a2,0
    800080d8:	e82a                	sd	a0,16(sp)
    800080da:	e43a                	sd	a4,8(sp)
    800080dc:	e02e                	sd	a1,0(sp)
    800080de:	12c58a63          	beq	a1,a2,80008212 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x150>
    800080e2:	a009                	j	800080e4 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x22>
    800080e4:	4505                	li	a0,1
    800080e6:	6582                	ld	a1,0(sp)
    800080e8:	0aa58163          	beq	a1,a0,8000818a <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0xc8>
    800080ec:	a009                	j	800080ee <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x2c>
    800080ee:	4509                	li	a0,2
    800080f0:	6582                	ld	a1,0(sp)
    800080f2:	04a58a63          	beq	a1,a0,80008146 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x84>
    800080f6:	a009                	j	800080f8 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x36>
    800080f8:	450d                	li	a0,3
    800080fa:	6582                	ld	a1,0(sp)
    800080fc:	0ca58963          	beq	a1,a0,800081ce <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x10c>
    80008100:	a009                	j	80008102 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x40>
            SeqCst => intrinsics::atomic_xchg(dst, val),
    80008102:	6542                	ld	a0,16(sp)
    80008104:	ffc57593          	andi	a1,a0,-4
    80008108:	00351613          	slli	a2,a0,0x3
    8000810c:	8a61                	andi	a2,a2,24
    8000810e:	0ff00693          	li	a3,255
    80008112:	00c696bb          	sllw	a3,a3,a2
    80008116:	6722                	ld	a4,8(sp)
    80008118:	0ff77793          	zext.b	a5,a4
    8000811c:	00c797bb          	sllw	a5,a5,a2
    80008120:	1605a82f          	lr.w.aqrl	a6,(a1)
    80008124:	88be                	mv	a7,a5
    80008126:	011848b3          	xor	a7,a6,a7
    8000812a:	00d8f8b3          	and	a7,a7,a3
    8000812e:	011848b3          	xor	a7,a6,a7
    80008132:	1f15a8af          	sc.w.aqrl	a7,a7,(a1)
    80008136:	fe0895e3          	bnez	a7,80008120 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x5e>
    8000813a:	00c855bb          	srlw	a1,a6,a2
    8000813e:	00b10fa3          	sb	a1,31(sp)
    80008142:	aa11                	j	80008256 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x194>
        match order {
    80008144:	0000                	unimp
            Acquire => intrinsics::atomic_xchg_acq(dst, val),
    80008146:	6542                	ld	a0,16(sp)
    80008148:	ffc57593          	andi	a1,a0,-4
    8000814c:	00351613          	slli	a2,a0,0x3
    80008150:	8a61                	andi	a2,a2,24
    80008152:	0ff00693          	li	a3,255
    80008156:	00c696bb          	sllw	a3,a3,a2
    8000815a:	6722                	ld	a4,8(sp)
    8000815c:	0ff77793          	zext.b	a5,a4
    80008160:	00c797bb          	sllw	a5,a5,a2
    80008164:	1405a82f          	lr.w.aq	a6,(a1)
    80008168:	88be                	mv	a7,a5
    8000816a:	011848b3          	xor	a7,a6,a7
    8000816e:	00d8f8b3          	and	a7,a7,a3
    80008172:	011848b3          	xor	a7,a6,a7
    80008176:	1915a8af          	sc.w	a7,a7,(a1)
    8000817a:	fe0895e3          	bnez	a7,80008164 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0xa2>
    8000817e:	00c855bb          	srlw	a1,a6,a2
    80008182:	00b10fa3          	sb	a1,31(sp)
    80008186:	a009                	j	80008188 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0xc6>
        match order {
    80008188:	a8c1                	j	80008258 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x196>
            Release => intrinsics::atomic_xchg_rel(dst, val),
    8000818a:	6542                	ld	a0,16(sp)
    8000818c:	ffc57593          	andi	a1,a0,-4
    80008190:	00351613          	slli	a2,a0,0x3
    80008194:	8a61                	andi	a2,a2,24
    80008196:	0ff00693          	li	a3,255
    8000819a:	00c696bb          	sllw	a3,a3,a2
    8000819e:	6722                	ld	a4,8(sp)
    800081a0:	0ff77793          	zext.b	a5,a4
    800081a4:	00c797bb          	sllw	a5,a5,a2
    800081a8:	1005a82f          	lr.w	a6,(a1)
    800081ac:	88be                	mv	a7,a5
    800081ae:	011848b3          	xor	a7,a6,a7
    800081b2:	00d8f8b3          	and	a7,a7,a3
    800081b6:	011848b3          	xor	a7,a6,a7
    800081ba:	1b15a8af          	sc.w.rl	a7,a7,(a1)
    800081be:	fe0895e3          	bnez	a7,800081a8 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0xe6>
    800081c2:	00c855bb          	srlw	a1,a6,a2
    800081c6:	00b10fa3          	sb	a1,31(sp)
    800081ca:	a009                	j	800081cc <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x10a>
        match order {
    800081cc:	a071                	j	80008258 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x196>
            AcqRel => intrinsics::atomic_xchg_acqrel(dst, val),
    800081ce:	6542                	ld	a0,16(sp)
    800081d0:	ffc57593          	andi	a1,a0,-4
    800081d4:	00351613          	slli	a2,a0,0x3
    800081d8:	8a61                	andi	a2,a2,24
    800081da:	0ff00693          	li	a3,255
    800081de:	00c696bb          	sllw	a3,a3,a2
    800081e2:	6722                	ld	a4,8(sp)
    800081e4:	0ff77793          	zext.b	a5,a4
    800081e8:	00c797bb          	sllw	a5,a5,a2
    800081ec:	1405a82f          	lr.w.aq	a6,(a1)
    800081f0:	88be                	mv	a7,a5
    800081f2:	011848b3          	xor	a7,a6,a7
    800081f6:	00d8f8b3          	and	a7,a7,a3
    800081fa:	011848b3          	xor	a7,a6,a7
    800081fe:	1b15a8af          	sc.w.rl	a7,a7,(a1)
    80008202:	fe0895e3          	bnez	a7,800081ec <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x12a>
    80008206:	00c855bb          	srlw	a1,a6,a2
    8000820a:	00b10fa3          	sb	a1,31(sp)
    8000820e:	a009                	j	80008210 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x14e>
        match order {
    80008210:	a0a1                	j	80008258 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x196>
            Relaxed => intrinsics::atomic_xchg_relaxed(dst, val),
    80008212:	6542                	ld	a0,16(sp)
    80008214:	ffc57593          	andi	a1,a0,-4
    80008218:	00351613          	slli	a2,a0,0x3
    8000821c:	8a61                	andi	a2,a2,24
    8000821e:	0ff00693          	li	a3,255
    80008222:	00c696bb          	sllw	a3,a3,a2
    80008226:	6722                	ld	a4,8(sp)
    80008228:	0ff77793          	zext.b	a5,a4
    8000822c:	00c797bb          	sllw	a5,a5,a2
    80008230:	1005a82f          	lr.w	a6,(a1)
    80008234:	88be                	mv	a7,a5
    80008236:	011848b3          	xor	a7,a6,a7
    8000823a:	00d8f8b3          	and	a7,a7,a3
    8000823e:	011848b3          	xor	a7,a6,a7
    80008242:	1915a8af          	sc.w	a7,a7,(a1)
    80008246:	fe0895e3          	bnez	a7,80008230 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x16e>
    8000824a:	00c855bb          	srlw	a1,a6,a2
    8000824e:	00b10fa3          	sb	a1,31(sp)
    80008252:	a009                	j	80008254 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x192>
        match order {
    80008254:	a011                	j	80008258 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x196>
    80008256:	a009                	j	80008258 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E+0x196>
}
    80008258:	01f10503          	lb	a0,31(sp)
    8000825c:	6145                	addi	sp,sp,48
    8000825e:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic12atomic_store17he16a66a06b969f6dE:

0000000080008260 <_ZN4core4sync6atomic12atomic_store17he16a66a06b969f6dE>:
unsafe fn atomic_store<T: Copy>(dst: *mut T, val: T, order: Ordering) {
    80008260:	7139                	addi	sp,sp,-64
    80008262:	86b2                	mv	a3,a2
    80008264:	872e                	mv	a4,a1
    80008266:	02c103a3          	sb	a2,39(sp)
    8000826a:	f82a                	sd	a0,48(sp)
    8000826c:	02b10fa3          	sb	a1,63(sp)
            Release => intrinsics::atomic_store_rel(dst, val),
    80008270:	0ff67593          	zext.b	a1,a2
    80008274:	4601                	li	a2,0
    80008276:	ec2a                	sd	a0,24(sp)
    80008278:	e83a                	sd	a4,16(sp)
    8000827a:	e42e                	sd	a1,8(sp)
    8000827c:	04c58b63          	beq	a1,a2,800082d2 <.LBB3_16+0x28>
    80008280:	a009                	j	80008282 <_ZN4core4sync6atomic12atomic_store17he16a66a06b969f6dE+0x22>
    80008282:	4505                	li	a0,1
    80008284:	65a2                	ld	a1,8(sp)
    80008286:	02a58e63          	beq	a1,a0,800082c2 <.LBB3_16+0x18>
    8000828a:	a009                	j	8000828c <_ZN4core4sync6atomic12atomic_store17he16a66a06b969f6dE+0x2c>
    8000828c:	4509                	li	a0,2
    8000828e:	65a2                	ld	a1,8(sp)
    80008290:	04a58f63          	beq	a1,a0,800082ee <.LBB3_17>
    80008294:	a009                	j	80008296 <_ZN4core4sync6atomic12atomic_store17he16a66a06b969f6dE+0x36>
    80008296:	450d                	li	a0,3
    80008298:	65a2                	ld	a1,8(sp)
    8000829a:	00a58463          	beq	a1,a0,800082a2 <.LBB3_15>
    8000829e:	a009                	j	800082a0 <_ZN4core4sync6atomic12atomic_store17he16a66a06b969f6dE+0x40>
    800082a0:	a83d                	j	800082de <.LBB3_16+0x34>

00000000800082a2 <.LBB3_15>:
            AcqRel => panic!("there is no such thing as an acquire/release store"),
    800082a2:	0001c517          	auipc	a0,0x1c
    800082a6:	44e50513          	addi	a0,a0,1102 # 800246f0 <.L__unnamed_1>

00000000800082aa <.LBB3_16>:
    800082aa:	0001c617          	auipc	a2,0x1c
    800082ae:	4f660613          	addi	a2,a2,1270 # 800247a0 <.L__unnamed_2>
    800082b2:	03200593          	li	a1,50
    800082b6:	00019097          	auipc	ra,0x19
    800082ba:	a14080e7          	jalr	-1516(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800082be:	0000                	unimp
        match order {
    800082c0:	0000                	unimp
            Release => intrinsics::atomic_store_rel(dst, val),
    800082c2:	0310000f          	fence	rw,w
    800082c6:	6542                	ld	a0,16(sp)
    800082c8:	65e2                	ld	a1,24(sp)
    800082ca:	00a58023          	sb	a0,0(a1)
    800082ce:	a009                	j	800082d0 <.LBB3_16+0x26>
        match order {
    800082d0:	a835                	j	8000830c <.LBB3_18+0x16>
            Relaxed => intrinsics::atomic_store_relaxed(dst, val),
    800082d2:	6542                	ld	a0,16(sp)
    800082d4:	65e2                	ld	a1,24(sp)
    800082d6:	00a58023          	sb	a0,0(a1)
    800082da:	a009                	j	800082dc <.LBB3_16+0x32>
        match order {
    800082dc:	a805                	j	8000830c <.LBB3_18+0x16>
            SeqCst => intrinsics::atomic_store(dst, val),
    800082de:	0310000f          	fence	rw,w
    800082e2:	6542                	ld	a0,16(sp)
    800082e4:	65e2                	ld	a1,24(sp)
    800082e6:	00a58023          	sb	a0,0(a1)
    800082ea:	a009                	j	800082ec <.LBB3_16+0x42>
        match order {
    800082ec:	a005                	j	8000830c <.LBB3_18+0x16>

00000000800082ee <.LBB3_17>:
            Acquire => panic!("there is no such thing as an acquire store"),
    800082ee:	0001c517          	auipc	a0,0x1c
    800082f2:	4ca50513          	addi	a0,a0,1226 # 800247b8 <.L__unnamed_3>

00000000800082f6 <.LBB3_18>:
    800082f6:	0001c617          	auipc	a2,0x1c
    800082fa:	4f260613          	addi	a2,a2,1266 # 800247e8 <.L__unnamed_4>
    800082fe:	02a00593          	li	a1,42
    80008302:	00019097          	auipc	ra,0x19
    80008306:	9c8080e7          	jalr	-1592(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000830a:	0000                	unimp
}
    8000830c:	6121                	addi	sp,sp,64
    8000830e:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart9uart_init17h6e37cb9c514b3f69E:

0000000080008310 <_ZN6kernel7console4uart9uart_init17h6e37cb9c514b3f69E>:

const UART_BUF_SIZE:usize = 32;
pub static UART: Spinlock<Uart> = Spinlock::new(Uart::new(), "uart");

/// init uart
pub unsafe fn uart_init() {
    80008310:	1101                	addi	sp,sp,-32
    let mut uart = UART.acquire();
    80008312:	ec06                	sd	ra,24(sp)

0000000080008314 <.LBB0_5>:
    80008314:	0002e517          	auipc	a0,0x2e
    80008318:	b2450513          	addi	a0,a0,-1244 # 80035e38 <_ZN6kernel7console4uart4UART17hc32d6c0da573df73E>
    8000831c:	ffffa097          	auipc	ra,0xffffa
    80008320:	4d6080e7          	jalr	1238(ra) # 800027f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E>
    80008324:	e82a                	sd	a0,16(sp)
    80008326:	a009                	j	80008328 <.LBB0_5+0x14>
    80008328:	0808                	addi	a0,sp,16
    uart.init();
    8000832a:	ffffb097          	auipc	ra,0xffffb
    8000832e:	632080e7          	jalr	1586(ra) # 8000395c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E>
    80008332:	e42a                	sd	a0,8(sp)
    80008334:	a009                	j	80008336 <.LBB0_5+0x22>
    80008336:	6522                	ld	a0,8(sp)
    80008338:	00000097          	auipc	ra,0x0
    8000833c:	01c080e7          	jalr	28(ra) # 80008354 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E>
    80008340:	a009                	j	80008342 <.LBB0_5+0x2e>
    drop(uart);
    80008342:	6542                	ld	a0,16(sp)
    80008344:	00005097          	auipc	ra,0x5
    80008348:	6ae080e7          	jalr	1710(ra) # 8000d9f2 <_ZN4core3mem4drop17hc7855bb71645f11bE>
    8000834c:	a009                	j	8000834e <.LBB0_5+0x3a>
}
    8000834e:	60e2                	ld	ra,24(sp)
    80008350:	6105                	addi	sp,sp,32
    80008352:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E:

0000000080008354 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E>:
            read_index: Wrapping(0)
        }
    } 

    /// init uart device
    pub fn init(&mut self) {
    80008354:	1141                	addi	sp,sp,-16
    80008356:	e406                	sd	ra,8(sp)
    80008358:	e02a                	sd	a0,0(sp)
    8000835a:	10000537          	lui	a0,0x10000
    8000835e:	2505                	addiw	a0,a0,1
    80008360:	4581                	li	a1,0
        // disable interrupts
        write_reg(UART_BASE_ADDR + IER, 0x00);
    80008362:	00000097          	auipc	ra,0x0
    80008366:	244080e7          	jalr	580(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    8000836a:	a009                	j	8000836c <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E+0x18>
    8000836c:	10000537          	lui	a0,0x10000
    80008370:	250d                	addiw	a0,a0,3
    80008372:	08000593          	li	a1,128

        // special mode to set baud rate. 
        write_reg(UART_BASE_ADDR + LCR, LCR_BAUD_LATCH as u8);
    80008376:	00000097          	auipc	ra,0x0
    8000837a:	230080e7          	jalr	560(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    8000837e:	a009                	j	80008380 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E+0x2c>
    80008380:	10000537          	lui	a0,0x10000
    80008384:	458d                	li	a1,3

        // LSB for baud rate of 38.4K
        write_reg(UART_BASE_ADDR, 0x03);
    80008386:	00000097          	auipc	ra,0x0
    8000838a:	220080e7          	jalr	544(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    8000838e:	a009                	j	80008390 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E+0x3c>
    80008390:	10000537          	lui	a0,0x10000
    80008394:	2505                	addiw	a0,a0,1
    80008396:	4581                	li	a1,0

        // MSB for baud rate of 38.4k 
        write_reg(UART_BASE_ADDR + 1, 0x00);
    80008398:	00000097          	auipc	ra,0x0
    8000839c:	20e080e7          	jalr	526(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    800083a0:	a009                	j	800083a2 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E+0x4e>
    800083a2:	10000537          	lui	a0,0x10000
    800083a6:	250d                	addiw	a0,a0,3
    800083a8:	458d                	li	a1,3

        // leave set-baud mode, 
        // and set word length to 8 bits, no parity. 
        write_reg(UART_BASE_ADDR + LCR, LCR_EIGHT_BITS as u8);
    800083aa:	00000097          	auipc	ra,0x0
    800083ae:	1fc080e7          	jalr	508(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    800083b2:	a009                	j	800083b4 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E+0x60>
    800083b4:	10000537          	lui	a0,0x10000
    800083b8:	2509                	addiw	a0,a0,2
    800083ba:	459d                	li	a1,7

        // reset and enable FIFOs. 
        write_reg(UART_BASE_ADDR + FCR, FCR_FIFO_ENABLE as u8 | FCR_FIFO_CLEAR as u8);
    800083bc:	00000097          	auipc	ra,0x0
    800083c0:	1ea080e7          	jalr	490(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    800083c4:	a009                	j	800083c6 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E+0x72>
    800083c6:	10000537          	lui	a0,0x10000
    800083ca:	2505                	addiw	a0,a0,1
    800083cc:	458d                	li	a1,3

        // enable transmit and receive interrupts. 
        write_reg(UART_BASE_ADDR + IER, IER_TX_ENABLE as u8 | IER_RX_ENABLE as u8);
    800083ce:	00000097          	auipc	ra,0x0
    800083d2:	1d8080e7          	jalr	472(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    800083d6:	a009                	j	800083d8 <_ZN6kernel7console4uart4Uart4init17h6b71e053c2218440E+0x84>
    }
    800083d8:	60a2                	ld	ra,8(sp)
    800083da:	0141                	addi	sp,sp,16
    800083dc:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E:

00000000800083de <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E>:
    /// UART to start sending if it isn't already. 
    /// blocks if the output buffer is full. 
    /// because it may block, it can't be called from interrupts;
    /// it's only suitable for use
    /// by write()
    pub fn put(&mut self, c: u8) {
    800083de:	7139                	addi	sp,sp,-64
    800083e0:	fc06                	sd	ra,56(sp)
    800083e2:	862e                	mv	a2,a1
    800083e4:	f02a                	sd	a0,32(sp)
    800083e6:	02b107a3          	sb	a1,47(sp)
    800083ea:	10000537          	lui	a0,0x10000
        let ptr = UART_BASE_ADDR as *mut u8;
    800083ee:	f82a                	sd	a0,48(sp)
        loop {
    800083f0:	ec32                	sd	a2,24(sp)
    800083f2:	a009                	j	800083f4 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x16>
    800083f4:	10000537          	lui	a0,0x10000
    800083f8:	4595                	li	a1,5
            // write until previous data is flushed
            if unsafe{ ptr.add(5).read_volatile() } & (1 << 5) != 0 {
    800083fa:	00018097          	auipc	ra,0x18
    800083fe:	2f6080e7          	jalr	758(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    80008402:	e82a                	sd	a0,16(sp)
    80008404:	a009                	j	80008406 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x28>
    80008406:	6542                	ld	a0,16(sp)
    80008408:	00011097          	auipc	ra,0x11
    8000840c:	ef2080e7          	jalr	-270(ra) # 800192fa <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13read_volatile17hd63925ff966884cbE>
    80008410:	e42a                	sd	a0,8(sp)
    80008412:	a009                	j	80008414 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x36>
    80008414:	6522                	ld	a0,8(sp)
    80008416:	02057593          	andi	a1,a0,32
    8000841a:	4601                	li	a2,0
    8000841c:	00c58c63          	beq	a1,a2,80008434 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x56>
    80008420:	a009                	j	80008422 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x44>
    80008422:	10000537          	lui	a0,0x10000
    80008426:	4581                	li	a1,0
                break;
            }
        }
        unsafe {
            // write data
            ptr.add(0).write_volatile(c);
    80008428:	00018097          	auipc	ra,0x18
    8000842c:	2c8080e7          	jalr	712(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    80008430:	e02a                	sd	a0,0(sp)
    80008432:	a011                	j	80008436 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x58>
        loop {
    80008434:	b7c1                	j	800083f4 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x16>
            ptr.add(0).write_volatile(c);
    80008436:	6502                	ld	a0,0(sp)
    80008438:	65e2                	ld	a1,24(sp)
    8000843a:	00011097          	auipc	ra,0x11
    8000843e:	eda080e7          	jalr	-294(ra) # 80019314 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$14write_volatile17h3883c3cc56e2bf85E>
    80008442:	a009                	j	80008444 <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E+0x66>
        }
    }
    80008444:	70e2                	ld	ra,56(sp)
    80008446:	6121                	addi	sp,sp,64
    80008448:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE:

000000008000844a <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE>:
        }
    }


    /// Transmit the buffer content if UART device is idle. 
    fn transmit(&mut self) {
    8000844a:	711d                	addi	sp,sp,-96
    8000844c:	ec86                	sd	ra,88(sp)
    8000844e:	e0aa                	sd	a0,64(sp)
    80008450:	f42a                	sd	a0,40(sp)
    80008452:	a009                	j	80008454 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0xa>
        while self.write_index != self.read_index && idle() {
    80008454:	7522                	ld	a0,40(sp)
    80008456:	00850593          	addi	a1,a0,8 # 10000008 <.Lline_table_start0+0xffc7cc1>
    8000845a:	fffff097          	auipc	ra,0xfffff
    8000845e:	5c0080e7          	jalr	1472(ra) # 80007a1a <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h06a595a60ebf50d1E>
    80008462:	f02a                	sd	a0,32(sp)
    80008464:	a025                	j	8000848c <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x42>
    80008466:	4505                	li	a0,1
    80008468:	02a10ba3          	sb	a0,55(sp)
    8000846c:	a819                	j	80008482 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x38>
    8000846e:	4501                	li	a0,0
    80008470:	02a10ba3          	sb	a0,55(sp)
    80008474:	a039                	j	80008482 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x38>
    80008476:	00000097          	auipc	ra,0x0
    8000847a:	168080e7          	jalr	360(ra) # 800085de <_ZN6kernel7console4uart4idle17h6403661c01ed7338E>
    8000847e:	ec2a                	sd	a0,24(sp)
    80008480:	a809                	j	80008492 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x48>
    80008482:	03714503          	lbu	a0,55(sp)
    80008486:	8905                	andi	a0,a0,1
    80008488:	e919                	bnez	a0,8000849e <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x54>
    8000848a:	a039                	j	80008498 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x4e>
    8000848c:	7502                	ld	a0,32(sp)
    8000848e:	f565                	bnez	a0,80008476 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x2c>
    80008490:	bff9                	j	8000846e <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x24>
    80008492:	6562                	ld	a0,24(sp)
    80008494:	f969                	bnez	a0,80008466 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x1c>
    80008496:	bfe1                	j	8000846e <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x24>
            unsafe{
                PROC_MANAGER.wake_up(&self.read_index as *const Wrapping<_> as usize);
            }
            write_reg(UART_BASE_ADDR + THR, c);
        }
    }
    80008498:	60e6                	ld	ra,88(sp)
    8000849a:	6125                	addi	sp,sp,96
    8000849c:	8082                	ret
            let read_index = self.read_index.0 % UART_BUF_SIZE;
    8000849e:	7522                	ld	a0,40(sp)
    800084a0:	650c                	ld	a1,8(a0)
    800084a2:	89fd                	andi	a1,a1,31
    800084a4:	e4ae                	sd	a1,72(sp)
    800084a6:	467d                	li	a2,31
            let c = self.buf[read_index];
    800084a8:	e82e                	sd	a1,16(sp)
    800084aa:	04b66a63          	bltu	a2,a1,800084fe <.LBB3_16>
    800084ae:	a009                	j	800084b0 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x66>
    800084b0:	7522                	ld	a0,40(sp)
    800084b2:	65c2                	ld	a1,16(sp)
    800084b4:	00b50633          	add	a2,a0,a1
    800084b8:	01064603          	lbu	a2,16(a2)
    800084bc:	04c10ba3          	sb	a2,87(sp)
            self.read_index += Wrapping(1);
    800084c0:	0521                	addi	a0,a0,8
    800084c2:	4685                	li	a3,1
    800084c4:	fc36                	sd	a3,56(sp)
    800084c6:	85b6                	mv	a1,a3
    800084c8:	e432                	sd	a2,8(sp)
    800084ca:	ffffd097          	auipc	ra,0xffffd
    800084ce:	ee4080e7          	jalr	-284(ra) # 800053ae <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hcde6a2ec0c355ebdE>
    800084d2:	a009                	j	800084d4 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0x8a>
                PROC_MANAGER.wake_up(&self.read_index as *const Wrapping<_> as usize);
    800084d4:	7522                	ld	a0,40(sp)
    800084d6:	00850593          	addi	a1,a0,8

00000000800084da <.LBB3_15>:
    800084da:	00054517          	auipc	a0,0x54
    800084de:	a2650513          	addi	a0,a0,-1498 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    800084e2:	00014097          	auipc	ra,0x14
    800084e6:	7ba080e7          	jalr	1978(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    800084ea:	a009                	j	800084ec <.LBB3_15+0x12>
    800084ec:	10000537          	lui	a0,0x10000
            write_reg(UART_BASE_ADDR + THR, c);
    800084f0:	65a2                	ld	a1,8(sp)
    800084f2:	00000097          	auipc	ra,0x0
    800084f6:	0b4080e7          	jalr	180(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    800084fa:	a009                	j	800084fc <.LBB3_15+0x22>
        while self.write_index != self.read_index && idle() {
    800084fc:	bfa1                	j	80008454 <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE+0xa>

00000000800084fe <.LBB3_16>:
            let c = self.buf[read_index];
    800084fe:	0001c617          	auipc	a2,0x1c
    80008502:	34260613          	addi	a2,a2,834 # 80024840 <.L__unnamed_1>
    80008506:	02000593          	li	a1,32
    8000850a:	6542                	ld	a0,16(sp)
    8000850c:	00018097          	auipc	ra,0x18
    80008510:	7ea080e7          	jalr	2026(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E:

0000000080008516 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E>:

}

impl Write for Uart {
    fn write_str(&mut self, out: &str) -> Result<(), Error> {
    80008516:	7119                	addi	sp,sp,-128
    80008518:	fc86                	sd	ra,120(sp)
    8000851a:	ecaa                	sd	a0,88(sp)
    8000851c:	f0ae                	sd	a1,96(sp)
    8000851e:	f4b2                	sd	a2,104(sp)
        for c in out.bytes() {
    80008520:	f82a                	sd	a0,48(sp)
    80008522:	852e                	mv	a0,a1
    80008524:	85b2                	mv	a1,a2
    80008526:	00011097          	auipc	ra,0x11
    8000852a:	d40080e7          	jalr	-704(ra) # 80019266 <_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h8723651b9003c498E>
    8000852e:	f42a                	sd	a0,40(sp)
    80008530:	f02e                	sd	a1,32(sp)
    80008532:	a009                	j	80008534 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x1e>
    80008534:	7522                	ld	a0,40(sp)
    80008536:	7582                	ld	a1,32(sp)
    80008538:	00011097          	auipc	ra,0x11
    8000853c:	5c8080e7          	jalr	1480(ra) # 80019b00 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h91194fc24d72d77dE>
    80008540:	ec2a                	sd	a0,24(sp)
    80008542:	e82e                	sd	a1,16(sp)
    80008544:	a009                	j	80008546 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x30>
    80008546:	6562                	ld	a0,24(sp)
    80008548:	e0aa                	sd	a0,64(sp)
    8000854a:	65c2                	ld	a1,16(sp)
    8000854c:	e4ae                	sd	a1,72(sp)
    8000854e:	a009                	j	80008550 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x3a>
    80008550:	0088                	addi	a0,sp,64
    80008552:	fffff097          	auipc	ra,0xfffff
    80008556:	004080e7          	jalr	4(ra) # 80007556 <_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7dfa916bf84dc559E>
    8000855a:	04a10823          	sb	a0,80(sp)
    8000855e:	04b108a3          	sb	a1,81(sp)
    80008562:	a009                	j	80008564 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x4e>
    80008564:	05014503          	lbu	a0,80(sp)
    80008568:	8905                	andi	a0,a0,1
    8000856a:	4581                	li	a1,0
    8000856c:	00b50463          	beq	a0,a1,80008574 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x5e>
    80008570:	a009                	j	80008572 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x5c>
    80008572:	a801                	j	80008582 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x6c>
    80008574:	4501                	li	a0,0
            self.put(c);
        }
        Ok(())
    80008576:	02a10fa3          	sb	a0,63(sp)
    }
    8000857a:	70e6                	ld	ra,120(sp)
    8000857c:	6109                	addi	sp,sp,128
    8000857e:	8082                	ret
        for c in out.bytes() {
    80008580:	0000                	unimp
    80008582:	05110503          	lb	a0,81(sp)
    80008586:	06a10aa3          	sb	a0,117(sp)
    8000858a:	06a10b23          	sb	a0,118(sp)
    8000858e:	06a10ba3          	sb	a0,119(sp)
            self.put(c);
    80008592:	75c2                	ld	a1,48(sp)
    80008594:	e42a                	sd	a0,8(sp)
    80008596:	852e                	mv	a0,a1
    80008598:	65a2                	ld	a1,8(sp)
    8000859a:	00000097          	auipc	ra,0x0
    8000859e:	e44080e7          	jalr	-444(ra) # 800083de <_ZN6kernel7console4uart4Uart3put17h58da66a53250ec41E>
    800085a2:	a009                	j	800085a4 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x8e>
        for c in out.bytes() {
    800085a4:	b775                	j	80008550 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E+0x3a>

Disassembly of section .text._ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E:

00000000800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>:
            }
        }
    }
}

fn write_reg(addr: usize, val: u8) {
    800085a6:	1101                	addi	sp,sp,-32
    800085a8:	ec06                	sd	ra,24(sp)
    800085aa:	862e                	mv	a2,a1
    800085ac:	e42a                	sd	a0,8(sp)
    800085ae:	00b10ba3          	sb	a1,23(sp)
    unsafe{
        ptr::write(addr as *mut u8, val);
    800085b2:	e032                	sd	a2,0(sp)
    800085b4:	00008097          	auipc	ra,0x8
    800085b8:	6d2080e7          	jalr	1746(ra) # 80010c86 <_ZN4core3ptr5write17h7121962e424d368bE>
    800085bc:	a009                	j	800085be <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E+0x18>
    }
}
    800085be:	60e2                	ld	ra,24(sp)
    800085c0:	6105                	addi	sp,sp,32
    800085c2:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart8read_reg17h2f2f6f4bb909913dE:

00000000800085c4 <_ZN6kernel7console4uart8read_reg17h2f2f6f4bb909913dE>:

fn read_reg(addr: usize) -> u8 {
    800085c4:	1101                	addi	sp,sp,-32
    800085c6:	ec06                	sd	ra,24(sp)
    800085c8:	e82a                	sd	a0,16(sp)
    unsafe {
        ptr::read(addr as *const u8)
    800085ca:	00008097          	auipc	ra,0x8
    800085ce:	456080e7          	jalr	1110(ra) # 80010a20 <_ZN4core3ptr4read17h89a5fabfdcdd4445E>
    800085d2:	e42a                	sd	a0,8(sp)
    800085d4:	a009                	j	800085d6 <_ZN6kernel7console4uart8read_reg17h2f2f6f4bb909913dE+0x12>
    }
}
    800085d6:	6522                	ld	a0,8(sp)
    800085d8:	60e2                	ld	ra,24(sp)
    800085da:	6105                	addi	sp,sp,32
    800085dc:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart4idle17h6403661c01ed7338E:

00000000800085de <_ZN6kernel7console4uart4idle17h6403661c01ed7338E>:

/// Read the LSR to see if it is able to transmit data. 
fn idle() -> bool {
    800085de:	1141                	addi	sp,sp,-16
    800085e0:	e406                	sd	ra,8(sp)
    800085e2:	10000537          	lui	a0,0x10000
    800085e6:	2515                	addiw	a0,a0,5
    read_reg(UART_BASE_ADDR + LSR) & (1 << 5) > 0
    800085e8:	00000097          	auipc	ra,0x0
    800085ec:	fdc080e7          	jalr	-36(ra) # 800085c4 <_ZN6kernel7console4uart8read_reg17h2f2f6f4bb909913dE>
    800085f0:	e02a                	sd	a0,0(sp)
    800085f2:	a009                	j	800085f4 <_ZN6kernel7console4uart4idle17h6403661c01ed7338E+0x16>
    800085f4:	6502                	ld	a0,0(sp)
    800085f6:	02057593          	andi	a1,a0,32
    800085fa:	0055d513          	srli	a0,a1,0x5
}
    800085fe:	60a2                	ld	ra,8(sp)
    80008600:	0141                	addi	sp,sp,16
    80008602:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart9putc_sync17h1cbaf4ecd54ce4ceE:

0000000080008604 <_ZN6kernel7console4uart9putc_sync17h1cbaf4ecd54ce4ceE>:

/// Non-blocking write to uart device. 
pub(super) fn putc_sync(c: u8) {
    80008604:	7179                	addi	sp,sp,-48
    80008606:	f406                	sd	ra,40(sp)
    80008608:	85aa                	mv	a1,a0
    8000860a:	02a103a3          	sb	a0,39(sp)
    push_off();
    8000860e:	ec2e                	sd	a1,24(sp)
    80008610:	00015097          	auipc	ra,0x15
    80008614:	5a4080e7          	jalr	1444(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    80008618:	a009                	j	8000861a <_ZN6kernel7console4uart9putc_sync17h1cbaf4ecd54ce4ceE+0x16>
    8000861a:	4501                	li	a0,0
    if PANICKED.load(Ordering::Relaxed) {
    8000861c:	02a10323          	sb	a0,38(sp)

0000000080008620 <.LBB8_12>:
    80008620:	00067597          	auipc	a1,0x67
    80008624:	e2158593          	addi	a1,a1,-479 # 8006f441 <_ZN6kernel7console8PANICKED17h5bf2cc13585b246aE>
    80008628:	e82a                	sd	a0,16(sp)
    8000862a:	852e                	mv	a0,a1
    8000862c:	65c2                	ld	a1,16(sp)
    8000862e:	00005097          	auipc	ra,0x5
    80008632:	90e080e7          	jalr	-1778(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    80008636:	e42a                	sd	a0,8(sp)
    80008638:	a009                	j	8000863a <.LBB8_12+0x1a>
    8000863a:	4501                	li	a0,0
    8000863c:	65a2                	ld	a1,8(sp)
    8000863e:	00a58463          	beq	a1,a0,80008646 <.LBB8_12+0x26>
    80008642:	a009                	j	80008644 <.LBB8_12+0x24>
        loop{}
    80008644:	a011                	j	80008648 <.LBB8_12+0x28>
    }
    while !idle() {}
    80008646:	a011                	j	8000864a <.LBB8_12+0x2a>
        loop{}
    80008648:	a001                	j	80008648 <.LBB8_12+0x28>
    while !idle() {}
    8000864a:	00000097          	auipc	ra,0x0
    8000864e:	f94080e7          	jalr	-108(ra) # 800085de <_ZN6kernel7console4uart4idle17h6403661c01ed7338E>
    80008652:	e02a                	sd	a0,0(sp)
    80008654:	a009                	j	80008656 <.LBB8_12+0x36>
    80008656:	4501                	li	a0,0
    80008658:	6582                	ld	a1,0(sp)
    8000865a:	00a58b63          	beq	a1,a0,80008670 <.LBB8_12+0x50>
    8000865e:	a009                	j	80008660 <.LBB8_12+0x40>
    80008660:	10000537          	lui	a0,0x10000
    write_reg(UART_BASE_ADDR + THR, c);
    80008664:	65e2                	ld	a1,24(sp)
    80008666:	00000097          	auipc	ra,0x0
    8000866a:	f40080e7          	jalr	-192(ra) # 800085a6 <_ZN6kernel7console4uart9write_reg17hf6de395b1ab7e3c7E>
    8000866e:	a011                	j	80008672 <.LBB8_12+0x52>
    while !idle() {}
    80008670:	bfe9                	j	8000864a <.LBB8_12+0x2a>
    pop_off();
    80008672:	00015097          	auipc	ra,0x15
    80008676:	5c6080e7          	jalr	1478(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    8000867a:	a009                	j	8000867c <.LBB8_12+0x5c>
}
    8000867c:	70a2                	ld	ra,40(sp)
    8000867e:	6145                	addi	sp,sp,48
    80008680:	8082                	ret

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf22be01dc57540f7E:

0000000080008682 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf22be01dc57540f7E>:
            fn fmt(&self, f: &mut Formatter<'_>) -> Result { $tr::fmt(&**self, f) }
    80008682:	1101                	addi	sp,sp,-32
    80008684:	ec06                	sd	ra,24(sp)
    80008686:	e42a                	sd	a0,8(sp)
    80008688:	e82e                	sd	a1,16(sp)
    8000868a:	6108                	ld	a0,0(a0)
    8000868c:	00014097          	auipc	ra,0x14
    80008690:	ea8080e7          	jalr	-344(ra) # 8001c534 <_ZN66_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..fmt..Debug$GT$3fmt17h5876def64c023f07E>
    80008694:	e02a                	sd	a0,0(sp)
    80008696:	a009                	j	80008698 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf22be01dc57540f7E+0x16>
    80008698:	6502                	ld	a0,0(sp)
    8000869a:	60e2                	ld	ra,24(sp)
    8000869c:	6105                	addi	sp,sp,32
    8000869e:	8082                	ret

Disassembly of section .text._ZN4core3cmp9PartialEq2ne17h06a962108928ca16E:

00000000800086a0 <_ZN4core3cmp9PartialEq2ne17h06a962108928ca16E>:

    /// This method tests for `!=`.
    #[inline]
    #[must_use]
    #[stable(feature = "rust1", since = "1.0.0")]
    fn ne(&self, other: &Rhs) -> bool {
    800086a0:	1101                	addi	sp,sp,-32
    800086a2:	ec06                	sd	ra,24(sp)
    800086a4:	e42a                	sd	a0,8(sp)
    800086a6:	e82e                	sd	a1,16(sp)
        !self.eq(other)
    800086a8:	00014097          	auipc	ra,0x14
    800086ac:	f6e080e7          	jalr	-146(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    800086b0:	e02a                	sd	a0,0(sp)
    800086b2:	a009                	j	800086b4 <_ZN4core3cmp9PartialEq2ne17h06a962108928ca16E+0x14>
    800086b4:	6502                	ld	a0,0(sp)
    800086b6:	00154513          	xori	a0,a0,1
    }
    800086ba:	60e2                	ld	ra,24(sp)
    800086bc:	6105                	addi	sp,sp,32
    800086be:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h02ff9762c1abd856E:

00000000800086c0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h02ff9762c1abd856E>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    800086c0:	1101                	addi	sp,sp,-32
    800086c2:	e42a                	sd	a0,8(sp)
    800086c4:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) as *mut T }
    800086c6:	059a                	slli	a1,a1,0x6
    800086c8:	952e                	add	a0,a0,a1
    800086ca:	ec2a                	sd	a0,24(sp)
    800086cc:	e02a                	sd	a0,0(sp)
    800086ce:	a009                	j	800086d0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h02ff9762c1abd856E+0x10>
    }
    800086d0:	6502                	ld	a0,0(sp)
    800086d2:	6105                	addi	sp,sp,32
    800086d4:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0f5427eddf4fb954E:

00000000800086d6 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0f5427eddf4fb954E>:
    pub const unsafe fn offset(self, count: isize) -> *const T
    800086d6:	1101                	addi	sp,sp,-32
    800086d8:	e42a                	sd	a0,8(sp)
    800086da:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) }
    800086dc:	059a                	slli	a1,a1,0x6
    800086de:	952e                	add	a0,a0,a1
    800086e0:	ec2a                	sd	a0,24(sp)
    800086e2:	e02a                	sd	a0,0(sp)
    800086e4:	a009                	j	800086e6 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0f5427eddf4fb954E+0x10>
    }
    800086e6:	6502                	ld	a0,0(sp)
    800086e8:	6105                	addi	sp,sp,32
    800086ea:	8082                	ret

Disassembly of section .text._ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE:

00000000800086ec <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE>:
   TRUNC = 0x400,
   INVALID
}

impl OpenMode {
    pub fn mode(item: usize) -> Self {
    800086ec:	1101                	addi	sp,sp,-32
    800086ee:	ec2a                	sd	a0,24(sp)
    800086f0:	4581                	li	a1,0
        match item {
            0x000 => { Self::RDONLY },
    800086f2:	e42a                	sd	a0,8(sp)
    800086f4:	02b50d63          	beq	a0,a1,8000872e <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x42>
    800086f8:	a009                	j	800086fa <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0xe>
    800086fa:	4505                	li	a0,1
    800086fc:	65a2                	ld	a1,8(sp)
    800086fe:	02a58b63          	beq	a1,a0,80008734 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x48>
    80008702:	a009                	j	80008704 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x18>
    80008704:	4509                	li	a0,2
    80008706:	65a2                	ld	a1,8(sp)
    80008708:	02a58963          	beq	a1,a0,8000873a <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x4e>
    8000870c:	a009                	j	8000870e <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x22>
    8000870e:	20000513          	li	a0,512
    80008712:	65a2                	ld	a1,8(sp)
    80008714:	02a58663          	beq	a1,a0,80008740 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x54>
    80008718:	a009                	j	8000871a <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x2e>
    8000871a:	40000513          	li	a0,1024
    8000871e:	65a2                	ld	a1,8(sp)
    80008720:	02a58463          	beq	a1,a0,80008748 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x5c>
    80008724:	a009                	j	80008726 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x3a>
    80008726:	40100513          	li	a0,1025
            0x001 => { Self::WRONLY },
            0x002 => { Self::RDWR },
            0x200 => { Self::CREATE },
            0x400 => { Self::TRUNC },
            _ => {Self::INVALID}
    8000872a:	e82a                	sd	a0,16(sp)
        match item {
    8000872c:	a015                	j	80008750 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x64>
    8000872e:	4501                	li	a0,0
            0x000 => { Self::RDONLY },
    80008730:	e82a                	sd	a0,16(sp)
        match item {
    80008732:	a839                	j	80008750 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x64>
    80008734:	4505                	li	a0,1
            0x001 => { Self::WRONLY },
    80008736:	e82a                	sd	a0,16(sp)
        match item {
    80008738:	a821                	j	80008750 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x64>
    8000873a:	4509                	li	a0,2
            0x002 => { Self::RDWR },
    8000873c:	e82a                	sd	a0,16(sp)
        match item {
    8000873e:	a809                	j	80008750 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x64>
    80008740:	20000513          	li	a0,512
            0x200 => { Self::CREATE },
    80008744:	e82a                	sd	a0,16(sp)
        match item {
    80008746:	a029                	j	80008750 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x64>
    80008748:	40000513          	li	a0,1024
            0x400 => { Self::TRUNC },
    8000874c:	e82a                	sd	a0,16(sp)
        match item {
    8000874e:	a009                	j	80008750 <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE+0x64>
        }
    }
    80008750:	6542                	ld	a0,16(sp)
    80008752:	6105                	addi	sp,sp,32
    80008754:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$4fork17h5b72687c69807ad4E:

0000000080008756 <_ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$4fork17h5b72687c69807ad4E>:
use crate::{interrupt::trap::TICKS_LOCK, process::*};
use super::*;

impl Syscall<'_> {
    pub fn fork(&mut self) -> SysResult {
    80008756:	711d                	addi	sp,sp,-96
    80008758:	ec86                	sd	ra,88(sp)
    8000875a:	e0aa                	sd	a0,64(sp)
        let child_proc = self.process.fork().expect("Fail to fork process");
    8000875c:	6108                	ld	a0,0(a0)
    8000875e:	0000a097          	auipc	ra,0xa
    80008762:	0b0080e7          	jalr	176(ra) # 8001280e <_ZN6kernel7process7process7Process4fork17h8d67dc5c1c963a62E>
    80008766:	f02a                	sd	a0,32(sp)
    80008768:	a009                	j	8000876a <.LBB0_6>

000000008000876a <.LBB0_6>:
    8000876a:	0001c597          	auipc	a1,0x1c
    8000876e:	0ee58593          	addi	a1,a1,238 # 80024858 <.L__unnamed_1>

0000000080008772 <.LBB0_7>:
    80008772:	0001c697          	auipc	a3,0x1c
    80008776:	10e68693          	addi	a3,a3,270 # 80024880 <.L__unnamed_2>
    8000877a:	4651                	li	a2,20
    8000877c:	7502                	ld	a0,32(sp)
    8000877e:	00010097          	auipc	ra,0x10
    80008782:	2dc080e7          	jalr	732(ra) # 80018a5a <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E>
    80008786:	85aa                	mv	a1,a0
    80008788:	e4aa                	sd	a0,72(sp)
    8000878a:	ec2e                	sd	a1,24(sp)
    8000878c:	a009                	j	8000878e <.LBB0_7+0x1c>
        let pmeta = child_proc.meta.acquire();
    8000878e:	6562                	ld	a0,24(sp)
    80008790:	ffffa097          	auipc	ra,0xffffa
    80008794:	f7c080e7          	jalr	-132(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80008798:	fc2a                	sd	a0,56(sp)
    8000879a:	a009                	j	8000879c <.LBB0_7+0x2a>
    8000879c:	1828                	addi	a0,sp,56
        let pid = pmeta.pid;
    8000879e:	ffffb097          	auipc	ra,0xffffb
    800087a2:	13e080e7          	jalr	318(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    800087a6:	e82a                	sd	a0,16(sp)
    800087a8:	a009                	j	800087aa <.LBB0_7+0x38>
    800087aa:	6542                	ld	a0,16(sp)
    800087ac:	690c                	ld	a1,16(a0)
    800087ae:	e8ae                	sd	a1,80(sp)
        drop(pmeta);
    800087b0:	7562                	ld	a0,56(sp)
    800087b2:	e42e                	sd	a1,8(sp)
    800087b4:	00005097          	auipc	ra,0x5
    800087b8:	0f2080e7          	jalr	242(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    800087bc:	a009                	j	800087be <.LBB0_7+0x4c>
        Ok(pid)
    800087be:	6522                	ld	a0,8(sp)
    800087c0:	f82a                	sd	a0,48(sp)
    800087c2:	4581                	li	a1,0
    800087c4:	f42e                	sd	a1,40(sp)
    }
    800087c6:	852e                	mv	a0,a1
    800087c8:	65a2                	ld	a1,8(sp)
    800087ca:	60e6                	ld	ra,88(sp)
    800087cc:	6125                	addi	sp,sp,96
    800087ce:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_exit17hb2bc1e2bf352ba87E:

00000000800087d0 <_ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_exit17hb2bc1e2bf352ba87E>:

    pub fn sys_exit(&self) -> SysResult {
    800087d0:	1101                	addi	sp,sp,-32
    800087d2:	ec06                	sd	ra,24(sp)
    800087d4:	e42a                	sd	a0,8(sp)
    800087d6:	4581                	li	a1,0
        let status = self.arg(0);
    800087d8:	00001097          	auipc	ra,0x1
    800087dc:	492080e7          	jalr	1170(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    800087e0:	85aa                	mv	a1,a0
    800087e2:	e82a                	sd	a0,16(sp)
    800087e4:	e02e                	sd	a1,0(sp)
    800087e6:	a009                	j	800087e8 <.LBB1_2>

00000000800087e8 <.LBB1_2>:
        unsafe {
            PROC_MANAGER.exit(status)
    800087e8:	00053517          	auipc	a0,0x53
    800087ec:	71850513          	addi	a0,a0,1816 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    800087f0:	6582                	ld	a1,0(sp)
    800087f2:	00014097          	auipc	ra,0x14
    800087f6:	77a080e7          	jalr	1914(ra) # 8001cf6c <_ZN6kernel7process7manager11ProcManager4exit17hb5e0aafd7c1c6fa4E>
	...

Disassembly of section .text._ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_wait17hb5772d47328e4b27E:

00000000800087fc <_ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_wait17hb5772d47328e4b27E>:
        }
    }

    pub fn sys_wait(&self) -> SysResult {
    800087fc:	715d                	addi	sp,sp,-80
    800087fe:	e486                	sd	ra,72(sp)
    80008800:	f82a                	sd	a0,48(sp)
    80008802:	4581                	li	a1,0
        let addr = self.arg(0);
    80008804:	00001097          	auipc	ra,0x1
    80008808:	466080e7          	jalr	1126(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    8000880c:	85aa                	mv	a1,a0
    8000880e:	fc2a                	sd	a0,56(sp)
    80008810:	e42e                	sd	a1,8(sp)
    80008812:	a009                	j	80008814 <.LBB2_8>

0000000080008814 <.LBB2_8>:
        match unsafe {
            PROC_MANAGER.wait(addr)
    80008814:	00053517          	auipc	a0,0x53
    80008818:	6ec50513          	addi	a0,a0,1772 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000881c:	65a2                	ld	a1,8(sp)
    8000881e:	00015097          	auipc	ra,0x15
    80008822:	936080e7          	jalr	-1738(ra) # 8001d154 <_ZN6kernel7process7manager11ProcManager4wait17hc89b6c8177cfd393E>
    80008826:	f02a                	sd	a0,32(sp)
    80008828:	f42e                	sd	a1,40(sp)
    8000882a:	a009                	j	8000882c <.LBB2_8+0x18>
        } {
            Some(pid) => {
    8000882c:	7502                	ld	a0,32(sp)
    8000882e:	4581                	li	a1,0
    80008830:	00b50463          	beq	a0,a1,80008838 <.LBB2_8+0x24>
    80008834:	a009                	j	80008836 <.LBB2_8+0x22>
    80008836:	a029                	j	80008840 <.LBB2_8+0x2c>
    80008838:	4505                	li	a0,1
                Ok(pid)
            },
    
            None => {
                Err(())
    8000883a:	e82a                	sd	a0,16(sp)
        match unsafe {
    8000883c:	a801                	j	8000884c <.LBB2_8+0x38>
    8000883e:	0000                	unimp
            Some(pid) => {
    80008840:	7522                	ld	a0,40(sp)
    80008842:	e0aa                	sd	a0,64(sp)
                Ok(pid)
    80008844:	ec2a                	sd	a0,24(sp)
    80008846:	4501                	li	a0,0
    80008848:	e82a                	sd	a0,16(sp)
        match unsafe {
    8000884a:	a009                	j	8000884c <.LBB2_8+0x38>
            }
        }
    }
    8000884c:	6542                	ld	a0,16(sp)
    8000884e:	65e2                	ld	a1,24(sp)
    80008850:	60a6                	ld	ra,72(sp)
    80008852:	6161                	addi	sp,sp,80
    80008854:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$7sys_dup17hb4faa9e0001423ccE:

0000000080008856 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$7sys_dup17hb4faa9e0001423ccE>:
use alloc::sync::Arc;
use alloc::vec;
use bit_field::BitField;

impl Syscall<'_> {
    pub fn sys_dup(&self) -> SysResult {
    80008856:	7135                	addi	sp,sp,-160
    80008858:	ed06                	sd	ra,152(sp)
    8000885a:	fcaa                	sd	a0,120(sp)
    8000885c:	4581                	li	a1,0
        let mut fd = self.arg(0);
    8000885e:	e0aa                	sd	a0,64(sp)
    80008860:	00001097          	auipc	ra,0x1
    80008864:	40a080e7          	jalr	1034(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80008868:	ecaa                	sd	a0,88(sp)
    8000886a:	a009                	j	8000886c <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$7sys_dup17hb4faa9e0001423ccE+0x16>
        // let proc = self.process;
        let pdata = unsafe{ &mut *self.process.data.get() };
    8000886c:	6506                	ld	a0,64(sp)
    8000886e:	610c                	ld	a1,0(a0)
    80008870:	04058513          	addi	a0,a1,64
    80008874:	0000e097          	auipc	ra,0xe
    80008878:	114080e7          	jalr	276(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8000887c:	fc2a                	sd	a0,56(sp)
    8000887e:	a009                	j	80008880 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$7sys_dup17hb4faa9e0001423ccE+0x2a>
    80008880:	7562                	ld	a0,56(sp)
    80008882:	e12a                	sd	a0,128(sp)
        let file = pdata.open_files[fd].as_ref().unwrap();
    80008884:	65e6                	ld	a1,88(sp)
    80008886:	06300613          	li	a2,99
    8000888a:	f82e                	sd	a1,48(sp)
    8000888c:	0ab66d63          	bltu	a2,a1,80008946 <.LBB3_17>
    80008890:	a009                	j	80008892 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$7sys_dup17hb4faa9e0001423ccE+0x3c>
    80008892:	7542                	ld	a0,48(sp)
    80008894:	00351593          	slli	a1,a0,0x3
    80008898:	7662                	ld	a2,56(sp)
    8000889a:	95b2                	add	a1,a1,a2
    8000889c:	0a058513          	addi	a0,a1,160
    800088a0:	00010097          	auipc	ra,0x10
    800088a4:	fec080e7          	jalr	-20(ra) # 8001888c <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E>
    800088a8:	f42a                	sd	a0,40(sp)
    800088aa:	a009                	j	800088ac <.LBB3_13>

00000000800088ac <.LBB3_13>:
    800088ac:	0001c597          	auipc	a1,0x1c
    800088b0:	01c58593          	addi	a1,a1,28 # 800248c8 <.L__unnamed_3>
    800088b4:	7522                	ld	a0,40(sp)
    800088b6:	00010097          	auipc	ra,0x10
    800088ba:	354080e7          	jalr	852(ra) # 80018c0a <_ZN4core6option15Option$LT$T$GT$6unwrap17h55d7f659cfd007f1E>
    800088be:	85aa                	mv	a1,a0
    800088c0:	e52a                	sd	a0,136(sp)
    800088c2:	f02e                	sd	a1,32(sp)
    800088c4:	a009                	j	800088c6 <.LBB3_13+0x1a>
        if let Ok(newfd) = unsafe{ CPU_MANAGER.alloc_fd(file) } {
    800088c6:	7502                	ld	a0,32(sp)
    800088c8:	fffff097          	auipc	ra,0xfffff
    800088cc:	8dc080e7          	jalr	-1828(ra) # 800071a4 <_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he32eb554c76d51fbE>
    800088d0:	ec2a                	sd	a0,24(sp)
    800088d2:	a009                	j	800088d4 <.LBB3_14>

00000000800088d4 <.LBB3_14>:
    800088d4:	00066597          	auipc	a1,0x66
    800088d8:	72c58593          	addi	a1,a1,1836 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    800088dc:	1088                	addi	a0,sp,96
    800088de:	6662                	ld	a2,24(sp)
    800088e0:	00015097          	auipc	ra,0x15
    800088e4:	ff0080e7          	jalr	-16(ra) # 8001d8d0 <_ZN6kernel7process3cpu10CPUManager8alloc_fd17hbf6d48048331bdbcE>
    800088e8:	a009                	j	800088ea <.LBB3_14+0x16>
    800088ea:	7506                	ld	a0,96(sp)
    800088ec:	4581                	li	a1,0
    800088ee:	02b50263          	beq	a0,a1,80008912 <.LBB3_16+0x16>
    800088f2:	a009                	j	800088f4 <.LBB3_15>

00000000800088f4 <.LBB3_15>:
            fd = newfd;
        }else{
            panic!("sys_dup: 没有发现空闲的文件描述符")
    800088f4:	0001c517          	auipc	a0,0x1c
    800088f8:	fec50513          	addi	a0,a0,-20 # 800248e0 <.L__unnamed_4>

00000000800088fc <.LBB3_16>:
    800088fc:	0001c617          	auipc	a2,0x1c
    80008900:	01460613          	addi	a2,a2,20 # 80024910 <.L__unnamed_5>
    80008904:	02d00593          	li	a1,45
    80008908:	00018097          	auipc	ra,0x18
    8000890c:	3c2080e7          	jalr	962(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80008910:	0000                	unimp
        if let Ok(newfd) = unsafe{ CPU_MANAGER.alloc_fd(file) } {
    80008912:	7526                	ld	a0,104(sp)
    80008914:	e92a                	sd	a0,144(sp)
            fd = newfd;
    80008916:	ecaa                	sd	a0,88(sp)
        }
        file.dup();
    80008918:	7502                	ld	a0,32(sp)
    8000891a:	fffff097          	auipc	ra,0xfffff
    8000891e:	88a080e7          	jalr	-1910(ra) # 800071a4 <_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he32eb554c76d51fbE>
    80008922:	e82a                	sd	a0,16(sp)
    80008924:	a009                	j	80008926 <.LBB3_16+0x2a>
    80008926:	6542                	ld	a0,16(sp)
    80008928:	ffffc097          	auipc	ra,0xffffc
    8000892c:	040080e7          	jalr	64(ra) # 80004968 <_ZN6kernel2fs4file5VFile3dup17hdd368b285d10a161E>
    80008930:	a009                	j	80008932 <.LBB3_16+0x36>
        Ok(fd)
    80008932:	6566                	ld	a0,88(sp)
    80008934:	e8aa                	sd	a0,80(sp)
    80008936:	4581                	li	a1,0
    80008938:	e4ae                	sd	a1,72(sp)
    }
    8000893a:	e42a                	sd	a0,8(sp)
    8000893c:	852e                	mv	a0,a1
    8000893e:	65a2                	ld	a1,8(sp)
    80008940:	60ea                	ld	ra,152(sp)
    80008942:	610d                	addi	sp,sp,160
    80008944:	8082                	ret

0000000080008946 <.LBB3_17>:
        let file = pdata.open_files[fd].as_ref().unwrap();
    80008946:	0001c617          	auipc	a2,0x1c
    8000894a:	f6a60613          	addi	a2,a2,-150 # 800248b0 <.L__unnamed_6>
    8000894e:	06400593          	li	a1,100
    80008952:	7542                	ld	a0,48(sp)
    80008954:	00018097          	auipc	ra,0x18
    80008958:	3a2080e7          	jalr	930(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_read17h06f86f681b95534bE:

000000008000895e <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_read17h06f86f681b95534bE>:

    /// read file data by special vfile. 
    pub fn sys_read(&self) -> SysResult {
    8000895e:	712d                	addi	sp,sp,-288
    80008960:	ee06                	sd	ra,280(sp)
    80008962:	e9aa                	sd	a0,208(sp)
    80008964:	4581                	li	a1,0
        let size: usize;
        // Get file
        let fd = self.arg(0);
    80008966:	e4aa                	sd	a0,72(sp)
    80008968:	00001097          	auipc	ra,0x1
    8000896c:	302080e7          	jalr	770(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80008970:	85aa                	mv	a1,a0
    80008972:	edaa                	sd	a0,216(sp)
    80008974:	e0ae                	sd	a1,64(sp)
    80008976:	a009                	j	80008978 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_read17h06f86f681b95534bE+0x1a>
        let pdata = unsafe{ &mut *self.process.data.get() };
    80008978:	6526                	ld	a0,72(sp)
    8000897a:	610c                	ld	a1,0(a0)
    8000897c:	04058513          	addi	a0,a1,64
    80008980:	0000e097          	auipc	ra,0xe
    80008984:	008080e7          	jalr	8(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80008988:	fc2a                	sd	a0,56(sp)
    8000898a:	a009                	j	8000898c <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_read17h06f86f681b95534bE+0x2e>
    8000898c:	7562                	ld	a0,56(sp)
    8000898e:	f1aa                	sd	a0,224(sp)
    80008990:	06300593          	li	a1,99
        let file = pdata.open_files[fd].as_ref().unwrap();
    80008994:	6606                	ld	a2,64(sp)
    80008996:	0ec5ef63          	bltu	a1,a2,80008a94 <.LBB4_22>
    8000899a:	a009                	j	8000899c <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_read17h06f86f681b95534bE+0x3e>
    8000899c:	6506                	ld	a0,64(sp)
    8000899e:	00351593          	slli	a1,a0,0x3
    800089a2:	7662                	ld	a2,56(sp)
    800089a4:	95b2                	add	a1,a1,a2
    800089a6:	0a058513          	addi	a0,a1,160
    800089aa:	00010097          	auipc	ra,0x10
    800089ae:	ee2080e7          	jalr	-286(ra) # 8001888c <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E>
    800089b2:	f82a                	sd	a0,48(sp)
    800089b4:	a009                	j	800089b6 <.LBB4_19>

00000000800089b6 <.LBB4_19>:
    800089b6:	0001c597          	auipc	a1,0x1c
    800089ba:	f8a58593          	addi	a1,a1,-118 # 80024940 <.L__unnamed_7>
    800089be:	7542                	ld	a0,48(sp)
    800089c0:	00010097          	auipc	ra,0x10
    800089c4:	24a080e7          	jalr	586(ra) # 80018c0a <_ZN4core6option15Option$LT$T$GT$6unwrap17h55d7f659cfd007f1E>
    800089c8:	85aa                	mv	a1,a0
    800089ca:	f5aa                	sd	a0,232(sp)
    800089cc:	f42e                	sd	a1,40(sp)
    800089ce:	a009                	j	800089d0 <.LBB4_19+0x1a>
    800089d0:	4585                	li	a1,1
        // Get user read address
        let ptr = self.arg(1);
    800089d2:	6526                	ld	a0,72(sp)
    800089d4:	00001097          	auipc	ra,0x1
    800089d8:	296080e7          	jalr	662(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    800089dc:	85aa                	mv	a1,a0
    800089de:	f9aa                	sd	a0,240(sp)
    800089e0:	f02e                	sd	a1,32(sp)
    800089e2:	a009                	j	800089e4 <.LBB4_19+0x2e>
    800089e4:	4589                	li	a1,2
        // Get read size
        let len = self.arg(2);
    800089e6:	6526                	ld	a0,72(sp)
    800089e8:	00001097          	auipc	ra,0x1
    800089ec:	282080e7          	jalr	642(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    800089f0:	85aa                	mv	a1,a0
    800089f2:	fdaa                	sd	a0,248(sp)
    800089f4:	ec2e                	sd	a1,24(sp)
    800089f6:	a009                	j	800089f8 <.LBB4_19+0x42>
        // Read file data
        match file.read(ptr, len) {
    800089f8:	7522                	ld	a0,40(sp)
    800089fa:	ffffe097          	auipc	ra,0xffffe
    800089fe:	7aa080e7          	jalr	1962(ra) # 800071a4 <_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he32eb554c76d51fbE>
    80008a02:	e82a                	sd	a0,16(sp)
    80008a04:	a009                	j	80008a06 <.LBB4_19+0x50>
    80008a06:	1088                	addi	a0,sp,96
    80008a08:	65c2                	ld	a1,16(sp)
    80008a0a:	7602                	ld	a2,32(sp)
    80008a0c:	66e2                	ld	a3,24(sp)
    80008a0e:	ffffb097          	auipc	ra,0xffffb
    80008a12:	6fe080e7          	jalr	1790(ra) # 8000410c <_ZN6kernel2fs4file5VFile4read17h76f4d5dce485aca3E>
    80008a16:	a009                	j	80008a18 <.LBB4_19+0x62>
            Ok(cur_size) => {
    80008a18:	7506                	ld	a0,96(sp)
    80008a1a:	4581                	li	a1,0
    80008a1c:	02b50663          	beq	a0,a1,80008a48 <.LBB4_20+0x18>
    80008a20:	a009                	j	80008a22 <.LBB4_19+0x6c>
                size = cur_size;
            },

            Err(err) => {
    80008a22:	7526                	ld	a0,104(sp)
    80008a24:	75c6                	ld	a1,112(sp)
    80008a26:	fcaa                	sd	a0,120(sp)
    80008a28:	e12e                	sd	a1,128(sp)
    80008a2a:	18a8                	addi	a0,sp,120
                println!("{}", err);
    80008a2c:	e5aa                	sd	a0,200(sp)
    80008a2e:	e22a                	sd	a0,256(sp)

0000000080008a30 <.LBB4_20>:
    80008a30:	fffff597          	auipc	a1,0xfffff
    80008a34:	35258593          	addi	a1,a1,850 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80008a38:	fffff097          	auipc	ra,0xfffff
    80008a3c:	3fe080e7          	jalr	1022(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80008a40:	e42a                	sd	a0,8(sp)
    80008a42:	e02e                	sd	a1,0(sp)
    80008a44:	a809                	j	80008a56 <.LBB4_20+0x26>
        match file.read(ptr, len) {
    80008a46:	0000                	unimp
            Ok(cur_size) => {
    80008a48:	7526                	ld	a0,104(sp)
    80008a4a:	e62a                	sd	a0,264(sp)
                size = cur_size;
    80008a4c:	ea2a                	sd	a0,272(sp)
                return Err(())
            }
        }
        Ok(size)
    80008a4e:	ecaa                	sd	a0,88(sp)
    80008a50:	4501                	li	a0,0
    80008a52:	e8aa                	sd	a0,80(sp)
    }
    80008a54:	a81d                	j	80008a8a <.LBB4_21+0x2c>
                println!("{}", err);
    80008a56:	6522                	ld	a0,8(sp)
    80008a58:	fd2a                	sd	a0,184(sp)
    80008a5a:	6582                	ld	a1,0(sp)
    80008a5c:	e1ae                	sd	a1,192(sp)

0000000080008a5e <.LBB4_21>:
    80008a5e:	0001c597          	auipc	a1,0x1c
    80008a62:	f0258593          	addi	a1,a1,-254 # 80024960 <.L__unnamed_8>
    80008a66:	0128                	addi	a0,sp,136
    80008a68:	4609                	li	a2,2
    80008a6a:	1934                	addi	a3,sp,184
    80008a6c:	4705                	li	a4,1
    80008a6e:	ffffd097          	auipc	ra,0xffffd
    80008a72:	cb6080e7          	jalr	-842(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80008a76:	a009                	j	80008a78 <.LBB4_21+0x1a>
    80008a78:	0128                	addi	a0,sp,136
    80008a7a:	00008097          	auipc	ra,0x8
    80008a7e:	276080e7          	jalr	630(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80008a82:	a009                	j	80008a84 <.LBB4_21+0x26>
    80008a84:	4505                	li	a0,1
                return Err(())
    80008a86:	e8aa                	sd	a0,80(sp)
    }
    80008a88:	a009                	j	80008a8a <.LBB4_21+0x2c>
    80008a8a:	6546                	ld	a0,80(sp)
    80008a8c:	65e6                	ld	a1,88(sp)
    80008a8e:	60f2                	ld	ra,280(sp)
    80008a90:	6115                	addi	sp,sp,288
    80008a92:	8082                	ret

0000000080008a94 <.LBB4_22>:
        let file = pdata.open_files[fd].as_ref().unwrap();
    80008a94:	0001c617          	auipc	a2,0x1c
    80008a98:	e9460613          	addi	a2,a2,-364 # 80024928 <.L__unnamed_9>
    80008a9c:	06400593          	li	a1,100
    80008aa0:	6506                	ld	a0,64(sp)
    80008aa2:	00018097          	auipc	ra,0x18
    80008aa6:	254080e7          	jalr	596(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_write17hcf23d463018fd643E:

0000000080008aac <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_write17hcf23d463018fd643E>:

    /// Write into file.
    pub fn sys_write(&self) -> SysResult {
    80008aac:	712d                	addi	sp,sp,-288
    80008aae:	ee06                	sd	ra,280(sp)
    80008ab0:	e9aa                	sd	a0,208(sp)
    80008ab2:	4581                	li	a1,0
        let size;
        let fd = self.arg(0);
    80008ab4:	e4aa                	sd	a0,72(sp)
    80008ab6:	00001097          	auipc	ra,0x1
    80008aba:	1b4080e7          	jalr	436(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80008abe:	85aa                	mv	a1,a0
    80008ac0:	edaa                	sd	a0,216(sp)
    80008ac2:	e0ae                	sd	a1,64(sp)
    80008ac4:	a009                	j	80008ac6 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_write17hcf23d463018fd643E+0x1a>
        let pdata = unsafe{ &mut *self.process.data.get() };
    80008ac6:	6526                	ld	a0,72(sp)
    80008ac8:	610c                	ld	a1,0(a0)
    80008aca:	04058513          	addi	a0,a1,64
    80008ace:	0000e097          	auipc	ra,0xe
    80008ad2:	eba080e7          	jalr	-326(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80008ad6:	fc2a                	sd	a0,56(sp)
    80008ad8:	a009                	j	80008ada <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_write17hcf23d463018fd643E+0x2e>
    80008ada:	7562                	ld	a0,56(sp)
    80008adc:	f1aa                	sd	a0,224(sp)
    80008ade:	06300593          	li	a1,99
        let file = pdata.open_files[fd].as_ref().unwrap();
    80008ae2:	6606                	ld	a2,64(sp)
    80008ae4:	0ec5ef63          	bltu	a1,a2,80008be2 <.LBB5_22>
    80008ae8:	a009                	j	80008aea <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_write17hcf23d463018fd643E+0x3e>
    80008aea:	6506                	ld	a0,64(sp)
    80008aec:	00351593          	slli	a1,a0,0x3
    80008af0:	7662                	ld	a2,56(sp)
    80008af2:	95b2                	add	a1,a1,a2
    80008af4:	0a058513          	addi	a0,a1,160
    80008af8:	00010097          	auipc	ra,0x10
    80008afc:	d94080e7          	jalr	-620(ra) # 8001888c <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E>
    80008b00:	f82a                	sd	a0,48(sp)
    80008b02:	a009                	j	80008b04 <.LBB5_19>

0000000080008b04 <.LBB5_19>:
    80008b04:	0001c597          	auipc	a1,0x1c
    80008b08:	e9458593          	addi	a1,a1,-364 # 80024998 <.L__unnamed_10>
    80008b0c:	7542                	ld	a0,48(sp)
    80008b0e:	00010097          	auipc	ra,0x10
    80008b12:	0fc080e7          	jalr	252(ra) # 80018c0a <_ZN4core6option15Option$LT$T$GT$6unwrap17h55d7f659cfd007f1E>
    80008b16:	85aa                	mv	a1,a0
    80008b18:	f5aa                	sd	a0,232(sp)
    80008b1a:	f42e                	sd	a1,40(sp)
    80008b1c:	a009                	j	80008b1e <.LBB5_19+0x1a>
    80008b1e:	4585                	li	a1,1
        let ptr = self.arg(1);
    80008b20:	6526                	ld	a0,72(sp)
    80008b22:	00001097          	auipc	ra,0x1
    80008b26:	148080e7          	jalr	328(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80008b2a:	85aa                	mv	a1,a0
    80008b2c:	f9aa                	sd	a0,240(sp)
    80008b2e:	f02e                	sd	a1,32(sp)
    80008b30:	a009                	j	80008b32 <.LBB5_19+0x2e>
    80008b32:	4589                	li	a1,2
        let len = self.arg(2);
    80008b34:	6526                	ld	a0,72(sp)
    80008b36:	00001097          	auipc	ra,0x1
    80008b3a:	134080e7          	jalr	308(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80008b3e:	85aa                	mv	a1,a0
    80008b40:	fdaa                	sd	a0,248(sp)
    80008b42:	ec2e                	sd	a1,24(sp)
    80008b44:	a009                	j	80008b46 <.LBB5_19+0x42>
        match file.write(ptr, len) {
    80008b46:	7522                	ld	a0,40(sp)
    80008b48:	ffffe097          	auipc	ra,0xffffe
    80008b4c:	65c080e7          	jalr	1628(ra) # 800071a4 <_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he32eb554c76d51fbE>
    80008b50:	e82a                	sd	a0,16(sp)
    80008b52:	a009                	j	80008b54 <.LBB5_19+0x50>
    80008b54:	1088                	addi	a0,sp,96
    80008b56:	65c2                	ld	a1,16(sp)
    80008b58:	7602                	ld	a2,32(sp)
    80008b5a:	66e2                	ld	a3,24(sp)
    80008b5c:	ffffc097          	auipc	ra,0xffffc
    80008b60:	93a080e7          	jalr	-1734(ra) # 80004496 <_ZN6kernel2fs4file5VFile5write17h51ce02f6d6d466e6E>
    80008b64:	a009                	j	80008b66 <.LBB5_19+0x62>
            Ok(cur_size) => {
    80008b66:	7506                	ld	a0,96(sp)
    80008b68:	4581                	li	a1,0
    80008b6a:	02b50663          	beq	a0,a1,80008b96 <.LBB5_20+0x18>
    80008b6e:	a009                	j	80008b70 <.LBB5_19+0x6c>
                size = cur_size;
            },
            Err(err) => {
    80008b70:	7526                	ld	a0,104(sp)
    80008b72:	75c6                	ld	a1,112(sp)
    80008b74:	fcaa                	sd	a0,120(sp)
    80008b76:	e12e                	sd	a1,128(sp)
    80008b78:	18a8                	addi	a0,sp,120
                println!("{}", err);
    80008b7a:	e5aa                	sd	a0,200(sp)
    80008b7c:	e22a                	sd	a0,256(sp)

0000000080008b7e <.LBB5_20>:
    80008b7e:	fffff597          	auipc	a1,0xfffff
    80008b82:	20458593          	addi	a1,a1,516 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80008b86:	fffff097          	auipc	ra,0xfffff
    80008b8a:	2b0080e7          	jalr	688(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80008b8e:	e42a                	sd	a0,8(sp)
    80008b90:	e02e                	sd	a1,0(sp)
    80008b92:	a809                	j	80008ba4 <.LBB5_20+0x26>
        match file.write(ptr, len) {
    80008b94:	0000                	unimp
            Ok(cur_size) => {
    80008b96:	7526                	ld	a0,104(sp)
    80008b98:	e62a                	sd	a0,264(sp)
                size = cur_size;
    80008b9a:	ea2a                	sd	a0,272(sp)
                return Err(())
            }
        }
        Ok(size)
    80008b9c:	ecaa                	sd	a0,88(sp)
    80008b9e:	4501                	li	a0,0
    80008ba0:	e8aa                	sd	a0,80(sp)
    }
    80008ba2:	a81d                	j	80008bd8 <.LBB5_21+0x2c>
                println!("{}", err);
    80008ba4:	6522                	ld	a0,8(sp)
    80008ba6:	fd2a                	sd	a0,184(sp)
    80008ba8:	6582                	ld	a1,0(sp)
    80008baa:	e1ae                	sd	a1,192(sp)

0000000080008bac <.LBB5_21>:
    80008bac:	0001c597          	auipc	a1,0x1c
    80008bb0:	db458593          	addi	a1,a1,-588 # 80024960 <.L__unnamed_8>
    80008bb4:	0128                	addi	a0,sp,136
    80008bb6:	4609                	li	a2,2
    80008bb8:	1934                	addi	a3,sp,184
    80008bba:	4705                	li	a4,1
    80008bbc:	ffffd097          	auipc	ra,0xffffd
    80008bc0:	b68080e7          	jalr	-1176(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80008bc4:	a009                	j	80008bc6 <.LBB5_21+0x1a>
    80008bc6:	0128                	addi	a0,sp,136
    80008bc8:	00008097          	auipc	ra,0x8
    80008bcc:	128080e7          	jalr	296(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80008bd0:	a009                	j	80008bd2 <.LBB5_21+0x26>
    80008bd2:	4505                	li	a0,1
                return Err(())
    80008bd4:	e8aa                	sd	a0,80(sp)
    }
    80008bd6:	a009                	j	80008bd8 <.LBB5_21+0x2c>
    80008bd8:	6546                	ld	a0,80(sp)
    80008bda:	65e6                	ld	a1,88(sp)
    80008bdc:	60f2                	ld	ra,280(sp)
    80008bde:	6115                	addi	sp,sp,288
    80008be0:	8082                	ret

0000000080008be2 <.LBB5_22>:
        let file = pdata.open_files[fd].as_ref().unwrap();
    80008be2:	0001c617          	auipc	a2,0x1c
    80008be6:	d9e60613          	addi	a2,a2,-610 # 80024980 <.L__unnamed_11>
    80008bea:	06400593          	li	a1,100
    80008bee:	6506                	ld	a0,64(sp)
    80008bf0:	00018097          	auipc	ra,0x18
    80008bf4:	106080e7          	jalr	262(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_open17h6dc3a5008dd9f979E:

0000000080008bfa <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_open17h6dc3a5008dd9f979E>:

    pub fn sys_open(&self) -> SysResult {
    80008bfa:	c4010113          	addi	sp,sp,-960
    80008bfe:	3a113c23          	sd	ra,952(sp)
    80008c02:	36a13c23          	sd	a0,888(sp)
    80008c06:	4581                	li	a1,0
        let mut path = [0;MAXPATH];
    80008c08:	36b10ba3          	sb	a1,887(sp)
    80008c0c:	19b0                	addi	a2,sp,248
    80008c0e:	08000693          	li	a3,128
    80008c12:	f1aa                	sd	a0,224(sp)
    80008c14:	8532                	mv	a0,a2
    80008c16:	edae                	sd	a1,216(sp)
    80008c18:	8636                	mv	a2,a3
    80008c1a:	0001b097          	auipc	ra,0x1b
    80008c1e:	c98080e7          	jalr	-872(ra) # 800238b2 <memset>
        let mut inode: Inode;
        let mut file: &mut VFile;
        let mut inode_guard: SleepLockGuard<InodeData>;
        // Get file path
        let addr = self.arg(0);
    80008c22:	758e                	ld	a1,224(sp)
    80008c24:	e9aa                	sd	a0,208(sp)
    80008c26:	852e                	mv	a0,a1
    80008c28:	65ee                	ld	a1,216(sp)
    80008c2a:	00001097          	auipc	ra,0x1
    80008c2e:	040080e7          	jalr	64(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80008c32:	85aa                	mv	a1,a0
    80008c34:	38a13023          	sd	a0,896(sp)
    80008c38:	e5ae                	sd	a1,200(sp)
    80008c3a:	a009                	j	80008c3c <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_open17h6dc3a5008dd9f979E+0x42>
    80008c3c:	19b0                	addi	a2,sp,248
    80008c3e:	08000513          	li	a0,128
        self.copy_from_str(addr, &mut path, MAXPATH).unwrap();
    80008c42:	758e                	ld	a1,224(sp)
    80008c44:	e1aa                	sd	a0,192(sp)
    80008c46:	852e                	mv	a0,a1
    80008c48:	65ae                	ld	a1,200(sp)
    80008c4a:	668e                	ld	a3,192(sp)
    80008c4c:	670e                	ld	a4,192(sp)
    80008c4e:	00001097          	auipc	ra,0x1
    80008c52:	0d2080e7          	jalr	210(ra) # 80009d20 <_ZN6kernel7syscall7Syscall13copy_from_str17h8808e2c630be93d6E>
    80008c56:	fd2a                	sd	a0,184(sp)
    80008c58:	a009                	j	80008c5a <.LBB6_85>

0000000080008c5a <.LBB6_85>:
    80008c5a:	0001c597          	auipc	a1,0x1c
    80008c5e:	d5658593          	addi	a1,a1,-682 # 800249b0 <.L__unnamed_12>
    80008c62:	756a                	ld	a0,184(sp)
    80008c64:	00004097          	auipc	ra,0x4
    80008c68:	19a080e7          	jalr	410(ra) # 8000cdfe <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he6f48d17133dfdacE>
    80008c6c:	a009                	j	80008c6e <.LBB6_85+0x14>
    80008c6e:	4585                	li	a1,1
        // Get open mode
        let open_mode = self.arg(1);
    80008c70:	750e                	ld	a0,224(sp)
    80008c72:	00001097          	auipc	ra,0x1
    80008c76:	ff8080e7          	jalr	-8(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80008c7a:	ef2a                	sd	a0,408(sp)
    80008c7c:	a009                	j	80008c7e <.LBB6_86>

0000000080008c7e <.LBB6_86>:
        // Start write log
        LOG.begin_op();
    80008c7e:	00051517          	auipc	a0,0x51
    80008c82:	3e250513          	addi	a0,a0,994 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80008c86:	0000e097          	auipc	ra,0xe
    80008c8a:	458080e7          	jalr	1112(ra) # 800170de <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E>
    80008c8e:	a009                	j	80008c90 <.LBB6_86+0x12>
        match OpenMode::mode(open_mode) {
    80008c90:	657a                	ld	a0,408(sp)
    80008c92:	00000097          	auipc	ra,0x0
    80008c96:	a5a080e7          	jalr	-1446(ra) # 800086ec <_ZN6kernel6define2fs8OpenMode4mode17hc9f8596bedd8ec3cE>
    80008c9a:	f32a                	sd	a0,416(sp)
    80008c9c:	a009                	j	80008c9e <.LBB6_86+0x20>
            OpenMode::CREATE => {
    80008c9e:	751a                	ld	a0,416(sp)
    80008ca0:	20000593          	li	a1,512
    80008ca4:	02b50063          	beq	a0,a1,80008cc4 <.LBB6_87+0x1a>
    80008ca8:	a009                	j	80008caa <.LBB6_87>

0000000080008caa <.LBB6_87>:
                    }
                }
            },
    
            _ => {
                match ICACHE.namei(&path) {
    80008caa:	00051597          	auipc	a1,0x51
    80008cae:	48658593          	addi	a1,a1,1158 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    80008cb2:	0488                	addi	a0,sp,576
    80008cb4:	19b0                	addi	a2,sp,248
    80008cb6:	08000693          	li	a3,128
    80008cba:	00012097          	auipc	ra,0x12
    80008cbe:	af8080e7          	jalr	-1288(ra) # 8001a7b2 <_ZN6kernel2fs5inode10InodeCache5namei17h40291e200b605147E>
    80008cc2:	a0c5                	j	80008da2 <.LBB6_91+0x2c>
    80008cc4:	4509                	li	a0,2
                match ICACHE.create(&path, crate::fs::InodeType::File, 0, 0) {
    80008cc6:	1ca11323          	sh	a0,454(sp)

0000000080008cca <.LBB6_88>:
    80008cca:	00051597          	auipc	a1,0x51
    80008cce:	46658593          	addi	a1,a1,1126 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    80008cd2:	1330                	addi	a2,sp,424
    80008cd4:	19b4                	addi	a3,sp,248
    80008cd6:	08000713          	li	a4,128
    80008cda:	4781                	li	a5,0
    80008cdc:	f92a                	sd	a0,176(sp)
    80008cde:	8532                	mv	a0,a2
    80008ce0:	8636                	mv	a2,a3
    80008ce2:	86ba                	mv	a3,a4
    80008ce4:	774a                	ld	a4,176(sp)
    80008ce6:	f53e                	sd	a5,168(sp)
    80008ce8:	782a                	ld	a6,168(sp)
    80008cea:	00012097          	auipc	ra,0x12
    80008cee:	b12080e7          	jalr	-1262(ra) # 8001a7fc <_ZN6kernel2fs5inode10InodeCache6create17h39b1ee7d5591cbfaE>
    80008cf2:	a009                	j	80008cf4 <.LBB6_88+0x2a>
                    Ok(cur_inode) => {
    80008cf4:	753a                	ld	a0,424(sp)
    80008cf6:	4581                	li	a1,0
    80008cf8:	02b50163          	beq	a0,a1,80008d1a <.LBB6_89+0x14>
    80008cfc:	a009                	j	80008cfe <.LBB6_88+0x34>
                    Err(err) => {
    80008cfe:	755a                	ld	a0,432(sp)
    80008d00:	75fa                	ld	a1,440(sp)
    80008d02:	f7aa                	sd	a0,488(sp)
    80008d04:	fbae                	sd	a1,496(sp)

0000000080008d06 <.LBB6_89>:
                        LOG.end_op();
    80008d06:	00051517          	auipc	a0,0x51
    80008d0a:	35a50513          	addi	a0,a0,858 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80008d0e:	0000f097          	auipc	ra,0xf
    80008d12:	9c0080e7          	jalr	-1600(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    80008d16:	a815                	j	80008d4a <.LBB6_89+0x44>
                match ICACHE.create(&path, crate::fs::InodeType::File, 0, 0) {
    80008d18:	0000                	unimp
                    Ok(cur_inode) => {
    80008d1a:	757a                	ld	a0,440(sp)
    80008d1c:	ebaa                	sd	a0,464(sp)
    80008d1e:	75da                	ld	a1,432(sp)
    80008d20:	e7ae                	sd	a1,456(sp)
                        inode = cur_inode;
    80008d22:	efae                	sd	a1,472(sp)
    80008d24:	f3aa                	sd	a0,480(sp)
    80008d26:	4605                	li	a2,1
    80008d28:	36c10ba3          	sb	a2,887(sp)
    80008d2c:	feae                	sd	a1,376(sp)
    80008d2e:	e32a                	sd	a0,384(sp)
    80008d30:	1aa8                	addi	a0,sp,376
                        inode_guard = inode.lock();
    80008d32:	00013097          	auipc	ra,0x13
    80008d36:	50a080e7          	jalr	1290(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    80008d3a:	f12a                	sd	a0,160(sp)
    80008d3c:	ed2e                	sd	a1,152(sp)
    80008d3e:	a009                	j	80008d40 <.LBB6_89+0x3a>
    80008d40:	750a                	ld	a0,160(sp)
    80008d42:	e72a                	sd	a0,392(sp)
    80008d44:	65ea                	ld	a1,152(sp)
    80008d46:	eb2e                	sd	a1,400(sp)
        match OpenMode::mode(open_mode) {
    80008d48:	a285                	j	80008ea8 <.LBB6_97>
    80008d4a:	13a8                	addi	a0,sp,488
                        println!("{}", err);
    80008d4c:	22a13c23          	sd	a0,568(sp)
    80008d50:	38a13423          	sd	a0,904(sp)

0000000080008d54 <.LBB6_90>:
    80008d54:	fffff597          	auipc	a1,0xfffff
    80008d58:	02e58593          	addi	a1,a1,46 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    80008d5c:	fffff097          	auipc	ra,0xfffff
    80008d60:	0da080e7          	jalr	218(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80008d64:	e92a                	sd	a0,144(sp)
    80008d66:	e52e                	sd	a1,136(sp)
    80008d68:	a009                	j	80008d6a <.LBB6_90+0x16>
    80008d6a:	654a                	ld	a0,144(sp)
    80008d6c:	22a13423          	sd	a0,552(sp)
    80008d70:	65aa                	ld	a1,136(sp)
    80008d72:	22b13823          	sd	a1,560(sp)

0000000080008d76 <.LBB6_91>:
    80008d76:	0001c597          	auipc	a1,0x1c
    80008d7a:	bea58593          	addi	a1,a1,-1046 # 80024960 <.L__unnamed_8>
    80008d7e:	1ba8                	addi	a0,sp,504
    80008d80:	4609                	li	a2,2
    80008d82:	1434                	addi	a3,sp,552
    80008d84:	4705                	li	a4,1
    80008d86:	ffffd097          	auipc	ra,0xffffd
    80008d8a:	99e080e7          	jalr	-1634(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80008d8e:	a009                	j	80008d90 <.LBB6_91+0x1a>
    80008d90:	1ba8                	addi	a0,sp,504
    80008d92:	00008097          	auipc	ra,0x8
    80008d96:	f5e080e7          	jalr	-162(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80008d9a:	a009                	j	80008d9c <.LBB6_91+0x26>
    80008d9c:	4505                	li	a0,1
                        return Err(())
    80008d9e:	f5aa                	sd	a0,232(sp)
    80008da0:	a655                	j	80009144 <.LBB6_105+0x34>
                    Some(cur_inode) => {
    80008da2:	24013503          	ld	a0,576(sp)
    80008da6:	4581                	li	a1,0
    80008da8:	00b50463          	beq	a0,a1,80008db0 <.LBB6_92>
    80008dac:	a009                	j	80008dae <.LBB6_91+0x38>
    80008dae:	a819                	j	80008dc4 <.LBB6_92+0x14>

0000000080008db0 <.LBB6_92>:
                            println!("[Debug] sys_open: Fail to enter dir.");
                            return Err(());
                        }
                    },
                    None => {
                        LOG.end_op();
    80008db0:	00051517          	auipc	a0,0x51
    80008db4:	2b050513          	addi	a0,a0,688 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80008db8:	0000f097          	auipc	ra,0xf
    80008dbc:	916080e7          	jalr	-1770(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    80008dc0:	a0cd                	j	80008ea2 <.LBB6_96+0x2a>
                match ICACHE.namei(&path) {
    80008dc2:	0000                	unimp
                    Some(cur_inode) => {
    80008dc4:	25013503          	ld	a0,592(sp)
    80008dc8:	26a13023          	sd	a0,608(sp)
    80008dcc:	24813583          	ld	a1,584(sp)
    80008dd0:	24b13c23          	sd	a1,600(sp)
                        inode = cur_inode;
    80008dd4:	26b13423          	sd	a1,616(sp)
    80008dd8:	26a13823          	sd	a0,624(sp)
    80008ddc:	4605                	li	a2,1
    80008dde:	36c10ba3          	sb	a2,887(sp)
    80008de2:	feae                	sd	a1,376(sp)
    80008de4:	e32a                	sd	a0,384(sp)
    80008de6:	1aa8                	addi	a0,sp,376
                        inode_guard = inode.lock();
    80008de8:	00013097          	auipc	ra,0x13
    80008dec:	454080e7          	jalr	1108(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    80008df0:	e12a                	sd	a0,128(sp)
    80008df2:	fcae                	sd	a1,120(sp)
    80008df4:	a009                	j	80008df6 <.LBB6_92+0x46>
    80008df6:	650a                	ld	a0,128(sp)
    80008df8:	e72a                	sd	a0,392(sp)
    80008dfa:	75e6                	ld	a1,120(sp)
    80008dfc:	eb2e                	sd	a1,400(sp)
    80008dfe:	0328                	addi	a0,sp,392
                        if inode_guard.dinode.itype == InodeType::Directory && open_mode != OpenMode::RDONLY as usize{
    80008e00:	ffffe097          	auipc	ra,0xffffe
    80008e04:	660080e7          	jalr	1632(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    80008e08:	f8aa                	sd	a0,112(sp)
    80008e0a:	a01d                	j	80008e30 <.LBB6_92+0x80>
    80008e0c:	4505                	li	a0,1
    80008e0e:	26a10fa3          	sb	a0,639(sp)
    80008e12:	a811                	j	80008e26 <.LBB6_92+0x76>
    80008e14:	4501                	li	a0,0
    80008e16:	26a10fa3          	sb	a0,639(sp)
    80008e1a:	a031                	j	80008e26 <.LBB6_92+0x76>
    80008e1c:	657a                	ld	a0,408(sp)
    80008e1e:	4581                	li	a1,0
    80008e20:	feb516e3          	bne	a0,a1,80008e0c <.LBB6_92+0x5c>
    80008e24:	bfc5                	j	80008e14 <.LBB6_92+0x64>
    80008e26:	27f14503          	lbu	a0,639(sp)
    80008e2a:	8905                	andi	a0,a0,1
    80008e2c:	e10d                	bnez	a0,80008e4e <.LBB6_93+0x1a>
    80008e2e:	a03d                	j	80008e5c <.LBB6_93+0x28>
    80008e30:	7546                	ld	a0,112(sp)
    80008e32:	0521                	addi	a0,a0,8

0000000080008e34 <.LBB6_93>:
    80008e34:	0001c597          	auipc	a1,0x1c
    80008e38:	b9458593          	addi	a1,a1,-1132 # 800249c8 <.L__unnamed_13>
    80008e3c:	00013097          	auipc	ra,0x13
    80008e40:	7da080e7          	jalr	2010(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    80008e44:	f4aa                	sd	a0,104(sp)
    80008e46:	a009                	j	80008e48 <.LBB6_93+0x14>
    80008e48:	7526                	ld	a0,104(sp)
    80008e4a:	f969                	bnez	a0,80008e1c <.LBB6_92+0x6c>
    80008e4c:	b7e1                	j	80008e14 <.LBB6_92+0x64>
                            drop(inode_guard);
    80008e4e:	653a                	ld	a0,392(sp)
    80008e50:	65da                	ld	a1,400(sp)
    80008e52:	00005097          	auipc	ra,0x5
    80008e56:	b6e080e7          	jalr	-1170(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    80008e5a:	a011                	j	80008e5e <.LBB6_94>
        match OpenMode::mode(open_mode) {
    80008e5c:	a0b1                	j	80008ea8 <.LBB6_97>

0000000080008e5e <.LBB6_94>:
                            LOG.end_op();
    80008e5e:	00051517          	auipc	a0,0x51
    80008e62:	20250513          	addi	a0,a0,514 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80008e66:	0000f097          	auipc	ra,0xf
    80008e6a:	868080e7          	jalr	-1944(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    80008e6e:	a009                	j	80008e70 <.LBB6_95>

0000000080008e70 <.LBB6_95>:
                            println!("[Debug] sys_open: Fail to enter dir.");
    80008e70:	0001c597          	auipc	a1,0x1c
    80008e74:	b8058593          	addi	a1,a1,-1152 # 800249f0 <.L__unnamed_14>

0000000080008e78 <.LBB6_96>:
    80008e78:	0001c697          	auipc	a3,0x1c
    80008e7c:	ae068693          	addi	a3,a3,-1312 # 80024958 <.L__unnamed_68>
    80008e80:	0508                	addi	a0,sp,640
    80008e82:	4605                	li	a2,1
    80008e84:	4701                	li	a4,0
    80008e86:	ffffd097          	auipc	ra,0xffffd
    80008e8a:	89e080e7          	jalr	-1890(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80008e8e:	a009                	j	80008e90 <.LBB6_96+0x18>
    80008e90:	0508                	addi	a0,sp,640
    80008e92:	00008097          	auipc	ra,0x8
    80008e96:	e5e080e7          	jalr	-418(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80008e9a:	a009                	j	80008e9c <.LBB6_96+0x24>
    80008e9c:	4505                	li	a0,1
                            return Err(());
    80008e9e:	f5aa                	sd	a0,232(sp)
    80008ea0:	a4d9                	j	80009166 <.LBB6_105+0x56>
    80008ea2:	4505                	li	a0,1
                        return Err(())
    80008ea4:	f5aa                	sd	a0,232(sp)
    80008ea6:	a4c1                	j	80009166 <.LBB6_105+0x56>

0000000080008ea8 <.LBB6_97>:
                }
            }
        }
        
        // Allocate file descriptor
        match unsafe{ FILE_TABLE.allocate() }  {
    80008ea8:	0002b517          	auipc	a0,0x2b
    80008eac:	67050513          	addi	a0,a0,1648 # 80034518 <_ZN6kernel2fs10file_table10FILE_TABLE17hc3a5ed6b98ffbfa5E>
    80008eb0:	fffff097          	auipc	ra,0xfffff
    80008eb4:	00c080e7          	jalr	12(ra) # 80007ebc <_ZN6kernel2fs10file_table9FileTable8allocate17hd57c5ac4cafb74c6E>
    80008eb8:	2aa13823          	sd	a0,688(sp)
    80008ebc:	a009                	j	80008ebe <.LBB6_97+0x16>
            Some(cur_file) => {
    80008ebe:	2b013503          	ld	a0,688(sp)
    80008ec2:	00a035b3          	snez	a1,a0
    80008ec6:	4601                	li	a2,0
    80008ec8:	00c50463          	beq	a0,a2,80008ed0 <.LBB6_97+0x28>
    80008ecc:	a009                	j	80008ece <.LBB6_97+0x26>
    80008ece:	a809                	j	80008ee0 <.LBB6_97+0x38>
                file = cur_file;
            }
    
            None => {
                drop(inode_guard);
    80008ed0:	653a                	ld	a0,392(sp)
    80008ed2:	65da                	ld	a1,400(sp)
    80008ed4:	00005097          	auipc	ra,0x5
    80008ed8:	aec080e7          	jalr	-1300(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    80008edc:	a00d                	j	80008efe <.LBB6_98>
        match unsafe{ FILE_TABLE.allocate() }  {
    80008ede:	0000                	unimp
            Some(cur_file) => {
    80008ee0:	2b013503          	ld	a0,688(sp)
    80008ee4:	38a13823          	sd	a0,912(sp)
                file = cur_file;
    80008ee8:	38a13c23          	sd	a0,920(sp)
    80008eec:	032c                	addi	a1,sp,392
                println!("Fail to allocate file");
                return Err(())
            }
        }
    
        match inode_guard.dinode.itype {
    80008eee:	f0aa                	sd	a0,96(sp)
    80008ef0:	852e                	mv	a0,a1
    80008ef2:	ffffe097          	auipc	ra,0xffffe
    80008ef6:	56e080e7          	jalr	1390(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    80008efa:	ecaa                	sd	a0,88(sp)
    80008efc:	a099                	j	80008f42 <.LBB6_100+0x2a>

0000000080008efe <.LBB6_98>:
                LOG.end_op();
    80008efe:	00051517          	auipc	a0,0x51
    80008f02:	16250513          	addi	a0,a0,354 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80008f06:	0000e097          	auipc	ra,0xe
    80008f0a:	7c8080e7          	jalr	1992(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    80008f0e:	a009                	j	80008f10 <.LBB6_99>

0000000080008f10 <.LBB6_99>:
                println!("Fail to allocate file");
    80008f10:	0001c597          	auipc	a1,0x1c
    80008f14:	b0858593          	addi	a1,a1,-1272 # 80024a18 <.L__unnamed_16>

0000000080008f18 <.LBB6_100>:
    80008f18:	0001c697          	auipc	a3,0x1c
    80008f1c:	a4068693          	addi	a3,a3,-1472 # 80024958 <.L__unnamed_68>
    80008f20:	1d28                	addi	a0,sp,696
    80008f22:	4605                	li	a2,1
    80008f24:	4701                	li	a4,0
    80008f26:	ffffc097          	auipc	ra,0xffffc
    80008f2a:	7fe080e7          	jalr	2046(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80008f2e:	a009                	j	80008f30 <.LBB6_100+0x18>
    80008f30:	1d28                	addi	a0,sp,696
    80008f32:	00008097          	auipc	ra,0x8
    80008f36:	dbe080e7          	jalr	-578(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80008f3a:	a009                	j	80008f3c <.LBB6_100+0x24>
    80008f3c:	4505                	li	a0,1
                return Err(())
    80008f3e:	f5aa                	sd	a0,232(sp)
    80008f40:	a419                	j	80009146 <.LBB6_105+0x36>
            InodeType::Device => {
    80008f42:	6566                	ld	a0,88(sp)
    80008f44:	00855583          	lhu	a1,8(a0)
    80008f48:	460d                	li	a2,3
    80008f4a:	02c58063          	beq	a1,a2,80008f6a <.LBB6_100+0x52>
    80008f4e:	a009                	j	80008f50 <.LBB6_100+0x38>
    80008f50:	4509                	li	a0,2
                file.major = inode_guard.dinode.major;
                file.readable = true;
                file.writeable = true;
            },
            _ => {
                file.ftype = FileType::Inode;
    80008f52:	2ea11623          	sh	a0,748(sp)
    80008f56:	7586                	ld	a1,96(sp)
    80008f58:	02a59a23          	sh	a0,52(a1)
    80008f5c:	4501                	li	a0,0
                file.offset = 0;
    80008f5e:	d988                	sw	a0,48(a1)
    80008f60:	10100513          	li	a0,257
                file.readable = true;
    80008f64:	02a59c23          	sh	a0,56(a1)
        match inode_guard.dinode.itype {
    80008f68:	a80d                	j	80008f9a <.LBB6_100+0x82>
    80008f6a:	450d                	li	a0,3
                file.ftype = FileType::Device;
    80008f6c:	2ea11523          	sh	a0,746(sp)
    80008f70:	7586                	ld	a1,96(sp)
    80008f72:	02a59a23          	sh	a0,52(a1)
    80008f76:	0328                	addi	a0,sp,392
                file.major = inode_guard.dinode.major;
    80008f78:	ffffe097          	auipc	ra,0xffffe
    80008f7c:	4e8080e7          	jalr	1256(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    80008f80:	e8aa                	sd	a0,80(sp)
    80008f82:	a009                	j	80008f84 <.LBB6_100+0x6c>
    80008f84:	6546                	ld	a0,80(sp)
    80008f86:	00a51583          	lh	a1,10(a0)
    80008f8a:	7606                	ld	a2,96(sp)
    80008f8c:	02b61b23          	sh	a1,54(a2)
    80008f90:	10100593          	li	a1,257
                file.readable = true;
    80008f94:	02b61c23          	sh	a1,56(a2)
        match inode_guard.dinode.itype {
    80008f98:	a009                	j	80008f9a <.LBB6_100+0x82>
    80008f9a:	0b28                	addi	a0,sp,408
    80008f9c:	45ad                	li	a1,11
                file.writeable = true;
            }
        }
    
        if open_mode.get_bit(11) && inode_guard.dinode.itype == InodeType::File {
    80008f9e:	ffffd097          	auipc	ra,0xffffd
    80008fa2:	904080e7          	jalr	-1788(ra) # 800058a2 <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7get_bit17h517b97e33b3f68fcE>
    80008fa6:	e4aa                	sd	a0,72(sp)
    80008fa8:	a02d                	j	80008fd2 <.LBB6_100+0xba>
    80008faa:	4505                	li	a0,1
    80008fac:	2ea107a3          	sb	a0,751(sp)
    80008fb0:	a821                	j	80008fc8 <.LBB6_100+0xb0>
    80008fb2:	4501                	li	a0,0
    80008fb4:	2ea107a3          	sb	a0,751(sp)
    80008fb8:	a801                	j	80008fc8 <.LBB6_100+0xb0>
    80008fba:	0328                	addi	a0,sp,392
    80008fbc:	ffffe097          	auipc	ra,0xffffe
    80008fc0:	4a4080e7          	jalr	1188(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    80008fc4:	e0aa                	sd	a0,64(sp)
    80008fc6:	a809                	j	80008fd8 <.LBB6_100+0xc0>
    80008fc8:	2ef14503          	lbu	a0,751(sp)
    80008fcc:	8905                	andi	a0,a0,1
    80008fce:	e505                	bnez	a0,80008ff6 <.LBB6_101+0x1a>
    80008fd0:	a815                	j	80009004 <.LBB6_101+0x28>
    80008fd2:	6526                	ld	a0,72(sp)
    80008fd4:	f17d                	bnez	a0,80008fba <.LBB6_100+0xa2>
    80008fd6:	bff1                	j	80008fb2 <.LBB6_100+0x9a>
    80008fd8:	6506                	ld	a0,64(sp)
    80008fda:	0521                	addi	a0,a0,8

0000000080008fdc <.LBB6_101>:
    80008fdc:	0001c597          	auipc	a1,0x1c
    80008fe0:	a2458593          	addi	a1,a1,-1500 # 80024a00 <.L__unnamed_17>
    80008fe4:	00013097          	auipc	ra,0x13
    80008fe8:	632080e7          	jalr	1586(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    80008fec:	fc2a                	sd	a0,56(sp)
    80008fee:	a009                	j	80008ff0 <.LBB6_101+0x14>
    80008ff0:	7562                	ld	a0,56(sp)
    80008ff2:	fd45                	bnez	a0,80008faa <.LBB6_100+0x92>
    80008ff4:	bf7d                	j	80008fb2 <.LBB6_100+0x9a>
    80008ff6:	0328                	addi	a0,sp,392
            inode_guard.truncate(&inode);
    80008ff8:	ffffe097          	auipc	ra,0xffffe
    80008ffc:	472080e7          	jalr	1138(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    80009000:	f82a                	sd	a0,48(sp)
    80009002:	a011                	j	80009006 <.LBB6_101+0x2a>
        if open_mode.get_bit(11) && inode_guard.dinode.itype == InodeType::File {
    80009004:	a809                	j	80009016 <.LBB6_101+0x3a>
    80009006:	1aac                	addi	a1,sp,376
            inode_guard.truncate(&inode);
    80009008:	7542                	ld	a0,48(sp)
    8000900a:	00012097          	auipc	ra,0x12
    8000900e:	0fa080e7          	jalr	250(ra) # 8001b104 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E>
    80009012:	a009                	j	80009014 <.LBB6_101+0x38>
        if open_mode.get_bit(11) && inode_guard.dinode.itype == InodeType::File {
    80009014:	a009                	j	80009016 <.LBB6_101+0x3a>
        }
    
        // Drop guard for immutable borrow
        drop(inode_guard);
    80009016:	653a                	ld	a0,392(sp)
    80009018:	65da                	ld	a1,400(sp)
    8000901a:	00005097          	auipc	ra,0x5
    8000901e:	9a6080e7          	jalr	-1626(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    80009022:	a009                	j	80009024 <.LBB6_102>

0000000080009024 <.LBB6_102>:
        LOG.end_op();
    80009024:	00051517          	auipc	a0,0x51
    80009028:	03c50513          	addi	a0,a0,60 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000902c:	0000e097          	auipc	ra,0xe
    80009030:	6a2080e7          	jalr	1698(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    80009034:	a009                	j	80009036 <.LBB6_102+0x12>
    80009036:	1aa8                	addi	a0,sp,376
    
        file.inode = Some((&mut inode) as *mut Inode);
    80009038:	2ea13c23          	sd	a0,760(sp)
    8000903c:	4585                	li	a1,1
    8000903e:	2eb13823          	sd	a1,752(sp)
    80009042:	7606                	ld	a2,96(sp)
    80009044:	f20c                	sd	a1,32(a2)
    80009046:	f608                	sd	a0,40(a2)
    80009048:	0b28                	addi	a0,sp,408
    8000904a:	4581                	li	a1,0
        file.writeable = !open_mode.get_bit(0);
    8000904c:	ffffd097          	auipc	ra,0xffffd
    80009050:	856080e7          	jalr	-1962(ra) # 800058a2 <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7get_bit17h517b97e33b3f68fcE>
    80009054:	f42a                	sd	a0,40(sp)
    80009056:	a009                	j	80009058 <.LBB6_102+0x34>
    80009058:	7522                	ld	a0,40(sp)
    8000905a:	00154593          	xori	a1,a0,1
    8000905e:	7606                	ld	a2,96(sp)
    80009060:	02b60ca3          	sb	a1,57(a2)
    80009064:	0b28                	addi	a0,sp,408
    80009066:	4581                	li	a1,0
        file.readable = open_mode.get_bit(0) | open_mode.get_bit(1);
    80009068:	ffffd097          	auipc	ra,0xffffd
    8000906c:	83a080e7          	jalr	-1990(ra) # 800058a2 <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7get_bit17h517b97e33b3f68fcE>
    80009070:	f02a                	sd	a0,32(sp)
    80009072:	a009                	j	80009074 <.LBB6_102+0x50>
    80009074:	0b28                	addi	a0,sp,408
    80009076:	4585                	li	a1,1
    80009078:	ffffd097          	auipc	ra,0xffffd
    8000907c:	82a080e7          	jalr	-2006(ra) # 800058a2 <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7get_bit17h517b97e33b3f68fcE>
    80009080:	ec2a                	sd	a0,24(sp)
    80009082:	a009                	j	80009084 <.LBB6_102+0x60>
    80009084:	7502                	ld	a0,32(sp)
    80009086:	65e2                	ld	a1,24(sp)
    80009088:	00b56633          	or	a2,a0,a1
    8000908c:	7686                	ld	a3,96(sp)
    8000908e:	02c68c23          	sb	a2,56(a3)

0000000080009092 <.LBB6_103>:
        let fd;
    
        match unsafe { CPU_MANAGER.alloc_fd(file) } {
    80009092:	00066597          	auipc	a1,0x66
    80009096:	f6e58593          	addi	a1,a1,-146 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000909a:	0608                	addi	a0,sp,768
    8000909c:	8636                	mv	a2,a3
    8000909e:	00015097          	auipc	ra,0x15
    800090a2:	832080e7          	jalr	-1998(ra) # 8001d8d0 <_ZN6kernel7process3cpu10CPUManager8alloc_fd17hbf6d48048331bdbcE>
    800090a6:	a009                	j	800090a8 <.LBB6_103+0x16>
            Ok(cur_fd) => {
    800090a8:	30013503          	ld	a0,768(sp)
    800090ac:	4581                	li	a1,0
    800090ae:	02b50c63          	beq	a0,a1,800090e6 <.LBB6_104+0x18>
    800090b2:	a009                	j	800090b4 <.LBB6_103+0x22>
                fd = cur_fd;

            }
            Err(err) => {
    800090b4:	30813503          	ld	a0,776(sp)
    800090b8:	31013583          	ld	a1,784(sp)
    800090bc:	30a13c23          	sd	a0,792(sp)
    800090c0:	32b13023          	sd	a1,800(sp)
    800090c4:	0e28                	addi	a0,sp,792
                println!("{}", err);
    800090c6:	36a13423          	sd	a0,872(sp)
    800090ca:	3aa13023          	sd	a0,928(sp)

00000000800090ce <.LBB6_104>:
    800090ce:	fffff597          	auipc	a1,0xfffff
    800090d2:	cb458593          	addi	a1,a1,-844 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800090d6:	fffff097          	auipc	ra,0xfffff
    800090da:	d60080e7          	jalr	-672(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    800090de:	e82a                	sd	a0,16(sp)
    800090e0:	e42e                	sd	a1,8(sp)
    800090e2:	a00d                	j	80009104 <.LBB6_104+0x36>
        match unsafe { CPU_MANAGER.alloc_fd(file) } {
    800090e4:	0000                	unimp
            Ok(cur_fd) => {
    800090e6:	30813503          	ld	a0,776(sp)
    800090ea:	3aa13423          	sd	a0,936(sp)
                fd = cur_fd;
    800090ee:	3aa13823          	sd	a0,944(sp)
                return Err(())
            }
        }
        Ok(fd)
    800090f2:	f9aa                	sd	a0,240(sp)
    800090f4:	4501                	li	a0,0
    800090f6:	f5aa                	sd	a0,232(sp)
    800090f8:	1aa8                	addi	a0,sp,376
    
    }
    800090fa:	ffffd097          	auipc	ra,0xffffd
    800090fe:	75c080e7          	jalr	1884(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    80009102:	a82d                	j	8000913c <.LBB6_105+0x2c>
                println!("{}", err);
    80009104:	6542                	ld	a0,16(sp)
    80009106:	34a13c23          	sd	a0,856(sp)
    8000910a:	65a2                	ld	a1,8(sp)
    8000910c:	36b13023          	sd	a1,864(sp)

0000000080009110 <.LBB6_105>:
    80009110:	0001c597          	auipc	a1,0x1c
    80009114:	85058593          	addi	a1,a1,-1968 # 80024960 <.L__unnamed_8>
    80009118:	1628                	addi	a0,sp,808
    8000911a:	4609                	li	a2,2
    8000911c:	0eb4                	addi	a3,sp,856
    8000911e:	4705                	li	a4,1
    80009120:	ffffc097          	auipc	ra,0xffffc
    80009124:	604080e7          	jalr	1540(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80009128:	a009                	j	8000912a <.LBB6_105+0x1a>
    8000912a:	1628                	addi	a0,sp,808
    8000912c:	00008097          	auipc	ra,0x8
    80009130:	bc4080e7          	jalr	-1084(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80009134:	a009                	j	80009136 <.LBB6_105+0x26>
    80009136:	4505                	li	a0,1
                return Err(())
    80009138:	f5aa                	sd	a0,232(sp)
    8000913a:	a031                	j	80009146 <.LBB6_105+0x36>
    8000913c:	4501                	li	a0,0
    }
    8000913e:	36a10ba3          	sb	a0,887(sp)
    80009142:	a819                	j	80009158 <.LBB6_105+0x48>
    80009144:	a009                	j	80009146 <.LBB6_105+0x36>
    80009146:	37714503          	lbu	a0,887(sp)
    8000914a:	8905                	andi	a0,a0,1
    8000914c:	ed11                	bnez	a0,80009168 <.LBB6_105+0x58>
    8000914e:	a009                	j	80009150 <.LBB6_105+0x40>
    80009150:	4501                	li	a0,0
    80009152:	36a10ba3          	sb	a0,887(sp)
    80009156:	a009                	j	80009158 <.LBB6_105+0x48>
    80009158:	752e                	ld	a0,232(sp)
    8000915a:	75ce                	ld	a1,240(sp)
    8000915c:	3b813083          	ld	ra,952(sp)
    80009160:	3c010113          	addi	sp,sp,960
    80009164:	8082                	ret
    80009166:	bff9                	j	80009144 <.LBB6_105+0x34>
    80009168:	1aa8                	addi	a0,sp,376
    8000916a:	ffffd097          	auipc	ra,0xffffd
    8000916e:	6ec080e7          	jalr	1772(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    80009172:	bff9                	j	80009150 <.LBB6_105+0x40>

Disassembly of section .text._ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_exec17hcc07b8af75fd8d2cE:

0000000080009174 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_exec17hcc07b8af75fd8d2cE>:
    
    pub fn sys_exec(&self) -> SysResult {
    80009174:	bd010113          	addi	sp,sp,-1072
    80009178:	42113423          	sd	ra,1064(sp)
    8000917c:	38a13423          	sd	a0,904(sp)
    80009180:	028c                	addi	a1,sp,320
    80009182:	4601                	li	a2,0
    80009184:	08000693          	li	a3,128
        let mut path = [0u8;MAXPATH];
    80009188:	f62a                	sd	a0,296(sp)
    8000918a:	852e                	mv	a0,a1
    8000918c:	85b2                	mv	a1,a2
    8000918e:	8636                	mv	a2,a3
    80009190:	0001a097          	auipc	ra,0x1a
    80009194:	722080e7          	jalr	1826(ra) # 800238b2 <memset>
    80009198:	038c                	addi	a1,sp,448
        let mut argv = [0 as *mut u8; MAXARG];
    8000919a:	10058613          	addi	a2,a1,256
    8000919e:	f232                	sd	a2,288(sp)
    800091a0:	ee2e                	sd	a1,280(sp)
    800091a2:	a6dd                	j	80009588 <.LBB7_86+0xd2>
    800091a4:	0290                	addi	a2,sp,320
    800091a6:	08000513          	li	a0,128
        let mut user_arg: usize;
        let addr = self.arg(0);
        self.copy_from_str(addr, &mut path, MAXPATH).unwrap();
    800091aa:	75b2                	ld	a1,296(sp)
    800091ac:	ea2a                	sd	a0,272(sp)
    800091ae:	852e                	mv	a0,a1
    800091b0:	65b2                	ld	a1,264(sp)
    800091b2:	66d2                	ld	a3,272(sp)
    800091b4:	6752                	ld	a4,272(sp)
    800091b6:	00001097          	auipc	ra,0x1
    800091ba:	b6a080e7          	jalr	-1174(ra) # 80009d20 <_ZN6kernel7syscall7Syscall13copy_from_str17h8808e2c630be93d6E>
    800091be:	e22a                	sd	a0,256(sp)
    800091c0:	a009                	j	800091c2 <.LBB7_83>

00000000800091c2 <.LBB7_83>:
    800091c2:	0001c597          	auipc	a1,0x1c
    800091c6:	86658593          	addi	a1,a1,-1946 # 80024a28 <.L__unnamed_18>
    800091ca:	6512                	ld	a0,256(sp)
    800091cc:	00004097          	auipc	ra,0x4
    800091d0:	c32080e7          	jalr	-974(ra) # 8000cdfe <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he6f48d17133dfdacE>
    800091d4:	a009                	j	800091d6 <.LBB7_83+0x14>
    800091d6:	4585                	li	a1,1
        let user_argv = self.arg(1);
    800091d8:	7532                	ld	a0,296(sp)
    800091da:	00001097          	auipc	ra,0x1
    800091de:	a90080e7          	jalr	-1392(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    800091e2:	85aa                	mv	a1,a0
    800091e4:	3aa13c23          	sd	a0,952(sp)
    800091e8:	fdae                	sd	a1,248(sp)
    800091ea:	a009                	j	800091ec <.LBB7_83+0x2a>
    800091ec:	0588                	addi	a0,sp,704
    800091ee:	028c                	addi	a1,sp,320
    800091f0:	08000613          	li	a2,128
        let path = from_utf8(&path).unwrap();
    800091f4:	00019097          	auipc	ra,0x19
    800091f8:	19c080e7          	jalr	412(ra) # 80022390 <_ZN4core3str8converts9from_utf817h36a155da9055aca2E>
    800091fc:	a009                	j	800091fe <.LBB7_84>

00000000800091fe <.LBB7_84>:
    800091fe:	0001c597          	auipc	a1,0x1c
    80009202:	84258593          	addi	a1,a1,-1982 # 80024a40 <.L__unnamed_19>
    80009206:	0588                	addi	a0,sp,704
    80009208:	00004097          	auipc	ra,0x4
    8000920c:	a94080e7          	jalr	-1388(ra) # 8000cc9c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h00a6f548c55f29e9E>
    80009210:	862a                	mv	a2,a0
    80009212:	86ae                	mv	a3,a1
    80009214:	3ca13023          	sd	a0,960(sp)
    80009218:	3cb13423          	sd	a1,968(sp)
    8000921c:	f9b2                	sd	a2,240(sp)
    8000921e:	f5b6                	sd	a3,232(sp)
    80009220:	a009                	j	80009222 <.LBB7_84+0x24>
    80009222:	4501                	li	a0,0
    
        let mut count = 0;
    80009224:	2ca13c23          	sd	a0,728(sp)
        loop {
    80009228:	a009                	j	8000922a <.LBB7_84+0x2c>
            if count >= argv.len() {
    8000922a:	2d813503          	ld	a0,728(sp)
    8000922e:	038c                	addi	a1,sp,448
    80009230:	02000613          	li	a2,32
    80009234:	f1aa                	sd	a0,224(sp)
    80009236:	852e                	mv	a0,a1
    80009238:	85b2                	mv	a1,a2
    8000923a:	0000a097          	auipc	ra,0xa
    8000923e:	a5a080e7          	jalr	-1446(ra) # 80012c94 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hee078f1092d39ceeE>
    80009242:	edaa                	sd	a0,216(sp)
    80009244:	a009                	j	80009246 <.LBB7_84+0x48>
    80009246:	750e                	ld	a0,224(sp)
    80009248:	65ee                	ld	a1,216(sp)
    8000924a:	02b56163          	bltu	a0,a1,8000926c <.LBB7_84+0x6e>
    8000924e:	a009                	j	80009250 <.LBB7_84+0x52>
    80009250:	4501                	li	a0,0
                for i in 0..MAXARG {
    80009252:	2ea13023          	sd	a0,736(sp)
    80009256:	02000593          	li	a1,32
    8000925a:	2eb13423          	sd	a1,744(sp)
    8000925e:	00017097          	auipc	ra,0x17
    80009262:	84c080e7          	jalr	-1972(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    80009266:	e9aa                	sd	a0,208(sp)
    80009268:	e5ae                	sd	a1,200(sp)
    8000926a:	a801                	j	8000927a <.LBB7_84+0x7c>
    8000926c:	4501                	li	a0,0
                        unsafe{ drop_in_place(argv[i] as *mut RawPage) };
                    }
                }
                return Err(());
            }
            let mut buf = [0u8;8];
    8000926e:	30a13823          	sd	a0,784(sp)
            self.copy_form_addr(
                user_argv + count * size_of::<usize>(), 
    80009272:	2d813503          	ld	a0,728(sp)
    80009276:	e1aa                	sd	a0,192(sp)
    80009278:	a8b5                	j	800092f4 <.LBB7_84+0xf6>
                for i in 0..MAXARG {
    8000927a:	654e                	ld	a0,208(sp)
    8000927c:	2ea13823          	sd	a0,752(sp)
    80009280:	65ae                	ld	a1,200(sp)
    80009282:	2eb13c23          	sd	a1,760(sp)
    80009286:	a009                	j	80009288 <.LBB7_84+0x8a>
    80009288:	1d88                	addi	a0,sp,752
    8000928a:	00016097          	auipc	ra,0x16
    8000928e:	7b2080e7          	jalr	1970(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    80009292:	30a13023          	sd	a0,768(sp)
    80009296:	30b13423          	sd	a1,776(sp)
    8000929a:	a009                	j	8000929c <.LBB7_84+0x9e>
    8000929c:	30013503          	ld	a0,768(sp)
    800092a0:	4581                	li	a1,0
    800092a2:	00b50463          	beq	a0,a1,800092aa <.LBB7_84+0xac>
    800092a6:	a009                	j	800092a8 <.LBB7_84+0xaa>
    800092a8:	a029                	j	800092b2 <.LBB7_84+0xb4>
    800092aa:	4505                	li	a0,1
                return Err(());
    800092ac:	fa2a                	sd	a0,304(sp)
    800092ae:	a4e9                	j	80009578 <.LBB7_86+0xc2>
                for i in 0..MAXARG {
    800092b0:	0000                	unimp
    800092b2:	30813503          	ld	a0,776(sp)
    800092b6:	3ca13823          	sd	a0,976(sp)
    800092ba:	3ca13c23          	sd	a0,984(sp)
    800092be:	3ea13023          	sd	a0,992(sp)
    800092c2:	45fd                	li	a1,31
                    if argv[i] != 0 as *mut u8 {
    800092c4:	fd2a                	sd	a0,184(sp)
    800092c6:	2ea5ec63          	bltu	a1,a0,800095be <.LBB7_87>
    800092ca:	a009                	j	800092cc <.LBB7_84+0xce>
    800092cc:	756a                	ld	a0,184(sp)
    800092ce:	00351593          	slli	a1,a0,0x3
    800092d2:	0390                	addi	a2,sp,448
    800092d4:	95b2                	add	a1,a1,a2
    800092d6:	618c                	ld	a1,0(a1)
    800092d8:	4601                	li	a2,0
    800092da:	00c58963          	beq	a1,a2,800092ec <.LBB7_84+0xee>
    800092de:	a009                	j	800092e0 <.LBB7_84+0xe2>
    800092e0:	02000513          	li	a0,32
                        unsafe{ drop_in_place(argv[i] as *mut RawPage) };
    800092e4:	75ea                	ld	a1,184(sp)
    800092e6:	00a5e463          	bltu	a1,a0,800092ee <.LBB7_84+0xf0>
    800092ea:	a4f5                	j	800095d6 <.LBB7_88>
                    if argv[i] != 0 as *mut u8 {
    800092ec:	a019                	j	800092f2 <.LBB7_84+0xf4>
                        unsafe{ drop_in_place(argv[i] as *mut RawPage) };
    800092ee:	a009                	j	800092f0 <.LBB7_84+0xf2>
                    if argv[i] != 0 as *mut u8 {
    800092f0:	a009                	j	800092f2 <.LBB7_84+0xf4>
                for i in 0..MAXARG {
    800092f2:	bf59                	j	80009288 <.LBB7_84+0x8a>
    800092f4:	4505                	li	a0,1
    800092f6:	1576                	slli	a0,a0,0x3d
    800092f8:	157d                	addi	a0,a0,-1
                user_argv + count * size_of::<usize>(), 
    800092fa:	658e                	ld	a1,192(sp)
    800092fc:	8d6d                	and	a0,a0,a1
    800092fe:	00359613          	slli	a2,a1,0x3
    80009302:	f932                	sd	a2,176(sp)
    80009304:	2eb51563          	bne	a0,a1,800095ee <.LBB7_89>
    80009308:	a009                	j	8000930a <.LBB7_84+0x10c>
    8000930a:	756e                	ld	a0,248(sp)
    8000930c:	75ca                	ld	a1,176(sp)
    8000930e:	00b50633          	add	a2,a0,a1
    80009312:	f532                	sd	a2,168(sp)
    80009314:	2ea66c63          	bltu	a2,a0,8000960c <.LBB7_91>
    80009318:	a009                	j	8000931a <.LBB7_84+0x11c>
    8000931a:	0e10                	addi	a2,sp,784
    8000931c:	4521                	li	a0,8
            self.copy_form_addr(
    8000931e:	75b2                	ld	a1,296(sp)
    80009320:	f12a                	sd	a0,160(sp)
    80009322:	852e                	mv	a0,a1
    80009324:	75aa                	ld	a1,168(sp)
    80009326:	768a                	ld	a3,160(sp)
    80009328:	770a                	ld	a4,160(sp)
    8000932a:	00001097          	auipc	ra,0x1
    8000932e:	ad6080e7          	jalr	-1322(ra) # 80009e00 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E>
    80009332:	ed2a                	sd	a0,152(sp)
    80009334:	a009                	j	80009336 <.LBB7_84+0x138>
    80009336:	656a                	ld	a0,152(sp)
    80009338:	00004097          	auipc	ra,0x4
    8000933c:	bee080e7          	jalr	-1042(ra) # 8000cf26 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc0274a8b2b7cf659E>
    80009340:	30a10fa3          	sb	a0,799(sp)
    80009344:	a009                	j	80009346 <.LBB7_84+0x148>
                &mut buf, 
                8
            )?;
    80009346:	31f14503          	lbu	a0,799(sp)
    8000934a:	8905                	andi	a0,a0,1
    8000934c:	4581                	li	a1,0
    8000934e:	00b50463          	beq	a0,a1,80009356 <.LBB7_84+0x158>
    80009352:	a009                	j	80009354 <.LBB7_84+0x156>
    80009354:	a821                	j	8000936c <.LBB7_84+0x16e>
            // TODO: use little endian to create an native integer?
            user_arg = usize::from_le_bytes(buf);
    80009356:	31013503          	ld	a0,784(sp)
    8000935a:	32a13023          	sd	a0,800(sp)
    8000935e:	0000d097          	auipc	ra,0xd
    80009362:	16a080e7          	jalr	362(ra) # 800164c8 <_ZN4core3num23_$LT$impl$u20$usize$GT$13from_le_bytes17h0becb231dcd886d9E>
    80009366:	e92a                	sd	a0,144(sp)
    80009368:	a839                	j	80009386 <.LBB7_84+0x188>
            self.copy_form_addr(
    8000936a:	0000                	unimp
            )?;
    8000936c:	00010097          	auipc	ra,0x10
    80009370:	e82080e7          	jalr	-382(ra) # 800191ee <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hed5e8d0c876c28a1E>
    80009374:	a009                	j	80009376 <.LBB7_84+0x178>
            self.copy_form_addr(
    80009376:	00004097          	auipc	ra,0x4
    8000937a:	ad0080e7          	jalr	-1328(ra) # 8000ce46 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h175389a2c1795f33E>
    8000937e:	fa2a                	sd	a0,304(sp)
    80009380:	fe2e                	sd	a1,312(sp)
    80009382:	a009                	j	80009384 <.LBB7_84+0x186>
    80009384:	aacd                	j	80009576 <.LBB7_86+0xc0>
            user_arg = usize::from_le_bytes(buf);
    80009386:	654a                	ld	a0,144(sp)
    80009388:	3ea13423          	sd	a0,1000(sp)
    8000938c:	4581                	li	a1,0
            if user_arg == 0 {
    8000938e:	00b51b63          	bne	a0,a1,800093a4 <.LBB7_84+0x1a6>
    80009392:	a009                	j	80009394 <.LBB7_84+0x196>
                argv[count] = 0 as *mut u8;
    80009394:	2d813503          	ld	a0,728(sp)
    80009398:	02000593          	li	a1,32
    8000939c:	e52a                	sd	a0,136(sp)
    8000939e:	00b56963          	bltu	a0,a1,800093b0 <.LBB7_84+0x1b2>
    800093a2:	ac6d                	j	8000965c <.LBB7_96>
                break;
            }
            let mem = unsafe{ RawPage::new_zeroed() as *mut u8 };
    800093a4:	ffffe097          	auipc	ra,0xffffe
    800093a8:	178080e7          	jalr	376(ra) # 8000751c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE>
    800093ac:	e12a                	sd	a0,128(sp)
    800093ae:	a00d                	j	800093d0 <.LBB7_84+0x1d2>
                argv[count] = 0 as *mut u8;
    800093b0:	652a                	ld	a0,136(sp)
    800093b2:	00351593          	slli	a1,a0,0x3
    800093b6:	0390                	addi	a2,sp,448
    800093b8:	95b2                	add	a1,a1,a2
    800093ba:	4681                	li	a3,0
    800093bc:	e194                	sd	a3,0(a1)
    800093be:	02000593          	li	a1,32
            count += 1;
        }
    
        let argv = unsafe{ 
            from_raw_parts(
                argv.as_ptr() as *const *const u8, 
    800093c2:	8532                	mv	a0,a2
    800093c4:	0000a097          	auipc	ra,0xa
    800093c8:	90a080e7          	jalr	-1782(ra) # 80012cce <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7db1cdd1ba9e39c4E>
    800093cc:	fcaa                	sd	a0,120(sp)
    800093ce:	a845                	j	8000947e <.LBB7_84+0x280>
            let mem = unsafe{ RawPage::new_zeroed() as *mut u8 };
    800093d0:	650a                	ld	a0,128(sp)
    800093d2:	658a                	ld	a1,128(sp)
    800093d4:	3eb13823          	sd	a1,1008(sp)
            argv[count] = mem;
    800093d8:	2d813603          	ld	a2,728(sp)
    800093dc:	46fd                	li	a3,31
    800093de:	f8aa                	sd	a0,112(sp)
    800093e0:	f4b2                	sd	a2,104(sp)
    800093e2:	24c6e363          	bltu	a3,a2,80009628 <.LBB7_93>
    800093e6:	a009                	j	800093e8 <.LBB7_84+0x1ea>
    800093e8:	7526                	ld	a0,104(sp)
    800093ea:	00351593          	slli	a1,a0,0x3
    800093ee:	0390                	addi	a2,sp,448
    800093f0:	95b2                	add	a1,a1,a2
    800093f2:	7646                	ld	a2,112(sp)
    800093f4:	e190                	sd	a2,0(a1)
    800093f6:	6585                	lui	a1,0x1
            let buf = unsafe { from_raw_parts_mut(mem, PGSIZE) };
    800093f8:	8532                	mv	a0,a2
    800093fa:	00004097          	auipc	ra,0x4
    800093fe:	454080e7          	jalr	1108(ra) # 8000d84e <_ZN4core5slice3raw18from_raw_parts_mut17he4afa4be0aa11357E>
    80009402:	f0aa                	sd	a0,96(sp)
    80009404:	ecae                	sd	a1,88(sp)
    80009406:	a009                	j	80009408 <.LBB7_84+0x20a>
    80009408:	7506                	ld	a0,96(sp)
    8000940a:	3ea13c23          	sd	a0,1016(sp)
    8000940e:	65e6                	ld	a1,88(sp)
    80009410:	40b13023          	sd	a1,1024(sp)
    80009414:	6705                	lui	a4,0x1
            self.copy_from_str(
    80009416:	7532                	ld	a0,296(sp)
    80009418:	65ca                	ld	a1,144(sp)
    8000941a:	7606                	ld	a2,96(sp)
    8000941c:	66e6                	ld	a3,88(sp)
    8000941e:	00001097          	auipc	ra,0x1
    80009422:	902080e7          	jalr	-1790(ra) # 80009d20 <_ZN6kernel7syscall7Syscall13copy_from_str17h8808e2c630be93d6E>
    80009426:	e8aa                	sd	a0,80(sp)
    80009428:	a009                	j	8000942a <.LBB7_84+0x22c>
    8000942a:	6546                	ld	a0,80(sp)
    8000942c:	00004097          	auipc	ra,0x4
    80009430:	afa080e7          	jalr	-1286(ra) # 8000cf26 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc0274a8b2b7cf659E>
    80009434:	32a107a3          	sb	a0,815(sp)
    80009438:	a009                	j	8000943a <.LBB7_84+0x23c>
            )?;   
    8000943a:	32f14503          	lbu	a0,815(sp)
    8000943e:	8905                	andi	a0,a0,1
    80009440:	4581                	li	a1,0
    80009442:	00b50463          	beq	a0,a1,8000944a <.LBB7_84+0x24c>
    80009446:	a009                	j	80009448 <.LBB7_84+0x24a>
    80009448:	a811                	j	8000945c <.LBB7_84+0x25e>
            count += 1;
    8000944a:	2d813503          	ld	a0,728(sp)
    8000944e:	00150593          	addi	a1,a0,1
    80009452:	e4ae                	sd	a1,72(sp)
    80009454:	1ea5e663          	bltu	a1,a0,80009640 <.LBB7_94>
    80009458:	a839                	j	80009476 <.LBB7_84+0x278>
            self.copy_from_str(
    8000945a:	0000                	unimp
            )?;   
    8000945c:	00010097          	auipc	ra,0x10
    80009460:	d92080e7          	jalr	-622(ra) # 800191ee <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hed5e8d0c876c28a1E>
    80009464:	a009                	j	80009466 <.LBB7_84+0x268>
            self.copy_from_str(
    80009466:	00004097          	auipc	ra,0x4
    8000946a:	9e0080e7          	jalr	-1568(ra) # 8000ce46 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h175389a2c1795f33E>
    8000946e:	fa2a                	sd	a0,304(sp)
    80009470:	fe2e                	sd	a1,312(sp)
    80009472:	a009                	j	80009474 <.LBB7_84+0x276>
    80009474:	a209                	j	80009576 <.LBB7_86+0xc0>
            count += 1;
    80009476:	6526                	ld	a0,72(sp)
    80009478:	2ca13c23          	sd	a0,728(sp)
        loop {
    8000947c:	b37d                	j	8000922a <.LBB7_84+0x2c>
    8000947e:	02000593          	li	a1,32
            from_raw_parts(
    80009482:	7566                	ld	a0,120(sp)
    80009484:	00004097          	auipc	ra,0x4
    80009488:	3aa080e7          	jalr	938(ra) # 8000d82e <_ZN4core5slice3raw14from_raw_parts17hf229a0694b05997dE>
    8000948c:	32a13823          	sd	a0,816(sp)
    80009490:	32b13c23          	sd	a1,824(sp)
    80009494:	a009                	j	80009496 <.LBB7_84+0x298>
                MAXARG
            ) 
        };
        let ret = unsafe {
            exec(path, &argv).expect("Fail to exec")
    80009496:	33013683          	ld	a3,816(sp)
    8000949a:	33813703          	ld	a4,824(sp)
    8000949e:	0688                	addi	a0,sp,832
    800094a0:	75ce                	ld	a1,240(sp)
    800094a2:	762e                	ld	a2,232(sp)
    800094a4:	00001097          	auipc	ra,0x1
    800094a8:	496080e7          	jalr	1174(ra) # 8000a93a <_ZN6kernel7process3elf4exec17hfb03f42ee0323024E>
    800094ac:	a009                	j	800094ae <.LBB7_85>

00000000800094ae <.LBB7_85>:
    800094ae:	0001b597          	auipc	a1,0x1b
    800094b2:	69a58593          	addi	a1,a1,1690 # 80024b48 <.L__unnamed_20>

00000000800094b6 <.LBB7_86>:
    800094b6:	0001b697          	auipc	a3,0x1b
    800094ba:	6a268693          	addi	a3,a3,1698 # 80024b58 <.L__unnamed_21>
    800094be:	0688                	addi	a0,sp,832
    800094c0:	4631                	li	a2,12
    800094c2:	00003097          	auipc	ra,0x3
    800094c6:	72e080e7          	jalr	1838(ra) # 8000cbf0 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h521ec20a318e63beE>
    800094ca:	85aa                	mv	a1,a0
    800094cc:	40a13423          	sd	a0,1032(sp)
    800094d0:	e0ae                	sd	a1,64(sp)
    800094d2:	a009                	j	800094d4 <.LBB7_86+0x1e>
    800094d4:	4501                	li	a0,0
        };
    
        for i in 0..MAXARG {
    800094d6:	34a13c23          	sd	a0,856(sp)
    800094da:	02000593          	li	a1,32
    800094de:	36b13023          	sd	a1,864(sp)
    800094e2:	00016097          	auipc	ra,0x16
    800094e6:	5c8080e7          	jalr	1480(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    800094ea:	fc2a                	sd	a0,56(sp)
    800094ec:	f82e                	sd	a1,48(sp)
    800094ee:	a009                	j	800094f0 <.LBB7_86+0x3a>
    800094f0:	7562                	ld	a0,56(sp)
    800094f2:	36a13423          	sd	a0,872(sp)
    800094f6:	75c2                	ld	a1,48(sp)
    800094f8:	36b13823          	sd	a1,880(sp)
    800094fc:	a009                	j	800094fe <.LBB7_86+0x48>
    800094fe:	16a8                	addi	a0,sp,872
    80009500:	00016097          	auipc	ra,0x16
    80009504:	53c080e7          	jalr	1340(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    80009508:	36a13c23          	sd	a0,888(sp)
    8000950c:	38b13023          	sd	a1,896(sp)
    80009510:	a009                	j	80009512 <.LBB7_86+0x5c>
    80009512:	37813503          	ld	a0,888(sp)
    80009516:	4581                	li	a1,0
    80009518:	00b50463          	beq	a0,a1,80009520 <.LBB7_86+0x6a>
    8000951c:	a009                	j	8000951e <.LBB7_86+0x68>
    8000951e:	a039                	j	8000952c <.LBB7_86+0x76>
            if argv[i] != 0 as *mut u8 {
                unsafe{ drop_in_place(argv[i] as *mut RawPage) };
            }
        }
        
        Ok(ret)
    80009520:	6506                	ld	a0,64(sp)
    80009522:	fe2a                	sd	a0,312(sp)
    80009524:	4581                	li	a1,0
    80009526:	fa2e                	sd	a1,304(sp)
    }
    80009528:	a889                	j	8000957a <.LBB7_86+0xc4>
        for i in 0..MAXARG {
    8000952a:	0000                	unimp
    8000952c:	38013503          	ld	a0,896(sp)
    80009530:	40a13823          	sd	a0,1040(sp)
    80009534:	40a13c23          	sd	a0,1048(sp)
    80009538:	42a13023          	sd	a0,1056(sp)
            if argv[i] != 0 as *mut u8 {
    8000953c:	33813583          	ld	a1,824(sp)
    80009540:	f42a                	sd	a0,40(sp)
    80009542:	f02e                	sd	a1,32(sp)
    80009544:	12b57863          	bgeu	a0,a1,80009674 <.LBB7_97>
    80009548:	a009                	j	8000954a <.LBB7_86+0x94>
    8000954a:	33013503          	ld	a0,816(sp)
    8000954e:	75a2                	ld	a1,40(sp)
    80009550:	00359613          	slli	a2,a1,0x3
    80009554:	9532                	add	a0,a0,a2
    80009556:	6108                	ld	a0,0(a0)
    80009558:	4601                	li	a2,0
    8000955a:	00c50a63          	beq	a0,a2,8000956e <.LBB7_86+0xb8>
    8000955e:	a009                	j	80009560 <.LBB7_86+0xaa>
                unsafe{ drop_in_place(argv[i] as *mut RawPage) };
    80009560:	33813503          	ld	a0,824(sp)
    80009564:	75a2                	ld	a1,40(sp)
    80009566:	ec2a                	sd	a0,24(sp)
    80009568:	00a5e463          	bltu	a1,a0,80009570 <.LBB7_86+0xba>
    8000956c:	aa39                	j	8000968a <.LBB7_98>
            if argv[i] != 0 as *mut u8 {
    8000956e:	a019                	j	80009574 <.LBB7_86+0xbe>
                unsafe{ drop_in_place(argv[i] as *mut RawPage) };
    80009570:	a009                	j	80009572 <.LBB7_86+0xbc>
            if argv[i] != 0 as *mut u8 {
    80009572:	a009                	j	80009574 <.LBB7_86+0xbe>
        for i in 0..MAXARG {
    80009574:	b769                	j	800094fe <.LBB7_86+0x48>
    80009576:	a009                	j	80009578 <.LBB7_86+0xc2>
    }
    80009578:	a009                	j	8000957a <.LBB7_86+0xc4>
    8000957a:	7552                	ld	a0,304(sp)
    8000957c:	75f2                	ld	a1,312(sp)
    8000957e:	42813083          	ld	ra,1064(sp)
    80009582:	43010113          	addi	sp,sp,1072
    80009586:	8082                	ret
    80009588:	6572                	ld	a0,280(sp)
    8000958a:	7592                	ld	a1,288(sp)
    8000958c:	e82a                	sd	a0,16(sp)
    8000958e:	00b50a63          	beq	a0,a1,800095a2 <.LBB7_86+0xec>
    80009592:	a009                	j	80009594 <.LBB7_86+0xde>
    80009594:	4501                	li	a0,0
    80009596:	65c2                	ld	a1,16(sp)
    80009598:	e188                	sd	a0,0(a1)
    8000959a:	00858513          	addi	a0,a1,8
    8000959e:	ee2a                	sd	a0,280(sp)
    800095a0:	b7e5                	j	80009588 <.LBB7_86+0xd2>
    800095a2:	4501                	li	a0,0
        let addr = self.arg(0);
    800095a4:	75b2                	ld	a1,296(sp)
    800095a6:	e42a                	sd	a0,8(sp)
    800095a8:	852e                	mv	a0,a1
    800095aa:	65a2                	ld	a1,8(sp)
    800095ac:	00000097          	auipc	ra,0x0
    800095b0:	6be080e7          	jalr	1726(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    800095b4:	85aa                	mv	a1,a0
    800095b6:	3aa13823          	sd	a0,944(sp)
    800095ba:	e62e                	sd	a1,264(sp)
    800095bc:	b6e5                	j	800091a4 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_exec17hcc07b8af75fd8d2cE+0x30>

00000000800095be <.LBB7_87>:
                    if argv[i] != 0 as *mut u8 {
    800095be:	0001b617          	auipc	a2,0x1b
    800095c2:	49a60613          	addi	a2,a2,1178 # 80024a58 <.L__unnamed_22>
    800095c6:	02000593          	li	a1,32
    800095ca:	756a                	ld	a0,184(sp)
    800095cc:	00017097          	auipc	ra,0x17
    800095d0:	72a080e7          	jalr	1834(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800095d6 <.LBB7_88>:
                        unsafe{ drop_in_place(argv[i] as *mut RawPage) };
    800095d6:	0001b617          	auipc	a2,0x1b
    800095da:	49a60613          	addi	a2,a2,1178 # 80024a70 <.L__unnamed_23>
    800095de:	02000593          	li	a1,32
    800095e2:	756a                	ld	a0,184(sp)
    800095e4:	00017097          	auipc	ra,0x17
    800095e8:	712080e7          	jalr	1810(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800095ee <.LBB7_89>:
                user_argv + count * size_of::<usize>(), 
    800095ee:	0001b517          	auipc	a0,0x1b
    800095f2:	4b250513          	addi	a0,a0,1202 # 80024aa0 <str.0>

00000000800095f6 <.LBB7_90>:
    800095f6:	0001b617          	auipc	a2,0x1b
    800095fa:	49260613          	addi	a2,a2,1170 # 80024a88 <.L__unnamed_24>
    800095fe:	02100593          	li	a1,33
    80009602:	00017097          	auipc	ra,0x17
    80009606:	6c8080e7          	jalr	1736(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000960c <.LBB7_91>:
    8000960c:	0001b517          	auipc	a0,0x1b
    80009610:	4d450513          	addi	a0,a0,1236 # 80024ae0 <str.1>

0000000080009614 <.LBB7_92>:
    80009614:	0001b617          	auipc	a2,0x1b
    80009618:	4b460613          	addi	a2,a2,1204 # 80024ac8 <.L__unnamed_25>
    8000961c:	45f1                	li	a1,28
    8000961e:	00017097          	auipc	ra,0x17
    80009622:	6ac080e7          	jalr	1708(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080009628 <.LBB7_93>:
            argv[count] = mem;
    80009628:	0001b617          	auipc	a2,0x1b
    8000962c:	4d860613          	addi	a2,a2,1240 # 80024b00 <.L__unnamed_26>
    80009630:	02000593          	li	a1,32
    80009634:	7526                	ld	a0,104(sp)
    80009636:	00017097          	auipc	ra,0x17
    8000963a:	6c0080e7          	jalr	1728(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080009640 <.LBB7_94>:
            count += 1;
    80009640:	0001b517          	auipc	a0,0x1b
    80009644:	4a050513          	addi	a0,a0,1184 # 80024ae0 <str.1>

0000000080009648 <.LBB7_95>:
    80009648:	0001b617          	auipc	a2,0x1b
    8000964c:	4d060613          	addi	a2,a2,1232 # 80024b18 <.L__unnamed_27>
    80009650:	45f1                	li	a1,28
    80009652:	00017097          	auipc	ra,0x17
    80009656:	678080e7          	jalr	1656(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000965c <.LBB7_96>:
                argv[count] = 0 as *mut u8;
    8000965c:	0001b617          	auipc	a2,0x1b
    80009660:	4d460613          	addi	a2,a2,1236 # 80024b30 <.L__unnamed_28>
    80009664:	02000593          	li	a1,32
    80009668:	652a                	ld	a0,136(sp)
    8000966a:	00017097          	auipc	ra,0x17
    8000966e:	68c080e7          	jalr	1676(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080009674 <.LBB7_97>:
            if argv[i] != 0 as *mut u8 {
    80009674:	0001b617          	auipc	a2,0x1b
    80009678:	4fc60613          	addi	a2,a2,1276 # 80024b70 <.L__unnamed_29>
    8000967c:	7522                	ld	a0,40(sp)
    8000967e:	7582                	ld	a1,32(sp)
    80009680:	00017097          	auipc	ra,0x17
    80009684:	676080e7          	jalr	1654(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000968a <.LBB7_98>:
                unsafe{ drop_in_place(argv[i] as *mut RawPage) };
    8000968a:	0001b617          	auipc	a2,0x1b
    8000968e:	4fe60613          	addi	a2,a2,1278 # 80024b88 <.L__unnamed_30>
    80009692:	7522                	ld	a0,40(sp)
    80009694:	65e2                	ld	a1,24(sp)
    80009696:	00017097          	auipc	ra,0x17
    8000969a:	660080e7          	jalr	1632(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_mknod17h351a23d0c2d87ad4E:

00000000800096a0 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_mknod17h351a23d0c2d87ad4E>:

    pub fn sys_mknod(&self) -> SysResult {
    800096a0:	7145                	addi	sp,sp,-464
    800096a2:	e786                	sd	ra,456(sp)
    800096a4:	eb2a                	sd	a0,400(sp)
    800096a6:	07710593          	addi	a1,sp,119
    800096aa:	4601                	li	a2,0
    800096ac:	08000693          	li	a3,128
        let mut path: [u8; MAXPATH] = [0;MAXPATH];
    800096b0:	ecaa                	sd	a0,88(sp)
    800096b2:	852e                	mv	a0,a1
    800096b4:	85b2                	mv	a1,a2
    800096b6:	8636                	mv	a2,a3
    800096b8:	0001a097          	auipc	ra,0x1a
    800096bc:	1fa080e7          	jalr	506(ra) # 800238b2 <memset>
    800096c0:	4585                	li	a1,1
        let major = self.arg(1);
    800096c2:	6666                	ld	a2,88(sp)
    800096c4:	e8aa                	sd	a0,80(sp)
    800096c6:	8532                	mv	a0,a2
    800096c8:	00000097          	auipc	ra,0x0
    800096cc:	5a2080e7          	jalr	1442(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    800096d0:	85aa                	mv	a1,a0
    800096d2:	f72a                	sd	a0,424(sp)
    800096d4:	e4ae                	sd	a1,72(sp)
    800096d6:	a009                	j	800096d8 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_mknod17h351a23d0c2d87ad4E+0x38>
    800096d8:	4589                	li	a1,2
        let minor = self.arg(2);
    800096da:	6566                	ld	a0,88(sp)
    800096dc:	00000097          	auipc	ra,0x0
    800096e0:	58e080e7          	jalr	1422(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    800096e4:	85aa                	mv	a1,a0
    800096e6:	fb2a                	sd	a0,432(sp)
    800096e8:	e0ae                	sd	a1,64(sp)
    800096ea:	a009                	j	800096ec <.LBB8_26>

00000000800096ec <.LBB8_26>:
        LOG.begin_op();
    800096ec:	00051517          	auipc	a0,0x51
    800096f0:	97450513          	addi	a0,a0,-1676 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    800096f4:	0000e097          	auipc	ra,0xe
    800096f8:	9ea080e7          	jalr	-1558(ra) # 800170de <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E>
    800096fc:	a009                	j	800096fe <.LBB8_26+0x12>
    800096fe:	4501                	li	a0,0
        // Get file path
        let addr = self.arg(0);
    80009700:	65e6                	ld	a1,88(sp)
    80009702:	fc2a                	sd	a0,56(sp)
    80009704:	852e                	mv	a0,a1
    80009706:	75e2                	ld	a1,56(sp)
    80009708:	00000097          	auipc	ra,0x0
    8000970c:	562080e7          	jalr	1378(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80009710:	85aa                	mv	a1,a0
    80009712:	ff2a                	sd	a0,440(sp)
    80009714:	f82e                	sd	a1,48(sp)
    80009716:	a009                	j	80009718 <.LBB8_26+0x2c>
    80009718:	07710613          	addi	a2,sp,119
    8000971c:	08000513          	li	a0,128
        self.copy_from_str(addr, &mut path, MAXPATH)?;
    80009720:	65e6                	ld	a1,88(sp)
    80009722:	f42a                	sd	a0,40(sp)
    80009724:	852e                	mv	a0,a1
    80009726:	75c2                	ld	a1,48(sp)
    80009728:	76a2                	ld	a3,40(sp)
    8000972a:	7722                	ld	a4,40(sp)
    8000972c:	00000097          	auipc	ra,0x0
    80009730:	5f4080e7          	jalr	1524(ra) # 80009d20 <_ZN6kernel7syscall7Syscall13copy_from_str17h8808e2c630be93d6E>
    80009734:	f02a                	sd	a0,32(sp)
    80009736:	a009                	j	80009738 <.LBB8_26+0x4c>
    80009738:	7502                	ld	a0,32(sp)
    8000973a:	00003097          	auipc	ra,0x3
    8000973e:	7ec080e7          	jalr	2028(ra) # 8000cf26 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc0274a8b2b7cf659E>
    80009742:	0ea10ba3          	sb	a0,247(sp)
    80009746:	a009                	j	80009748 <.LBB8_26+0x5c>
    80009748:	0f714503          	lbu	a0,247(sp)
    8000974c:	8905                	andi	a0,a0,1
    8000974e:	4581                	li	a1,0
    80009750:	00b50463          	beq	a0,a1,80009758 <.LBB8_26+0x6c>
    80009754:	a009                	j	80009756 <.LBB8_26+0x6a>
    80009756:	a815                	j	8000978a <.LBB8_27+0x2c>
    80009758:	450d                	li	a0,3
        match ICACHE.create(
            &path, 
            InodeType::Device, 
    8000975a:	10a11b23          	sh	a0,278(sp)

000000008000975e <.LBB8_27>:
        match ICACHE.create(
    8000975e:	00051597          	auipc	a1,0x51
    80009762:	9d258593          	addi	a1,a1,-1582 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    80009766:	19b0                	addi	a2,sp,248
    80009768:	07710693          	addi	a3,sp,119
    8000976c:	08000713          	li	a4,128
    80009770:	ec2a                	sd	a0,24(sp)
    80009772:	8532                	mv	a0,a2
    80009774:	8636                	mv	a2,a3
    80009776:	86ba                	mv	a3,a4
    80009778:	6762                	ld	a4,24(sp)
    8000977a:	67a6                	ld	a5,72(sp)
    8000977c:	6806                	ld	a6,64(sp)
    8000977e:	00011097          	auipc	ra,0x11
    80009782:	07e080e7          	jalr	126(ra) # 8001a7fc <_ZN6kernel2fs5inode10InodeCache6create17h39b1ee7d5591cbfaE>
    80009786:	a839                	j	800097a4 <.LBB8_27+0x46>
        self.copy_from_str(addr, &mut path, MAXPATH)?;
    80009788:	0000                	unimp
    8000978a:	00010097          	auipc	ra,0x10
    8000978e:	a64080e7          	jalr	-1436(ra) # 800191ee <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hed5e8d0c876c28a1E>
    80009792:	a009                	j	80009794 <.LBB8_27+0x36>
    80009794:	00003097          	auipc	ra,0x3
    80009798:	6b2080e7          	jalr	1714(ra) # 8000ce46 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h175389a2c1795f33E>
    8000979c:	f0aa                	sd	a0,96(sp)
    8000979e:	f4ae                	sd	a1,104(sp)
    800097a0:	a009                	j	800097a2 <.LBB8_27+0x44>
                // println!("[Debug] create: 创建失败");
                Err(())
            }
        }
    
    }
    800097a2:	a855                	j	80009856 <.LBB8_31+0x1a>
            Ok(inode) => {
    800097a4:	756e                	ld	a0,248(sp)
    800097a6:	4581                	li	a1,0
    800097a8:	02b50663          	beq	a0,a1,800097d4 <.LBB8_28+0x18>
    800097ac:	a009                	j	800097ae <.LBB8_27+0x50>
            Err(err) => {
    800097ae:	6512                	ld	a0,256(sp)
    800097b0:	65b2                	ld	a1,264(sp)
    800097b2:	fe2a                	sd	a0,312(sp)
    800097b4:	e2ae                	sd	a1,320(sp)
    800097b6:	1a28                	addi	a0,sp,312
                println!("err: {}", err);
    800097b8:	e72a                	sd	a0,392(sp)
    800097ba:	e3aa                	sd	a0,448(sp)

00000000800097bc <.LBB8_28>:
    800097bc:	ffffe597          	auipc	a1,0xffffe
    800097c0:	5c658593          	addi	a1,a1,1478 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    800097c4:	ffffe097          	auipc	ra,0xffffe
    800097c8:	672080e7          	jalr	1650(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    800097cc:	e82a                	sd	a0,16(sp)
    800097ce:	e42e                	sd	a1,8(sp)
    800097d0:	a83d                	j	8000980e <.LBB8_29+0x32>
        match ICACHE.create(
    800097d2:	0000                	unimp
            Ok(inode) => {
    800097d4:	6532                	ld	a0,264(sp)
    800097d6:	f22a                	sd	a0,288(sp)
    800097d8:	6512                	ld	a0,256(sp)
    800097da:	ee2a                	sd	a0,280(sp)

00000000800097dc <.LBB8_29>:
                LOG.end_op();
    800097dc:	00051517          	auipc	a0,0x51
    800097e0:	88450513          	addi	a0,a0,-1916 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    800097e4:	0000e097          	auipc	ra,0xe
    800097e8:	eea080e7          	jalr	-278(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    800097ec:	a009                	j	800097ee <.LBB8_29+0x12>
                drop(inode);
    800097ee:	7512                	ld	a0,288(sp)
    800097f0:	fa2a                	sd	a0,304(sp)
    800097f2:	65f2                	ld	a1,280(sp)
    800097f4:	f62e                	sd	a1,296(sp)
    800097f6:	e02a                	sd	a0,0(sp)
    800097f8:	852e                	mv	a0,a1
    800097fa:	6582                	ld	a1,0(sp)
    800097fc:	00004097          	auipc	ra,0x4
    80009800:	0c2080e7          	jalr	194(ra) # 8000d8be <_ZN4core3mem4drop17h1cf58066601de0feE>
    80009804:	a009                	j	80009806 <.LBB8_29+0x2a>
    80009806:	4501                	li	a0,0
                Ok(0)
    80009808:	f4aa                	sd	a0,104(sp)
    8000980a:	f0aa                	sd	a0,96(sp)
        match ICACHE.create(
    8000980c:	a0a1                	j	80009854 <.LBB8_31+0x18>
                println!("err: {}", err);
    8000980e:	6542                	ld	a0,16(sp)
    80009810:	feaa                	sd	a0,376(sp)
    80009812:	65a2                	ld	a1,8(sp)
    80009814:	e32e                	sd	a1,384(sp)

0000000080009816 <.LBB8_30>:
    80009816:	0001b597          	auipc	a1,0x1b
    8000981a:	39258593          	addi	a1,a1,914 # 80024ba8 <.L__unnamed_31>
    8000981e:	02a8                	addi	a0,sp,328
    80009820:	4609                	li	a2,2
    80009822:	1ab4                	addi	a3,sp,376
    80009824:	4705                	li	a4,1
    80009826:	ffffc097          	auipc	ra,0xffffc
    8000982a:	efe080e7          	jalr	-258(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000982e:	a009                	j	80009830 <.LBB8_30+0x1a>
    80009830:	02a8                	addi	a0,sp,328
    80009832:	00007097          	auipc	ra,0x7
    80009836:	4be080e7          	jalr	1214(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000983a:	a009                	j	8000983c <.LBB8_31>

000000008000983c <.LBB8_31>:
                LOG.end_op();
    8000983c:	00051517          	auipc	a0,0x51
    80009840:	82450513          	addi	a0,a0,-2012 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80009844:	0000e097          	auipc	ra,0xe
    80009848:	e8a080e7          	jalr	-374(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000984c:	a009                	j	8000984e <.LBB8_31+0x12>
    8000984e:	4505                	li	a0,1
                Err(())
    80009850:	f0aa                	sd	a0,96(sp)
        match ICACHE.create(
    80009852:	a009                	j	80009854 <.LBB8_31+0x18>
    }
    80009854:	a009                	j	80009856 <.LBB8_31+0x1a>
    80009856:	7506                	ld	a0,96(sp)
    80009858:	75a6                	ld	a1,104(sp)
    8000985a:	60be                	ld	ra,456(sp)
    8000985c:	6179                	addi	sp,sp,464
    8000985e:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_close17hebfcc9c5f22f4589E:

0000000080009860 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_close17hebfcc9c5f22f4589E>:

    /// TODO: fix
    pub fn sys_close(&self) -> SysResult {
    80009860:	715d                	addi	sp,sp,-80
    80009862:	e486                	sd	ra,72(sp)
    80009864:	f82a                	sd	a0,48(sp)
    80009866:	4581                	li	a1,0
        let fd = self.arg(0);
    80009868:	ec2a                	sd	a0,24(sp)
    8000986a:	00000097          	auipc	ra,0x0
    8000986e:	400080e7          	jalr	1024(ra) # 80009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>
    80009872:	85aa                	mv	a1,a0
    80009874:	fc2a                	sd	a0,56(sp)
    80009876:	e82e                	sd	a1,16(sp)
    80009878:	a009                	j	8000987a <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_close17hebfcc9c5f22f4589E+0x1a>
        let pdata = unsafe{ &mut *self.process.data.get() };
    8000987a:	6562                	ld	a0,24(sp)
    8000987c:	610c                	ld	a1,0(a0)
    8000987e:	04058513          	addi	a0,a1,64
    80009882:	0000d097          	auipc	ra,0xd
    80009886:	106080e7          	jalr	262(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8000988a:	e42a                	sd	a0,8(sp)
    8000988c:	a009                	j	8000988e <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_close17hebfcc9c5f22f4589E+0x2e>
    8000988e:	6522                	ld	a0,8(sp)
    80009890:	e0aa                	sd	a0,64(sp)
        pdata.fd_close(fd);
    80009892:	65c2                	ld	a1,16(sp)
    80009894:	00008097          	auipc	ra,0x8
    80009898:	53e080e7          	jalr	1342(ra) # 80011dd2 <_ZN6kernel7process7process8ProcData8fd_close17hdf97917e0fe514e7E>
    8000989c:	a009                	j	8000989e <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_close17hebfcc9c5f22f4589E+0x3e>
    8000989e:	4501                	li	a0,0
        // file.close();
        Ok(0)
    800098a0:	f42a                	sd	a0,40(sp)
    800098a2:	f02a                	sd	a0,32(sp)
    }
    800098a4:	e02a                	sd	a0,0(sp)
    800098a6:	6582                	ld	a1,0(sp)
    800098a8:	60a6                	ld	ra,72(sp)
    800098aa:	6161                	addi	sp,sp,80
    800098ac:	8082                	ret

Disassembly of section .text.handle_syscall:

00000000800098ae <handle_syscall>:
pub const SYSCALL_NUM:usize = 21;
pub const SHUTDOWN: usize = 8;
pub const REBOOT: usize = 9;

#[no_mangle]
pub unsafe fn handle_syscall() {
    800098ae:	7119                	addi	sp,sp,-128
    let proc = CPU_MANAGER.myproc().unwrap();
    800098b0:	fc86                	sd	ra,120(sp)

00000000800098b2 <.LBB10_9>:
    800098b2:	00065517          	auipc	a0,0x65
    800098b6:	74e50513          	addi	a0,a0,1870 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    800098ba:	00014097          	auipc	ra,0x14
    800098be:	e7e080e7          	jalr	-386(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    800098c2:	f02a                	sd	a0,32(sp)
    800098c4:	a009                	j	800098c6 <.LBB10_10>

00000000800098c6 <.LBB10_10>:
    800098c6:	0001b597          	auipc	a1,0x1b
    800098ca:	31a58593          	addi	a1,a1,794 # 80024be0 <.L__unnamed_32>
    800098ce:	7502                	ld	a0,32(sp)
    800098d0:	0000f097          	auipc	ra,0xf
    800098d4:	298080e7          	jalr	664(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    800098d8:	85aa                	mv	a1,a0
    800098da:	e4aa                	sd	a0,72(sp)
    800098dc:	ec2e                	sd	a1,24(sp)
    800098de:	a009                	j	800098e0 <.LBB10_10+0x1a>
    let mut syscall = Syscall{ process: proc };
    800098e0:	6562                	ld	a0,24(sp)
    800098e2:	f82a                	sd	a0,48(sp)
    800098e4:	1808                	addi	a0,sp,48
    if let Ok(res) = syscall.syscall() {
    800098e6:	00000097          	auipc	ra,0x0
    800098ea:	1c6080e7          	jalr	454(ra) # 80009aac <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E>
    800098ee:	fc2a                	sd	a0,56(sp)
    800098f0:	e0ae                	sd	a1,64(sp)
    800098f2:	a009                	j	800098f4 <.LBB10_10+0x2e>
    800098f4:	7562                	ld	a0,56(sp)
    800098f6:	4581                	li	a1,0
    800098f8:	00b50c63          	beq	a0,a1,80009910 <.LBB10_10+0x4a>
    800098fc:	a009                	j	800098fe <.LBB10_10+0x38>
        let pdata = &mut *proc.data.get();
        let tf = &mut *pdata.trapframe;
        tf.a0 = res;
    }else{
        let pdata = &mut *proc.data.get();
    800098fe:	6562                	ld	a0,24(sp)
    80009900:	04050513          	addi	a0,a0,64
    80009904:	0000d097          	auipc	ra,0xd
    80009908:	084080e7          	jalr	132(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8000990c:	e82a                	sd	a0,16(sp)
    8000990e:	a02d                	j	80009938 <.LBB10_10+0x72>
    if let Ok(res) = syscall.syscall() {
    80009910:	6506                	ld	a0,64(sp)
    80009912:	f0aa                	sd	a0,96(sp)
        let pdata = &mut *proc.data.get();
    80009914:	65e2                	ld	a1,24(sp)
    80009916:	04058613          	addi	a2,a1,64
    8000991a:	e42a                	sd	a0,8(sp)
    8000991c:	8532                	mv	a0,a2
    8000991e:	0000d097          	auipc	ra,0xd
    80009922:	06a080e7          	jalr	106(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80009926:	e02a                	sd	a0,0(sp)
    80009928:	a009                	j	8000992a <.LBB10_10+0x64>
    8000992a:	6502                	ld	a0,0(sp)
    8000992c:	f4aa                	sd	a0,104(sp)
        let tf = &mut *pdata.trapframe;
    8000992e:	6d0c                	ld	a1,24(a0)
    80009930:	f8ae                	sd	a1,112(sp)
        tf.a0 = res;
    80009932:	6622                	ld	a2,8(sp)
    80009934:	f9b0                	sd	a2,112(a1)
    if let Ok(res) = syscall.syscall() {
    80009936:	a801                	j	80009946 <.LBB10_10+0x80>
        let pdata = &mut *proc.data.get();
    80009938:	6542                	ld	a0,16(sp)
    8000993a:	e8aa                	sd	a0,80(sp)
        let tf = &mut *pdata.trapframe;
    8000993c:	6d0c                	ld	a1,24(a0)
    8000993e:	ecae                	sd	a1,88(sp)
    80009940:	567d                	li	a2,-1
        tf.a0 = -1 as isize as usize
    80009942:	f9b0                	sd	a2,112(a1)
    if let Ok(res) = syscall.syscall() {
    80009944:	a009                	j	80009946 <.LBB10_10+0x80>
    }
    
}
    80009946:	70e6                	ld	ra,120(sp)
    80009948:	6109                	addi	sp,sp,128
    8000994a:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E:

000000008000994c <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E>:
    SysClose = 21,
    Unknown
}

impl SysCallID {
    pub fn new(id: usize) -> Self {
    8000994c:	1101                	addi	sp,sp,-32
    8000994e:	ec2a                	sd	a0,24(sp)
    80009950:	4585                	li	a1,1
        match id {
            1 => { Self::SysFork },
    80009952:	e42a                	sd	a0,8(sp)
    80009954:	0cb50a63          	beq	a0,a1,80009a28 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xdc>
    80009958:	a009                	j	8000995a <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xe>
    8000995a:	4509                	li	a0,2
    8000995c:	65a2                	ld	a1,8(sp)
    8000995e:	0ca58863          	beq	a1,a0,80009a2e <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xe2>
    80009962:	a009                	j	80009964 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x18>
    80009964:	450d                	li	a0,3
    80009966:	65a2                	ld	a1,8(sp)
    80009968:	0ca58663          	beq	a1,a0,80009a34 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xe8>
    8000996c:	a009                	j	8000996e <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x22>
    8000996e:	4511                	li	a0,4
    80009970:	65a2                	ld	a1,8(sp)
    80009972:	0ca58463          	beq	a1,a0,80009a3a <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xee>
    80009976:	a009                	j	80009978 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x2c>
    80009978:	4515                	li	a0,5
    8000997a:	65a2                	ld	a1,8(sp)
    8000997c:	0ca58263          	beq	a1,a0,80009a40 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xf4>
    80009980:	a009                	j	80009982 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x36>
    80009982:	4519                	li	a0,6
    80009984:	65a2                	ld	a1,8(sp)
    80009986:	0ca58063          	beq	a1,a0,80009a46 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xfa>
    8000998a:	a009                	j	8000998c <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x40>
    8000998c:	451d                	li	a0,7
    8000998e:	65a2                	ld	a1,8(sp)
    80009990:	0aa58e63          	beq	a1,a0,80009a4c <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x100>
    80009994:	a009                	j	80009996 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x4a>
    80009996:	4521                	li	a0,8
    80009998:	65a2                	ld	a1,8(sp)
    8000999a:	0aa58c63          	beq	a1,a0,80009a52 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x106>
    8000999e:	a009                	j	800099a0 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x54>
    800099a0:	4525                	li	a0,9
    800099a2:	65a2                	ld	a1,8(sp)
    800099a4:	0aa58a63          	beq	a1,a0,80009a58 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x10c>
    800099a8:	a009                	j	800099aa <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x5e>
    800099aa:	4529                	li	a0,10
    800099ac:	65a2                	ld	a1,8(sp)
    800099ae:	0aa58863          	beq	a1,a0,80009a5e <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x112>
    800099b2:	a009                	j	800099b4 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x68>
    800099b4:	452d                	li	a0,11
    800099b6:	65a2                	ld	a1,8(sp)
    800099b8:	0aa58663          	beq	a1,a0,80009a64 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x118>
    800099bc:	a009                	j	800099be <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x72>
    800099be:	4531                	li	a0,12
    800099c0:	65a2                	ld	a1,8(sp)
    800099c2:	0aa58463          	beq	a1,a0,80009a6a <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x11e>
    800099c6:	a009                	j	800099c8 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x7c>
    800099c8:	4535                	li	a0,13
    800099ca:	65a2                	ld	a1,8(sp)
    800099cc:	0aa58263          	beq	a1,a0,80009a70 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x124>
    800099d0:	a009                	j	800099d2 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x86>
    800099d2:	4539                	li	a0,14
    800099d4:	65a2                	ld	a1,8(sp)
    800099d6:	0aa58063          	beq	a1,a0,80009a76 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x12a>
    800099da:	a009                	j	800099dc <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x90>
    800099dc:	453d                	li	a0,15
    800099de:	65a2                	ld	a1,8(sp)
    800099e0:	08a58e63          	beq	a1,a0,80009a7c <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x130>
    800099e4:	a009                	j	800099e6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x9a>
    800099e6:	4541                	li	a0,16
    800099e8:	65a2                	ld	a1,8(sp)
    800099ea:	08a58c63          	beq	a1,a0,80009a82 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x136>
    800099ee:	a009                	j	800099f0 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xa4>
    800099f0:	4545                	li	a0,17
    800099f2:	65a2                	ld	a1,8(sp)
    800099f4:	08a58a63          	beq	a1,a0,80009a88 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x13c>
    800099f8:	a009                	j	800099fa <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xae>
    800099fa:	4549                	li	a0,18
    800099fc:	65a2                	ld	a1,8(sp)
    800099fe:	08a58863          	beq	a1,a0,80009a8e <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x142>
    80009a02:	a009                	j	80009a04 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xb8>
    80009a04:	454d                	li	a0,19
    80009a06:	65a2                	ld	a1,8(sp)
    80009a08:	08a58663          	beq	a1,a0,80009a94 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x148>
    80009a0c:	a009                	j	80009a0e <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xc2>
    80009a0e:	4551                	li	a0,20
    80009a10:	65a2                	ld	a1,8(sp)
    80009a12:	08a58463          	beq	a1,a0,80009a9a <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x14e>
    80009a16:	a009                	j	80009a18 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xcc>
    80009a18:	4555                	li	a0,21
    80009a1a:	65a2                	ld	a1,8(sp)
    80009a1c:	08a58263          	beq	a1,a0,80009aa0 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x154>
    80009a20:	a009                	j	80009a22 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0xd6>
    80009a22:	4559                	li	a0,22
            17 => { Self::SysMknod },
            18 => { Self::SysUnlink },
            19 => { Self::SysLink },
            20 => { Self::SysMkdir },
            21 => { Self::SysClose }
            _ => { Self::Unknown }
    80009a24:	e82a                	sd	a0,16(sp)
        match id {
    80009a26:	a041                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a28:	4505                	li	a0,1
            1 => { Self::SysFork },
    80009a2a:	e82a                	sd	a0,16(sp)
        match id {
    80009a2c:	a8ad                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a2e:	4509                	li	a0,2
            2 => { Self::SysExit },
    80009a30:	e82a                	sd	a0,16(sp)
        match id {
    80009a32:	a895                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a34:	450d                	li	a0,3
            3 => { Self::SysWait },
    80009a36:	e82a                	sd	a0,16(sp)
        match id {
    80009a38:	a0bd                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a3a:	4511                	li	a0,4
            4 => { Self::SysPipe },
    80009a3c:	e82a                	sd	a0,16(sp)
        match id {
    80009a3e:	a0a5                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a40:	4515                	li	a0,5
            5 => { Self::SysRead },
    80009a42:	e82a                	sd	a0,16(sp)
        match id {
    80009a44:	a08d                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a46:	4519                	li	a0,6
            6 => { Self::SysKill },
    80009a48:	e82a                	sd	a0,16(sp)
        match id {
    80009a4a:	a8b1                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a4c:	451d                	li	a0,7
            7 => { Self::SysExec },
    80009a4e:	e82a                	sd	a0,16(sp)
        match id {
    80009a50:	a899                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a52:	4521                	li	a0,8
            8 => { Self::SysFstat },
    80009a54:	e82a                	sd	a0,16(sp)
        match id {
    80009a56:	a881                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a58:	4525                	li	a0,9
            9 => { Self::SysChdir },
    80009a5a:	e82a                	sd	a0,16(sp)
        match id {
    80009a5c:	a0a9                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a5e:	4529                	li	a0,10
            10 => { Self::SysDup },
    80009a60:	e82a                	sd	a0,16(sp)
        match id {
    80009a62:	a091                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a64:	452d                	li	a0,11
            11 => { Self::SysGetPid },
    80009a66:	e82a                	sd	a0,16(sp)
        match id {
    80009a68:	a83d                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a6a:	4531                	li	a0,12
            12 => { Self::SysSbrk },
    80009a6c:	e82a                	sd	a0,16(sp)
        match id {
    80009a6e:	a825                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a70:	4535                	li	a0,13
            13 => { Self::SysSleep },
    80009a72:	e82a                	sd	a0,16(sp)
        match id {
    80009a74:	a80d                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a76:	4539                	li	a0,14
            14 => { Self::SysUptime },
    80009a78:	e82a                	sd	a0,16(sp)
        match id {
    80009a7a:	a035                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a7c:	453d                	li	a0,15
            15 => { Self::SysOpen },
    80009a7e:	e82a                	sd	a0,16(sp)
        match id {
    80009a80:	a01d                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a82:	4541                	li	a0,16
            16 => { Self::SysWrite },
    80009a84:	e82a                	sd	a0,16(sp)
        match id {
    80009a86:	a005                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a88:	4545                	li	a0,17
            17 => { Self::SysMknod },
    80009a8a:	e82a                	sd	a0,16(sp)
        match id {
    80009a8c:	a829                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a8e:	4549                	li	a0,18
            18 => { Self::SysUnlink },
    80009a90:	e82a                	sd	a0,16(sp)
        match id {
    80009a92:	a811                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a94:	454d                	li	a0,19
            19 => { Self::SysLink },
    80009a96:	e82a                	sd	a0,16(sp)
        match id {
    80009a98:	a039                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009a9a:	4551                	li	a0,20
            20 => { Self::SysMkdir },
    80009a9c:	e82a                	sd	a0,16(sp)
        match id {
    80009a9e:	a021                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
    80009aa0:	4555                	li	a0,21
            21 => { Self::SysClose }
    80009aa2:	e82a                	sd	a0,16(sp)
        match id {
    80009aa4:	a009                	j	80009aa6 <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E+0x15a>
        }
    }
    80009aa6:	6542                	ld	a0,16(sp)
    80009aa8:	6105                	addi	sp,sp,32
    80009aaa:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E:

0000000080009aac <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E>:
pub struct Syscall<'a>{
    process: &'a mut Process
}

impl Syscall<'_> {
    pub fn syscall(&mut self) -> SysResult {
    80009aac:	7131                	addi	sp,sp,-192
    80009aae:	fd06                	sd	ra,184(sp)
    80009ab0:	ed2a                	sd	a0,152(sp)
        let pdata = self.process.data.get_mut();
    80009ab2:	610c                	ld	a1,0(a0)
    80009ab4:	04058593          	addi	a1,a1,64
    80009ab8:	f82a                	sd	a0,48(sp)
    80009aba:	852e                	mv	a0,a1
    80009abc:	0000d097          	auipc	ra,0xd
    80009ac0:	f0e080e7          	jalr	-242(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    80009ac4:	85aa                	mv	a1,a0
    80009ac6:	f12a                	sd	a0,160(sp)
    80009ac8:	f42e                	sd	a1,40(sp)
    80009aca:	a009                	j	80009acc <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x20>
        // 获取进程的trapframe
        let tf = unsafe{ &mut *pdata.trapframe };
    80009acc:	7522                	ld	a0,40(sp)
    80009ace:	6d0c                	ld	a1,24(a0)
    80009ad0:	f52e                	sd	a1,168(sp)
        // 获取系统调用 id 号
        let sys_id = SysCallID::new(tf.a7);
    80009ad2:	75c8                	ld	a0,168(a1)
    80009ad4:	00000097          	auipc	ra,0x0
    80009ad8:	e78080e7          	jalr	-392(ra) # 8000994c <_ZN6kernel7syscall9SysCallID3new17he4ba658d909ca118E>
    80009adc:	e4aa                	sd	a0,72(sp)
    80009ade:	a009                	j	80009ae0 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x34>
        
        match sys_id {
            SysCallID::SysFork => {
    80009ae0:	6526                	ld	a0,72(sp)
    80009ae2:	4585                	li	a1,1
    80009ae4:	f02a                	sd	a0,32(sp)
    80009ae6:	08b50363          	beq	a0,a1,80009b6c <.LBB12_38+0x16>
    80009aea:	a009                	j	80009aec <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x40>
    80009aec:	4509                	li	a0,2
    80009aee:	7582                	ld	a1,32(sp)
    80009af0:	08a58763          	beq	a1,a0,80009b7e <.LBB12_38+0x28>
    80009af4:	a009                	j	80009af6 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x4a>
    80009af6:	450d                	li	a0,3
    80009af8:	7582                	ld	a1,32(sp)
    80009afa:	08a58b63          	beq	a1,a0,80009b90 <.LBB12_38+0x3a>
    80009afe:	a009                	j	80009b00 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x54>
    80009b00:	4515                	li	a0,5
    80009b02:	7582                	ld	a1,32(sp)
    80009b04:	08a58f63          	beq	a1,a0,80009ba2 <.LBB12_38+0x4c>
    80009b08:	a009                	j	80009b0a <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x5e>
    80009b0a:	451d                	li	a0,7
    80009b0c:	7582                	ld	a1,32(sp)
    80009b0e:	0ca58563          	beq	a1,a0,80009bd8 <.LBB12_38+0x82>
    80009b12:	a009                	j	80009b14 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x68>
    80009b14:	4529                	li	a0,10
    80009b16:	7582                	ld	a1,32(sp)
    80009b18:	0ea58b63          	beq	a1,a0,80009c0e <.LBB12_38+0xb8>
    80009b1c:	a009                	j	80009b1e <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x72>
    80009b1e:	4539                	li	a0,14
    80009b20:	7582                	ld	a1,32(sp)
    80009b22:	0ea58f63          	beq	a1,a0,80009c20 <.LBB12_38+0xca>
    80009b26:	a009                	j	80009b28 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x7c>
    80009b28:	453d                	li	a0,15
    80009b2a:	7582                	ld	a1,32(sp)
    80009b2c:	08a58d63          	beq	a1,a0,80009bc6 <.LBB12_38+0x70>
    80009b30:	a009                	j	80009b32 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x86>
    80009b32:	4541                	li	a0,16
    80009b34:	7582                	ld	a1,32(sp)
    80009b36:	06a58f63          	beq	a1,a0,80009bb4 <.LBB12_38+0x5e>
    80009b3a:	a009                	j	80009b3c <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x90>
    80009b3c:	4545                	li	a0,17
    80009b3e:	7582                	ld	a1,32(sp)
    80009b40:	0aa58563          	beq	a1,a0,80009bea <.LBB12_38+0x94>
    80009b44:	a009                	j	80009b46 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0x9a>
    80009b46:	4555                	li	a0,21
    80009b48:	7582                	ld	a1,32(sp)
    80009b4a:	0aa58963          	beq	a1,a0,80009bfc <.LBB12_38+0xa6>
    80009b4e:	a009                	j	80009b50 <_ZN6kernel7syscall7Syscall7syscall17hfde6dbe300e55486E+0xa4>
    80009b50:	00a8                	addi	a0,sp,72

            SysCallID::SysUptime => {
                Ok(0)
            }   
            _ => {
                panic!("无效的系统调用id: {:?}", sys_id);
    80009b52:	e92a                	sd	a0,144(sp)
    80009b54:	f92a                	sd	a0,176(sp)

0000000080009b56 <.LBB12_38>:
    80009b56:	00000597          	auipc	a1,0x0
    80009b5a:	42458593          	addi	a1,a1,1060 # 80009f7a <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE>
    80009b5e:	ffffe097          	auipc	ra,0xffffe
    80009b62:	294080e7          	jalr	660(ra) # 80007df2 <_ZN4core3fmt10ArgumentV13new17h8309c5c5260def1dE>
    80009b66:	ec2a                	sd	a0,24(sp)
    80009b68:	e82e                	sd	a1,16(sp)
    80009b6a:	a87d                	j	80009c28 <.LBB12_38+0xd2>
                self.fork()
    80009b6c:	7542                	ld	a0,48(sp)
    80009b6e:	fffff097          	auipc	ra,0xfffff
    80009b72:	be8080e7          	jalr	-1048(ra) # 80008756 <_ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$4fork17h5b72687c69807ad4E>
    80009b76:	fc2a                	sd	a0,56(sp)
    80009b78:	e0ae                	sd	a1,64(sp)
    80009b7a:	a009                	j	80009b7c <.LBB12_38+0x26>
        match sys_id {
    80009b7c:	a0d5                	j	80009c60 <.LBB12_40+0x14>
                self.sys_exit()
    80009b7e:	7542                	ld	a0,48(sp)
    80009b80:	fffff097          	auipc	ra,0xfffff
    80009b84:	c50080e7          	jalr	-944(ra) # 800087d0 <_ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_exit17hb2bc1e2bf352ba87E>
    80009b88:	fc2a                	sd	a0,56(sp)
    80009b8a:	e0ae                	sd	a1,64(sp)
    80009b8c:	a009                	j	80009b8e <.LBB12_38+0x38>
        match sys_id {
    80009b8e:	a8c9                	j	80009c60 <.LBB12_40+0x14>
                self.sys_wait()
    80009b90:	7542                	ld	a0,48(sp)
    80009b92:	fffff097          	auipc	ra,0xfffff
    80009b96:	c6a080e7          	jalr	-918(ra) # 800087fc <_ZN6kernel7syscall4proc42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_wait17hb5772d47328e4b27E>
    80009b9a:	fc2a                	sd	a0,56(sp)
    80009b9c:	e0ae                	sd	a1,64(sp)
    80009b9e:	a009                	j	80009ba0 <.LBB12_38+0x4a>
        match sys_id {
    80009ba0:	a0c1                	j	80009c60 <.LBB12_40+0x14>
                self.sys_read()
    80009ba2:	7542                	ld	a0,48(sp)
    80009ba4:	fffff097          	auipc	ra,0xfffff
    80009ba8:	dba080e7          	jalr	-582(ra) # 8000895e <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_read17h06f86f681b95534bE>
    80009bac:	fc2a                	sd	a0,56(sp)
    80009bae:	e0ae                	sd	a1,64(sp)
    80009bb0:	a009                	j	80009bb2 <.LBB12_38+0x5c>
        match sys_id {
    80009bb2:	a07d                	j	80009c60 <.LBB12_40+0x14>
                self.sys_write()
    80009bb4:	7542                	ld	a0,48(sp)
    80009bb6:	fffff097          	auipc	ra,0xfffff
    80009bba:	ef6080e7          	jalr	-266(ra) # 80008aac <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_write17hcf23d463018fd643E>
    80009bbe:	fc2a                	sd	a0,56(sp)
    80009bc0:	e0ae                	sd	a1,64(sp)
    80009bc2:	a009                	j	80009bc4 <.LBB12_38+0x6e>
        match sys_id {
    80009bc4:	a871                	j	80009c60 <.LBB12_40+0x14>
                self.sys_open()
    80009bc6:	7542                	ld	a0,48(sp)
    80009bc8:	fffff097          	auipc	ra,0xfffff
    80009bcc:	032080e7          	jalr	50(ra) # 80008bfa <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_open17h6dc3a5008dd9f979E>
    80009bd0:	fc2a                	sd	a0,56(sp)
    80009bd2:	e0ae                	sd	a1,64(sp)
    80009bd4:	a009                	j	80009bd6 <.LBB12_38+0x80>
        match sys_id {
    80009bd6:	a069                	j	80009c60 <.LBB12_40+0x14>
                self.sys_exec()
    80009bd8:	7542                	ld	a0,48(sp)
    80009bda:	fffff097          	auipc	ra,0xfffff
    80009bde:	59a080e7          	jalr	1434(ra) # 80009174 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$8sys_exec17hcc07b8af75fd8d2cE>
    80009be2:	fc2a                	sd	a0,56(sp)
    80009be4:	e0ae                	sd	a1,64(sp)
    80009be6:	a009                	j	80009be8 <.LBB12_38+0x92>
        match sys_id {
    80009be8:	a8a5                	j	80009c60 <.LBB12_40+0x14>
                self.sys_mknod()
    80009bea:	7542                	ld	a0,48(sp)
    80009bec:	00000097          	auipc	ra,0x0
    80009bf0:	ab4080e7          	jalr	-1356(ra) # 800096a0 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_mknod17h351a23d0c2d87ad4E>
    80009bf4:	fc2a                	sd	a0,56(sp)
    80009bf6:	e0ae                	sd	a1,64(sp)
    80009bf8:	a009                	j	80009bfa <.LBB12_38+0xa4>
        match sys_id {
    80009bfa:	a09d                	j	80009c60 <.LBB12_40+0x14>
                self.sys_close()
    80009bfc:	7542                	ld	a0,48(sp)
    80009bfe:	00000097          	auipc	ra,0x0
    80009c02:	c62080e7          	jalr	-926(ra) # 80009860 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$9sys_close17hebfcc9c5f22f4589E>
    80009c06:	fc2a                	sd	a0,56(sp)
    80009c08:	e0ae                	sd	a1,64(sp)
    80009c0a:	a009                	j	80009c0c <.LBB12_38+0xb6>
        match sys_id {
    80009c0c:	a891                	j	80009c60 <.LBB12_40+0x14>
                self.sys_dup()
    80009c0e:	7542                	ld	a0,48(sp)
    80009c10:	fffff097          	auipc	ra,0xfffff
    80009c14:	c46080e7          	jalr	-954(ra) # 80008856 <_ZN6kernel7syscall4file42_$LT$impl$u20$kernel..syscall..Syscall$GT$7sys_dup17hb4faa9e0001423ccE>
    80009c18:	fc2a                	sd	a0,56(sp)
    80009c1a:	e0ae                	sd	a1,64(sp)
    80009c1c:	a009                	j	80009c1e <.LBB12_38+0xc8>
        match sys_id {
    80009c1e:	a089                	j	80009c60 <.LBB12_40+0x14>
    80009c20:	4501                	li	a0,0
                Ok(0)
    80009c22:	e0aa                	sd	a0,64(sp)
    80009c24:	fc2a                	sd	a0,56(sp)
        match sys_id {
    80009c26:	a82d                	j	80009c60 <.LBB12_40+0x14>
                panic!("无效的系统调用id: {:?}", sys_id);
    80009c28:	6562                	ld	a0,24(sp)
    80009c2a:	e12a                	sd	a0,128(sp)
    80009c2c:	65c2                	ld	a1,16(sp)
    80009c2e:	e52e                	sd	a1,136(sp)

0000000080009c30 <.LBB12_39>:
    80009c30:	0001b597          	auipc	a1,0x1b
    80009c34:	fe858593          	addi	a1,a1,-24 # 80024c18 <.L__unnamed_33>
    80009c38:	0888                	addi	a0,sp,80
    80009c3a:	0114                	addi	a3,sp,128
    80009c3c:	4605                	li	a2,1
    80009c3e:	e432                	sd	a2,8(sp)
    80009c40:	6722                	ld	a4,8(sp)
    80009c42:	ffffc097          	auipc	ra,0xffffc
    80009c46:	ae2080e7          	jalr	-1310(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80009c4a:	a009                	j	80009c4c <.LBB12_40>

0000000080009c4c <.LBB12_40>:
    80009c4c:	0001b597          	auipc	a1,0x1b
    80009c50:	fdc58593          	addi	a1,a1,-36 # 80024c28 <.L__unnamed_34>
    80009c54:	0888                	addi	a0,sp,80
    80009c56:	00017097          	auipc	ra,0x17
    80009c5a:	0e0080e7          	jalr	224(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80009c5e:	0000                	unimp
            }
        }
    }
    80009c60:	7562                	ld	a0,56(sp)
    80009c62:	6586                	ld	a1,64(sp)
    80009c64:	70ea                	ld	ra,184(sp)
    80009c66:	6129                	addi	sp,sp,192
    80009c68:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E:

0000000080009c6a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E>:

    /// 获取第n个位置的参数
    pub fn arg(&self, id: usize) -> usize {
    80009c6a:	715d                	addi	sp,sp,-80
    80009c6c:	e486                	sd	ra,72(sp)
    80009c6e:	f42a                	sd	a0,40(sp)
    80009c70:	f82e                	sd	a1,48(sp)
        let pdata = unsafe{ &mut* self.process.data.get() };
    80009c72:	6108                	ld	a0,0(a0)
    80009c74:	04050513          	addi	a0,a0,64
    80009c78:	ec2e                	sd	a1,24(sp)
    80009c7a:	0000d097          	auipc	ra,0xd
    80009c7e:	d0e080e7          	jalr	-754(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80009c82:	e82a                	sd	a0,16(sp)
    80009c84:	a009                	j	80009c86 <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E+0x1c>
    80009c86:	6542                	ld	a0,16(sp)
    80009c88:	fc2a                	sd	a0,56(sp)
        let tf = unsafe{ &*pdata.trapframe };
    80009c8a:	6d0c                	ld	a1,24(a0)
    80009c8c:	e0ae                	sd	a1,64(sp)
    80009c8e:	4601                	li	a2,0
        match id {
            0 => tf.a0,
    80009c90:	66e2                	ld	a3,24(sp)
    80009c92:	e42e                	sd	a1,8(sp)
    80009c94:	04c68a63          	beq	a3,a2,80009ce8 <.LBB13_16+0x14>
    80009c98:	a009                	j	80009c9a <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E+0x30>
    80009c9a:	4505                	li	a0,1
    80009c9c:	65e2                	ld	a1,24(sp)
    80009c9e:	04a58963          	beq	a1,a0,80009cf0 <.LBB13_16+0x1c>
    80009ca2:	a009                	j	80009ca4 <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E+0x3a>
    80009ca4:	4509                	li	a0,2
    80009ca6:	65e2                	ld	a1,24(sp)
    80009ca8:	04a58863          	beq	a1,a0,80009cf8 <.LBB13_16+0x24>
    80009cac:	a009                	j	80009cae <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E+0x44>
    80009cae:	450d                	li	a0,3
    80009cb0:	65e2                	ld	a1,24(sp)
    80009cb2:	04a58763          	beq	a1,a0,80009d00 <.LBB13_16+0x2c>
    80009cb6:	a009                	j	80009cb8 <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E+0x4e>
    80009cb8:	4511                	li	a0,4
    80009cba:	65e2                	ld	a1,24(sp)
    80009cbc:	04a58663          	beq	a1,a0,80009d08 <.LBB13_16+0x34>
    80009cc0:	a009                	j	80009cc2 <_ZN6kernel7syscall7Syscall3arg17h69c5cda5201935b3E+0x58>
    80009cc2:	4515                	li	a0,5
    80009cc4:	65e2                	ld	a1,24(sp)
    80009cc6:	04a58563          	beq	a1,a0,80009d10 <.LBB13_16+0x3c>
    80009cca:	a009                	j	80009ccc <.LBB13_15>

0000000080009ccc <.LBB13_15>:
            1 => tf.a1,
            2 => tf.a2,
            3 => tf.a3,
            4 => tf.a4,
            5 => tf.a5,
            _ => panic!("不能获取参数")
    80009ccc:	0001b517          	auipc	a0,0x1b
    80009cd0:	f7450513          	addi	a0,a0,-140 # 80024c40 <.L__unnamed_35>

0000000080009cd4 <.LBB13_16>:
    80009cd4:	0001b617          	auipc	a2,0x1b
    80009cd8:	f8460613          	addi	a2,a2,-124 # 80024c58 <.L__unnamed_36>
    80009cdc:	45c9                	li	a1,18
    80009cde:	00017097          	auipc	ra,0x17
    80009ce2:	fec080e7          	jalr	-20(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80009ce6:	0000                	unimp
            0 => tf.a0,
    80009ce8:	6522                	ld	a0,8(sp)
    80009cea:	792c                	ld	a1,112(a0)
    80009cec:	f02e                	sd	a1,32(sp)
        match id {
    80009cee:	a02d                	j	80009d18 <.LBB13_16+0x44>
            1 => tf.a1,
    80009cf0:	6522                	ld	a0,8(sp)
    80009cf2:	7d2c                	ld	a1,120(a0)
    80009cf4:	f02e                	sd	a1,32(sp)
        match id {
    80009cf6:	a00d                	j	80009d18 <.LBB13_16+0x44>
            2 => tf.a2,
    80009cf8:	6522                	ld	a0,8(sp)
    80009cfa:	614c                	ld	a1,128(a0)
    80009cfc:	f02e                	sd	a1,32(sp)
        match id {
    80009cfe:	a829                	j	80009d18 <.LBB13_16+0x44>
            3 => tf.a3,
    80009d00:	6522                	ld	a0,8(sp)
    80009d02:	654c                	ld	a1,136(a0)
    80009d04:	f02e                	sd	a1,32(sp)
        match id {
    80009d06:	a809                	j	80009d18 <.LBB13_16+0x44>
            4 => tf.a4,
    80009d08:	6522                	ld	a0,8(sp)
    80009d0a:	694c                	ld	a1,144(a0)
    80009d0c:	f02e                	sd	a1,32(sp)
        match id {
    80009d0e:	a029                	j	80009d18 <.LBB13_16+0x44>
            5 => tf.a5,
    80009d10:	6522                	ld	a0,8(sp)
    80009d12:	6d4c                	ld	a1,152(a0)
    80009d14:	f02e                	sd	a1,32(sp)
        match id {
    80009d16:	a009                	j	80009d18 <.LBB13_16+0x44>
        }
    }
    80009d18:	7502                	ld	a0,32(sp)
    80009d1a:	60a6                	ld	ra,72(sp)
    80009d1c:	6161                	addi	sp,sp,80
    80009d1e:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall7Syscall13copy_from_str17h8808e2c630be93d6E:

0000000080009d20 <_ZN6kernel7syscall7Syscall13copy_from_str17h8808e2c630be93d6E>:

    /// 通过地址获取str并将其填入到缓冲区中
    pub fn copy_from_str(&self, addr: usize, buf: &mut [u8], max_len: usize) -> Result<(), ()> {
    80009d20:	7115                	addi	sp,sp,-224
    80009d22:	ed86                	sd	ra,216(sp)
    80009d24:	f12a                	sd	a0,160(sp)
    80009d26:	f52e                	sd	a1,168(sp)
    80009d28:	f932                	sd	a2,176(sp)
    80009d2a:	fd36                	sd	a3,184(sp)
    80009d2c:	e1ba                	sd	a4,192(sp)
        let pdata = unsafe{ &mut *self.process.data.get() };
    80009d2e:	6108                	ld	a0,0(a0)
    80009d30:	04050513          	addi	a0,a0,64
    80009d34:	e8ba                	sd	a4,80(sp)
    80009d36:	e4b6                	sd	a3,72(sp)
    80009d38:	e0b2                	sd	a2,64(sp)
    80009d3a:	fc2e                	sd	a1,56(sp)
    80009d3c:	0000d097          	auipc	ra,0xd
    80009d40:	c4c080e7          	jalr	-948(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80009d44:	f82a                	sd	a0,48(sp)
    80009d46:	a009                	j	80009d48 <_ZN6kernel7syscall7Syscall13copy_from_str17h8808e2c630be93d6E+0x28>
    80009d48:	7542                	ld	a0,48(sp)
    80009d4a:	e5aa                	sd	a0,200(sp)
        let pgt = pdata.pagetable.as_mut().unwrap();
    80009d4c:	0541                	addi	a0,a0,16
    80009d4e:	0000f097          	auipc	ra,0xf
    80009d52:	ae6080e7          	jalr	-1306(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    80009d56:	f42a                	sd	a0,40(sp)
    80009d58:	a009                	j	80009d5a <.LBB14_12>

0000000080009d5a <.LBB14_12>:
    80009d5a:	0001b597          	auipc	a1,0x1b
    80009d5e:	f1658593          	addi	a1,a1,-234 # 80024c70 <.L__unnamed_37>
    80009d62:	7522                	ld	a0,40(sp)
    80009d64:	0000f097          	auipc	ra,0xf
    80009d68:	f12080e7          	jalr	-238(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    80009d6c:	85aa                	mv	a1,a0
    80009d6e:	e9aa                	sd	a0,208(sp)
    80009d70:	f02e                	sd	a1,32(sp)
    80009d72:	a009                	j	80009d74 <.LBB14_12+0x1a>
        if pgt.copy_in_str(buf.as_mut_ptr(), addr, max_len).is_err() {
    80009d74:	7502                	ld	a0,32(sp)
    80009d76:	6108                	ld	a0,0(a0)
    80009d78:	6586                	ld	a1,64(sp)
    80009d7a:	ec2a                	sd	a0,24(sp)
    80009d7c:	852e                	mv	a0,a1
    80009d7e:	65a6                	ld	a1,72(sp)
    80009d80:	00009097          	auipc	ra,0x9
    80009d84:	eda080e7          	jalr	-294(ra) # 80012c5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfacde4f5753eccfcE>
    80009d88:	e82a                	sd	a0,16(sp)
    80009d8a:	a009                	j	80009d8c <.LBB14_12+0x32>
    80009d8c:	6562                	ld	a0,24(sp)
    80009d8e:	65c2                	ld	a1,16(sp)
    80009d90:	7662                	ld	a2,56(sp)
    80009d92:	66c6                	ld	a3,80(sp)
    80009d94:	00006097          	auipc	ra,0x6
    80009d98:	2fc080e7          	jalr	764(ra) # 80010090 <_ZN6kernel6memory7mapping10page_table9PageTable11copy_in_str17h64424889d2f87531E>
    80009d9c:	f0aa                	sd	a0,96(sp)
    80009d9e:	f4ae                	sd	a1,104(sp)
    80009da0:	a009                	j	80009da2 <.LBB14_12+0x48>
    80009da2:	1088                	addi	a0,sp,96
    80009da4:	00003097          	auipc	ra,0x3
    80009da8:	eda080e7          	jalr	-294(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    80009dac:	e42a                	sd	a0,8(sp)
    80009dae:	a009                	j	80009db0 <.LBB14_12+0x56>
    80009db0:	4501                	li	a0,0
    80009db2:	65a2                	ld	a1,8(sp)
    80009db4:	02a58363          	beq	a1,a0,80009dda <.LBB14_14+0x18>
    80009db8:	a009                	j	80009dba <.LBB14_13>

0000000080009dba <.LBB14_13>:
            println!("Fail to copy in str");
    80009dba:	0001b597          	auipc	a1,0x1b
    80009dbe:	ee658593          	addi	a1,a1,-282 # 80024ca0 <.L__unnamed_38>

0000000080009dc2 <.LBB14_14>:
    80009dc2:	0001b697          	auipc	a3,0x1b
    80009dc6:	b9668693          	addi	a3,a3,-1130 # 80024958 <.L__unnamed_68>
    80009dca:	1888                	addi	a0,sp,112
    80009dcc:	4605                	li	a2,1
    80009dce:	4701                	li	a4,0
    80009dd0:	ffffc097          	auipc	ra,0xffffc
    80009dd4:	954080e7          	jalr	-1708(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80009dd8:	a029                	j	80009de2 <.LBB14_14+0x20>
    80009dda:	4501                	li	a0,0
            return Err(())
        }
        Ok(())
    80009ddc:	04a10fa3          	sb	a0,95(sp)
    }
    80009de0:	a819                	j	80009df6 <.LBB14_14+0x34>
    80009de2:	1888                	addi	a0,sp,112
            println!("Fail to copy in str");
    80009de4:	00007097          	auipc	ra,0x7
    80009de8:	f0c080e7          	jalr	-244(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80009dec:	a009                	j	80009dee <.LBB14_14+0x2c>
    80009dee:	4505                	li	a0,1
            return Err(())
    80009df0:	04a10fa3          	sb	a0,95(sp)
    }
    80009df4:	a009                	j	80009df6 <.LBB14_14+0x34>
    80009df6:	05f14503          	lbu	a0,95(sp)
    80009dfa:	60ee                	ld	ra,216(sp)
    80009dfc:	612d                	addi	sp,sp,224
    80009dfe:	8082                	ret

Disassembly of section .text._ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E:

0000000080009e00 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E>:

    pub fn copy_form_addr(&self, addr: usize, buf: &mut [u8], len: usize) -> Result<(), ()> {
    80009e00:	7115                	addi	sp,sp,-224
    80009e02:	ed86                	sd	ra,216(sp)
    80009e04:	f12a                	sd	a0,160(sp)
    80009e06:	f52e                	sd	a1,168(sp)
    80009e08:	f932                	sd	a2,176(sp)
    80009e0a:	fd36                	sd	a3,184(sp)
    80009e0c:	e1ba                	sd	a4,192(sp)
        let pdata = unsafe{ &mut *self.process.data.get() };
    80009e0e:	6108                	ld	a0,0(a0)
    80009e10:	04050513          	addi	a0,a0,64
    80009e14:	e8ba                	sd	a4,80(sp)
    80009e16:	e4b6                	sd	a3,72(sp)
    80009e18:	e0b2                	sd	a2,64(sp)
    80009e1a:	fc2e                	sd	a1,56(sp)
    80009e1c:	0000d097          	auipc	ra,0xd
    80009e20:	b6c080e7          	jalr	-1172(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80009e24:	f82a                	sd	a0,48(sp)
    80009e26:	a009                	j	80009e28 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x28>
    80009e28:	7542                	ld	a0,48(sp)
    80009e2a:	e5aa                	sd	a0,200(sp)
    
        if addr > pdata.size || addr + size_of::<usize>() > pdata.size {
    80009e2c:	650c                	ld	a1,8(a0)
    80009e2e:	7662                	ld	a2,56(sp)
    80009e30:	00c5fb63          	bgeu	a1,a2,80009e46 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x46>
    80009e34:	a009                	j	80009e36 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x36>
    80009e36:	4505                	li	a0,1
    80009e38:	04a10fa3          	sb	a0,95(sp)
    80009e3c:	a031                	j	80009e48 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x48>
    80009e3e:	4501                	li	a0,0
    80009e40:	04a10fa3          	sb	a0,95(sp)
    80009e44:	a011                	j	80009e48 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x48>
    80009e46:	a031                	j	80009e52 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x52>
    80009e48:	05f14503          	lbu	a0,95(sp)
    80009e4c:	8905                	andi	a0,a0,1
    80009e4e:	ed19                	bnez	a0,80009e6c <.LBB15_21>
    80009e50:	a82d                	j	80009e8a <.LBB15_22+0x16>
    80009e52:	7562                	ld	a0,56(sp)
    80009e54:	00850593          	addi	a1,a0,8
    80009e58:	f42e                	sd	a1,40(sp)
    80009e5a:	0ea5e363          	bltu	a1,a0,80009f40 <.LBB15_26>
    80009e5e:	a009                	j	80009e60 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x60>
    80009e60:	7542                	ld	a0,48(sp)
    80009e62:	650c                	ld	a1,8(a0)
    80009e64:	7622                	ld	a2,40(sp)
    80009e66:	fcc5e8e3          	bltu	a1,a2,80009e36 <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x36>
    80009e6a:	bfd1                	j	80009e3e <_ZN6kernel7syscall7Syscall14copy_form_addr17h93fc8f7be1619657E+0x3e>

0000000080009e6c <.LBB15_21>:
            // println!("拷贝的地址值超出了进程");
            // return Err(());
            panic!("拷贝的地址值超出了进程")
    80009e6c:	0001b517          	auipc	a0,0x1b
    80009e70:	e5c50513          	addi	a0,a0,-420 # 80024cc8 <.L__unnamed_39>

0000000080009e74 <.LBB15_22>:
    80009e74:	0001b617          	auipc	a2,0x1b
    80009e78:	e7c60613          	addi	a2,a2,-388 # 80024cf0 <.L__unnamed_40>
    80009e7c:	02100593          	li	a1,33
    80009e80:	00017097          	auipc	ra,0x17
    80009e84:	e4a080e7          	jalr	-438(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80009e88:	0000                	unimp
        }
    
        let pgt = pdata.pagetable.as_mut().unwrap();
    80009e8a:	7542                	ld	a0,48(sp)
    80009e8c:	0541                	addi	a0,a0,16
    80009e8e:	0000f097          	auipc	ra,0xf
    80009e92:	9a6080e7          	jalr	-1626(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    80009e96:	f02a                	sd	a0,32(sp)
    80009e98:	a009                	j	80009e9a <.LBB15_23>

0000000080009e9a <.LBB15_23>:
    80009e9a:	0001b597          	auipc	a1,0x1b
    80009e9e:	e6e58593          	addi	a1,a1,-402 # 80024d08 <.L__unnamed_41>
    80009ea2:	7502                	ld	a0,32(sp)
    80009ea4:	0000f097          	auipc	ra,0xf
    80009ea8:	dd2080e7          	jalr	-558(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    80009eac:	85aa                	mv	a1,a0
    80009eae:	e9aa                	sd	a0,208(sp)
    80009eb0:	ec2e                	sd	a1,24(sp)
    80009eb2:	a009                	j	80009eb4 <.LBB15_23+0x1a>
        if pgt.copy_in(buf.as_mut_ptr(), addr, len).is_err() {
    80009eb4:	6562                	ld	a0,24(sp)
    80009eb6:	6108                	ld	a0,0(a0)
    80009eb8:	6586                	ld	a1,64(sp)
    80009eba:	e82a                	sd	a0,16(sp)
    80009ebc:	852e                	mv	a0,a1
    80009ebe:	65a6                	ld	a1,72(sp)
    80009ec0:	00009097          	auipc	ra,0x9
    80009ec4:	d9a080e7          	jalr	-614(ra) # 80012c5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfacde4f5753eccfcE>
    80009ec8:	e42a                	sd	a0,8(sp)
    80009eca:	a009                	j	80009ecc <.LBB15_23+0x32>
    80009ecc:	6542                	ld	a0,16(sp)
    80009ece:	65a2                	ld	a1,8(sp)
    80009ed0:	7662                	ld	a2,56(sp)
    80009ed2:	66c6                	ld	a3,80(sp)
    80009ed4:	00006097          	auipc	ra,0x6
    80009ed8:	f78080e7          	jalr	-136(ra) # 8000fe4c <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E>
    80009edc:	f0aa                	sd	a0,96(sp)
    80009ede:	f4ae                	sd	a1,104(sp)
    80009ee0:	a009                	j	80009ee2 <.LBB15_23+0x48>
    80009ee2:	1088                	addi	a0,sp,96
    80009ee4:	00003097          	auipc	ra,0x3
    80009ee8:	d9a080e7          	jalr	-614(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    80009eec:	e02a                	sd	a0,0(sp)
    80009eee:	a009                	j	80009ef0 <.LBB15_23+0x56>
    80009ef0:	4501                	li	a0,0
    80009ef2:	6582                	ld	a1,0(sp)
    80009ef4:	02a58363          	beq	a1,a0,80009f1a <.LBB15_25+0x18>
    80009ef8:	a009                	j	80009efa <.LBB15_24>

0000000080009efa <.LBB15_24>:
            println!("Fail copy data from pagetable!");
    80009efa:	0001b597          	auipc	a1,0x1b
    80009efe:	e4658593          	addi	a1,a1,-442 # 80024d40 <.L__unnamed_42>

0000000080009f02 <.LBB15_25>:
    80009f02:	0001b697          	auipc	a3,0x1b
    80009f06:	a5668693          	addi	a3,a3,-1450 # 80024958 <.L__unnamed_68>
    80009f0a:	1888                	addi	a0,sp,112
    80009f0c:	4605                	li	a2,1
    80009f0e:	4701                	li	a4,0
    80009f10:	ffffc097          	auipc	ra,0xffffc
    80009f14:	814080e7          	jalr	-2028(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80009f18:	a029                	j	80009f22 <.LBB15_25+0x20>
    80009f1a:	4501                	li	a0,0
            return Err(())
        }
        
        
        Ok(())
    80009f1c:	04a10f23          	sb	a0,94(sp)
    }
    80009f20:	a819                	j	80009f36 <.LBB15_25+0x34>
    80009f22:	1888                	addi	a0,sp,112
            println!("Fail copy data from pagetable!");
    80009f24:	00007097          	auipc	ra,0x7
    80009f28:	dcc080e7          	jalr	-564(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80009f2c:	a009                	j	80009f2e <.LBB15_25+0x2c>
    80009f2e:	4505                	li	a0,1
            return Err(())
    80009f30:	04a10f23          	sb	a0,94(sp)
    }
    80009f34:	a009                	j	80009f36 <.LBB15_25+0x34>
    80009f36:	05e14503          	lbu	a0,94(sp)
    80009f3a:	60ee                	ld	ra,216(sp)
    80009f3c:	612d                	addi	sp,sp,224
    80009f3e:	8082                	ret

0000000080009f40 <.LBB15_26>:
        if addr > pdata.size || addr + size_of::<usize>() > pdata.size {
    80009f40:	0001b517          	auipc	a0,0x1b
    80009f44:	ba050513          	addi	a0,a0,-1120 # 80024ae0 <str.1>

0000000080009f48 <.LBB15_27>:
    80009f48:	0001b617          	auipc	a2,0x1b
    80009f4c:	d6860613          	addi	a2,a2,-664 # 80024cb0 <.L__unnamed_43>
    80009f50:	45f1                	li	a1,28
    80009f52:	00017097          	auipc	ra,0x17
    80009f56:	d78080e7          	jalr	-648(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7syscall15kernel_env_call17ha24e523227c205c1E:

0000000080009f5c <_ZN6kernel7syscall15kernel_env_call17ha24e523227c205c1E>:
}

#[inline]
pub fn kernel_env_call(
    80009f5c:	7179                	addi	sp,sp,-48
    80009f5e:	e82a                	sd	a0,16(sp)
    80009f60:	ec2e                	sd	a1,24(sp)
    80009f62:	f032                	sd	a2,32(sp)
    80009f64:	f436                	sd	a3,40(sp)
    arg1: usize,
    arg2: usize,   
) -> usize {
    let mut ret;
    unsafe {
        llvm_asm!("ecall"
    80009f66:	e02a                	sd	a0,0(sp)
    80009f68:	852e                	mv	a0,a1
    80009f6a:	85b2                	mv	a1,a2
    80009f6c:	8636                	mv	a2,a3
    80009f6e:	6882                	ld	a7,0(sp)
    80009f70:	00000073          	ecall
    80009f74:	e42a                	sd	a0,8(sp)
            : "memory"
            : "volatile"
        );
    }
    ret
}
    80009f76:	6145                	addi	sp,sp,48
    80009f78:	8082                	ret

Disassembly of section .text._ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE:

0000000080009f7a <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE>:
#[derive(Debug)]
    80009f7a:	db010113          	addi	sp,sp,-592
    80009f7e:	24113423          	sd	ra,584(sp)
    80009f82:	22a13c23          	sd	a0,568(sp)
    80009f86:	24b13023          	sd	a1,576(sp)
    80009f8a:	f02a                	sd	a0,32(sp)
    80009f8c:	6108                	ld	a0,0(a0)
    80009f8e:	4605                	li	a2,1
    80009f90:	e82e                	sd	a1,16(sp)
    80009f92:	e42a                	sd	a0,8(sp)
    80009f94:	0ec50463          	beq	a0,a2,8000a07c <.LBB17_91>
    80009f98:	a009                	j	80009f9a <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x20>
    80009f9a:	4509                	li	a0,2
    80009f9c:	65a2                	ld	a1,8(sp)
    80009f9e:	10a58463          	beq	a1,a0,8000a0a6 <.LBB17_92>
    80009fa2:	a009                	j	80009fa4 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x2a>
    80009fa4:	450d                	li	a0,3
    80009fa6:	65a2                	ld	a1,8(sp)
    80009fa8:	12a58463          	beq	a1,a0,8000a0d0 <.LBB17_93>
    80009fac:	a009                	j	80009fae <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x34>
    80009fae:	4511                	li	a0,4
    80009fb0:	65a2                	ld	a1,8(sp)
    80009fb2:	14a58463          	beq	a1,a0,8000a0fa <.LBB17_94>
    80009fb6:	a009                	j	80009fb8 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x3e>
    80009fb8:	4515                	li	a0,5
    80009fba:	65a2                	ld	a1,8(sp)
    80009fbc:	16a58463          	beq	a1,a0,8000a124 <.LBB17_95>
    80009fc0:	a009                	j	80009fc2 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x48>
    80009fc2:	4519                	li	a0,6
    80009fc4:	65a2                	ld	a1,8(sp)
    80009fc6:	18a58463          	beq	a1,a0,8000a14e <.LBB17_96>
    80009fca:	a009                	j	80009fcc <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x52>
    80009fcc:	451d                	li	a0,7
    80009fce:	65a2                	ld	a1,8(sp)
    80009fd0:	1aa58463          	beq	a1,a0,8000a178 <.LBB17_97>
    80009fd4:	a009                	j	80009fd6 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x5c>
    80009fd6:	4521                	li	a0,8
    80009fd8:	65a2                	ld	a1,8(sp)
    80009fda:	1ca58463          	beq	a1,a0,8000a1a2 <.LBB17_98>
    80009fde:	a009                	j	80009fe0 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x66>
    80009fe0:	4525                	li	a0,9
    80009fe2:	65a2                	ld	a1,8(sp)
    80009fe4:	1ea58463          	beq	a1,a0,8000a1cc <.LBB17_99>
    80009fe8:	a009                	j	80009fea <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x70>
    80009fea:	4529                	li	a0,10
    80009fec:	65a2                	ld	a1,8(sp)
    80009fee:	20a58463          	beq	a1,a0,8000a1f6 <.LBB17_100>
    80009ff2:	a009                	j	80009ff4 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x7a>
    80009ff4:	452d                	li	a0,11
    80009ff6:	65a2                	ld	a1,8(sp)
    80009ff8:	22a58463          	beq	a1,a0,8000a220 <.LBB17_101>
    80009ffc:	a009                	j	80009ffe <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x84>
    80009ffe:	4531                	li	a0,12
    8000a000:	65a2                	ld	a1,8(sp)
    8000a002:	24a58463          	beq	a1,a0,8000a24a <.LBB17_102>
    8000a006:	a009                	j	8000a008 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x8e>
    8000a008:	4535                	li	a0,13
    8000a00a:	65a2                	ld	a1,8(sp)
    8000a00c:	26a58463          	beq	a1,a0,8000a274 <.LBB17_103>
    8000a010:	a009                	j	8000a012 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0x98>
    8000a012:	4539                	li	a0,14
    8000a014:	65a2                	ld	a1,8(sp)
    8000a016:	28a58463          	beq	a1,a0,8000a29e <.LBB17_104>
    8000a01a:	a009                	j	8000a01c <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0xa2>
    8000a01c:	453d                	li	a0,15
    8000a01e:	65a2                	ld	a1,8(sp)
    8000a020:	2aa58463          	beq	a1,a0,8000a2c8 <.LBB17_105>
    8000a024:	a009                	j	8000a026 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0xac>
    8000a026:	4541                	li	a0,16
    8000a028:	65a2                	ld	a1,8(sp)
    8000a02a:	2ca58463          	beq	a1,a0,8000a2f2 <.LBB17_106>
    8000a02e:	a009                	j	8000a030 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0xb6>
    8000a030:	4545                	li	a0,17
    8000a032:	65a2                	ld	a1,8(sp)
    8000a034:	2ea58463          	beq	a1,a0,8000a31c <.LBB17_107>
    8000a038:	a009                	j	8000a03a <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0xc0>
    8000a03a:	4549                	li	a0,18
    8000a03c:	65a2                	ld	a1,8(sp)
    8000a03e:	30a58463          	beq	a1,a0,8000a346 <.LBB17_108>
    8000a042:	a009                	j	8000a044 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0xca>
    8000a044:	454d                	li	a0,19
    8000a046:	65a2                	ld	a1,8(sp)
    8000a048:	32a58463          	beq	a1,a0,8000a370 <.LBB17_109>
    8000a04c:	a009                	j	8000a04e <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0xd4>
    8000a04e:	4551                	li	a0,20
    8000a050:	65a2                	ld	a1,8(sp)
    8000a052:	34a58463          	beq	a1,a0,8000a39a <.LBB17_110>
    8000a056:	a009                	j	8000a058 <_ZN63_$LT$kernel..syscall..SysCallID$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de1f0944a53c10fE+0xde>
    8000a058:	4555                	li	a0,21
    8000a05a:	65a2                	ld	a1,8(sp)
    8000a05c:	36a58463          	beq	a1,a0,8000a3c4 <.LBB17_111>
    8000a060:	a009                	j	8000a062 <.LBB17_90>

000000008000a062 <.LBB17_90>:
    8000a062:	0001b617          	auipc	a2,0x1b
    8000a066:	cee60613          	addi	a2,a2,-786 # 80024d50 <.L__unnamed_44>
    8000a06a:	1408                	addi	a0,sp,544
    8000a06c:	469d                	li	a3,7
    8000a06e:	65c2                	ld	a1,16(sp)
    8000a070:	00018097          	auipc	ra,0x18
    8000a074:	a30080e7          	jalr	-1488(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a078:	ae9d                	j	8000a3ee <.LBB17_111+0x2a>
	...

000000008000a07c <.LBB17_91>:
    8000a07c:	0001b617          	auipc	a2,0x1b
    8000a080:	d3b60613          	addi	a2,a2,-709 # 80024db7 <.L__unnamed_45>
    8000a084:	1028                	addi	a0,sp,40
    8000a086:	469d                	li	a3,7
    8000a088:	65c2                	ld	a1,16(sp)
    8000a08a:	00018097          	auipc	ra,0x18
    8000a08e:	a16080e7          	jalr	-1514(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a092:	a009                	j	8000a094 <.LBB17_91+0x18>
    8000a094:	1028                	addi	a0,sp,40
    8000a096:	00017097          	auipc	ra,0x17
    8000a09a:	05c080e7          	jalr	92(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a09e:	00a10fa3          	sb	a0,31(sp)
    8000a0a2:	a009                	j	8000a0a4 <.LBB17_91+0x28>
    8000a0a4:	aeb1                	j	8000a400 <.LBB17_111+0x3c>

000000008000a0a6 <.LBB17_92>:
    8000a0a6:	0001b617          	auipc	a2,0x1b
    8000a0aa:	d0a60613          	addi	a2,a2,-758 # 80024db0 <.L__unnamed_46>
    8000a0ae:	0088                	addi	a0,sp,64
    8000a0b0:	469d                	li	a3,7
    8000a0b2:	65c2                	ld	a1,16(sp)
    8000a0b4:	00018097          	auipc	ra,0x18
    8000a0b8:	9ec080e7          	jalr	-1556(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a0bc:	a009                	j	8000a0be <.LBB17_92+0x18>
    8000a0be:	0088                	addi	a0,sp,64
    8000a0c0:	00017097          	auipc	ra,0x17
    8000a0c4:	032080e7          	jalr	50(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a0c8:	00a10fa3          	sb	a0,31(sp)
    8000a0cc:	a009                	j	8000a0ce <.LBB17_92+0x28>
    8000a0ce:	ae0d                	j	8000a400 <.LBB17_111+0x3c>

000000008000a0d0 <.LBB17_93>:
    8000a0d0:	0001b617          	auipc	a2,0x1b
    8000a0d4:	cd960613          	addi	a2,a2,-807 # 80024da9 <.L__unnamed_47>
    8000a0d8:	08a8                	addi	a0,sp,88
    8000a0da:	469d                	li	a3,7
    8000a0dc:	65c2                	ld	a1,16(sp)
    8000a0de:	00018097          	auipc	ra,0x18
    8000a0e2:	9c2080e7          	jalr	-1598(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a0e6:	a009                	j	8000a0e8 <.LBB17_93+0x18>
    8000a0e8:	08a8                	addi	a0,sp,88
    8000a0ea:	00017097          	auipc	ra,0x17
    8000a0ee:	008080e7          	jalr	8(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a0f2:	00a10fa3          	sb	a0,31(sp)
    8000a0f6:	a009                	j	8000a0f8 <.LBB17_93+0x28>
    8000a0f8:	a621                	j	8000a400 <.LBB17_111+0x3c>

000000008000a0fa <.LBB17_94>:
    8000a0fa:	0001b617          	auipc	a2,0x1b
    8000a0fe:	ca860613          	addi	a2,a2,-856 # 80024da2 <.L__unnamed_48>
    8000a102:	1888                	addi	a0,sp,112
    8000a104:	469d                	li	a3,7
    8000a106:	65c2                	ld	a1,16(sp)
    8000a108:	00018097          	auipc	ra,0x18
    8000a10c:	998080e7          	jalr	-1640(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a110:	a009                	j	8000a112 <.LBB17_94+0x18>
    8000a112:	1888                	addi	a0,sp,112
    8000a114:	00017097          	auipc	ra,0x17
    8000a118:	fde080e7          	jalr	-34(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a11c:	00a10fa3          	sb	a0,31(sp)
    8000a120:	a009                	j	8000a122 <.LBB17_94+0x28>
    8000a122:	acf9                	j	8000a400 <.LBB17_111+0x3c>

000000008000a124 <.LBB17_95>:
    8000a124:	0001b617          	auipc	a2,0x1b
    8000a128:	c7760613          	addi	a2,a2,-905 # 80024d9b <.L__unnamed_49>
    8000a12c:	0128                	addi	a0,sp,136
    8000a12e:	469d                	li	a3,7
    8000a130:	65c2                	ld	a1,16(sp)
    8000a132:	00018097          	auipc	ra,0x18
    8000a136:	96e080e7          	jalr	-1682(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a13a:	a009                	j	8000a13c <.LBB17_95+0x18>
    8000a13c:	0128                	addi	a0,sp,136
    8000a13e:	00017097          	auipc	ra,0x17
    8000a142:	fb4080e7          	jalr	-76(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a146:	00a10fa3          	sb	a0,31(sp)
    8000a14a:	a009                	j	8000a14c <.LBB17_95+0x28>
    8000a14c:	ac55                	j	8000a400 <.LBB17_111+0x3c>

000000008000a14e <.LBB17_96>:
    8000a14e:	0001b617          	auipc	a2,0x1b
    8000a152:	c4660613          	addi	a2,a2,-954 # 80024d94 <.L__unnamed_50>
    8000a156:	1108                	addi	a0,sp,160
    8000a158:	469d                	li	a3,7
    8000a15a:	65c2                	ld	a1,16(sp)
    8000a15c:	00018097          	auipc	ra,0x18
    8000a160:	944080e7          	jalr	-1724(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a164:	a009                	j	8000a166 <.LBB17_96+0x18>
    8000a166:	1108                	addi	a0,sp,160
    8000a168:	00017097          	auipc	ra,0x17
    8000a16c:	f8a080e7          	jalr	-118(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a170:	00a10fa3          	sb	a0,31(sp)
    8000a174:	a009                	j	8000a176 <.LBB17_96+0x28>
    8000a176:	a469                	j	8000a400 <.LBB17_111+0x3c>

000000008000a178 <.LBB17_97>:
    8000a178:	0001b617          	auipc	a2,0x1b
    8000a17c:	c1560613          	addi	a2,a2,-1003 # 80024d8d <.L__unnamed_51>
    8000a180:	1928                	addi	a0,sp,184
    8000a182:	469d                	li	a3,7
    8000a184:	65c2                	ld	a1,16(sp)
    8000a186:	00018097          	auipc	ra,0x18
    8000a18a:	91a080e7          	jalr	-1766(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a18e:	a009                	j	8000a190 <.LBB17_97+0x18>
    8000a190:	1928                	addi	a0,sp,184
    8000a192:	00017097          	auipc	ra,0x17
    8000a196:	f60080e7          	jalr	-160(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a19a:	00a10fa3          	sb	a0,31(sp)
    8000a19e:	a009                	j	8000a1a0 <.LBB17_97+0x28>
    8000a1a0:	a485                	j	8000a400 <.LBB17_111+0x3c>

000000008000a1a2 <.LBB17_98>:
    8000a1a2:	0001a617          	auipc	a2,0x1a
    8000a1a6:	b9e60613          	addi	a2,a2,-1122 # 80023d40 <.L__unnamed_5+0x40>
    8000a1aa:	0988                	addi	a0,sp,208
    8000a1ac:	46a1                	li	a3,8
    8000a1ae:	65c2                	ld	a1,16(sp)
    8000a1b0:	00018097          	auipc	ra,0x18
    8000a1b4:	8f0080e7          	jalr	-1808(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a1b8:	a009                	j	8000a1ba <.LBB17_98+0x18>
    8000a1ba:	0988                	addi	a0,sp,208
    8000a1bc:	00017097          	auipc	ra,0x17
    8000a1c0:	f36080e7          	jalr	-202(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a1c4:	00a10fa3          	sb	a0,31(sp)
    8000a1c8:	a009                	j	8000a1ca <.LBB17_98+0x28>
    8000a1ca:	ac1d                	j	8000a400 <.LBB17_111+0x3c>

000000008000a1cc <.LBB17_99>:
    8000a1cc:	0001a617          	auipc	a2,0x1a
    8000a1d0:	b5460613          	addi	a2,a2,-1196 # 80023d20 <.L__unnamed_5+0x20>
    8000a1d4:	11a8                	addi	a0,sp,232
    8000a1d6:	46a1                	li	a3,8
    8000a1d8:	65c2                	ld	a1,16(sp)
    8000a1da:	00018097          	auipc	ra,0x18
    8000a1de:	8c6080e7          	jalr	-1850(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a1e2:	a009                	j	8000a1e4 <.LBB17_99+0x18>
    8000a1e4:	11a8                	addi	a0,sp,232
    8000a1e6:	00017097          	auipc	ra,0x17
    8000a1ea:	f0c080e7          	jalr	-244(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a1ee:	00a10fa3          	sb	a0,31(sp)
    8000a1f2:	a009                	j	8000a1f4 <.LBB17_99+0x28>
    8000a1f4:	a431                	j	8000a400 <.LBB17_111+0x3c>

000000008000a1f6 <.LBB17_100>:
    8000a1f6:	0001b617          	auipc	a2,0x1b
    8000a1fa:	b9160613          	addi	a2,a2,-1135 # 80024d87 <.L__unnamed_54>
    8000a1fe:	0208                	addi	a0,sp,256
    8000a200:	4699                	li	a3,6
    8000a202:	65c2                	ld	a1,16(sp)
    8000a204:	00018097          	auipc	ra,0x18
    8000a208:	89c080e7          	jalr	-1892(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a20c:	a009                	j	8000a20e <.LBB17_100+0x18>
    8000a20e:	0208                	addi	a0,sp,256
    8000a210:	00017097          	auipc	ra,0x17
    8000a214:	ee2080e7          	jalr	-286(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a218:	00a10fa3          	sb	a0,31(sp)
    8000a21c:	a009                	j	8000a21e <.LBB17_100+0x28>
    8000a21e:	a2cd                	j	8000a400 <.LBB17_111+0x3c>

000000008000a220 <.LBB17_101>:
    8000a220:	0001b617          	auipc	a2,0x1b
    8000a224:	b5e60613          	addi	a2,a2,-1186 # 80024d7e <.L__unnamed_55>
    8000a228:	0a28                	addi	a0,sp,280
    8000a22a:	46a5                	li	a3,9
    8000a22c:	65c2                	ld	a1,16(sp)
    8000a22e:	00018097          	auipc	ra,0x18
    8000a232:	872080e7          	jalr	-1934(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a236:	a009                	j	8000a238 <.LBB17_101+0x18>
    8000a238:	0a28                	addi	a0,sp,280
    8000a23a:	00017097          	auipc	ra,0x17
    8000a23e:	eb8080e7          	jalr	-328(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a242:	00a10fa3          	sb	a0,31(sp)
    8000a246:	a009                	j	8000a248 <.LBB17_101+0x28>
    8000a248:	aa65                	j	8000a400 <.LBB17_111+0x3c>

000000008000a24a <.LBB17_102>:
    8000a24a:	0001b617          	auipc	a2,0x1b
    8000a24e:	b2d60613          	addi	a2,a2,-1235 # 80024d77 <.L__unnamed_56>
    8000a252:	1a08                	addi	a0,sp,304
    8000a254:	469d                	li	a3,7
    8000a256:	65c2                	ld	a1,16(sp)
    8000a258:	00018097          	auipc	ra,0x18
    8000a25c:	848080e7          	jalr	-1976(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a260:	a009                	j	8000a262 <.LBB17_102+0x18>
    8000a262:	1a08                	addi	a0,sp,304
    8000a264:	00017097          	auipc	ra,0x17
    8000a268:	e8e080e7          	jalr	-370(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a26c:	00a10fa3          	sb	a0,31(sp)
    8000a270:	a009                	j	8000a272 <.LBB17_102+0x28>
    8000a272:	a279                	j	8000a400 <.LBB17_111+0x3c>

000000008000a274 <.LBB17_103>:
    8000a274:	0001a617          	auipc	a2,0x1a
    8000a278:	b0c60613          	addi	a2,a2,-1268 # 80023d80 <.L__unnamed_5+0x80>
    8000a27c:	02a8                	addi	a0,sp,328
    8000a27e:	46a1                	li	a3,8
    8000a280:	65c2                	ld	a1,16(sp)
    8000a282:	00018097          	auipc	ra,0x18
    8000a286:	81e080e7          	jalr	-2018(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a28a:	a009                	j	8000a28c <.LBB17_103+0x18>
    8000a28c:	02a8                	addi	a0,sp,328
    8000a28e:	00017097          	auipc	ra,0x17
    8000a292:	e64080e7          	jalr	-412(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a296:	00a10fa3          	sb	a0,31(sp)
    8000a29a:	a009                	j	8000a29c <.LBB17_103+0x28>
    8000a29c:	a295                	j	8000a400 <.LBB17_111+0x3c>

000000008000a29e <.LBB17_104>:
    8000a29e:	0001b617          	auipc	a2,0x1b
    8000a2a2:	ad060613          	addi	a2,a2,-1328 # 80024d6e <.L__unnamed_58>
    8000a2a6:	1288                	addi	a0,sp,352
    8000a2a8:	46a5                	li	a3,9
    8000a2aa:	65c2                	ld	a1,16(sp)
    8000a2ac:	00017097          	auipc	ra,0x17
    8000a2b0:	7f4080e7          	jalr	2036(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a2b4:	a009                	j	8000a2b6 <.LBB17_104+0x18>
    8000a2b6:	1288                	addi	a0,sp,352
    8000a2b8:	00017097          	auipc	ra,0x17
    8000a2bc:	e3a080e7          	jalr	-454(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a2c0:	00a10fa3          	sb	a0,31(sp)
    8000a2c4:	a009                	j	8000a2c6 <.LBB17_104+0x28>
    8000a2c6:	aa2d                	j	8000a400 <.LBB17_111+0x3c>

000000008000a2c8 <.LBB17_105>:
    8000a2c8:	0001b617          	auipc	a2,0x1b
    8000a2cc:	a9f60613          	addi	a2,a2,-1377 # 80024d67 <.L__unnamed_59>
    8000a2d0:	1aa8                	addi	a0,sp,376
    8000a2d2:	469d                	li	a3,7
    8000a2d4:	65c2                	ld	a1,16(sp)
    8000a2d6:	00017097          	auipc	ra,0x17
    8000a2da:	7ca080e7          	jalr	1994(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a2de:	a009                	j	8000a2e0 <.LBB17_105+0x18>
    8000a2e0:	1aa8                	addi	a0,sp,376
    8000a2e2:	00017097          	auipc	ra,0x17
    8000a2e6:	e10080e7          	jalr	-496(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a2ea:	00a10fa3          	sb	a0,31(sp)
    8000a2ee:	a009                	j	8000a2f0 <.LBB17_105+0x28>
    8000a2f0:	aa01                	j	8000a400 <.LBB17_111+0x3c>

000000008000a2f2 <.LBB17_106>:
    8000a2f2:	0001a617          	auipc	a2,0x1a
    8000a2f6:	a7660613          	addi	a2,a2,-1418 # 80023d68 <.L__unnamed_5+0x68>
    8000a2fa:	0b08                	addi	a0,sp,400
    8000a2fc:	46a1                	li	a3,8
    8000a2fe:	65c2                	ld	a1,16(sp)
    8000a300:	00017097          	auipc	ra,0x17
    8000a304:	7a0080e7          	jalr	1952(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a308:	a009                	j	8000a30a <.LBB17_106+0x18>
    8000a30a:	0b08                	addi	a0,sp,400
    8000a30c:	00017097          	auipc	ra,0x17
    8000a310:	de6080e7          	jalr	-538(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a314:	00a10fa3          	sb	a0,31(sp)
    8000a318:	a009                	j	8000a31a <.LBB17_106+0x28>
    8000a31a:	a0dd                	j	8000a400 <.LBB17_111+0x3c>

000000008000a31c <.LBB17_107>:
    8000a31c:	0001a617          	auipc	a2,0x1a
    8000a320:	9fc60613          	addi	a2,a2,-1540 # 80023d18 <.L__unnamed_5+0x18>
    8000a324:	1328                	addi	a0,sp,424
    8000a326:	46a1                	li	a3,8
    8000a328:	65c2                	ld	a1,16(sp)
    8000a32a:	00017097          	auipc	ra,0x17
    8000a32e:	776080e7          	jalr	1910(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a332:	a009                	j	8000a334 <.LBB17_107+0x18>
    8000a334:	1328                	addi	a0,sp,424
    8000a336:	00017097          	auipc	ra,0x17
    8000a33a:	dbc080e7          	jalr	-580(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a33e:	00a10fa3          	sb	a0,31(sp)
    8000a342:	a009                	j	8000a344 <.LBB17_107+0x28>
    8000a344:	a875                	j	8000a400 <.LBB17_111+0x3c>

000000008000a346 <.LBB17_108>:
    8000a346:	0001b617          	auipc	a2,0x1b
    8000a34a:	a1860613          	addi	a2,a2,-1512 # 80024d5e <.L__unnamed_62>
    8000a34e:	0388                	addi	a0,sp,448
    8000a350:	46a5                	li	a3,9
    8000a352:	65c2                	ld	a1,16(sp)
    8000a354:	00017097          	auipc	ra,0x17
    8000a358:	74c080e7          	jalr	1868(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a35c:	a009                	j	8000a35e <.LBB17_108+0x18>
    8000a35e:	0388                	addi	a0,sp,448
    8000a360:	00017097          	auipc	ra,0x17
    8000a364:	d92080e7          	jalr	-622(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a368:	00a10fa3          	sb	a0,31(sp)
    8000a36c:	a009                	j	8000a36e <.LBB17_108+0x28>
    8000a36e:	a849                	j	8000a400 <.LBB17_111+0x3c>

000000008000a370 <.LBB17_109>:
    8000a370:	0001b617          	auipc	a2,0x1b
    8000a374:	9e760613          	addi	a2,a2,-1561 # 80024d57 <.L__unnamed_63>
    8000a378:	0ba8                	addi	a0,sp,472
    8000a37a:	469d                	li	a3,7
    8000a37c:	65c2                	ld	a1,16(sp)
    8000a37e:	00017097          	auipc	ra,0x17
    8000a382:	722080e7          	jalr	1826(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a386:	a009                	j	8000a388 <.LBB17_109+0x18>
    8000a388:	0ba8                	addi	a0,sp,472
    8000a38a:	00017097          	auipc	ra,0x17
    8000a38e:	d68080e7          	jalr	-664(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a392:	00a10fa3          	sb	a0,31(sp)
    8000a396:	a009                	j	8000a398 <.LBB17_109+0x28>
    8000a398:	a0a5                	j	8000a400 <.LBB17_111+0x3c>

000000008000a39a <.LBB17_110>:
    8000a39a:	0001a617          	auipc	a2,0x1a
    8000a39e:	97660613          	addi	a2,a2,-1674 # 80023d10 <.L__unnamed_5+0x10>
    8000a3a2:	1b88                	addi	a0,sp,496
    8000a3a4:	46a1                	li	a3,8
    8000a3a6:	65c2                	ld	a1,16(sp)
    8000a3a8:	00017097          	auipc	ra,0x17
    8000a3ac:	6f8080e7          	jalr	1784(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a3b0:	a009                	j	8000a3b2 <.LBB17_110+0x18>
    8000a3b2:	1b88                	addi	a0,sp,496
    8000a3b4:	00017097          	auipc	ra,0x17
    8000a3b8:	d3e080e7          	jalr	-706(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a3bc:	00a10fa3          	sb	a0,31(sp)
    8000a3c0:	a009                	j	8000a3c2 <.LBB17_110+0x28>
    8000a3c2:	a83d                	j	8000a400 <.LBB17_111+0x3c>

000000008000a3c4 <.LBB17_111>:
    8000a3c4:	0001a617          	auipc	a2,0x1a
    8000a3c8:	97460613          	addi	a2,a2,-1676 # 80023d38 <.L__unnamed_5+0x38>
    8000a3cc:	0428                	addi	a0,sp,520
    8000a3ce:	46a1                	li	a3,8
    8000a3d0:	65c2                	ld	a1,16(sp)
    8000a3d2:	00017097          	auipc	ra,0x17
    8000a3d6:	6ce080e7          	jalr	1742(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8000a3da:	a009                	j	8000a3dc <.LBB17_111+0x18>
    8000a3dc:	0428                	addi	a0,sp,520
    8000a3de:	00017097          	auipc	ra,0x17
    8000a3e2:	d14080e7          	jalr	-748(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a3e6:	00a10fa3          	sb	a0,31(sp)
    8000a3ea:	a009                	j	8000a3ec <.LBB17_111+0x28>
    8000a3ec:	a811                	j	8000a400 <.LBB17_111+0x3c>
    8000a3ee:	1408                	addi	a0,sp,544
    8000a3f0:	00017097          	auipc	ra,0x17
    8000a3f4:	d02080e7          	jalr	-766(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8000a3f8:	00a10fa3          	sb	a0,31(sp)
    8000a3fc:	a009                	j	8000a3fe <.LBB17_111+0x3a>
    8000a3fe:	a009                	j	8000a400 <.LBB17_111+0x3c>
    8000a400:	01f14503          	lbu	a0,31(sp)
    8000a404:	24813083          	ld	ra,584(sp)
    8000a408:	25010113          	addi	sp,sp,592
    8000a40c:	8082                	ret

Disassembly of section .text._ZN6kernel9interrupt7handler14kernel_syscall17h27dc8fee548bc2b1E:

000000008000a40e <_ZN6kernel9interrupt7handler14kernel_syscall17h27dc8fee548bc2b1E>:
use crate::process::*;
use crate::define::layout::PGSIZE;

use core::ptr::write_bytes;
 
pub fn kernel_syscall(
    8000a40e:	7135                	addi	sp,sp,-160
    8000a410:	ed06                	sd	ra,152(sp)
    8000a412:	fcaa                	sd	a0,120(sp)
    8000a414:	e12e                	sd	a1,128(sp)
    8000a416:	e532                	sd	a2,136(sp)
    8000a418:	e936                	sd	a3,144(sp)
    8000a41a:	4521                	li	a0,8
    _: usize, 
    _: usize, 
    which: usize
) {
    match which  {
        SHUTDOWN => {
    8000a41c:	e436                	sd	a3,8(sp)
    8000a41e:	02a68663          	beq	a3,a0,8000a44a <.LBB0_14>
    8000a422:	a009                	j	8000a424 <_ZN6kernel9interrupt7handler14kernel_syscall17h27dc8fee548bc2b1E+0x16>
    8000a424:	4525                	li	a0,9
    8000a426:	65a2                	ld	a1,8(sp)
    8000a428:	06a58063          	beq	a1,a0,8000a488 <.LBB0_16>
    8000a42c:	a009                	j	8000a42e <.LBB0_12>

000000008000a42e <.LBB0_12>:
                RESET_REASON_NO_REASON
            );
        },

        _ => {
            panic!("Unresolved Kernel Syscall!");
    8000a42e:	0001b517          	auipc	a0,0x1b
    8000a432:	99050513          	addi	a0,a0,-1648 # 80024dbe <.L__unnamed_1>

000000008000a436 <.LBB0_13>:
    8000a436:	0001b617          	auipc	a2,0x1b
    8000a43a:	9ba60613          	addi	a2,a2,-1606 # 80024df0 <.L__unnamed_2>
    8000a43e:	45e9                	li	a1,26
    8000a440:	00017097          	auipc	ra,0x17
    8000a444:	88a080e7          	jalr	-1910(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000a44a <.LBB0_14>:
            println!("\x1b[1;31mShutdown!\x1b[0m");
    8000a44a:	0001b597          	auipc	a1,0x1b
    8000a44e:	9fe58593          	addi	a1,a1,-1538 # 80024e48 <.L__unnamed_3>

000000008000a452 <.LBB0_15>:
    8000a452:	0001b697          	auipc	a3,0x1b
    8000a456:	9de68693          	addi	a3,a3,-1570 # 80024e30 <.L__unnamed_10>
    8000a45a:	0828                	addi	a0,sp,24
    8000a45c:	4605                	li	a2,1
    8000a45e:	4701                	li	a4,0
    8000a460:	ffffb097          	auipc	ra,0xffffb
    8000a464:	2c4080e7          	jalr	708(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000a468:	a009                	j	8000a46a <.LBB0_15+0x18>
    8000a46a:	0828                	addi	a0,sp,24
    8000a46c:	00007097          	auipc	ra,0x7
    8000a470:	884080e7          	jalr	-1916(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000a474:	a009                	j	8000a476 <.LBB0_15+0x24>
    8000a476:	4501                	li	a0,0
            system_reset(
    8000a478:	e02a                	sd	a0,0(sp)
    8000a47a:	6582                	ld	a1,0(sp)
    8000a47c:	00007097          	auipc	ra,0x7
    8000a480:	4f8080e7          	jalr	1272(ra) # 80011974 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E>
    8000a484:	a009                	j	8000a486 <.LBB0_15+0x34>
    match which  {
    8000a486:	a83d                	j	8000a4c4 <.LBB0_17+0x34>

000000008000a488 <.LBB0_16>:
            println!("\x1b[1;31mReboot!\x1b[0m");
    8000a488:	0001b597          	auipc	a1,0x1b
    8000a48c:	99858593          	addi	a1,a1,-1640 # 80024e20 <.L__unnamed_5>

000000008000a490 <.LBB0_17>:
    8000a490:	0001b697          	auipc	a3,0x1b
    8000a494:	9a068693          	addi	a3,a3,-1632 # 80024e30 <.L__unnamed_10>
    8000a498:	00a8                	addi	a0,sp,72
    8000a49a:	4605                	li	a2,1
    8000a49c:	4701                	li	a4,0
    8000a49e:	ffffb097          	auipc	ra,0xffffb
    8000a4a2:	286080e7          	jalr	646(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000a4a6:	a009                	j	8000a4a8 <.LBB0_17+0x18>
    8000a4a8:	00a8                	addi	a0,sp,72
    8000a4aa:	00007097          	auipc	ra,0x7
    8000a4ae:	846080e7          	jalr	-1978(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000a4b2:	a009                	j	8000a4b4 <.LBB0_17+0x24>
    8000a4b4:	4505                	li	a0,1
    8000a4b6:	4581                	li	a1,0
            system_reset(
    8000a4b8:	00007097          	auipc	ra,0x7
    8000a4bc:	4bc080e7          	jalr	1212(ra) # 80011974 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E>
    8000a4c0:	a009                	j	8000a4c2 <.LBB0_17+0x32>
    match which  {
    8000a4c2:	a009                	j	8000a4c4 <.LBB0_17+0x34>
        }
    }
}
    8000a4c4:	60ea                	ld	ra,152(sp)
    8000a4c6:	610d                	addi	sp,sp,160
    8000a4c8:	8082                	ret

Disassembly of section .text._ZN6kernel9interrupt7handler13instr_handler17hc65348f67b2a2746E:

000000008000a4ca <_ZN6kernel9interrupt7handler13instr_handler17hc65348f67b2a2746E>:


pub fn instr_handler(sepc: usize) {
    8000a4ca:	7119                	addi	sp,sp,-128
    8000a4cc:	fc86                	sd	ra,120(sp)
    8000a4ce:	f02a                	sd	a0,32(sp)
    8000a4d0:	1008                	addi	a0,sp,32
    panic!("Instruction Fault occuer in 0x{:x}", sepc);
    8000a4d2:	f4aa                	sd	a0,104(sp)
    8000a4d4:	f8aa                	sd	a0,112(sp)

000000008000a4d6 <.LBB1_3>:
    8000a4d6:	00018597          	auipc	a1,0x18
    8000a4da:	7d058593          	addi	a1,a1,2000 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    8000a4de:	00015097          	auipc	ra,0x15
    8000a4e2:	53c080e7          	jalr	1340(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000a4e6:	ec2a                	sd	a0,24(sp)
    8000a4e8:	e82e                	sd	a1,16(sp)
    8000a4ea:	a009                	j	8000a4ec <.LBB1_3+0x16>
    8000a4ec:	6562                	ld	a0,24(sp)
    8000a4ee:	ecaa                	sd	a0,88(sp)
    8000a4f0:	65c2                	ld	a1,16(sp)
    8000a4f2:	f0ae                	sd	a1,96(sp)

000000008000a4f4 <.LBB1_4>:
    8000a4f4:	0001b597          	auipc	a1,0x1b
    8000a4f8:	98458593          	addi	a1,a1,-1660 # 80024e78 <.L__unnamed_6>
    8000a4fc:	1028                	addi	a0,sp,40
    8000a4fe:	08b4                	addi	a3,sp,88
    8000a500:	4605                	li	a2,1
    8000a502:	e432                	sd	a2,8(sp)
    8000a504:	6722                	ld	a4,8(sp)
    8000a506:	ffffb097          	auipc	ra,0xffffb
    8000a50a:	21e080e7          	jalr	542(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000a50e:	a009                	j	8000a510 <.LBB1_5>

000000008000a510 <.LBB1_5>:
    8000a510:	0001b597          	auipc	a1,0x1b
    8000a514:	97858593          	addi	a1,a1,-1672 # 80024e88 <.L__unnamed_7>
    8000a518:	1028                	addi	a0,sp,40
    8000a51a:	00017097          	auipc	ra,0x17
    8000a51e:	81c080e7          	jalr	-2020(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN6kernel6memory7address4Addr15is_page_aligned17ha9c72291cff71d68E:

000000008000a524 <_ZN6kernel6memory7address4Addr15is_page_aligned17ha9c72291cff71d68E>:
    fn is_page_aligned(&self) -> bool{
    8000a524:	1101                	addi	sp,sp,-32
    8000a526:	ec06                	sd	ra,24(sp)
    8000a528:	e82a                	sd	a0,16(sp)
        self.as_usize() % PGSIZE == 0
    8000a52a:	ffffd097          	auipc	ra,0xffffd
    8000a52e:	5ca080e7          	jalr	1482(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000a532:	e42a                	sd	a0,8(sp)
    8000a534:	a009                	j	8000a536 <_ZN6kernel6memory7address4Addr15is_page_aligned17ha9c72291cff71d68E+0x12>
    8000a536:	6505                	lui	a0,0x1
    8000a538:	357d                	addiw	a0,a0,-1
    8000a53a:	65a2                	ld	a1,8(sp)
    8000a53c:	8d6d                	and	a0,a0,a1
    8000a53e:	00153513          	seqz	a0,a0
    }
    8000a542:	60e2                	ld	ra,24(sp)
    8000a544:	6105                	addi	sp,sp,32
    8000a546:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7address4Addr10as_mut_ptr17h8d429668b01dce0eE:

000000008000a548 <_ZN6kernel6memory7address4Addr10as_mut_ptr17h8d429668b01dce0eE>:
    fn as_mut_ptr(&self) -> *mut u8{
    8000a548:	1101                	addi	sp,sp,-32
    8000a54a:	ec06                	sd	ra,24(sp)
    8000a54c:	e82a                	sd	a0,16(sp)
        self.as_usize() as *mut u8
    8000a54e:	ffffd097          	auipc	ra,0xffffd
    8000a552:	5b8080e7          	jalr	1464(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    8000a556:	e42a                	sd	a0,8(sp)
    8000a558:	a009                	j	8000a55a <_ZN6kernel6memory7address4Addr10as_mut_ptr17h8d429668b01dce0eE+0x12>
    }
    8000a55a:	6522                	ld	a0,8(sp)
    8000a55c:	60e2                	ld	ra,24(sp)
    8000a55e:	6105                	addi	sp,sp,32
    8000a560:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7address4Addr11pg_round_up17h0a326453e9150368E:

000000008000a562 <_ZN6kernel6memory7address4Addr11pg_round_up17h0a326453e9150368E>:
    fn pg_round_up(&mut self) {
    8000a562:	7139                	addi	sp,sp,-64
    8000a564:	fc06                	sd	ra,56(sp)
    8000a566:	f82a                	sd	a0,48(sp)
        *self.data_mut() = (*self.data_mut() + PGSIZE - 1) & !(PGSIZE - 1)
    8000a568:	f42a                	sd	a0,40(sp)
    8000a56a:	ffffd097          	auipc	ra,0xffffd
    8000a56e:	5a6080e7          	jalr	1446(ra) # 80007b10 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h48dd5356ad1e5662E>
    8000a572:	f02a                	sd	a0,32(sp)
    8000a574:	a009                	j	8000a576 <_ZN6kernel6memory7address4Addr11pg_round_up17h0a326453e9150368E+0x14>
    8000a576:	7502                	ld	a0,32(sp)
    8000a578:	610c                	ld	a1,0(a0)
    8000a57a:	6605                	lui	a2,0x1
    8000a57c:	962e                	add	a2,a2,a1
    8000a57e:	ec32                	sd	a2,24(sp)
    8000a580:	02b66963          	bltu	a2,a1,8000a5b2 <.LBB2_7>
    8000a584:	a009                	j	8000a586 <_ZN6kernel6memory7address4Addr11pg_round_up17h0a326453e9150368E+0x24>
    8000a586:	6562                	ld	a0,24(sp)
    8000a588:	fff50593          	addi	a1,a0,-1 # fff <.Lline_table_start0+0x259>
    8000a58c:	e82e                	sd	a1,16(sp)
    8000a58e:	04b56063          	bltu	a0,a1,8000a5ce <.LBB2_9>
    8000a592:	a009                	j	8000a594 <_ZN6kernel6memory7address4Addr11pg_round_up17h0a326453e9150368E+0x32>
    8000a594:	7522                	ld	a0,40(sp)
    8000a596:	ffffd097          	auipc	ra,0xffffd
    8000a59a:	57a080e7          	jalr	1402(ra) # 80007b10 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h48dd5356ad1e5662E>
    8000a59e:	e42a                	sd	a0,8(sp)
    8000a5a0:	a009                	j	8000a5a2 <_ZN6kernel6memory7address4Addr11pg_round_up17h0a326453e9150368E+0x40>
    8000a5a2:	757d                	lui	a0,0xfffff
    8000a5a4:	65c2                	ld	a1,16(sp)
    8000a5a6:	8d6d                	and	a0,a0,a1
    8000a5a8:	6622                	ld	a2,8(sp)
    8000a5aa:	e208                	sd	a0,0(a2)
    }
    8000a5ac:	70e2                	ld	ra,56(sp)
    8000a5ae:	6121                	addi	sp,sp,64
    8000a5b0:	8082                	ret

000000008000a5b2 <.LBB2_7>:
        *self.data_mut() = (*self.data_mut() + PGSIZE - 1) & !(PGSIZE - 1)
    8000a5b2:	0001b517          	auipc	a0,0x1b
    8000a5b6:	91e50513          	addi	a0,a0,-1762 # 80024ed0 <str.0>

000000008000a5ba <.LBB2_8>:
    8000a5ba:	0001b617          	auipc	a2,0x1b
    8000a5be:	8fe60613          	addi	a2,a2,-1794 # 80024eb8 <.L__unnamed_1>
    8000a5c2:	45f1                	li	a1,28
    8000a5c4:	00016097          	auipc	ra,0x16
    8000a5c8:	706080e7          	jalr	1798(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000a5ce <.LBB2_9>:
    8000a5ce:	0001b517          	auipc	a0,0x1b
    8000a5d2:	94250513          	addi	a0,a0,-1726 # 80024f10 <str.1>

000000008000a5d6 <.LBB2_10>:
    8000a5d6:	0001b617          	auipc	a2,0x1b
    8000a5da:	91a60613          	addi	a2,a2,-1766 # 80024ef0 <.L__unnamed_2>
    8000a5de:	02100593          	li	a1,33
    8000a5e2:	00016097          	auipc	ra,0x16
    8000a5e6:	6e8080e7          	jalr	1768(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7address4Addr11pg_round_up17h5deaf19d8a60b5f1E:

000000008000a5ec <_ZN6kernel6memory7address4Addr11pg_round_up17h5deaf19d8a60b5f1E>:
    fn pg_round_up(&mut self) {
    8000a5ec:	7139                	addi	sp,sp,-64
    8000a5ee:	fc06                	sd	ra,56(sp)
    8000a5f0:	f82a                	sd	a0,48(sp)
        *self.data_mut() = (*self.data_mut() + PGSIZE - 1) & !(PGSIZE - 1)
    8000a5f2:	f42a                	sd	a0,40(sp)
    8000a5f4:	ffffd097          	auipc	ra,0xffffd
    8000a5f8:	50a080e7          	jalr	1290(ra) # 80007afe <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h7da1e6231c2c2373E>
    8000a5fc:	f02a                	sd	a0,32(sp)
    8000a5fe:	a009                	j	8000a600 <_ZN6kernel6memory7address4Addr11pg_round_up17h5deaf19d8a60b5f1E+0x14>
    8000a600:	7502                	ld	a0,32(sp)
    8000a602:	610c                	ld	a1,0(a0)
    8000a604:	6605                	lui	a2,0x1
    8000a606:	962e                	add	a2,a2,a1
    8000a608:	ec32                	sd	a2,24(sp)
    8000a60a:	02b66963          	bltu	a2,a1,8000a63c <.LBB3_7>
    8000a60e:	a009                	j	8000a610 <_ZN6kernel6memory7address4Addr11pg_round_up17h5deaf19d8a60b5f1E+0x24>
    8000a610:	6562                	ld	a0,24(sp)
    8000a612:	fff50593          	addi	a1,a0,-1
    8000a616:	e82e                	sd	a1,16(sp)
    8000a618:	04b56063          	bltu	a0,a1,8000a658 <.LBB3_9>
    8000a61c:	a009                	j	8000a61e <_ZN6kernel6memory7address4Addr11pg_round_up17h5deaf19d8a60b5f1E+0x32>
    8000a61e:	7522                	ld	a0,40(sp)
    8000a620:	ffffd097          	auipc	ra,0xffffd
    8000a624:	4de080e7          	jalr	1246(ra) # 80007afe <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h7da1e6231c2c2373E>
    8000a628:	e42a                	sd	a0,8(sp)
    8000a62a:	a009                	j	8000a62c <_ZN6kernel6memory7address4Addr11pg_round_up17h5deaf19d8a60b5f1E+0x40>
    8000a62c:	757d                	lui	a0,0xfffff
    8000a62e:	65c2                	ld	a1,16(sp)
    8000a630:	8d6d                	and	a0,a0,a1
    8000a632:	6622                	ld	a2,8(sp)
    8000a634:	e208                	sd	a0,0(a2)
    }
    8000a636:	70e2                	ld	ra,56(sp)
    8000a638:	6121                	addi	sp,sp,64
    8000a63a:	8082                	ret

000000008000a63c <.LBB3_7>:
        *self.data_mut() = (*self.data_mut() + PGSIZE - 1) & !(PGSIZE - 1)
    8000a63c:	0001b517          	auipc	a0,0x1b
    8000a640:	89450513          	addi	a0,a0,-1900 # 80024ed0 <str.0>

000000008000a644 <.LBB3_8>:
    8000a644:	0001b617          	auipc	a2,0x1b
    8000a648:	87460613          	addi	a2,a2,-1932 # 80024eb8 <.L__unnamed_1>
    8000a64c:	45f1                	li	a1,28
    8000a64e:	00016097          	auipc	ra,0x16
    8000a652:	67c080e7          	jalr	1660(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000a658 <.LBB3_9>:
    8000a658:	0001b517          	auipc	a0,0x1b
    8000a65c:	8b850513          	addi	a0,a0,-1864 # 80024f10 <str.1>

000000008000a660 <.LBB3_10>:
    8000a660:	0001b617          	auipc	a2,0x1b
    8000a664:	89060613          	addi	a2,a2,-1904 # 80024ef0 <.L__unnamed_2>
    8000a668:	02100593          	li	a1,33
    8000a66c:	00016097          	auipc	ra,0x16
    8000a670:	65e080e7          	jalr	1630(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E:

000000008000a676 <_ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E>:
    fn pg_round_down(&mut self) {
    8000a676:	7179                	addi	sp,sp,-48
    8000a678:	f406                	sd	ra,40(sp)
    8000a67a:	f02a                	sd	a0,32(sp)
        *self.data_mut() = *self.data_mut() & !(PGSIZE - 1)
    8000a67c:	ec2a                	sd	a0,24(sp)
    8000a67e:	ffffd097          	auipc	ra,0xffffd
    8000a682:	480080e7          	jalr	1152(ra) # 80007afe <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h7da1e6231c2c2373E>
    8000a686:	e82a                	sd	a0,16(sp)
    8000a688:	a009                	j	8000a68a <_ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E+0x14>
    8000a68a:	6542                	ld	a0,16(sp)
    8000a68c:	610c                	ld	a1,0(a0)
    8000a68e:	6562                	ld	a0,24(sp)
    8000a690:	e42e                	sd	a1,8(sp)
    8000a692:	ffffd097          	auipc	ra,0xffffd
    8000a696:	46c080e7          	jalr	1132(ra) # 80007afe <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h7da1e6231c2c2373E>
    8000a69a:	e02a                	sd	a0,0(sp)
    8000a69c:	a009                	j	8000a69e <_ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E+0x28>
    8000a69e:	757d                	lui	a0,0xfffff
    8000a6a0:	65a2                	ld	a1,8(sp)
    8000a6a2:	8d6d                	and	a0,a0,a1
    8000a6a4:	6602                	ld	a2,0(sp)
    8000a6a6:	e208                	sd	a0,0(a2)
    }
    8000a6a8:	70a2                	ld	ra,40(sp)
    8000a6aa:	6145                	addi	sp,sp,48
    8000a6ac:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE:

000000008000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>:
    fn add_page(&mut self){
    8000a6ae:	1101                	addi	sp,sp,-32
    8000a6b0:	ec06                	sd	ra,24(sp)
    8000a6b2:	e82a                	sd	a0,16(sp)
        *self.data_mut() += PGSIZE;
    8000a6b4:	ffffd097          	auipc	ra,0xffffd
    8000a6b8:	44a080e7          	jalr	1098(ra) # 80007afe <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h7da1e6231c2c2373E>
    8000a6bc:	e42a                	sd	a0,8(sp)
    8000a6be:	a009                	j	8000a6c0 <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE+0x12>
    8000a6c0:	6522                	ld	a0,8(sp)
    8000a6c2:	610c                	ld	a1,0(a0)
    8000a6c4:	6605                	lui	a2,0x1
    8000a6c6:	962e                	add	a2,a2,a1
    8000a6c8:	e032                	sd	a2,0(sp)
    8000a6ca:	00b66963          	bltu	a2,a1,8000a6dc <.LBB5_4>
    8000a6ce:	a009                	j	8000a6d0 <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE+0x22>
    8000a6d0:	6502                	ld	a0,0(sp)
    8000a6d2:	65a2                	ld	a1,8(sp)
    8000a6d4:	e188                	sd	a0,0(a1)
    }
    8000a6d6:	60e2                	ld	ra,24(sp)
    8000a6d8:	6105                	addi	sp,sp,32
    8000a6da:	8082                	ret

000000008000a6dc <.LBB5_4>:
        *self.data_mut() += PGSIZE;
    8000a6dc:	0001a517          	auipc	a0,0x1a
    8000a6e0:	7f450513          	addi	a0,a0,2036 # 80024ed0 <str.0>

000000008000a6e4 <.LBB5_5>:
    8000a6e4:	0001b617          	auipc	a2,0x1b
    8000a6e8:	85460613          	addi	a2,a2,-1964 # 80024f38 <.L__unnamed_3>
    8000a6ec:	45f1                	li	a1,28
    8000a6ee:	00016097          	auipc	ra,0x16
    8000a6f2:	5dc080e7          	jalr	1500(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7address4Addr8add_page17he49b0f30c9f330d9E:

000000008000a6f8 <_ZN6kernel6memory7address4Addr8add_page17he49b0f30c9f330d9E>:
    fn add_page(&mut self){
    8000a6f8:	1101                	addi	sp,sp,-32
    8000a6fa:	ec06                	sd	ra,24(sp)
    8000a6fc:	e82a                	sd	a0,16(sp)
        *self.data_mut() += PGSIZE;
    8000a6fe:	ffffd097          	auipc	ra,0xffffd
    8000a702:	412080e7          	jalr	1042(ra) # 80007b10 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8data_mut17h48dd5356ad1e5662E>
    8000a706:	e42a                	sd	a0,8(sp)
    8000a708:	a009                	j	8000a70a <_ZN6kernel6memory7address4Addr8add_page17he49b0f30c9f330d9E+0x12>
    8000a70a:	6522                	ld	a0,8(sp)
    8000a70c:	610c                	ld	a1,0(a0)
    8000a70e:	6605                	lui	a2,0x1
    8000a710:	962e                	add	a2,a2,a1
    8000a712:	e032                	sd	a2,0(sp)
    8000a714:	00b66963          	bltu	a2,a1,8000a726 <.LBB6_4>
    8000a718:	a009                	j	8000a71a <_ZN6kernel6memory7address4Addr8add_page17he49b0f30c9f330d9E+0x22>
    8000a71a:	6502                	ld	a0,0(sp)
    8000a71c:	65a2                	ld	a1,8(sp)
    8000a71e:	e188                	sd	a0,0(a1)
    }
    8000a720:	60e2                	ld	ra,24(sp)
    8000a722:	6105                	addi	sp,sp,32
    8000a724:	8082                	ret

000000008000a726 <.LBB6_4>:
        *self.data_mut() += PGSIZE;
    8000a726:	0001a517          	auipc	a0,0x1a
    8000a72a:	7aa50513          	addi	a0,a0,1962 # 80024ed0 <str.0>

000000008000a72e <.LBB6_5>:
    8000a72e:	0001b617          	auipc	a2,0x1b
    8000a732:	80a60613          	addi	a2,a2,-2038 # 80024f38 <.L__unnamed_3>
    8000a736:	45f1                	li	a1,28
    8000a738:	00016097          	auipc	ra,0x16
    8000a73c:	592080e7          	jalr	1426(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process3elf8load_seg17h741ccb603a498f9cE:

000000008000a742 <_ZN6kernel7process3elf8load_seg17h741ccb603a498f9cE>:
/// va must be page-aligned
/// and the pages from va to va+sz must already be mapped.
/// Returns 0 on success, -1 on failure.
#[allow(unused_variables)]
#[allow(unused_assignments)]
fn load_seg(
    8000a742:	7151                	addi	sp,sp,-240
    8000a744:	f586                	sd	ra,232(sp)
    8000a746:	e1aa                	sd	a0,192(sp)
    8000a748:	e5ae                	sd	a1,200(sp)
    8000a74a:	e9b2                	sd	a2,208(sp)
    8000a74c:	edb6                	sd	a3,216(sp)
    8000a74e:	f1ba                	sd	a4,224(sp)
    inode_data: &mut SleepLockGuard<InodeData>,
    offset: usize, 
    size: usize
) -> Result<(), &'static str> {
    // 生成虚拟地址
    let mut va = VirtualAddress::new(va);
    8000a750:	f4aa                	sd	a0,104(sp)
    8000a752:	852e                	mv	a0,a1
    8000a754:	f0ba                	sd	a4,96(sp)
    8000a756:	ecb6                	sd	a3,88(sp)
    8000a758:	e8b2                	sd	a2,80(sp)
    8000a75a:	ffffd097          	auipc	ra,0xffffd
    8000a75e:	3be080e7          	jalr	958(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000a762:	e12a                	sd	a0,128(sp)
    8000a764:	a009                	j	8000a766 <_ZN6kernel7process3elf8load_seg17h741ccb603a498f9cE+0x24>
    8000a766:	0108                	addi	a0,sp,128
    if !va.is_page_aligned() {
    8000a768:	00000097          	auipc	ra,0x0
    8000a76c:	dbc080e7          	jalr	-580(ra) # 8000a524 <_ZN6kernel6memory7address4Addr15is_page_aligned17ha9c72291cff71d68E>
    8000a770:	e4aa                	sd	a0,72(sp)
    8000a772:	a009                	j	8000a774 <_ZN6kernel7process3elf8load_seg17h741ccb603a498f9cE+0x32>
    8000a774:	6526                	ld	a0,72(sp)
    8000a776:	e10d                	bnez	a0,8000a798 <.LBB0_33+0x16>
    8000a778:	a009                	j	8000a77a <.LBB0_32>

000000008000a77a <.LBB0_32>:
        panic!("load_seg(): va must be page aligned.");
    8000a77a:	0001a517          	auipc	a0,0x1a
    8000a77e:	7d650513          	addi	a0,a0,2006 # 80024f50 <.L__unnamed_1>

000000008000a782 <.LBB0_33>:
    8000a782:	0001b617          	auipc	a2,0x1b
    8000a786:	80660613          	addi	a2,a2,-2042 # 80024f88 <.L__unnamed_2>
    8000a78a:	02400593          	li	a1,36
    8000a78e:	00016097          	auipc	ra,0x16
    8000a792:	53c080e7          	jalr	1340(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000a796:	0000                	unimp
    8000a798:	4501                	li	a0,0
    }

    let mut copy_size: usize = 0;
    8000a79a:	e52a                	sd	a0,136(sp)
    while copy_size < size {
    8000a79c:	a009                	j	8000a79e <.LBB0_33+0x1c>
    8000a79e:	652a                	ld	a0,136(sp)
    8000a7a0:	7586                	ld	a1,96(sp)
    8000a7a2:	00b56663          	bltu	a0,a1,8000a7ae <.LBB0_33+0x2c>
    8000a7a6:	a009                	j	8000a7a8 <.LBB0_33+0x26>
    8000a7a8:	4501                	li	a0,0

        copy_size += PGSIZE;
        va.add_page();
    }

    Ok(())
    8000a7aa:	f8aa                	sd	a0,112(sp)
}
    8000a7ac:	aa01                	j	8000a8bc <.LBB0_36+0x30>
        match page_table
    8000a7ae:	7526                	ld	a0,104(sp)
    8000a7b0:	6108                	ld	a0,0(a0)
                .pgt_translate(va) {
    8000a7b2:	658a                	ld	a1,128(sp)
        match page_table
    8000a7b4:	00005097          	auipc	ra,0x5
    8000a7b8:	914080e7          	jalr	-1772(ra) # 8000f0c8 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E>
    8000a7bc:	e92a                	sd	a0,144(sp)
    8000a7be:	ed2e                	sd	a1,152(sp)
    8000a7c0:	a009                	j	8000a7c2 <.LBB0_33+0x40>
            Some(pa) => {
    8000a7c2:	654a                	ld	a0,144(sp)
    8000a7c4:	4581                	li	a1,0
    8000a7c6:	00b50463          	beq	a0,a1,8000a7ce <.LBB0_34>
    8000a7ca:	a009                	j	8000a7cc <.LBB0_33+0x4a>
    8000a7cc:	a00d                	j	8000a7ee <.LBB0_35+0x18>

000000008000a7ce <.LBB0_34>:
                panic!("load_seg(): address should exist.");
    8000a7ce:	0001b517          	auipc	a0,0x1b
    8000a7d2:	8a250513          	addi	a0,a0,-1886 # 80025070 <.L__unnamed_3>

000000008000a7d6 <.LBB0_35>:
    8000a7d6:	0001b617          	auipc	a2,0x1b
    8000a7da:	8c260613          	addi	a2,a2,-1854 # 80025098 <.L__unnamed_4>
    8000a7de:	02100593          	li	a1,33
    8000a7e2:	00016097          	auipc	ra,0x16
    8000a7e6:	4e8080e7          	jalr	1256(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000a7ea:	0000                	unimp
        match page_table
    8000a7ec:	0000                	unimp
            Some(pa) => {
    8000a7ee:	656a                	ld	a0,152(sp)
    8000a7f0:	f12a                	sd	a0,160(sp)
                if size - copy_size < PGSIZE {
    8000a7f2:	652a                	ld	a0,136(sp)
    8000a7f4:	7586                	ld	a1,96(sp)
    8000a7f6:	40a58533          	sub	a0,a1,a0
    8000a7fa:	e0aa                	sd	a0,64(sp)
    8000a7fc:	0ca5e563          	bltu	a1,a0,8000a8c6 <.LBB0_37>
    8000a800:	a009                	j	8000a802 <.LBB0_35+0x2c>
    8000a802:	6506                	ld	a0,64(sp)
    8000a804:	00c55593          	srli	a1,a0,0xc
    8000a808:	4601                	li	a2,0
    8000a80a:	00c59b63          	bne	a1,a2,8000a820 <.LBB0_35+0x4a>
    8000a80e:	a009                	j	8000a810 <.LBB0_35+0x3a>
                    count = size - copy_size;
    8000a810:	652a                	ld	a0,136(sp)
    8000a812:	7586                	ld	a1,96(sp)
    8000a814:	40a58533          	sub	a0,a1,a0
    8000a818:	fc2a                	sd	a0,56(sp)
    8000a81a:	0ca5e563          	bltu	a1,a0,8000a8e4 <.LBB0_39>
    8000a81e:	a021                	j	8000a826 <.LBB0_35+0x50>
    8000a820:	6505                	lui	a0,0x1
                    count = PGSIZE;
    8000a822:	f52a                	sd	a0,168(sp)
                if size - copy_size < PGSIZE {
    8000a824:	a021                	j	8000a82c <.LBB0_35+0x56>
                    count = size - copy_size;
    8000a826:	7562                	ld	a0,56(sp)
    8000a828:	f52a                	sd	a0,168(sp)
                if size - copy_size < PGSIZE {
    8000a82a:	a009                	j	8000a82c <.LBB0_35+0x56>
                if inode_data.read(
    8000a82c:	6546                	ld	a0,80(sp)
    8000a82e:	ffffd097          	auipc	ra,0xffffd
    8000a832:	c3c080e7          	jalr	-964(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8000a836:	f82a                	sd	a0,48(sp)
    8000a838:	a009                	j	8000a83a <.LBB0_35+0x64>
    8000a83a:	1108                	addi	a0,sp,160
                    pa.as_usize(), 
    8000a83c:	ffffd097          	auipc	ra,0xffffd
    8000a840:	2ca080e7          	jalr	714(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    8000a844:	f42a                	sd	a0,40(sp)
    8000a846:	a009                	j	8000a848 <.LBB0_35+0x72>
                    (offset + copy_size) as u32, 
    8000a848:	652a                	ld	a0,136(sp)
    8000a84a:	65e6                	ld	a1,88(sp)
    8000a84c:	952e                	add	a0,a0,a1
    8000a84e:	f02a                	sd	a0,32(sp)
    8000a850:	0ab56963          	bltu	a0,a1,8000a902 <.LBB0_41>
    8000a854:	a009                	j	8000a856 <.LBB0_35+0x80>
                    count as u32
    8000a856:	772a                	ld	a4,168(sp)
    8000a858:	4501                	li	a0,0
                if inode_data.read(
    8000a85a:	75c2                	ld	a1,48(sp)
    8000a85c:	ec2a                	sd	a0,24(sp)
    8000a85e:	852e                	mv	a0,a1
    8000a860:	65e2                	ld	a1,24(sp)
    8000a862:	7622                	ld	a2,40(sp)
    8000a864:	7682                	ld	a3,32(sp)
    8000a866:	00011097          	auipc	ra,0x11
    8000a86a:	e52080e7          	jalr	-430(ra) # 8001b6b8 <_ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE>
    8000a86e:	f92a                	sd	a0,176(sp)
    8000a870:	fd2e                	sd	a1,184(sp)
    8000a872:	a009                	j	8000a874 <.LBB0_35+0x9e>
    8000a874:	1908                	addi	a0,sp,176
    8000a876:	00002097          	auipc	ra,0x2
    8000a87a:	408080e7          	jalr	1032(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8000a87e:	e82a                	sd	a0,16(sp)
    8000a880:	a009                	j	8000a882 <.LBB0_35+0xac>
    8000a882:	4501                	li	a0,0
    8000a884:	65c2                	ld	a1,16(sp)
    8000a886:	00a58b63          	beq	a1,a0,8000a89c <.LBB0_36+0x10>
    8000a88a:	a009                	j	8000a88c <.LBB0_36>

000000008000a88c <.LBB0_36>:
                    return Err("load_seg: Fail to read inode")
    8000a88c:	0001a517          	auipc	a0,0x1a
    8000a890:	7b050513          	addi	a0,a0,1968 # 8002503c <.L__unnamed_5>
    8000a894:	f8aa                	sd	a0,112(sp)
    8000a896:	4571                	li	a0,28
    8000a898:	fcaa                	sd	a0,120(sp)
}
    8000a89a:	a00d                	j	8000a8bc <.LBB0_36+0x30>
        copy_size += PGSIZE;
    8000a89c:	652a                	ld	a0,136(sp)
    8000a89e:	6585                	lui	a1,0x1
    8000a8a0:	95aa                	add	a1,a1,a0
    8000a8a2:	e42e                	sd	a1,8(sp)
    8000a8a4:	06a5ed63          	bltu	a1,a0,8000a91e <.LBB0_43>
    8000a8a8:	a009                	j	8000a8aa <.LBB0_36+0x1e>
    8000a8aa:	6522                	ld	a0,8(sp)
    8000a8ac:	e52a                	sd	a0,136(sp)
    8000a8ae:	0108                	addi	a0,sp,128
        va.add_page();
    8000a8b0:	00000097          	auipc	ra,0x0
    8000a8b4:	dfe080e7          	jalr	-514(ra) # 8000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>
    8000a8b8:	a009                	j	8000a8ba <.LBB0_36+0x2e>
    while copy_size < size {
    8000a8ba:	b5d5                	j	8000a79e <.LBB0_33+0x1c>
}
    8000a8bc:	7546                	ld	a0,112(sp)
    8000a8be:	75e6                	ld	a1,120(sp)
    8000a8c0:	70ae                	ld	ra,232(sp)
    8000a8c2:	616d                	addi	sp,sp,240
    8000a8c4:	8082                	ret

000000008000a8c6 <.LBB0_37>:
                if size - copy_size < PGSIZE {
    8000a8c6:	0001a517          	auipc	a0,0x1a
    8000a8ca:	6fa50513          	addi	a0,a0,1786 # 80024fc0 <str.0>

000000008000a8ce <.LBB0_38>:
    8000a8ce:	0001a617          	auipc	a2,0x1a
    8000a8d2:	6d260613          	addi	a2,a2,1746 # 80024fa0 <.L__unnamed_6>
    8000a8d6:	02100593          	li	a1,33
    8000a8da:	00016097          	auipc	ra,0x16
    8000a8de:	3f0080e7          	jalr	1008(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000a8e4 <.LBB0_39>:
                    count = size - copy_size;
    8000a8e4:	0001a517          	auipc	a0,0x1a
    8000a8e8:	6dc50513          	addi	a0,a0,1756 # 80024fc0 <str.0>

000000008000a8ec <.LBB0_40>:
    8000a8ec:	0001a617          	auipc	a2,0x1a
    8000a8f0:	6fc60613          	addi	a2,a2,1788 # 80024fe8 <.L__unnamed_7>
    8000a8f4:	02100593          	li	a1,33
    8000a8f8:	00016097          	auipc	ra,0x16
    8000a8fc:	3d2080e7          	jalr	978(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000a902 <.LBB0_41>:
                    (offset + copy_size) as u32, 
    8000a902:	0001a517          	auipc	a0,0x1a
    8000a906:	71e50513          	addi	a0,a0,1822 # 80025020 <str.1>

000000008000a90a <.LBB0_42>:
    8000a90a:	0001a617          	auipc	a2,0x1a
    8000a90e:	6f660613          	addi	a2,a2,1782 # 80025000 <.L__unnamed_8>
    8000a912:	45f1                	li	a1,28
    8000a914:	00016097          	auipc	ra,0x16
    8000a918:	3b6080e7          	jalr	950(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000a91e <.LBB0_43>:
        copy_size += PGSIZE;
    8000a91e:	0001a517          	auipc	a0,0x1a
    8000a922:	70250513          	addi	a0,a0,1794 # 80025020 <str.1>

000000008000a926 <.LBB0_44>:
    8000a926:	0001a617          	auipc	a2,0x1a
    8000a92a:	73260613          	addi	a2,a2,1842 # 80025058 <.L__unnamed_9>
    8000a92e:	45f1                	li	a1,28
    8000a930:	00016097          	auipc	ra,0x16
    8000a934:	39a080e7          	jalr	922(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process3elf4exec17hfb03f42ee0323024E:

000000008000a93a <_ZN6kernel7process3elf4exec17hfb03f42ee0323024E>:


pub unsafe fn exec(
    8000a93a:	a6010113          	addi	sp,sp,-1440
    8000a93e:	58113c23          	sd	ra,1432(sp)
    8000a942:	4eb13823          	sd	a1,1264(sp)
    8000a946:	4ec13c23          	sd	a2,1272(sp)
    8000a94a:	50d13023          	sd	a3,1280(sp)
    8000a94e:	50e13423          	sd	a4,1288(sp)
    8000a952:	4781                	li	a5,0
    path: &str, 
    argv: &[*const u8]
) -> Result<usize, &'static str> {
    let elf = Box::<ElfHeader>::new_zeroed().assume_init();
    8000a954:	4ef10723          	sb	a5,1262(sp)
    8000a958:	4ef107a3          	sb	a5,1263(sp)
    8000a95c:	2ae13c23          	sd	a4,696(sp)
    8000a960:	2ad13823          	sd	a3,688(sp)
    8000a964:	2ac13423          	sd	a2,680(sp)
    8000a968:	2ab13023          	sd	a1,672(sp)
    8000a96c:	28a13c23          	sd	a0,664(sp)
    8000a970:	0000b097          	auipc	ra,0xb
    8000a974:	9f8080e7          	jalr	-1544(ra) # 80015368 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17haf392853c9c868cdE>
    8000a978:	28a13823          	sd	a0,656(sp)
    8000a97c:	a009                	j	8000a97e <_ZN6kernel7process3elf4exec17hfb03f42ee0323024E+0x44>
    8000a97e:	29013503          	ld	a0,656(sp)
    8000a982:	0000b097          	auipc	ra,0xb
    8000a986:	5ec080e7          	jalr	1516(ra) # 80015f6e <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hbf0bf6e3c18ea814E>
    8000a98a:	2ca13023          	sd	a0,704(sp)
    8000a98e:	a009                	j	8000a990 <_ZN6kernel7process3elf4exec17hfb03f42ee0323024E+0x56>
    let ph = Box::<ProgHeader>::new_zeroed().assume_init();
    8000a990:	0000b097          	auipc	ra,0xb
    8000a994:	9c0080e7          	jalr	-1600(ra) # 80015350 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h45ba989bfa15e669E>
    8000a998:	28a13423          	sd	a0,648(sp)
    8000a99c:	a009                	j	8000a99e <_ZN6kernel7process3elf4exec17hfb03f42ee0323024E+0x64>
    8000a99e:	28813503          	ld	a0,648(sp)
    8000a9a2:	0000b097          	auipc	ra,0xb
    8000a9a6:	5f6080e7          	jalr	1526(ra) # 80015f98 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hed25fa8062bc4a28E>
    8000a9aa:	2ca13423          	sd	a0,712(sp)
    8000a9ae:	a009                	j	8000a9b0 <_ZN6kernel7process3elf4exec17hfb03f42ee0323024E+0x76>
    8000a9b0:	4501                	li	a0,0
    let mut page_table: Box<PageTable>;
    let mut size = 0;
    8000a9b2:	2ca13c23          	sd	a0,728(sp)
    8000a9b6:	15ac                	addi	a1,sp,744
    8000a9b8:	10000613          	li	a2,256
    let p: &mut Process;
    let mut sp: usize;
    let stack_base: usize;
    let mut user_stack: [usize; MAXARG] = [0;MAXARG];
    8000a9bc:	28a13023          	sd	a0,640(sp)
    8000a9c0:	852e                	mv	a0,a1
    8000a9c2:	28013583          	ld	a1,640(sp)
    8000a9c6:	00019097          	auipc	ra,0x19
    8000a9ca:	eec080e7          	jalr	-276(ra) # 800238b2 <memset>

000000008000a9ce <.LBB1_197>:
    let inode: Inode;

    LOG.begin_op();
    8000a9ce:	0004f597          	auipc	a1,0x4f
    8000a9d2:	69258593          	addi	a1,a1,1682 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000a9d6:	26a13c23          	sd	a0,632(sp)
    8000a9da:	852e                	mv	a0,a1
    8000a9dc:	0000c097          	auipc	ra,0xc
    8000a9e0:	702080e7          	jalr	1794(ra) # 800170de <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E>
    8000a9e4:	a009                	j	8000a9e6 <.LBB1_197+0x18>
    8000a9e6:	2a013503          	ld	a0,672(sp)
    8000a9ea:	56a13c23          	sd	a0,1400(sp)
    8000a9ee:	2a813583          	ld	a1,680(sp)
    8000a9f2:	58b13023          	sd	a1,1408(sp)
    #[inline(always)]
    #[allow(unused_attributes)]
    #[rustc_allow_const_fn_unstable(const_fn_transmute)]
    pub const fn as_bytes(&self) -> &[u8] {
        // SAFETY: const sound because we transmute two types with the same layout
        unsafe { mem::transmute(self) }
    8000a9f6:	58a13423          	sd	a0,1416(sp)
    8000a9fa:	58b13823          	sd	a1,1424(sp)

    // Get current inode by path
    // println!("[Debug] path: {}", path);
    inode = ICACHE.namei(path.as_bytes()).unwrap();
    8000a9fe:	26a13823          	sd	a0,624(sp)
    8000aa02:	26b13423          	sd	a1,616(sp)
    8000aa06:	a009                	j	8000aa08 <.LBB1_198>

000000008000aa08 <.LBB1_198>:
    8000aa08:	0004f597          	auipc	a1,0x4f
    8000aa0c:	72858593          	addi	a1,a1,1832 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    8000aa10:	40810513          	addi	a0,sp,1032
    8000aa14:	27013603          	ld	a2,624(sp)
    8000aa18:	26813683          	ld	a3,616(sp)
    8000aa1c:	00010097          	auipc	ra,0x10
    8000aa20:	d96080e7          	jalr	-618(ra) # 8001a7b2 <_ZN6kernel2fs5inode10InodeCache5namei17h40291e200b605147E>
    8000aa24:	a009                	j	8000aa26 <.LBB1_199>

000000008000aa26 <.LBB1_199>:
    8000aa26:	0001a597          	auipc	a1,0x1a
    8000aa2a:	68a58593          	addi	a1,a1,1674 # 800250b0 <.L__unnamed_10>
    8000aa2e:	40810513          	addi	a0,sp,1032
    8000aa32:	0000e097          	auipc	ra,0xe
    8000aa36:	2b0080e7          	jalr	688(ra) # 80018ce2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h902cf92567a41400E>
    8000aa3a:	50a13823          	sd	a0,1296(sp)
    8000aa3e:	50b13c23          	sd	a1,1304(sp)
    8000aa42:	3ea13c23          	sd	a0,1016(sp)
    8000aa46:	40b13023          	sd	a1,1024(sp)
    8000aa4a:	a009                	j	8000aa4c <.LBB1_199+0x26>
    8000aa4c:	40013503          	ld	a0,1024(sp)
    8000aa50:	3ea13823          	sd	a0,1008(sp)
    8000aa54:	3f813503          	ld	a0,1016(sp)
    8000aa58:	3ea13423          	sd	a0,1000(sp)
    8000aa5c:	4505                	li	a0,1

    // Get inode data by sleeplock
    let mut inode_guard = inode.lock();
    8000aa5e:	4ea10723          	sb	a0,1262(sp)
    8000aa62:	17a8                	addi	a0,sp,1000
    8000aa64:	00011097          	auipc	ra,0x11
    8000aa68:	7d8080e7          	jalr	2008(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    8000aa6c:	42a13023          	sd	a0,1056(sp)
    8000aa70:	42b13423          	sd	a1,1064(sp)
    8000aa74:	a009                	j	8000aa76 <.LBB1_199+0x50>
    8000aa76:	42010513          	addi	a0,sp,1056
           
    // println!("[Debug] 读取ELF Header");
    // Check ELF header
    if inode_guard.read(
    8000aa7a:	ffffd097          	auipc	ra,0xffffd
    8000aa7e:	9f0080e7          	jalr	-1552(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8000aa82:	26a13023          	sd	a0,608(sp)
    8000aa86:	a009                	j	8000aa88 <.LBB1_199+0x62>
        false, 
        &*elf as *const ElfHeader as usize, 
    8000aa88:	2c013603          	ld	a2,704(sp)
        0, 
        size_of::<ElfHeader>() as u32
    8000aa8c:	24c13c23          	sd	a2,600(sp)
    8000aa90:	a009                	j	8000aa92 <.LBB1_199+0x6c>
    8000aa92:	4501                	li	a0,0
    8000aa94:	04000713          	li	a4,64
    if inode_guard.read(
    8000aa98:	26013583          	ld	a1,608(sp)
    8000aa9c:	24a13823          	sd	a0,592(sp)
    8000aaa0:	852e                	mv	a0,a1
    8000aaa2:	25013583          	ld	a1,592(sp)
    8000aaa6:	25813603          	ld	a2,600(sp)
    8000aaaa:	25013683          	ld	a3,592(sp)
    8000aaae:	00011097          	auipc	ra,0x11
    8000aab2:	c0a080e7          	jalr	-1014(ra) # 8001b6b8 <_ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE>
    8000aab6:	42a13823          	sd	a0,1072(sp)
    8000aaba:	42b13c23          	sd	a1,1080(sp)
    8000aabe:	a009                	j	8000aac0 <.LBB1_199+0x9a>
    8000aac0:	43010513          	addi	a0,sp,1072
    8000aac4:	00002097          	auipc	ra,0x2
    8000aac8:	1ba080e7          	jalr	442(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8000aacc:	24a13423          	sd	a0,584(sp)
    8000aad0:	a009                	j	8000aad2 <.LBB1_199+0xac>
    8000aad2:	4501                	li	a0,0
    8000aad4:	24813583          	ld	a1,584(sp)
    8000aad8:	00a58f63          	beq	a1,a0,8000aaf6 <.LBB1_199+0xd0>
    8000aadc:	a009                	j	8000aade <.LBB1_199+0xb8>
    8000aade:	4501                	li	a0,0
    ).is_err() {
        drop(inode_guard);
    8000aae0:	4ea10723          	sb	a0,1262(sp)
    8000aae4:	42013503          	ld	a0,1056(sp)
    8000aae8:	42813583          	ld	a1,1064(sp)
    8000aaec:	00003097          	auipc	ra,0x3
    8000aaf0:	ed4080e7          	jalr	-300(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000aaf4:	a819                	j	8000ab0a <.LBB1_200>
        LOG.end_op();
        return Err("exec: Fail to read elf header.")
    }

    // println!("[Debug] 检查魔数");
    if elf.magic != ELF_MAGIC {
    8000aaf6:	2c013503          	ld	a0,704(sp)
    8000aafa:	4108                	lw	a0,0(a0)
    8000aafc:	464c45b7          	lui	a1,0x464c4
    8000ab00:	57f5859b          	addiw	a1,a1,1407
    8000ab04:	02b51963          	bne	a0,a1,8000ab36 <.LBB1_201+0x1a>
    8000ab08:	a099                	j	8000ab4e <.LBB1_202>

000000008000ab0a <.LBB1_200>:
        LOG.end_op();
    8000ab0a:	0004f517          	auipc	a0,0x4f
    8000ab0e:	55650513          	addi	a0,a0,1366 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000ab12:	0000d097          	auipc	ra,0xd
    8000ab16:	bbc080e7          	jalr	-1092(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000ab1a:	a009                	j	8000ab1c <.LBB1_201>

000000008000ab1c <.LBB1_201>:
        return Err("exec: Fail to read elf header.")
    8000ab1c:	0001a517          	auipc	a0,0x1a
    8000ab20:	5ac50513          	addi	a0,a0,1452 # 800250c8 <.L__unnamed_11>
    8000ab24:	29813583          	ld	a1,664(sp)
    8000ab28:	e588                	sd	a0,8(a1)
    8000ab2a:	4579                	li	a0,30
    8000ab2c:	e988                	sd	a0,16(a1)
    8000ab2e:	4505                	li	a0,1
    8000ab30:	e188                	sd	a0,0(a1)
    8000ab32:	3090006f          	j	8000b63a <.LBB1_229+0x102>
    8000ab36:	4501                	li	a0,0
        // println!("[Debug] 魔数错误, 为0x{:x}, 应为0x{:x}", elf.magic, ELF_MAGIC);
        drop(inode_guard);
    8000ab38:	4ea10723          	sb	a0,1262(sp)
    8000ab3c:	42013503          	ld	a0,1056(sp)
    8000ab40:	42813583          	ld	a1,1064(sp)
    8000ab44:	00003097          	auipc	ra,0x3
    8000ab48:	e7c080e7          	jalr	-388(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000ab4c:	a821                	j	8000ab64 <.LBB1_203>

000000008000ab4e <.LBB1_202>:
        LOG.end_op();
        return Err("exec: Elf magic number is wrong.")
    }

    let my_proc = CPU_MANAGER.myproc().unwrap();
    8000ab4e:	00064517          	auipc	a0,0x64
    8000ab52:	4b250513          	addi	a0,a0,1202 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000ab56:	00013097          	auipc	ra,0x13
    8000ab5a:	be2080e7          	jalr	-1054(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8000ab5e:	24a13023          	sd	a0,576(sp)
    8000ab62:	a805                	j	8000ab92 <.LBB1_205>

000000008000ab64 <.LBB1_203>:
        LOG.end_op();
    8000ab64:	0004f517          	auipc	a0,0x4f
    8000ab68:	4fc50513          	addi	a0,a0,1276 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000ab6c:	0000d097          	auipc	ra,0xd
    8000ab70:	b62080e7          	jalr	-1182(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000ab74:	a009                	j	8000ab76 <.LBB1_204>

000000008000ab76 <.LBB1_204>:
        return Err("exec: Elf magic number is wrong.")
    8000ab76:	0001a517          	auipc	a0,0x1a
    8000ab7a:	59050513          	addi	a0,a0,1424 # 80025106 <.L__unnamed_11+0x3e>
    8000ab7e:	29813583          	ld	a1,664(sp)
    8000ab82:	e588                	sd	a0,8(a1)
    8000ab84:	02000513          	li	a0,32
    8000ab88:	e988                	sd	a0,16(a1)
    8000ab8a:	4505                	li	a0,1
    8000ab8c:	e188                	sd	a0,0(a1)
    8000ab8e:	2ad0006f          	j	8000b63a <.LBB1_229+0x102>

000000008000ab92 <.LBB1_205>:
    let my_proc = CPU_MANAGER.myproc().unwrap();
    8000ab92:	0001a597          	auipc	a1,0x1a
    8000ab96:	6b658593          	addi	a1,a1,1718 # 80025248 <.L__unnamed_13>
    8000ab9a:	24013503          	ld	a0,576(sp)
    8000ab9e:	0000e097          	auipc	ra,0xe
    8000aba2:	fca080e7          	jalr	-54(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    8000aba6:	85aa                	mv	a1,a0
    8000aba8:	52a13423          	sd	a0,1320(sp)
    8000abac:	22b13c23          	sd	a1,568(sp)
    8000abb0:	a009                	j	8000abb2 <.LBB1_205+0x20>
        page_table = my_proc
    8000abb2:	23813503          	ld	a0,568(sp)
    8000abb6:	00008097          	auipc	ra,0x8
    8000abba:	800080e7          	jalr	-2048(ra) # 800123b6 <_ZN6kernel7process7process7Process14proc_pagetable17hb961113e51c17512E>
    8000abbe:	22a13823          	sd	a0,560(sp)
    8000abc2:	a009                	j	8000abc4 <.LBB1_206>

000000008000abc4 <.LBB1_206>:
    8000abc4:	0001a597          	auipc	a1,0x1a
    8000abc8:	69c58593          	addi	a1,a1,1692 # 80025260 <.L__unnamed_14>

000000008000abcc <.LBB1_207>:
    8000abcc:	0001a697          	auipc	a3,0x1a
    8000abd0:	6c468693          	addi	a3,a3,1732 # 80025290 <.L__unnamed_15>
    8000abd4:	02c00613          	li	a2,44
    8000abd8:	23013503          	ld	a0,560(sp)
    8000abdc:	0000e097          	auipc	ra,0xe
    8000abe0:	d34080e7          	jalr	-716(ra) # 80018910 <_ZN4core6option15Option$LT$T$GT$6expect17h079c333e627a1d46E>
    8000abe4:	22a13423          	sd	a0,552(sp)
    8000abe8:	a009                	j	8000abea <.LBB1_207+0x1e>
    8000abea:	4505                	li	a0,1
    8000abec:	4ea107a3          	sb	a0,1263(sp)
    8000abf0:	22813503          	ld	a0,552(sp)
    8000abf4:	2ca13823          	sd	a0,720(sp)
            .proc_pagetable()
            .expect("Fail to alloc pagetable for current process.");
        
        let ph_size = size_of::<ProgHeader>() as u32;
    8000abf8:	a009                	j	8000abfa <.LBB1_207+0x2e>
    8000abfa:	03800513          	li	a0,56
    8000abfe:	52a12823          	sw	a0,1328(sp)
        // Load program into memeory. 
        let mut off = elf.phoff;
    8000ac02:	2c013583          	ld	a1,704(sp)
    8000ac06:	7190                	ld	a2,32(a1)
    8000ac08:	44c13023          	sd	a2,1088(sp)
        for _ in 0..elf.phnum {
    8000ac0c:	03859583          	lh	a1,56(a1)
    8000ac10:	4601                	li	a2,0
    8000ac12:	44c11423          	sh	a2,1096(sp)
    8000ac16:	44b11523          	sh	a1,1098(sp)
    8000ac1a:	22a13023          	sd	a0,544(sp)
    8000ac1e:	8532                	mv	a0,a2
    8000ac20:	ffffa097          	auipc	ra,0xffffa
    8000ac24:	736080e7          	jalr	1846(ra) # 80005356 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf3aa14e7b5f0d30aE>
    8000ac28:	20a13c23          	sd	a0,536(sp)
    8000ac2c:	20b13823          	sd	a1,528(sp)
    8000ac30:	a009                	j	8000ac32 <.LBB1_207+0x66>
    8000ac32:	21813503          	ld	a0,536(sp)
    8000ac36:	44a11823          	sh	a0,1104(sp)
    8000ac3a:	21013583          	ld	a1,528(sp)
    8000ac3e:	44b11923          	sh	a1,1106(sp)
    8000ac42:	a009                	j	8000ac44 <.LBB1_207+0x78>
    8000ac44:	45010513          	addi	a0,sp,1104
    8000ac48:	ffffa097          	auipc	ra,0xffffa
    8000ac4c:	50e080e7          	jalr	1294(ra) # 80005156 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h05e81946a43afa94E>
    8000ac50:	44a11c23          	sh	a0,1112(sp)
    8000ac54:	44b11d23          	sh	a1,1114(sp)
    8000ac58:	a009                	j	8000ac5a <.LBB1_207+0x8e>
    8000ac5a:	45815503          	lhu	a0,1112(sp)
    8000ac5e:	4581                	li	a1,0
    8000ac60:	00b50463          	beq	a0,a1,8000ac68 <.LBB1_207+0x9c>
    8000ac64:	a009                	j	8000ac66 <.LBB1_207+0x9a>
    8000ac66:	a831                	j	8000ac82 <.LBB1_207+0xb6>
    8000ac68:	4501                	li	a0,0
            }
            off += size_of::<ProgHeader>();
        }
        // println!("[Debug] 完成加载程序");

        drop(inode_guard);
    8000ac6a:	4ea10723          	sb	a0,1262(sp)
    8000ac6e:	42013503          	ld	a0,1056(sp)
    8000ac72:	42813583          	ld	a1,1064(sp)
    8000ac76:	00003097          	auipc	ra,0x3
    8000ac7a:	d4a080e7          	jalr	-694(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000ac7e:	a68d                	j	8000afe0 <.LBB1_220>
        for _ in 0..elf.phnum {
    8000ac80:	0000                	unimp
    8000ac82:	45a11503          	lh	a0,1114(sp)
    8000ac86:	52a11a23          	sh	a0,1332(sp)
    8000ac8a:	52a11b23          	sh	a0,1334(sp)
    8000ac8e:	42010513          	addi	a0,sp,1056
            if inode_guard.read(
    8000ac92:	ffffc097          	auipc	ra,0xffffc
    8000ac96:	7d8080e7          	jalr	2008(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8000ac9a:	20a13423          	sd	a0,520(sp)
    8000ac9e:	a009                	j	8000aca0 <.LBB1_207+0xd4>
                &*ph as *const ProgHeader as usize, 
    8000aca0:	2c813603          	ld	a2,712(sp)
                off as u32, 
    8000aca4:	44013683          	ld	a3,1088(sp)
    8000aca8:	4501                	li	a0,0
            if inode_guard.read(
    8000acaa:	20813583          	ld	a1,520(sp)
    8000acae:	20a13023          	sd	a0,512(sp)
    8000acb2:	852e                	mv	a0,a1
    8000acb4:	20013583          	ld	a1,512(sp)
    8000acb8:	22013703          	ld	a4,544(sp)
    8000acbc:	00011097          	auipc	ra,0x11
    8000acc0:	9fc080e7          	jalr	-1540(ra) # 8001b6b8 <_ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE>
    8000acc4:	46a13023          	sd	a0,1120(sp)
    8000acc8:	46b13423          	sd	a1,1128(sp)
    8000accc:	a009                	j	8000acce <.LBB1_207+0x102>
    8000acce:	46010513          	addi	a0,sp,1120
    8000acd2:	00002097          	auipc	ra,0x2
    8000acd6:	ef8080e7          	jalr	-264(ra) # 8000cbca <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE>
    8000acda:	ffaa                	sd	a0,504(sp)
    8000acdc:	a009                	j	8000acde <.LBB1_207+0x112>
    8000acde:	4501                	li	a0,0
    8000ace0:	75fe                	ld	a1,504(sp)
    8000ace2:	00a58a63          	beq	a1,a0,8000acf6 <.LBB1_207+0x12a>
    8000ace6:	a009                	j	8000ace8 <.LBB1_207+0x11c>
                if ph.prog_type != ELF_PROG_LOAD { continue; }
    8000ace8:	2c813503          	ld	a0,712(sp)
    8000acec:	4108                	lw	a0,0(a0)
    8000acee:	4585                	li	a1,1
    8000acf0:	2eb51763          	bne	a0,a1,8000afde <.LBB1_219+0x30>
    8000acf4:	a819                	j	8000ad0a <.LBB1_207+0x13e>
    8000acf6:	4501                	li	a0,0
                drop(page_table);
    8000acf8:	4ea107a3          	sb	a0,1263(sp)
    8000acfc:	2d013503          	ld	a0,720(sp)
    8000ad00:	00003097          	auipc	ra,0x3
    8000ad04:	c62080e7          	jalr	-926(ra) # 8000d962 <_ZN4core3mem4drop17h86a83be12120d5d5E>
    8000ad08:	acb5                	j	8000af84 <.LBB1_217+0x18>
                if ph.mem_size < ph.file_size {
    8000ad0a:	2c813503          	ld	a0,712(sp)
    8000ad0e:	750c                	ld	a1,40(a0)
    8000ad10:	7108                	ld	a0,32(a0)
    8000ad12:	00a5fc63          	bgeu	a1,a0,8000ad2a <.LBB1_207+0x15e>
    8000ad16:	a009                	j	8000ad18 <.LBB1_207+0x14c>
                    page_table.proc_free_pagetable(size);
    8000ad18:	2d013503          	ld	a0,720(sp)
    8000ad1c:	2d813583          	ld	a1,728(sp)
    8000ad20:	00005097          	auipc	ra,0x5
    8000ad24:	66a080e7          	jalr	1642(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000ad28:	a811                	j	8000ad3c <.LBB1_207+0x170>
                if ph.vaddr + ph.mem_size < ph.vaddr {
    8000ad2a:	2c813503          	ld	a0,712(sp)
    8000ad2e:	690c                	ld	a1,16(a0)
    8000ad30:	7508                	ld	a0,40(a0)
    8000ad32:	952e                	add	a0,a0,a1
    8000ad34:	fbaa                	sd	a0,496(sp)
    8000ad36:	10b56de3          	bltu	a0,a1,8000b650 <.LBB1_230>
    8000ad3a:	a0a1                	j	8000ad82 <.LBB1_209+0x1c>
    8000ad3c:	4501                	li	a0,0
                    drop(inode_guard);
    8000ad3e:	4ea10723          	sb	a0,1262(sp)
    8000ad42:	42013503          	ld	a0,1056(sp)
    8000ad46:	42813583          	ld	a1,1064(sp)
    8000ad4a:	00003097          	auipc	ra,0x3
    8000ad4e:	c76080e7          	jalr	-906(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000ad52:	a009                	j	8000ad54 <.LBB1_208>

000000008000ad54 <.LBB1_208>:
                    LOG.end_op();
    8000ad54:	0004f517          	auipc	a0,0x4f
    8000ad58:	30c50513          	addi	a0,a0,780 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000ad5c:	0000d097          	auipc	ra,0xd
    8000ad60:	972080e7          	jalr	-1678(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000ad64:	a009                	j	8000ad66 <.LBB1_209>

000000008000ad66 <.LBB1_209>:
                    return Err("exec: memory size is less than file size.")
    8000ad66:	0001a517          	auipc	a0,0x1a
    8000ad6a:	54250513          	addi	a0,a0,1346 # 800252a8 <.L__unnamed_16>
    8000ad6e:	29813583          	ld	a1,664(sp)
    8000ad72:	e588                	sd	a0,8(a1)
    8000ad74:	02900513          	li	a0,41
    8000ad78:	e988                	sd	a0,16(a1)
    8000ad7a:	4505                	li	a0,1
    8000ad7c:	e188                	sd	a0,0(a1)
    8000ad7e:	0290006f          	j	8000b5a6 <.LBB1_229+0x6e>
                if ph.vaddr + ph.mem_size < ph.vaddr {
    8000ad82:	2c813503          	ld	a0,712(sp)
    8000ad86:	6908                	ld	a0,16(a0)
    8000ad88:	75de                	ld	a1,496(sp)
    8000ad8a:	00a5fc63          	bgeu	a1,a0,8000ada2 <.LBB1_209+0x3c>
    8000ad8e:	a009                	j	8000ad90 <.LBB1_209+0x2a>
                    page_table.proc_free_pagetable(size);
    8000ad90:	2d013503          	ld	a0,720(sp)
    8000ad94:	2d813583          	ld	a1,728(sp)
    8000ad98:	00005097          	auipc	ra,0x5
    8000ad9c:	5f2080e7          	jalr	1522(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000ada0:	a005                	j	8000adc0 <.LBB1_209+0x5a>
                match page_table
    8000ada2:	2d013503          	ld	a0,720(sp)
                .uvm_alloc(size, ph.vaddr + ph.mem_size)
    8000ada6:	2d813583          	ld	a1,728(sp)
    8000adaa:	2c813603          	ld	a2,712(sp)
    8000adae:	6a14                	ld	a3,16(a2)
    8000adb0:	7610                	ld	a2,40(a2)
    8000adb2:	9636                	add	a2,a2,a3
    8000adb4:	f7aa                	sd	a0,488(sp)
    8000adb6:	f3ae                	sd	a1,480(sp)
    8000adb8:	efb2                	sd	a2,472(sp)
    8000adba:	0ad669e3          	bltu	a2,a3,8000b66c <.LBB1_232>
    8000adbe:	a091                	j	8000ae02 <.LBB1_211+0x18>
    8000adc0:	4501                	li	a0,0
                    drop(inode_guard);
    8000adc2:	4ea10723          	sb	a0,1262(sp)
    8000adc6:	42013503          	ld	a0,1056(sp)
    8000adca:	42813583          	ld	a1,1064(sp)
    8000adce:	00003097          	auipc	ra,0x3
    8000add2:	bf2080e7          	jalr	-1038(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000add6:	a009                	j	8000add8 <.LBB1_210>

000000008000add8 <.LBB1_210>:
                    LOG.end_op();
    8000add8:	0004f517          	auipc	a0,0x4f
    8000addc:	28850513          	addi	a0,a0,648 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000ade0:	0000d097          	auipc	ra,0xd
    8000ade4:	8ee080e7          	jalr	-1810(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000ade8:	a009                	j	8000adea <.LBB1_211>

000000008000adea <.LBB1_211>:
                    return Err("exec: vaddr + mem_size < vaddr")
    8000adea:	0001a517          	auipc	a0,0x1a
    8000adee:	50650513          	addi	a0,a0,1286 # 800252f0 <.L__unnamed_17>
    8000adf2:	29813583          	ld	a1,664(sp)
    8000adf6:	e588                	sd	a0,8(a1)
    8000adf8:	4579                	li	a0,30
    8000adfa:	e988                	sd	a0,16(a1)
    8000adfc:	4505                	li	a0,1
    8000adfe:	e188                	sd	a0,0(a1)
    8000ae00:	a75d                	j	8000b5a6 <.LBB1_229+0x6e>
                match page_table
    8000ae02:	753e                	ld	a0,488(sp)
    8000ae04:	759e                	ld	a1,480(sp)
    8000ae06:	667e                	ld	a2,472(sp)
    8000ae08:	00004097          	auipc	ra,0x4
    8000ae0c:	6e8080e7          	jalr	1768(ra) # 8000f4f0 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE>
    8000ae10:	48a13023          	sd	a0,1152(sp)
    8000ae14:	48b13423          	sd	a1,1160(sp)
    8000ae18:	a009                	j	8000ae1a <.LBB1_211+0x30>
    8000ae1a:	48010513          	addi	a0,sp,1152
    8000ae1e:	0000d097          	auipc	ra,0xd
    8000ae22:	792080e7          	jalr	1938(ra) # 800185b0 <_ZN4core6option15Option$LT$T$GT$4take17he7814b4d71b2ffb7E>
    8000ae26:	46a13823          	sd	a0,1136(sp)
    8000ae2a:	46b13c23          	sd	a1,1144(sp)
    8000ae2e:	a009                	j	8000ae30 <.LBB1_211+0x46>
                    None => {
    8000ae30:	47013503          	ld	a0,1136(sp)
    8000ae34:	4581                	li	a1,0
    8000ae36:	02b50563          	beq	a0,a1,8000ae60 <.LBB1_211+0x76>
    8000ae3a:	a009                	j	8000ae3c <.LBB1_211+0x52>
                    Some(new_size) => {
    8000ae3c:	47813503          	ld	a0,1144(sp)
    8000ae40:	52a13c23          	sd	a0,1336(sp)
                        size = new_size;
    8000ae44:	2ca13c23          	sd	a0,728(sp)
                if ph.vaddr % PGSIZE != 0 {
    8000ae48:	2c813503          	ld	a0,712(sp)
    8000ae4c:	01055503          	lhu	a0,16(a0)
    8000ae50:	6585                	lui	a1,0x1
    8000ae52:	35fd                	addiw	a1,a1,-1
    8000ae54:	8d6d                	and	a0,a0,a1
    8000ae56:	4581                	li	a1,0
    8000ae58:	06b50763          	beq	a0,a1,8000aec6 <.LBB1_213+0x2a>
    8000ae5c:	a8a1                	j	8000aeb4 <.LBB1_213+0x18>
                match page_table
    8000ae5e:	0000                	unimp
                        page_table.proc_free_pagetable(size);
    8000ae60:	2d013503          	ld	a0,720(sp)
    8000ae64:	2d813583          	ld	a1,728(sp)
    8000ae68:	00005097          	auipc	ra,0x5
    8000ae6c:	522080e7          	jalr	1314(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000ae70:	a009                	j	8000ae72 <.LBB1_211+0x88>
    8000ae72:	4501                	li	a0,0
                        drop(inode_guard);
    8000ae74:	4ea10723          	sb	a0,1262(sp)
    8000ae78:	42013503          	ld	a0,1056(sp)
    8000ae7c:	42813583          	ld	a1,1064(sp)
    8000ae80:	00003097          	auipc	ra,0x3
    8000ae84:	b40080e7          	jalr	-1216(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000ae88:	a009                	j	8000ae8a <.LBB1_212>

000000008000ae8a <.LBB1_212>:
                        LOG.end_op();
    8000ae8a:	0004f517          	auipc	a0,0x4f
    8000ae8e:	1d650513          	addi	a0,a0,470 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000ae92:	0000d097          	auipc	ra,0xd
    8000ae96:	83c080e7          	jalr	-1988(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000ae9a:	a009                	j	8000ae9c <.LBB1_213>

000000008000ae9c <.LBB1_213>:
                        return Err("exec: Fail to uvmalloc.")
    8000ae9c:	0001a517          	auipc	a0,0x1a
    8000aea0:	4fc50513          	addi	a0,a0,1276 # 80025398 <.L__unnamed_18>
    8000aea4:	29813583          	ld	a1,664(sp)
    8000aea8:	e588                	sd	a0,8(a1)
    8000aeaa:	455d                	li	a0,23
    8000aeac:	e988                	sd	a0,16(a1)
    8000aeae:	4505                	li	a0,1
    8000aeb0:	e188                	sd	a0,0(a1)
    8000aeb2:	add5                	j	8000b5a6 <.LBB1_229+0x6e>
                    page_table.proc_free_pagetable(size);
    8000aeb4:	2d013503          	ld	a0,720(sp)
    8000aeb8:	2d813583          	ld	a1,728(sp)
    8000aebc:	00005097          	auipc	ra,0x5
    8000aec0:	4ce080e7          	jalr	1230(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000aec4:	a015                	j	8000aee8 <.LBB1_214>
                    ph.vaddr, 
    8000aec6:	2c813503          	ld	a0,712(sp)
    8000aeca:	690c                	ld	a1,16(a0)
                    ph.off, 
    8000aecc:	6514                	ld	a3,8(a0)
                    ph.file_size
    8000aece:	7118                	ld	a4,32(a0)
    8000aed0:	0d88                	addi	a0,sp,720
    8000aed2:	42010613          	addi	a2,sp,1056
                if load_seg(
    8000aed6:	00000097          	auipc	ra,0x0
    8000aeda:	86c080e7          	jalr	-1940(ra) # 8000a742 <_ZN6kernel7process3elf8load_seg17h741ccb603a498f9cE>
    8000aede:	48a13823          	sd	a0,1168(sp)
    8000aee2:	48b13c23          	sd	a1,1176(sp)
    8000aee6:	a03d                	j	8000af14 <.LBB1_215+0x1a>

000000008000aee8 <.LBB1_214>:
                    LOG.end_op();
    8000aee8:	0004f517          	auipc	a0,0x4f
    8000aeec:	17850513          	addi	a0,a0,376 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000aef0:	0000c097          	auipc	ra,0xc
    8000aef4:	7de080e7          	jalr	2014(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000aef8:	a009                	j	8000aefa <.LBB1_215>

000000008000aefa <.LBB1_215>:
                    return Err("exec: Programe Header must be integer multiple of PGSIZE. ")
    8000aefa:	0001a517          	auipc	a0,0x1a
    8000aefe:	42e50513          	addi	a0,a0,1070 # 80025328 <.L__unnamed_19>
    8000af02:	29813583          	ld	a1,664(sp)
    8000af06:	e588                	sd	a0,8(a1)
    8000af08:	03a00513          	li	a0,58
    8000af0c:	e988                	sd	a0,16(a1)
    8000af0e:	4505                	li	a0,1
    8000af10:	e188                	sd	a0,0(a1)
    8000af12:	ad51                	j	8000b5a6 <.LBB1_229+0x6e>
    8000af14:	49010513          	addi	a0,sp,1168
                if load_seg(
    8000af18:	00002097          	auipc	ra,0x2
    8000af1c:	d66080e7          	jalr	-666(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8000af20:	ebaa                	sd	a0,464(sp)
    8000af22:	a009                	j	8000af24 <.LBB1_215+0x2a>
    8000af24:	4501                	li	a0,0
    8000af26:	65de                	ld	a1,464(sp)
    8000af28:	00a58c63          	beq	a1,a0,8000af40 <.LBB1_215+0x46>
    8000af2c:	a009                	j	8000af2e <.LBB1_215+0x34>
                    page_table.proc_free_pagetable(size);
    8000af2e:	2d013503          	ld	a0,720(sp)
    8000af32:	2d813583          	ld	a1,728(sp)
    8000af36:	00005097          	auipc	ra,0x5
    8000af3a:	454080e7          	jalr	1108(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000af3e:	a011                	j	8000af42 <.LBB1_215+0x48>
            off += size_of::<ProgHeader>();
    8000af40:	a059                	j	8000afc6 <.LBB1_219+0x18>
    8000af42:	4501                	li	a0,0
                    drop(inode_guard);
    8000af44:	4ea10723          	sb	a0,1262(sp)
    8000af48:	42013503          	ld	a0,1056(sp)
    8000af4c:	42813583          	ld	a1,1064(sp)
    8000af50:	00003097          	auipc	ra,0x3
    8000af54:	a70080e7          	jalr	-1424(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000af58:	a009                	j	8000af5a <.LBB1_216>

000000008000af5a <.LBB1_216>:
                    LOG.end_op();
    8000af5a:	0004f517          	auipc	a0,0x4f
    8000af5e:	10650513          	addi	a0,a0,262 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000af62:	0000c097          	auipc	ra,0xc
    8000af66:	76c080e7          	jalr	1900(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000af6a:	a009                	j	8000af6c <.LBB1_217>

000000008000af6c <.LBB1_217>:
                    return Err("exec: Fail to load segment. ")
    8000af6c:	0001a517          	auipc	a0,0x1a
    8000af70:	3f650513          	addi	a0,a0,1014 # 80025362 <.L__unnamed_20>
    8000af74:	29813583          	ld	a1,664(sp)
    8000af78:	e588                	sd	a0,8(a1)
    8000af7a:	4571                	li	a0,28
    8000af7c:	e988                	sd	a0,16(a1)
    8000af7e:	4505                	li	a0,1
    8000af80:	e188                	sd	a0,0(a1)
    8000af82:	a515                	j	8000b5a6 <.LBB1_229+0x6e>
    8000af84:	4501                	li	a0,0
                drop(inode_guard);
    8000af86:	4ea10723          	sb	a0,1262(sp)
    8000af8a:	42013503          	ld	a0,1056(sp)
    8000af8e:	42813583          	ld	a1,1064(sp)
    8000af92:	00003097          	auipc	ra,0x3
    8000af96:	a2e080e7          	jalr	-1490(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8000af9a:	a009                	j	8000af9c <.LBB1_218>

000000008000af9c <.LBB1_218>:
                LOG.end_op();
    8000af9c:	0004f517          	auipc	a0,0x4f
    8000afa0:	0c450513          	addi	a0,a0,196 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000afa4:	0000c097          	auipc	ra,0xc
    8000afa8:	72a080e7          	jalr	1834(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000afac:	a009                	j	8000afae <.LBB1_219>

000000008000afae <.LBB1_219>:
                return Err("exec: Fail to read from inode")
    8000afae:	0001a517          	auipc	a0,0x1a
    8000afb2:	40150513          	addi	a0,a0,1025 # 800253af <.L__unnamed_21>
    8000afb6:	29813583          	ld	a1,664(sp)
    8000afba:	e588                	sd	a0,8(a1)
    8000afbc:	4575                	li	a0,29
    8000afbe:	e988                	sd	a0,16(a1)
    8000afc0:	4505                	li	a0,1
    8000afc2:	e188                	sd	a0,0(a1)
    8000afc4:	a3cd                	j	8000b5a6 <.LBB1_229+0x6e>
            off += size_of::<ProgHeader>();
    8000afc6:	44013503          	ld	a0,1088(sp)
    8000afca:	03850593          	addi	a1,a0,56
    8000afce:	e7ae                	sd	a1,456(sp)
    8000afd0:	6aa5ec63          	bltu	a1,a0,8000b688 <.LBB1_234>
    8000afd4:	a009                	j	8000afd6 <.LBB1_219+0x28>
    8000afd6:	653e                	ld	a0,456(sp)
    8000afd8:	44a13023          	sd	a0,1088(sp)
        for _ in 0..elf.phnum {
    8000afdc:	b1a5                	j	8000ac44 <.LBB1_207+0x78>
    8000afde:	b19d                	j	8000ac44 <.LBB1_207+0x78>

000000008000afe0 <.LBB1_220>:
        LOG.end_op();
    8000afe0:	0004f517          	auipc	a0,0x4f
    8000afe4:	08050513          	addi	a0,a0,128 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000afe8:	0000c097          	auipc	ra,0xc
    8000afec:	6e6080e7          	jalr	1766(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000aff0:	a009                	j	8000aff2 <.LBB1_221>

000000008000aff2 <.LBB1_221>:

        p = CPU_MANAGER.myproc().unwrap();
    8000aff2:	00064517          	auipc	a0,0x64
    8000aff6:	00e50513          	addi	a0,a0,14 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000affa:	00012097          	auipc	ra,0x12
    8000affe:	73e080e7          	jalr	1854(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8000b002:	e3aa                	sd	a0,448(sp)
    8000b004:	a009                	j	8000b006 <.LBB1_222>

000000008000b006 <.LBB1_222>:
    8000b006:	0001a597          	auipc	a1,0x1a
    8000b00a:	3ca58593          	addi	a1,a1,970 # 800253d0 <.L__unnamed_22>
    8000b00e:	651e                	ld	a0,448(sp)
    8000b010:	0000e097          	auipc	ra,0xe
    8000b014:	b58080e7          	jalr	-1192(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    8000b018:	ff2a                	sd	a0,440(sp)
    8000b01a:	a009                	j	8000b01c <.LBB1_222+0x16>
    8000b01c:	757a                	ld	a0,440(sp)
    8000b01e:	54a13023          	sd	a0,1344(sp)
        let old_size = (&*p.data.get()).size;
    8000b022:	04050513          	addi	a0,a0,64
    8000b026:	0000c097          	auipc	ra,0xc
    8000b02a:	962080e7          	jalr	-1694(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8000b02e:	fb2a                	sd	a0,432(sp)
    8000b030:	a009                	j	8000b032 <.LBB1_222+0x2c>
    8000b032:	755a                	ld	a0,432(sp)
    8000b034:	650c                	ld	a1,8(a0)
    8000b036:	54b13423          	sd	a1,1352(sp)

        // Allocate two pages at the next page boundary
        // Use the second as the user stack. 
        size = page_round_up(size);
    8000b03a:	2d813503          	ld	a0,728(sp)
    8000b03e:	f72e                	sd	a1,424(sp)
    8000b040:	0000c097          	auipc	ra,0xc
    8000b044:	b28080e7          	jalr	-1240(ra) # 80016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>
    8000b048:	f32a                	sd	a0,416(sp)
    8000b04a:	a009                	j	8000b04c <.LBB1_222+0x46>
    8000b04c:	751a                	ld	a0,416(sp)
    8000b04e:	2ca13c23          	sd	a0,728(sp)
        match page_table
    8000b052:	2d013503          	ld	a0,720(sp)
                .uvm_alloc(size, size + 2 * PGSIZE) {
    8000b056:	759a                	ld	a1,416(sp)
    8000b058:	6609                	lui	a2,0x2
    8000b05a:	769a                	ld	a3,416(sp)
    8000b05c:	9636                	add	a2,a2,a3
    8000b05e:	ef2a                	sd	a0,408(sp)
    8000b060:	eb2e                	sd	a1,400(sp)
    8000b062:	e732                	sd	a2,392(sp)
    8000b064:	64d66063          	bltu	a2,a3,8000b6a4 <.LBB1_236>
    8000b068:	a009                	j	8000b06a <.LBB1_222+0x64>
        match page_table
    8000b06a:	657a                	ld	a0,408(sp)
    8000b06c:	65da                	ld	a1,400(sp)
    8000b06e:	663a                	ld	a2,392(sp)
    8000b070:	00004097          	auipc	ra,0x4
    8000b074:	480080e7          	jalr	1152(ra) # 8000f4f0 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE>
    8000b078:	4aa13023          	sd	a0,1184(sp)
    8000b07c:	4ab13423          	sd	a1,1192(sp)
    8000b080:	a009                	j	8000b082 <.LBB1_222+0x7c>
            None => {
    8000b082:	4a013503          	ld	a0,1184(sp)
    8000b086:	4581                	li	a1,0
    8000b088:	02b50363          	beq	a0,a1,8000b0ae <.LBB1_222+0xa8>
    8000b08c:	a009                	j	8000b08e <.LBB1_222+0x88>
                page_table.proc_free_pagetable(size);
                return Err("exec: Fail to uvmalloc")
            }

            Some(new_size) => {
    8000b08e:	4a813503          	ld	a0,1192(sp)
    8000b092:	54a13823          	sd	a0,1360(sp)
                size = new_size;
    8000b096:	2ca13c23          	sd	a0,728(sp)
            }
        }

        page_table.uvm_clear(VirtualAddress::new(size - 2 * PGSIZE));
    8000b09a:	2d013583          	ld	a1,720(sp)
    8000b09e:	7679                	lui	a2,0xffffe
    8000b0a0:	962a                	add	a2,a2,a0
    8000b0a2:	e32e                	sd	a1,384(sp)
    8000b0a4:	feb2                	sd	a2,376(sp)
    8000b0a6:	60c56d63          	bltu	a0,a2,8000b6c0 <.LBB1_238>
    8000b0aa:	a03d                	j	8000b0d8 <.LBB1_223+0x18>
        match page_table
    8000b0ac:	0000                	unimp
                page_table.proc_free_pagetable(size);
    8000b0ae:	2d013503          	ld	a0,720(sp)
    8000b0b2:	2d813583          	ld	a1,728(sp)
    8000b0b6:	00005097          	auipc	ra,0x5
    8000b0ba:	2d4080e7          	jalr	724(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000b0be:	a009                	j	8000b0c0 <.LBB1_223>

000000008000b0c0 <.LBB1_223>:
                return Err("exec: Fail to uvmalloc")
    8000b0c0:	0001a517          	auipc	a0,0x1a
    8000b0c4:	54850513          	addi	a0,a0,1352 # 80025608 <.L__unnamed_23>
    8000b0c8:	29813583          	ld	a1,664(sp)
    8000b0cc:	e588                	sd	a0,8(a1)
    8000b0ce:	4559                	li	a0,22
    8000b0d0:	e988                	sd	a0,16(a1)
    8000b0d2:	4505                	li	a0,1
    8000b0d4:	e188                	sd	a0,0(a1)
    8000b0d6:	a1f9                	j	8000b5a4 <.LBB1_229+0x6c>
        page_table.uvm_clear(VirtualAddress::new(size - 2 * PGSIZE));
    8000b0d8:	7576                	ld	a0,376(sp)
    8000b0da:	ffffd097          	auipc	ra,0xffffd
    8000b0de:	a3e080e7          	jalr	-1474(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000b0e2:	faaa                	sd	a0,368(sp)
    8000b0e4:	a009                	j	8000b0e6 <.LBB1_223+0x26>
    8000b0e6:	651a                	ld	a0,384(sp)
    8000b0e8:	75d6                	ld	a1,368(sp)
    8000b0ea:	00005097          	auipc	ra,0x5
    8000b0ee:	9cc080e7          	jalr	-1588(ra) # 8000fab6 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_clear17hdcf2db7601e81774E>
    8000b0f2:	a009                	j	8000b0f4 <.LBB1_223+0x34>
        // Get stack top address. 
        sp = size;
    8000b0f4:	2d813503          	ld	a0,728(sp)
    8000b0f8:	2ea13023          	sd	a0,736(sp)
        // Get stack bottom address. 
        stack_base = sp - PGSIZE;
    8000b0fc:	80050593          	addi	a1,a0,-2048
    8000b100:	80058593          	addi	a1,a1,-2048
    8000b104:	f6ae                	sd	a1,360(sp)
    8000b106:	5cb56c63          	bltu	a0,a1,8000b6de <.LBB1_240>
    8000b10a:	a009                	j	8000b10c <.LBB1_223+0x4c>
    8000b10c:	7536                	ld	a0,360(sp)
    8000b10e:	54a13c23          	sd	a0,1368(sp)
    8000b112:	4581                	li	a1,0

        // Push argument strings, prepare rest of stack in ustack. 
        let mut argc = 0;
    8000b114:	4ab13823          	sd	a1,1200(sp)
        loop {
    8000b118:	a009                	j	8000b11a <.LBB1_223+0x5a>
            if argv[argc] as usize == 0x0 { break; }
    8000b11a:	4b013503          	ld	a0,1200(sp)
    8000b11e:	2b813583          	ld	a1,696(sp)
    8000b122:	f2aa                	sd	a0,352(sp)
    8000b124:	5cb57c63          	bgeu	a0,a1,8000b6fc <.LBB1_242>
    8000b128:	a009                	j	8000b12a <.LBB1_223+0x6a>
    8000b12a:	7516                	ld	a0,352(sp)
    8000b12c:	00351593          	slli	a1,a0,0x3
    8000b130:	2b013603          	ld	a2,688(sp)
    8000b134:	95b2                	add	a1,a1,a2
    8000b136:	618c                	ld	a1,0(a1)
    8000b138:	4681                	li	a3,0
    8000b13a:	00d59b63          	bne	a1,a3,8000b150 <.LBB1_223+0x90>
    8000b13e:	a009                	j	8000b140 <.LBB1_223+0x80>
                    return Err("exec: Fail to copy out.") 
                }
            user_stack[argc] = sp;
            argc += 1;
        }
    user_stack[argc] = 0;
    8000b140:	4b013503          	ld	a0,1200(sp)
    8000b144:	02000593          	li	a1,32
    8000b148:	eeaa                	sd	a0,344(sp)
    8000b14a:	22b56063          	bltu	a0,a1,8000b36a <.LBB1_226+0x3e>
    8000b14e:	ad45                	j	8000b7fe <.LBB1_256>
            if argc >= MAXARG {
    8000b150:	4b013503          	ld	a0,1200(sp)
    8000b154:	02000593          	li	a1,32
    8000b158:	00b56c63          	bltu	a0,a1,8000b170 <.LBB1_223+0xb0>
    8000b15c:	a009                	j	8000b15e <.LBB1_223+0x9e>
                page_table.proc_free_pagetable(size);
    8000b15e:	2d013503          	ld	a0,720(sp)
    8000b162:	2d813583          	ld	a1,728(sp)
    8000b166:	00005097          	auipc	ra,0x5
    8000b16a:	224080e7          	jalr	548(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000b16e:	a809                	j	8000b180 <.LBB1_224>
            sp -= str_len(argv[argc]) + 1;
    8000b170:	4b013503          	ld	a0,1200(sp)
    8000b174:	2b813583          	ld	a1,696(sp)
    8000b178:	eaaa                	sd	a0,336(sp)
    8000b17a:	02b56063          	bltu	a0,a1,8000b19a <.LBB1_224+0x1a>
    8000b17e:	ab59                	j	8000b714 <.LBB1_243>

000000008000b180 <.LBB1_224>:
                return Err("exec: argc is more than MAXARG. ")
    8000b180:	0001a517          	auipc	a0,0x1a
    8000b184:	06650513          	addi	a0,a0,102 # 800251e6 <.L__unnamed_11+0x11e>
    8000b188:	29813583          	ld	a1,664(sp)
    8000b18c:	e588                	sd	a0,8(a1)
    8000b18e:	02000513          	li	a0,32
    8000b192:	e988                	sd	a0,16(a1)
    8000b194:	4505                	li	a0,1
    8000b196:	e188                	sd	a0,0(a1)
    8000b198:	a121                	j	8000b5a0 <.LBB1_229+0x68>
            sp -= str_len(argv[argc]) + 1;
    8000b19a:	6556                	ld	a0,336(sp)
    8000b19c:	00351593          	slli	a1,a0,0x3
    8000b1a0:	2b013603          	ld	a2,688(sp)
    8000b1a4:	95b2                	add	a1,a1,a2
    8000b1a6:	6188                	ld	a0,0(a1)
    8000b1a8:	00001097          	auipc	ra,0x1
    8000b1ac:	6fc080e7          	jalr	1788(ra) # 8000c8a4 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E>
    8000b1b0:	e6aa                	sd	a0,328(sp)
    8000b1b2:	a009                	j	8000b1b4 <.LBB1_224+0x34>
    8000b1b4:	6536                	ld	a0,328(sp)
    8000b1b6:	00150593          	addi	a1,a0,1
    8000b1ba:	e2ae                	sd	a1,320(sp)
    8000b1bc:	56a5e863          	bltu	a1,a0,8000b72c <.LBB1_244>
    8000b1c0:	a009                	j	8000b1c2 <.LBB1_224+0x42>
    8000b1c2:	2e013503          	ld	a0,736(sp)
    8000b1c6:	6596                	ld	a1,320(sp)
    8000b1c8:	40b50633          	sub	a2,a0,a1
    8000b1cc:	fe32                	sd	a2,312(sp)
    8000b1ce:	56c56d63          	bltu	a0,a2,8000b748 <.LBB1_246>
    8000b1d2:	a009                	j	8000b1d4 <.LBB1_224+0x54>
    8000b1d4:	7572                	ld	a0,312(sp)
    8000b1d6:	2ea13023          	sd	a0,736(sp)
            sp = align_sp(sp);
    8000b1da:	00000097          	auipc	ra,0x0
    8000b1de:	708080e7          	jalr	1800(ra) # 8000b8e2 <_ZN6kernel7process3elf8align_sp17h31655f990bf2d0efE>
    8000b1e2:	fa2a                	sd	a0,304(sp)
    8000b1e4:	a009                	j	8000b1e6 <.LBB1_224+0x66>
    8000b1e6:	7552                	ld	a0,304(sp)
    8000b1e8:	2ea13023          	sd	a0,736(sp)
            if sp < stack_base {
    8000b1ec:	75b6                	ld	a1,360(sp)
    8000b1ee:	00b57d63          	bgeu	a0,a1,8000b208 <.LBB1_224+0x88>
    8000b1f2:	a009                	j	8000b1f4 <.LBB1_224+0x74>
    8000b1f4:	4501                	li	a0,0
                drop(page_table);
    8000b1f6:	4ea107a3          	sb	a0,1263(sp)
    8000b1fa:	2d013503          	ld	a0,720(sp)
    8000b1fe:	00002097          	auipc	ra,0x2
    8000b202:	764080e7          	jalr	1892(ra) # 8000d962 <_ZN4core3mem4drop17h86a83be12120d5d5E>
    8000b206:	a839                	j	8000b224 <.LBB1_225>
            if page_table
    8000b208:	2d013503          	ld	a0,720(sp)
                    sp, 
    8000b20c:	2e013583          	ld	a1,736(sp)
                        argv[argc] as *mut u8, 
    8000b210:	4b013603          	ld	a2,1200(sp)
    8000b214:	2b813683          	ld	a3,696(sp)
    8000b218:	f62a                	sd	a0,296(sp)
    8000b21a:	f22e                	sd	a1,288(sp)
    8000b21c:	ee32                	sd	a2,280(sp)
    8000b21e:	00d66f63          	bltu	a2,a3,8000b23c <.LBB1_225+0x18>
    8000b222:	a391                	j	8000b766 <.LBB1_248>

000000008000b224 <.LBB1_225>:
                return Err("用户栈爆炸")
    8000b224:	0001a517          	auipc	a0,0x1a
    8000b228:	26c50513          	addi	a0,a0,620 # 80025490 <.L__unnamed_25>
    8000b22c:	29813583          	ld	a1,664(sp)
    8000b230:	e588                	sd	a0,8(a1)
    8000b232:	453d                	li	a0,15
    8000b234:	e988                	sd	a0,16(a1)
    8000b236:	4505                	li	a0,1
    8000b238:	e188                	sd	a0,0(a1)
    8000b23a:	a69d                	j	8000b5a0 <.LBB1_229+0x68>
                        argv[argc] as *mut u8, 
    8000b23c:	6572                	ld	a0,280(sp)
    8000b23e:	00351593          	slli	a1,a0,0x3
    8000b242:	2b013603          	ld	a2,688(sp)
    8000b246:	95b2                	add	a1,a1,a2
    8000b248:	6188                	ld	a0,0(a1)
                        str_len(argv[argc])
    8000b24a:	4b013583          	ld	a1,1200(sp)
    8000b24e:	2b813683          	ld	a3,696(sp)
    8000b252:	ea2a                	sd	a0,272(sp)
    8000b254:	e62e                	sd	a1,264(sp)
    8000b256:	52d5f463          	bgeu	a1,a3,8000b77e <.LBB1_249>
    8000b25a:	a009                	j	8000b25c <.LBB1_225+0x38>
    8000b25c:	6532                	ld	a0,264(sp)
    8000b25e:	00351593          	slli	a1,a0,0x3
    8000b262:	2b013603          	ld	a2,688(sp)
    8000b266:	95b2                	add	a1,a1,a2
    8000b268:	6188                	ld	a0,0(a1)
    8000b26a:	00001097          	auipc	ra,0x1
    8000b26e:	63a080e7          	jalr	1594(ra) # 8000c8a4 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E>
    8000b272:	e22a                	sd	a0,256(sp)
    8000b274:	a009                	j	8000b276 <.LBB1_225+0x52>
                    core::slice::from_raw_parts_mut(
    8000b276:	6552                	ld	a0,272(sp)
    8000b278:	6592                	ld	a1,256(sp)
    8000b27a:	00002097          	auipc	ra,0x2
    8000b27e:	5d4080e7          	jalr	1492(ra) # 8000d84e <_ZN4core5slice3raw18from_raw_parts_mut17he4afa4be0aa11357E>
    8000b282:	fdaa                	sd	a0,248(sp)
    8000b284:	f9ae                	sd	a1,240(sp)
    8000b286:	a009                	j	8000b288 <.LBB1_225+0x64>
    8000b288:	756e                	ld	a0,248(sp)
    8000b28a:	75ce                	ld	a1,240(sp)
    8000b28c:	00008097          	auipc	ra,0x8
    8000b290:	a38080e7          	jalr	-1480(ra) # 80012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>
    8000b294:	f5aa                	sd	a0,232(sp)
    8000b296:	a009                	j	8000b298 <.LBB1_225+0x74>
                    str_len(argv[argc]) + 1,
    8000b298:	4b013503          	ld	a0,1200(sp)
    8000b29c:	2b813583          	ld	a1,696(sp)
    8000b2a0:	f1aa                	sd	a0,224(sp)
    8000b2a2:	4eb57a63          	bgeu	a0,a1,8000b796 <.LBB1_250>
    8000b2a6:	a009                	j	8000b2a8 <.LBB1_225+0x84>
    8000b2a8:	750e                	ld	a0,224(sp)
    8000b2aa:	00351593          	slli	a1,a0,0x3
    8000b2ae:	2b013603          	ld	a2,688(sp)
    8000b2b2:	95b2                	add	a1,a1,a2
    8000b2b4:	6188                	ld	a0,0(a1)
    8000b2b6:	00001097          	auipc	ra,0x1
    8000b2ba:	5ee080e7          	jalr	1518(ra) # 8000c8a4 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E>
    8000b2be:	edaa                	sd	a0,216(sp)
    8000b2c0:	a009                	j	8000b2c2 <.LBB1_225+0x9e>
    8000b2c2:	656e                	ld	a0,216(sp)
    8000b2c4:	00150593          	addi	a1,a0,1
    8000b2c8:	e9ae                	sd	a1,208(sp)
    8000b2ca:	4ea5e263          	bltu	a1,a0,8000b7ae <.LBB1_251>
    8000b2ce:	a009                	j	8000b2d0 <.LBB1_225+0xac>
            if page_table
    8000b2d0:	7532                	ld	a0,296(sp)
    8000b2d2:	7592                	ld	a1,288(sp)
    8000b2d4:	762e                	ld	a2,232(sp)
    8000b2d6:	66ce                	ld	a3,208(sp)
    8000b2d8:	00005097          	auipc	ra,0x5
    8000b2dc:	82e080e7          	jalr	-2002(ra) # 8000fb06 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE>
    8000b2e0:	4aa13c23          	sd	a0,1208(sp)
    8000b2e4:	4cb13023          	sd	a1,1216(sp)
    8000b2e8:	a009                	j	8000b2ea <.LBB1_225+0xc6>
    8000b2ea:	4b810513          	addi	a0,sp,1208
    8000b2ee:	00002097          	auipc	ra,0x2
    8000b2f2:	990080e7          	jalr	-1648(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8000b2f6:	e5aa                	sd	a0,200(sp)
    8000b2f8:	a009                	j	8000b2fa <.LBB1_225+0xd6>
    8000b2fa:	4501                	li	a0,0
    8000b2fc:	65ae                	ld	a1,200(sp)
    8000b2fe:	00a58c63          	beq	a1,a0,8000b316 <.LBB1_225+0xf2>
    8000b302:	a009                	j	8000b304 <.LBB1_225+0xe0>
                    page_table.proc_free_pagetable(size);
    8000b304:	2d013503          	ld	a0,720(sp)
    8000b308:	2d813583          	ld	a1,728(sp)
    8000b30c:	00005097          	auipc	ra,0x5
    8000b310:	07e080e7          	jalr	126(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000b314:	a821                	j	8000b32c <.LBB1_226>
            user_stack[argc] = sp;
    8000b316:	2e013503          	ld	a0,736(sp)
    8000b31a:	4b013583          	ld	a1,1200(sp)
    8000b31e:	02000613          	li	a2,32
    8000b322:	e1aa                	sd	a0,192(sp)
    8000b324:	fd2e                	sd	a1,184(sp)
    8000b326:	00c5ef63          	bltu	a1,a2,8000b344 <.LBB1_226+0x18>
    8000b32a:	a145                	j	8000b7ca <.LBB1_253>

000000008000b32c <.LBB1_226>:
                    return Err("exec: Fail to copy out.") 
    8000b32c:	0001a517          	auipc	a0,0x1a
    8000b330:	1d450513          	addi	a0,a0,468 # 80025500 <.L__unnamed_26>
    8000b334:	29813583          	ld	a1,664(sp)
    8000b338:	e588                	sd	a0,8(a1)
    8000b33a:	455d                	li	a0,23
    8000b33c:	e988                	sd	a0,16(a1)
    8000b33e:	4505                	li	a0,1
    8000b340:	e188                	sd	a0,0(a1)
    8000b342:	acb9                	j	8000b5a0 <.LBB1_229+0x68>
            user_stack[argc] = sp;
    8000b344:	756a                	ld	a0,184(sp)
    8000b346:	00351593          	slli	a1,a0,0x3
    8000b34a:	15b0                	addi	a2,sp,744
    8000b34c:	95b2                	add	a1,a1,a2
    8000b34e:	660e                	ld	a2,192(sp)
    8000b350:	e190                	sd	a2,0(a1)
            argc += 1;
    8000b352:	4b013583          	ld	a1,1200(sp)
    8000b356:	00158693          	addi	a3,a1,1
    8000b35a:	f936                	sd	a3,176(sp)
    8000b35c:	48b6e363          	bltu	a3,a1,8000b7e2 <.LBB1_254>
    8000b360:	a009                	j	8000b362 <.LBB1_226+0x36>
    8000b362:	754a                	ld	a0,176(sp)
    8000b364:	4aa13823          	sd	a0,1200(sp)
        loop {
    8000b368:	bb4d                	j	8000b11a <.LBB1_223+0x5a>
    user_stack[argc] = 0;
    8000b36a:	6576                	ld	a0,344(sp)
    8000b36c:	00351593          	slli	a1,a0,0x3
    8000b370:	15b0                	addi	a2,sp,744
    8000b372:	95b2                	add	a1,a1,a2
    8000b374:	4601                	li	a2,0
    8000b376:	e190                	sd	a2,0(a1)

    // Push the array of argv pointers. 
    sp -= (argc + 1) * size_of::<usize>();
    8000b378:	4b013583          	ld	a1,1200(sp)
    8000b37c:	00158613          	addi	a2,a1,1
    8000b380:	f532                	sd	a2,168(sp)
    8000b382:	48b66a63          	bltu	a2,a1,8000b816 <.LBB1_257>
    8000b386:	a009                	j	8000b388 <.LBB1_226+0x5c>
    8000b388:	a009                	j	8000b38a <.LBB1_226+0x5e>
    8000b38a:	4505                	li	a0,1
    8000b38c:	1576                	slli	a0,a0,0x3d
    8000b38e:	157d                	addi	a0,a0,-1
    8000b390:	75aa                	ld	a1,168(sp)
    8000b392:	8d6d                	and	a0,a0,a1
    8000b394:	00359613          	slli	a2,a1,0x3
    8000b398:	f132                	sd	a2,160(sp)
    8000b39a:	48b51c63          	bne	a0,a1,8000b832 <.LBB1_259>
    8000b39e:	a009                	j	8000b3a0 <.LBB1_226+0x74>
    8000b3a0:	2e013503          	ld	a0,736(sp)
    8000b3a4:	758a                	ld	a1,160(sp)
    8000b3a6:	40b50633          	sub	a2,a0,a1
    8000b3aa:	ed32                	sd	a2,152(sp)
    8000b3ac:	4ac56263          	bltu	a0,a2,8000b850 <.LBB1_261>
    8000b3b0:	a009                	j	8000b3b2 <.LBB1_226+0x86>
    8000b3b2:	656a                	ld	a0,152(sp)
    8000b3b4:	2ea13023          	sd	a0,736(sp)
    sp = align_sp(sp);
    8000b3b8:	00000097          	auipc	ra,0x0
    8000b3bc:	52a080e7          	jalr	1322(ra) # 8000b8e2 <_ZN6kernel7process3elf8align_sp17h31655f990bf2d0efE>
    8000b3c0:	e92a                	sd	a0,144(sp)
    8000b3c2:	a009                	j	8000b3c4 <.LBB1_226+0x98>
    8000b3c4:	654a                	ld	a0,144(sp)
    8000b3c6:	2ea13023          	sd	a0,736(sp)
    if sp < stack_base {
    8000b3ca:	75b6                	ld	a1,360(sp)
    8000b3cc:	00b57c63          	bgeu	a0,a1,8000b3e4 <.LBB1_227+0x12>
    8000b3d0:	a009                	j	8000b3d2 <.LBB1_227>

000000008000b3d2 <.LBB1_227>:
        LOG.end_op();
    8000b3d2:	0004f517          	auipc	a0,0x4f
    8000b3d6:	c8e50513          	addi	a0,a0,-882 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8000b3da:	0000c097          	auipc	ra,0xc
    8000b3de:	2f4080e7          	jalr	756(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8000b3e2:	a011                	j	8000b3e6 <.LBB1_227+0x14>
    if sp < stack_base {
    8000b3e4:	a819                	j	8000b3fa <.LBB1_227+0x28>
        page_table.proc_free_pagetable(size);
    8000b3e6:	2d013503          	ld	a0,720(sp)
    8000b3ea:	2d813583          	ld	a1,728(sp)
    8000b3ee:	00005097          	auipc	ra,0x5
    8000b3f2:	f9c080e7          	jalr	-100(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000b3f6:	a009                	j	8000b3f8 <.LBB1_227+0x26>
    if sp < stack_base {
    8000b3f8:	a009                	j	8000b3fa <.LBB1_227+0x28>
    }

    if page_table
    8000b3fa:	2d013503          	ld	a0,720(sp)
    .copy_out(
        sp, 
    8000b3fe:	2e013583          	ld	a1,736(sp)
    8000b402:	15b0                	addi	a2,sp,744
    8000b404:	02000693          	li	a3,32
        core::slice::from_raw_parts_mut(
            user_stack.as_mut_ptr() as *mut u8, 
    8000b408:	e52a                	sd	a0,136(sp)
    8000b40a:	8532                	mv	a0,a2
    8000b40c:	e12e                	sd	a1,128(sp)
    8000b40e:	85b6                	mv	a1,a3
    8000b410:	00008097          	auipc	ra,0x8
    8000b414:	840080e7          	jalr	-1984(ra) # 80012c50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h99ebd62dff44a810E>
    8000b418:	fcaa                	sd	a0,120(sp)
    8000b41a:	a009                	j	8000b41c <.LBB1_227+0x4a>
    8000b41c:	7566                	ld	a0,120(sp)
            (argc + 1)*size_of::<usize>()
    8000b41e:	4b013583          	ld	a1,1200(sp)
    8000b422:	00158613          	addi	a2,a1,1
    8000b426:	f8aa                	sd	a0,112(sp)
    8000b428:	f4b2                	sd	a2,104(sp)
    8000b42a:	44b66263          	bltu	a2,a1,8000b86e <.LBB1_263>
    8000b42e:	a009                	j	8000b430 <.LBB1_227+0x5e>
    8000b430:	a009                	j	8000b432 <.LBB1_227+0x60>
    8000b432:	4505                	li	a0,1
    8000b434:	1576                	slli	a0,a0,0x3d
    8000b436:	157d                	addi	a0,a0,-1
    8000b438:	75a6                	ld	a1,104(sp)
    8000b43a:	8d6d                	and	a0,a0,a1
    8000b43c:	058e                	slli	a1,a1,0x3
    8000b43e:	7626                	ld	a2,104(sp)
    8000b440:	f0ae                	sd	a1,96(sp)
    8000b442:	44c51463          	bne	a0,a2,8000b88a <.LBB1_265>
    8000b446:	a009                	j	8000b448 <.LBB1_227+0x76>
        core::slice::from_raw_parts_mut(
    8000b448:	7546                	ld	a0,112(sp)
    8000b44a:	7586                	ld	a1,96(sp)
    8000b44c:	00002097          	auipc	ra,0x2
    8000b450:	402080e7          	jalr	1026(ra) # 8000d84e <_ZN4core5slice3raw18from_raw_parts_mut17he4afa4be0aa11357E>
    8000b454:	ecaa                	sd	a0,88(sp)
    8000b456:	e8ae                	sd	a1,80(sp)
    8000b458:	a009                	j	8000b45a <.LBB1_227+0x88>
    8000b45a:	6566                	ld	a0,88(sp)
    8000b45c:	65c6                	ld	a1,80(sp)
    8000b45e:	00008097          	auipc	ra,0x8
    8000b462:	866080e7          	jalr	-1946(ra) # 80012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>
    8000b466:	e4aa                	sd	a0,72(sp)
    8000b468:	a009                	j	8000b46a <.LBB1_227+0x98>
        ).as_ptr(),
            (argc + 1)*size_of::<usize>()
    8000b46a:	4b013503          	ld	a0,1200(sp)
    8000b46e:	00150593          	addi	a1,a0,1
    8000b472:	e0ae                	sd	a1,64(sp)
    8000b474:	42a5ea63          	bltu	a1,a0,8000b8a8 <.LBB1_267>
    8000b478:	a009                	j	8000b47a <.LBB1_227+0xa8>
    8000b47a:	a009                	j	8000b47c <.LBB1_227+0xaa>
    8000b47c:	4505                	li	a0,1
    8000b47e:	1576                	slli	a0,a0,0x3d
    8000b480:	157d                	addi	a0,a0,-1
    8000b482:	6586                	ld	a1,64(sp)
    8000b484:	8d6d                	and	a0,a0,a1
    8000b486:	00359693          	slli	a3,a1,0x3
    8000b48a:	fc36                	sd	a3,56(sp)
    8000b48c:	42b51c63          	bne	a0,a1,8000b8c4 <.LBB1_269>
    8000b490:	a009                	j	8000b492 <.LBB1_227+0xc0>
    if page_table
    8000b492:	652a                	ld	a0,136(sp)
    8000b494:	658a                	ld	a1,128(sp)
    8000b496:	6626                	ld	a2,72(sp)
    8000b498:	76e2                	ld	a3,56(sp)
    8000b49a:	00004097          	auipc	ra,0x4
    8000b49e:	66c080e7          	jalr	1644(ra) # 8000fb06 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE>
    8000b4a2:	4ca13423          	sd	a0,1224(sp)
    8000b4a6:	4cb13823          	sd	a1,1232(sp)
    8000b4aa:	a009                	j	8000b4ac <.LBB1_227+0xda>
    8000b4ac:	4c810513          	addi	a0,sp,1224
    8000b4b0:	00001097          	auipc	ra,0x1
    8000b4b4:	7ce080e7          	jalr	1998(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8000b4b8:	f82a                	sd	a0,48(sp)
    8000b4ba:	a009                	j	8000b4bc <.LBB1_227+0xea>
    8000b4bc:	4501                	li	a0,0
    8000b4be:	75c2                	ld	a1,48(sp)
    8000b4c0:	00a58c63          	beq	a1,a0,8000b4d8 <.LBB1_227+0x106>
    8000b4c4:	a009                	j	8000b4c6 <.LBB1_227+0xf4>
    ).is_err() {
        page_table.proc_free_pagetable(size);
    8000b4c6:	2d013503          	ld	a0,720(sp)
    8000b4ca:	2d813583          	ld	a1,728(sp)
    8000b4ce:	00005097          	auipc	ra,0x5
    8000b4d2:	ebc080e7          	jalr	-324(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000b4d6:	a829                	j	8000b4f0 <.LBB1_228>
    }

    // arguments to user main(argc, argv)
    // argc is returned via the system call return
    // value, which goes in a0. 
    let pdata = p.data.get_mut();
    8000b4d8:	757a                	ld	a0,440(sp)
    8000b4da:	04050513          	addi	a0,a0,64
    8000b4de:	0000b097          	auipc	ra,0xb
    8000b4e2:	4ec080e7          	jalr	1260(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    8000b4e6:	85aa                	mv	a1,a0
    8000b4e8:	56a13023          	sd	a0,1376(sp)
    8000b4ec:	f42e                	sd	a1,40(sp)
    8000b4ee:	a829                	j	8000b508 <.LBB1_228+0x18>

000000008000b4f0 <.LBB1_228>:
        return Err("exec: Fail to copy out.")
    8000b4f0:	0001a517          	auipc	a0,0x1a
    8000b4f4:	01050513          	addi	a0,a0,16 # 80025500 <.L__unnamed_26>
    8000b4f8:	29813583          	ld	a1,664(sp)
    8000b4fc:	e588                	sd	a0,8(a1)
    8000b4fe:	455d                	li	a0,23
    8000b500:	e988                	sd	a0,16(a1)
    8000b502:	4505                	li	a0,1
    8000b504:	e188                	sd	a0,0(a1)
    8000b506:	a871                	j	8000b5a2 <.LBB1_229+0x6a>
    let trapframe = &mut *pdata.trapframe;
    8000b508:	7522                	ld	a0,40(sp)
    8000b50a:	6d0c                	ld	a1,24(a0)
    8000b50c:	56b13423          	sd	a1,1384(sp)
    trapframe.a1 = sp;
    8000b510:	2e013603          	ld	a2,736(sp)
    8000b514:	fdb0                	sd	a2,120(a1)

    // Save program name for debugging
    

    // Commit to user image.
    let old_pgt = pdata.pagetable.as_mut().take().unwrap();
    8000b516:	0541                	addi	a0,a0,16
    8000b518:	f02e                	sd	a1,32(sp)
    8000b51a:	0000d097          	auipc	ra,0xd
    8000b51e:	31a080e7          	jalr	794(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    8000b522:	4ca13c23          	sd	a0,1240(sp)
    8000b526:	a009                	j	8000b528 <.LBB1_228+0x38>
    8000b528:	4d810513          	addi	a0,sp,1240
    8000b52c:	0000d097          	auipc	ra,0xd
    8000b530:	050080e7          	jalr	80(ra) # 8001857c <_ZN4core6option15Option$LT$T$GT$4take17h4afdde0659ee1cbbE>
    8000b534:	ec2a                	sd	a0,24(sp)
    8000b536:	a009                	j	8000b538 <.LBB1_229>

000000008000b538 <.LBB1_229>:
    8000b538:	0001a597          	auipc	a1,0x1a
    8000b53c:	0b858593          	addi	a1,a1,184 # 800255f0 <.L__unnamed_27>
    8000b540:	6562                	ld	a0,24(sp)
    8000b542:	0000d097          	auipc	ra,0xd
    8000b546:	734080e7          	jalr	1844(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    8000b54a:	85aa                	mv	a1,a0
    8000b54c:	56a13823          	sd	a0,1392(sp)
    8000b550:	e82e                	sd	a1,16(sp)
    8000b552:	a009                	j	8000b554 <.LBB1_229+0x1c>
    old_pgt.proc_free_pagetable(old_size);
    8000b554:	6542                	ld	a0,16(sp)
    8000b556:	6108                	ld	a0,0(a0)
    8000b558:	75ba                	ld	a1,424(sp)
    8000b55a:	00005097          	auipc	ra,0x5
    8000b55e:	e30080e7          	jalr	-464(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    8000b562:	a009                	j	8000b564 <.LBB1_229+0x2c>
    8000b564:	4501                	li	a0,0

    pdata.pagetable = Some(page_table);
    8000b566:	4ea107a3          	sb	a0,1263(sp)
    8000b56a:	2d013503          	ld	a0,720(sp)
    8000b56e:	4ea13023          	sd	a0,1248(sp)
    8000b572:	7522                	ld	a0,40(sp)
    8000b574:	0541                	addi	a0,a0,16
    8000b576:	ffffb097          	auipc	ra,0xffffb
    8000b57a:	25a080e7          	jalr	602(ra) # 800067d0 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E>
    8000b57e:	a88d                	j	8000b5f0 <.LBB1_229+0xb8>
    8000b580:	4501                	li	a0,0
    trapframe.epc = elf.entry;
    // initial stack pointer
    trapframe.sp = sp;

    Ok(argc)
}
    8000b582:	4ea107a3          	sb	a0,1263(sp)
    8000b586:	05a8                	addi	a0,sp,712
    8000b588:	ffffb097          	auipc	ra,0xffffb
    8000b58c:	3ea080e7          	jalr	1002(ra) # 80006972 <_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ProgHeader$GT$$GT$17hd15e891d3fea5a95E>
    8000b590:	a009                	j	8000b592 <.LBB1_229+0x5a>
    8000b592:	0588                	addi	a0,sp,704
    8000b594:	ffffb097          	auipc	ra,0xffffb
    8000b598:	3c0080e7          	jalr	960(ra) # 80006954 <_ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ElfHeader$GT$$GT$17h791a4532c5bca0b8E>
    8000b59c:	a009                	j	8000b59e <.LBB1_229+0x66>
    8000b59e:	a0a1                	j	8000b5e6 <.LBB1_229+0xae>
    8000b5a0:	a009                	j	8000b5a2 <.LBB1_229+0x6a>
    8000b5a2:	a009                	j	8000b5a4 <.LBB1_229+0x6c>
    8000b5a4:	a011                	j	8000b5a8 <.LBB1_229+0x70>
    8000b5a6:	a009                	j	8000b5a8 <.LBB1_229+0x70>
    8000b5a8:	a849                	j	8000b63a <.LBB1_229+0x102>
    8000b5aa:	4501                	li	a0,0
    8000b5ac:	4ea10723          	sb	a0,1262(sp)
    8000b5b0:	17a8                	addi	a0,sp,1000
    8000b5b2:	ffffb097          	auipc	ra,0xffffb
    8000b5b6:	2a4080e7          	jalr	676(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8000b5ba:	a009                	j	8000b5bc <.LBB1_229+0x84>
    8000b5bc:	4ef14503          	lbu	a0,1263(sp)
    8000b5c0:	8905                	andi	a0,a0,1
    8000b5c2:	e149                	bnez	a0,8000b644 <.LBB1_229+0x10c>
    8000b5c4:	a009                	j	8000b5c6 <.LBB1_229+0x8e>
    8000b5c6:	4501                	li	a0,0
    8000b5c8:	4ea107a3          	sb	a0,1263(sp)
    8000b5cc:	05a8                	addi	a0,sp,712
    8000b5ce:	ffffb097          	auipc	ra,0xffffb
    8000b5d2:	3a4080e7          	jalr	932(ra) # 80006972 <_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ProgHeader$GT$$GT$17hd15e891d3fea5a95E>
    8000b5d6:	a009                	j	8000b5d8 <.LBB1_229+0xa0>
    8000b5d8:	0588                	addi	a0,sp,704
    8000b5da:	ffffb097          	auipc	ra,0xffffb
    8000b5de:	37a080e7          	jalr	890(ra) # 80006954 <_ZN4core3ptr77drop_in_place$LT$alloc..boxed..Box$LT$kernel..process..elf..ElfHeader$GT$$GT$17h791a4532c5bca0b8E>
    8000b5e2:	a009                	j	8000b5e4 <.LBB1_229+0xac>
    8000b5e4:	a009                	j	8000b5e6 <.LBB1_229+0xae>
    8000b5e6:	59813083          	ld	ra,1432(sp)
    8000b5ea:	5a010113          	addi	sp,sp,1440
    8000b5ee:	8082                	ret
    pdata.pagetable = Some(page_table);
    8000b5f0:	4e013503          	ld	a0,1248(sp)
    8000b5f4:	75a2                	ld	a1,40(sp)
    8000b5f6:	e988                	sd	a0,16(a1)
    pdata.size = size;
    8000b5f8:	2d813503          	ld	a0,728(sp)
    8000b5fc:	e588                	sd	a0,8(a1)
    trapframe.epc = elf.entry;
    8000b5fe:	2c013503          	ld	a0,704(sp)
    8000b602:	6d08                	ld	a0,24(a0)
    8000b604:	7602                	ld	a2,32(sp)
    8000b606:	ee08                	sd	a0,24(a2)
    trapframe.sp = sp;
    8000b608:	2e013503          	ld	a0,736(sp)
    8000b60c:	fa08                	sd	a0,48(a2)
    Ok(argc)
    8000b60e:	4b013503          	ld	a0,1200(sp)
    8000b612:	29813683          	ld	a3,664(sp)
    8000b616:	e688                	sd	a0,8(a3)
    8000b618:	4501                	li	a0,0
    8000b61a:	e288                	sd	a0,0(a3)
}
    8000b61c:	4ea10723          	sb	a0,1262(sp)
    8000b620:	17a8                	addi	a0,sp,1000
    8000b622:	ffffb097          	auipc	ra,0xffffb
    8000b626:	234080e7          	jalr	564(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8000b62a:	bf99                	j	8000b580 <.LBB1_229+0x48>
    8000b62c:	42010513          	addi	a0,sp,1056
    8000b630:	ffffb097          	auipc	ra,0xffffb
    8000b634:	426080e7          	jalr	1062(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    8000b638:	bf8d                	j	8000b5aa <.LBB1_229+0x72>
    8000b63a:	4ee14503          	lbu	a0,1262(sp)
    8000b63e:	8905                	andi	a0,a0,1
    8000b640:	f575                	bnez	a0,8000b62c <.LBB1_229+0xf4>
    8000b642:	b7a5                	j	8000b5aa <.LBB1_229+0x72>
    8000b644:	0d88                	addi	a0,sp,720
    8000b646:	ffffb097          	auipc	ra,0xffffb
    8000b64a:	38c080e7          	jalr	908(ra) # 800069d2 <_ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E>
    8000b64e:	bfa5                	j	8000b5c6 <.LBB1_229+0x8e>

000000008000b650 <.LBB1_230>:
                if ph.vaddr + ph.mem_size < ph.vaddr {
    8000b650:	0001a517          	auipc	a0,0x1a
    8000b654:	9d050513          	addi	a0,a0,-1584 # 80025020 <str.1>

000000008000b658 <.LBB1_231>:
    8000b658:	0001a617          	auipc	a2,0x1a
    8000b65c:	c8060613          	addi	a2,a2,-896 # 800252d8 <.L__unnamed_28>
    8000b660:	45f1                	li	a1,28
    8000b662:	00015097          	auipc	ra,0x15
    8000b666:	668080e7          	jalr	1640(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b66c <.LBB1_232>:
                .uvm_alloc(size, ph.vaddr + ph.mem_size)
    8000b66c:	0001a517          	auipc	a0,0x1a
    8000b670:	9b450513          	addi	a0,a0,-1612 # 80025020 <str.1>

000000008000b674 <.LBB1_233>:
    8000b674:	0001a617          	auipc	a2,0x1a
    8000b678:	c9c60613          	addi	a2,a2,-868 # 80025310 <.L__unnamed_29>
    8000b67c:	45f1                	li	a1,28
    8000b67e:	00015097          	auipc	ra,0x15
    8000b682:	64c080e7          	jalr	1612(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b688 <.LBB1_234>:
            off += size_of::<ProgHeader>();
    8000b688:	0001a517          	auipc	a0,0x1a
    8000b68c:	99850513          	addi	a0,a0,-1640 # 80025020 <str.1>

000000008000b690 <.LBB1_235>:
    8000b690:	0001a617          	auipc	a2,0x1a
    8000b694:	cf060613          	addi	a2,a2,-784 # 80025380 <.L__unnamed_30>
    8000b698:	45f1                	li	a1,28
    8000b69a:	00015097          	auipc	ra,0x15
    8000b69e:	630080e7          	jalr	1584(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b6a4 <.LBB1_236>:
                .uvm_alloc(size, size + 2 * PGSIZE) {
    8000b6a4:	0001a517          	auipc	a0,0x1a
    8000b6a8:	97c50513          	addi	a0,a0,-1668 # 80025020 <str.1>

000000008000b6ac <.LBB1_237>:
    8000b6ac:	0001a617          	auipc	a2,0x1a
    8000b6b0:	d3c60613          	addi	a2,a2,-708 # 800253e8 <.L__unnamed_31>
    8000b6b4:	45f1                	li	a1,28
    8000b6b6:	00015097          	auipc	ra,0x15
    8000b6ba:	614080e7          	jalr	1556(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b6c0 <.LBB1_238>:
        page_table.uvm_clear(VirtualAddress::new(size - 2 * PGSIZE));
    8000b6c0:	0001a517          	auipc	a0,0x1a
    8000b6c4:	90050513          	addi	a0,a0,-1792 # 80024fc0 <str.0>

000000008000b6c8 <.LBB1_239>:
    8000b6c8:	0001a617          	auipc	a2,0x1a
    8000b6cc:	d3860613          	addi	a2,a2,-712 # 80025400 <.L__unnamed_32>
    8000b6d0:	02100593          	li	a1,33
    8000b6d4:	00015097          	auipc	ra,0x15
    8000b6d8:	5f6080e7          	jalr	1526(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b6de <.LBB1_240>:
        stack_base = sp - PGSIZE;
    8000b6de:	0001a517          	auipc	a0,0x1a
    8000b6e2:	8e250513          	addi	a0,a0,-1822 # 80024fc0 <str.0>

000000008000b6e6 <.LBB1_241>:
    8000b6e6:	0001a617          	auipc	a2,0x1a
    8000b6ea:	d3260613          	addi	a2,a2,-718 # 80025418 <.L__unnamed_33>
    8000b6ee:	02100593          	li	a1,33
    8000b6f2:	00015097          	auipc	ra,0x15
    8000b6f6:	5d8080e7          	jalr	1496(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b6fc <.LBB1_242>:
            if argv[argc] as usize == 0x0 { break; }
    8000b6fc:	0001a617          	auipc	a2,0x1a
    8000b700:	d3460613          	addi	a2,a2,-716 # 80025430 <.L__unnamed_34>
    8000b704:	7516                	ld	a0,352(sp)
    8000b706:	2b813583          	ld	a1,696(sp)
    8000b70a:	00015097          	auipc	ra,0x15
    8000b70e:	5ec080e7          	jalr	1516(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000b714 <.LBB1_243>:
            sp -= str_len(argv[argc]) + 1;
    8000b714:	0001a617          	auipc	a2,0x1a
    8000b718:	d3460613          	addi	a2,a2,-716 # 80025448 <.L__unnamed_35>
    8000b71c:	6556                	ld	a0,336(sp)
    8000b71e:	2b813583          	ld	a1,696(sp)
    8000b722:	00015097          	auipc	ra,0x15
    8000b726:	5d4080e7          	jalr	1492(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000b72c <.LBB1_244>:
    8000b72c:	0001a517          	auipc	a0,0x1a
    8000b730:	8f450513          	addi	a0,a0,-1804 # 80025020 <str.1>

000000008000b734 <.LBB1_245>:
    8000b734:	0001a617          	auipc	a2,0x1a
    8000b738:	d2c60613          	addi	a2,a2,-724 # 80025460 <.L__unnamed_36>
    8000b73c:	45f1                	li	a1,28
    8000b73e:	00015097          	auipc	ra,0x15
    8000b742:	58c080e7          	jalr	1420(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b748 <.LBB1_246>:
    8000b748:	0001a517          	auipc	a0,0x1a
    8000b74c:	87850513          	addi	a0,a0,-1928 # 80024fc0 <str.0>

000000008000b750 <.LBB1_247>:
    8000b750:	0001a617          	auipc	a2,0x1a
    8000b754:	d2860613          	addi	a2,a2,-728 # 80025478 <.L__unnamed_37>
    8000b758:	02100593          	li	a1,33
    8000b75c:	00015097          	auipc	ra,0x15
    8000b760:	56e080e7          	jalr	1390(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b766 <.LBB1_248>:
                        argv[argc] as *mut u8, 
    8000b766:	0001a617          	auipc	a2,0x1a
    8000b76a:	d3a60613          	addi	a2,a2,-710 # 800254a0 <.L__unnamed_38>
    8000b76e:	6572                	ld	a0,280(sp)
    8000b770:	2b813583          	ld	a1,696(sp)
    8000b774:	00015097          	auipc	ra,0x15
    8000b778:	582080e7          	jalr	1410(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000b77e <.LBB1_249>:
                        str_len(argv[argc])
    8000b77e:	0001a617          	auipc	a2,0x1a
    8000b782:	d3a60613          	addi	a2,a2,-710 # 800254b8 <.L__unnamed_39>
    8000b786:	6532                	ld	a0,264(sp)
    8000b788:	2b813583          	ld	a1,696(sp)
    8000b78c:	00015097          	auipc	ra,0x15
    8000b790:	56a080e7          	jalr	1386(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000b796 <.LBB1_250>:
                    str_len(argv[argc]) + 1,
    8000b796:	0001a617          	auipc	a2,0x1a
    8000b79a:	d3a60613          	addi	a2,a2,-710 # 800254d0 <.L__unnamed_40>
    8000b79e:	750e                	ld	a0,224(sp)
    8000b7a0:	2b813583          	ld	a1,696(sp)
    8000b7a4:	00015097          	auipc	ra,0x15
    8000b7a8:	552080e7          	jalr	1362(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000b7ae <.LBB1_251>:
    8000b7ae:	0001a517          	auipc	a0,0x1a
    8000b7b2:	87250513          	addi	a0,a0,-1934 # 80025020 <str.1>

000000008000b7b6 <.LBB1_252>:
    8000b7b6:	0001a617          	auipc	a2,0x1a
    8000b7ba:	d3260613          	addi	a2,a2,-718 # 800254e8 <.L__unnamed_41>
    8000b7be:	45f1                	li	a1,28
    8000b7c0:	00015097          	auipc	ra,0x15
    8000b7c4:	50a080e7          	jalr	1290(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b7ca <.LBB1_253>:
            user_stack[argc] = sp;
    8000b7ca:	0001a617          	auipc	a2,0x1a
    8000b7ce:	d4e60613          	addi	a2,a2,-690 # 80025518 <.L__unnamed_42>
    8000b7d2:	02000593          	li	a1,32
    8000b7d6:	756a                	ld	a0,184(sp)
    8000b7d8:	00015097          	auipc	ra,0x15
    8000b7dc:	51e080e7          	jalr	1310(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000b7e2 <.LBB1_254>:
            argc += 1;
    8000b7e2:	0001a517          	auipc	a0,0x1a
    8000b7e6:	83e50513          	addi	a0,a0,-1986 # 80025020 <str.1>

000000008000b7ea <.LBB1_255>:
    8000b7ea:	0001a617          	auipc	a2,0x1a
    8000b7ee:	d4660613          	addi	a2,a2,-698 # 80025530 <.L__unnamed_43>
    8000b7f2:	45f1                	li	a1,28
    8000b7f4:	00015097          	auipc	ra,0x15
    8000b7f8:	4d6080e7          	jalr	1238(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b7fe <.LBB1_256>:
    user_stack[argc] = 0;
    8000b7fe:	0001a617          	auipc	a2,0x1a
    8000b802:	d4a60613          	addi	a2,a2,-694 # 80025548 <.L__unnamed_44>
    8000b806:	02000593          	li	a1,32
    8000b80a:	6576                	ld	a0,344(sp)
    8000b80c:	00015097          	auipc	ra,0x15
    8000b810:	4ea080e7          	jalr	1258(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000b816 <.LBB1_257>:
    sp -= (argc + 1) * size_of::<usize>();
    8000b816:	0001a517          	auipc	a0,0x1a
    8000b81a:	80a50513          	addi	a0,a0,-2038 # 80025020 <str.1>

000000008000b81e <.LBB1_258>:
    8000b81e:	0001a617          	auipc	a2,0x1a
    8000b822:	d4260613          	addi	a2,a2,-702 # 80025560 <.L__unnamed_45>
    8000b826:	45f1                	li	a1,28
    8000b828:	00015097          	auipc	ra,0x15
    8000b82c:	4a2080e7          	jalr	1186(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b832 <.LBB1_259>:
    8000b832:	0001a517          	auipc	a0,0x1a
    8000b836:	d4e50513          	addi	a0,a0,-690 # 80025580 <str.2>

000000008000b83a <.LBB1_260>:
    8000b83a:	0001a617          	auipc	a2,0x1a
    8000b83e:	d2660613          	addi	a2,a2,-730 # 80025560 <.L__unnamed_45>
    8000b842:	02100593          	li	a1,33
    8000b846:	00015097          	auipc	ra,0x15
    8000b84a:	484080e7          	jalr	1156(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b850 <.LBB1_261>:
    8000b850:	00019517          	auipc	a0,0x19
    8000b854:	77050513          	addi	a0,a0,1904 # 80024fc0 <str.0>

000000008000b858 <.LBB1_262>:
    8000b858:	0001a617          	auipc	a2,0x1a
    8000b85c:	d5060613          	addi	a2,a2,-688 # 800255a8 <.L__unnamed_46>
    8000b860:	02100593          	li	a1,33
    8000b864:	00015097          	auipc	ra,0x15
    8000b868:	466080e7          	jalr	1126(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b86e <.LBB1_263>:
            (argc + 1)*size_of::<usize>()
    8000b86e:	00019517          	auipc	a0,0x19
    8000b872:	7b250513          	addi	a0,a0,1970 # 80025020 <str.1>

000000008000b876 <.LBB1_264>:
    8000b876:	0001a617          	auipc	a2,0x1a
    8000b87a:	d4a60613          	addi	a2,a2,-694 # 800255c0 <.L__unnamed_47>
    8000b87e:	45f1                	li	a1,28
    8000b880:	00015097          	auipc	ra,0x15
    8000b884:	44a080e7          	jalr	1098(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b88a <.LBB1_265>:
    8000b88a:	0001a517          	auipc	a0,0x1a
    8000b88e:	cf650513          	addi	a0,a0,-778 # 80025580 <str.2>

000000008000b892 <.LBB1_266>:
    8000b892:	0001a617          	auipc	a2,0x1a
    8000b896:	d2e60613          	addi	a2,a2,-722 # 800255c0 <.L__unnamed_47>
    8000b89a:	02100593          	li	a1,33
    8000b89e:	00015097          	auipc	ra,0x15
    8000b8a2:	42c080e7          	jalr	1068(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b8a8 <.LBB1_267>:
            (argc + 1)*size_of::<usize>()
    8000b8a8:	00019517          	auipc	a0,0x19
    8000b8ac:	77850513          	addi	a0,a0,1912 # 80025020 <str.1>

000000008000b8b0 <.LBB1_268>:
    8000b8b0:	0001a617          	auipc	a2,0x1a
    8000b8b4:	d2860613          	addi	a2,a2,-728 # 800255d8 <.L__unnamed_48>
    8000b8b8:	45f1                	li	a1,28
    8000b8ba:	00015097          	auipc	ra,0x15
    8000b8be:	410080e7          	jalr	1040(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000b8c4 <.LBB1_269>:
    8000b8c4:	0001a517          	auipc	a0,0x1a
    8000b8c8:	cbc50513          	addi	a0,a0,-836 # 80025580 <str.2>

000000008000b8cc <.LBB1_270>:
    8000b8cc:	0001a617          	auipc	a2,0x1a
    8000b8d0:	d0c60613          	addi	a2,a2,-756 # 800255d8 <.L__unnamed_48>
    8000b8d4:	02100593          	li	a1,33
    8000b8d8:	00015097          	auipc	ra,0x15
    8000b8dc:	3f2080e7          	jalr	1010(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process3elf8align_sp17h31655f990bf2d0efE:

000000008000b8e2 <_ZN6kernel7process3elf8align_sp17h31655f990bf2d0efE>:


#[inline]
fn align_sp(sp: usize) -> usize {
    8000b8e2:	1141                	addi	sp,sp,-16
    8000b8e4:	e42a                	sd	a0,8(sp)
    sp - (sp % 16)
    8000b8e6:	ff057593          	andi	a1,a0,-16
    8000b8ea:	e02e                	sd	a1,0(sp)
    8000b8ec:	00b56663          	bltu	a0,a1,8000b8f8 <.LBB2_3>
    8000b8f0:	a009                	j	8000b8f2 <_ZN6kernel7process3elf8align_sp17h31655f990bf2d0efE+0x10>
    8000b8f2:	6502                	ld	a0,0(sp)
    8000b8f4:	0141                	addi	sp,sp,16
    8000b8f6:	8082                	ret

000000008000b8f8 <.LBB2_3>:
    sp - (sp % 16)
    8000b8f8:	00019517          	auipc	a0,0x19
    8000b8fc:	6c850513          	addi	a0,a0,1736 # 80024fc0 <str.0>

000000008000b900 <.LBB2_4>:
    8000b900:	0001a617          	auipc	a2,0x1a
    8000b904:	d2060613          	addi	a2,a2,-736 # 80025620 <.L__unnamed_49>
    8000b908:	02100593          	li	a1,33
    8000b90c:	00015097          	auipc	ra,0x15
    8000b910:	3be080e7          	jalr	958(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text.start:

000000008000b916 <start>:
static mut TIMER_SCRATCH:[[u64; 5]; NCPU] = [[0u64; 5]; NCPU];
static STARTED:AtomicBool = AtomicBool::new(false);

/// 引导启动程序,进行寄存器的初始化操作
#[no_mangle]
pub unsafe fn start() -> !{
    8000b916:	1101                	addi	sp,sp,-32
    // Set M Previlege mode to Supervisor, for mret
    mstatus::set_mpp();
    8000b918:	ec06                	sd	ra,24(sp)
    8000b91a:	00011097          	auipc	ra,0x11
    8000b91e:	b1a080e7          	jalr	-1254(ra) # 8001c434 <_ZN6kernel8register7mstatus7set_mpp17hcfadb1e5ecf7ede7E>
    8000b922:	a009                	j	8000b924 <.LBB0_11>

000000008000b924 <.LBB0_11>:

    // set M Exception Program Counter to main, for mret.
    // requires gcc -mcmodel=medany
    mepc::write(rust_main as usize);
    8000b924:	00000517          	auipc	a0,0x0
    8000b928:	1ae50513          	addi	a0,a0,430 # 8000bad2 <rust_main>
    8000b92c:	00008097          	auipc	ra,0x8
    8000b930:	e46080e7          	jalr	-442(ra) # 80013772 <_ZN6kernel8register4mepc5write17had4cb98d9dba847eE>
    8000b934:	a009                	j	8000b936 <.LBB0_11+0x12>
    8000b936:	4501                	li	a0,0

    // disable paging for now.
    satp::write(0);
    8000b938:	0000e097          	auipc	ra,0xe
    8000b93c:	99a080e7          	jalr	-1638(ra) # 800192d2 <_ZN6kernel8register4satp5write17h27829d6ed3c6c873E>
    8000b940:	a009                	j	8000b942 <.LBB0_11+0x1e>
    8000b942:	6541                	lui	a0,0x10
    8000b944:	357d                	addiw	a0,a0,-1

    // delegate all interrupts and exceptions to supervisor mode.
    medeleg::write(0xffff);
    8000b946:	ffff8097          	auipc	ra,0xffff8
    8000b94a:	7aa080e7          	jalr	1962(ra) # 800040f0 <_ZN6kernel8register7medeleg5write17habc21dfcd785d64eE>
    8000b94e:	a009                	j	8000b950 <.LBB0_11+0x2c>
    8000b950:	6541                	lui	a0,0x10
    8000b952:	357d                	addiw	a0,a0,-1
    mideleg::write(0xffff);
    8000b954:	0000b097          	auipc	ra,0xb
    8000b958:	09e080e7          	jalr	158(ra) # 800169f2 <_ZN6kernel8register7mideleg5write17h9b7c33b6863dfd65E>
    8000b95c:	a009                	j	8000b95e <.LBB0_11+0x3a>
    sie::intr_on();
    8000b95e:	00008097          	auipc	ra,0x8
    8000b962:	5d4080e7          	jalr	1492(ra) # 80013f32 <_ZN6kernel8register3sie7intr_on17h6d7bd6af283c5c06E>
    8000b966:	a009                	j	8000b968 <.LBB0_11+0x44>

    // ask for clock interrupts.
    timer_init();
    8000b968:	00000097          	auipc	ra,0x0
    8000b96c:	02e080e7          	jalr	46(ra) # 8000b996 <_ZN6kernel10timer_init17h2c82b6ce0f9242d3E>
    8000b970:	a009                	j	8000b972 <.LBB0_11+0x4e>

    // keep each CPU's hartid in its tp register, for cpuid().
    let id:usize = mhartid::read(); 
    8000b972:	00005097          	auipc	ra,0x5
    8000b976:	456080e7          	jalr	1110(ra) # 80010dc8 <_ZN6kernel8register7mhartid4read17h65f410e0dc68aa3cE>
    8000b97a:	85aa                	mv	a1,a0
    8000b97c:	e82a                	sd	a0,16(sp)
    8000b97e:	e42e                	sd	a1,8(sp)
    8000b980:	a009                	j	8000b982 <.LBB0_11+0x5e>
    tp::write(id);
    8000b982:	6522                	ld	a0,8(sp)
    8000b984:	ffffc097          	auipc	ra,0xffffc
    8000b988:	ff0080e7          	jalr	-16(ra) # 80007974 <_ZN6kernel8register2tp5write17heb39b5120cc919f7E>
    8000b98c:	a009                	j	8000b98e <.LBB0_11+0x6a>

    // switch to supervisor mode and jump to main().
    llvm_asm!("mret"::::"volatile");
    8000b98e:	30200073          	mret

    loop{}
    8000b992:	a009                	j	8000b994 <.LBB0_11+0x70>
    8000b994:	a001                	j	8000b994 <.LBB0_11+0x70>

Disassembly of section .text._ZN6kernel10timer_init17h2c82b6ce0f9242d3E:

000000008000b996 <_ZN6kernel10timer_init17h2c82b6ce0f9242d3E>:
/// set up to receive timer interrupts in machine mode,
/// which arrive at timervec in kernelvec.S,
/// which turns them into software interrupts for
/// devintr() in trap.rs.
/// 启动时钟中断
unsafe fn timer_init(){
    8000b996:	7139                	addi	sp,sp,-64
    // each CPU has a separate source of timer interrupts.
    let id = mhartid::read();
    8000b998:	fc06                	sd	ra,56(sp)
    8000b99a:	00005097          	auipc	ra,0x5
    8000b99e:	42e080e7          	jalr	1070(ra) # 80010dc8 <_ZN6kernel8register7mhartid4read17h65f410e0dc68aa3cE>
    8000b9a2:	85aa                	mv	a1,a0
    8000b9a4:	f42a                	sd	a0,40(sp)
    8000b9a6:	f02e                	sd	a1,32(sp)
    8000b9a8:	a009                	j	8000b9aa <_ZN6kernel10timer_init17h2c82b6ce0f9242d3E+0x14>
    8000b9aa:	000f4537          	lui	a0,0xf4
    8000b9ae:	2405051b          	addiw	a0,a0,576

    // ask the CLINT for a timer interrupt.
    let interval = 1000000;// cycles; about 1/10th second in qemu.
    8000b9b2:	f82a                	sd	a0,48(sp)
    clint::add_mtimecmp(id, interval);
    8000b9b4:	7582                	ld	a1,32(sp)
    8000b9b6:	ec2a                	sd	a0,24(sp)
    8000b9b8:	852e                	mv	a0,a1
    8000b9ba:	65e2                	ld	a1,24(sp)
    8000b9bc:	0000b097          	auipc	ra,0xb
    8000b9c0:	cee080e7          	jalr	-786(ra) # 800166aa <_ZN6kernel8register5clint12add_mtimecmp17h46e9dfd75e231c3eE>
    8000b9c4:	a009                	j	8000b9c6 <_ZN6kernel10timer_init17h2c82b6ce0f9242d3E+0x30>

    // prepare information in scratch[] for timervec.
    // scratch[0..2] : space for timervec to save registers.
    // scratch[3] : address of CLINT MTIMECMP register.
    // scratch[4] : desired interval (in cycles) between timer interrupts.
    TIMER_SCRATCH[id][3] = clint::count_mtiecmp(id) as u64;
    8000b9c6:	7502                	ld	a0,32(sp)
    8000b9c8:	0000b097          	auipc	ra,0xb
    8000b9cc:	d3e080e7          	jalr	-706(ra) # 80016706 <_ZN6kernel8register5clint13count_mtiecmp17h27ec2b6e04b747b1E>
    8000b9d0:	e82a                	sd	a0,16(sp)
    8000b9d2:	a009                	j	8000b9d4 <_ZN6kernel10timer_init17h2c82b6ce0f9242d3E+0x3e>
    8000b9d4:	451d                	li	a0,7
    8000b9d6:	7582                	ld	a1,32(sp)
    8000b9d8:	0ab56c63          	bltu	a0,a1,8000ba90 <.LBB1_20>
    8000b9dc:	a009                	j	8000b9de <_ZN6kernel10timer_init17h2c82b6ce0f9242d3E+0x48>
    8000b9de:	02800513          	li	a0,40
    8000b9e2:	7582                	ld	a1,32(sp)
    8000b9e4:	02a58533          	mul	a0,a1,a0

000000008000b9e8 <.LBB1_16>:
    8000b9e8:	00061617          	auipc	a2,0x61
    8000b9ec:	6b860613          	addi	a2,a2,1720 # 8006d0a0 <_ZN6kernel13TIMER_SCRATCH17h4b0d6a1851dffb25E>
    8000b9f0:	9532                	add	a0,a0,a2
    8000b9f2:	6642                	ld	a2,16(sp)
    8000b9f4:	ed10                	sd	a2,24(a0)
    8000b9f6:	451d                	li	a0,7
    TIMER_SCRATCH[id][4] = interval;
    8000b9f8:	0ab56763          	bltu	a0,a1,8000baa6 <.LBB1_21>
    8000b9fc:	a009                	j	8000b9fe <.LBB1_16+0x16>
    8000b9fe:	02800513          	li	a0,40
    8000ba02:	7582                	ld	a1,32(sp)
    8000ba04:	02a58533          	mul	a0,a1,a0

000000008000ba08 <.LBB1_17>:
    8000ba08:	00061617          	auipc	a2,0x61
    8000ba0c:	69860613          	addi	a2,a2,1688 # 8006d0a0 <_ZN6kernel13TIMER_SCRATCH17h4b0d6a1851dffb25E>
    8000ba10:	9532                	add	a0,a0,a2
    8000ba12:	000f4637          	lui	a2,0xf4
    8000ba16:	2406061b          	addiw	a2,a2,576
    8000ba1a:	f110                	sd	a2,32(a0)
    8000ba1c:	451d                	li	a0,7
    mscratch::write(TIMER_SCRATCH[id].as_ptr() as usize);
    8000ba1e:	08b56f63          	bltu	a0,a1,8000babc <.LBB1_22>
    8000ba22:	a009                	j	8000ba24 <.LBB1_17+0x1c>
    8000ba24:	02800513          	li	a0,40
    8000ba28:	7582                	ld	a1,32(sp)
    8000ba2a:	02a58533          	mul	a0,a1,a0

000000008000ba2e <.LBB1_18>:
    8000ba2e:	00061617          	auipc	a2,0x61
    8000ba32:	67260613          	addi	a2,a2,1650 # 8006d0a0 <_ZN6kernel13TIMER_SCRATCH17h4b0d6a1851dffb25E>
    8000ba36:	9532                	add	a0,a0,a2
    8000ba38:	4595                	li	a1,5
    8000ba3a:	00007097          	auipc	ra,0x7
    8000ba3e:	29e080e7          	jalr	670(ra) # 80012cd8 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7e4413ebeff7f668E>
    8000ba42:	e42a                	sd	a0,8(sp)
    8000ba44:	a009                	j	8000ba46 <.LBB1_18+0x18>
    8000ba46:	6522                	ld	a0,8(sp)
    8000ba48:	0000a097          	auipc	ra,0xa
    8000ba4c:	7fa080e7          	jalr	2042(ra) # 80016242 <_ZN6kernel8register8mscratch5write17he5cf42c47b75ef15E>
    8000ba50:	a009                	j	8000ba52 <.LBB1_19>

000000008000ba52 <.LBB1_19>:
    // set the machine-mode trap handler.
    extern "C" {
        fn timervec();
    }

    mtvec::write(timervec as usize);
    8000ba52:	ffff4517          	auipc	a0,0xffff4
    8000ba56:	65e50513          	addi	a0,a0,1630 # 800000b0 <timervec>
    8000ba5a:	0000e097          	auipc	ra,0xe
    8000ba5e:	854080e7          	jalr	-1964(ra) # 800192ae <_ZN6kernel8register5mtvec5write17hbc83898ca99b55d5E>
    8000ba62:	a009                	j	8000ba64 <.LBB1_19+0x12>

    // enable machine-mode interrupts.
    mstatus::enable_interrupt();
    8000ba64:	00011097          	auipc	ra,0x11
    8000ba68:	a04080e7          	jalr	-1532(ra) # 8001c468 <_ZN6kernel8register7mstatus16enable_interrupt17he6d92f55d4695a01E>
    8000ba6c:	a009                	j	8000ba6e <.LBB1_19+0x1c>

    // enable machine-mode timer interrupts.
    mie::write(mie::read() | mie::MIE::MTIE as usize);
    8000ba6e:	0000b097          	auipc	ra,0xb
    8000ba72:	d46080e7          	jalr	-698(ra) # 800167b4 <_ZN6kernel8register3mie4read17h91b5237713f50ea4E>
    8000ba76:	e02a                	sd	a0,0(sp)
    8000ba78:	a009                	j	8000ba7a <.LBB1_19+0x28>
    8000ba7a:	6502                	ld	a0,0(sp)
    8000ba7c:	08056513          	ori	a0,a0,128
    8000ba80:	0000b097          	auipc	ra,0xb
    8000ba84:	d40080e7          	jalr	-704(ra) # 800167c0 <_ZN6kernel8register3mie5write17hf39a605abac0cad9E>
    8000ba88:	a009                	j	8000ba8a <.LBB1_19+0x38>

}
    8000ba8a:	70e2                	ld	ra,56(sp)
    8000ba8c:	6121                	addi	sp,sp,64
    8000ba8e:	8082                	ret

000000008000ba90 <.LBB1_20>:
    TIMER_SCRATCH[id][3] = clint::count_mtiecmp(id) as u64;
    8000ba90:	0001a617          	auipc	a2,0x1a
    8000ba94:	bb860613          	addi	a2,a2,-1096 # 80025648 <.L__unnamed_1>
    8000ba98:	45a1                	li	a1,8
    8000ba9a:	7502                	ld	a0,32(sp)
    8000ba9c:	00015097          	auipc	ra,0x15
    8000baa0:	25a080e7          	jalr	602(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000baa6 <.LBB1_21>:
    TIMER_SCRATCH[id][4] = interval;
    8000baa6:	0001a617          	auipc	a2,0x1a
    8000baaa:	bba60613          	addi	a2,a2,-1094 # 80025660 <.L__unnamed_2>
    8000baae:	45a1                	li	a1,8
    8000bab0:	7502                	ld	a0,32(sp)
    8000bab2:	00015097          	auipc	ra,0x15
    8000bab6:	244080e7          	jalr	580(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000babc <.LBB1_22>:
    mscratch::write(TIMER_SCRATCH[id].as_ptr() as usize);
    8000babc:	0001a617          	auipc	a2,0x1a
    8000bac0:	bbc60613          	addi	a2,a2,-1092 # 80025678 <.L__unnamed_3>
    8000bac4:	45a1                	li	a1,8
    8000bac6:	7502                	ld	a0,32(sp)
    8000bac8:	00015097          	auipc	ra,0x15
    8000bacc:	22e080e7          	jalr	558(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text.rust_main:

000000008000bad2 <rust_main>:

/// 进入内核初始化
#[no_mangle]
pub unsafe extern "C" fn rust_main() {
    8000bad2:	7129                	addi	sp,sp,-320
    if cpu::cpuid() == 0 {
    8000bad4:	fe06                	sd	ra,312(sp)
    8000bad6:	00012097          	auipc	ra,0x12
    8000bada:	bfa080e7          	jalr	-1030(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000bade:	e4aa                	sd	a0,72(sp)
    8000bae0:	a009                	j	8000bae2 <rust_main+0x10>
    8000bae2:	4501                	li	a0,0
    8000bae4:	65a6                	ld	a1,72(sp)
    8000bae6:	00a59863          	bne	a1,a0,8000baf6 <rust_main+0x24>
    8000baea:	a009                	j	8000baec <rust_main+0x1a>
        console_init();
    8000baec:	0000e097          	auipc	ra,0xe
    8000baf0:	fee080e7          	jalr	-18(ra) # 80019ada <_ZN6kernel7console12console_init17h178de4f50e682d4dE>
    8000baf4:	a011                	j	8000baf8 <.LBB2_39>
        DISK.acquire().init(); // emulated hard disk
        PROC_MANAGER.user_init(); // first user process
        STARTED.store(true, Ordering::SeqCst);
        sstatus::intr_on();
    } else {
        while !STARTED.load(Ordering::SeqCst){}
    8000baf6:	a285                	j	8000bc56 <.LBB2_49+0x28>

000000008000baf8 <.LBB2_39>:
        println!("{}",LOGO); 
    8000baf8:	0001a517          	auipc	a0,0x1a
    8000bafc:	e4850513          	addi	a0,a0,-440 # 80025940 <.L__unnamed_4>
    8000bb00:	e92a                	sd	a0,144(sp)
    8000bb02:	fa2a                	sd	a0,304(sp)

000000008000bb04 <.LBB2_40>:
    8000bb04:	ffffc597          	auipc	a1,0xffffc
    8000bb08:	27e58593          	addi	a1,a1,638 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    8000bb0c:	ffffc097          	auipc	ra,0xffffc
    8000bb10:	32a080e7          	jalr	810(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    8000bb14:	e0aa                	sd	a0,64(sp)
    8000bb16:	fc2e                	sd	a1,56(sp)
    8000bb18:	a009                	j	8000bb1a <.LBB2_40+0x16>
    8000bb1a:	6506                	ld	a0,64(sp)
    8000bb1c:	e12a                	sd	a0,128(sp)
    8000bb1e:	75e2                	ld	a1,56(sp)
    8000bb20:	e52e                	sd	a1,136(sp)

000000008000bb22 <.LBB2_41>:
    8000bb22:	0001a597          	auipc	a1,0x1a
    8000bb26:	ba658593          	addi	a1,a1,-1114 # 800256c8 <.L__unnamed_5>
    8000bb2a:	0888                	addi	a0,sp,80
    8000bb2c:	4609                	li	a2,2
    8000bb2e:	0114                	addi	a3,sp,128
    8000bb30:	4705                	li	a4,1
    8000bb32:	ffffa097          	auipc	ra,0xffffa
    8000bb36:	bf2080e7          	jalr	-1038(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000bb3a:	a009                	j	8000bb3c <.LBB2_41+0x1a>
    8000bb3c:	0888                	addi	a0,sp,80
    8000bb3e:	00005097          	auipc	ra,0x5
    8000bb42:	1b2080e7          	jalr	434(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000bb46:	a009                	j	8000bb48 <.LBB2_42>

000000008000bb48 <.LBB2_42>:
        println!("xv6-rust kernel is booting!");
    8000bb48:	0001a597          	auipc	a1,0x1a
    8000bb4c:	e2858593          	addi	a1,a1,-472 # 80025970 <.L__unnamed_6>

000000008000bb50 <.LBB2_43>:
    8000bb50:	0001a697          	auipc	a3,0x1a
    8000bb54:	b7068693          	addi	a3,a3,-1168 # 800256c0 <.L__unnamed_12>
    8000bb58:	0928                	addi	a0,sp,152
    8000bb5a:	4605                	li	a2,1
    8000bb5c:	4701                	li	a4,0
    8000bb5e:	ffffa097          	auipc	ra,0xffffa
    8000bb62:	bc6080e7          	jalr	-1082(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000bb66:	a009                	j	8000bb68 <.LBB2_43+0x18>
    8000bb68:	0928                	addi	a0,sp,152
    8000bb6a:	00005097          	auipc	ra,0x5
    8000bb6e:	186080e7          	jalr	390(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000bb72:	a009                	j	8000bb74 <.LBB2_44>

000000008000bb74 <.LBB2_44>:
        KERNEL_HEAP.kinit(); // physical page allocator
    8000bb74:	0004e517          	auipc	a0,0x4e
    8000bb78:	48c50513          	addi	a0,a0,1164 # 8005a000 <_ZN6kernel6memory6kalloc11KERNEL_HEAP17h95da90edf5741b51E>
    8000bb7c:	00008097          	auipc	ra,0x8
    8000bb80:	e26080e7          	jalr	-474(ra) # 800139a2 <_ZN6kernel6memory6kalloc10KernelHeap5kinit17h546f6d5bb4d10715E>
    8000bb84:	a009                	j	8000bb86 <.LBB2_44+0x12>
        kvm_init(); // create kernel page table
    8000bb86:	00008097          	auipc	ra,0x8
    8000bb8a:	f78080e7          	jalr	-136(ra) # 80013afe <kvm_init>
    8000bb8e:	a009                	j	8000bb90 <.LBB2_44+0x1c>
        kvm_init_hart(); // turn on paging
    8000bb90:	00008097          	auipc	ra,0x8
    8000bb94:	faa080e7          	jalr	-86(ra) # 80013b3a <_ZN6kernel6memory7mapping10kernel_map13kvm_init_hart17h1ce24c8ead8aba23E>
    8000bb98:	a009                	j	8000bb9a <.LBB2_45>

000000008000bb9a <.LBB2_45>:
        PROC_MANAGER.init(); // process table
    8000bb9a:	00050517          	auipc	a0,0x50
    8000bb9e:	36650513          	addi	a0,a0,870 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000bba2:	00011097          	auipc	ra,0x11
    8000bba6:	c38080e7          	jalr	-968(ra) # 8001c7da <_ZN6kernel7process7manager11ProcManager4init17h494f3524acf9e139E>
    8000bbaa:	a009                	j	8000bbac <.LBB2_45+0x12>
        trap_init_hart(); // trap vectors
    8000bbac:	00009097          	auipc	ra,0x9
    8000bbb0:	b44080e7          	jalr	-1212(ra) # 800146f0 <_ZN6kernel9interrupt4trap14trap_init_hart17hfcceac4be0103e66E>
    8000bbb4:	a009                	j	8000bbb6 <.LBB2_45+0x1c>
        plic_init(); // set up interrupt controller
    8000bbb6:	00000097          	auipc	ra,0x0
    8000bbba:	502080e7          	jalr	1282(ra) # 8000c0b8 <_ZN6kernel6driver4plic9plic_init17hdbd9f9f6d7314294E>
    8000bbbe:	a009                	j	8000bbc0 <.LBB2_45+0x26>
        plic_init_hart(); // ask PLIC for device interrupts
    8000bbc0:	00000097          	auipc	ra,0x0
    8000bbc4:	528080e7          	jalr	1320(ra) # 8000c0e8 <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E>
    8000bbc8:	a009                	j	8000bbca <.LBB2_46>

000000008000bbca <.LBB2_46>:
        BCACHE.binit(); // buffer cache
    8000bbca:	00020517          	auipc	a0,0x20
    8000bbce:	43650513          	addi	a0,a0,1078 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8000bbd2:	ffff5097          	auipc	ra,0xffff5
    8000bbd6:	5ba080e7          	jalr	1466(ra) # 8000118c <_ZN6kernel2fs3bio6Bcache5binit17h001013a72aa37c14E>
    8000bbda:	a009                	j	8000bbdc <.LBB2_47>

000000008000bbdc <.LBB2_47>:
        DISK.acquire().init(); // emulated hard disk
    8000bbdc:	0004a517          	auipc	a0,0x4a
    8000bbe0:	42450513          	addi	a0,a0,1060 # 80056000 <_ZN6kernel6driver11virtio_disk4DISK17h48d93f2a1d70ec15E>
    8000bbe4:	ffff7097          	auipc	ra,0xffff7
    8000bbe8:	a42080e7          	jalr	-1470(ra) # 80002626 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE>
    8000bbec:	e5aa                	sd	a0,200(sp)
    8000bbee:	a009                	j	8000bbf0 <.LBB2_47+0x14>
    8000bbf0:	01a8                	addi	a0,sp,200
    8000bbf2:	ffff8097          	auipc	ra,0xffff8
    8000bbf6:	e88080e7          	jalr	-376(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    8000bbfa:	f82a                	sd	a0,48(sp)
    8000bbfc:	a009                	j	8000bbfe <.LBB2_47+0x22>
    8000bbfe:	7542                	ld	a0,48(sp)
    8000bc00:	00002097          	auipc	ra,0x2
    8000bc04:	16c080e7          	jalr	364(ra) # 8000dd6c <_ZN6kernel6driver11virtio_disk4Disk4init17hc9f988207d72998cE>
    8000bc08:	a009                	j	8000bc0a <.LBB2_47+0x2e>
    8000bc0a:	01a8                	addi	a0,sp,200
    8000bc0c:	ffffb097          	auipc	ra,0xffffb
    8000bc10:	e76080e7          	jalr	-394(ra) # 80006a82 <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..driver..virtio_disk..Disk$GT$$GT$17h3a869af89cb88c7dE>
    8000bc14:	a009                	j	8000bc16 <.LBB2_48>

000000008000bc16 <.LBB2_48>:
        PROC_MANAGER.user_init(); // first user process
    8000bc16:	00050517          	auipc	a0,0x50
    8000bc1a:	2ea50513          	addi	a0,a0,746 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000bc1e:	00011097          	auipc	ra,0x11
    8000bc22:	d72080e7          	jalr	-654(ra) # 8001c990 <_ZN6kernel7process7manager11ProcManager9user_init17hda019df891142d1aE>
    8000bc26:	a009                	j	8000bc28 <.LBB2_48+0x12>
    8000bc28:	4511                	li	a0,4
        STARTED.store(true, Ordering::SeqCst);
    8000bc2a:	0ca10b23          	sb	a0,214(sp)

000000008000bc2e <.LBB2_49>:
    8000bc2e:	00064597          	auipc	a1,0x64
    8000bc32:	81258593          	addi	a1,a1,-2030 # 8006f440 <_ZN6kernel7STARTED17h332c859c5cd0717dE>
    8000bc36:	4605                	li	a2,1
    8000bc38:	f42a                	sd	a0,40(sp)
    8000bc3a:	852e                	mv	a0,a1
    8000bc3c:	85b2                	mv	a1,a2
    8000bc3e:	7622                	ld	a2,40(sp)
    8000bc40:	00001097          	auipc	ra,0x1
    8000bc44:	37a080e7          	jalr	890(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    8000bc48:	a009                	j	8000bc4a <.LBB2_49+0x1c>
        sstatus::intr_on();
    8000bc4a:	00009097          	auipc	ra,0x9
    8000bc4e:	668080e7          	jalr	1640(ra) # 800152b2 <_ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE>
    8000bc52:	a009                	j	8000bc54 <.LBB2_49+0x26>
    if cpu::cpuid() == 0 {
    8000bc54:	a07d                	j	8000bd02 <.LBB2_53>
    8000bc56:	4511                	li	a0,4
        while !STARTED.load(Ordering::SeqCst){}
    8000bc58:	0ca10ba3          	sb	a0,215(sp)

000000008000bc5c <.LBB2_50>:
    8000bc5c:	00063597          	auipc	a1,0x63
    8000bc60:	7e458593          	addi	a1,a1,2020 # 8006f440 <_ZN6kernel7STARTED17h332c859c5cd0717dE>
    8000bc64:	f02a                	sd	a0,32(sp)
    8000bc66:	852e                	mv	a0,a1
    8000bc68:	7582                	ld	a1,32(sp)
    8000bc6a:	00001097          	auipc	ra,0x1
    8000bc6e:	2d2080e7          	jalr	722(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    8000bc72:	ec2a                	sd	a0,24(sp)
    8000bc74:	a009                	j	8000bc76 <.LBB2_50+0x1a>
    8000bc76:	4501                	li	a0,0
    8000bc78:	65e2                	ld	a1,24(sp)
    8000bc7a:	00a58963          	beq	a1,a0,8000bc8c <.LBB2_50+0x30>
    8000bc7e:	a009                	j	8000bc80 <.LBB2_50+0x24>
        println!("hart {} starting\n", cpu::cpuid());
    8000bc80:	00012097          	auipc	ra,0x12
    8000bc84:	a50080e7          	jalr	-1456(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000bc88:	f22a                	sd	a0,288(sp)
    8000bc8a:	a011                	j	8000bc8e <.LBB2_50+0x32>
        while !STARTED.load(Ordering::SeqCst){}
    8000bc8c:	b7e9                	j	8000bc56 <.LBB2_49+0x28>
    8000bc8e:	1208                	addi	a0,sp,288
        println!("hart {} starting\n", cpu::cpuid());
    8000bc90:	ee2a                	sd	a0,280(sp)
    8000bc92:	f62a                	sd	a0,296(sp)

000000008000bc94 <.LBB2_51>:
    8000bc94:	00017597          	auipc	a1,0x17
    8000bc98:	39e58593          	addi	a1,a1,926 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    8000bc9c:	00014097          	auipc	ra,0x14
    8000bca0:	d7e080e7          	jalr	-642(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000bca4:	e82a                	sd	a0,16(sp)
    8000bca6:	e42e                	sd	a1,8(sp)
    8000bca8:	a009                	j	8000bcaa <.LBB2_51+0x16>
    8000bcaa:	6542                	ld	a0,16(sp)
    8000bcac:	e62a                	sd	a0,264(sp)
    8000bcae:	65a2                	ld	a1,8(sp)
    8000bcb0:	ea2e                	sd	a1,272(sp)

000000008000bcb2 <.LBB2_52>:
    8000bcb2:	0001a597          	auipc	a1,0x1a
    8000bcb6:	9ee58593          	addi	a1,a1,-1554 # 800256a0 <.L__unnamed_8>
    8000bcba:	09a8                	addi	a0,sp,216
    8000bcbc:	4609                	li	a2,2
    8000bcbe:	0234                	addi	a3,sp,264
    8000bcc0:	4705                	li	a4,1
    8000bcc2:	ffffa097          	auipc	ra,0xffffa
    8000bcc6:	a62080e7          	jalr	-1438(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000bcca:	a009                	j	8000bccc <.LBB2_52+0x1a>
    8000bccc:	09a8                	addi	a0,sp,216
    8000bcce:	00005097          	auipc	ra,0x5
    8000bcd2:	022080e7          	jalr	34(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000bcd6:	a009                	j	8000bcd8 <.LBB2_52+0x26>
        kvm_init_hart(); // turn on paging
    8000bcd8:	00008097          	auipc	ra,0x8
    8000bcdc:	e62080e7          	jalr	-414(ra) # 80013b3a <_ZN6kernel6memory7mapping10kernel_map13kvm_init_hart17h1ce24c8ead8aba23E>
    8000bce0:	a009                	j	8000bce2 <.LBB2_52+0x30>
        trap_init_hart(); // install kernel trap vector
    8000bce2:	00009097          	auipc	ra,0x9
    8000bce6:	a0e080e7          	jalr	-1522(ra) # 800146f0 <_ZN6kernel9interrupt4trap14trap_init_hart17hfcceac4be0103e66E>
    8000bcea:	a009                	j	8000bcec <.LBB2_52+0x3a>
        plic_init(); // set up interrupt controller
    8000bcec:	00000097          	auipc	ra,0x0
    8000bcf0:	3cc080e7          	jalr	972(ra) # 8000c0b8 <_ZN6kernel6driver4plic9plic_init17hdbd9f9f6d7314294E>
    8000bcf4:	a009                	j	8000bcf6 <.LBB2_52+0x44>
        plic_init_hart(); // ask PLIC for device interrupts
    8000bcf6:	00000097          	auipc	ra,0x0
    8000bcfa:	3f2080e7          	jalr	1010(ra) # 8000c0e8 <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E>
    8000bcfe:	a009                	j	8000bd00 <.LBB2_52+0x4e>
    if cpu::cpuid() == 0 {
    8000bd00:	a009                	j	8000bd02 <.LBB2_53>

000000008000bd02 <.LBB2_53>:
    }
    CPU_MANAGER.scheduler();
    8000bd02:	00063517          	auipc	a0,0x63
    8000bd06:	2fe50513          	addi	a0,a0,766 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000bd0a:	00012097          	auipc	ra,0x12
    8000bd0e:	a94080e7          	jalr	-1388(ra) # 8001d79e <_ZN6kernel7process3cpu10CPUManager9scheduler17hcbf70eaf12402349E>
    8000bd12:	a009                	j	8000bd14 <.LBB2_53+0x12>
    
}
    8000bd14:	70f2                	ld	ra,312(sp)
    8000bd16:	6131                	addi	sp,sp,320
    8000bd18:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha63ccb022a5e88e2E:

000000008000bd1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha63ccb022a5e88e2E>:
    pub const fn is_null(self) -> bool {
    8000bd1a:	7179                	addi	sp,sp,-48
    8000bd1c:	f406                	sd	ra,40(sp)
    8000bd1e:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    8000bd20:	ec2a                	sd	a0,24(sp)
    8000bd22:	a009                	j	8000bd24 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha63ccb022a5e88e2E+0xa>
    8000bd24:	4501                	li	a0,0
    8000bd26:	65e2                	ld	a1,24(sp)
    8000bd28:	e82a                	sd	a0,16(sp)
    8000bd2a:	852e                	mv	a0,a1
    8000bd2c:	65c2                	ld	a1,16(sp)
    8000bd2e:	00015097          	auipc	ra,0x15
    8000bd32:	c80080e7          	jalr	-896(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    8000bd36:	e42a                	sd	a0,8(sp)
    8000bd38:	a009                	j	8000bd3a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha63ccb022a5e88e2E+0x20>
    }
    8000bd3a:	6522                	ld	a0,8(sp)
    8000bd3c:	70a2                	ld	ra,40(sp)
    8000bd3e:	6145                	addi	sp,sp,48
    8000bd40:	8082                	ret

Disassembly of section .text._ZN4core3fmt5Write10write_char17h7bc1bb72902b1122E:

000000008000bd42 <_ZN4core3fmt5Write10write_char17h7bc1bb72902b1122E>:
    fn write_char(&mut self, c: char) -> Result {
    8000bd42:	715d                	addi	sp,sp,-80
    8000bd44:	e486                	sd	ra,72(sp)
    8000bd46:	862e                	mv	a2,a1
    8000bd48:	fc2a                	sd	a0,56(sp)
    8000bd4a:	c2ae                	sw	a1,68(sp)
    8000bd4c:	4681                	li	a3,0
        self.write_str(c.encode_utf8(&mut [0; 4]))
    8000bd4e:	da36                	sw	a3,52(sp)
    8000bd50:	1854                	addi	a3,sp,52
    8000bd52:	4711                	li	a4,4
    8000bd54:	f42a                	sd	a0,40(sp)
    8000bd56:	852e                	mv	a0,a1
    8000bd58:	85b6                	mv	a1,a3
    8000bd5a:	f032                	sd	a2,32(sp)
    8000bd5c:	863a                	mv	a2,a4
    8000bd5e:	0000b097          	auipc	ra,0xb
    8000bd62:	0ba080e7          	jalr	186(ra) # 80016e18 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h93438ae21c2ae2bdE>
    8000bd66:	ec2a                	sd	a0,24(sp)
    8000bd68:	e82e                	sd	a1,16(sp)
    8000bd6a:	a009                	j	8000bd6c <_ZN4core3fmt5Write10write_char17h7bc1bb72902b1122E+0x2a>
    8000bd6c:	7522                	ld	a0,40(sp)
    8000bd6e:	65e2                	ld	a1,24(sp)
    8000bd70:	6642                	ld	a2,16(sp)
    8000bd72:	ffffc097          	auipc	ra,0xffffc
    8000bd76:	7a4080e7          	jalr	1956(ra) # 80008516 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E>
    8000bd7a:	e42a                	sd	a0,8(sp)
    8000bd7c:	a009                	j	8000bd7e <_ZN4core3fmt5Write10write_char17h7bc1bb72902b1122E+0x3c>
    }
    8000bd7e:	6522                	ld	a0,8(sp)
    8000bd80:	60a6                	ld	ra,72(sp)
    8000bd82:	6161                	addi	sp,sp,80
    8000bd84:	8082                	ret

Disassembly of section .text._ZN4core3fmt5Write9write_fmt17h49754120469365e6E:

000000008000bd86 <_ZN4core3fmt5Write9write_fmt17h49754120469365e6E>:
    fn write_fmt(mut self: &mut Self, args: Arguments<'_>) -> Result {
    8000bd86:	715d                	addi	sp,sp,-80
    8000bd88:	e486                	sd	ra,72(sp)
    8000bd8a:	e82a                	sd	a0,16(sp)
        write(&mut self, args)
    8000bd8c:	6188                	ld	a0,0(a1)
    8000bd8e:	ec2a                	sd	a0,24(sp)
    8000bd90:	6588                	ld	a0,8(a1)
    8000bd92:	f02a                	sd	a0,32(sp)
    8000bd94:	6988                	ld	a0,16(a1)
    8000bd96:	f42a                	sd	a0,40(sp)
    8000bd98:	6d88                	ld	a0,24(a1)
    8000bd9a:	f82a                	sd	a0,48(sp)
    8000bd9c:	7188                	ld	a0,32(a1)
    8000bd9e:	fc2a                	sd	a0,56(sp)
    8000bda0:	7588                	ld	a0,40(a1)
    8000bda2:	e0aa                	sd	a0,64(sp)

000000008000bda4 <.LBB1_2>:
    8000bda4:	0001a597          	auipc	a1,0x1a
    8000bda8:	bdc58593          	addi	a1,a1,-1060 # 80025980 <.L__unnamed_1>
    8000bdac:	0808                	addi	a0,sp,16
    8000bdae:	0830                	addi	a2,sp,24
    8000bdb0:	00015097          	auipc	ra,0x15
    8000bdb4:	5ec080e7          	jalr	1516(ra) # 8002139c <_ZN4core3fmt5write17h338141860f5a80fbE>
    8000bdb8:	e42a                	sd	a0,8(sp)
    8000bdba:	a009                	j	8000bdbc <.LBB1_2+0x18>
    }
    8000bdbc:	6522                	ld	a0,8(sp)
    8000bdbe:	60a6                	ld	ra,72(sp)
    8000bdc0:	6161                	addi	sp,sp,80
    8000bdc2:	8082                	ret

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hce5ef6d9ee9edc66E:

000000008000bdc4 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hce5ef6d9ee9edc66E>:
    fn write_char(&mut self, c: char) -> Result {
    8000bdc4:	7179                	addi	sp,sp,-48
    8000bdc6:	f406                	sd	ra,40(sp)
    8000bdc8:	862e                	mv	a2,a1
    8000bdca:	ec2a                	sd	a0,24(sp)
    8000bdcc:	d22e                	sw	a1,36(sp)
        (**self).write_char(c)
    8000bdce:	6108                	ld	a0,0(a0)
    8000bdd0:	e832                	sd	a2,16(sp)
    8000bdd2:	00000097          	auipc	ra,0x0
    8000bdd6:	f70080e7          	jalr	-144(ra) # 8000bd42 <_ZN4core3fmt5Write10write_char17h7bc1bb72902b1122E>
    8000bdda:	e42a                	sd	a0,8(sp)
    8000bddc:	a009                	j	8000bdde <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hce5ef6d9ee9edc66E+0x1a>
    }
    8000bdde:	6522                	ld	a0,8(sp)
    8000bde0:	70a2                	ld	ra,40(sp)
    8000bde2:	6145                	addi	sp,sp,48
    8000bde4:	8082                	ret

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17he151b1d2c355028eE:

000000008000bde6 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17he151b1d2c355028eE>:
    fn write_fmt(&mut self, args: Arguments<'_>) -> Result {
    8000bde6:	715d                	addi	sp,sp,-80
    8000bde8:	e486                	sd	ra,72(sp)
    8000bdea:	e0aa                	sd	a0,64(sp)
        (**self).write_fmt(args)
    8000bdec:	6108                	ld	a0,0(a0)
    8000bdee:	7590                	ld	a2,40(a1)
    8000bdf0:	fc32                	sd	a2,56(sp)
    8000bdf2:	7190                	ld	a2,32(a1)
    8000bdf4:	f832                	sd	a2,48(sp)
    8000bdf6:	6d90                	ld	a2,24(a1)
    8000bdf8:	f432                	sd	a2,40(sp)
    8000bdfa:	6990                	ld	a2,16(a1)
    8000bdfc:	f032                	sd	a2,32(sp)
    8000bdfe:	6590                	ld	a2,8(a1)
    8000be00:	ec32                	sd	a2,24(sp)
    8000be02:	618c                	ld	a1,0(a1)
    8000be04:	e82e                	sd	a1,16(sp)
    8000be06:	080c                	addi	a1,sp,16
    8000be08:	00000097          	auipc	ra,0x0
    8000be0c:	f7e080e7          	jalr	-130(ra) # 8000bd86 <_ZN4core3fmt5Write9write_fmt17h49754120469365e6E>
    8000be10:	e42a                	sd	a0,8(sp)
    8000be12:	a009                	j	8000be14 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17he151b1d2c355028eE+0x2e>
    }
    8000be14:	6522                	ld	a0,8(sp)
    8000be16:	60a6                	ld	ra,72(sp)
    8000be18:	6161                	addi	sp,sp,80
    8000be1a:	8082                	ret

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hae3837db767d85ccE:

000000008000be1c <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hae3837db767d85ccE>:
    fn write_str(&mut self, s: &str) -> Result {
    8000be1c:	7179                	addi	sp,sp,-48
    8000be1e:	f406                	sd	ra,40(sp)
    8000be20:	e82a                	sd	a0,16(sp)
    8000be22:	ec2e                	sd	a1,24(sp)
    8000be24:	f032                	sd	a2,32(sp)
        (**self).write_str(s)
    8000be26:	6108                	ld	a0,0(a0)
    8000be28:	ffffc097          	auipc	ra,0xffffc
    8000be2c:	6ee080e7          	jalr	1774(ra) # 80008516 <_ZN64_$LT$kernel..console..uart..Uart$u20$as$u20$core..fmt..Write$GT$9write_str17hc29dc7780116dd78E>
    8000be30:	e42a                	sd	a0,8(sp)
    8000be32:	a009                	j	8000be34 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hae3837db767d85ccE+0x18>
    }
    8000be34:	6522                	ld	a0,8(sp)
    8000be36:	70a2                	ld	ra,40(sp)
    8000be38:	6145                	addi	sp,sp,48
    8000be3a:	8082                	ret

Disassembly of section .text._ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E:

000000008000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>:
        unsafe { swap_nonoverlapping(x, y, 1) };
    }
}

#[inline]
unsafe fn swap_nonoverlapping_bytes(x: *mut u8, y: *mut u8, len: usize) {
    8000be3c:	710d                	addi	sp,sp,-352
    8000be3e:	ee86                	sd	ra,344(sp)
    8000be40:	eaa2                	sd	s0,336(sp)
    8000be42:	1280                	addi	s0,sp,352
    8000be44:	fe017113          	andi	sp,sp,-32
    8000be48:	f5aa                	sd	a0,232(sp)
    8000be4a:	f9ae                	sd	a1,240(sp)
    8000be4c:	fdb2                	sd	a2,248(sp)
    8000be4e:	02000693          	li	a3,32
    // FIXME repr(simd) broken on emscripten and redox
    #[cfg_attr(not(any(target_os = "emscripten", target_os = "redox")), repr(simd))]
    struct Block(u64, u64, u64, u64);
    struct UnalignedBlock(u64, u64, u64, u64);

    let block_size = mem::size_of::<Block>();
    8000be52:	e236                	sd	a3,256(sp)
    8000be54:	e532                	sd	a2,136(sp)
    8000be56:	e12e                	sd	a1,128(sp)
    8000be58:	fcaa                	sd	a0,120(sp)
    8000be5a:	a009                	j	8000be5c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x20>
    8000be5c:	4501                	li	a0,0

    // Loop through x & y, copying them `Block` at a time
    // The optimizer should unroll the loop fully for most types
    // N.B. We can't use a for loop as the `range` impl calls `mem::swap` recursively
    let mut i = 0;
    8000be5e:	ed2a                	sd	a0,152(sp)
    while i + block_size <= len {
    8000be60:	a009                	j	8000be62 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x26>
    8000be62:	656a                	ld	a0,152(sp)
    8000be64:	02050513          	addi	a0,a0,32
    8000be68:	65aa                	ld	a1,136(sp)
    8000be6a:	00a5f863          	bgeu	a1,a0,8000be7a <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x3e>
    8000be6e:	a009                	j	8000be70 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x34>
            copy_nonoverlapping(t, y, block_size);
        }
        i += block_size;
    }

    if i < len {
    8000be70:	656a                	ld	a0,152(sp)
    8000be72:	65aa                	ld	a1,136(sp)
    8000be74:	06b56f63          	bltu	a0,a1,8000bef2 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0xb6>
    8000be78:	a8b5                	j	8000bef4 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0xb8>
        let mut t = mem::MaybeUninit::<Block>::uninit();
    8000be7a:	a009                	j	8000be7c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x40>
    8000be7c:	1108                	addi	a0,sp,160
    8000be7e:	e6aa                	sd	a0,328(sp)
        let t = t.as_mut_ptr() as *mut u8;
    8000be80:	a009                	j	8000be82 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x46>
    8000be82:	1108                	addi	a0,sp,160
    8000be84:	e62a                	sd	a0,264(sp)
            let x = x.add(i);
    8000be86:	65ea                	ld	a1,152(sp)
    8000be88:	7666                	ld	a2,120(sp)
    8000be8a:	f8aa                	sd	a0,112(sp)
    8000be8c:	8532                	mv	a0,a2
    8000be8e:	00015097          	auipc	ra,0x15
    8000be92:	862080e7          	jalr	-1950(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    8000be96:	85aa                	mv	a1,a0
    8000be98:	ea2a                	sd	a0,272(sp)
    8000be9a:	f4ae                	sd	a1,104(sp)
    8000be9c:	a009                	j	8000be9e <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x62>
            let y = y.add(i);
    8000be9e:	65ea                	ld	a1,152(sp)
    8000bea0:	650a                	ld	a0,128(sp)
    8000bea2:	00015097          	auipc	ra,0x15
    8000bea6:	84e080e7          	jalr	-1970(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    8000beaa:	85aa                	mv	a1,a0
    8000beac:	ee2a                	sd	a0,280(sp)
    8000beae:	f0ae                	sd	a1,96(sp)
    8000beb0:	a009                	j	8000beb2 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x76>
    8000beb2:	02000613          	li	a2,32
            copy_nonoverlapping(x, t, block_size);
    8000beb6:	7526                	ld	a0,104(sp)
    8000beb8:	75c6                	ld	a1,112(sp)
    8000beba:	00015097          	auipc	ra,0x15
    8000bebe:	a90080e7          	jalr	-1392(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8000bec2:	a009                	j	8000bec4 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x88>
    8000bec4:	02000613          	li	a2,32
            copy_nonoverlapping(y, x, block_size);
    8000bec8:	7506                	ld	a0,96(sp)
    8000beca:	75a6                	ld	a1,104(sp)
    8000becc:	00015097          	auipc	ra,0x15
    8000bed0:	a7e080e7          	jalr	-1410(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8000bed4:	a009                	j	8000bed6 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x9a>
    8000bed6:	02000613          	li	a2,32
            copy_nonoverlapping(t, y, block_size);
    8000beda:	7546                	ld	a0,112(sp)
    8000bedc:	7586                	ld	a1,96(sp)
    8000bede:	00015097          	auipc	ra,0x15
    8000bee2:	a6c080e7          	jalr	-1428(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8000bee6:	a009                	j	8000bee8 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0xac>
        i += block_size;
    8000bee8:	656a                	ld	a0,152(sp)
    8000beea:	02050513          	addi	a0,a0,32
    8000beee:	ed2a                	sd	a0,152(sp)
    while i + block_size <= len {
    8000bef0:	bf8d                	j	8000be62 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x26>
        // Swap any remaining bytes
        let mut t = mem::MaybeUninit::<UnalignedBlock>::uninit();
    8000bef2:	a011                	j	8000bef6 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0xba>
    if i < len {
    8000bef4:	a8ad                	j	8000bf6e <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x132>
        let rem = len - i;
    8000bef6:	656a                	ld	a0,152(sp)
    8000bef8:	65aa                	ld	a1,136(sp)
    8000befa:	40a58533          	sub	a0,a1,a0
    8000befe:	f22a                	sd	a0,288(sp)
    8000bf00:	01b0                	addi	a2,sp,200
    8000bf02:	e2b2                	sd	a2,320(sp)

        let t = t.as_mut_ptr() as *mut u8;
    8000bf04:	ecaa                	sd	a0,88(sp)
    8000bf06:	e8b2                	sd	a2,80(sp)
    8000bf08:	a009                	j	8000bf0a <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0xce>
    8000bf0a:	6546                	ld	a0,80(sp)
    8000bf0c:	65c6                	ld	a1,80(sp)
    8000bf0e:	f62e                	sd	a1,296(sp)

        // SAFETY: see previous safety comment.
        unsafe {
            let x = x.add(i);
    8000bf10:	65ea                	ld	a1,152(sp)
    8000bf12:	7666                	ld	a2,120(sp)
    8000bf14:	e4aa                	sd	a0,72(sp)
    8000bf16:	8532                	mv	a0,a2
    8000bf18:	00014097          	auipc	ra,0x14
    8000bf1c:	7d8080e7          	jalr	2008(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    8000bf20:	85aa                	mv	a1,a0
    8000bf22:	fa2a                	sd	a0,304(sp)
    8000bf24:	e0ae                	sd	a1,64(sp)
    8000bf26:	a009                	j	8000bf28 <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0xec>
            let y = y.add(i);
    8000bf28:	65ea                	ld	a1,152(sp)
    8000bf2a:	650a                	ld	a0,128(sp)
    8000bf2c:	00014097          	auipc	ra,0x14
    8000bf30:	7c4080e7          	jalr	1988(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    8000bf34:	85aa                	mv	a1,a0
    8000bf36:	fe2a                	sd	a0,312(sp)
    8000bf38:	fc2e                	sd	a1,56(sp)
    8000bf3a:	a009                	j	8000bf3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x100>

            copy_nonoverlapping(x, t, rem);
    8000bf3c:	6506                	ld	a0,64(sp)
    8000bf3e:	65a6                	ld	a1,72(sp)
    8000bf40:	6666                	ld	a2,88(sp)
    8000bf42:	00015097          	auipc	ra,0x15
    8000bf46:	a08080e7          	jalr	-1528(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8000bf4a:	a009                	j	8000bf4c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x110>
            copy_nonoverlapping(y, x, rem);
    8000bf4c:	7562                	ld	a0,56(sp)
    8000bf4e:	6586                	ld	a1,64(sp)
    8000bf50:	6666                	ld	a2,88(sp)
    8000bf52:	00015097          	auipc	ra,0x15
    8000bf56:	9f8080e7          	jalr	-1544(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8000bf5a:	a009                	j	8000bf5c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x120>
            copy_nonoverlapping(t, y, rem);
    8000bf5c:	6526                	ld	a0,72(sp)
    8000bf5e:	75e2                	ld	a1,56(sp)
    8000bf60:	6666                	ld	a2,88(sp)
    8000bf62:	00015097          	auipc	ra,0x15
    8000bf66:	9e8080e7          	jalr	-1560(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8000bf6a:	a009                	j	8000bf6c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x130>
    if i < len {
    8000bf6c:	a009                	j	8000bf6e <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E+0x132>
        }
    }
}
    8000bf6e:	ea040113          	addi	sp,s0,-352
    8000bf72:	6456                	ld	s0,336(sp)
    8000bf74:	60f6                	ld	ra,344(sp)
    8000bf76:	6135                	addi	sp,sp,352
    8000bf78:	8082                	ret

Disassembly of section .text._ZN6kernel6driver4plic12PLIC_SENABLE17h623d43d5e701949eE:

000000008000bf7a <_ZN6kernel6driver4plic12PLIC_SENABLE17h623d43d5e701949eE>:

fn PLIC_MENABLE(hart_id: usize) -> usize {
    PLIC_BASE + 0x2000 + hart_id * 0x100
}

fn PLIC_SENABLE(hart_id: usize) -> usize {
    8000bf7a:	1101                	addi	sp,sp,-32
    8000bf7c:	ec2a                	sd	a0,24(sp)
    8000bf7e:	4585                	li	a1,1
    8000bf80:	15e2                	slli	a1,a1,0x38
    8000bf82:	15fd                	addi	a1,a1,-1
    PLIC_BASE + 0x2080 + hart_id * 0x100
    8000bf84:	8de9                	and	a1,a1,a0
    8000bf86:	00851613          	slli	a2,a0,0x8
    8000bf8a:	e832                	sd	a2,16(sp)
    8000bf8c:	02a59063          	bne	a1,a0,8000bfac <.LBB0_5>
    8000bf90:	a009                	j	8000bf92 <_ZN6kernel6driver4plic12PLIC_SENABLE17h623d43d5e701949eE+0x18>
    8000bf92:	0c002537          	lui	a0,0xc002
    8000bf96:	0805051b          	addiw	a0,a0,128
    8000bf9a:	65c2                	ld	a1,16(sp)
    8000bf9c:	952e                	add	a0,a0,a1
    8000bf9e:	e42a                	sd	a0,8(sp)
    8000bfa0:	02b56563          	bltu	a0,a1,8000bfca <.LBB0_7>
    8000bfa4:	a009                	j	8000bfa6 <_ZN6kernel6driver4plic12PLIC_SENABLE17h623d43d5e701949eE+0x2c>
}
    8000bfa6:	6522                	ld	a0,8(sp)
    8000bfa8:	6105                	addi	sp,sp,32
    8000bfaa:	8082                	ret

000000008000bfac <.LBB0_5>:
    PLIC_BASE + 0x2080 + hart_id * 0x100
    8000bfac:	0001a517          	auipc	a0,0x1a
    8000bfb0:	a3450513          	addi	a0,a0,-1484 # 800259e0 <str.0>

000000008000bfb4 <.LBB0_6>:
    8000bfb4:	0001a617          	auipc	a2,0x1a
    8000bfb8:	a1460613          	addi	a2,a2,-1516 # 800259c8 <.L__unnamed_1>
    8000bfbc:	02100593          	li	a1,33
    8000bfc0:	00015097          	auipc	ra,0x15
    8000bfc4:	d0a080e7          	jalr	-758(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000bfca <.LBB0_7>:
    8000bfca:	0001a517          	auipc	a0,0x1a
    8000bfce:	a5650513          	addi	a0,a0,-1450 # 80025a20 <str.1>

000000008000bfd2 <.LBB0_8>:
    8000bfd2:	0001a617          	auipc	a2,0x1a
    8000bfd6:	a3660613          	addi	a2,a2,-1482 # 80025a08 <.L__unnamed_2>
    8000bfda:	45f1                	li	a1,28
    8000bfdc:	00015097          	auipc	ra,0x15
    8000bfe0:	cee080e7          	jalr	-786(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6driver4plic14PLIC_SPRIORITY17hf008efe429159deaE:

000000008000bfe6 <_ZN6kernel6driver4plic14PLIC_SPRIORITY17hf008efe429159deaE>:

fn PLIC_MPRIORITY(hart_id: usize) -> usize {
    PLIC_BASE + 0x200000 + hart_id * 0x2000
}

fn PLIC_SPRIORITY(hart_id: usize) -> usize {
    8000bfe6:	1101                	addi	sp,sp,-32
    8000bfe8:	ec2a                	sd	a0,24(sp)
    8000bfea:	4585                	li	a1,1
    8000bfec:	15ce                	slli	a1,a1,0x33
    8000bfee:	15fd                	addi	a1,a1,-1
    PLIC_BASE + 0x201000 + hart_id * 0x2000
    8000bff0:	8de9                	and	a1,a1,a0
    8000bff2:	00d51613          	slli	a2,a0,0xd
    8000bff6:	e832                	sd	a2,16(sp)
    8000bff8:	00a59e63          	bne	a1,a0,8000c014 <.LBB1_5>
    8000bffc:	a009                	j	8000bffe <_ZN6kernel6driver4plic14PLIC_SPRIORITY17hf008efe429159deaE+0x18>
    8000bffe:	0c201537          	lui	a0,0xc201
    8000c002:	65c2                	ld	a1,16(sp)
    8000c004:	952e                	add	a0,a0,a1
    8000c006:	e42a                	sd	a0,8(sp)
    8000c008:	02b56563          	bltu	a0,a1,8000c032 <.LBB1_7>
    8000c00c:	a009                	j	8000c00e <_ZN6kernel6driver4plic14PLIC_SPRIORITY17hf008efe429159deaE+0x28>
}
    8000c00e:	6522                	ld	a0,8(sp)
    8000c010:	6105                	addi	sp,sp,32
    8000c012:	8082                	ret

000000008000c014 <.LBB1_5>:
    PLIC_BASE + 0x201000 + hart_id * 0x2000
    8000c014:	0001a517          	auipc	a0,0x1a
    8000c018:	9cc50513          	addi	a0,a0,-1588 # 800259e0 <str.0>

000000008000c01c <.LBB1_6>:
    8000c01c:	0001a617          	auipc	a2,0x1a
    8000c020:	a2460613          	addi	a2,a2,-1500 # 80025a40 <.L__unnamed_3>
    8000c024:	02100593          	li	a1,33
    8000c028:	00015097          	auipc	ra,0x15
    8000c02c:	ca2080e7          	jalr	-862(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000c032 <.LBB1_7>:
    8000c032:	0001a517          	auipc	a0,0x1a
    8000c036:	9ee50513          	addi	a0,a0,-1554 # 80025a20 <str.1>

000000008000c03a <.LBB1_8>:
    8000c03a:	0001a617          	auipc	a2,0x1a
    8000c03e:	a1e60613          	addi	a2,a2,-1506 # 80025a58 <.L__unnamed_4>
    8000c042:	45f1                	li	a1,28
    8000c044:	00015097          	auipc	ra,0x15
    8000c048:	c86080e7          	jalr	-890(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6driver4plic11PLIC_SCLAIM17h0a3f44719561ef2dE:

000000008000c04e <_ZN6kernel6driver4plic11PLIC_SCLAIM17h0a3f44719561ef2dE>:

fn PLIC_MCLAIM(hart_id: usize) -> usize {
    PLIC_BASE + 0x200004 + hart_id * 0x2000
}

fn PLIC_SCLAIM(hart_id: usize) -> usize {
    8000c04e:	1101                	addi	sp,sp,-32
    8000c050:	ec2a                	sd	a0,24(sp)
    8000c052:	4585                	li	a1,1
    8000c054:	15ce                	slli	a1,a1,0x33
    8000c056:	15fd                	addi	a1,a1,-1
    PLIC_BASE + 0x201004 + hart_id * 0x2000
    8000c058:	8de9                	and	a1,a1,a0
    8000c05a:	00d51613          	slli	a2,a0,0xd
    8000c05e:	e832                	sd	a2,16(sp)
    8000c060:	00a59f63          	bne	a1,a0,8000c07e <.LBB2_5>
    8000c064:	a009                	j	8000c066 <_ZN6kernel6driver4plic11PLIC_SCLAIM17h0a3f44719561ef2dE+0x18>
    8000c066:	0c201537          	lui	a0,0xc201
    8000c06a:	2511                	addiw	a0,a0,4
    8000c06c:	65c2                	ld	a1,16(sp)
    8000c06e:	952e                	add	a0,a0,a1
    8000c070:	e42a                	sd	a0,8(sp)
    8000c072:	02b56563          	bltu	a0,a1,8000c09c <.LBB2_7>
    8000c076:	a009                	j	8000c078 <_ZN6kernel6driver4plic11PLIC_SCLAIM17h0a3f44719561ef2dE+0x2a>
}
    8000c078:	6522                	ld	a0,8(sp)
    8000c07a:	6105                	addi	sp,sp,32
    8000c07c:	8082                	ret

000000008000c07e <.LBB2_5>:
    PLIC_BASE + 0x201004 + hart_id * 0x2000
    8000c07e:	0001a517          	auipc	a0,0x1a
    8000c082:	96250513          	addi	a0,a0,-1694 # 800259e0 <str.0>

000000008000c086 <.LBB2_6>:
    8000c086:	0001a617          	auipc	a2,0x1a
    8000c08a:	9ea60613          	addi	a2,a2,-1558 # 80025a70 <.L__unnamed_5>
    8000c08e:	02100593          	li	a1,33
    8000c092:	00015097          	auipc	ra,0x15
    8000c096:	c38080e7          	jalr	-968(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000c09c <.LBB2_7>:
    8000c09c:	0001a517          	auipc	a0,0x1a
    8000c0a0:	98450513          	addi	a0,a0,-1660 # 80025a20 <str.1>

000000008000c0a4 <.LBB2_8>:
    8000c0a4:	0001a617          	auipc	a2,0x1a
    8000c0a8:	9e460613          	addi	a2,a2,-1564 # 80025a88 <.L__unnamed_6>
    8000c0ac:	45f1                	li	a1,28
    8000c0ae:	00015097          	auipc	ra,0x15
    8000c0b2:	c1c080e7          	jalr	-996(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6driver4plic9plic_init17hdbd9f9f6d7314294E:

000000008000c0b8 <_ZN6kernel6driver4plic9plic_init17hdbd9f9f6d7314294E>:

pub fn plic_init() {
    8000c0b8:	1141                	addi	sp,sp,-16
    8000c0ba:	e406                	sd	ra,8(sp)
    8000c0bc:	0c000537          	lui	a0,0xc000
    8000c0c0:	0285051b          	addiw	a0,a0,40
    8000c0c4:	4585                	li	a1,1
    // set desired IRQ priorities non-zero (otherwise disable)
    write(PLIC_BASE + (UART0_IRQ * 4) as usize, 1);
    8000c0c6:	00000097          	auipc	ra,0x0
    8000c0ca:	116080e7          	jalr	278(ra) # 8000c1dc <_ZN6kernel6driver4plic5write17h043f91f39b6d907cE>
    8000c0ce:	a009                	j	8000c0d0 <_ZN6kernel6driver4plic9plic_init17hdbd9f9f6d7314294E+0x18>
    8000c0d0:	0c000537          	lui	a0,0xc000
    8000c0d4:	2511                	addiw	a0,a0,4
    8000c0d6:	4585                	li	a1,1
    write(PLIC_BASE + (VIRTIO0_IRQ * 4) as usize, 1);
    8000c0d8:	00000097          	auipc	ra,0x0
    8000c0dc:	104080e7          	jalr	260(ra) # 8000c1dc <_ZN6kernel6driver4plic5write17h043f91f39b6d907cE>
    8000c0e0:	a009                	j	8000c0e2 <_ZN6kernel6driver4plic9plic_init17hdbd9f9f6d7314294E+0x2a>
}
    8000c0e2:	60a2                	ld	ra,8(sp)
    8000c0e4:	0141                	addi	sp,sp,16
    8000c0e6:	8082                	ret

Disassembly of section .text._ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E:

000000008000c0e8 <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E>:

pub fn plic_init_hart() {
    8000c0e8:	7179                	addi	sp,sp,-48
    let hart_id = unsafe{ cpuid() };
    8000c0ea:	f406                	sd	ra,40(sp)
    8000c0ec:	00011097          	auipc	ra,0x11
    8000c0f0:	5e4080e7          	jalr	1508(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000c0f4:	85aa                	mv	a1,a0
    8000c0f6:	f02a                	sd	a0,32(sp)
    8000c0f8:	ec2e                	sd	a1,24(sp)
    8000c0fa:	a009                	j	8000c0fc <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E+0x14>

    // Set UART's enable bit for this hart's S-mode. 
    write(PLIC_SENABLE(hart_id), (1 << UART0_IRQ) | (1 << VIRTIO0_IRQ));
    8000c0fc:	6562                	ld	a0,24(sp)
    8000c0fe:	00000097          	auipc	ra,0x0
    8000c102:	e7c080e7          	jalr	-388(ra) # 8000bf7a <_ZN6kernel6driver4plic12PLIC_SENABLE17h623d43d5e701949eE>
    8000c106:	e82a                	sd	a0,16(sp)
    8000c108:	a009                	j	8000c10a <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E+0x22>
    8000c10a:	40200593          	li	a1,1026
    8000c10e:	6542                	ld	a0,16(sp)
    8000c110:	00000097          	auipc	ra,0x0
    8000c114:	0cc080e7          	jalr	204(ra) # 8000c1dc <_ZN6kernel6driver4plic5write17h043f91f39b6d907cE>
    8000c118:	a009                	j	8000c11a <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E+0x32>

    // Set this hart's S-mode pirority threshold to 0. 
    write(PLIC_SPRIORITY(hart_id), 0);
    8000c11a:	6562                	ld	a0,24(sp)
    8000c11c:	00000097          	auipc	ra,0x0
    8000c120:	eca080e7          	jalr	-310(ra) # 8000bfe6 <_ZN6kernel6driver4plic14PLIC_SPRIORITY17hf008efe429159deaE>
    8000c124:	e42a                	sd	a0,8(sp)
    8000c126:	a009                	j	8000c128 <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E+0x40>
    8000c128:	4501                	li	a0,0
    8000c12a:	65a2                	ld	a1,8(sp)
    8000c12c:	e02a                	sd	a0,0(sp)
    8000c12e:	852e                	mv	a0,a1
    8000c130:	6582                	ld	a1,0(sp)
    8000c132:	00000097          	auipc	ra,0x0
    8000c136:	0aa080e7          	jalr	170(ra) # 8000c1dc <_ZN6kernel6driver4plic5write17h043f91f39b6d907cE>
    8000c13a:	a009                	j	8000c13c <_ZN6kernel6driver4plic14plic_init_hart17h2810f296526d78b2E+0x54>
}
    8000c13c:	70a2                	ld	ra,40(sp)
    8000c13e:	6145                	addi	sp,sp,48
    8000c140:	8082                	ret

Disassembly of section .text._ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E:

000000008000c142 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E>:

/// Ask the PLIC what interrupt we should serve. 
pub fn plic_claim() -> Option<u32> {
    8000c142:	7139                	addi	sp,sp,-64
    let hart_id = unsafe {
        cpuid()
    8000c144:	fc06                	sd	ra,56(sp)
    8000c146:	00011097          	auipc	ra,0x11
    8000c14a:	58a080e7          	jalr	1418(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000c14e:	85aa                	mv	a1,a0
    8000c150:	f42a                	sd	a0,40(sp)
    8000c152:	ec2e                	sd	a1,24(sp)
    8000c154:	a009                	j	8000c156 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E+0x14>
    };
    let interrupt = read(PLIC_SCLAIM(hart_id));
    8000c156:	6562                	ld	a0,24(sp)
    8000c158:	00000097          	auipc	ra,0x0
    8000c15c:	ef6080e7          	jalr	-266(ra) # 8000c04e <_ZN6kernel6driver4plic11PLIC_SCLAIM17h0a3f44719561ef2dE>
    8000c160:	e82a                	sd	a0,16(sp)
    8000c162:	a009                	j	8000c164 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E+0x22>
    8000c164:	6542                	ld	a0,16(sp)
    8000c166:	00000097          	auipc	ra,0x0
    8000c16a:	092080e7          	jalr	146(ra) # 8000c1f8 <_ZN6kernel6driver4plic4read17h27ae5edac1c629ceE>
    8000c16e:	85aa                	mv	a1,a0
    8000c170:	da2a                	sw	a0,52(sp)
    8000c172:	e42e                	sd	a1,8(sp)
    8000c174:	a009                	j	8000c176 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E+0x34>
    if interrupt == 0 {
    8000c176:	6522                	ld	a0,8(sp)
    8000c178:	02051593          	slli	a1,a0,0x20
    8000c17c:	9181                	srli	a1,a1,0x20
    8000c17e:	4601                	li	a2,0
    8000c180:	00c59663          	bne	a1,a2,8000c18c <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E+0x4a>
    8000c184:	a009                	j	8000c186 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E+0x44>
    8000c186:	4501                	li	a0,0
        None
    8000c188:	d02a                	sw	a0,32(sp)
    if interrupt == 0 {
    8000c18a:	a031                	j	8000c196 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E+0x54>
    } else {
        Some(interrupt)
    8000c18c:	6522                	ld	a0,8(sp)
    8000c18e:	d22a                	sw	a0,36(sp)
    8000c190:	4585                	li	a1,1
    8000c192:	d02e                	sw	a1,32(sp)
    if interrupt == 0 {
    8000c194:	a009                	j	8000c196 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E+0x54>
    }
}
    8000c196:	5502                	lw	a0,32(sp)
    8000c198:	5592                	lw	a1,36(sp)
    8000c19a:	70e2                	ld	ra,56(sp)
    8000c19c:	6121                	addi	sp,sp,64
    8000c19e:	8082                	ret

Disassembly of section .text._ZN6kernel6driver4plic13plic_complete17hda6f35daf280a4e7E:

000000008000c1a0 <_ZN6kernel6driver4plic13plic_complete17hda6f35daf280a4e7E>:

/// Tell the PLIC we've served the IRQ
pub fn plic_complete(interrupt: u32) {
    8000c1a0:	7179                	addi	sp,sp,-48
    8000c1a2:	f406                	sd	ra,40(sp)
    8000c1a4:	85aa                	mv	a1,a0
    8000c1a6:	ce2a                	sw	a0,28(sp)
    let hart_id = unsafe {
        cpuid()
    8000c1a8:	e82e                	sd	a1,16(sp)
    8000c1aa:	00011097          	auipc	ra,0x11
    8000c1ae:	526080e7          	jalr	1318(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8000c1b2:	85aa                	mv	a1,a0
    8000c1b4:	f02a                	sd	a0,32(sp)
    8000c1b6:	e42e                	sd	a1,8(sp)
    8000c1b8:	a009                	j	8000c1ba <_ZN6kernel6driver4plic13plic_complete17hda6f35daf280a4e7E+0x1a>
    };
    write(PLIC_SCLAIM(hart_id), interrupt);
    8000c1ba:	6522                	ld	a0,8(sp)
    8000c1bc:	00000097          	auipc	ra,0x0
    8000c1c0:	e92080e7          	jalr	-366(ra) # 8000c04e <_ZN6kernel6driver4plic11PLIC_SCLAIM17h0a3f44719561ef2dE>
    8000c1c4:	e02a                	sd	a0,0(sp)
    8000c1c6:	a009                	j	8000c1c8 <_ZN6kernel6driver4plic13plic_complete17hda6f35daf280a4e7E+0x28>
    8000c1c8:	6502                	ld	a0,0(sp)
    8000c1ca:	65c2                	ld	a1,16(sp)
    8000c1cc:	00000097          	auipc	ra,0x0
    8000c1d0:	010080e7          	jalr	16(ra) # 8000c1dc <_ZN6kernel6driver4plic5write17h043f91f39b6d907cE>
    8000c1d4:	a009                	j	8000c1d6 <_ZN6kernel6driver4plic13plic_complete17hda6f35daf280a4e7E+0x36>
}
    8000c1d6:	70a2                	ld	ra,40(sp)
    8000c1d8:	6145                	addi	sp,sp,48
    8000c1da:	8082                	ret

Disassembly of section .text._ZN6kernel6driver4plic5write17h043f91f39b6d907cE:

000000008000c1dc <_ZN6kernel6driver4plic5write17h043f91f39b6d907cE>:


fn write(addr: usize, val: u32) {
    8000c1dc:	1101                	addi	sp,sp,-32
    8000c1de:	ec06                	sd	ra,24(sp)
    8000c1e0:	862e                	mv	a2,a1
    8000c1e2:	e42a                	sd	a0,8(sp)
    8000c1e4:	ca2e                	sw	a1,20(sp)
    unsafe {
        ptr::write(addr as *mut u32, val);
    8000c1e6:	e032                	sd	a2,0(sp)
    8000c1e8:	00005097          	auipc	ra,0x5
    8000c1ec:	ac4080e7          	jalr	-1340(ra) # 80010cac <_ZN4core3ptr5write17h9ef81f9492ed6dceE>
    8000c1f0:	a009                	j	8000c1f2 <_ZN6kernel6driver4plic5write17h043f91f39b6d907cE+0x16>
    }
}
    8000c1f2:	60e2                	ld	ra,24(sp)
    8000c1f4:	6105                	addi	sp,sp,32
    8000c1f6:	8082                	ret

Disassembly of section .text._ZN6kernel6driver4plic4read17h27ae5edac1c629ceE:

000000008000c1f8 <_ZN6kernel6driver4plic4read17h27ae5edac1c629ceE>:

fn read(addr: usize) -> u32 {
    8000c1f8:	1101                	addi	sp,sp,-32
    8000c1fa:	ec06                	sd	ra,24(sp)
    8000c1fc:	e82a                	sd	a0,16(sp)
    unsafe {
        ptr::read(addr as *const u32)
    8000c1fe:	00005097          	auipc	ra,0x5
    8000c202:	8f4080e7          	jalr	-1804(ra) # 80010af2 <_ZN4core3ptr4read17h9c28f54bc51d0888E>
    8000c206:	e42a                	sd	a0,8(sp)
    8000c208:	a009                	j	8000c20a <_ZN6kernel6driver4plic4read17h27ae5edac1c629ceE+0x12>
    }
    8000c20a:	6522                	ld	a0,8(sp)
    8000c20c:	60e2                	ld	ra,24(sp)
    8000c20e:	6105                	addi	sp,sp,32
    8000c210:	8082                	ret

Disassembly of section .text._ZN6kernel2fs4pipe4Pipe4read17h0a1d1c5b4cb6641aE:

000000008000c212 <_ZN6kernel2fs4pipe4Pipe4read17h0a1d1c5b4cb6641aE>:
        wf.pipe = Some(&mut pipe as *mut Pipe);

        pipe
    }

    pub fn read(&self, addr: usize, len: usize) -> Result<usize, &'static str> {
    8000c212:	7101                	addi	sp,sp,-512
    8000c214:	ff86                	sd	ra,504(sp)
    8000c216:	ef2e                	sd	a1,408(sp)
    8000c218:	f332                	sd	a2,416(sp)
    8000c21a:	f736                	sd	a3,424(sp)

000000008000c21c <.LBB0_60>:
        let my_proc = unsafe {
            CPU_MANAGER.myproc().ok_or("Fail to get my process")?
    8000c21c:	00063717          	auipc	a4,0x63
    8000c220:	de470713          	addi	a4,a4,-540 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000c224:	e22a                	sd	a0,256(sp)
    8000c226:	853a                	mv	a0,a4
    8000c228:	fdb6                	sd	a3,248(sp)
    8000c22a:	f9b2                	sd	a2,240(sp)
    8000c22c:	f5ae                	sd	a1,232(sp)
    8000c22e:	00011097          	auipc	ra,0x11
    8000c232:	50a080e7          	jalr	1290(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8000c236:	f1aa                	sd	a0,224(sp)
    8000c238:	a009                	j	8000c23a <.LBB0_61>

000000008000c23a <.LBB0_61>:
    8000c23a:	0001a617          	auipc	a2,0x1a
    8000c23e:	86660613          	addi	a2,a2,-1946 # 80025aa0 <.L__unnamed_1>
    8000c242:	1208                	addi	a0,sp,288
    8000c244:	46d9                	li	a3,22
    8000c246:	758e                	ld	a1,224(sp)
    8000c248:	0000c097          	auipc	ra,0xc
    8000c24c:	3de080e7          	jalr	990(ra) # 80018626 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE>
    8000c250:	a009                	j	8000c252 <.LBB0_61+0x18>
    8000c252:	0228                	addi	a0,sp,264
    8000c254:	120c                	addi	a1,sp,288
    8000c256:	00001097          	auipc	ra,0x1
    8000c25a:	c7c080e7          	jalr	-900(ra) # 8000ced2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h0a8c29044921e3c5E>
    8000c25e:	a009                	j	8000c260 <.LBB0_61+0x26>
    8000c260:	6532                	ld	a0,264(sp)
    8000c262:	4581                	li	a1,0
    8000c264:	00b50463          	beq	a0,a1,8000c26c <.LBB0_61+0x32>
    8000c268:	a009                	j	8000c26a <.LBB0_61+0x30>
    8000c26a:	a831                	j	8000c286 <.LBB0_61+0x4c>
    8000c26c:	6552                	ld	a0,272(sp)
    8000c26e:	e3aa                	sd	a0,448(sp)
    8000c270:	e7aa                	sd	a0,456(sp)
        };

        let mut pipe_guard = self.guard.acquire();
    8000c272:	75ae                	ld	a1,232(sp)
    8000c274:	edaa                	sd	a0,216(sp)
    8000c276:	852e                	mv	a0,a1
    8000c278:	ffff6097          	auipc	ra,0xffff6
    8000c27c:	660080e7          	jalr	1632(ra) # 800028d8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E>
    8000c280:	fe2a                	sd	a0,312(sp)
    8000c282:	a035                	j	8000c2ae <.LBB0_61+0x74>
            CPU_MANAGER.myproc().ok_or("Fail to get my process")?
    8000c284:	0000                	unimp
    8000c286:	6552                	ld	a0,272(sp)
    8000c288:	65f2                	ld	a1,280(sp)
    8000c28a:	fb2a                	sd	a0,432(sp)
    8000c28c:	ff2e                	sd	a1,440(sp)
    8000c28e:	0000d097          	auipc	ra,0xd
    8000c292:	f56080e7          	jalr	-170(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8000c296:	e9aa                	sd	a0,208(sp)
    8000c298:	e5ae                	sd	a1,200(sp)
    8000c29a:	a009                	j	8000c29c <.LBB0_61+0x62>
    8000c29c:	6512                	ld	a0,256(sp)
    8000c29e:	65ce                	ld	a1,208(sp)
    8000c2a0:	662e                	ld	a2,200(sp)
    8000c2a2:	00001097          	auipc	ra,0x1
    8000c2a6:	bd6080e7          	jalr	-1066(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    8000c2aa:	a009                	j	8000c2ac <.LBB0_61+0x72>
#![no_std]
    8000c2ac:	ac85                	j	8000c51c <.LBB0_63+0x2a>
        while pipe_guard.read_number == pipe_guard.write_number && pipe_guard.write_open {
    8000c2ae:	a009                	j	8000c2b0 <.LBB0_61+0x76>
    8000c2b0:	1a28                	addi	a0,sp,312
    8000c2b2:	ffff7097          	auipc	ra,0xffff7
    8000c2b6:	5ea080e7          	jalr	1514(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c2ba:	e1aa                	sd	a0,192(sp)
    8000c2bc:	a02d                	j	8000c2e6 <.LBB0_61+0xac>
    8000c2be:	4505                	li	a0,1
    8000c2c0:	14a103a3          	sb	a0,327(sp)
    8000c2c4:	a821                	j	8000c2dc <.LBB0_61+0xa2>
    8000c2c6:	4501                	li	a0,0
    8000c2c8:	14a103a3          	sb	a0,327(sp)
    8000c2cc:	a801                	j	8000c2dc <.LBB0_61+0xa2>
    8000c2ce:	1a28                	addi	a0,sp,312
    8000c2d0:	ffff7097          	auipc	ra,0xffff7
    8000c2d4:	5cc080e7          	jalr	1484(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c2d8:	fd2a                	sd	a0,184(sp)
    8000c2da:	a805                	j	8000c30a <.LBB0_61+0xd0>
    8000c2dc:	14714503          	lbu	a0,327(sp)
    8000c2e0:	8905                	andi	a0,a0,1
    8000c2e2:	e531                	bnez	a0,8000c32e <.LBB0_61+0xf4>
    8000c2e4:	a80d                	j	8000c316 <.LBB0_61+0xdc>
    8000c2e6:	650e                	ld	a0,192(sp)
    8000c2e8:	20053583          	ld	a1,512(a0) # c000200 <.Lline_table_start0+0xbfc7eb9>
    8000c2ec:	1a28                	addi	a0,sp,312
    8000c2ee:	f92e                	sd	a1,176(sp)
    8000c2f0:	ffff7097          	auipc	ra,0xffff7
    8000c2f4:	5ac080e7          	jalr	1452(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c2f8:	f52a                	sd	a0,168(sp)
    8000c2fa:	a009                	j	8000c2fc <.LBB0_61+0xc2>
    8000c2fc:	752a                	ld	a0,168(sp)
    8000c2fe:	20853583          	ld	a1,520(a0)
    8000c302:	764a                	ld	a2,176(sp)
    8000c304:	fcb605e3          	beq	a2,a1,8000c2ce <.LBB0_61+0x94>
    8000c308:	bf7d                	j	8000c2c6 <.LBB0_61+0x8c>
    8000c30a:	756a                	ld	a0,184(sp)
    8000c30c:	21154583          	lbu	a1,529(a0)
    8000c310:	8985                	andi	a1,a1,1
    8000c312:	f5d5                	bnez	a1,8000c2be <.LBB0_61+0x84>
    8000c314:	bf4d                	j	8000c2c6 <.LBB0_61+0x8c>
    8000c316:	4501                	li	a0,0
                pipe_guard
            );
            pipe_guard = self.guard.acquire();
        }

        let mut i = 0;
    8000c318:	e6aa                	sd	a0,328(sp)
        for index in 0..len {
    8000c31a:	eaaa                	sd	a0,336(sp)
    8000c31c:	75ee                	ld	a1,248(sp)
    8000c31e:	eeae                	sd	a1,344(sp)
    8000c320:	00013097          	auipc	ra,0x13
    8000c324:	78a080e7          	jalr	1930(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8000c328:	f12a                	sd	a0,160(sp)
    8000c32a:	ed2e                	sd	a1,152(sp)
    8000c32c:	a895                	j	8000c3a0 <.LBB0_62+0x40>
            if my_proc.killed() {
    8000c32e:	656e                	ld	a0,216(sp)
    8000c330:	00006097          	auipc	ra,0x6
    8000c334:	ee4080e7          	jalr	-284(ra) # 80012214 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E>
    8000c338:	e92a                	sd	a0,144(sp)
    8000c33a:	a009                	j	8000c33c <.LBB0_61+0x102>
    8000c33c:	4501                	li	a0,0
    8000c33e:	65ca                	ld	a1,144(sp)
    8000c340:	00a58963          	beq	a1,a0,8000c352 <.LBB0_61+0x118>
    8000c344:	a009                	j	8000c346 <.LBB0_61+0x10c>
                drop(pipe_guard);
    8000c346:	7572                	ld	a0,312(sp)
    8000c348:	00001097          	auipc	ra,0x1
    8000c34c:	5f8080e7          	jalr	1528(ra) # 8000d940 <_ZN4core3mem4drop17h6097269dfa89368aE>
    8000c350:	a801                	j	8000c360 <.LBB0_62>
    8000c352:	1a28                	addi	a0,sp,312
                &pipe_guard.read_number as *const _ as usize, 
    8000c354:	ffff7097          	auipc	ra,0xffff7
    8000c358:	548080e7          	jalr	1352(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c35c:	e52a                	sd	a0,136(sp)
    8000c35e:	a829                	j	8000c378 <.LBB0_62+0x18>

000000008000c360 <.LBB0_62>:
                return Err("pipe read: current process has been killed")
    8000c360:	00019517          	auipc	a0,0x19
    8000c364:	75650513          	addi	a0,a0,1878 # 80025ab6 <.L__unnamed_2>
    8000c368:	6592                	ld	a1,256(sp)
    8000c36a:	e588                	sd	a0,8(a1)
    8000c36c:	02a00513          	li	a0,42
    8000c370:	e988                	sd	a0,16(a1)
    8000c372:	4505                	li	a0,1
    8000c374:	e188                	sd	a0,0(a1)
    8000c376:	a25d                	j	8000c51c <.LBB0_63+0x2a>
                &pipe_guard.read_number as *const _ as usize, 
    8000c378:	652a                	ld	a0,136(sp)
    8000c37a:	20050593          	addi	a1,a0,512
                pipe_guard
    8000c37e:	7672                	ld	a2,312(sp)
            my_proc.sleep(
    8000c380:	656e                	ld	a0,216(sp)
    8000c382:	ffffa097          	auipc	ra,0xffffa
    8000c386:	b02080e7          	jalr	-1278(ra) # 80005e84 <_ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE>
    8000c38a:	a009                	j	8000c38c <.LBB0_62+0x2c>
            pipe_guard = self.guard.acquire();
    8000c38c:	752e                	ld	a0,232(sp)
    8000c38e:	ffff6097          	auipc	ra,0xffff6
    8000c392:	54a080e7          	jalr	1354(ra) # 800028d8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E>
    8000c396:	e12a                	sd	a0,128(sp)
    8000c398:	a009                	j	8000c39a <.LBB0_62+0x3a>
    8000c39a:	650a                	ld	a0,128(sp)
    8000c39c:	fe2a                	sd	a0,312(sp)
        while pipe_guard.read_number == pipe_guard.write_number && pipe_guard.write_open {
    8000c39e:	bf09                	j	8000c2b0 <.LBB0_61+0x76>
        for index in 0..len {
    8000c3a0:	750a                	ld	a0,160(sp)
    8000c3a2:	f2aa                	sd	a0,352(sp)
    8000c3a4:	65ea                	ld	a1,152(sp)
    8000c3a6:	f6ae                	sd	a1,360(sp)
    8000c3a8:	a009                	j	8000c3aa <.LBB0_62+0x4a>
    8000c3aa:	1288                	addi	a0,sp,352
    8000c3ac:	00013097          	auipc	ra,0x13
    8000c3b0:	690080e7          	jalr	1680(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000c3b4:	faaa                	sd	a0,368(sp)
    8000c3b6:	feae                	sd	a1,376(sp)
    8000c3b8:	a009                	j	8000c3ba <.LBB0_62+0x5a>
    8000c3ba:	7556                	ld	a0,368(sp)
    8000c3bc:	4581                	li	a1,0
    8000c3be:	00b50463          	beq	a0,a1,8000c3c6 <.LBB0_62+0x66>
    8000c3c2:	a009                	j	8000c3c4 <.LBB0_62+0x64>
    8000c3c4:	a019                	j	8000c3ca <.LBB0_62+0x6a>
    8000c3c6:	aa21                	j	8000c4de <.LBB0_62+0x17e>
    8000c3c8:	0000                	unimp
    8000c3ca:	7576                	ld	a0,376(sp)
    8000c3cc:	ebaa                	sd	a0,464(sp)
    8000c3ce:	efaa                	sd	a0,472(sp)
    8000c3d0:	f3aa                	sd	a0,480(sp)
    8000c3d2:	1a2c                	addi	a1,sp,312
            if pipe_guard.read_number == pipe_guard.write_number { break; }
    8000c3d4:	fcaa                	sd	a0,120(sp)
    8000c3d6:	852e                	mv	a0,a1
    8000c3d8:	ffff7097          	auipc	ra,0xffff7
    8000c3dc:	4c4080e7          	jalr	1220(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c3e0:	f8aa                	sd	a0,112(sp)
    8000c3e2:	a009                	j	8000c3e4 <.LBB0_62+0x84>
    8000c3e4:	7546                	ld	a0,112(sp)
    8000c3e6:	20053583          	ld	a1,512(a0)
    8000c3ea:	1a28                	addi	a0,sp,312
    8000c3ec:	f4ae                	sd	a1,104(sp)
    8000c3ee:	ffff7097          	auipc	ra,0xffff7
    8000c3f2:	4ae080e7          	jalr	1198(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c3f6:	f0aa                	sd	a0,96(sp)
    8000c3f8:	a009                	j	8000c3fa <.LBB0_62+0x9a>
    8000c3fa:	7506                	ld	a0,96(sp)
    8000c3fc:	20853583          	ld	a1,520(a0)
    8000c400:	7626                	ld	a2,104(sp)
    8000c402:	00b61463          	bne	a2,a1,8000c40a <.LBB0_62+0xaa>
    8000c406:	a009                	j	8000c408 <.LBB0_62+0xa8>
    8000c408:	a8d1                	j	8000c4dc <.LBB0_62+0x17c>
    8000c40a:	1a28                	addi	a0,sp,312
            let read_cursor = pipe_guard.read_number % PIPE_SIZE;
    8000c40c:	ffff7097          	auipc	ra,0xffff7
    8000c410:	490080e7          	jalr	1168(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c414:	ecaa                	sd	a0,88(sp)
    8000c416:	a009                	j	8000c418 <.LBB0_62+0xb8>
    8000c418:	6566                	ld	a0,88(sp)
    8000c41a:	20053583          	ld	a1,512(a0)
    8000c41e:	1ff5f593          	andi	a1,a1,511
    8000c422:	f7ae                	sd	a1,488(sp)
    8000c424:	1a28                	addi	a0,sp,312
            let ch = pipe_guard.data[read_cursor % PIPE_SIZE];
    8000c426:	e8ae                	sd	a1,80(sp)
    8000c428:	ffff7097          	auipc	ra,0xffff7
    8000c42c:	474080e7          	jalr	1140(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c430:	e4aa                	sd	a0,72(sp)
    8000c432:	a009                	j	8000c434 <.LBB0_62+0xd4>
    8000c434:	6546                	ld	a0,80(sp)
    8000c436:	1ff00593          	li	a1,511
    8000c43a:	6646                	ld	a2,80(sp)
    8000c43c:	e0aa                	sd	a0,64(sp)
    8000c43e:	0ec5e463          	bltu	a1,a2,8000c526 <.LBB0_64>
    8000c442:	a009                	j	8000c444 <.LBB0_62+0xe4>
    8000c444:	6526                	ld	a0,72(sp)
    8000c446:	6586                	ld	a1,64(sp)
    8000c448:	00b50633          	add	a2,a0,a1
    8000c44c:	00060603          	lb	a2,0(a2)
    8000c450:	18c103a3          	sb	a2,391(sp)
    8000c454:	1a28                	addi	a0,sp,312
            pipe_guard.read_number += 1;
    8000c456:	ffff7097          	auipc	ra,0xffff7
    8000c45a:	5e4080e7          	jalr	1508(ra) # 80003a3a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17haceeee835a7fc491E>
    8000c45e:	fc2a                	sd	a0,56(sp)
    8000c460:	a009                	j	8000c462 <.LBB0_62+0x102>
    8000c462:	7562                	ld	a0,56(sp)
    8000c464:	20053583          	ld	a1,512(a0)
    8000c468:	00158613          	addi	a2,a1,1
    8000c46c:	f832                	sd	a2,48(sp)
    8000c46e:	0cb66863          	bltu	a2,a1,8000c53e <.LBB0_65>
    8000c472:	a009                	j	8000c474 <.LBB0_62+0x114>
    8000c474:	7542                	ld	a0,48(sp)
    8000c476:	75e2                	ld	a1,56(sp)
    8000c478:	20a5b023          	sd	a0,512(a1)
            let pgt = my_proc.page_table();
    8000c47c:	656e                	ld	a0,216(sp)
    8000c47e:	00006097          	auipc	ra,0x6
    8000c482:	ee4080e7          	jalr	-284(ra) # 80012362 <_ZN6kernel7process7process7Process10page_table17hbf36808f3c33898dE>
    8000c486:	85aa                	mv	a1,a0
    8000c488:	fbaa                	sd	a0,496(sp)
    8000c48a:	f42e                	sd	a1,40(sp)
    8000c48c:	a009                	j	8000c48e <.LBB0_62+0x12e>
            if pgt.copy_out(addr + index, &ch as *const u8, 1).is_err() {
    8000c48e:	7522                	ld	a0,40(sp)
    8000c490:	6108                	ld	a0,0(a0)
    8000c492:	75ce                	ld	a1,240(sp)
    8000c494:	7666                	ld	a2,120(sp)
    8000c496:	00c586b3          	add	a3,a1,a2
    8000c49a:	f02a                	sd	a0,32(sp)
    8000c49c:	ec36                	sd	a3,24(sp)
    8000c49e:	0ab6ee63          	bltu	a3,a1,8000c55a <.LBB0_67>
    8000c4a2:	a009                	j	8000c4a4 <.LBB0_62+0x144>
    8000c4a4:	18710613          	addi	a2,sp,391
    8000c4a8:	4685                	li	a3,1
    8000c4aa:	7502                	ld	a0,32(sp)
    8000c4ac:	65e2                	ld	a1,24(sp)
    8000c4ae:	00003097          	auipc	ra,0x3
    8000c4b2:	658080e7          	jalr	1624(ra) # 8000fb06 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE>
    8000c4b6:	e72a                	sd	a0,392(sp)
    8000c4b8:	eb2e                	sd	a1,400(sp)
    8000c4ba:	a009                	j	8000c4bc <.LBB0_62+0x15c>
    8000c4bc:	0328                	addi	a0,sp,392
    8000c4be:	00000097          	auipc	ra,0x0
    8000c4c2:	7c0080e7          	jalr	1984(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8000c4c6:	e82a                	sd	a0,16(sp)
    8000c4c8:	a009                	j	8000c4ca <.LBB0_62+0x16a>
    8000c4ca:	4501                	li	a0,0
    8000c4cc:	65c2                	ld	a1,16(sp)
    8000c4ce:	00a58463          	beq	a1,a0,8000c4d6 <.LBB0_62+0x176>
    8000c4d2:	a009                	j	8000c4d4 <.LBB0_62+0x174>
    8000c4d4:	a021                	j	8000c4dc <.LBB0_62+0x17c>
                break;
            }
            i = index;
    8000c4d6:	7566                	ld	a0,120(sp)
    8000c4d8:	e6aa                	sd	a0,328(sp)
        for index in 0..len {
    8000c4da:	bdc1                	j	8000c3aa <.LBB0_62+0x4a>
    8000c4dc:	a009                	j	8000c4de <.LBB0_62+0x17e>
    8000c4de:	1a28                	addi	a0,sp,312
        }

        unsafe{ PROC_MANAGER.wake_up(&pipe_guard.write_number as *const _ as usize) };
    8000c4e0:	ffff7097          	auipc	ra,0xffff7
    8000c4e4:	3bc080e7          	jalr	956(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c4e8:	e42a                	sd	a0,8(sp)
    8000c4ea:	a009                	j	8000c4ec <.LBB0_62+0x18c>
    8000c4ec:	6522                	ld	a0,8(sp)
    8000c4ee:	20850593          	addi	a1,a0,520

000000008000c4f2 <.LBB0_63>:
    8000c4f2:	00050517          	auipc	a0,0x50
    8000c4f6:	a0e50513          	addi	a0,a0,-1522 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000c4fa:	00010097          	auipc	ra,0x10
    8000c4fe:	7a2080e7          	jalr	1954(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8000c502:	a009                	j	8000c504 <.LBB0_63+0x12>
        drop(pipe_guard);
    8000c504:	7572                	ld	a0,312(sp)
    8000c506:	00001097          	auipc	ra,0x1
    8000c50a:	43a080e7          	jalr	1082(ra) # 8000d940 <_ZN4core3mem4drop17h6097269dfa89368aE>
    8000c50e:	a009                	j	8000c510 <.LBB0_63+0x1e>
        Ok(i)
    8000c510:	6536                	ld	a0,328(sp)
    8000c512:	6592                	ld	a1,256(sp)
    8000c514:	e588                	sd	a0,8(a1)
    8000c516:	4501                	li	a0,0
    8000c518:	e188                	sd	a0,0(a1)
    }
    8000c51a:	a011                	j	8000c51e <.LBB0_63+0x2c>
    8000c51c:	a009                	j	8000c51e <.LBB0_63+0x2c>
    8000c51e:	70fe                	ld	ra,504(sp)
    8000c520:	20010113          	addi	sp,sp,512
    8000c524:	8082                	ret

000000008000c526 <.LBB0_64>:
            let ch = pipe_guard.data[read_cursor % PIPE_SIZE];
    8000c526:	00019617          	auipc	a2,0x19
    8000c52a:	5ca60613          	addi	a2,a2,1482 # 80025af0 <.L__unnamed_3>
    8000c52e:	20000593          	li	a1,512
    8000c532:	6506                	ld	a0,64(sp)
    8000c534:	00014097          	auipc	ra,0x14
    8000c538:	7c2080e7          	jalr	1986(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000c53e <.LBB0_65>:
            pipe_guard.read_number += 1;
    8000c53e:	00019517          	auipc	a0,0x19
    8000c542:	5e250513          	addi	a0,a0,1506 # 80025b20 <str.0>

000000008000c546 <.LBB0_66>:
    8000c546:	00019617          	auipc	a2,0x19
    8000c54a:	5c260613          	addi	a2,a2,1474 # 80025b08 <.L__unnamed_4>
    8000c54e:	45f1                	li	a1,28
    8000c550:	00014097          	auipc	ra,0x14
    8000c554:	77a080e7          	jalr	1914(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000c55a <.LBB0_67>:
            if pgt.copy_out(addr + index, &ch as *const u8, 1).is_err() {
    8000c55a:	00019517          	auipc	a0,0x19
    8000c55e:	5c650513          	addi	a0,a0,1478 # 80025b20 <str.0>

000000008000c562 <.LBB0_68>:
    8000c562:	00019617          	auipc	a2,0x19
    8000c566:	5de60613          	addi	a2,a2,1502 # 80025b40 <.L__unnamed_5>
    8000c56a:	45f1                	li	a1,28
    8000c56c:	00014097          	auipc	ra,0x14
    8000c570:	75e080e7          	jalr	1886(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs4pipe4Pipe5write17h73901f6d84c32618E:

000000008000c576 <_ZN6kernel2fs4pipe4Pipe5write17h73901f6d84c32618E>:

    pub fn write(&self, addr: usize, len: usize) -> Result<usize, &'static str> {
    8000c576:	7165                	addi	sp,sp,-400
    8000c578:	e706                	sd	ra,392(sp)
    8000c57a:	e2ae                	sd	a1,320(sp)
    8000c57c:	e6b2                	sd	a2,328(sp)
    8000c57e:	eab6                	sd	a3,336(sp)

000000008000c580 <.LBB1_54>:
        let my_proc = unsafe {
            CPU_MANAGER.myproc().ok_or("Fail to get current process")?
    8000c580:	00063717          	auipc	a4,0x63
    8000c584:	a8070713          	addi	a4,a4,-1408 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000c588:	f1aa                	sd	a0,224(sp)
    8000c58a:	853a                	mv	a0,a4
    8000c58c:	edb6                	sd	a3,216(sp)
    8000c58e:	e9b2                	sd	a2,208(sp)
    8000c590:	e5ae                	sd	a1,200(sp)
    8000c592:	00011097          	auipc	ra,0x11
    8000c596:	1a6080e7          	jalr	422(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8000c59a:	e1aa                	sd	a0,192(sp)
    8000c59c:	a009                	j	8000c59e <.LBB1_55>

000000008000c59e <.LBB1_55>:
    8000c59e:	00019617          	auipc	a2,0x19
    8000c5a2:	5ba60613          	addi	a2,a2,1466 # 80025b58 <.L__unnamed_6>
    8000c5a6:	0208                	addi	a0,sp,256
    8000c5a8:	46ed                	li	a3,27
    8000c5aa:	658e                	ld	a1,192(sp)
    8000c5ac:	0000c097          	auipc	ra,0xc
    8000c5b0:	07a080e7          	jalr	122(ra) # 80018626 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE>
    8000c5b4:	a009                	j	8000c5b6 <.LBB1_55+0x18>
    8000c5b6:	11a8                	addi	a0,sp,232
    8000c5b8:	020c                	addi	a1,sp,256
    8000c5ba:	00001097          	auipc	ra,0x1
    8000c5be:	918080e7          	jalr	-1768(ra) # 8000ced2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h0a8c29044921e3c5E>
    8000c5c2:	a009                	j	8000c5c4 <.LBB1_55+0x26>
    8000c5c4:	752e                	ld	a0,232(sp)
    8000c5c6:	4581                	li	a1,0
    8000c5c8:	00b50463          	beq	a0,a1,8000c5d0 <.LBB1_55+0x32>
    8000c5cc:	a009                	j	8000c5ce <.LBB1_55+0x30>
    8000c5ce:	a831                	j	8000c5ea <.LBB1_55+0x4c>
    8000c5d0:	754e                	ld	a0,240(sp)
    8000c5d2:	f6aa                	sd	a0,360(sp)
    8000c5d4:	faaa                	sd	a0,368(sp)
        };

        let mut pipe_guard = self.guard.acquire();
    8000c5d6:	65ae                	ld	a1,200(sp)
    8000c5d8:	fd2a                	sd	a0,184(sp)
    8000c5da:	852e                	mv	a0,a1
    8000c5dc:	ffff6097          	auipc	ra,0xffff6
    8000c5e0:	2fc080e7          	jalr	764(ra) # 800028d8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E>
    8000c5e4:	ee2a                	sd	a0,280(sp)
    8000c5e6:	a035                	j	8000c612 <.LBB1_55+0x74>
            CPU_MANAGER.myproc().ok_or("Fail to get current process")?
    8000c5e8:	0000                	unimp
    8000c5ea:	754e                	ld	a0,240(sp)
    8000c5ec:	75ee                	ld	a1,248(sp)
    8000c5ee:	eeaa                	sd	a0,344(sp)
    8000c5f0:	f2ae                	sd	a1,352(sp)
    8000c5f2:	0000d097          	auipc	ra,0xd
    8000c5f6:	bf2080e7          	jalr	-1038(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8000c5fa:	f92a                	sd	a0,176(sp)
    8000c5fc:	f52e                	sd	a1,168(sp)
    8000c5fe:	a009                	j	8000c600 <.LBB1_55+0x62>
    8000c600:	750e                	ld	a0,224(sp)
    8000c602:	75ca                	ld	a1,176(sp)
    8000c604:	762a                	ld	a2,168(sp)
    8000c606:	00001097          	auipc	ra,0x1
    8000c60a:	872080e7          	jalr	-1934(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    8000c60e:	a009                	j	8000c610 <.LBB1_55+0x72>
    8000c610:	a405                	j	8000c830 <.LBB1_58+0x2a>
    8000c612:	4501                	li	a0,0
        let mut i = 0;
    8000c614:	f22a                	sd	a0,288(sp)
        while i < len {
    8000c616:	a009                	j	8000c618 <.LBB1_55+0x7a>
    8000c618:	7512                	ld	a0,288(sp)
    8000c61a:	65ee                	ld	a1,216(sp)
    8000c61c:	00b56463          	bltu	a0,a1,8000c624 <.LBB1_55+0x86>
    8000c620:	a009                	j	8000c622 <.LBB1_55+0x84>
    8000c622:	aac1                	j	8000c7f2 <.LBB1_57+0xf2>
    8000c624:	0a28                	addi	a0,sp,280
            if !pipe_guard.read_open || my_proc.killed() {
    8000c626:	ffff7097          	auipc	ra,0xffff7
    8000c62a:	276080e7          	jalr	630(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c62e:	f12a                	sd	a0,160(sp)
    8000c630:	a02d                	j	8000c65a <.LBB1_55+0xbc>
    8000c632:	4505                	li	a0,1
    8000c634:	12a10723          	sb	a0,302(sp)
    8000c638:	a821                	j	8000c650 <.LBB1_55+0xb2>
    8000c63a:	4501                	li	a0,0
    8000c63c:	12a10723          	sb	a0,302(sp)
    8000c640:	a801                	j	8000c650 <.LBB1_55+0xb2>
    8000c642:	756a                	ld	a0,184(sp)
    8000c644:	00006097          	auipc	ra,0x6
    8000c648:	bd0080e7          	jalr	-1072(ra) # 80012214 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E>
    8000c64c:	ed2a                	sd	a0,152(sp)
    8000c64e:	a831                	j	8000c66a <.LBB1_55+0xcc>
    8000c650:	12e14503          	lbu	a0,302(sp)
    8000c654:	8905                	andi	a0,a0,1
    8000c656:	ed09                	bnez	a0,8000c670 <.LBB1_55+0xd2>
    8000c658:	a015                	j	8000c67c <.LBB1_55+0xde>
    8000c65a:	750a                	ld	a0,160(sp)
    8000c65c:	21054583          	lbu	a1,528(a0)
    8000c660:	8985                	andi	a1,a1,1
    8000c662:	4601                	li	a2,0
    8000c664:	fcc587e3          	beq	a1,a2,8000c632 <.LBB1_55+0x94>
    8000c668:	bfe9                	j	8000c642 <.LBB1_55+0xa4>
    8000c66a:	656a                	ld	a0,152(sp)
    8000c66c:	f179                	bnez	a0,8000c632 <.LBB1_55+0x94>
    8000c66e:	b7f1                	j	8000c63a <.LBB1_55+0x9c>
                drop(pipe_guard);
    8000c670:	6572                	ld	a0,280(sp)
    8000c672:	00001097          	auipc	ra,0x1
    8000c676:	2ce080e7          	jalr	718(ra) # 8000d940 <_ZN4core3mem4drop17h6097269dfa89368aE>
    8000c67a:	a801                	j	8000c68a <.LBB1_56>
    8000c67c:	0a28                	addi	a0,sp,280
                return Err("pipe write: pipe read close or current process has been killed")
            }

            if pipe_guard.write_number == pipe_guard.read_number + PIPE_SIZE {
    8000c67e:	ffff7097          	auipc	ra,0xffff7
    8000c682:	21e080e7          	jalr	542(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c686:	e92a                	sd	a0,144(sp)
    8000c688:	a829                	j	8000c6a2 <.LBB1_56+0x18>

000000008000c68a <.LBB1_56>:
                return Err("pipe write: pipe read close or current process has been killed")
    8000c68a:	00019517          	auipc	a0,0x19
    8000c68e:	4e950513          	addi	a0,a0,1257 # 80025b73 <.L__unnamed_7>
    8000c692:	758e                	ld	a1,224(sp)
    8000c694:	e588                	sd	a0,8(a1)
    8000c696:	03e00513          	li	a0,62
    8000c69a:	e988                	sd	a0,16(a1)
    8000c69c:	4505                	li	a0,1
    8000c69e:	e188                	sd	a0,0(a1)
    8000c6a0:	aa41                	j	8000c830 <.LBB1_58+0x2a>
            if pipe_guard.write_number == pipe_guard.read_number + PIPE_SIZE {
    8000c6a2:	654a                	ld	a0,144(sp)
    8000c6a4:	20853583          	ld	a1,520(a0)
    8000c6a8:	0a28                	addi	a0,sp,280
    8000c6aa:	e52e                	sd	a1,136(sp)
    8000c6ac:	ffff7097          	auipc	ra,0xffff7
    8000c6b0:	1f0080e7          	jalr	496(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c6b4:	e12a                	sd	a0,128(sp)
    8000c6b6:	a009                	j	8000c6b8 <.LBB1_56+0x2e>
    8000c6b8:	650a                	ld	a0,128(sp)
    8000c6ba:	20053583          	ld	a1,512(a0)
    8000c6be:	20058613          	addi	a2,a1,512
    8000c6c2:	fcb2                	sd	a2,120(sp)
    8000c6c4:	16b66a63          	bltu	a2,a1,8000c838 <.LBB1_59>
    8000c6c8:	a009                	j	8000c6ca <.LBB1_56+0x40>
    8000c6ca:	652a                	ld	a0,136(sp)
    8000c6cc:	75e6                	ld	a1,120(sp)
    8000c6ce:	00b51a63          	bne	a0,a1,8000c6e2 <.LBB1_56+0x58>
    8000c6d2:	a009                	j	8000c6d4 <.LBB1_56+0x4a>
    8000c6d4:	0a28                	addi	a0,sp,280
                unsafe {
                    PROC_MANAGER.wake_up(&pipe_guard.read_number as *const _ as usize);
    8000c6d6:	ffff7097          	auipc	ra,0xffff7
    8000c6da:	1c6080e7          	jalr	454(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c6de:	f8aa                	sd	a0,112(sp)
    8000c6e0:	a829                	j	8000c6fa <.LBB1_56+0x70>
    8000c6e2:	4501                	li	a0,0
                }
                my_proc.sleep(&pipe_guard.write_number as *const _ as usize, pipe_guard);
                pipe_guard = self.guard.acquire();
            } else {
                let mut char: u8 = 0;
    8000c6e4:	12a107a3          	sb	a0,303(sp)
                let pgt = my_proc.page_table();
    8000c6e8:	756a                	ld	a0,184(sp)
    8000c6ea:	00006097          	auipc	ra,0x6
    8000c6ee:	c78080e7          	jalr	-904(ra) # 80012362 <_ZN6kernel7process7process7Process10page_table17hbf36808f3c33898dE>
    8000c6f2:	85aa                	mv	a1,a0
    8000c6f4:	feaa                	sd	a0,376(sp)
    8000c6f6:	f4ae                	sd	a1,104(sp)
    8000c6f8:	a881                	j	8000c748 <.LBB1_57+0x48>
                    PROC_MANAGER.wake_up(&pipe_guard.read_number as *const _ as usize);
    8000c6fa:	7546                	ld	a0,112(sp)
    8000c6fc:	20050593          	addi	a1,a0,512

000000008000c700 <.LBB1_57>:
    8000c700:	00050517          	auipc	a0,0x50
    8000c704:	80050513          	addi	a0,a0,-2048 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000c708:	00010097          	auipc	ra,0x10
    8000c70c:	594080e7          	jalr	1428(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8000c710:	a009                	j	8000c712 <.LBB1_57+0x12>
    8000c712:	0a28                	addi	a0,sp,280
                my_proc.sleep(&pipe_guard.write_number as *const _ as usize, pipe_guard);
    8000c714:	ffff7097          	auipc	ra,0xffff7
    8000c718:	188080e7          	jalr	392(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c71c:	f0aa                	sd	a0,96(sp)
    8000c71e:	a009                	j	8000c720 <.LBB1_57+0x20>
    8000c720:	7506                	ld	a0,96(sp)
    8000c722:	20850593          	addi	a1,a0,520
    8000c726:	6672                	ld	a2,280(sp)
    8000c728:	756a                	ld	a0,184(sp)
    8000c72a:	ffff9097          	auipc	ra,0xffff9
    8000c72e:	75a080e7          	jalr	1882(ra) # 80005e84 <_ZN6kernel7process7process7Process5sleep17h761efb30aaf9a4fcE>
    8000c732:	a009                	j	8000c734 <.LBB1_57+0x34>
                pipe_guard = self.guard.acquire();
    8000c734:	652e                	ld	a0,200(sp)
    8000c736:	ffff6097          	auipc	ra,0xffff6
    8000c73a:	1a2080e7          	jalr	418(ra) # 800028d8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9d5e8083f3242708E>
    8000c73e:	ecaa                	sd	a0,88(sp)
    8000c740:	a009                	j	8000c742 <.LBB1_57+0x42>
    8000c742:	6566                	ld	a0,88(sp)
    8000c744:	ee2a                	sd	a0,280(sp)
            if pipe_guard.write_number == pipe_guard.read_number + PIPE_SIZE {
    8000c746:	a06d                	j	8000c7f0 <.LBB1_57+0xf0>
                if pgt.copy_in(&mut char as *mut u8, addr + i, 1).is_err() {
    8000c748:	7526                	ld	a0,104(sp)
    8000c74a:	6108                	ld	a0,0(a0)
    8000c74c:	7592                	ld	a1,288(sp)
    8000c74e:	664e                	ld	a2,208(sp)
    8000c750:	95b2                	add	a1,a1,a2
    8000c752:	e8aa                	sd	a0,80(sp)
    8000c754:	e4ae                	sd	a1,72(sp)
    8000c756:	0ec5ef63          	bltu	a1,a2,8000c854 <.LBB1_61>
    8000c75a:	a009                	j	8000c75c <.LBB1_57+0x5c>
    8000c75c:	12f10593          	addi	a1,sp,303
    8000c760:	4685                	li	a3,1
    8000c762:	6546                	ld	a0,80(sp)
    8000c764:	6626                	ld	a2,72(sp)
    8000c766:	00003097          	auipc	ra,0x3
    8000c76a:	6e6080e7          	jalr	1766(ra) # 8000fe4c <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E>
    8000c76e:	fa2a                	sd	a0,304(sp)
    8000c770:	fe2e                	sd	a1,312(sp)
    8000c772:	a009                	j	8000c774 <.LBB1_57+0x74>
    8000c774:	1a08                	addi	a0,sp,304
    8000c776:	00000097          	auipc	ra,0x0
    8000c77a:	508080e7          	jalr	1288(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8000c77e:	e0aa                	sd	a0,64(sp)
    8000c780:	a009                	j	8000c782 <.LBB1_57+0x82>
    8000c782:	4501                	li	a0,0
    8000c784:	6586                	ld	a1,64(sp)
    8000c786:	00a58463          	beq	a1,a0,8000c78e <.LBB1_57+0x8e>
    8000c78a:	a009                	j	8000c78c <.LBB1_57+0x8c>
    8000c78c:	a09d                	j	8000c7f2 <.LBB1_57+0xf2>
    8000c78e:	0a28                	addi	a0,sp,280
                    break;
                }
                let write_cursor = pipe_guard.write_number % PIPE_SIZE;
    8000c790:	ffff7097          	auipc	ra,0xffff7
    8000c794:	10c080e7          	jalr	268(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c798:	fc2a                	sd	a0,56(sp)
    8000c79a:	a009                	j	8000c79c <.LBB1_57+0x9c>
    8000c79c:	7562                	ld	a0,56(sp)
    8000c79e:	20853583          	ld	a1,520(a0)
    8000c7a2:	1ff5f593          	andi	a1,a1,511
    8000c7a6:	e32e                	sd	a1,384(sp)
                pipe_guard.data[write_cursor % PIPE_SIZE] = char;
    8000c7a8:	12f14603          	lbu	a2,303(sp)
    8000c7ac:	0a28                	addi	a0,sp,280
    8000c7ae:	f82e                	sd	a1,48(sp)
    8000c7b0:	f432                	sd	a2,40(sp)
    8000c7b2:	ffff7097          	auipc	ra,0xffff7
    8000c7b6:	288080e7          	jalr	648(ra) # 80003a3a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17haceeee835a7fc491E>
    8000c7ba:	f02a                	sd	a0,32(sp)
    8000c7bc:	a009                	j	8000c7be <.LBB1_57+0xbe>
    8000c7be:	7542                	ld	a0,48(sp)
    8000c7c0:	1ff00593          	li	a1,511
    8000c7c4:	7642                	ld	a2,48(sp)
    8000c7c6:	ec2a                	sd	a0,24(sp)
    8000c7c8:	0ac5e463          	bltu	a1,a2,8000c870 <.LBB1_63>
    8000c7cc:	a009                	j	8000c7ce <.LBB1_57+0xce>
    8000c7ce:	7502                	ld	a0,32(sp)
    8000c7d0:	65e2                	ld	a1,24(sp)
    8000c7d2:	00b50633          	add	a2,a0,a1
    8000c7d6:	76a2                	ld	a3,40(sp)
    8000c7d8:	00d60023          	sb	a3,0(a2)
                i += 1;
    8000c7dc:	7612                	ld	a2,288(sp)
    8000c7de:	00160713          	addi	a4,a2,1
    8000c7e2:	e83a                	sd	a4,16(sp)
    8000c7e4:	0ac76263          	bltu	a4,a2,8000c888 <.LBB1_64>
    8000c7e8:	a009                	j	8000c7ea <.LBB1_57+0xea>
    8000c7ea:	6542                	ld	a0,16(sp)
    8000c7ec:	f22a                	sd	a0,288(sp)
            if pipe_guard.write_number == pipe_guard.read_number + PIPE_SIZE {
    8000c7ee:	a009                	j	8000c7f0 <.LBB1_57+0xf0>
        while i < len {
    8000c7f0:	b525                	j	8000c618 <.LBB1_55+0x7a>
    8000c7f2:	0a28                	addi	a0,sp,280
            }
        }

        unsafe {
            PROC_MANAGER.wake_up(&pipe_guard.read_number as *const _ as usize);
    8000c7f4:	ffff7097          	auipc	ra,0xffff7
    8000c7f8:	0a8080e7          	jalr	168(ra) # 8000389c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7d4753f8db49ee3dE>
    8000c7fc:	e42a                	sd	a0,8(sp)
    8000c7fe:	a009                	j	8000c800 <.LBB1_57+0x100>
    8000c800:	6522                	ld	a0,8(sp)
    8000c802:	20050593          	addi	a1,a0,512

000000008000c806 <.LBB1_58>:
    8000c806:	0004f517          	auipc	a0,0x4f
    8000c80a:	6fa50513          	addi	a0,a0,1786 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000c80e:	00010097          	auipc	ra,0x10
    8000c812:	48e080e7          	jalr	1166(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8000c816:	a009                	j	8000c818 <.LBB1_58+0x12>
        }
        drop(pipe_guard);
    8000c818:	6572                	ld	a0,280(sp)
    8000c81a:	00001097          	auipc	ra,0x1
    8000c81e:	126080e7          	jalr	294(ra) # 8000d940 <_ZN4core3mem4drop17h6097269dfa89368aE>
    8000c822:	a009                	j	8000c824 <.LBB1_58+0x1e>

        Ok(i)
    8000c824:	7512                	ld	a0,288(sp)
    8000c826:	758e                	ld	a1,224(sp)
    8000c828:	e588                	sd	a0,8(a1)
    8000c82a:	4501                	li	a0,0
    8000c82c:	e188                	sd	a0,0(a1)
    }
    8000c82e:	a011                	j	8000c832 <.LBB1_58+0x2c>
    8000c830:	a009                	j	8000c832 <.LBB1_58+0x2c>
    8000c832:	60ba                	ld	ra,392(sp)
    8000c834:	6159                	addi	sp,sp,400
    8000c836:	8082                	ret

000000008000c838 <.LBB1_59>:
            if pipe_guard.write_number == pipe_guard.read_number + PIPE_SIZE {
    8000c838:	00019517          	auipc	a0,0x19
    8000c83c:	2e850513          	addi	a0,a0,744 # 80025b20 <str.0>

000000008000c840 <.LBB1_60>:
    8000c840:	00019617          	auipc	a2,0x19
    8000c844:	37860613          	addi	a2,a2,888 # 80025bb8 <.L__unnamed_8>
    8000c848:	45f1                	li	a1,28
    8000c84a:	00014097          	auipc	ra,0x14
    8000c84e:	480080e7          	jalr	1152(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000c854 <.LBB1_61>:
                if pgt.copy_in(&mut char as *mut u8, addr + i, 1).is_err() {
    8000c854:	00019517          	auipc	a0,0x19
    8000c858:	2cc50513          	addi	a0,a0,716 # 80025b20 <str.0>

000000008000c85c <.LBB1_62>:
    8000c85c:	00019617          	auipc	a2,0x19
    8000c860:	37460613          	addi	a2,a2,884 # 80025bd0 <.L__unnamed_9>
    8000c864:	45f1                	li	a1,28
    8000c866:	00014097          	auipc	ra,0x14
    8000c86a:	464080e7          	jalr	1124(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000c870 <.LBB1_63>:
                pipe_guard.data[write_cursor % PIPE_SIZE] = char;
    8000c870:	00019617          	auipc	a2,0x19
    8000c874:	37860613          	addi	a2,a2,888 # 80025be8 <.L__unnamed_10>
    8000c878:	20000593          	li	a1,512
    8000c87c:	6562                	ld	a0,24(sp)
    8000c87e:	00014097          	auipc	ra,0x14
    8000c882:	478080e7          	jalr	1144(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000c888 <.LBB1_64>:
                i += 1;
    8000c888:	00019517          	auipc	a0,0x19
    8000c88c:	29850513          	addi	a0,a0,664 # 80025b20 <str.0>

000000008000c890 <.LBB1_65>:
    8000c890:	00019617          	auipc	a2,0x19
    8000c894:	37060613          	addi	a2,a2,880 # 80025c00 <.L__unnamed_11>
    8000c898:	45f1                	li	a1,28
    8000c89a:	00014097          	auipc	ra,0x14
    8000c89e:	430080e7          	jalr	1072(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel4misc7str_len17h387993b8bf2b0810E:

000000008000c8a4 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E>:

pub fn str_len(str: *const u8) -> usize {
    8000c8a4:	715d                	addi	sp,sp,-80
    8000c8a6:	e486                	sd	ra,72(sp)
    8000c8a8:	f82a                	sd	a0,48(sp)
    8000c8aa:	4581                	li	a1,0
    let mut i:usize = 0;
    8000c8ac:	f42e                	sd	a1,40(sp)
    loop {
    8000c8ae:	f02a                	sd	a0,32(sp)
    8000c8b0:	a009                	j	8000c8b2 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E+0xe>
       let ptr = (str as usize + i) as *const u8;
    8000c8b2:	7522                	ld	a0,40(sp)
    8000c8b4:	7582                	ld	a1,32(sp)
    8000c8b6:	952e                	add	a0,a0,a1
    8000c8b8:	ec2a                	sd	a0,24(sp)
    8000c8ba:	04b56363          	bltu	a0,a1,8000c900 <.LBB0_9>
    8000c8be:	a009                	j	8000c8c0 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E+0x1c>
    8000c8c0:	6562                	ld	a0,24(sp)
    8000c8c2:	fc2a                	sd	a0,56(sp)
       let c = unsafe {
           read(ptr)
    8000c8c4:	00004097          	auipc	ra,0x4
    8000c8c8:	15c080e7          	jalr	348(ra) # 80010a20 <_ZN4core3ptr4read17h89a5fabfdcdd4445E>
    8000c8cc:	85aa                	mv	a1,a0
    8000c8ce:	04a103a3          	sb	a0,71(sp)
    8000c8d2:	e82e                	sd	a1,16(sp)
    8000c8d4:	a009                	j	8000c8d6 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E+0x32>
       };
       if c != 0 { i += 1; }
    8000c8d6:	6542                	ld	a0,16(sp)
    8000c8d8:	0ff57593          	zext.b	a1,a0
    8000c8dc:	4601                	li	a2,0
    8000c8de:	00c58a63          	beq	a1,a2,8000c8f2 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E+0x4e>
    8000c8e2:	a009                	j	8000c8e4 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E+0x40>
    8000c8e4:	7522                	ld	a0,40(sp)
    8000c8e6:	00150593          	addi	a1,a0,1
    8000c8ea:	e42e                	sd	a1,8(sp)
    8000c8ec:	02a5e863          	bltu	a1,a0,8000c91c <.LBB0_11>
    8000c8f0:	a029                	j	8000c8fa <_ZN6kernel4misc7str_len17h387993b8bf2b0810E+0x56>
       else { break; }
    }
    i
}
    8000c8f2:	7522                	ld	a0,40(sp)
    8000c8f4:	60a6                	ld	ra,72(sp)
    8000c8f6:	6161                	addi	sp,sp,80
    8000c8f8:	8082                	ret
       if c != 0 { i += 1; }
    8000c8fa:	6522                	ld	a0,8(sp)
    8000c8fc:	f42a                	sd	a0,40(sp)
    loop {
    8000c8fe:	bf55                	j	8000c8b2 <_ZN6kernel4misc7str_len17h387993b8bf2b0810E+0xe>

000000008000c900 <.LBB0_9>:
       let ptr = (str as usize + i) as *const u8;
    8000c900:	00019517          	auipc	a0,0x19
    8000c904:	34050513          	addi	a0,a0,832 # 80025c40 <str.0>

000000008000c908 <.LBB0_10>:
    8000c908:	00019617          	auipc	a2,0x19
    8000c90c:	32060613          	addi	a2,a2,800 # 80025c28 <.L__unnamed_1>
    8000c910:	45f1                	li	a1,28
    8000c912:	00014097          	auipc	ra,0x14
    8000c916:	3b8080e7          	jalr	952(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000c91c <.LBB0_11>:
       if c != 0 { i += 1; }
    8000c91c:	00019517          	auipc	a0,0x19
    8000c920:	32450513          	addi	a0,a0,804 # 80025c40 <str.0>

000000008000c924 <.LBB0_12>:
    8000c924:	00019617          	auipc	a2,0x19
    8000c928:	33c60613          	addi	a2,a2,828 # 80025c60 <.L__unnamed_2>
    8000c92c:	45f1                	li	a1,28
    8000c92e:	00014097          	auipc	ra,0x14
    8000c932:	39c080e7          	jalr	924(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E:

000000008000c938 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E>:

/// memory copy, copy memory into other memory. 
pub fn mem_copy(dst: usize, src: usize, len: usize) {
    8000c938:	7171                	addi	sp,sp,-176
    8000c93a:	f506                	sd	ra,168(sp)
    8000c93c:	f8aa                	sd	a0,112(sp)
    8000c93e:	fcae                	sd	a1,120(sp)
    8000c940:	e132                	sd	a2,128(sp)
    8000c942:	4681                	li	a3,0
    unsafe{
        for i in 0..len {
    8000c944:	e0b6                	sd	a3,64(sp)
    8000c946:	e4b2                	sd	a2,72(sp)
    8000c948:	fc2a                	sd	a0,56(sp)
    8000c94a:	8536                	mv	a0,a3
    8000c94c:	f82e                	sd	a1,48(sp)
    8000c94e:	85b2                	mv	a1,a2
    8000c950:	00013097          	auipc	ra,0x13
    8000c954:	15a080e7          	jalr	346(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8000c958:	f42a                	sd	a0,40(sp)
    8000c95a:	f02e                	sd	a1,32(sp)
    8000c95c:	a009                	j	8000c95e <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x26>
    8000c95e:	7522                	ld	a0,40(sp)
    8000c960:	e8aa                	sd	a0,80(sp)
    8000c962:	7582                	ld	a1,32(sp)
    8000c964:	ecae                	sd	a1,88(sp)
    8000c966:	a009                	j	8000c968 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x30>
    8000c968:	0888                	addi	a0,sp,80
    8000c96a:	00013097          	auipc	ra,0x13
    8000c96e:	0d2080e7          	jalr	210(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000c972:	f0aa                	sd	a0,96(sp)
    8000c974:	f4ae                	sd	a1,104(sp)
    8000c976:	a009                	j	8000c978 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x40>
    8000c978:	7506                	ld	a0,96(sp)
    8000c97a:	4581                	li	a1,0
    8000c97c:	00b50463          	beq	a0,a1,8000c984 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x4c>
    8000c980:	a009                	j	8000c982 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x4a>
    8000c982:	a029                	j	8000c98c <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x54>
            let val = read((src + i) as *const u8);
            write((dst + i) as *mut u8, val);
        }
    }
}
    8000c984:	70aa                	ld	ra,168(sp)
    8000c986:	614d                	addi	sp,sp,176
    8000c988:	8082                	ret
        for i in 0..len {
    8000c98a:	0000                	unimp
    8000c98c:	7526                	ld	a0,104(sp)
    8000c98e:	e52a                	sd	a0,136(sp)
    8000c990:	e92a                	sd	a0,144(sp)
    8000c992:	ed2a                	sd	a0,152(sp)
            let val = read((src + i) as *const u8);
    8000c994:	75c2                	ld	a1,48(sp)
    8000c996:	00a58633          	add	a2,a1,a0
    8000c99a:	ec2a                	sd	a0,24(sp)
    8000c99c:	e832                	sd	a2,16(sp)
    8000c99e:	02b66d63          	bltu	a2,a1,8000c9d8 <.LBB1_14>
    8000c9a2:	a009                	j	8000c9a4 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x6c>
    8000c9a4:	6542                	ld	a0,16(sp)
    8000c9a6:	00004097          	auipc	ra,0x4
    8000c9aa:	07a080e7          	jalr	122(ra) # 80010a20 <_ZN4core3ptr4read17h89a5fabfdcdd4445E>
    8000c9ae:	85aa                	mv	a1,a0
    8000c9b0:	0aa103a3          	sb	a0,167(sp)
    8000c9b4:	e42e                	sd	a1,8(sp)
    8000c9b6:	a009                	j	8000c9b8 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x80>
            write((dst + i) as *mut u8, val);
    8000c9b8:	7562                	ld	a0,56(sp)
    8000c9ba:	65e2                	ld	a1,24(sp)
    8000c9bc:	00b50633          	add	a2,a0,a1
    8000c9c0:	e032                	sd	a2,0(sp)
    8000c9c2:	02a66963          	bltu	a2,a0,8000c9f4 <.LBB1_16>
    8000c9c6:	a009                	j	8000c9c8 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x90>
    8000c9c8:	6502                	ld	a0,0(sp)
    8000c9ca:	65a2                	ld	a1,8(sp)
    8000c9cc:	00004097          	auipc	ra,0x4
    8000c9d0:	2ba080e7          	jalr	698(ra) # 80010c86 <_ZN4core3ptr5write17h7121962e424d368bE>
    8000c9d4:	a009                	j	8000c9d6 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x9e>
        for i in 0..len {
    8000c9d6:	bf49                	j	8000c968 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E+0x30>

000000008000c9d8 <.LBB1_14>:
            let val = read((src + i) as *const u8);
    8000c9d8:	00019517          	auipc	a0,0x19
    8000c9dc:	26850513          	addi	a0,a0,616 # 80025c40 <str.0>

000000008000c9e0 <.LBB1_15>:
    8000c9e0:	00019617          	auipc	a2,0x19
    8000c9e4:	29860613          	addi	a2,a2,664 # 80025c78 <.L__unnamed_3>
    8000c9e8:	45f1                	li	a1,28
    8000c9ea:	00014097          	auipc	ra,0x14
    8000c9ee:	2e0080e7          	jalr	736(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000c9f4 <.LBB1_16>:
            write((dst + i) as *mut u8, val);
    8000c9f4:	00019517          	auipc	a0,0x19
    8000c9f8:	24c50513          	addi	a0,a0,588 # 80025c40 <str.0>

000000008000c9fc <.LBB1_17>:
    8000c9fc:	00019617          	auipc	a2,0x19
    8000ca00:	29460613          	addi	a2,a2,660 # 80025c90 <.L__unnamed_4>
    8000ca04:	45f1                	li	a1,28
    8000ca06:	00014097          	auipc	ra,0x14
    8000ca0a:	2c4080e7          	jalr	708(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE:

000000008000ca10 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE>:
    /// assert_eq!(Ok(2).unwrap_or_else(count), 2);
    /// assert_eq!(Err("foo").unwrap_or_else(count), 3);
    /// ```
    #[inline]
    #[stable(feature = "rust1", since = "1.0.0")]
    pub fn unwrap_or_else<F: FnOnce(E) -> T>(self, op: F) -> T {
    8000ca10:	7139                	addi	sp,sp,-64
    8000ca12:	fc06                	sd	ra,56(sp)
    8000ca14:	e42a                	sd	a0,8(sp)
    8000ca16:	f02e                	sd	a1,32(sp)
    8000ca18:	4605                	li	a2,1
        match self {
            Ok(t) => t,
    8000ca1a:	00c10fa3          	sb	a2,31(sp)
    8000ca1e:	00153613          	seqz	a2,a0
    8000ca22:	4681                	li	a3,0
    8000ca24:	e02e                	sd	a1,0(sp)
    8000ca26:	00d51e63          	bne	a0,a3,8000ca42 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x32>
    8000ca2a:	a009                	j	8000ca2c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x1c>
    8000ca2c:	4501                	li	a0,0
            Err(e) => op(e),
    8000ca2e:	00a10fa3          	sb	a0,31(sp)
    8000ca32:	6502                	ld	a0,0(sp)
    8000ca34:	00009097          	auipc	ra,0x9
    8000ca38:	da2080e7          	jalr	-606(ra) # 800157d6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h1f4a7daa74a2f080E>
    8000ca3c:	e82a                	sd	a0,16(sp)
    8000ca3e:	a031                	j	8000ca4a <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x3a>
        match self {
    8000ca40:	0000                	unimp
            Ok(t) => t,
    8000ca42:	6522                	ld	a0,8(sp)
    8000ca44:	f82a                	sd	a0,48(sp)
    8000ca46:	e82a                	sd	a0,16(sp)
        match self {
    8000ca48:	a011                	j	8000ca4c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x3c>
    8000ca4a:	a009                	j	8000ca4c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x3c>
        }
    }
    8000ca4c:	01f14503          	lbu	a0,31(sp)
    8000ca50:	8905                	andi	a0,a0,1
    8000ca52:	e511                	bnez	a0,8000ca5e <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x4e>
    8000ca54:	a009                	j	8000ca56 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x46>
    8000ca56:	6542                	ld	a0,16(sp)
    8000ca58:	70e2                	ld	ra,56(sp)
    8000ca5a:	6121                	addi	sp,sp,64
    8000ca5c:	8082                	ret
    8000ca5e:	bfe5                	j	8000ca56 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE+0x46>

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E:

000000008000ca60 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E>:
    pub fn unwrap_or_else<F: FnOnce(E) -> T>(self, op: F) -> T {
    8000ca60:	7139                	addi	sp,sp,-64
    8000ca62:	fc06                	sd	ra,56(sp)
    8000ca64:	e42a                	sd	a0,8(sp)
    8000ca66:	f02e                	sd	a1,32(sp)
    8000ca68:	4605                	li	a2,1
            Ok(t) => t,
    8000ca6a:	00c10fa3          	sb	a2,31(sp)
    8000ca6e:	00153613          	seqz	a2,a0
    8000ca72:	4681                	li	a3,0
    8000ca74:	e02e                	sd	a1,0(sp)
    8000ca76:	00d51e63          	bne	a0,a3,8000ca92 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x32>
    8000ca7a:	a009                	j	8000ca7c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x1c>
    8000ca7c:	4501                	li	a0,0
            Err(e) => op(e),
    8000ca7e:	00a10fa3          	sb	a0,31(sp)
    8000ca82:	6502                	ld	a0,0(sp)
    8000ca84:	00009097          	auipc	ra,0x9
    8000ca88:	d6a080e7          	jalr	-662(ra) # 800157ee <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h26b91424e8191b6eE>
    8000ca8c:	e82a                	sd	a0,16(sp)
    8000ca8e:	a031                	j	8000ca9a <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x3a>
        match self {
    8000ca90:	0000                	unimp
            Ok(t) => t,
    8000ca92:	6522                	ld	a0,8(sp)
    8000ca94:	f82a                	sd	a0,48(sp)
    8000ca96:	e82a                	sd	a0,16(sp)
        match self {
    8000ca98:	a011                	j	8000ca9c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x3c>
    8000ca9a:	a009                	j	8000ca9c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x3c>
    }
    8000ca9c:	01f14503          	lbu	a0,31(sp)
    8000caa0:	8905                	andi	a0,a0,1
    8000caa2:	e511                	bnez	a0,8000caae <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x4e>
    8000caa4:	a009                	j	8000caa6 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x46>
    8000caa6:	6542                	ld	a0,16(sp)
    8000caa8:	70e2                	ld	ra,56(sp)
    8000caaa:	6121                	addi	sp,sp,64
    8000caac:	8082                	ret
    8000caae:	bfe5                	j	8000caa6 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E+0x46>

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E:

000000008000cab0 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E>:
    pub fn unwrap_or_else<F: FnOnce(E) -> T>(self, op: F) -> T {
    8000cab0:	7139                	addi	sp,sp,-64
    8000cab2:	fc06                	sd	ra,56(sp)
    8000cab4:	e42a                	sd	a0,8(sp)
    8000cab6:	f02e                	sd	a1,32(sp)
    8000cab8:	4605                	li	a2,1
            Ok(t) => t,
    8000caba:	00c10fa3          	sb	a2,31(sp)
    8000cabe:	00153613          	seqz	a2,a0
    8000cac2:	4681                	li	a3,0
    8000cac4:	e02e                	sd	a1,0(sp)
    8000cac6:	00d51e63          	bne	a0,a3,8000cae2 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x32>
    8000caca:	a009                	j	8000cacc <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x1c>
    8000cacc:	4501                	li	a0,0
            Err(e) => op(e),
    8000cace:	00a10fa3          	sb	a0,31(sp)
    8000cad2:	6502                	ld	a0,0(sp)
    8000cad4:	00009097          	auipc	ra,0x9
    8000cad8:	d32080e7          	jalr	-718(ra) # 80015806 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17heb429d49ac53f6cbE>
    8000cadc:	e82a                	sd	a0,16(sp)
    8000cade:	a031                	j	8000caea <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x3a>
        match self {
    8000cae0:	0000                	unimp
            Ok(t) => t,
    8000cae2:	6522                	ld	a0,8(sp)
    8000cae4:	f82a                	sd	a0,48(sp)
    8000cae6:	e82a                	sd	a0,16(sp)
        match self {
    8000cae8:	a011                	j	8000caec <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x3c>
    8000caea:	a009                	j	8000caec <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x3c>
    }
    8000caec:	01f14503          	lbu	a0,31(sp)
    8000caf0:	8905                	andi	a0,a0,1
    8000caf2:	e511                	bnez	a0,8000cafe <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x4e>
    8000caf4:	a009                	j	8000caf6 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x46>
    8000caf6:	6542                	ld	a0,16(sp)
    8000caf8:	70e2                	ld	ra,56(sp)
    8000cafa:	6121                	addi	sp,sp,64
    8000cafc:	8082                	ret
    8000cafe:	bfe5                	j	8000caf6 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E+0x46>

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E:

000000008000cb00 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E>:
    pub fn unwrap_or_else<F: FnOnce(E) -> T>(self, op: F) -> T {
    8000cb00:	7139                	addi	sp,sp,-64
    8000cb02:	fc06                	sd	ra,56(sp)
    8000cb04:	e42a                	sd	a0,8(sp)
    8000cb06:	f02e                	sd	a1,32(sp)
    8000cb08:	4605                	li	a2,1
            Ok(t) => t,
    8000cb0a:	00c10fa3          	sb	a2,31(sp)
    8000cb0e:	00153613          	seqz	a2,a0
    8000cb12:	4681                	li	a3,0
    8000cb14:	e02e                	sd	a1,0(sp)
    8000cb16:	00d51e63          	bne	a0,a3,8000cb32 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x32>
    8000cb1a:	a009                	j	8000cb1c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x1c>
    8000cb1c:	4501                	li	a0,0
            Err(e) => op(e),
    8000cb1e:	00a10fa3          	sb	a0,31(sp)
    8000cb22:	6502                	ld	a0,0(sp)
    8000cb24:	00009097          	auipc	ra,0x9
    8000cb28:	c9a080e7          	jalr	-870(ra) # 800157be <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h0ff512ccf5d61bf0E>
    8000cb2c:	e82a                	sd	a0,16(sp)
    8000cb2e:	a031                	j	8000cb3a <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x3a>
        match self {
    8000cb30:	0000                	unimp
            Ok(t) => t,
    8000cb32:	6522                	ld	a0,8(sp)
    8000cb34:	f82a                	sd	a0,48(sp)
    8000cb36:	e82a                	sd	a0,16(sp)
        match self {
    8000cb38:	a011                	j	8000cb3c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x3c>
    8000cb3a:	a009                	j	8000cb3c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x3c>
    }
    8000cb3c:	01f14503          	lbu	a0,31(sp)
    8000cb40:	8905                	andi	a0,a0,1
    8000cb42:	e511                	bnez	a0,8000cb4e <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x4e>
    8000cb44:	a009                	j	8000cb46 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x46>
    8000cb46:	6542                	ld	a0,16(sp)
    8000cb48:	70e2                	ld	ra,56(sp)
    8000cb4a:	6121                	addi	sp,sp,64
    8000cb4c:	8082                	ret
    8000cb4e:	bfe5                	j	8000cb46 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E+0x46>

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E:

000000008000cb50 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E>:
    pub fn unwrap_or_else<F: FnOnce(E) -> T>(self, op: F) -> T {
    8000cb50:	7139                	addi	sp,sp,-64
    8000cb52:	fc06                	sd	ra,56(sp)
    8000cb54:	e42a                	sd	a0,8(sp)
    8000cb56:	f02e                	sd	a1,32(sp)
    8000cb58:	4605                	li	a2,1
            Ok(t) => t,
    8000cb5a:	00c10fa3          	sb	a2,31(sp)
    8000cb5e:	00153613          	seqz	a2,a0
    8000cb62:	4681                	li	a3,0
    8000cb64:	e02e                	sd	a1,0(sp)
    8000cb66:	00d51e63          	bne	a0,a3,8000cb82 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x32>
    8000cb6a:	a009                	j	8000cb6c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x1c>
    8000cb6c:	4501                	li	a0,0
            Err(e) => op(e),
    8000cb6e:	00a10fa3          	sb	a0,31(sp)
    8000cb72:	6502                	ld	a0,0(sp)
    8000cb74:	00009097          	auipc	ra,0x9
    8000cb78:	caa080e7          	jalr	-854(ra) # 8001581e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17heeb6330ea6c582bbE>
    8000cb7c:	e82a                	sd	a0,16(sp)
    8000cb7e:	a031                	j	8000cb8a <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x3a>
        match self {
    8000cb80:	0000                	unimp
            Ok(t) => t,
    8000cb82:	6522                	ld	a0,8(sp)
    8000cb84:	f82a                	sd	a0,48(sp)
    8000cb86:	e82a                	sd	a0,16(sp)
        match self {
    8000cb88:	a011                	j	8000cb8c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x3c>
    8000cb8a:	a009                	j	8000cb8c <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x3c>
    }
    8000cb8c:	01f14503          	lbu	a0,31(sp)
    8000cb90:	8905                	andi	a0,a0,1
    8000cb92:	e511                	bnez	a0,8000cb9e <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x4e>
    8000cb94:	a009                	j	8000cb96 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x46>
    8000cb96:	6542                	ld	a0,16(sp)
    8000cb98:	70e2                	ld	ra,56(sp)
    8000cb9a:	6121                	addi	sp,sp,64
    8000cb9c:	8082                	ret
    8000cb9e:	bfe5                	j	8000cb96 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E+0x46>

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h49a128428b9b802bE:

000000008000cba0 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h49a128428b9b802bE>:
    pub const fn is_ok(&self) -> bool {
    8000cba0:	1141                	addi	sp,sp,-16
    8000cba2:	e42a                	sd	a0,8(sp)
        matches!(*self, Ok(_))
    8000cba4:	00054503          	lbu	a0,0(a0)
    8000cba8:	8905                	andi	a0,a0,1
    8000cbaa:	4581                	li	a1,0
    8000cbac:	00b50763          	beq	a0,a1,8000cbba <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h49a128428b9b802bE+0x1a>
    8000cbb0:	a009                	j	8000cbb2 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h49a128428b9b802bE+0x12>
    8000cbb2:	4501                	li	a0,0
    8000cbb4:	00a103a3          	sb	a0,7(sp)
    8000cbb8:	a029                	j	8000cbc2 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h49a128428b9b802bE+0x22>
    8000cbba:	4505                	li	a0,1
    8000cbbc:	00a103a3          	sb	a0,7(sp)
    8000cbc0:	a009                	j	8000cbc2 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h49a128428b9b802bE+0x22>
    }
    8000cbc2:	00714503          	lbu	a0,7(sp)
    8000cbc6:	0141                	addi	sp,sp,16
    8000cbc8:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE:

000000008000cbca <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE>:
    pub const fn is_ok(&self) -> bool {
    8000cbca:	1141                	addi	sp,sp,-16
    8000cbcc:	e42a                	sd	a0,8(sp)
        matches!(*self, Ok(_))
    8000cbce:	6108                	ld	a0,0(a0)
    8000cbd0:	4581                	li	a1,0
    8000cbd2:	00b50763          	beq	a0,a1,8000cbe0 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE+0x16>
    8000cbd6:	a009                	j	8000cbd8 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE+0xe>
    8000cbd8:	4501                	li	a0,0
    8000cbda:	00a103a3          	sb	a0,7(sp)
    8000cbde:	a029                	j	8000cbe8 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE+0x1e>
    8000cbe0:	4505                	li	a0,1
    8000cbe2:	00a103a3          	sb	a0,7(sp)
    8000cbe6:	a009                	j	8000cbe8 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE+0x1e>
    }
    8000cbe8:	00714503          	lbu	a0,7(sp)
    8000cbec:	0141                	addi	sp,sp,16
    8000cbee:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h521ec20a318e63beE:

000000008000cbf0 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h521ec20a318e63beE>:
    /// x.expect("Testing expect"); // panics with `Testing expect: emergency failure`
    /// ```
    #[inline]
    #[track_caller]
    #[stable(feature = "result_expect", since = "1.4.0")]
    pub fn expect(self, msg: &str) -> T {
    8000cbf0:	715d                	addi	sp,sp,-80
    8000cbf2:	fc2e                	sd	a1,56(sp)
    8000cbf4:	e0b2                	sd	a2,64(sp)
        match self {
            Ok(t) => t,
    8000cbf6:	6118                	ld	a4,0(a0)
    8000cbf8:	4781                	li	a5,0
    8000cbfa:	f036                	sd	a3,32(sp)
    8000cbfc:	ec32                	sd	a2,24(sp)
    8000cbfe:	e82e                	sd	a1,16(sp)
    8000cc00:	e42a                	sd	a0,8(sp)
    8000cc02:	02f70663          	beq	a4,a5,8000cc2e <.LBB7_5+0x1c>
    8000cc06:	a009                	j	8000cc08 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h521ec20a318e63beE+0x18>
            Err(e) => unwrap_failed(msg, &e),
    8000cc08:	6522                	ld	a0,8(sp)
    8000cc0a:	650c                	ld	a1,8(a0)
    8000cc0c:	6910                	ld	a2,16(a0)
    8000cc0e:	f42e                	sd	a1,40(sp)
    8000cc10:	f832                	sd	a2,48(sp)

000000008000cc12 <.LBB7_5>:
    8000cc12:	00019697          	auipc	a3,0x19
    8000cc16:	09668693          	addi	a3,a3,150 # 80025ca8 <.L__unnamed_1>
    8000cc1a:	1030                	addi	a2,sp,40
    8000cc1c:	6542                	ld	a0,16(sp)
    8000cc1e:	65e2                	ld	a1,24(sp)
    8000cc20:	7702                	ld	a4,32(sp)
    8000cc22:	00014097          	auipc	ra,0x14
    8000cc26:	f60080e7          	jalr	-160(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000cc2a:	0000                	unimp
        match self {
    8000cc2c:	0000                	unimp
            Ok(t) => t,
    8000cc2e:	6522                	ld	a0,8(sp)
    8000cc30:	650c                	ld	a1,8(a0)
    8000cc32:	e4ae                	sd	a1,72(sp)
        }
    }
    8000cc34:	852e                	mv	a0,a1
    8000cc36:	6161                	addi	sp,sp,80
    8000cc38:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h76fa70209070b620E:

000000008000cc3a <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76fa70209070b620E>:
    pub fn expect(self, msg: &str) -> T {
    8000cc3a:	715d                	addi	sp,sp,-80
    8000cc3c:	ec2a                	sd	a0,24(sp)
    8000cc3e:	f02e                	sd	a1,32(sp)
    8000cc40:	e0b2                	sd	a2,64(sp)
    8000cc42:	e4b6                	sd	a3,72(sp)
            Ok(t) => t,
    8000cc44:	00a035b3          	snez	a1,a0
    8000cc48:	4781                	li	a5,0
    8000cc4a:	e83a                	sd	a4,16(sp)
    8000cc4c:	e436                	sd	a3,8(sp)
    8000cc4e:	e032                	sd	a2,0(sp)
    8000cc50:	02f50563          	beq	a0,a5,8000cc7a <.LBB8_5+0x1c>
    8000cc54:	a009                	j	8000cc56 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76fa70209070b620E+0x1c>
            Err(e) => unwrap_failed(msg, &e),
    8000cc56:	6562                	ld	a0,24(sp)
    8000cc58:	7582                	ld	a1,32(sp)
    8000cc5a:	f42a                	sd	a0,40(sp)
    8000cc5c:	f82e                	sd	a1,48(sp)

000000008000cc5e <.LBB8_5>:
    8000cc5e:	00019697          	auipc	a3,0x19
    8000cc62:	04a68693          	addi	a3,a3,74 # 80025ca8 <.L__unnamed_1>
    8000cc66:	1030                	addi	a2,sp,40
    8000cc68:	6502                	ld	a0,0(sp)
    8000cc6a:	65a2                	ld	a1,8(sp)
    8000cc6c:	6742                	ld	a4,16(sp)
    8000cc6e:	00014097          	auipc	ra,0x14
    8000cc72:	f14080e7          	jalr	-236(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000cc76:	0000                	unimp
        match self {
    8000cc78:	0000                	unimp
    }
    8000cc7a:	6161                	addi	sp,sp,80
    8000cc7c:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE:

000000008000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>:
    pub const fn is_err(&self) -> bool {
    8000cc7e:	1101                	addi	sp,sp,-32
    8000cc80:	ec06                	sd	ra,24(sp)
    8000cc82:	e82a                	sd	a0,16(sp)
        !self.is_ok()
    8000cc84:	00000097          	auipc	ra,0x0
    8000cc88:	f46080e7          	jalr	-186(ra) # 8000cbca <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h880fac110903a38eE>
    8000cc8c:	e42a                	sd	a0,8(sp)
    8000cc8e:	a009                	j	8000cc90 <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE+0x12>
    8000cc90:	6522                	ld	a0,8(sp)
    8000cc92:	00154513          	xori	a0,a0,1
    }
    8000cc96:	60e2                	ld	ra,24(sp)
    8000cc98:	6105                	addi	sp,sp,32
    8000cc9a:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h00a6f548c55f29e9E:

000000008000cc9c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h00a6f548c55f29e9E>:
    /// x.unwrap(); // panics with `emergency failure`
    /// ```
    #[inline]
    #[track_caller]
    #[stable(feature = "rust1", since = "1.0.0")]
    pub fn unwrap(self) -> T {
    8000cc9c:	7179                	addi	sp,sp,-48
        match self {
            Ok(t) => t,
    8000cc9e:	6110                	ld	a2,0(a0)
    8000cca0:	4681                	li	a3,0
    8000cca2:	e42e                	sd	a1,8(sp)
    8000cca4:	e02a                	sd	a0,0(sp)
    8000cca6:	02d60a63          	beq	a2,a3,8000ccda <.LBB10_6+0x1c>
    8000ccaa:	a009                	j	8000ccac <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h00a6f548c55f29e9E+0x10>
            Err(e) => unwrap_failed("called `Result::unwrap()` on an `Err` value", &e),
    8000ccac:	6502                	ld	a0,0(sp)
    8000ccae:	690c                	ld	a1,16(a0)
    8000ccb0:	ec2e                	sd	a1,24(sp)
    8000ccb2:	650c                	ld	a1,8(a0)
    8000ccb4:	e82e                	sd	a1,16(sp)

000000008000ccb6 <.LBB10_5>:
    8000ccb6:	00019517          	auipc	a0,0x19
    8000ccba:	01250513          	addi	a0,a0,18 # 80025cc8 <.L__unnamed_7>

000000008000ccbe <.LBB10_6>:
    8000ccbe:	00019697          	auipc	a3,0x19
    8000ccc2:	03a68693          	addi	a3,a3,58 # 80025cf8 <.L__unnamed_2>
    8000ccc6:	02b00593          	li	a1,43
    8000ccca:	0810                	addi	a2,sp,16
    8000cccc:	6722                	ld	a4,8(sp)
    8000ccce:	00014097          	auipc	ra,0x14
    8000ccd2:	eb4080e7          	jalr	-332(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000ccd6:	0000                	unimp
        match self {
    8000ccd8:	0000                	unimp
            Ok(t) => t,
    8000ccda:	6502                	ld	a0,0(sp)
    8000ccdc:	650c                	ld	a1,8(a0)
    8000ccde:	6910                	ld	a2,16(a0)
    8000cce0:	f02e                	sd	a1,32(sp)
    8000cce2:	f432                	sd	a2,40(sp)
        }
    }
    8000cce4:	852e                	mv	a0,a1
    8000cce6:	85b2                	mv	a1,a2
    8000cce8:	6145                	addi	sp,sp,48
    8000ccea:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h33f778f1365d54f3E:

000000008000ccec <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h33f778f1365d54f3E>:
    pub fn unwrap(self) -> T {
    8000ccec:	1101                	addi	sp,sp,-32
    8000ccee:	86ae                	mv	a3,a1
    8000ccf0:	872a                	mv	a4,a0
    8000ccf2:	c82a                	sw	a0,16(sp)
    8000ccf4:	ca2e                	sw	a1,20(sp)
            Ok(t) => t,
    8000ccf6:	1502                	slli	a0,a0,0x20
    8000ccf8:	9101                	srli	a0,a0,0x20
    8000ccfa:	4581                	li	a1,0
    8000ccfc:	e432                	sd	a2,8(sp)
    8000ccfe:	02b50563          	beq	a0,a1,8000cd28 <.LBB11_6+0x1c>
    8000cd02:	a009                	j	8000cd04 <.LBB11_5>

000000008000cd04 <.LBB11_5>:
            Err(e) => unwrap_failed("called `Result::unwrap()` on an `Err` value", &e),
    8000cd04:	00019517          	auipc	a0,0x19
    8000cd08:	fc450513          	addi	a0,a0,-60 # 80025cc8 <.L__unnamed_7>

000000008000cd0c <.LBB11_6>:
    8000cd0c:	00019697          	auipc	a3,0x19
    8000cd10:	00c68693          	addi	a3,a3,12 # 80025d18 <.L__unnamed_3>
    8000cd14:	02b00593          	li	a1,43
    8000cd18:	0830                	addi	a2,sp,24
    8000cd1a:	6722                	ld	a4,8(sp)
    8000cd1c:	00014097          	auipc	ra,0x14
    8000cd20:	e66080e7          	jalr	-410(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000cd24:	0000                	unimp
        match self {
    8000cd26:	0000                	unimp
            Ok(t) => t,
    8000cd28:	4552                	lw	a0,20(sp)
    8000cd2a:	ce2a                	sw	a0,28(sp)
    }
    8000cd2c:	6105                	addi	sp,sp,32
    8000cd2e:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7313a9aabc67527eE:

000000008000cd30 <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7313a9aabc67527eE>:
    pub fn unwrap(self) -> T {
    8000cd30:	1101                	addi	sp,sp,-32
    8000cd32:	862a                	mv	a2,a0
    8000cd34:	00a107a3          	sb	a0,15(sp)
            Ok(t) => t,
    8000cd38:	86aa                	mv	a3,a0
    8000cd3a:	4701                	li	a4,0
    8000cd3c:	e02e                	sd	a1,0(sp)
    8000cd3e:	02e50563          	beq	a0,a4,8000cd68 <.LBB12_6+0x1c>
    8000cd42:	a009                	j	8000cd44 <.LBB12_5>

000000008000cd44 <.LBB12_5>:
            Err(e) => unwrap_failed("called `Result::unwrap()` on an `Err` value", &e),
    8000cd44:	00019517          	auipc	a0,0x19
    8000cd48:	f8450513          	addi	a0,a0,-124 # 80025cc8 <.L__unnamed_7>

000000008000cd4c <.LBB12_6>:
    8000cd4c:	00019697          	auipc	a3,0x19
    8000cd50:	fec68693          	addi	a3,a3,-20 # 80025d38 <.L__unnamed_4>
    8000cd54:	02b00593          	li	a1,43
    8000cd58:	0810                	addi	a2,sp,16
    8000cd5a:	6702                	ld	a4,0(sp)
    8000cd5c:	00014097          	auipc	ra,0x14
    8000cd60:	e26080e7          	jalr	-474(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000cd64:	0000                	unimp
        match self {
    8000cd66:	0000                	unimp
    }
    8000cd68:	6105                	addi	sp,sp,32
    8000cd6a:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbdb77aaba0d52dc4E:

000000008000cd6c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbdb77aaba0d52dc4E>:
    pub fn unwrap(self) -> T {
    8000cd6c:	1101                	addi	sp,sp,-32
    8000cd6e:	86ae                	mv	a3,a1
    8000cd70:	872a                	mv	a4,a0
    8000cd72:	00a11823          	sh	a0,16(sp)
    8000cd76:	00b11923          	sh	a1,18(sp)
    8000cd7a:	65c1                	lui	a1,0x10
    8000cd7c:	35fd                	addiw	a1,a1,-1
            Ok(t) => t,
    8000cd7e:	8d6d                	and	a0,a0,a1
    8000cd80:	4581                	li	a1,0
    8000cd82:	e432                	sd	a2,8(sp)
    8000cd84:	02b50563          	beq	a0,a1,8000cdae <.LBB13_6+0x1c>
    8000cd88:	a009                	j	8000cd8a <.LBB13_5>

000000008000cd8a <.LBB13_5>:
            Err(e) => unwrap_failed("called `Result::unwrap()` on an `Err` value", &e),
    8000cd8a:	00019517          	auipc	a0,0x19
    8000cd8e:	f3e50513          	addi	a0,a0,-194 # 80025cc8 <.L__unnamed_7>

000000008000cd92 <.LBB13_6>:
    8000cd92:	00019697          	auipc	a3,0x19
    8000cd96:	f8668693          	addi	a3,a3,-122 # 80025d18 <.L__unnamed_3>
    8000cd9a:	02b00593          	li	a1,43
    8000cd9e:	0830                	addi	a2,sp,24
    8000cda0:	6722                	ld	a4,8(sp)
    8000cda2:	00014097          	auipc	ra,0x14
    8000cda6:	de0080e7          	jalr	-544(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000cdaa:	0000                	unimp
        match self {
    8000cdac:	0000                	unimp
            Ok(t) => t,
    8000cdae:	01211503          	lh	a0,18(sp)
    8000cdb2:	00a11f23          	sh	a0,30(sp)
    }
    8000cdb6:	6105                	addi	sp,sp,32
    8000cdb8:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd933c09fc41d7d6eE:

000000008000cdba <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd933c09fc41d7d6eE>:
    pub fn unwrap(self) -> T {
    8000cdba:	7179                	addi	sp,sp,-48
    8000cdbc:	e42a                	sd	a0,8(sp)
    8000cdbe:	e82e                	sd	a1,16(sp)
            Ok(t) => t,
    8000cdc0:	0015b513          	seqz	a0,a1
    8000cdc4:	4681                	li	a3,0
    8000cdc6:	e032                	sd	a2,0(sp)
    8000cdc8:	02d59563          	bne	a1,a3,8000cdf2 <.LBB14_6+0x1c>
    8000cdcc:	a009                	j	8000cdce <.LBB14_5>

000000008000cdce <.LBB14_5>:
            Err(e) => unwrap_failed("called `Result::unwrap()` on an `Err` value", &e),
    8000cdce:	00019517          	auipc	a0,0x19
    8000cdd2:	efa50513          	addi	a0,a0,-262 # 80025cc8 <.L__unnamed_7>

000000008000cdd6 <.LBB14_6>:
    8000cdd6:	00019697          	auipc	a3,0x19
    8000cdda:	f8268693          	addi	a3,a3,-126 # 80025d58 <.L__unnamed_5>
    8000cdde:	02b00593          	li	a1,43
    8000cde2:	0830                	addi	a2,sp,24
    8000cde4:	6702                	ld	a4,0(sp)
    8000cde6:	00014097          	auipc	ra,0x14
    8000cdea:	d9c080e7          	jalr	-612(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000cdee:	0000                	unimp
        match self {
    8000cdf0:	0000                	unimp
            Ok(t) => t,
    8000cdf2:	6522                	ld	a0,8(sp)
    8000cdf4:	65c2                	ld	a1,16(sp)
    8000cdf6:	f02a                	sd	a0,32(sp)
    8000cdf8:	f42e                	sd	a1,40(sp)
    }
    8000cdfa:	6145                	addi	sp,sp,48
    8000cdfc:	8082                	ret

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he6f48d17133dfdacE:

000000008000cdfe <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he6f48d17133dfdacE>:
    pub fn unwrap(self) -> T {
    8000cdfe:	1101                	addi	sp,sp,-32
    8000ce00:	862a                	mv	a2,a0
    8000ce02:	00a107a3          	sb	a0,15(sp)
            Ok(t) => t,
    8000ce06:	86aa                	mv	a3,a0
    8000ce08:	4701                	li	a4,0
    8000ce0a:	e02e                	sd	a1,0(sp)
    8000ce0c:	02e50563          	beq	a0,a4,8000ce36 <.LBB15_6+0x1c>
    8000ce10:	a009                	j	8000ce12 <.LBB15_5>

000000008000ce12 <.LBB15_5>:
            Err(e) => unwrap_failed("called `Result::unwrap()` on an `Err` value", &e),
    8000ce12:	00019517          	auipc	a0,0x19
    8000ce16:	eb650513          	addi	a0,a0,-330 # 80025cc8 <.L__unnamed_7>

000000008000ce1a <.LBB15_6>:
    8000ce1a:	00019697          	auipc	a3,0x19
    8000ce1e:	f5e68693          	addi	a3,a3,-162 # 80025d78 <.L__unnamed_6>
    8000ce22:	02b00593          	li	a1,43
    8000ce26:	0810                	addi	a2,sp,16
    8000ce28:	6702                	ld	a4,0(sp)
    8000ce2a:	00014097          	auipc	ra,0x14
    8000ce2e:	d58080e7          	jalr	-680(ra) # 80020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>
    8000ce32:	0000                	unimp
        match self {
    8000ce34:	0000                	unimp
    }
    8000ce36:	6105                	addi	sp,sp,32
    8000ce38:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h0d691c0acdd0ed17E:

000000008000ce3a <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h0d691c0acdd0ed17E>:
    fn from_ok(v: T) -> Self {
        Ok(v)
    }

    #[inline]
    fn from_error(v: E) -> Self {
    8000ce3a:	1101                	addi	sp,sp,-32
    8000ce3c:	4501                	li	a0,0
        Err(v)
    8000ce3e:	e42a                	sd	a0,8(sp)
    }
    8000ce40:	65c2                	ld	a1,16(sp)
    8000ce42:	6105                	addi	sp,sp,32
    8000ce44:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h175389a2c1795f33E:

000000008000ce46 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h175389a2c1795f33E>:
    fn from_error(v: E) -> Self {
    8000ce46:	1101                	addi	sp,sp,-32
    8000ce48:	4505                	li	a0,1
        Err(v)
    8000ce4a:	e42a                	sd	a0,8(sp)
    }
    8000ce4c:	65c2                	ld	a1,16(sp)
    8000ce4e:	6105                	addi	sp,sp,32
    8000ce50:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h358646dce9bdcb30E:

000000008000ce52 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h358646dce9bdcb30E>:
    fn from_error(v: E) -> Self {
    8000ce52:	1141                	addi	sp,sp,-16
    8000ce54:	4501                	li	a0,0
        Err(v)
    8000ce56:	e02a                	sd	a0,0(sp)
    }
    8000ce58:	0141                	addi	sp,sp,16
    8000ce5a:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h3fe6642e3386bac9E:

000000008000ce5c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h3fe6642e3386bac9E>:
    fn from_error(v: E) -> Self {
    8000ce5c:	1141                	addi	sp,sp,-16
    8000ce5e:	4501                	li	a0,0
        Err(v)
    8000ce60:	e02a                	sd	a0,0(sp)
    }
    8000ce62:	0141                	addi	sp,sp,16
    8000ce64:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h400983070b61e14bE:

000000008000ce66 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h400983070b61e14bE>:
    fn from_error(v: E) -> Self {
    8000ce66:	1101                	addi	sp,sp,-32
    8000ce68:	4501                	li	a0,0
        Err(v)
    8000ce6a:	e82a                	sd	a0,16(sp)
    }
    8000ce6c:	65a2                	ld	a1,8(sp)
    8000ce6e:	e02a                	sd	a0,0(sp)
    8000ce70:	852e                	mv	a0,a1
    8000ce72:	6582                	ld	a1,0(sp)
    8000ce74:	6105                	addi	sp,sp,32
    8000ce76:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE:

000000008000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>:
    fn from_error(v: E) -> Self {
    8000ce78:	1141                	addi	sp,sp,-16
    8000ce7a:	e02e                	sd	a1,0(sp)
    8000ce7c:	e432                	sd	a2,8(sp)
        Err(v)
    8000ce7e:	e50c                	sd	a1,8(a0)
    8000ce80:	e910                	sd	a2,16(a0)
    8000ce82:	4585                	li	a1,1
    8000ce84:	e10c                	sd	a1,0(a0)
    }
    8000ce86:	0141                	addi	sp,sp,16
    8000ce88:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h4efc9d3ad4b2ad00E:

000000008000ce8a <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h4efc9d3ad4b2ad00E>:
    fn from_error(v: E) -> Self {
    8000ce8a:	1141                	addi	sp,sp,-16
    8000ce8c:	e02e                	sd	a1,0(sp)
    8000ce8e:	e432                	sd	a2,8(sp)
        Err(v)
    8000ce90:	e50c                	sd	a1,8(a0)
    8000ce92:	e910                	sd	a2,16(a0)
    8000ce94:	4585                	li	a1,1
    8000ce96:	e10c                	sd	a1,0(a0)
    }
    8000ce98:	0141                	addi	sp,sp,16
    8000ce9a:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E:

000000008000ce9c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E>:
    fn from_error(v: E) -> Self {
    8000ce9c:	1101                	addi	sp,sp,-32
    8000ce9e:	e82a                	sd	a0,16(sp)
    8000cea0:	ec2e                	sd	a1,24(sp)
        Err(v)
    8000cea2:	e02a                	sd	a0,0(sp)
    8000cea4:	e42e                	sd	a1,8(sp)
    }
    8000cea6:	6105                	addi	sp,sp,32
    8000cea8:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9786450190e97da3E:

000000008000ceaa <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9786450190e97da3E>:
    fn from_error(v: E) -> Self {
    8000ceaa:	1141                	addi	sp,sp,-16
    8000ceac:	4501                	li	a0,0
        Err(v)
    8000ceae:	e02a                	sd	a0,0(sp)
    }
    8000ceb0:	0141                	addi	sp,sp,16
    8000ceb2:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd4049e353037300fE:

000000008000ceb4 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd4049e353037300fE>:
    fn from_error(v: E) -> Self {
    8000ceb4:	1141                	addi	sp,sp,-16
    8000ceb6:	4501                	li	a0,0
        Err(v)
    8000ceb8:	e02a                	sd	a0,0(sp)
    }
    8000ceba:	0141                	addi	sp,sp,16
    8000cebc:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17he0f71f099a2cce66E:

000000008000cebe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17he0f71f099a2cce66E>:
    fn from_error(v: E) -> Self {
    8000cebe:	1141                	addi	sp,sp,-16
    8000cec0:	4501                	li	a0,0
        Err(v)
    8000cec2:	e02a                	sd	a0,0(sp)
    }
    8000cec4:	0141                	addi	sp,sp,16
    8000cec6:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hf8a47798b34f298dE:

000000008000cec8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hf8a47798b34f298dE>:
    fn from_error(v: E) -> Self {
    8000cec8:	1141                	addi	sp,sp,-16
    8000ceca:	4581                	li	a1,0
        Err(v)
    8000cecc:	e50c                	sd	a1,8(a0)
    }
    8000cece:	0141                	addi	sp,sp,16
    8000ced0:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h0a8c29044921e3c5E:

000000008000ced2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h0a8c29044921e3c5E>:
        self
    8000ced2:	6990                	ld	a2,16(a1)
    8000ced4:	e910                	sd	a2,16(a0)
    8000ced6:	6590                	ld	a2,8(a1)
    8000ced8:	e510                	sd	a2,8(a0)
    8000ceda:	618c                	ld	a1,0(a1)
    8000cedc:	e10c                	sd	a1,0(a0)
    }
    8000cede:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h28fc2a69048ad7e2E:

000000008000cee0 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h28fc2a69048ad7e2E>:
    fn into_result(self) -> Self {
    8000cee0:	1141                	addi	sp,sp,-16
    8000cee2:	e42a                	sd	a0,8(sp)
    }
    8000cee4:	0141                	addi	sp,sp,16
    8000cee6:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h489706ecba0771b6E:

000000008000cee8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h489706ecba0771b6E>:
    fn into_result(self) -> Self {
    8000cee8:	1141                	addi	sp,sp,-16
    8000ceea:	e02a                	sd	a0,0(sp)
    8000ceec:	e42e                	sd	a1,8(sp)
    }
    8000ceee:	0141                	addi	sp,sp,16
    8000cef0:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h6b76bcf48ebcbb89E:

000000008000cef2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h6b76bcf48ebcbb89E>:
        self
    8000cef2:	6990                	ld	a2,16(a1)
    8000cef4:	e910                	sd	a2,16(a0)
    8000cef6:	6590                	ld	a2,8(a1)
    8000cef8:	e510                	sd	a2,8(a0)
    8000cefa:	618c                	ld	a1,0(a1)
    8000cefc:	e10c                	sd	a1,0(a0)
    }
    8000cefe:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h98bd22b69e1dae52E:

000000008000cf00 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h98bd22b69e1dae52E>:
        self
    8000cf00:	6990                	ld	a2,16(a1)
    8000cf02:	e910                	sd	a2,16(a0)
    8000cf04:	6590                	ld	a2,8(a1)
    8000cf06:	e510                	sd	a2,8(a0)
    8000cf08:	618c                	ld	a1,0(a1)
    8000cf0a:	e10c                	sd	a1,0(a0)
    }
    8000cf0c:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9ba69d212640d350E:

000000008000cf0e <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9ba69d212640d350E>:
    fn into_result(self) -> Self {
    8000cf0e:	1141                	addi	sp,sp,-16
    8000cf10:	e02a                	sd	a0,0(sp)
    8000cf12:	e42e                	sd	a1,8(sp)
    }
    8000cf14:	0141                	addi	sp,sp,16
    8000cf16:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha77f1c5942d92051E:

000000008000cf18 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha77f1c5942d92051E>:
        self
    8000cf18:	6990                	ld	a2,16(a1)
    8000cf1a:	e910                	sd	a2,16(a0)
    8000cf1c:	6590                	ld	a2,8(a1)
    8000cf1e:	e510                	sd	a2,8(a0)
    8000cf20:	618c                	ld	a1,0(a1)
    8000cf22:	e10c                	sd	a1,0(a0)
    }
    8000cf24:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc0274a8b2b7cf659E:

000000008000cf26 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc0274a8b2b7cf659E>:
    fn into_result(self) -> Self {
    8000cf26:	1141                	addi	sp,sp,-16
    8000cf28:	85aa                	mv	a1,a0
    8000cf2a:	00a107a3          	sb	a0,15(sp)
    }
    8000cf2e:	0141                	addi	sp,sp,16
    8000cf30:	8082                	ret

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc146fdf871206e38E:

000000008000cf32 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc146fdf871206e38E>:
    fn into_result(self) -> Self {
    8000cf32:	1141                	addi	sp,sp,-16
    8000cf34:	e02a                	sd	a0,0(sp)
    8000cf36:	e42e                	sd	a1,8(sp)
    }
    8000cf38:	0141                	addi	sp,sp,16
    8000cf3a:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E:

000000008000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>:
    pub fn load(&self, order: Ordering) -> bool {
    8000cf3c:	7179                	addi	sp,sp,-48
    8000cf3e:	f406                	sd	ra,40(sp)
    8000cf40:	862e                	mv	a2,a1
    8000cf42:	ec2a                	sd	a0,24(sp)
    8000cf44:	02b103a3          	sb	a1,39(sp)
        unsafe { atomic_load(self.v.get(), order) != 0 }
    8000cf48:	e832                	sd	a2,16(sp)
    8000cf4a:	00014097          	auipc	ra,0x14
    8000cf4e:	a20080e7          	jalr	-1504(ra) # 8002096a <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hef2fc2601c683e70E>
    8000cf52:	e42a                	sd	a0,8(sp)
    8000cf54:	a009                	j	8000cf56 <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E+0x1a>
    8000cf56:	6522                	ld	a0,8(sp)
    8000cf58:	65c2                	ld	a1,16(sp)
    8000cf5a:	00014097          	auipc	ra,0x14
    8000cf5e:	a6e080e7          	jalr	-1426(ra) # 800209c8 <_ZN4core4sync6atomic11atomic_load17h1d147b33793f02bdE>
    8000cf62:	e02a                	sd	a0,0(sp)
    8000cf64:	a009                	j	8000cf66 <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E+0x2a>
    8000cf66:	6502                	ld	a0,0(sp)
    8000cf68:	0ff57593          	zext.b	a1,a0
    8000cf6c:	00b03533          	snez	a0,a1
    }
    8000cf70:	70a2                	ld	ra,40(sp)
    8000cf72:	6145                	addi	sp,sp,48
    8000cf74:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E:

000000008000cf76 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E>:
    pub fn swap(&self, val: bool, order: Ordering) -> bool {
    8000cf76:	7139                	addi	sp,sp,-64
    8000cf78:	fc06                	sd	ra,56(sp)
    8000cf7a:	86b2                	mv	a3,a2
    8000cf7c:	872e                	mv	a4,a1
    8000cf7e:	f42a                	sd	a0,40(sp)
    8000cf80:	02b10b23          	sb	a1,54(sp)
    8000cf84:	02c10ba3          	sb	a2,55(sp)
        unsafe { atomic_swap(self.v.get(), val as u8, order) != 0 }
    8000cf88:	f036                	sd	a3,32(sp)
    8000cf8a:	ec3a                	sd	a4,24(sp)
    8000cf8c:	00014097          	auipc	ra,0x14
    8000cf90:	9de080e7          	jalr	-1570(ra) # 8002096a <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hef2fc2601c683e70E>
    8000cf94:	e82a                	sd	a0,16(sp)
    8000cf96:	a009                	j	8000cf98 <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E+0x22>
    8000cf98:	6542                	ld	a0,16(sp)
    8000cf9a:	65e2                	ld	a1,24(sp)
    8000cf9c:	7602                	ld	a2,32(sp)
    8000cf9e:	ffffb097          	auipc	ra,0xffffb
    8000cfa2:	124080e7          	jalr	292(ra) # 800080c2 <_ZN4core4sync6atomic11atomic_swap17h66533505f33dd6a9E>
    8000cfa6:	e42a                	sd	a0,8(sp)
    8000cfa8:	a009                	j	8000cfaa <_ZN4core4sync6atomic10AtomicBool4swap17h7315060b63cdc0a0E+0x34>
    8000cfaa:	6522                	ld	a0,8(sp)
    8000cfac:	0ff57593          	zext.b	a1,a0
    8000cfb0:	00b03533          	snez	a0,a1
    }
    8000cfb4:	70e2                	ld	ra,56(sp)
    8000cfb6:	6121                	addi	sp,sp,64
    8000cfb8:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE:

000000008000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>:
    pub fn store(&self, val: bool, order: Ordering) {
    8000cfba:	7179                	addi	sp,sp,-48
    8000cfbc:	f406                	sd	ra,40(sp)
    8000cfbe:	86b2                	mv	a3,a2
    8000cfc0:	872e                	mv	a4,a1
    8000cfc2:	ec2a                	sd	a0,24(sp)
    8000cfc4:	02b10323          	sb	a1,38(sp)
    8000cfc8:	02c103a3          	sb	a2,39(sp)
            atomic_store(self.v.get(), val as u8, order);
    8000cfcc:	e836                	sd	a3,16(sp)
    8000cfce:	e43a                	sd	a4,8(sp)
    8000cfd0:	00014097          	auipc	ra,0x14
    8000cfd4:	99a080e7          	jalr	-1638(ra) # 8002096a <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hef2fc2601c683e70E>
    8000cfd8:	e02a                	sd	a0,0(sp)
    8000cfda:	a009                	j	8000cfdc <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE+0x22>
    8000cfdc:	6502                	ld	a0,0(sp)
    8000cfde:	65a2                	ld	a1,8(sp)
    8000cfe0:	6642                	ld	a2,16(sp)
    8000cfe2:	ffffb097          	auipc	ra,0xffffb
    8000cfe6:	27e080e7          	jalr	638(ra) # 80008260 <_ZN4core4sync6atomic12atomic_store17he16a66a06b969f6dE>
    8000cfea:	a009                	j	8000cfec <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE+0x32>
    }
    8000cfec:	70a2                	ld	ra,40(sp)
    8000cfee:	6145                	addi	sp,sp,48
    8000cff0:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic11AtomicUsize3new17hea74115b980a3925E:

000000008000cff2 <_ZN4core4sync6atomic11AtomicUsize3new17hea74115b980a3925E>:
            pub const fn new(v: $int_type) -> Self {
    8000cff2:	1101                	addi	sp,sp,-32
    8000cff4:	ec06                	sd	ra,24(sp)
    8000cff6:	e82a                	sd	a0,16(sp)
                Self {v: UnsafeCell::new(v)}
    8000cff8:	0000a097          	auipc	ra,0xa
    8000cffc:	9c8080e7          	jalr	-1592(ra) # 800169c0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h176d299b2a4dd82aE>
    8000d000:	e02a                	sd	a0,0(sp)
    8000d002:	a009                	j	8000d004 <_ZN4core4sync6atomic11AtomicUsize3new17hea74115b980a3925E+0x12>
    8000d004:	6502                	ld	a0,0(sp)
    8000d006:	e42a                	sd	a0,8(sp)
            }
    8000d008:	60e2                	ld	ra,24(sp)
    8000d00a:	6105                	addi	sp,sp,32
    8000d00c:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic11AtomicUsize9fetch_add17h665917eede16f7e6E:

000000008000d00e <_ZN4core4sync6atomic11AtomicUsize9fetch_add17h665917eede16f7e6E>:
            pub fn fetch_add(&self, val: $int_type, order: Ordering) -> $int_type {
    8000d00e:	7139                	addi	sp,sp,-64
    8000d010:	fc06                	sd	ra,56(sp)
    8000d012:	86b2                	mv	a3,a2
    8000d014:	f02a                	sd	a0,32(sp)
    8000d016:	f42e                	sd	a1,40(sp)
    8000d018:	02c10ba3          	sb	a2,55(sp)
                unsafe { atomic_add(self.v.get(), val, order) }
    8000d01c:	ec2e                	sd	a1,24(sp)
    8000d01e:	e836                	sd	a3,16(sp)
    8000d020:	00014097          	auipc	ra,0x14
    8000d024:	a9a080e7          	jalr	-1382(ra) # 80020aba <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h95cfec27c73dbf25E>
    8000d028:	e42a                	sd	a0,8(sp)
    8000d02a:	a009                	j	8000d02c <_ZN4core4sync6atomic11AtomicUsize9fetch_add17h665917eede16f7e6E+0x1e>
    8000d02c:	6522                	ld	a0,8(sp)
    8000d02e:	65e2                	ld	a1,24(sp)
    8000d030:	6642                	ld	a2,16(sp)
    8000d032:	ffffb097          	auipc	ra,0xffffb
    8000d036:	f68080e7          	jalr	-152(ra) # 80007f9a <_ZN4core4sync6atomic10atomic_add17h7b0960b25e3823feE>
    8000d03a:	e02a                	sd	a0,0(sp)
    8000d03c:	a009                	j	8000d03e <_ZN4core4sync6atomic11AtomicUsize9fetch_add17h665917eede16f7e6E+0x30>
            }
    8000d03e:	6502                	ld	a0,0(sp)
    8000d040:	70e2                	ld	ra,56(sp)
    8000d042:	6121                	addi	sp,sp,64
    8000d044:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic11AtomicUsize9fetch_sub17hbf163b7d32f1c9ddE:

000000008000d046 <_ZN4core4sync6atomic11AtomicUsize9fetch_sub17hbf163b7d32f1c9ddE>:
            pub fn fetch_sub(&self, val: $int_type, order: Ordering) -> $int_type {
    8000d046:	7139                	addi	sp,sp,-64
    8000d048:	fc06                	sd	ra,56(sp)
    8000d04a:	86b2                	mv	a3,a2
    8000d04c:	f02a                	sd	a0,32(sp)
    8000d04e:	f42e                	sd	a1,40(sp)
    8000d050:	02c10ba3          	sb	a2,55(sp)
                unsafe { atomic_sub(self.v.get(), val, order) }
    8000d054:	ec2e                	sd	a1,24(sp)
    8000d056:	e836                	sd	a3,16(sp)
    8000d058:	00014097          	auipc	ra,0x14
    8000d05c:	a62080e7          	jalr	-1438(ra) # 80020aba <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h95cfec27c73dbf25E>
    8000d060:	e42a                	sd	a0,8(sp)
    8000d062:	a009                	j	8000d064 <_ZN4core4sync6atomic11AtomicUsize9fetch_sub17hbf163b7d32f1c9ddE+0x1e>
    8000d064:	6522                	ld	a0,8(sp)
    8000d066:	65e2                	ld	a1,24(sp)
    8000d068:	6642                	ld	a2,16(sp)
    8000d06a:	ffffb097          	auipc	ra,0xffffb
    8000d06e:	fba080e7          	jalr	-70(ra) # 80008024 <_ZN4core4sync6atomic10atomic_sub17h9fe47f0fd360833bE>
    8000d072:	e02a                	sd	a0,0(sp)
    8000d074:	a009                	j	8000d076 <_ZN4core4sync6atomic11AtomicUsize9fetch_sub17hbf163b7d32f1c9ddE+0x30>
            }
    8000d076:	6502                	ld	a0,0(sp)
    8000d078:	70e2                	ld	ra,56(sp)
    8000d07a:	6121                	addi	sp,sp,64
    8000d07c:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE:

000000008000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>:
///     }
/// }
/// ```
#[inline]
#[stable(feature = "rust1", since = "1.0.0")]
pub fn fence(order: Ordering) {
    8000d07e:	1101                	addi	sp,sp,-32
    8000d080:	85aa                	mv	a1,a0
    8000d082:	00a10ba3          	sb	a0,23(sp)
    // SAFETY: using an atomic fence is safe.
    unsafe {
        match order {
            Acquire => intrinsics::atomic_fence_acq(),
    8000d086:	0ff57513          	zext.b	a0,a0
    8000d08a:	4601                	li	a2,0
    8000d08c:	e42a                	sd	a0,8(sp)
    8000d08e:	02c50363          	beq	a0,a2,8000d0b4 <.LBB6_12>
    8000d092:	a009                	j	8000d094 <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE+0x16>
    8000d094:	4505                	li	a0,1
    8000d096:	65a2                	ld	a1,8(sp)
    8000d098:	04a58163          	beq	a1,a0,8000d0da <.LBB6_13+0x1e>
    8000d09c:	a009                	j	8000d09e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE+0x20>
    8000d09e:	4509                	li	a0,2
    8000d0a0:	65a2                	ld	a1,8(sp)
    8000d0a2:	02a58963          	beq	a1,a0,8000d0d4 <.LBB6_13+0x18>
    8000d0a6:	a009                	j	8000d0a8 <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE+0x2a>
    8000d0a8:	450d                	li	a0,3
    8000d0aa:	65a2                	ld	a1,8(sp)
    8000d0ac:	02a58a63          	beq	a1,a0,8000d0e0 <.LBB6_13+0x24>
    8000d0b0:	a009                	j	8000d0b2 <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE+0x34>
    8000d0b2:	a815                	j	8000d0e6 <.LBB6_13+0x2a>

000000008000d0b4 <.LBB6_12>:
            Release => intrinsics::atomic_fence_rel(),
            AcqRel => intrinsics::atomic_fence_acqrel(),
            SeqCst => intrinsics::atomic_fence(),
            Relaxed => panic!("there is no such thing as a relaxed fence"),
    8000d0b4:	00019517          	auipc	a0,0x19
    8000d0b8:	ce450513          	addi	a0,a0,-796 # 80025d98 <.L__unnamed_1>

000000008000d0bc <.LBB6_13>:
    8000d0bc:	00019617          	auipc	a2,0x19
    8000d0c0:	d7c60613          	addi	a2,a2,-644 # 80025e38 <.L__unnamed_2>
    8000d0c4:	02900593          	li	a1,41
    8000d0c8:	00014097          	auipc	ra,0x14
    8000d0cc:	c02080e7          	jalr	-1022(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000d0d0:	0000                	unimp
        match order {
    8000d0d2:	0000                	unimp
            Acquire => intrinsics::atomic_fence_acq(),
    8000d0d4:	0230000f          	fence	r,rw
    8000d0d8:	a811                	j	8000d0ec <.LBB6_13+0x30>
            Release => intrinsics::atomic_fence_rel(),
    8000d0da:	0310000f          	fence	rw,w
    8000d0de:	a039                	j	8000d0ec <.LBB6_13+0x30>
            AcqRel => intrinsics::atomic_fence_acqrel(),
    8000d0e0:	8330000f          	fence.tso
    8000d0e4:	a021                	j	8000d0ec <.LBB6_13+0x30>
            SeqCst => intrinsics::atomic_fence(),
    8000d0e6:	0330000f          	fence	rw,rw
    8000d0ea:	a009                	j	8000d0ec <.LBB6_13+0x30>
        }
    }
}
    8000d0ec:	6105                	addi	sp,sp,32
    8000d0ee:	8082                	ret

Disassembly of section .text._ZN6kernel2fs10superblock10SuperBlock4init17hbc156d1f9075dc38E:

000000008000d0f0 <_ZN6kernel2fs10superblock10SuperBlock4init17hbc156d1f9075dc38E>:
        }
    }

    /// Read and init the super block from disk into memory.
    /// SAFETY: it should only be called by the first regular process alone.
    pub unsafe fn init(&mut self, dev: u32) {
    8000d0f0:	df010113          	addi	sp,sp,-528
    8000d0f4:	20113423          	sd	ra,520(sp)
    8000d0f8:	862e                	mv	a2,a1
    8000d0fa:	ff2a                	sd	a0,440(sp)
    8000d0fc:	1cb12223          	sw	a1,452(sp)
    8000d100:	45a1                	li	a1,8
    8000d102:	f7ae                	sd	a1,488(sp)
        debug_assert_eq!(mem::align_of::<BufData>() % mem::align_of::<RawSuperBlock>(), 0);
    8000d104:	e92a                	sd	a0,144(sp)
    8000d106:	e532                	sd	a2,136(sp)
    8000d108:	e12e                	sd	a1,128(sp)
    8000d10a:	a009                	j	8000d10c <_ZN6kernel2fs10superblock10SuperBlock4init17hbc156d1f9075dc38E+0x1c>
    8000d10c:	4511                	li	a0,4
    8000d10e:	20a13023          	sd	a0,512(sp)
    8000d112:	fcaa                	sd	a0,120(sp)
    8000d114:	a009                	j	8000d116 <_ZN6kernel2fs10superblock10SuperBlock4init17hbc156d1f9075dc38E+0x26>
    8000d116:	4501                	li	a0,0
    8000d118:	75e6                	ld	a1,120(sp)
    8000d11a:	1ea58463          	beq	a1,a0,8000d302 <.LBB0_38>
    8000d11e:	a009                	j	8000d120 <_ZN6kernel2fs10superblock10SuperBlock4init17hbc156d1f9075dc38E+0x30>
    8000d120:	650a                	ld	a0,128(sp)
    8000d122:	75e6                	ld	a1,120(sp)
    8000d124:	02b57633          	remu	a2,a0,a1
    8000d128:	f932                	sd	a2,176(sp)
    8000d12a:	1914                	addi	a3,sp,176
    8000d12c:	f136                	sd	a3,160(sp)

000000008000d12e <.LBB0_27>:
    8000d12e:	00017717          	auipc	a4,0x17
    8000d132:	c7270713          	addi	a4,a4,-910 # 80023da0 <.L__unnamed_5+0xa0>
    8000d136:	f53a                	sd	a4,168(sp)
    8000d138:	e7b6                	sd	a3,456(sp)
    8000d13a:	ebba                	sd	a4,464(sp)
    8000d13c:	4781                	li	a5,0
    8000d13e:	f8b6                	sd	a3,112(sp)
    8000d140:	f4ba                	sd	a4,104(sp)
    8000d142:	02f60a63          	beq	a2,a5,8000d176 <.LBB0_28+0x1a>
    8000d146:	a009                	j	8000d148 <.LBB0_27+0x1a>
    8000d148:	7546                	ld	a0,112(sp)
    8000d14a:	ee2a                	sd	a0,280(sp)
    8000d14c:	75a6                	ld	a1,104(sp)
    8000d14e:	f22e                	sd	a1,288(sp)
    8000d150:	0a30                	addi	a2,sp,280
    8000d152:	e632                	sd	a2,264(sp)
    8000d154:	1214                	addi	a3,sp,288
    8000d156:	ea36                	sd	a3,272(sp)
    8000d158:	efb2                	sd	a2,472(sp)
    8000d15a:	f3b6                	sd	a3,480(sp)

000000008000d15c <.LBB0_28>:
    8000d15c:	00013597          	auipc	a1,0x13
    8000d160:	85c58593          	addi	a1,a1,-1956 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000d164:	8532                	mv	a0,a2
    8000d166:	f0b6                	sd	a3,96(sp)
    8000d168:	00013097          	auipc	ra,0x13
    8000d16c:	86e080e7          	jalr	-1938(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000d170:	ecaa                	sd	a0,88(sp)
    8000d172:	e8ae                	sd	a1,80(sp)
    8000d174:	a829                	j	8000d18e <.LBB0_29>
        if self.initialized.load(Ordering::Relaxed) {
    8000d176:	654a                	ld	a0,144(sp)
    8000d178:	02050513          	addi	a0,a0,32
    8000d17c:	4581                	li	a1,0
    8000d17e:	12b107a3          	sb	a1,303(sp)
    8000d182:	00000097          	auipc	ra,0x0
    8000d186:	dba080e7          	jalr	-582(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    8000d18a:	e4aa                	sd	a0,72(sp)
    8000d18c:	a8a1                	j	8000d1e4 <.LBB0_31+0x14>

000000008000d18e <.LBB0_29>:
        debug_assert_eq!(mem::align_of::<BufData>() % mem::align_of::<RawSuperBlock>(), 0);
    8000d18e:	00013597          	auipc	a1,0x13
    8000d192:	82a58593          	addi	a1,a1,-2006 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000d196:	7506                	ld	a0,96(sp)
    8000d198:	00013097          	auipc	ra,0x13
    8000d19c:	83e080e7          	jalr	-1986(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000d1a0:	e0aa                	sd	a0,64(sp)
    8000d1a2:	fc2e                	sd	a1,56(sp)
    8000d1a4:	a009                	j	8000d1a6 <.LBB0_29+0x18>
    8000d1a6:	6566                	ld	a0,88(sp)
    8000d1a8:	f5aa                	sd	a0,232(sp)
    8000d1aa:	65c6                	ld	a1,80(sp)
    8000d1ac:	f9ae                	sd	a1,240(sp)
    8000d1ae:	6606                	ld	a2,64(sp)
    8000d1b0:	fdb2                	sd	a2,248(sp)
    8000d1b2:	76e2                	ld	a3,56(sp)
    8000d1b4:	e236                	sd	a3,256(sp)

000000008000d1b6 <.LBB0_30>:
    8000d1b6:	00019597          	auipc	a1,0x19
    8000d1ba:	d4258593          	addi	a1,a1,-702 # 80025ef8 <.L__unnamed_2>
    8000d1be:	1928                	addi	a0,sp,184
    8000d1c0:	460d                	li	a2,3
    8000d1c2:	11b4                	addi	a3,sp,232
    8000d1c4:	4709                	li	a4,2
    8000d1c6:	ffff8097          	auipc	ra,0xffff8
    8000d1ca:	55e080e7          	jalr	1374(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000d1ce:	a009                	j	8000d1d0 <.LBB0_31>

000000008000d1d0 <.LBB0_31>:
    8000d1d0:	00019597          	auipc	a1,0x19
    8000d1d4:	d5858593          	addi	a1,a1,-680 # 80025f28 <.L__unnamed_3>
    8000d1d8:	1928                	addi	a0,sp,184
    8000d1da:	00014097          	auipc	ra,0x14
    8000d1de:	b5c080e7          	jalr	-1188(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000d1e2:	0000                	unimp
    8000d1e4:	4501                	li	a0,0
        if self.initialized.load(Ordering::Relaxed) {
    8000d1e6:	65a6                	ld	a1,72(sp)
    8000d1e8:	00a58463          	beq	a1,a0,8000d1f0 <.LBB0_32>
    8000d1ec:	a009                	j	8000d1ee <.LBB0_31+0x1e>
        self.initialized.store(true, Ordering::SeqCst);
        drop(buf);

        #[cfg(feature = "verbose_init_info")]
        println!("super block data: {:?}", self.data.as_ptr().as_ref().unwrap());
    }
    8000d1ee:	a229                	j	8000d2f8 <.LBB0_37+0x54>

000000008000d1f0 <.LBB0_32>:
        let buf = BCACHE.bread(dev, 1);
    8000d1f0:	0001f597          	auipc	a1,0x1f
    8000d1f4:	e1058593          	addi	a1,a1,-496 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8000d1f8:	1a08                	addi	a0,sp,304
    8000d1fa:	4685                	li	a3,1
    8000d1fc:	662a                	ld	a2,136(sp)
    8000d1fe:	ffff4097          	auipc	ra,0xffff4
    8000d202:	600080e7          	jalr	1536(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8000d206:	a009                	j	8000d208 <.LBB0_32+0x18>
    8000d208:	1a08                	addi	a0,sp,304
            buf.raw_data() as *const RawSuperBlock,
    8000d20a:	ffff4097          	auipc	ra,0xffff4
    8000d20e:	750080e7          	jalr	1872(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    8000d212:	f82a                	sd	a0,48(sp)
    8000d214:	a009                	j	8000d216 <.LBB0_32+0x26>
    8000d216:	7542                	ld	a0,48(sp)
    8000d218:	65ca                	ld	a1,144(sp)
    8000d21a:	ffae                	sd	a1,504(sp)
            self.data.as_mut_ptr(),
    8000d21c:	f42a                	sd	a0,40(sp)
    8000d21e:	f02e                	sd	a1,32(sp)
    8000d220:	a009                	j	8000d222 <.LBB0_32+0x32>
    8000d222:	4605                	li	a2,1
        ptr::copy_nonoverlapping(
    8000d224:	7522                	ld	a0,40(sp)
    8000d226:	7582                	ld	a1,32(sp)
    8000d228:	ffff9097          	auipc	ra,0xffff9
    8000d22c:	8fc080e7          	jalr	-1796(ra) # 80005b24 <_ZN4core10intrinsics19copy_nonoverlapping17hb3d9626197851ba0E>
    8000d230:	a009                	j	8000d232 <.LBB0_33>

000000008000d232 <.LBB0_33>:
        println!("check magic number");
    8000d232:	00019597          	auipc	a1,0x19
    8000d236:	d2658593          	addi	a1,a1,-730 # 80025f58 <.L__unnamed_4>

000000008000d23a <.LBB0_34>:
    8000d23a:	00019697          	auipc	a3,0x19
    8000d23e:	d2e68693          	addi	a3,a3,-722 # 80025f68 <.L__unnamed_6>
    8000d242:	0aa8                	addi	a0,sp,344
    8000d244:	4605                	li	a2,1
    8000d246:	4701                	li	a4,0
    8000d248:	ffff8097          	auipc	ra,0xffff8
    8000d24c:	4dc080e7          	jalr	1244(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000d250:	a009                	j	8000d252 <.LBB0_34+0x18>
    8000d252:	0aa8                	addi	a0,sp,344
    8000d254:	00004097          	auipc	ra,0x4
    8000d258:	a9c080e7          	jalr	-1380(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000d25c:	a009                	j	8000d25e <.LBB0_34+0x24>
    8000d25e:	654a                	ld	a0,144(sp)
    8000d260:	fbaa                	sd	a0,496(sp)
        if self.data.as_ptr().as_ref().unwrap().magic != FSMAGIC {
    8000d262:	ec2a                	sd	a0,24(sp)
    8000d264:	a009                	j	8000d266 <.LBB0_34+0x2c>
    8000d266:	6562                	ld	a0,24(sp)
    8000d268:	ffff5097          	auipc	ra,0xffff5
    8000d26c:	b88080e7          	jalr	-1144(ra) # 80001df0 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E>
    8000d270:	e82a                	sd	a0,16(sp)
    8000d272:	a009                	j	8000d274 <.LBB0_35>

000000008000d274 <.LBB0_35>:
    8000d274:	00019597          	auipc	a1,0x19
    8000d278:	cf458593          	addi	a1,a1,-780 # 80025f68 <.L__unnamed_6>
    8000d27c:	6542                	ld	a0,16(sp)
    8000d27e:	0000c097          	auipc	ra,0xc
    8000d282:	848080e7          	jalr	-1976(ra) # 80018ac6 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0872d29ee4f7c5ceE>
    8000d286:	e42a                	sd	a0,8(sp)
    8000d288:	a009                	j	8000d28a <.LBB0_35+0x16>
    8000d28a:	6522                	ld	a0,8(sp)
    8000d28c:	410c                	lw	a1,0(a0)
    8000d28e:	10203637          	lui	a2,0x10203
    8000d292:	0406061b          	addiw	a2,a2,64
    8000d296:	02c58163          	beq	a1,a2,8000d2b8 <.LBB0_37+0x14>
    8000d29a:	a009                	j	8000d29c <.LBB0_36>

000000008000d29c <.LBB0_36>:
            panic!("invalid file system magic num");
    8000d29c:	00019517          	auipc	a0,0x19
    8000d2a0:	ce450513          	addi	a0,a0,-796 # 80025f80 <.L__unnamed_7>

000000008000d2a4 <.LBB0_37>:
    8000d2a4:	00019617          	auipc	a2,0x19
    8000d2a8:	cfc60613          	addi	a2,a2,-772 # 80025fa0 <.L__unnamed_8>
    8000d2ac:	45f5                	li	a1,29
    8000d2ae:	00014097          	auipc	ra,0x14
    8000d2b2:	a1c080e7          	jalr	-1508(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000d2b6:	0000                	unimp
        self.initialized.store(true, Ordering::SeqCst);
    8000d2b8:	654a                	ld	a0,144(sp)
    8000d2ba:	02050513          	addi	a0,a0,32
    8000d2be:	4591                	li	a1,4
    8000d2c0:	18b107a3          	sb	a1,399(sp)
    8000d2c4:	4605                	li	a2,1
    8000d2c6:	e02e                	sd	a1,0(sp)
    8000d2c8:	85b2                	mv	a1,a2
    8000d2ca:	6602                	ld	a2,0(sp)
    8000d2cc:	00000097          	auipc	ra,0x0
    8000d2d0:	cee080e7          	jalr	-786(ra) # 8000cfba <_ZN4core4sync6atomic10AtomicBool5store17h7e5dfcadbe49301bE>
    8000d2d4:	a009                	j	8000d2d6 <.LBB0_37+0x32>
        drop(buf);
    8000d2d6:	6556                	ld	a0,336(sp)
    8000d2d8:	fb2a                	sd	a0,432(sp)
    8000d2da:	6536                	ld	a0,328(sp)
    8000d2dc:	f72a                	sd	a0,424(sp)
    8000d2de:	6516                	ld	a0,320(sp)
    8000d2e0:	f32a                	sd	a0,416(sp)
    8000d2e2:	7572                	ld	a0,312(sp)
    8000d2e4:	ef2a                	sd	a0,408(sp)
    8000d2e6:	7552                	ld	a0,304(sp)
    8000d2e8:	eb2a                	sd	a0,400(sp)
    8000d2ea:	0b08                	addi	a0,sp,400
    8000d2ec:	00000097          	auipc	ra,0x0
    8000d2f0:	6a6080e7          	jalr	1702(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8000d2f4:	a009                	j	8000d2f6 <.LBB0_37+0x52>
    }
    8000d2f6:	a009                	j	8000d2f8 <.LBB0_37+0x54>
    8000d2f8:	20813083          	ld	ra,520(sp)
    8000d2fc:	21010113          	addi	sp,sp,528
    8000d300:	8082                	ret

000000008000d302 <.LBB0_38>:
        debug_assert_eq!(mem::align_of::<BufData>() % mem::align_of::<RawSuperBlock>(), 0);
    8000d302:	00019517          	auipc	a0,0x19
    8000d306:	b7e50513          	addi	a0,a0,-1154 # 80025e80 <str.0>

000000008000d30a <.LBB0_39>:
    8000d30a:	00019617          	auipc	a2,0x19
    8000d30e:	b5e60613          	addi	a2,a2,-1186 # 80025e68 <.L__unnamed_9>
    8000d312:	03900593          	li	a1,57
    8000d316:	00014097          	auipc	ra,0x14
    8000d31a:	9b4080e7          	jalr	-1612(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E:

000000008000d320 <_ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E>:

    /// Read the info of super block.
    fn read(&self) -> &RawSuperBlock {
    8000d320:	715d                	addi	sp,sp,-80
    8000d322:	e486                	sd	ra,72(sp)
    8000d324:	fc2a                	sd	a0,56(sp)
        debug_assert!(self.initialized.load(Ordering::Relaxed));
    8000d326:	02050593          	addi	a1,a0,32
    8000d32a:	4601                	li	a2,0
    8000d32c:	02c10ba3          	sb	a2,55(sp)
    8000d330:	f42a                	sd	a0,40(sp)
    8000d332:	852e                	mv	a0,a1
    8000d334:	85b2                	mv	a1,a2
    8000d336:	00000097          	auipc	ra,0x0
    8000d33a:	c06080e7          	jalr	-1018(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    8000d33e:	f02a                	sd	a0,32(sp)
    8000d340:	a009                	j	8000d342 <_ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E+0x22>
    8000d342:	7502                	ld	a0,32(sp)
    8000d344:	e10d                	bnez	a0,8000d366 <.LBB1_8+0x16>
    8000d346:	a009                	j	8000d348 <.LBB1_7>

000000008000d348 <.LBB1_7>:
    8000d348:	00019517          	auipc	a0,0x19
    8000d34c:	c7050513          	addi	a0,a0,-912 # 80025fb8 <.L__unnamed_10>

000000008000d350 <.LBB1_8>:
    8000d350:	00019617          	auipc	a2,0x19
    8000d354:	ca860613          	addi	a2,a2,-856 # 80025ff8 <.L__unnamed_11>
    8000d358:	03a00593          	li	a1,58
    8000d35c:	00014097          	auipc	ra,0x14
    8000d360:	96e080e7          	jalr	-1682(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000d364:	0000                	unimp
    8000d366:	7522                	ld	a0,40(sp)
    8000d368:	e0aa                	sd	a0,64(sp)
        unsafe {
            self.data.as_ptr().as_ref().unwrap()
    8000d36a:	ec2a                	sd	a0,24(sp)
    8000d36c:	a009                	j	8000d36e <.LBB1_8+0x1e>
    8000d36e:	6562                	ld	a0,24(sp)
    8000d370:	ffff5097          	auipc	ra,0xffff5
    8000d374:	a80080e7          	jalr	-1408(ra) # 80001df0 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h92b195404a3b6fa0E>
    8000d378:	e82a                	sd	a0,16(sp)
    8000d37a:	a009                	j	8000d37c <.LBB1_9>

000000008000d37c <.LBB1_9>:
    8000d37c:	00019597          	auipc	a1,0x19
    8000d380:	c9458593          	addi	a1,a1,-876 # 80026010 <.L__unnamed_12>
    8000d384:	6542                	ld	a0,16(sp)
    8000d386:	0000b097          	auipc	ra,0xb
    8000d38a:	740080e7          	jalr	1856(ra) # 80018ac6 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0872d29ee4f7c5ceE>
    8000d38e:	e42a                	sd	a0,8(sp)
    8000d390:	a009                	j	8000d392 <.LBB1_9+0x16>
        }
    }
    8000d392:	6522                	ld	a0,8(sp)
    8000d394:	60a6                	ld	ra,72(sp)
    8000d396:	6161                	addi	sp,sp,80
    8000d398:	8082                	ret

Disassembly of section .text._ZN6kernel2fs10superblock10SuperBlock8read_log17h36e914fd672b2fa8E:

000000008000d39a <_ZN6kernel2fs10superblock10SuperBlock8read_log17h36e914fd672b2fa8E>:

    /// Load the log info of super block.
    /// Return starting block and usable blocks for log.
    pub fn read_log(&self) -> (u32, u32) {
    8000d39a:	7179                	addi	sp,sp,-48
    8000d39c:	f406                	sd	ra,40(sp)
    8000d39e:	ec2a                	sd	a0,24(sp)
        let sb = self.read();
    8000d3a0:	00000097          	auipc	ra,0x0
    8000d3a4:	f80080e7          	jalr	-128(ra) # 8000d320 <_ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E>
    8000d3a8:	85aa                	mv	a1,a0
    8000d3aa:	f02a                	sd	a0,32(sp)
    8000d3ac:	e42e                	sd	a1,8(sp)
    8000d3ae:	a009                	j	8000d3b0 <_ZN6kernel2fs10superblock10SuperBlock8read_log17h36e914fd672b2fa8E+0x16>
        (sb.logstart, sb.nlog)
    8000d3b0:	6522                	ld	a0,8(sp)
    8000d3b2:	494c                	lw	a1,20(a0)
    8000d3b4:	4910                	lw	a2,16(a0)
    8000d3b6:	c82e                	sw	a1,16(sp)
    8000d3b8:	ca32                	sw	a2,20(sp)
    }
    8000d3ba:	852e                	mv	a0,a1
    8000d3bc:	85b2                	mv	a1,a2
    8000d3be:	70a2                	ld	ra,40(sp)
    8000d3c0:	6145                	addi	sp,sp,48
    8000d3c2:	8082                	ret

Disassembly of section .text._ZN6kernel2fs10superblock10SuperBlock4size17hb786cb7ba705fe16E:

000000008000d3c4 <_ZN6kernel2fs10superblock10SuperBlock4size17hb786cb7ba705fe16E>:

    /// The total count of blocks in the disk.
    pub fn size(&self) -> u32 {
    8000d3c4:	1101                	addi	sp,sp,-32
    8000d3c6:	ec06                	sd	ra,24(sp)
    8000d3c8:	e42a                	sd	a0,8(sp)
        let sb = self.read();
    8000d3ca:	00000097          	auipc	ra,0x0
    8000d3ce:	f56080e7          	jalr	-170(ra) # 8000d320 <_ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E>
    8000d3d2:	85aa                	mv	a1,a0
    8000d3d4:	e82a                	sd	a0,16(sp)
    8000d3d6:	e02e                	sd	a1,0(sp)
    8000d3d8:	a009                	j	8000d3da <_ZN6kernel2fs10superblock10SuperBlock4size17hb786cb7ba705fe16E+0x16>
        sb.size
    }
    8000d3da:	6502                	ld	a0,0(sp)
    8000d3dc:	4148                	lw	a0,4(a0)
    8000d3de:	60e2                	ld	ra,24(sp)
    8000d3e0:	6105                	addi	sp,sp,32
    8000d3e2:	8082                	ret

Disassembly of section .text._ZN6kernel2fs10superblock10SuperBlock7ninodes17h023c9cafc4b11648E:

000000008000d3e4 <_ZN6kernel2fs10superblock10SuperBlock7ninodes17h023c9cafc4b11648E>:
        let sb = self.read();
        sb.bmapstart
    }

    /// inode numbers
    pub fn ninodes(&self) -> u32 {
    8000d3e4:	1101                	addi	sp,sp,-32
    8000d3e6:	ec06                	sd	ra,24(sp)
    8000d3e8:	e82a                	sd	a0,16(sp)
        self.read().ninodes
    8000d3ea:	00000097          	auipc	ra,0x0
    8000d3ee:	f36080e7          	jalr	-202(ra) # 8000d320 <_ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E>
    8000d3f2:	e42a                	sd	a0,8(sp)
    8000d3f4:	a009                	j	8000d3f6 <_ZN6kernel2fs10superblock10SuperBlock7ninodes17h023c9cafc4b11648E+0x12>
    }
    8000d3f6:	6522                	ld	a0,8(sp)
    8000d3f8:	4548                	lw	a0,12(a0)
    8000d3fa:	60e2                	ld	ra,24(sp)
    8000d3fc:	6105                	addi	sp,sp,32
    8000d3fe:	8082                	ret

Disassembly of section .text._ZN6kernel2fs10superblock10SuperBlock12locate_inode17h7c732a61e5f44353E:

000000008000d400 <_ZN6kernel2fs10superblock10SuperBlock12locate_inode17h7c732a61e5f44353E>:

    /// Given an inode number. 
    /// Return the blockno of the block this inode resides. 
    /// Panic if the queryed inode out of range. 
    pub fn locate_inode(&self, inum: u32) -> u32 {
    8000d400:	7115                	addi	sp,sp,-224
    8000d402:	ed86                	sd	ra,216(sp)
    8000d404:	862e                	mv	a2,a1
    8000d406:	c6ae                	sw	a1,76(sp)
    8000d408:	f92a                	sd	a0,176(sp)
        let sb = self.read();
    8000d40a:	e0b2                	sd	a2,64(sp)
    8000d40c:	00000097          	auipc	ra,0x0
    8000d410:	f14080e7          	jalr	-236(ra) # 8000d320 <_ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E>
    8000d414:	85aa                	mv	a1,a0
    8000d416:	fd2a                	sd	a0,184(sp)
    8000d418:	fc2e                	sd	a1,56(sp)
    8000d41a:	a009                	j	8000d41c <_ZN6kernel2fs10superblock10SuperBlock12locate_inode17h7c732a61e5f44353E+0x1c>
        if inum >= sb.ninodes {
    8000d41c:	4536                	lw	a0,76(sp)
    8000d41e:	75e2                	ld	a1,56(sp)
    8000d420:	45d0                	lw	a2,12(a1)
    8000d422:	02c56963          	bltu	a0,a2,8000d454 <.LBB5_9+0x1c>
    8000d426:	a009                	j	8000d428 <_ZN6kernel2fs10superblock10SuperBlock12locate_inode17h7c732a61e5f44353E+0x28>
            panic!("query inum {} larger than maximum inode nums {}", inum, sb.ninodes);
    8000d428:	7562                	ld	a0,56(sp)
    8000d42a:	00c50593          	addi	a1,a0,12
    8000d42e:	00f0                	addi	a2,sp,76
    8000d430:	f132                	sd	a2,160(sp)
    8000d432:	f52e                	sd	a1,168(sp)
    8000d434:	e1b2                	sd	a2,192(sp)
    8000d436:	e5ae                	sd	a1,200(sp)

000000008000d438 <.LBB5_9>:
    8000d438:	00016697          	auipc	a3,0x16
    8000d43c:	a3e68693          	addi	a3,a3,-1474 # 80022e76 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h4f29d8511ba5e68eE>
    8000d440:	8532                	mv	a0,a2
    8000d442:	f82e                	sd	a1,48(sp)
    8000d444:	85b6                	mv	a1,a3
    8000d446:	00013097          	auipc	ra,0x13
    8000d44a:	546080e7          	jalr	1350(ra) # 8002098c <_ZN4core3fmt10ArgumentV13new17haf816dc4f723dcb1E>
    8000d44e:	f42a                	sd	a0,40(sp)
    8000d450:	f02e                	sd	a1,32(sp)
    8000d452:	a839                	j	8000d470 <.LBB5_10>
        }
        // println!("[Debug] inum: {}", inum);
        let blockno = (inum / (IPB as u32)) + sb.inodestart;
    8000d454:	04c16503          	lwu	a0,76(sp)
    8000d458:	8111                	srli	a0,a0,0x4
    8000d45a:	75e2                	ld	a1,56(sp)
    8000d45c:	0185e603          	lwu	a2,24(a1)
    8000d460:	9532                	add	a0,a0,a2
    8000d462:	02051613          	slli	a2,a0,0x20
    8000d466:	9201                	srli	a2,a2,0x20
    8000d468:	ec2a                	sd	a0,24(sp)
    8000d46a:	06a61363          	bne	a2,a0,8000d4d0 <.LBB5_13>
    8000d46e:	a8a1                	j	8000d4c6 <.LBB5_12+0x14>

000000008000d470 <.LBB5_10>:
            panic!("query inum {} larger than maximum inode nums {}", inum, sb.ninodes);
    8000d470:	00016597          	auipc	a1,0x16
    8000d474:	a0658593          	addi	a1,a1,-1530 # 80022e76 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h4f29d8511ba5e68eE>
    8000d478:	7542                	ld	a0,48(sp)
    8000d47a:	00013097          	auipc	ra,0x13
    8000d47e:	512080e7          	jalr	1298(ra) # 8002098c <_ZN4core3fmt10ArgumentV13new17haf816dc4f723dcb1E>
    8000d482:	e82a                	sd	a0,16(sp)
    8000d484:	e42e                	sd	a1,8(sp)
    8000d486:	a009                	j	8000d488 <.LBB5_10+0x18>
    8000d488:	7522                	ld	a0,40(sp)
    8000d48a:	e12a                	sd	a0,128(sp)
    8000d48c:	7582                	ld	a1,32(sp)
    8000d48e:	e52e                	sd	a1,136(sp)
    8000d490:	6642                	ld	a2,16(sp)
    8000d492:	e932                	sd	a2,144(sp)
    8000d494:	66a2                	ld	a3,8(sp)
    8000d496:	ed36                	sd	a3,152(sp)

000000008000d498 <.LBB5_11>:
    8000d498:	00019597          	auipc	a1,0x19
    8000d49c:	ba058593          	addi	a1,a1,-1120 # 80026038 <.L__unnamed_13>
    8000d4a0:	0888                	addi	a0,sp,80
    8000d4a2:	0114                	addi	a3,sp,128
    8000d4a4:	4709                	li	a4,2
    8000d4a6:	863a                	mv	a2,a4
    8000d4a8:	ffff8097          	auipc	ra,0xffff8
    8000d4ac:	27c080e7          	jalr	636(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000d4b0:	a009                	j	8000d4b2 <.LBB5_12>

000000008000d4b2 <.LBB5_12>:
    8000d4b2:	00019597          	auipc	a1,0x19
    8000d4b6:	ba658593          	addi	a1,a1,-1114 # 80026058 <.L__unnamed_14>
    8000d4ba:	0888                	addi	a0,sp,80
    8000d4bc:	00014097          	auipc	ra,0x14
    8000d4c0:	87a080e7          	jalr	-1926(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000d4c4:	0000                	unimp
        let blockno = (inum / (IPB as u32)) + sb.inodestart;
    8000d4c6:	6562                	ld	a0,24(sp)
    8000d4c8:	cbaa                	sw	a0,212(sp)
        // println!("[Debug] block number: {}", blockno);
        blockno
    }
    8000d4ca:	60ee                	ld	ra,216(sp)
    8000d4cc:	612d                	addi	sp,sp,224
    8000d4ce:	8082                	ret

000000008000d4d0 <.LBB5_13>:
        let blockno = (inum / (IPB as u32)) + sb.inodestart;
    8000d4d0:	00019517          	auipc	a0,0x19
    8000d4d4:	bc050513          	addi	a0,a0,-1088 # 80026090 <str.1>

000000008000d4d8 <.LBB5_14>:
    8000d4d8:	00019617          	auipc	a2,0x19
    8000d4dc:	b9860613          	addi	a2,a2,-1128 # 80026070 <.L__unnamed_15>
    8000d4e0:	45f1                	li	a1,28
    8000d4e2:	00013097          	auipc	ra,0x13
    8000d4e6:	7e8080e7          	jalr	2024(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs10superblock10SuperBlock14bitmap_blockno17h68c147da5f258aa0E:

000000008000d4ec <_ZN6kernel2fs10superblock10SuperBlock14bitmap_blockno17h68c147da5f258aa0E>:

    /// Given a block number in the disk. 
    /// Returns the relevant block number of the (controlling) bitmap block. 
    pub fn bitmap_blockno(&self, blockno: u32) -> u32 {
    8000d4ec:	7139                	addi	sp,sp,-64
    8000d4ee:	fc06                	sd	ra,56(sp)
    8000d4f0:	862e                	mv	a2,a1
    8000d4f2:	f02a                	sd	a0,32(sp)
    8000d4f4:	d62e                	sw	a1,44(sp)
        let sb = self.read();
    8000d4f6:	ec32                	sd	a2,24(sp)
    8000d4f8:	00000097          	auipc	ra,0x0
    8000d4fc:	e28080e7          	jalr	-472(ra) # 8000d320 <_ZN6kernel2fs10superblock10SuperBlock4read17h568b5866c604dd84E>
    8000d500:	85aa                	mv	a1,a0
    8000d502:	f82a                	sd	a0,48(sp)
    8000d504:	e82e                	sd	a1,16(sp)
    8000d506:	a009                	j	8000d508 <_ZN6kernel2fs10superblock10SuperBlock14bitmap_blockno17h68c147da5f258aa0E+0x1c>
        (blockno / BPB as u32) + sb.bmapstart
    8000d508:	6562                	ld	a0,24(sp)
    8000d50a:	00d5559b          	srliw	a1,a0,0xd
    8000d50e:	6642                	ld	a2,16(sp)
    8000d510:	01c66683          	lwu	a3,28(a2)
    8000d514:	95b6                	add	a1,a1,a3
    8000d516:	02059693          	slli	a3,a1,0x20
    8000d51a:	9281                	srli	a3,a3,0x20
    8000d51c:	e42e                	sd	a1,8(sp)
    8000d51e:	00b69763          	bne	a3,a1,8000d52c <.LBB6_4>
    8000d522:	a009                	j	8000d524 <_ZN6kernel2fs10superblock10SuperBlock14bitmap_blockno17h68c147da5f258aa0E+0x38>
    }
    8000d524:	6522                	ld	a0,8(sp)
    8000d526:	70e2                	ld	ra,56(sp)
    8000d528:	6121                	addi	sp,sp,64
    8000d52a:	8082                	ret

000000008000d52c <.LBB6_4>:
        (blockno / BPB as u32) + sb.bmapstart
    8000d52c:	00019517          	auipc	a0,0x19
    8000d530:	b6450513          	addi	a0,a0,-1180 # 80026090 <str.1>

000000008000d534 <.LBB6_5>:
    8000d534:	00019617          	auipc	a2,0x19
    8000d538:	b7c60613          	addi	a2,a2,-1156 # 800260b0 <.L__unnamed_16>
    8000d53c:	45f1                	li	a1,28
    8000d53e:	00013097          	auipc	ra,0x13
    8000d542:	78c080e7          	jalr	1932(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE:

000000008000d548 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE>:
    fn allocate_in(capacity: usize, init: AllocInit, alloc: A) -> Self {
    8000d548:	7151                	addi	sp,sp,-240
    8000d54a:	f586                	sd	ra,232(sp)
    8000d54c:	862e                	mv	a2,a1
    8000d54e:	04b107a3          	sb	a1,79(sp)
    8000d552:	f92a                	sd	a0,176(sp)
        if mem::size_of::<T>() == 0 {
    8000d554:	e0aa                	sd	a0,64(sp)
    8000d556:	a009                	j	8000d558 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x10>
    8000d558:	4505                	li	a0,1
    8000d55a:	e909                	bnez	a0,8000d56c <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x24>
    8000d55c:	a009                	j	8000d55e <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x16>
            Self::new_in(alloc)
    8000d55e:	00000097          	auipc	ra,0x0
    8000d562:	276080e7          	jalr	630(ra) # 8000d7d4 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hea787fd92fb529dcE>
    8000d566:	ecaa                	sd	a0,88(sp)
    8000d568:	f0ae                	sd	a1,96(sp)
    8000d56a:	a809                	j	8000d57c <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x34>
            let layout = match Layout::array::<T>(capacity) {
    8000d56c:	6506                	ld	a0,64(sp)
    8000d56e:	00004097          	auipc	ra,0x4
    8000d572:	2e2080e7          	jalr	738(ra) # 80011850 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E>
    8000d576:	fcaa                	sd	a0,120(sp)
    8000d578:	e12e                	sd	a1,128(sp)
    8000d57a:	a011                	j	8000d57e <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x36>
        if mem::size_of::<T>() == 0 {
    8000d57c:	aa11                	j	8000d690 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x148>
                Ok(layout) => layout,
    8000d57e:	650a                	ld	a0,128(sp)
    8000d580:	00153593          	seqz	a1,a0
    8000d584:	4601                	li	a2,0
    8000d586:	00c51963          	bne	a0,a2,8000d598 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x50>
    8000d58a:	a009                	j	8000d58c <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x44>
                Err(_) => capacity_overflow(),
    8000d58c:	00013097          	auipc	ra,0x13
    8000d590:	50e080e7          	jalr	1294(ra) # 80020a9a <_ZN5alloc7raw_vec17capacity_overflow17h81167f6233698fbeE>
    8000d594:	0000                	unimp
            let layout = match Layout::array::<T>(capacity) {
    8000d596:	0000                	unimp
                Ok(layout) => layout,
    8000d598:	7566                	ld	a0,120(sp)
    8000d59a:	658a                	ld	a1,128(sp)
    8000d59c:	fd2a                	sd	a0,184(sp)
    8000d59e:	e1ae                	sd	a1,192(sp)
    8000d5a0:	f4aa                	sd	a0,104(sp)
    8000d5a2:	f8ae                	sd	a1,112(sp)
    8000d5a4:	10a8                	addi	a0,sp,104
            match alloc_guard(layout.size()) {
    8000d5a6:	ffff8097          	auipc	ra,0xffff8
    8000d5aa:	fce080e7          	jalr	-50(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    8000d5ae:	fc2a                	sd	a0,56(sp)
    8000d5b0:	a009                	j	8000d5b2 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x6a>
    8000d5b2:	0128                	addi	a0,sp,136
    8000d5b4:	75e2                	ld	a1,56(sp)
    8000d5b6:	ffff5097          	auipc	ra,0xffff5
    8000d5ba:	894080e7          	jalr	-1900(ra) # 80001e4a <_ZN5alloc7raw_vec11alloc_guard17h9a08200daba46f5bE>
    8000d5be:	a009                	j	8000d5c0 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x78>
                Ok(_) => {}
    8000d5c0:	652a                	ld	a0,136(sp)
    8000d5c2:	4581                	li	a1,0
    8000d5c4:	00b50963          	beq	a0,a1,8000d5d6 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x8e>
    8000d5c8:	a009                	j	8000d5ca <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x82>
                Err(_) => capacity_overflow(),
    8000d5ca:	00013097          	auipc	ra,0x13
    8000d5ce:	4d0080e7          	jalr	1232(ra) # 80020a9a <_ZN5alloc7raw_vec17capacity_overflow17h81167f6233698fbeE>
    8000d5d2:	0000                	unimp
            match alloc_guard(layout.size()) {
    8000d5d4:	0000                	unimp
                AllocInit::Uninitialized => alloc.allocate(layout),
    8000d5d6:	04f14503          	lbu	a0,79(sp)
    8000d5da:	8905                	andi	a0,a0,1
    8000d5dc:	4581                	li	a1,0
    8000d5de:	00b50e63          	beq	a0,a1,8000d5fa <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0xb2>
    8000d5e2:	a009                	j	8000d5e4 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x9c>
                AllocInit::Zeroed => alloc.allocate_zeroed(layout),
    8000d5e4:	75a6                	ld	a1,104(sp)
    8000d5e6:	7646                	ld	a2,112(sp)
    8000d5e8:	0888                	addi	a0,sp,80
    8000d5ea:	ffffa097          	auipc	ra,0xffffa
    8000d5ee:	20e080e7          	jalr	526(ra) # 800077f8 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E>
    8000d5f2:	f12a                	sd	a0,160(sp)
    8000d5f4:	f52e                	sd	a1,168(sp)
    8000d5f6:	a829                	j	8000d610 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0xc8>
            let result = match init {
    8000d5f8:	0000                	unimp
                AllocInit::Uninitialized => alloc.allocate(layout),
    8000d5fa:	75a6                	ld	a1,104(sp)
    8000d5fc:	7646                	ld	a2,112(sp)
    8000d5fe:	0888                	addi	a0,sp,80
    8000d600:	ffffa097          	auipc	ra,0xffffa
    8000d604:	21c080e7          	jalr	540(ra) # 8000781c <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h3a2e227bff0b90ccE>
    8000d608:	f12a                	sd	a0,160(sp)
    8000d60a:	f52e                	sd	a1,168(sp)
    8000d60c:	a009                	j	8000d60e <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0xc6>
            let result = match init {
    8000d60e:	a011                	j	8000d612 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0xca>
    8000d610:	a009                	j	8000d612 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0xca>
                Ok(ptr) => ptr,
    8000d612:	750a                	ld	a0,160(sp)
    8000d614:	00153593          	seqz	a1,a0
    8000d618:	4601                	li	a2,0
    8000d61a:	00c51b63          	bne	a0,a2,8000d630 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0xe8>
    8000d61e:	a009                	j	8000d620 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0xd8>
                Err(_) => handle_alloc_error(layout),
    8000d620:	7526                	ld	a0,104(sp)
    8000d622:	75c6                	ld	a1,112(sp)
    8000d624:	00013097          	auipc	ra,0x13
    8000d628:	45a080e7          	jalr	1114(ra) # 80020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>
    8000d62c:	0000                	unimp
            let ptr = match result {
    8000d62e:	0000                	unimp
                Ok(ptr) => ptr,
    8000d630:	750a                	ld	a0,160(sp)
    8000d632:	75aa                	ld	a1,168(sp)
    8000d634:	e5aa                	sd	a0,200(sp)
    8000d636:	e9ae                	sd	a1,208(sp)
    8000d638:	edaa                	sd	a0,216(sp)
    8000d63a:	f1ae                	sd	a1,224(sp)
                ptr: unsafe { Unique::new_unchecked(ptr.cast().as_ptr()) },
    8000d63c:	f82a                	sd	a0,48(sp)
    8000d63e:	f42e                	sd	a1,40(sp)
    8000d640:	ffff7097          	auipc	ra,0xffff7
    8000d644:	566080e7          	jalr	1382(ra) # 80004ba6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h49f58a917cc8c3cbE>
    8000d648:	f02a                	sd	a0,32(sp)
    8000d64a:	a009                	j	8000d64c <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x104>
    8000d64c:	7502                	ld	a0,32(sp)
    8000d64e:	ffff7097          	auipc	ra,0xffff7
    8000d652:	65e080e7          	jalr	1630(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    8000d656:	ec2a                	sd	a0,24(sp)
    8000d658:	a009                	j	8000d65a <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x112>
    8000d65a:	6562                	ld	a0,24(sp)
    8000d65c:	ffff5097          	auipc	ra,0xffff5
    8000d660:	872080e7          	jalr	-1934(ra) # 80001ece <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd13d4ecee2f6992cE>
    8000d664:	e82a                	sd	a0,16(sp)
    8000d666:	a009                	j	8000d668 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x120>
                cap: Self::capacity_from_bytes(ptr.len()),
    8000d668:	7542                	ld	a0,48(sp)
    8000d66a:	75a2                	ld	a1,40(sp)
    8000d66c:	ffff7097          	auipc	ra,0xffff7
    8000d670:	758080e7          	jalr	1880(ra) # 80004dc4 <_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h7daf78a77412b479E>
    8000d674:	e42a                	sd	a0,8(sp)
    8000d676:	a009                	j	8000d678 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x130>
    8000d678:	6522                	ld	a0,8(sp)
    8000d67a:	00000097          	auipc	ra,0x0
    8000d67e:	0ea080e7          	jalr	234(ra) # 8000d764 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc14f6949927a2558E>
    8000d682:	e02a                	sd	a0,0(sp)
    8000d684:	a009                	j	8000d686 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x13e>
            Self {
    8000d686:	6542                	ld	a0,16(sp)
    8000d688:	ecaa                	sd	a0,88(sp)
    8000d68a:	6582                	ld	a1,0(sp)
    8000d68c:	f0ae                	sd	a1,96(sp)
        if mem::size_of::<T>() == 0 {
    8000d68e:	a009                	j	8000d690 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE+0x148>
    }
    8000d690:	6566                	ld	a0,88(sp)
    8000d692:	7586                	ld	a1,96(sp)
    8000d694:	70ae                	ld	ra,232(sp)
    8000d696:	616d                	addi	sp,sp,240
    8000d698:	8082                	ret

Disassembly of section .text._ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E:

000000008000d69a <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E>:
    fn current_memory(&self) -> Option<(NonNull<u8>, Layout)> {
    8000d69a:	7175                	addi	sp,sp,-144
    8000d69c:	e506                	sd	ra,136(sp)
    8000d69e:	ecae                	sd	a1,88(sp)
        if mem::size_of::<T>() == 0 || self.cap == 0 {
    8000d6a0:	f82e                	sd	a1,48(sp)
    8000d6a2:	f42a                	sd	a0,40(sp)
    8000d6a4:	a025                	j	8000d6cc <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x32>
    8000d6a6:	4505                	li	a0,1
    8000d6a8:	02a10fa3          	sb	a0,63(sp)
    8000d6ac:	a819                	j	8000d6c2 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x28>
    8000d6ae:	4501                	li	a0,0
    8000d6b0:	02a10fa3          	sb	a0,63(sp)
    8000d6b4:	a039                	j	8000d6c2 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x28>
    8000d6b6:	7542                	ld	a0,48(sp)
    8000d6b8:	650c                	ld	a1,8(a0)
    8000d6ba:	4601                	li	a2,0
    8000d6bc:	fec585e3          	beq	a1,a2,8000d6a6 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0xc>
    8000d6c0:	b7fd                	j	8000d6ae <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x14>
    8000d6c2:	03f14503          	lbu	a0,63(sp)
    8000d6c6:	8905                	andi	a0,a0,1
    8000d6c8:	e509                	bnez	a0,8000d6d2 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x38>
    8000d6ca:	a801                	j	8000d6da <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x40>
    8000d6cc:	4501                	li	a0,0
    8000d6ce:	fd61                	bnez	a0,8000d6a6 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0xc>
    8000d6d0:	b7dd                	j	8000d6b6 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x1c>
    8000d6d2:	4501                	li	a0,0
            None
    8000d6d4:	75a2                	ld	a1,40(sp)
    8000d6d6:	e188                	sd	a0,0(a1)
        if mem::size_of::<T>() == 0 || self.cap == 0 {
    8000d6d8:	a08d                	j	8000d73a <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0xa0>
    8000d6da:	4505                	li	a0,1
    8000d6dc:	e12a                	sd	a0,128(sp)
                let align = mem::align_of::<T>();
    8000d6de:	f0aa                	sd	a0,96(sp)
    8000d6e0:	f02a                	sd	a0,32(sp)
    8000d6e2:	a009                	j	8000d6e4 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x4a>
                let size = mem::size_of::<T>() * self.cap;
    8000d6e4:	a009                	j	8000d6e6 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x4c>
    8000d6e6:	7542                	ld	a0,48(sp)
    8000d6e8:	650c                	ld	a1,8(a0)
    8000d6ea:	f4ae                	sd	a1,104(sp)
                let layout = Layout::from_size_align_unchecked(size, align);
    8000d6ec:	852e                	mv	a0,a1
    8000d6ee:	7582                	ld	a1,32(sp)
    8000d6f0:	ffff8097          	auipc	ra,0xffff8
    8000d6f4:	e5e080e7          	jalr	-418(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    8000d6f8:	862a                	mv	a2,a0
    8000d6fa:	86ae                	mv	a3,a1
    8000d6fc:	f8aa                	sd	a0,112(sp)
    8000d6fe:	fcae                	sd	a1,120(sp)
    8000d700:	ec32                	sd	a2,24(sp)
    8000d702:	e836                	sd	a3,16(sp)
    8000d704:	a009                	j	8000d706 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x6c>
                Some((self.ptr.cast().into(), layout))
    8000d706:	7542                	ld	a0,48(sp)
    8000d708:	6108                	ld	a0,0(a0)
    8000d70a:	ffff5097          	auipc	ra,0xffff5
    8000d70e:	800080e7          	jalr	-2048(ra) # 80001f0a <_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5d32a83f44028c26E>
    8000d712:	e42a                	sd	a0,8(sp)
    8000d714:	a009                	j	8000d716 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x7c>
    8000d716:	6522                	ld	a0,8(sp)
    8000d718:	ffff5097          	auipc	ra,0xffff5
    8000d71c:	940080e7          	jalr	-1728(ra) # 80002058 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he3a5d381a0afee04E>
    8000d720:	e02a                	sd	a0,0(sp)
    8000d722:	a009                	j	8000d724 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0x8a>
    8000d724:	6502                	ld	a0,0(sp)
    8000d726:	e0aa                	sd	a0,64(sp)
    8000d728:	65e2                	ld	a1,24(sp)
    8000d72a:	e4ae                	sd	a1,72(sp)
    8000d72c:	6642                	ld	a2,16(sp)
    8000d72e:	e8b2                	sd	a2,80(sp)
    8000d730:	76a2                	ld	a3,40(sp)
    8000d732:	ea90                	sd	a2,16(a3)
    8000d734:	e68c                	sd	a1,8(a3)
    8000d736:	e288                	sd	a0,0(a3)
        if mem::size_of::<T>() == 0 || self.cap == 0 {
    8000d738:	a009                	j	8000d73a <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66f396f4447bf8e5E+0xa0>
    }
    8000d73a:	60aa                	ld	ra,136(sp)
    8000d73c:	6149                	addi	sp,sp,144
    8000d73e:	8082                	ret

Disassembly of section .text._ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h84bebe009e8aacedE:

000000008000d740 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h84bebe009e8aacedE>:
    pub fn with_capacity_in(capacity: usize, alloc: A) -> Self {
    8000d740:	7179                	addi	sp,sp,-48
    8000d742:	f406                	sd	ra,40(sp)
    8000d744:	ec2a                	sd	a0,24(sp)
    8000d746:	4581                	li	a1,0
        Self::allocate_in(capacity, AllocInit::Uninitialized, alloc)
    8000d748:	00b10ba3          	sb	a1,23(sp)
    8000d74c:	00000097          	auipc	ra,0x0
    8000d750:	dfc080e7          	jalr	-516(ra) # 8000d548 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE>
    8000d754:	e42a                	sd	a0,8(sp)
    8000d756:	e02e                	sd	a1,0(sp)
    8000d758:	a009                	j	8000d75a <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h84bebe009e8aacedE+0x1a>
    }
    8000d75a:	6522                	ld	a0,8(sp)
    8000d75c:	6582                	ld	a1,0(sp)
    8000d75e:	70a2                	ld	ra,40(sp)
    8000d760:	6145                	addi	sp,sp,48
    8000d762:	8082                	ret

Disassembly of section .text._ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc14f6949927a2558E:

000000008000d764 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc14f6949927a2558E>:
    fn capacity_from_bytes(excess: usize) -> usize {
    8000d764:	1141                	addi	sp,sp,-16
    8000d766:	e42a                	sd	a0,8(sp)
        excess / mem::size_of::<T>()
    8000d768:	e02a                	sd	a0,0(sp)
    8000d76a:	a009                	j	8000d76c <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc14f6949927a2558E+0x8>
    8000d76c:	4501                	li	a0,0
    8000d76e:	e509                	bnez	a0,8000d778 <.LBB3_4>
    8000d770:	a009                	j	8000d772 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc14f6949927a2558E+0xe>
    }
    8000d772:	6502                	ld	a0,0(sp)
    8000d774:	0141                	addi	sp,sp,16
    8000d776:	8082                	ret

000000008000d778 <.LBB3_4>:
        excess / mem::size_of::<T>()
    8000d778:	00019517          	auipc	a0,0x19
    8000d77c:	9e850513          	addi	a0,a0,-1560 # 80026160 <str.0>

000000008000d780 <.LBB3_5>:
    8000d780:	00019617          	auipc	a2,0x19
    8000d784:	9c060613          	addi	a2,a2,-1600 # 80026140 <.L__unnamed_1>
    8000d788:	45e5                	li	a1,25
    8000d78a:	00013097          	auipc	ra,0x13
    8000d78e:	540080e7          	jalr	1344(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17h4bd9c32afe211d8dE:

000000008000d794 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17h4bd9c32afe211d8dE>:
    pub fn with_capacity_zeroed_in(capacity: usize, alloc: A) -> Self {
    8000d794:	7179                	addi	sp,sp,-48
    8000d796:	f406                	sd	ra,40(sp)
    8000d798:	ec2a                	sd	a0,24(sp)
    8000d79a:	4585                	li	a1,1
        Self::allocate_in(capacity, AllocInit::Zeroed, alloc)
    8000d79c:	00b10ba3          	sb	a1,23(sp)
    8000d7a0:	00000097          	auipc	ra,0x0
    8000d7a4:	da8080e7          	jalr	-600(ra) # 8000d548 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h8292b1d579daa63aE>
    8000d7a8:	e42a                	sd	a0,8(sp)
    8000d7aa:	e02e                	sd	a1,0(sp)
    8000d7ac:	a009                	j	8000d7ae <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17h4bd9c32afe211d8dE+0x1a>
    }
    8000d7ae:	6522                	ld	a0,8(sp)
    8000d7b0:	6582                	ld	a1,0(sp)
    8000d7b2:	70a2                	ld	ra,40(sp)
    8000d7b4:	6145                	addi	sp,sp,48
    8000d7b6:	8082                	ret

Disassembly of section .text._ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h350ff0af36b6e646E:

000000008000d7b8 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h350ff0af36b6e646E>:
    pub fn ptr(&self) -> *mut T {
    8000d7b8:	1101                	addi	sp,sp,-32
    8000d7ba:	ec06                	sd	ra,24(sp)
    8000d7bc:	e82a                	sd	a0,16(sp)
        self.ptr.as_ptr()
    8000d7be:	6108                	ld	a0,0(a0)
    8000d7c0:	ffff4097          	auipc	ra,0xffff4
    8000d7c4:	7fa080e7          	jalr	2042(ra) # 80001fba <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9897251b4a8edbceE>
    8000d7c8:	e42a                	sd	a0,8(sp)
    8000d7ca:	a009                	j	8000d7cc <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h350ff0af36b6e646E+0x14>
    }
    8000d7cc:	6522                	ld	a0,8(sp)
    8000d7ce:	60e2                	ld	ra,24(sp)
    8000d7d0:	6105                	addi	sp,sp,32
    8000d7d2:	8082                	ret

Disassembly of section .text._ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hea787fd92fb529dcE:

000000008000d7d4 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hea787fd92fb529dcE>:
    pub const fn new_in(alloc: A) -> Self {
    8000d7d4:	7179                	addi	sp,sp,-48
        Self { ptr: Unique::dangling(), cap: 0, alloc }
    8000d7d6:	f406                	sd	ra,40(sp)
    8000d7d8:	ffff5097          	auipc	ra,0xffff5
    8000d7dc:	85e080e7          	jalr	-1954(ra) # 80002036 <_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he5815a65a6879de1E>
    8000d7e0:	e42a                	sd	a0,8(sp)
    8000d7e2:	a009                	j	8000d7e4 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hea787fd92fb529dcE+0x10>
    8000d7e4:	6522                	ld	a0,8(sp)
    8000d7e6:	e82a                	sd	a0,16(sp)
    8000d7e8:	4581                	li	a1,0
    8000d7ea:	ec2e                	sd	a1,24(sp)
    }
    8000d7ec:	70a2                	ld	ra,40(sp)
    8000d7ee:	6145                	addi	sp,sp,48
    8000d7f0:	8082                	ret

Disassembly of section .text._ZN6kernel8register3sip4read17hb33a622b171f4e4eE:

000000008000d7f2 <_ZN6kernel8register3sip4read17hb33a622b171f4e4eE>:
// Supervisor Interrupt Pending

const SSIP: usize = 1 << 1;

#[inline]
pub unsafe fn read() -> usize {
    8000d7f2:	1141                	addi	sp,sp,-16
    let sip: usize;
    llvm_asm!("csrr $0, sip":"=r"(sip):::"volatile");
    8000d7f4:	14402573          	csrr	a0,sip
    8000d7f8:	e42a                	sd	a0,8(sp)
    sip
}
    8000d7fa:	0141                	addi	sp,sp,16
    8000d7fc:	8082                	ret

Disassembly of section .text._ZN6kernel8register3sip5write17hfaeb15853d0ca07bE:

000000008000d7fe <_ZN6kernel8register3sip5write17hfaeb15853d0ca07bE>:

#[inline]
pub unsafe fn write(sip: usize){
    8000d7fe:	1141                	addi	sp,sp,-16
    8000d800:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw sip, $0"::"r"(sip)::"volatile");
    8000d802:	14451073          	csrw	sip,a0
}
    8000d806:	0141                	addi	sp,sp,16
    8000d808:	8082                	ret

Disassembly of section .text._ZN6kernel8register3sip10clear_ssip17hb6becdc966d2cc13E:

000000008000d80a <_ZN6kernel8register3sip10clear_ssip17hb6becdc966d2cc13E>:

pub fn clear_ssip() {
    8000d80a:	1141                	addi	sp,sp,-16
    unsafe {
        write(read() & !SSIP);
    8000d80c:	e406                	sd	ra,8(sp)
    8000d80e:	00000097          	auipc	ra,0x0
    8000d812:	fe4080e7          	jalr	-28(ra) # 8000d7f2 <_ZN6kernel8register3sip4read17hb33a622b171f4e4eE>
    8000d816:	e02a                	sd	a0,0(sp)
    8000d818:	a009                	j	8000d81a <_ZN6kernel8register3sip10clear_ssip17hb6becdc966d2cc13E+0x10>
    8000d81a:	6502                	ld	a0,0(sp)
    8000d81c:	9975                	andi	a0,a0,-3
    8000d81e:	00000097          	auipc	ra,0x0
    8000d822:	fe0080e7          	jalr	-32(ra) # 8000d7fe <_ZN6kernel8register3sip5write17hfaeb15853d0ca07bE>
    8000d826:	a009                	j	8000d828 <_ZN6kernel8register3sip10clear_ssip17hb6becdc966d2cc13E+0x1e>
    }
    8000d828:	60a2                	ld	ra,8(sp)
    8000d82a:	0141                	addi	sp,sp,16
    8000d82c:	8082                	ret

Disassembly of section .text._ZN4core5slice3raw14from_raw_parts17hf229a0694b05997dE:

000000008000d82e <_ZN4core5slice3raw14from_raw_parts17hf229a0694b05997dE>:
/// [valid]: ptr#safety
/// [`NonNull::dangling()`]: ptr::NonNull::dangling
/// [`pointer::offset`]: ../../std/primitive.pointer.html#method.offset
#[inline]
#[stable(feature = "rust1", since = "1.0.0")]
pub unsafe fn from_raw_parts<'a, T>(data: *const T, len: usize) -> &'a [T] {
    8000d82e:	7179                	addi	sp,sp,-48
    8000d830:	f406                	sd	ra,40(sp)
    8000d832:	ec2a                	sd	a0,24(sp)
    8000d834:	f02e                	sd	a1,32(sp)
    debug_assert!(
        mem::size_of::<T>().saturating_mul(len) <= isize::MAX as usize,
        "attempt to create slice covering at least half the address space"
    );
    // SAFETY: the caller must uphold the safety contract for `from_raw_parts`.
    unsafe { &*ptr::slice_from_raw_parts(data, len) }
    8000d836:	00003097          	auipc	ra,0x3
    8000d83a:	e10080e7          	jalr	-496(ra) # 80010646 <_ZN4core3ptr20slice_from_raw_parts17h82de6d4061323479E>
    8000d83e:	e82a                	sd	a0,16(sp)
    8000d840:	e42e                	sd	a1,8(sp)
    8000d842:	a009                	j	8000d844 <_ZN4core5slice3raw14from_raw_parts17hf229a0694b05997dE+0x16>
}
    8000d844:	6542                	ld	a0,16(sp)
    8000d846:	65a2                	ld	a1,8(sp)
    8000d848:	70a2                	ld	ra,40(sp)
    8000d84a:	6145                	addi	sp,sp,48
    8000d84c:	8082                	ret

Disassembly of section .text._ZN4core5slice3raw18from_raw_parts_mut17he4afa4be0aa11357E:

000000008000d84e <_ZN4core5slice3raw18from_raw_parts_mut17he4afa4be0aa11357E>:
/// [valid]: ptr#safety
/// [`NonNull::dangling()`]: ptr::NonNull::dangling
/// [`pointer::offset`]: ../../std/primitive.pointer.html#method.offset
#[inline]
#[stable(feature = "rust1", since = "1.0.0")]
pub unsafe fn from_raw_parts_mut<'a, T>(data: *mut T, len: usize) -> &'a mut [T] {
    8000d84e:	7179                	addi	sp,sp,-48
    8000d850:	f406                	sd	ra,40(sp)
    8000d852:	ec2a                	sd	a0,24(sp)
    8000d854:	f02e                	sd	a1,32(sp)
    debug_assert!(
        mem::size_of::<T>().saturating_mul(len) <= isize::MAX as usize,
        "attempt to create slice covering at least half the address space"
    );
    // SAFETY: the caller must uphold the safety contract for `from_raw_parts_mut`.
    unsafe { &mut *ptr::slice_from_raw_parts_mut(data, len) }
    8000d856:	00013097          	auipc	ra,0x13
    8000d85a:	c78080e7          	jalr	-904(ra) # 800204ce <_ZN4core3ptr24slice_from_raw_parts_mut17h161906cb9cf0f72fE>
    8000d85e:	e82a                	sd	a0,16(sp)
    8000d860:	e42e                	sd	a1,8(sp)
    8000d862:	a009                	j	8000d864 <_ZN4core5slice3raw18from_raw_parts_mut17he4afa4be0aa11357E+0x16>
}
    8000d864:	6542                	ld	a0,16(sp)
    8000d866:	65a2                	ld	a1,8(sp)
    8000d868:	70a2                	ld	ra,40(sp)
    8000d86a:	6145                	addi	sp,sp,48
    8000d86c:	8082                	ret

Disassembly of section .text._ZN4core3mem11size_of_val17hc7b3f68ccec7efc0E:

000000008000d86e <_ZN4core3mem11size_of_val17hc7b3f68ccec7efc0E>:
pub const fn size_of_val<T: ?Sized>(val: &T) -> usize {
    8000d86e:	1101                	addi	sp,sp,-32
    8000d870:	e82a                	sd	a0,16(sp)
    8000d872:	4521                	li	a0,8
    unsafe { intrinsics::size_of_val(val) }
    8000d874:	ec2a                	sd	a0,24(sp)
    8000d876:	e42a                	sd	a0,8(sp)
    8000d878:	a009                	j	8000d87a <_ZN4core3mem11size_of_val17hc7b3f68ccec7efc0E+0xc>
}
    8000d87a:	6522                	ld	a0,8(sp)
    8000d87c:	6105                	addi	sp,sp,32
    8000d87e:	8082                	ret

Disassembly of section .text._ZN4core3mem15size_of_val_raw17h736a7888a7501591E:

000000008000d880 <_ZN4core3mem15size_of_val_raw17h736a7888a7501591E>:
pub const unsafe fn size_of_val_raw<T: ?Sized>(val: *const T) -> usize {
    8000d880:	1101                	addi	sp,sp,-32
    8000d882:	e82a                	sd	a0,16(sp)
    8000d884:	05000513          	li	a0,80
    unsafe { intrinsics::size_of_val(val) }
    8000d888:	ec2a                	sd	a0,24(sp)
    8000d88a:	e42a                	sd	a0,8(sp)
    8000d88c:	a009                	j	8000d88e <_ZN4core3mem15size_of_val_raw17h736a7888a7501591E+0xe>
}
    8000d88e:	6522                	ld	a0,8(sp)
    8000d890:	6105                	addi	sp,sp,32
    8000d892:	8082                	ret

Disassembly of section .text._ZN4core3mem16align_of_val_raw17h760ed152eb7a0f00E:

000000008000d894 <_ZN4core3mem16align_of_val_raw17h760ed152eb7a0f00E>:
/// assert_eq!(4, unsafe { mem::align_of_val_raw(&5i32) });
/// ```
#[inline]
#[unstable(feature = "layout_for_ptr", issue = "69835")]
#[rustc_const_unstable(feature = "const_align_of_val_raw", issue = "46571")]
pub const unsafe fn align_of_val_raw<T: ?Sized>(val: *const T) -> usize {
    8000d894:	1101                	addi	sp,sp,-32
    8000d896:	e82a                	sd	a0,16(sp)
    8000d898:	4521                	li	a0,8
    // SAFETY: the caller must provide a valid raw pointer
    unsafe { intrinsics::min_align_of_val(val) }
    8000d89a:	ec2a                	sd	a0,24(sp)
    8000d89c:	e42a                	sd	a0,8(sp)
    8000d89e:	a009                	j	8000d8a0 <_ZN4core3mem16align_of_val_raw17h760ed152eb7a0f00E+0xc>
}
    8000d8a0:	6522                	ld	a0,8(sp)
    8000d8a2:	6105                	addi	sp,sp,32
    8000d8a4:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h0a38cba4d3d0bfd9E:

000000008000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>:
/// ```
///
/// [`RefCell`]: crate::cell::RefCell
#[inline]
#[stable(feature = "rust1", since = "1.0.0")]
pub fn drop<T>(_x: T) {}
    8000d8a6:	1141                	addi	sp,sp,-16
    8000d8a8:	e406                	sd	ra,8(sp)
    8000d8aa:	e02a                	sd	a0,0(sp)
    8000d8ac:	850a                	mv	a0,sp
    8000d8ae:	ffff9097          	auipc	ra,0xffff9
    8000d8b2:	e8e080e7          	jalr	-370(ra) # 8000673c <_ZN4core3ptr100drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..process..process..ProcMeta$GT$$GT$17h708a1d723b054e11E>
    8000d8b6:	a009                	j	8000d8b8 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E+0x12>
    8000d8b8:	60a2                	ld	ra,8(sp)
    8000d8ba:	0141                	addi	sp,sp,16
    8000d8bc:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h1cf58066601de0feE:

000000008000d8be <_ZN4core3mem4drop17h1cf58066601de0feE>:
    8000d8be:	7139                	addi	sp,sp,-64
    8000d8c0:	fc06                	sd	ra,56(sp)
    8000d8c2:	862e                	mv	a2,a1
    8000d8c4:	86aa                	mv	a3,a0
    8000d8c6:	f02a                	sd	a0,32(sp)
    8000d8c8:	f42e                	sd	a1,40(sp)
    8000d8ca:	e82a                	sd	a0,16(sp)
    8000d8cc:	ec2e                	sd	a1,24(sp)
    8000d8ce:	0808                	addi	a0,sp,16
    8000d8d0:	e432                	sd	a2,8(sp)
    8000d8d2:	e036                	sd	a3,0(sp)
    8000d8d4:	ffff9097          	auipc	ra,0xffff9
    8000d8d8:	f82080e7          	jalr	-126(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8000d8dc:	a009                	j	8000d8de <_ZN4core3mem4drop17h1cf58066601de0feE+0x20>
    8000d8de:	70e2                	ld	ra,56(sp)
    8000d8e0:	6121                	addi	sp,sp,64
    8000d8e2:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h2dcac54f95a3a8e1E:

000000008000d8e4 <_ZN4core3mem4drop17h2dcac54f95a3a8e1E>:
    8000d8e4:	1141                	addi	sp,sp,-16
    8000d8e6:	e42a                	sd	a0,8(sp)
    8000d8e8:	a009                	j	8000d8ea <_ZN4core3mem4drop17h2dcac54f95a3a8e1E+0x6>
    8000d8ea:	0141                	addi	sp,sp,16
    8000d8ec:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h34c68ca7c6ebe63bE:

000000008000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>:
    8000d8ee:	1141                	addi	sp,sp,-16
    8000d8f0:	e406                	sd	ra,8(sp)
    8000d8f2:	e02a                	sd	a0,0(sp)
    8000d8f4:	850a                	mv	a0,sp
    8000d8f6:	ffff9097          	auipc	ra,0xffff9
    8000d8fa:	048080e7          	jalr	72(ra) # 8000693e <_ZN4core3ptr74drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$LP$$RP$$GT$$GT$17hf87d4bd211c4ab98E>
    8000d8fe:	a009                	j	8000d900 <_ZN4core3mem4drop17h34c68ca7c6ebe63bE+0x12>
    8000d900:	60a2                	ld	ra,8(sp)
    8000d902:	0141                	addi	sp,sp,16
    8000d904:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h393d54ea566b7dd7E:

000000008000d906 <_ZN4core3mem4drop17h393d54ea566b7dd7E>:
    8000d906:	1141                	addi	sp,sp,-16
    8000d908:	e42a                	sd	a0,8(sp)
    8000d90a:	a009                	j	8000d90c <_ZN4core3mem4drop17h393d54ea566b7dd7E+0x6>
    8000d90c:	0141                	addi	sp,sp,16
    8000d90e:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h401f953ffa3efa2cE:

000000008000d910 <_ZN4core3mem4drop17h401f953ffa3efa2cE>:
    8000d910:	1141                	addi	sp,sp,-16
    8000d912:	e42a                	sd	a0,8(sp)
    8000d914:	a009                	j	8000d916 <_ZN4core3mem4drop17h401f953ffa3efa2cE+0x6>
    8000d916:	0141                	addi	sp,sp,16
    8000d918:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h4a75b27d9f12246bE:

000000008000d91a <_ZN4core3mem4drop17h4a75b27d9f12246bE>:
    8000d91a:	1141                	addi	sp,sp,-16
    8000d91c:	85aa                	mv	a1,a0
    8000d91e:	00a107a3          	sb	a0,15(sp)
    8000d922:	a009                	j	8000d924 <_ZN4core3mem4drop17h4a75b27d9f12246bE+0xa>
    8000d924:	0141                	addi	sp,sp,16
    8000d926:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h5cfedcef037f9974E:

000000008000d928 <_ZN4core3mem4drop17h5cfedcef037f9974E>:
    8000d928:	1141                	addi	sp,sp,-16
    8000d92a:	e406                	sd	ra,8(sp)
    8000d92c:	e02a                	sd	a0,0(sp)
    8000d92e:	850a                	mv	a0,sp
    8000d930:	ffff9097          	auipc	ra,0xffff9
    8000d934:	060080e7          	jalr	96(ra) # 80006990 <_ZN4core3ptr86drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..log..Log$GT$$GT$17hd96a256307aab26dE>
    8000d938:	a009                	j	8000d93a <_ZN4core3mem4drop17h5cfedcef037f9974E+0x12>
    8000d93a:	60a2                	ld	ra,8(sp)
    8000d93c:	0141                	addi	sp,sp,16
    8000d93e:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h6097269dfa89368aE:

000000008000d940 <_ZN4core3mem4drop17h6097269dfa89368aE>:
    8000d940:	1141                	addi	sp,sp,-16
    8000d942:	e406                	sd	ra,8(sp)
    8000d944:	e02a                	sd	a0,0(sp)
    8000d946:	850a                	mv	a0,sp
    8000d948:	ffff9097          	auipc	ra,0xffff9
    8000d94c:	0d4080e7          	jalr	212(ra) # 80006a1c <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..pipe..PipeGuard$GT$$GT$17hc0094ed0be314ca3E>
    8000d950:	a009                	j	8000d952 <_ZN4core3mem4drop17h6097269dfa89368aE+0x12>
    8000d952:	60a2                	ld	ra,8(sp)
    8000d954:	0141                	addi	sp,sp,16
    8000d956:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h786520b567300594E:

000000008000d958 <_ZN4core3mem4drop17h786520b567300594E>:
    8000d958:	1141                	addi	sp,sp,-16
    8000d95a:	e42a                	sd	a0,8(sp)
    8000d95c:	a009                	j	8000d95e <_ZN4core3mem4drop17h786520b567300594E+0x6>
    8000d95e:	0141                	addi	sp,sp,16
    8000d960:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h86a83be12120d5d5E:

000000008000d962 <_ZN4core3mem4drop17h86a83be12120d5d5E>:
    8000d962:	1141                	addi	sp,sp,-16
    8000d964:	e406                	sd	ra,8(sp)
    8000d966:	e02a                	sd	a0,0(sp)
    8000d968:	850a                	mv	a0,sp
    8000d96a:	ffff9097          	auipc	ra,0xffff9
    8000d96e:	068080e7          	jalr	104(ra) # 800069d2 <_ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E>
    8000d972:	a009                	j	8000d974 <_ZN4core3mem4drop17h86a83be12120d5d5E+0x12>
    8000d974:	60a2                	ld	ra,8(sp)
    8000d976:	0141                	addi	sp,sp,16
    8000d978:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h8799ff770ebf2dd0E:

000000008000d97a <_ZN4core3mem4drop17h8799ff770ebf2dd0E>:
    8000d97a:	1141                	addi	sp,sp,-16
    8000d97c:	e406                	sd	ra,8(sp)
    8000d97e:	e02a                	sd	a0,0(sp)
    8000d980:	850a                	mv	a0,sp
    8000d982:	ffff9097          	auipc	ra,0xffff9
    8000d986:	100080e7          	jalr	256(ra) # 80006a82 <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..driver..virtio_disk..Disk$GT$$GT$17h3a869af89cb88c7dE>
    8000d98a:	a009                	j	8000d98c <_ZN4core3mem4drop17h8799ff770ebf2dd0E+0x12>
    8000d98c:	60a2                	ld	ra,8(sp)
    8000d98e:	0141                	addi	sp,sp,16
    8000d990:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17h990170634f1eb794E:

000000008000d992 <_ZN4core3mem4drop17h990170634f1eb794E>:
    8000d992:	1141                	addi	sp,sp,-16
    8000d994:	e406                	sd	ra,8(sp)
    8000d996:	ffff9097          	auipc	ra,0xffff9
    8000d99a:	e9a080e7          	jalr	-358(ra) # 80006830 <_ZN4core3ptr41drop_in_place$LT$kernel..fs..bio..Buf$GT$17h1d3a39863b90b2abE>
    8000d99e:	a009                	j	8000d9a0 <_ZN4core3mem4drop17h990170634f1eb794E+0xe>
    8000d9a0:	60a2                	ld	ra,8(sp)
    8000d9a2:	0141                	addi	sp,sp,16
    8000d9a4:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17ha8580e789fd6e9b5E:

000000008000d9a6 <_ZN4core3mem4drop17ha8580e789fd6e9b5E>:
    8000d9a6:	1101                	addi	sp,sp,-32
    8000d9a8:	ec06                	sd	ra,24(sp)
    8000d9aa:	e42a                	sd	a0,8(sp)
    8000d9ac:	e82e                	sd	a1,16(sp)
    8000d9ae:	0028                	addi	a0,sp,8
    8000d9b0:	ffff9097          	auipc	ra,0xffff9
    8000d9b4:	e44080e7          	jalr	-444(ra) # 800067f4 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..bio..BufData$GT$$GT$$GT$17h12cfd51edcc4550fE>
    8000d9b8:	a009                	j	8000d9ba <_ZN4core3mem4drop17ha8580e789fd6e9b5E+0x14>
    8000d9ba:	60e2                	ld	ra,24(sp)
    8000d9bc:	6105                	addi	sp,sp,32
    8000d9be:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17had97cca8cfd828beE:

000000008000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>:
    8000d9c0:	1101                	addi	sp,sp,-32
    8000d9c2:	ec06                	sd	ra,24(sp)
    8000d9c4:	e42a                	sd	a0,8(sp)
    8000d9c6:	e82e                	sd	a1,16(sp)
    8000d9c8:	0028                	addi	a0,sp,8
    8000d9ca:	ffff9097          	auipc	ra,0xffff9
    8000d9ce:	08c080e7          	jalr	140(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    8000d9d2:	a009                	j	8000d9d4 <_ZN4core3mem4drop17had97cca8cfd828beE+0x14>
    8000d9d4:	60e2                	ld	ra,24(sp)
    8000d9d6:	6105                	addi	sp,sp,32
    8000d9d8:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17hb46a08cef9bf9f0dE:

000000008000d9da <_ZN4core3mem4drop17hb46a08cef9bf9f0dE>:
    8000d9da:	1141                	addi	sp,sp,-16
    8000d9dc:	e406                	sd	ra,8(sp)
    8000d9de:	e02a                	sd	a0,0(sp)
    8000d9e0:	850a                	mv	a0,sp
    8000d9e2:	ffff9097          	auipc	ra,0xffff9
    8000d9e6:	f20080e7          	jalr	-224(ra) # 80006902 <_ZN4core3ptr71drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$usize$GT$$GT$17hb2e18bebf123fd09E>
    8000d9ea:	a009                	j	8000d9ec <_ZN4core3mem4drop17hb46a08cef9bf9f0dE+0x12>
    8000d9ec:	60a2                	ld	ra,8(sp)
    8000d9ee:	0141                	addi	sp,sp,16
    8000d9f0:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17hc7855bb71645f11bE:

000000008000d9f2 <_ZN4core3mem4drop17hc7855bb71645f11bE>:
    8000d9f2:	1141                	addi	sp,sp,-16
    8000d9f4:	e406                	sd	ra,8(sp)
    8000d9f6:	e02a                	sd	a0,0(sp)
    8000d9f8:	850a                	mv	a0,sp
    8000d9fa:	ffff9097          	auipc	ra,0xffff9
    8000d9fe:	00c080e7          	jalr	12(ra) # 80006a06 <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..uart..Uart$GT$$GT$17h54382ef7f7dfed0fE>
    8000da02:	a009                	j	8000da04 <_ZN4core3mem4drop17hc7855bb71645f11bE+0x12>
    8000da04:	60a2                	ld	ra,8(sp)
    8000da06:	0141                	addi	sp,sp,16
    8000da08:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17hc9b81b24632c5a18E:

000000008000da0a <_ZN4core3mem4drop17hc9b81b24632c5a18E>:
    8000da0a:	1141                	addi	sp,sp,-16
    8000da0c:	e406                	sd	ra,8(sp)
    8000da0e:	e02a                	sd	a0,0(sp)
    8000da10:	850a                	mv	a0,sp
    8000da12:	ffff9097          	auipc	ra,0xffff9
    8000da16:	faa080e7          	jalr	-86(ra) # 800069bc <_ZN4core3ptr89drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..fs..bio..BufLru$GT$$GT$17heb8f06842278fadcE>
    8000da1a:	a009                	j	8000da1c <_ZN4core3mem4drop17hc9b81b24632c5a18E+0x12>
    8000da1c:	60a2                	ld	ra,8(sp)
    8000da1e:	0141                	addi	sp,sp,16
    8000da20:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17hd3799cf7dfa4d984E:

000000008000da22 <_ZN4core3mem4drop17hd3799cf7dfa4d984E>:
    8000da22:	1141                	addi	sp,sp,-16
    8000da24:	e42a                	sd	a0,8(sp)
    8000da26:	a009                	j	8000da28 <_ZN4core3mem4drop17hd3799cf7dfa4d984E+0x6>
    8000da28:	0141                	addi	sp,sp,16
    8000da2a:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17hd75cbe4ca3ddce07E:

000000008000da2c <_ZN4core3mem4drop17hd75cbe4ca3ddce07E>:
    8000da2c:	1141                	addi	sp,sp,-16
    8000da2e:	e406                	sd	ra,8(sp)
    8000da30:	e02a                	sd	a0,0(sp)
    8000da32:	850a                	mv	a0,sp
    8000da34:	ffff9097          	auipc	ra,0xffff9
    8000da38:	d1e080e7          	jalr	-738(ra) # 80006752 <_ZN4core3ptr116drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$u5b$kernel..fs..inode..InodeMeta$u3b$$u20$50$u5d$$GT$$GT$17hfc695816f935467aE>
    8000da3c:	a009                	j	8000da3e <_ZN4core3mem4drop17hd75cbe4ca3ddce07E+0x12>
    8000da3e:	60a2                	ld	ra,8(sp)
    8000da40:	0141                	addi	sp,sp,16
    8000da42:	8082                	ret

Disassembly of section .text._ZN4core3mem4drop17he87ffc0238a1a8c3E:

000000008000da44 <_ZN4core3mem4drop17he87ffc0238a1a8c3E>:
    8000da44:	1141                	addi	sp,sp,-16
    8000da46:	e406                	sd	ra,8(sp)
    8000da48:	e02a                	sd	a0,0(sp)
    8000da4a:	850a                	mv	a0,sp
    8000da4c:	ffff9097          	auipc	ra,0xffff9
    8000da50:	ea0080e7          	jalr	-352(ra) # 800068ec <_ZN4core3ptr69drop_in_place$LT$alloc..sync..Weak$LT$kernel..fs..file..VFile$GT$$GT$17h5cb5e17a31abd294E>
    8000da54:	a009                	j	8000da56 <_ZN4core3mem4drop17he87ffc0238a1a8c3E+0x12>
    8000da56:	60a2                	ld	ra,8(sp)
    8000da58:	0141                	addi	sp,sp,16
    8000da5a:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17h17bb70dc75a6eb22E:

000000008000da5c <_ZN4core3mem4swap17h17bb70dc75a6eb22E>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000da5c:	1101                	addi	sp,sp,-32
    8000da5e:	ec06                	sd	ra,24(sp)
    8000da60:	e42a                	sd	a0,8(sp)
    8000da62:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000da64:	00003097          	auipc	ra,0x3
    8000da68:	bf4080e7          	jalr	-1036(ra) # 80010658 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE>
    8000da6c:	a009                	j	8000da6e <_ZN4core3mem4swap17h17bb70dc75a6eb22E+0x12>
}
    8000da6e:	60e2                	ld	ra,24(sp)
    8000da70:	6105                	addi	sp,sp,32
    8000da72:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17h251182471336207aE:

000000008000da74 <_ZN4core3mem4swap17h251182471336207aE>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000da74:	1101                	addi	sp,sp,-32
    8000da76:	ec06                	sd	ra,24(sp)
    8000da78:	e42a                	sd	a0,8(sp)
    8000da7a:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000da7c:	00003097          	auipc	ra,0x3
    8000da80:	d00080e7          	jalr	-768(ra) # 8001077c <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE>
    8000da84:	a009                	j	8000da86 <_ZN4core3mem4swap17h251182471336207aE+0x12>
}
    8000da86:	60e2                	ld	ra,24(sp)
    8000da88:	6105                	addi	sp,sp,32
    8000da8a:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17h574deae8bae3a253E:

000000008000da8c <_ZN4core3mem4swap17h574deae8bae3a253E>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000da8c:	1101                	addi	sp,sp,-32
    8000da8e:	ec06                	sd	ra,24(sp)
    8000da90:	e42a                	sd	a0,8(sp)
    8000da92:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000da94:	00003097          	auipc	ra,0x3
    8000da98:	d4e080e7          	jalr	-690(ra) # 800107e2 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE>
    8000da9c:	a009                	j	8000da9e <_ZN4core3mem4swap17h574deae8bae3a253E+0x12>
}
    8000da9e:	60e2                	ld	ra,24(sp)
    8000daa0:	6105                	addi	sp,sp,32
    8000daa2:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17h71879f3c90373329E:

000000008000daa4 <_ZN4core3mem4swap17h71879f3c90373329E>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000daa4:	1101                	addi	sp,sp,-32
    8000daa6:	ec06                	sd	ra,24(sp)
    8000daa8:	e42a                	sd	a0,8(sp)
    8000daaa:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000daac:	00003097          	auipc	ra,0x3
    8000dab0:	c12080e7          	jalr	-1006(ra) # 800106be <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E>
    8000dab4:	a009                	j	8000dab6 <_ZN4core3mem4swap17h71879f3c90373329E+0x12>
}
    8000dab6:	60e2                	ld	ra,24(sp)
    8000dab8:	6105                	addi	sp,sp,32
    8000daba:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17h7887ed55119f8a87E:

000000008000dabc <_ZN4core3mem4swap17h7887ed55119f8a87E>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000dabc:	1101                	addi	sp,sp,-32
    8000dabe:	ec06                	sd	ra,24(sp)
    8000dac0:	e42a                	sd	a0,8(sp)
    8000dac2:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000dac4:	00003097          	auipc	ra,0x3
    8000dac8:	dda080e7          	jalr	-550(ra) # 8001089e <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E>
    8000dacc:	a009                	j	8000dace <_ZN4core3mem4swap17h7887ed55119f8a87E+0x12>
}
    8000dace:	60e2                	ld	ra,24(sp)
    8000dad0:	6105                	addi	sp,sp,32
    8000dad2:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17h9974290686ca4113E:

000000008000dad4 <_ZN4core3mem4swap17h9974290686ca4113E>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000dad4:	1101                	addi	sp,sp,-32
    8000dad6:	ec06                	sd	ra,24(sp)
    8000dad8:	e42a                	sd	a0,8(sp)
    8000dada:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000dadc:	00003097          	auipc	ra,0x3
    8000dae0:	e22080e7          	jalr	-478(ra) # 800108fe <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E>
    8000dae4:	a009                	j	8000dae6 <_ZN4core3mem4swap17h9974290686ca4113E+0x12>
}
    8000dae6:	60e2                	ld	ra,24(sp)
    8000dae8:	6105                	addi	sp,sp,32
    8000daea:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17h9efdc2f6d905cffdE:

000000008000daec <_ZN4core3mem4swap17h9efdc2f6d905cffdE>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000daec:	1101                	addi	sp,sp,-32
    8000daee:	ec06                	sd	ra,24(sp)
    8000daf0:	e42a                	sd	a0,8(sp)
    8000daf2:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000daf4:	00003097          	auipc	ra,0x3
    8000daf8:	d4c080e7          	jalr	-692(ra) # 80010840 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE>
    8000dafc:	a009                	j	8000dafe <_ZN4core3mem4swap17h9efdc2f6d905cffdE+0x12>
}
    8000dafe:	60e2                	ld	ra,24(sp)
    8000db00:	6105                	addi	sp,sp,32
    8000db02:	8082                	ret

Disassembly of section .text._ZN4core3mem4swap17hf2b03e015bfd7e07E:

000000008000db04 <_ZN4core3mem4swap17hf2b03e015bfd7e07E>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    8000db04:	1101                	addi	sp,sp,-32
    8000db06:	ec06                	sd	ra,24(sp)
    8000db08:	e42a                	sd	a0,8(sp)
    8000db0a:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8000db0c:	00003097          	auipc	ra,0x3
    8000db10:	c10080e7          	jalr	-1008(ra) # 8001071c <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE>
    8000db14:	a009                	j	8000db16 <_ZN4core3mem4swap17hf2b03e015bfd7e07E+0x12>
}
    8000db16:	60e2                	ld	ra,24(sp)
    8000db18:	6105                	addi	sp,sp,32
    8000db1a:	8082                	ret

Disassembly of section .text._ZN4core3mem4take17h07b2f8b5844819d3E:

000000008000db1c <_ZN4core3mem4take17h07b2f8b5844819d3E>:
pub fn take<T: Default>(dest: &mut T) -> T {
    8000db1c:	7139                	addi	sp,sp,-64
    8000db1e:	fc06                	sd	ra,56(sp)
    8000db20:	f82a                	sd	a0,48(sp)
    replace(dest, T::default())
    8000db22:	f42a                	sd	a0,40(sp)
    8000db24:	0000b097          	auipc	ra,0xb
    8000db28:	674080e7          	jalr	1652(ra) # 80019198 <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h23f8fe0f572e54f2E>
    8000db2c:	f02a                	sd	a0,32(sp)
    8000db2e:	ec2e                	sd	a1,24(sp)
    8000db30:	a009                	j	8000db32 <_ZN4core3mem4take17h07b2f8b5844819d3E+0x16>
    8000db32:	7522                	ld	a0,40(sp)
    8000db34:	7582                	ld	a1,32(sp)
    8000db36:	6662                	ld	a2,24(sp)
    8000db38:	00000097          	auipc	ra,0x0
    8000db3c:	0ea080e7          	jalr	234(ra) # 8000dc22 <_ZN4core3mem7replace17h5d1150380de96c57E>
    8000db40:	e82a                	sd	a0,16(sp)
    8000db42:	e42e                	sd	a1,8(sp)
    8000db44:	a009                	j	8000db46 <_ZN4core3mem4take17h07b2f8b5844819d3E+0x2a>
}
    8000db46:	6542                	ld	a0,16(sp)
    8000db48:	65a2                	ld	a1,8(sp)
    8000db4a:	70e2                	ld	ra,56(sp)
    8000db4c:	6121                	addi	sp,sp,64
    8000db4e:	8082                	ret

Disassembly of section .text._ZN4core3mem4take17h7d5e32bf5625c888E:

000000008000db50 <_ZN4core3mem4take17h7d5e32bf5625c888E>:
pub fn take<T: Default>(dest: &mut T) -> T {
    8000db50:	7139                	addi	sp,sp,-64
    8000db52:	fc06                	sd	ra,56(sp)
    8000db54:	f82a                	sd	a0,48(sp)
    replace(dest, T::default())
    8000db56:	f42a                	sd	a0,40(sp)
    8000db58:	0000b097          	auipc	ra,0xb
    8000db5c:	660080e7          	jalr	1632(ra) # 800191b8 <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17hc57f2b0f29821ce4E>
    8000db60:	f02a                	sd	a0,32(sp)
    8000db62:	ec2e                	sd	a1,24(sp)
    8000db64:	a009                	j	8000db66 <_ZN4core3mem4take17h7d5e32bf5625c888E+0x16>
    8000db66:	7522                	ld	a0,40(sp)
    8000db68:	7582                	ld	a1,32(sp)
    8000db6a:	6662                	ld	a2,24(sp)
    8000db6c:	00000097          	auipc	ra,0x0
    8000db70:	096080e7          	jalr	150(ra) # 8000dc02 <_ZN4core3mem7replace17h27801d9c85aafd74E>
    8000db74:	e82a                	sd	a0,16(sp)
    8000db76:	e42e                	sd	a1,8(sp)
    8000db78:	a009                	j	8000db7a <_ZN4core3mem4take17h7d5e32bf5625c888E+0x2a>
}
    8000db7a:	6542                	ld	a0,16(sp)
    8000db7c:	65a2                	ld	a1,8(sp)
    8000db7e:	70e2                	ld	ra,56(sp)
    8000db80:	6121                	addi	sp,sp,64
    8000db82:	8082                	ret

Disassembly of section .text._ZN4core3mem4take17h8581457864dc1a1fE:

000000008000db84 <_ZN4core3mem4take17h8581457864dc1a1fE>:
pub fn take<T: Default>(dest: &mut T) -> T {
    8000db84:	7179                	addi	sp,sp,-48
    8000db86:	f406                	sd	ra,40(sp)
    8000db88:	f02a                	sd	a0,32(sp)
    replace(dest, T::default())
    8000db8a:	ec2a                	sd	a0,24(sp)
    8000db8c:	0000b097          	auipc	ra,0xb
    8000db90:	622080e7          	jalr	1570(ra) # 800191ae <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8e6c6b37091cfda1E>
    8000db94:	e82a                	sd	a0,16(sp)
    8000db96:	a009                	j	8000db98 <_ZN4core3mem4take17h8581457864dc1a1fE+0x14>
    8000db98:	6562                	ld	a0,24(sp)
    8000db9a:	65c2                	ld	a1,16(sp)
    8000db9c:	00000097          	auipc	ra,0x0
    8000dba0:	0a6080e7          	jalr	166(ra) # 8000dc42 <_ZN4core3mem7replace17h73c6c0cdc6b18afcE>
    8000dba4:	e42a                	sd	a0,8(sp)
    8000dba6:	a009                	j	8000dba8 <_ZN4core3mem4take17h8581457864dc1a1fE+0x24>
}
    8000dba8:	6522                	ld	a0,8(sp)
    8000dbaa:	70a2                	ld	ra,40(sp)
    8000dbac:	6145                	addi	sp,sp,48
    8000dbae:	8082                	ret

Disassembly of section .text._ZN4core3mem4take17h8bc11710c5a0520dE:

000000008000dbb0 <_ZN4core3mem4take17h8bc11710c5a0520dE>:
pub fn take<T: Default>(dest: &mut T) -> T {
    8000dbb0:	7179                	addi	sp,sp,-48
    8000dbb2:	f406                	sd	ra,40(sp)
    8000dbb4:	f02a                	sd	a0,32(sp)
    replace(dest, T::default())
    8000dbb6:	ec2a                	sd	a0,24(sp)
    8000dbb8:	0000b097          	auipc	ra,0xb
    8000dbbc:	5ec080e7          	jalr	1516(ra) # 800191a4 <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8313e1b7f74efdc5E>
    8000dbc0:	e82a                	sd	a0,16(sp)
    8000dbc2:	a009                	j	8000dbc4 <_ZN4core3mem4take17h8bc11710c5a0520dE+0x14>
    8000dbc4:	6562                	ld	a0,24(sp)
    8000dbc6:	65c2                	ld	a1,16(sp)
    8000dbc8:	00000097          	auipc	ra,0x0
    8000dbcc:	0d2080e7          	jalr	210(ra) # 8000dc9a <_ZN4core3mem7replace17h8fc8edbdeecefb86E>
    8000dbd0:	e42a                	sd	a0,8(sp)
    8000dbd2:	a009                	j	8000dbd4 <_ZN4core3mem4take17h8bc11710c5a0520dE+0x24>
}
    8000dbd4:	6522                	ld	a0,8(sp)
    8000dbd6:	70a2                	ld	ra,40(sp)
    8000dbd8:	6145                	addi	sp,sp,48
    8000dbda:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h077d81b6a931835eE:

000000008000dbdc <_ZN4core3mem7replace17h077d81b6a931835eE>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dbdc:	1101                	addi	sp,sp,-32
    8000dbde:	ec06                	sd	ra,24(sp)
    8000dbe0:	862e                	mv	a2,a1
    8000dbe2:	00b107a3          	sb	a1,15(sp)
    8000dbe6:	e82a                	sd	a0,16(sp)
    8000dbe8:	00f10593          	addi	a1,sp,15
    swap(dest, &mut src);
    8000dbec:	e032                	sd	a2,0(sp)
    8000dbee:	00000097          	auipc	ra,0x0
    8000dbf2:	f16080e7          	jalr	-234(ra) # 8000db04 <_ZN4core3mem4swap17hf2b03e015bfd7e07E>
    8000dbf6:	a009                	j	8000dbf8 <_ZN4core3mem7replace17h077d81b6a931835eE+0x1c>
    src
    8000dbf8:	00f14503          	lbu	a0,15(sp)
}
    8000dbfc:	60e2                	ld	ra,24(sp)
    8000dbfe:	6105                	addi	sp,sp,32
    8000dc00:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h27801d9c85aafd74E:

000000008000dc02 <_ZN4core3mem7replace17h27801d9c85aafd74E>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dc02:	1101                	addi	sp,sp,-32
    8000dc04:	ec06                	sd	ra,24(sp)
    8000dc06:	e02e                	sd	a1,0(sp)
    8000dc08:	e432                	sd	a2,8(sp)
    8000dc0a:	e82a                	sd	a0,16(sp)
    8000dc0c:	858a                	mv	a1,sp
    swap(dest, &mut src);
    8000dc0e:	00000097          	auipc	ra,0x0
    8000dc12:	e4e080e7          	jalr	-434(ra) # 8000da5c <_ZN4core3mem4swap17h17bb70dc75a6eb22E>
    8000dc16:	a009                	j	8000dc18 <_ZN4core3mem7replace17h27801d9c85aafd74E+0x16>
    src
    8000dc18:	6502                	ld	a0,0(sp)
    8000dc1a:	65a2                	ld	a1,8(sp)
}
    8000dc1c:	60e2                	ld	ra,24(sp)
    8000dc1e:	6105                	addi	sp,sp,32
    8000dc20:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h5d1150380de96c57E:

000000008000dc22 <_ZN4core3mem7replace17h5d1150380de96c57E>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dc22:	1101                	addi	sp,sp,-32
    8000dc24:	ec06                	sd	ra,24(sp)
    8000dc26:	e02e                	sd	a1,0(sp)
    8000dc28:	e432                	sd	a2,8(sp)
    8000dc2a:	e82a                	sd	a0,16(sp)
    8000dc2c:	858a                	mv	a1,sp
    swap(dest, &mut src);
    8000dc2e:	00000097          	auipc	ra,0x0
    8000dc32:	e46080e7          	jalr	-442(ra) # 8000da74 <_ZN4core3mem4swap17h251182471336207aE>
    8000dc36:	a009                	j	8000dc38 <_ZN4core3mem7replace17h5d1150380de96c57E+0x16>
    src
    8000dc38:	6502                	ld	a0,0(sp)
    8000dc3a:	65a2                	ld	a1,8(sp)
}
    8000dc3c:	60e2                	ld	ra,24(sp)
    8000dc3e:	6105                	addi	sp,sp,32
    8000dc40:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h73c6c0cdc6b18afcE:

000000008000dc42 <_ZN4core3mem7replace17h73c6c0cdc6b18afcE>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dc42:	1101                	addi	sp,sp,-32
    8000dc44:	ec06                	sd	ra,24(sp)
    8000dc46:	e42e                	sd	a1,8(sp)
    8000dc48:	e82a                	sd	a0,16(sp)
    8000dc4a:	002c                	addi	a1,sp,8
    swap(dest, &mut src);
    8000dc4c:	00000097          	auipc	ra,0x0
    8000dc50:	ea0080e7          	jalr	-352(ra) # 8000daec <_ZN4core3mem4swap17h9efdc2f6d905cffdE>
    8000dc54:	a009                	j	8000dc56 <_ZN4core3mem7replace17h73c6c0cdc6b18afcE+0x14>
    src
    8000dc56:	6522                	ld	a0,8(sp)
}
    8000dc58:	60e2                	ld	ra,24(sp)
    8000dc5a:	6105                	addi	sp,sp,32
    8000dc5c:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h7d8490d5f05eae2eE:

000000008000dc5e <_ZN4core3mem7replace17h7d8490d5f05eae2eE>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dc5e:	1101                	addi	sp,sp,-32
    8000dc60:	ec06                	sd	ra,24(sp)
    8000dc62:	e42e                	sd	a1,8(sp)
    8000dc64:	e82a                	sd	a0,16(sp)
    8000dc66:	002c                	addi	a1,sp,8
    swap(dest, &mut src);
    8000dc68:	00000097          	auipc	ra,0x0
    8000dc6c:	e6c080e7          	jalr	-404(ra) # 8000dad4 <_ZN4core3mem4swap17h9974290686ca4113E>
    8000dc70:	a009                	j	8000dc72 <_ZN4core3mem7replace17h7d8490d5f05eae2eE+0x14>
    src
    8000dc72:	6522                	ld	a0,8(sp)
}
    8000dc74:	60e2                	ld	ra,24(sp)
    8000dc76:	6105                	addi	sp,sp,32
    8000dc78:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h8728dc8bcf9ec0a3E:

000000008000dc7a <_ZN4core3mem7replace17h8728dc8bcf9ec0a3E>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dc7a:	1101                	addi	sp,sp,-32
    8000dc7c:	ec06                	sd	ra,24(sp)
    8000dc7e:	862e                	mv	a2,a1
    8000dc80:	c62e                	sw	a1,12(sp)
    8000dc82:	e82a                	sd	a0,16(sp)
    8000dc84:	006c                	addi	a1,sp,12
    swap(dest, &mut src);
    8000dc86:	e032                	sd	a2,0(sp)
    8000dc88:	00000097          	auipc	ra,0x0
    8000dc8c:	e04080e7          	jalr	-508(ra) # 8000da8c <_ZN4core3mem4swap17h574deae8bae3a253E>
    8000dc90:	a009                	j	8000dc92 <_ZN4core3mem7replace17h8728dc8bcf9ec0a3E+0x18>
}
    8000dc92:	4532                	lw	a0,12(sp)
    8000dc94:	60e2                	ld	ra,24(sp)
    8000dc96:	6105                	addi	sp,sp,32
    8000dc98:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h8fc8edbdeecefb86E:

000000008000dc9a <_ZN4core3mem7replace17h8fc8edbdeecefb86E>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dc9a:	1101                	addi	sp,sp,-32
    8000dc9c:	ec06                	sd	ra,24(sp)
    8000dc9e:	e42e                	sd	a1,8(sp)
    8000dca0:	e82a                	sd	a0,16(sp)
    8000dca2:	002c                	addi	a1,sp,8
    swap(dest, &mut src);
    8000dca4:	00000097          	auipc	ra,0x0
    8000dca8:	e00080e7          	jalr	-512(ra) # 8000daa4 <_ZN4core3mem4swap17h71879f3c90373329E>
    8000dcac:	a009                	j	8000dcae <_ZN4core3mem7replace17h8fc8edbdeecefb86E+0x14>
    src
    8000dcae:	6522                	ld	a0,8(sp)
}
    8000dcb0:	60e2                	ld	ra,24(sp)
    8000dcb2:	6105                	addi	sp,sp,32
    8000dcb4:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17hf9ceb9ef0ca17dc5E:

000000008000dcb6 <_ZN4core3mem7replace17hf9ceb9ef0ca17dc5E>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8000dcb6:	1101                	addi	sp,sp,-32
    8000dcb8:	ec06                	sd	ra,24(sp)
    8000dcba:	862e                	mv	a2,a1
    8000dcbc:	00b11723          	sh	a1,14(sp)
    8000dcc0:	e82a                	sd	a0,16(sp)
    8000dcc2:	00e10593          	addi	a1,sp,14
    swap(dest, &mut src);
    8000dcc6:	e032                	sd	a2,0(sp)
    8000dcc8:	00000097          	auipc	ra,0x0
    8000dccc:	df4080e7          	jalr	-524(ra) # 8000dabc <_ZN4core3mem4swap17h7887ed55119f8a87E>
    8000dcd0:	a009                	j	8000dcd2 <_ZN4core3mem7replace17hf9ceb9ef0ca17dc5E+0x1c>
}
    8000dcd2:	00e11503          	lh	a0,14(sp)
    8000dcd6:	60e2                	ld	ra,24(sp)
    8000dcd8:	6105                	addi	sp,sp,32
    8000dcda:	8082                	ret

Disassembly of section .text._ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE:

000000008000dcdc <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE>:
    }
}

impl SpecFromElem for u8 {
    #[inline]
    fn from_elem<A: Allocator>(elem: u8, n: usize, alloc: A) -> Vec<u8, A> {
    8000dcdc:	7159                	addi	sp,sp,-112
    8000dcde:	f486                	sd	ra,104(sp)
    8000dce0:	0ff5f693          	zext.b	a3,a1
    8000dce4:	872e                	mv	a4,a1
    8000dce6:	04b10ba3          	sb	a1,87(sp)
    8000dcea:	ecb2                	sd	a2,88(sp)
    8000dcec:	4581                	li	a1,0
        if elem == 0 {
    8000dcee:	f832                	sd	a2,48(sp)
    8000dcf0:	f42a                	sd	a0,40(sp)
    8000dcf2:	f03a                	sd	a4,32(sp)
    8000dcf4:	00b69b63          	bne	a3,a1,8000dd0a <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x2e>
    8000dcf8:	a009                	j	8000dcfa <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x1e>
            return Vec { buf: RawVec::with_capacity_zeroed_in(n, alloc), len: n };
    8000dcfa:	7542                	ld	a0,48(sp)
    8000dcfc:	00000097          	auipc	ra,0x0
    8000dd00:	a98080e7          	jalr	-1384(ra) # 8000d794 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17h4bd9c32afe211d8dE>
    8000dd04:	ec2a                	sd	a0,24(sp)
    8000dd06:	e82e                	sd	a1,16(sp)
    8000dd08:	a801                	j	8000dd18 <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x3c>
    8000dd0a:	1828                	addi	a0,sp,56
        }
        unsafe {
            let mut v = Vec::with_capacity_in(n, alloc);
    8000dd0c:	75c2                	ld	a1,48(sp)
    8000dd0e:	0000c097          	auipc	ra,0xc
    8000dd12:	d76080e7          	jalr	-650(ra) # 80019a84 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hd6d03542f97696e2E>
    8000dd16:	a809                	j	8000dd28 <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x4c>
            return Vec { buf: RawVec::with_capacity_zeroed_in(n, alloc), len: n };
    8000dd18:	6562                	ld	a0,24(sp)
    8000dd1a:	75a2                	ld	a1,40(sp)
    8000dd1c:	e188                	sd	a0,0(a1)
    8000dd1e:	6642                	ld	a2,16(sp)
    8000dd20:	e590                	sd	a2,8(a1)
    8000dd22:	76c2                	ld	a3,48(sp)
    8000dd24:	e994                	sd	a3,16(a1)
            ptr::write_bytes(v.as_mut_ptr(), elem, n);
            v.set_len(n);
            v
        }
    }
    8000dd26:	a83d                	j	8000dd64 <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x88>
    8000dd28:	1828                	addi	a0,sp,56
            ptr::write_bytes(v.as_mut_ptr(), elem, n);
    8000dd2a:	0000c097          	auipc	ra,0xc
    8000dd2e:	d2e080e7          	jalr	-722(ra) # 80019a58 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E>
    8000dd32:	e42a                	sd	a0,8(sp)
    8000dd34:	a009                	j	8000dd36 <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x5a>
    8000dd36:	6522                	ld	a0,8(sp)
    8000dd38:	7582                	ld	a1,32(sp)
    8000dd3a:	7642                	ld	a2,48(sp)
    8000dd3c:	00013097          	auipc	ra,0x13
    8000dd40:	ba4080e7          	jalr	-1116(ra) # 800208e0 <_ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE>
    8000dd44:	a009                	j	8000dd46 <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x6a>
    8000dd46:	1828                	addi	a0,sp,56
            v.set_len(n);
    8000dd48:	75c2                	ld	a1,48(sp)
    8000dd4a:	0000c097          	auipc	ra,0xc
    8000dd4e:	d66080e7          	jalr	-666(ra) # 80019ab0 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hcb0594eecaa6aefcE>
    8000dd52:	a009                	j	8000dd54 <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x78>
            v
    8000dd54:	6526                	ld	a0,72(sp)
    8000dd56:	75a2                	ld	a1,40(sp)
    8000dd58:	e988                	sd	a0,16(a1)
    8000dd5a:	6506                	ld	a0,64(sp)
    8000dd5c:	e588                	sd	a0,8(a1)
    8000dd5e:	7562                	ld	a0,56(sp)
    8000dd60:	e188                	sd	a0,0(a1)
    }
    8000dd62:	a009                	j	8000dd64 <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE+0x88>
    8000dd64:	70a6                	ld	ra,104(sp)
    8000dd66:	6165                	addi	sp,sp,112
    8000dd68:	8082                	ret

Disassembly of section .text._ZN4core4hint9spin_loop17h9f450d83d2974701E:

000000008000dd6a <_ZN4core4hint9spin_loop17h9f450d83d2974701E>:
            // SAFETY: the `cfg` attr ensures that we only execute this on arm targets
            // with support for the v6 feature.
            unsafe { crate::arch::arm::__yield() };
        }
    }
}
    8000dd6a:	8082                	ret

Disassembly of section .text._ZN6kernel6driver11virtio_disk4Disk4init17hc9f988207d72998cE:

000000008000dd6c <_ZN6kernel6driver11virtio_disk4Disk4init17hc9f988207d72998cE>:
    pub unsafe fn init(&mut self) {
    8000dd6c:	c3010113          	addi	sp,sp,-976
    8000dd70:	3c113423          	sd	ra,968(sp)
    8000dd74:	34a13423          	sd	a0,840(sp)
    8000dd78:	6585                	lui	a1,0x1
    8000dd7a:	35fd                	addiw	a1,a1,-1
        debug_assert_eq!((&self.desc as *const _ as usize) % PGSIZE, 0);
    8000dd7c:	8de9                	and	a1,a1,a0
    8000dd7e:	f2ae                	sd	a1,352(sp)
    8000dd80:	1290                	addi	a2,sp,352
    8000dd82:	eab2                	sd	a2,336(sp)

000000008000dd84 <.LBB0_56>:
    8000dd84:	00016697          	auipc	a3,0x16
    8000dd88:	01c68693          	addi	a3,a3,28 # 80023da0 <.L__unnamed_5+0xa0>
    8000dd8c:	eeb6                	sd	a3,344(sp)
    8000dd8e:	34c13823          	sd	a2,848(sp)
    8000dd92:	34d13c23          	sd	a3,856(sp)
    8000dd96:	4701                	li	a4,0
    8000dd98:	e6aa                	sd	a0,328(sp)
    8000dd9a:	e2b2                	sd	a2,320(sp)
    8000dd9c:	fe36                	sd	a3,312(sp)
    8000dd9e:	02e58c63          	beq	a1,a4,8000ddd6 <.LBB0_57+0x1a>
    8000dda2:	a009                	j	8000dda4 <.LBB0_56+0x20>
    8000dda4:	6516                	ld	a0,320(sp)
    8000dda6:	e7aa                	sd	a0,456(sp)
    8000dda8:	75f2                	ld	a1,312(sp)
    8000ddaa:	ebae                	sd	a1,464(sp)
    8000ddac:	03b0                	addi	a2,sp,456
    8000ddae:	ff32                	sd	a2,440(sp)
    8000ddb0:	0b94                	addi	a3,sp,464
    8000ddb2:	e3b6                	sd	a3,448(sp)
    8000ddb4:	36c13023          	sd	a2,864(sp)
    8000ddb8:	36d13423          	sd	a3,872(sp)

000000008000ddbc <.LBB0_57>:
    8000ddbc:	00012597          	auipc	a1,0x12
    8000ddc0:	bfc58593          	addi	a1,a1,-1028 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000ddc4:	8532                	mv	a0,a2
    8000ddc6:	fa36                	sd	a3,304(sp)
    8000ddc8:	00012097          	auipc	ra,0x12
    8000ddcc:	c0e080e7          	jalr	-1010(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000ddd0:	f62a                	sd	a0,296(sp)
    8000ddd2:	f22e                	sd	a1,288(sp)
    8000ddd4:	a80d                	j	8000de06 <.LBB0_59>
    8000ddd6:	6505                	lui	a0,0x1
        debug_assert_eq!((&self.used as *const _ as usize) % PGSIZE, 0);
    8000ddd8:	65b6                	ld	a1,328(sp)
    8000ddda:	00a58633          	add	a2,a1,a0
    8000ddde:	357d                	addiw	a0,a0,-1
    8000dde0:	8d71                	and	a0,a0,a2
    8000dde2:	f7aa                	sd	a0,488(sp)
    8000dde4:	13b0                	addi	a2,sp,488
    8000dde6:	efb2                	sd	a2,472(sp)

000000008000dde8 <.LBB0_58>:
    8000dde8:	00016697          	auipc	a3,0x16
    8000ddec:	fb868693          	addi	a3,a3,-72 # 80023da0 <.L__unnamed_5+0xa0>
    8000ddf0:	f3b6                	sd	a3,480(sp)
    8000ddf2:	36c13823          	sd	a2,880(sp)
    8000ddf6:	36d13c23          	sd	a3,888(sp)
    8000ddfa:	4701                	li	a4,0
    8000ddfc:	ee32                	sd	a2,280(sp)
    8000ddfe:	ea36                	sd	a3,272(sp)
    8000de00:	04e51e63          	bne	a0,a4,8000de5c <.LBB0_61+0x14>
    8000de04:	a849                	j	8000de96 <.LBB0_62+0x1a>

000000008000de06 <.LBB0_59>:
        debug_assert_eq!((&self.desc as *const _ as usize) % PGSIZE, 0);
    8000de06:	00012597          	auipc	a1,0x12
    8000de0a:	bb258593          	addi	a1,a1,-1102 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000de0e:	7552                	ld	a0,304(sp)
    8000de10:	00012097          	auipc	ra,0x12
    8000de14:	bc6080e7          	jalr	-1082(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000de18:	e62a                	sd	a0,264(sp)
    8000de1a:	e22e                	sd	a1,256(sp)
    8000de1c:	a009                	j	8000de1e <.LBB0_59+0x18>
    8000de1e:	7532                	ld	a0,296(sp)
    8000de20:	ef2a                	sd	a0,408(sp)
    8000de22:	7592                	ld	a1,288(sp)
    8000de24:	f32e                	sd	a1,416(sp)
    8000de26:	6632                	ld	a2,264(sp)
    8000de28:	f732                	sd	a2,424(sp)
    8000de2a:	6692                	ld	a3,256(sp)
    8000de2c:	fb36                	sd	a3,432(sp)

000000008000de2e <.LBB0_60>:
    8000de2e:	00018597          	auipc	a1,0x18
    8000de32:	39258593          	addi	a1,a1,914 # 800261c0 <.L__unnamed_2>
    8000de36:	12a8                	addi	a0,sp,360
    8000de38:	460d                	li	a2,3
    8000de3a:	0b34                	addi	a3,sp,408
    8000de3c:	4709                	li	a4,2
    8000de3e:	ffff8097          	auipc	ra,0xffff8
    8000de42:	8e6080e7          	jalr	-1818(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000de46:	a009                	j	8000de48 <.LBB0_61>

000000008000de48 <.LBB0_61>:
    8000de48:	00018597          	auipc	a1,0x18
    8000de4c:	3c858593          	addi	a1,a1,968 # 80026210 <.L__unnamed_3>
    8000de50:	12a8                	addi	a0,sp,360
    8000de52:	00013097          	auipc	ra,0x13
    8000de56:	ee4080e7          	jalr	-284(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000de5a:	0000                	unimp
        debug_assert_eq!((&self.used as *const _ as usize) % PGSIZE, 0);
    8000de5c:	6572                	ld	a0,280(sp)
    8000de5e:	24a13823          	sd	a0,592(sp)
    8000de62:	65d2                	ld	a1,272(sp)
    8000de64:	24b13c23          	sd	a1,600(sp)
    8000de68:	0c90                	addi	a2,sp,592
    8000de6a:	24c13023          	sd	a2,576(sp)
    8000de6e:	0cb4                	addi	a3,sp,600
    8000de70:	24d13423          	sd	a3,584(sp)
    8000de74:	38c13023          	sd	a2,896(sp)
    8000de78:	38d13423          	sd	a3,904(sp)

000000008000de7c <.LBB0_62>:
    8000de7c:	00012597          	auipc	a1,0x12
    8000de80:	b3c58593          	addi	a1,a1,-1220 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000de84:	8532                	mv	a0,a2
    8000de86:	fdb6                	sd	a3,248(sp)
    8000de88:	00012097          	auipc	ra,0x12
    8000de8c:	b4e080e7          	jalr	-1202(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000de90:	f9aa                	sd	a0,240(sp)
    8000de92:	f5ae                	sd	a1,232(sp)
    8000de94:	a825                	j	8000decc <.LBB0_64>
    8000de96:	6509                	lui	a0,0x2
        debug_assert_eq!((&self.free as *const _ as usize) % PGSIZE, 0);
    8000de98:	65b6                	ld	a1,328(sp)
    8000de9a:	952e                	add	a0,a0,a1
    8000de9c:	6605                	lui	a2,0x1
    8000de9e:	367d                	addiw	a2,a2,-1
    8000dea0:	8d71                	and	a0,a0,a2
    8000dea2:	26a13823          	sd	a0,624(sp)
    8000dea6:	1c90                	addi	a2,sp,624
    8000dea8:	26c13023          	sd	a2,608(sp)

000000008000deac <.LBB0_63>:
    8000deac:	00016697          	auipc	a3,0x16
    8000deb0:	ef468693          	addi	a3,a3,-268 # 80023da0 <.L__unnamed_5+0xa0>
    8000deb4:	26d13423          	sd	a3,616(sp)
    8000deb8:	38c13823          	sd	a2,912(sp)
    8000debc:	38d13c23          	sd	a3,920(sp)
    8000dec0:	4701                	li	a4,0
    8000dec2:	f1b2                	sd	a2,224(sp)
    8000dec4:	edb6                	sd	a3,216(sp)
    8000dec6:	06e51263          	bne	a0,a4,8000df2a <.LBB0_66+0x14>
    8000deca:	a869                	j	8000df64 <.LBB0_67+0x1a>

000000008000decc <.LBB0_64>:
        debug_assert_eq!((&self.used as *const _ as usize) % PGSIZE, 0);
    8000decc:	00012597          	auipc	a1,0x12
    8000ded0:	aec58593          	addi	a1,a1,-1300 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000ded4:	756e                	ld	a0,248(sp)
    8000ded6:	00012097          	auipc	ra,0x12
    8000deda:	b00080e7          	jalr	-1280(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000dede:	e9aa                	sd	a0,208(sp)
    8000dee0:	e5ae                	sd	a1,200(sp)
    8000dee2:	a009                	j	8000dee4 <.LBB0_64+0x18>
    8000dee4:	754e                	ld	a0,240(sp)
    8000dee6:	22a13023          	sd	a0,544(sp)
    8000deea:	75ae                	ld	a1,232(sp)
    8000deec:	22b13423          	sd	a1,552(sp)
    8000def0:	664e                	ld	a2,208(sp)
    8000def2:	22c13823          	sd	a2,560(sp)
    8000def6:	66ae                	ld	a3,200(sp)
    8000def8:	22d13c23          	sd	a3,568(sp)

000000008000defc <.LBB0_65>:
    8000defc:	00018597          	auipc	a1,0x18
    8000df00:	2c458593          	addi	a1,a1,708 # 800261c0 <.L__unnamed_2>
    8000df04:	1b88                	addi	a0,sp,496
    8000df06:	460d                	li	a2,3
    8000df08:	1414                	addi	a3,sp,544
    8000df0a:	4709                	li	a4,2
    8000df0c:	ffff8097          	auipc	ra,0xffff8
    8000df10:	818080e7          	jalr	-2024(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000df14:	a009                	j	8000df16 <.LBB0_66>

000000008000df16 <.LBB0_66>:
    8000df16:	00018597          	auipc	a1,0x18
    8000df1a:	31258593          	addi	a1,a1,786 # 80026228 <.L__unnamed_4>
    8000df1e:	1b88                	addi	a0,sp,496
    8000df20:	00013097          	auipc	ra,0x13
    8000df24:	e16080e7          	jalr	-490(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000df28:	0000                	unimp
        debug_assert_eq!((&self.free as *const _ as usize) % PGSIZE, 0);
    8000df2a:	750e                	ld	a0,224(sp)
    8000df2c:	2ca13c23          	sd	a0,728(sp)
    8000df30:	65ee                	ld	a1,216(sp)
    8000df32:	2eb13023          	sd	a1,736(sp)
    8000df36:	0db0                	addi	a2,sp,728
    8000df38:	2cc13423          	sd	a2,712(sp)
    8000df3c:	1594                	addi	a3,sp,736
    8000df3e:	2cd13823          	sd	a3,720(sp)
    8000df42:	3ac13023          	sd	a2,928(sp)
    8000df46:	3ad13423          	sd	a3,936(sp)

000000008000df4a <.LBB0_67>:
    8000df4a:	00012597          	auipc	a1,0x12
    8000df4e:	a6e58593          	addi	a1,a1,-1426 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000df52:	8532                	mv	a0,a2
    8000df54:	e1b6                	sd	a3,192(sp)
    8000df56:	00012097          	auipc	ra,0x12
    8000df5a:	a80080e7          	jalr	-1408(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000df5e:	fd2a                	sd	a0,184(sp)
    8000df60:	f92e                	sd	a1,176(sp)
    8000df62:	a801                	j	8000df72 <.LBB0_68>
    8000df64:	4501                	li	a0,0
        if read(VIRTIO_MMIO_MAGIC_VALUE) != 0x74726976
    8000df66:	00001097          	auipc	ra,0x1
    8000df6a:	a48080e7          	jalr	-1464(ra) # 8000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>
    8000df6e:	f52a                	sd	a0,168(sp)
    8000df70:	a8e1                	j	8000e048 <.LBB0_70+0x8c>

000000008000df72 <.LBB0_68>:
        debug_assert_eq!((&self.free as *const _ as usize) % PGSIZE, 0);
    8000df72:	00012597          	auipc	a1,0x12
    8000df76:	a4658593          	addi	a1,a1,-1466 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000df7a:	650e                	ld	a0,192(sp)
    8000df7c:	00012097          	auipc	ra,0x12
    8000df80:	a5a080e7          	jalr	-1446(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000df84:	f12a                	sd	a0,160(sp)
    8000df86:	ed2e                	sd	a1,152(sp)
    8000df88:	a009                	j	8000df8a <.LBB0_68+0x18>
    8000df8a:	756a                	ld	a0,184(sp)
    8000df8c:	2aa13423          	sd	a0,680(sp)
    8000df90:	75ca                	ld	a1,176(sp)
    8000df92:	2ab13823          	sd	a1,688(sp)
    8000df96:	760a                	ld	a2,160(sp)
    8000df98:	2ac13c23          	sd	a2,696(sp)
    8000df9c:	66ea                	ld	a3,152(sp)
    8000df9e:	2cd13023          	sd	a3,704(sp)

000000008000dfa2 <.LBB0_69>:
    8000dfa2:	00018597          	auipc	a1,0x18
    8000dfa6:	21e58593          	addi	a1,a1,542 # 800261c0 <.L__unnamed_2>
    8000dfaa:	1ca8                	addi	a0,sp,632
    8000dfac:	460d                	li	a2,3
    8000dfae:	1534                	addi	a3,sp,680
    8000dfb0:	4709                	li	a4,2
    8000dfb2:	ffff7097          	auipc	ra,0xffff7
    8000dfb6:	772080e7          	jalr	1906(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000dfba:	a009                	j	8000dfbc <.LBB0_70>

000000008000dfbc <.LBB0_70>:
    8000dfbc:	00018597          	auipc	a1,0x18
    8000dfc0:	28458593          	addi	a1,a1,644 # 80026240 <.L__unnamed_5>
    8000dfc4:	1ca8                	addi	a0,sp,632
    8000dfc6:	00013097          	auipc	ra,0x13
    8000dfca:	d70080e7          	jalr	-656(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000dfce:	0000                	unimp
    8000dfd0:	4505                	li	a0,1
        if read(VIRTIO_MMIO_MAGIC_VALUE) != 0x74726976
    8000dfd2:	2ea106a3          	sb	a0,749(sp)
    8000dfd6:	a821                	j	8000dfee <.LBB0_70+0x32>
    8000dfd8:	4501                	li	a0,0
    8000dfda:	2ea106a3          	sb	a0,749(sp)
    8000dfde:	a801                	j	8000dfee <.LBB0_70+0x32>
    8000dfe0:	4531                	li	a0,12
            || read(VIRTIO_MMIO_VENDOR_ID) != 0x554d4551
    8000dfe2:	00001097          	auipc	ra,0x1
    8000dfe6:	9cc080e7          	jalr	-1588(ra) # 8000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>
    8000dfea:	e92a                	sd	a0,144(sp)
    8000dfec:	a849                	j	8000e07e <.LBB0_70+0xc2>
        if read(VIRTIO_MMIO_MAGIC_VALUE) != 0x74726976
    8000dfee:	2ed14503          	lbu	a0,749(sp)
    8000dff2:	8905                	andi	a0,a0,1
    8000dff4:	e145                	bnez	a0,8000e094 <.LBB0_71>
    8000dff6:	a86d                	j	8000e0b0 <.LBB0_72+0x14>
    8000dff8:	4505                	li	a0,1
    8000dffa:	2ea10723          	sb	a0,750(sp)
    8000dffe:	a821                	j	8000e016 <.LBB0_70+0x5a>
    8000e000:	4501                	li	a0,0
    8000e002:	2ea10723          	sb	a0,750(sp)
    8000e006:	a801                	j	8000e016 <.LBB0_70+0x5a>
    8000e008:	4521                	li	a0,8
            || read(VIRTIO_MMIO_DEVICE_ID) != 2
    8000e00a:	00001097          	auipc	ra,0x1
    8000e00e:	9a4080e7          	jalr	-1628(ra) # 8000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>
    8000e012:	e52a                	sd	a0,136(sp)
    8000e014:	a8a9                	j	8000e06e <.LBB0_70+0xb2>
        if read(VIRTIO_MMIO_MAGIC_VALUE) != 0x74726976
    8000e016:	2ee14503          	lbu	a0,750(sp)
    8000e01a:	8905                	andi	a0,a0,1
    8000e01c:	f955                	bnez	a0,8000dfd0 <.LBB0_70+0x14>
    8000e01e:	b7c9                	j	8000dfe0 <.LBB0_70+0x24>
    8000e020:	4505                	li	a0,1
    8000e022:	2ea107a3          	sb	a0,751(sp)
    8000e026:	a821                	j	8000e03e <.LBB0_70+0x82>
    8000e028:	4501                	li	a0,0
    8000e02a:	2ea107a3          	sb	a0,751(sp)
    8000e02e:	a801                	j	8000e03e <.LBB0_70+0x82>
    8000e030:	4511                	li	a0,4
            || read(VIRTIO_MMIO_VERSION) != 1
    8000e032:	00001097          	auipc	ra,0x1
    8000e036:	97c080e7          	jalr	-1668(ra) # 8000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>
    8000e03a:	e12a                	sd	a0,128(sp)
    8000e03c:	a00d                	j	8000e05e <.LBB0_70+0xa2>
        if read(VIRTIO_MMIO_MAGIC_VALUE) != 0x74726976
    8000e03e:	2ef14503          	lbu	a0,751(sp)
    8000e042:	8905                	andi	a0,a0,1
    8000e044:	f955                	bnez	a0,8000dff8 <.LBB0_70+0x3c>
    8000e046:	b7c9                	j	8000e008 <.LBB0_70+0x4c>
    8000e048:	752a                	ld	a0,168(sp)
    8000e04a:	02051593          	slli	a1,a0,0x20
    8000e04e:	9181                	srli	a1,a1,0x20
    8000e050:	74727637          	lui	a2,0x74727
    8000e054:	9766061b          	addiw	a2,a2,-1674
    8000e058:	fcc58ce3          	beq	a1,a2,8000e030 <.LBB0_70+0x74>
    8000e05c:	b7d1                	j	8000e020 <.LBB0_70+0x64>
    8000e05e:	650a                	ld	a0,128(sp)
    8000e060:	02051593          	slli	a1,a0,0x20
    8000e064:	9181                	srli	a1,a1,0x20
    8000e066:	4605                	li	a2,1
    8000e068:	fcc580e3          	beq	a1,a2,8000e028 <.LBB0_70+0x6c>
    8000e06c:	bf55                	j	8000e020 <.LBB0_70+0x64>
    8000e06e:	652a                	ld	a0,136(sp)
    8000e070:	02051593          	slli	a1,a0,0x20
    8000e074:	9181                	srli	a1,a1,0x20
    8000e076:	4609                	li	a2,2
    8000e078:	f8c584e3          	beq	a1,a2,8000e000 <.LBB0_70+0x44>
    8000e07c:	bfb5                	j	8000dff8 <.LBB0_70+0x3c>
    8000e07e:	654a                	ld	a0,144(sp)
    8000e080:	02051593          	slli	a1,a0,0x20
    8000e084:	9181                	srli	a1,a1,0x20
    8000e086:	554d4637          	lui	a2,0x554d4
    8000e08a:	5516061b          	addiw	a2,a2,1361
    8000e08e:	f4c585e3          	beq	a1,a2,8000dfd8 <.LBB0_70+0x1c>
    8000e092:	bf3d                	j	8000dfd0 <.LBB0_70+0x14>

000000008000e094 <.LBB0_71>:
            panic!("could not find virtio disk");
    8000e094:	00018517          	auipc	a0,0x18
    8000e098:	1c450513          	addi	a0,a0,452 # 80026258 <.L__unnamed_6>

000000008000e09c <.LBB0_72>:
    8000e09c:	00018617          	auipc	a2,0x18
    8000e0a0:	1dc60613          	addi	a2,a2,476 # 80026278 <.L__unnamed_7>
    8000e0a4:	45e9                	li	a1,26
    8000e0a6:	00013097          	auipc	ra,0x13
    8000e0aa:	c24080e7          	jalr	-988(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000e0ae:	0000                	unimp
    8000e0b0:	4505                	li	a0,1
        status |= VIRTIO_CONFIG_S_ACKNOWLEDGE;
    8000e0b2:	2ea12823          	sw	a0,752(sp)
    8000e0b6:	07000593          	li	a1,112
        write(VIRTIO_MMIO_STATUS, status);
    8000e0ba:	fcaa                	sd	a0,120(sp)
    8000e0bc:	852e                	mv	a0,a1
    8000e0be:	75e6                	ld	a1,120(sp)
    8000e0c0:	00001097          	auipc	ra,0x1
    8000e0c4:	94c080e7          	jalr	-1716(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e0c8:	a009                	j	8000e0ca <.LBB0_72+0x2e>
        status |= VIRTIO_CONFIG_S_DRIVER;
    8000e0ca:	2f012503          	lw	a0,752(sp)
    8000e0ce:	00256513          	ori	a0,a0,2
    8000e0d2:	2ea12823          	sw	a0,752(sp)
    8000e0d6:	07000593          	li	a1,112
        write(VIRTIO_MMIO_STATUS, status);
    8000e0da:	f8aa                	sd	a0,112(sp)
    8000e0dc:	852e                	mv	a0,a1
    8000e0de:	75c6                	ld	a1,112(sp)
    8000e0e0:	00001097          	auipc	ra,0x1
    8000e0e4:	92c080e7          	jalr	-1748(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e0e8:	a009                	j	8000e0ea <.LBB0_72+0x4e>
    8000e0ea:	4541                	li	a0,16
        let mut features: u32 = read(VIRTIO_MMIO_DEVICE_FEATURES);
    8000e0ec:	00001097          	auipc	ra,0x1
    8000e0f0:	8c2080e7          	jalr	-1854(ra) # 8000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>
    8000e0f4:	2ea12a23          	sw	a0,756(sp)
    8000e0f8:	a009                	j	8000e0fa <.LBB0_72+0x5e>
        features &= !(1u32 << VIRTIO_BLK_F_RO);
    8000e0fa:	2f412503          	lw	a0,756(sp)
    8000e0fe:	c7ffe5b7          	lui	a1,0xc7ffe
    8000e102:	75f5859b          	addiw	a1,a1,1887
        features &= !(1u32 << VIRTIO_RING_F_INDIRECT_DESC);
    8000e106:	8d6d                	and	a0,a0,a1
    8000e108:	2ea12a23          	sw	a0,756(sp)
    8000e10c:	02000593          	li	a1,32
        write(VIRTIO_MMIO_DRIVER_FEATURES, features);
    8000e110:	f4aa                	sd	a0,104(sp)
    8000e112:	852e                	mv	a0,a1
    8000e114:	75a6                	ld	a1,104(sp)
    8000e116:	00001097          	auipc	ra,0x1
    8000e11a:	8f6080e7          	jalr	-1802(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e11e:	a009                	j	8000e120 <.LBB0_72+0x84>
        status |= VIRTIO_CONFIG_S_FEATURES_OK;
    8000e120:	2f012503          	lw	a0,752(sp)
    8000e124:	00856513          	ori	a0,a0,8
    8000e128:	2ea12823          	sw	a0,752(sp)
    8000e12c:	07000593          	li	a1,112
        write(VIRTIO_MMIO_STATUS, status);
    8000e130:	f0aa                	sd	a0,96(sp)
    8000e132:	852e                	mv	a0,a1
    8000e134:	7586                	ld	a1,96(sp)
    8000e136:	00001097          	auipc	ra,0x1
    8000e13a:	8d6080e7          	jalr	-1834(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e13e:	a009                	j	8000e140 <.LBB0_72+0xa4>
        status |= VIRTIO_CONFIG_S_DRIVER_OK;
    8000e140:	2f012503          	lw	a0,752(sp)
    8000e144:	00456513          	ori	a0,a0,4
    8000e148:	2ea12823          	sw	a0,752(sp)
    8000e14c:	07000593          	li	a1,112
        write(VIRTIO_MMIO_STATUS, status);
    8000e150:	ecaa                	sd	a0,88(sp)
    8000e152:	852e                	mv	a0,a1
    8000e154:	65e6                	ld	a1,88(sp)
    8000e156:	00001097          	auipc	ra,0x1
    8000e15a:	8b6080e7          	jalr	-1866(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e15e:	a009                	j	8000e160 <.LBB0_72+0xc4>
    8000e160:	02800513          	li	a0,40
    8000e164:	6585                	lui	a1,0x1
        write(VIRTIO_MMIO_GUEST_PAGE_SIZE, PGSIZE as u32);
    8000e166:	00001097          	auipc	ra,0x1
    8000e16a:	8a6080e7          	jalr	-1882(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e16e:	a009                	j	8000e170 <.LBB0_72+0xd4>
    8000e170:	03000513          	li	a0,48
    8000e174:	4581                	li	a1,0
        write(VIRTIO_MMIO_QUEUE_SEL, 0);
    8000e176:	00001097          	auipc	ra,0x1
    8000e17a:	896080e7          	jalr	-1898(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e17e:	a009                	j	8000e180 <.LBB0_72+0xe4>
    8000e180:	03400513          	li	a0,52
        let max = read(VIRTIO_MMIO_QUEUE_NUM_MAX);
    8000e184:	00001097          	auipc	ra,0x1
    8000e188:	82a080e7          	jalr	-2006(ra) # 8000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>
    8000e18c:	85aa                	mv	a1,a0
    8000e18e:	3aa12a23          	sw	a0,948(sp)
    8000e192:	e8ae                	sd	a1,80(sp)
    8000e194:	a009                	j	8000e196 <.LBB0_72+0xfa>
        if max == 0 {
    8000e196:	6546                	ld	a0,80(sp)
    8000e198:	02051593          	slli	a1,a0,0x20
    8000e19c:	9181                	srli	a1,a1,0x20
    8000e19e:	4601                	li	a2,0
    8000e1a0:	02c59163          	bne	a1,a2,8000e1c2 <.LBB0_74+0x14>
    8000e1a4:	a009                	j	8000e1a6 <.LBB0_73>

000000008000e1a6 <.LBB0_73>:
            panic!("virtio disk has no queue 0");
    8000e1a6:	00018517          	auipc	a0,0x18
    8000e1aa:	15250513          	addi	a0,a0,338 # 800262f8 <.L__unnamed_8>

000000008000e1ae <.LBB0_74>:
    8000e1ae:	00018617          	auipc	a2,0x18
    8000e1b2:	16a60613          	addi	a2,a2,362 # 80026318 <.L__unnamed_9>
    8000e1b6:	45e9                	li	a1,26
    8000e1b8:	00013097          	auipc	ra,0x13
    8000e1bc:	b12080e7          	jalr	-1262(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000e1c0:	0000                	unimp
        if max < NUM as u32 {
    8000e1c2:	6546                	ld	a0,80(sp)
    8000e1c4:	0005059b          	sext.w	a1,a0
    8000e1c8:	461d                	li	a2,7
    8000e1ca:	02b66663          	bltu	a2,a1,8000e1f6 <.LBB0_76+0x16>
    8000e1ce:	a009                	j	8000e1d0 <.LBB0_75>

000000008000e1d0 <.LBB0_75>:
            panic!("virtio disk max queue short than NUM={}", NUM);
    8000e1d0:	00016517          	auipc	a0,0x16
    8000e1d4:	b8050513          	addi	a0,a0,-1152 # 80023d50 <.L__unnamed_5+0x50>
    8000e1d8:	32a13c23          	sd	a0,824(sp)
    8000e1dc:	3aa13c23          	sd	a0,952(sp)

000000008000e1e0 <.LBB0_76>:
    8000e1e0:	00015597          	auipc	a1,0x15
    8000e1e4:	e5258593          	addi	a1,a1,-430 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    8000e1e8:	00012097          	auipc	ra,0x12
    8000e1ec:	832080e7          	jalr	-1998(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000e1f0:	e4aa                	sd	a0,72(sp)
    8000e1f2:	e0ae                	sd	a1,64(sp)
    8000e1f4:	a809                	j	8000e206 <.LBB0_76+0x26>
    8000e1f6:	03800513          	li	a0,56
    8000e1fa:	45a1                	li	a1,8
        write(VIRTIO_MMIO_QUEUE_NUM, NUM as u32);
    8000e1fc:	00001097          	auipc	ra,0x1
    8000e200:	810080e7          	jalr	-2032(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e204:	a83d                	j	8000e242 <.LBB0_78+0x14>
            panic!("virtio disk max queue short than NUM={}", NUM);
    8000e206:	6526                	ld	a0,72(sp)
    8000e208:	32a13423          	sd	a0,808(sp)
    8000e20c:	6586                	ld	a1,64(sp)
    8000e20e:	32b13823          	sd	a1,816(sp)

000000008000e212 <.LBB0_77>:
    8000e212:	00018597          	auipc	a1,0x18
    8000e216:	0a658593          	addi	a1,a1,166 # 800262b8 <.L__unnamed_11>
    8000e21a:	1da8                	addi	a0,sp,760
    8000e21c:	1634                	addi	a3,sp,808
    8000e21e:	4605                	li	a2,1
    8000e220:	fc32                	sd	a2,56(sp)
    8000e222:	7762                	ld	a4,56(sp)
    8000e224:	ffff7097          	auipc	ra,0xffff7
    8000e228:	500080e7          	jalr	1280(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000e22c:	a009                	j	8000e22e <.LBB0_78>

000000008000e22e <.LBB0_78>:
    8000e22e:	00018597          	auipc	a1,0x18
    8000e232:	09a58593          	addi	a1,a1,154 # 800262c8 <.L__unnamed_12>
    8000e236:	1da8                	addi	a0,sp,760
    8000e238:	00013097          	auipc	ra,0x13
    8000e23c:	afe080e7          	jalr	-1282(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000e240:	0000                	unimp
        let pfn: usize = (self as *const Disk as usize) >> PGSHIFT;
    8000e242:	6536                	ld	a0,328(sp)
    8000e244:	00c55593          	srli	a1,a0,0xc
    8000e248:	f82e                	sd	a1,48(sp)
    8000e24a:	a009                	j	8000e24c <.LBB0_78+0x1e>
    8000e24c:	7542                	ld	a0,48(sp)
    8000e24e:	3ca13023          	sd	a0,960(sp)
        write(VIRTIO_MMIO_QUEUE_PFN, u32::try_from(pfn).unwrap());
    8000e252:	00009097          	auipc	ra,0x9
    8000e256:	8ec080e7          	jalr	-1812(ra) # 80016b3e <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E>
    8000e25a:	f42a                	sd	a0,40(sp)
    8000e25c:	f02e                	sd	a1,32(sp)
    8000e25e:	a009                	j	8000e260 <.LBB0_79>

000000008000e260 <.LBB0_79>:
    8000e260:	00018617          	auipc	a2,0x18
    8000e264:	08060613          	addi	a2,a2,128 # 800262e0 <.L__unnamed_13>
    8000e268:	7522                	ld	a0,40(sp)
    8000e26a:	7582                	ld	a1,32(sp)
    8000e26c:	fffff097          	auipc	ra,0xfffff
    8000e270:	a80080e7          	jalr	-1408(ra) # 8000ccec <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h33f778f1365d54f3E>
    8000e274:	ec2a                	sd	a0,24(sp)
    8000e276:	a009                	j	8000e278 <.LBB0_79+0x18>
    8000e278:	04000513          	li	a0,64
    8000e27c:	65e2                	ld	a1,24(sp)
    8000e27e:	00000097          	auipc	ra,0x0
    8000e282:	78e080e7          	jalr	1934(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e286:	a009                	j	8000e288 <.LBB0_79+0x28>
    8000e288:	6509                	lui	a0,0x2
        self.free.iter_mut().for_each(|f| *f = true);
    8000e28a:	65b6                	ld	a1,328(sp)
    8000e28c:	952e                	add	a0,a0,a1
    8000e28e:	45a1                	li	a1,8
    8000e290:	00005097          	auipc	ra,0x5
    8000e294:	a52080e7          	jalr	-1454(ra) # 80012ce2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h207e0e3e48fafa1bE>
    8000e298:	e82a                	sd	a0,16(sp)
    8000e29a:	e42e                	sd	a1,8(sp)
    8000e29c:	a009                	j	8000e29e <.LBB0_79+0x3e>
    8000e29e:	6542                	ld	a0,16(sp)
    8000e2a0:	65a2                	ld	a1,8(sp)
    8000e2a2:	00005097          	auipc	ra,0x5
    8000e2a6:	48c080e7          	jalr	1164(ra) # 8001372e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E>
    8000e2aa:	a009                	j	8000e2ac <.LBB0_79+0x4c>
    }
    8000e2ac:	3c813083          	ld	ra,968(sp)
    8000e2b0:	3d010113          	addi	sp,sp,976
    8000e2b4:	8082                	ret

Disassembly of section .text._ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E:

000000008000e2b6 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E>:

    /// Allocate three descriptors.
    fn alloc3_desc(&mut self, idx: &mut [usize; 3]) -> bool {
    8000e2b6:	712d                	addi	sp,sp,-288
    8000e2b8:	ee06                	sd	ra,280(sp)
    8000e2ba:	e9aa                	sd	a0,208(sp)
    8000e2bc:	edae                	sd	a1,216(sp)
    8000e2be:	460d                	li	a2,3
        for i in 0..idx.len() {
    8000e2c0:	e8aa                	sd	a0,80(sp)
    8000e2c2:	852e                	mv	a0,a1
    8000e2c4:	e4ae                	sd	a1,72(sp)
    8000e2c6:	85b2                	mv	a1,a2
    8000e2c8:	00005097          	auipc	ra,0x5
    8000e2cc:	9ac080e7          	jalr	-1620(ra) # 80012c74 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h84d9c56a7d4105d0E>
    8000e2d0:	e0aa                	sd	a0,64(sp)
    8000e2d2:	a009                	j	8000e2d4 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x1e>
    8000e2d4:	4501                	li	a0,0
    8000e2d6:	f0aa                	sd	a0,96(sp)
    8000e2d8:	6586                	ld	a1,64(sp)
    8000e2da:	f4ae                	sd	a1,104(sp)
    8000e2dc:	00011097          	auipc	ra,0x11
    8000e2e0:	7ce080e7          	jalr	1998(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8000e2e4:	fc2a                	sd	a0,56(sp)
    8000e2e6:	f82e                	sd	a1,48(sp)
    8000e2e8:	a009                	j	8000e2ea <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x34>
    8000e2ea:	7562                	ld	a0,56(sp)
    8000e2ec:	f8aa                	sd	a0,112(sp)
    8000e2ee:	75c2                	ld	a1,48(sp)
    8000e2f0:	fcae                	sd	a1,120(sp)
    8000e2f2:	a009                	j	8000e2f4 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x3e>
    8000e2f4:	1888                	addi	a0,sp,112
    8000e2f6:	00011097          	auipc	ra,0x11
    8000e2fa:	746080e7          	jalr	1862(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000e2fe:	e12a                	sd	a0,128(sp)
    8000e300:	e52e                	sd	a1,136(sp)
    8000e302:	a009                	j	8000e304 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x4e>
    8000e304:	650a                	ld	a0,128(sp)
    8000e306:	4581                	li	a1,0
    8000e308:	00b50463          	beq	a0,a1,8000e310 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x5a>
    8000e30c:	a009                	j	8000e30e <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x58>
    8000e30e:	a031                	j	8000e31a <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x64>
    8000e310:	4505                	li	a0,1
                    }
                    return false;
                }
            }
        }
        true
    8000e312:	04a10fa3          	sb	a0,95(sp)
    }
    8000e316:	a845                	j	8000e3c6 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x110>
        for i in 0..idx.len() {
    8000e318:	0000                	unimp
    8000e31a:	652a                	ld	a0,136(sp)
    8000e31c:	f1aa                	sd	a0,224(sp)
    8000e31e:	f5aa                	sd	a0,232(sp)
    8000e320:	f9aa                	sd	a0,240(sp)
            match self.alloc_desc() {
    8000e322:	65c6                	ld	a1,80(sp)
    8000e324:	f42a                	sd	a0,40(sp)
    8000e326:	852e                	mv	a0,a1
    8000e328:	00000097          	auipc	ra,0x0
    8000e32c:	0be080e7          	jalr	190(ra) # 8000e3e6 <_ZN6kernel6driver11virtio_disk4Disk10alloc_desc17ha953bfec0e5a8ab5E>
    8000e330:	e92a                	sd	a0,144(sp)
    8000e332:	ed2e                	sd	a1,152(sp)
    8000e334:	a009                	j	8000e336 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x80>
                Some(ix) => idx[i] = ix,
    8000e336:	654a                	ld	a0,144(sp)
    8000e338:	4581                	li	a1,0
    8000e33a:	00b50463          	beq	a0,a1,8000e342 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x8c>
    8000e33e:	a009                	j	8000e340 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x8a>
    8000e340:	a829                	j	8000e35a <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xa4>
    8000e342:	4501                	li	a0,0
                    for j in 0..i {
    8000e344:	f12a                	sd	a0,160(sp)
    8000e346:	75a2                	ld	a1,40(sp)
    8000e348:	f52e                	sd	a1,168(sp)
    8000e34a:	00011097          	auipc	ra,0x11
    8000e34e:	760080e7          	jalr	1888(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8000e352:	f02a                	sd	a0,32(sp)
    8000e354:	ec2e                	sd	a1,24(sp)
    8000e356:	a015                	j	8000e37a <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xc4>
            match self.alloc_desc() {
    8000e358:	0000                	unimp
                Some(ix) => idx[i] = ix,
    8000e35a:	656a                	ld	a0,152(sp)
    8000e35c:	fdaa                	sd	a0,248(sp)
    8000e35e:	4589                	li	a1,2
    8000e360:	7622                	ld	a2,40(sp)
    8000e362:	e82a                	sd	a0,16(sp)
    8000e364:	06c5e663          	bltu	a1,a2,8000e3d0 <.LBB1_25>
    8000e368:	a009                	j	8000e36a <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xb4>
    8000e36a:	7522                	ld	a0,40(sp)
    8000e36c:	00351593          	slli	a1,a0,0x3
    8000e370:	6626                	ld	a2,72(sp)
    8000e372:	95b2                	add	a1,a1,a2
    8000e374:	66c2                	ld	a3,16(sp)
    8000e376:	e194                	sd	a3,0(a1)
        for i in 0..idx.len() {
    8000e378:	bfb5                	j	8000e2f4 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x3e>
                    for j in 0..i {
    8000e37a:	7502                	ld	a0,32(sp)
    8000e37c:	f92a                	sd	a0,176(sp)
    8000e37e:	65e2                	ld	a1,24(sp)
    8000e380:	fd2e                	sd	a1,184(sp)
    8000e382:	a009                	j	8000e384 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xce>
    8000e384:	1908                	addi	a0,sp,176
    8000e386:	00011097          	auipc	ra,0x11
    8000e38a:	6b6080e7          	jalr	1718(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000e38e:	e1aa                	sd	a0,192(sp)
    8000e390:	e5ae                	sd	a1,200(sp)
    8000e392:	a009                	j	8000e394 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xde>
    8000e394:	650e                	ld	a0,192(sp)
    8000e396:	4581                	li	a1,0
    8000e398:	00b50463          	beq	a0,a1,8000e3a0 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xea>
    8000e39c:	a009                	j	8000e39e <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xe8>
    8000e39e:	a031                	j	8000e3aa <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xf4>
    8000e3a0:	4501                	li	a0,0
                    return false;
    8000e3a2:	04a10fa3          	sb	a0,95(sp)
    }
    8000e3a6:	a005                	j	8000e3c6 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x110>
                    for j in 0..i {
    8000e3a8:	0000                	unimp
    8000e3aa:	652e                	ld	a0,200(sp)
    8000e3ac:	e22a                	sd	a0,256(sp)
    8000e3ae:	e62a                	sd	a0,264(sp)
    8000e3b0:	ea2a                	sd	a0,272(sp)
                        self.free_desc(j);
    8000e3b2:	65c6                	ld	a1,80(sp)
    8000e3b4:	e42a                	sd	a0,8(sp)
    8000e3b6:	852e                	mv	a0,a1
    8000e3b8:	65a2                	ld	a1,8(sp)
    8000e3ba:	00000097          	auipc	ra,0x0
    8000e3be:	1ba080e7          	jalr	442(ra) # 8000e574 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE>
    8000e3c2:	a009                	j	8000e3c4 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0x10e>
                    for j in 0..i {
    8000e3c4:	b7c1                	j	8000e384 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E+0xce>
    }
    8000e3c6:	05f14503          	lbu	a0,95(sp)
    8000e3ca:	60f2                	ld	ra,280(sp)
    8000e3cc:	6115                	addi	sp,sp,288
    8000e3ce:	8082                	ret

000000008000e3d0 <.LBB1_25>:
                Some(ix) => idx[i] = ix,
    8000e3d0:	00018617          	auipc	a2,0x18
    8000e3d4:	f6060613          	addi	a2,a2,-160 # 80026330 <.L__unnamed_14>
    8000e3d8:	458d                	li	a1,3
    8000e3da:	7522                	ld	a0,40(sp)
    8000e3dc:	00013097          	auipc	ra,0x13
    8000e3e0:	91a080e7          	jalr	-1766(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel6driver11virtio_disk4Disk10alloc_desc17ha953bfec0e5a8ab5E:

000000008000e3e6 <_ZN6kernel6driver11virtio_disk4Disk10alloc_desc17ha953bfec0e5a8ab5E>:

    /// Allocate one descriptor.
    fn alloc_desc(&mut self) -> Option<usize> {
    8000e3e6:	7149                	addi	sp,sp,-368
    8000e3e8:	f686                	sd	ra,360(sp)
    8000e3ea:	f62a                	sd	a0,296(sp)
    8000e3ec:	6589                	lui	a1,0x2
        debug_assert_eq!(self.free.len(), NUM);
    8000e3ee:	95aa                	add	a1,a1,a0
    8000e3f0:	4621                	li	a2,8
    8000e3f2:	ecaa                	sd	a0,88(sp)
    8000e3f4:	852e                	mv	a0,a1
    8000e3f6:	85b2                	mv	a1,a2
    8000e3f8:	00005097          	auipc	ra,0x5
    8000e3fc:	88c080e7          	jalr	-1908(ra) # 80012c84 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbe33bf7fb9e363b3E>
    8000e400:	e12a                	sd	a0,128(sp)
    8000e402:	a009                	j	8000e404 <_ZN6kernel6driver11virtio_disk4Disk10alloc_desc17ha953bfec0e5a8ab5E+0x1e>
    8000e404:	0108                	addi	a0,sp,128
    8000e406:	f8aa                	sd	a0,112(sp)

000000008000e408 <.LBB2_21>:
    8000e408:	00016597          	auipc	a1,0x16
    8000e40c:	94858593          	addi	a1,a1,-1720 # 80023d50 <.L__unnamed_5+0x50>
    8000e410:	fcae                	sd	a1,120(sp)
    8000e412:	fa2a                	sd	a0,304(sp)
    8000e414:	fe2e                	sd	a1,312(sp)
    8000e416:	660a                	ld	a2,128(sp)
    8000e418:	46a1                	li	a3,8
    8000e41a:	e8aa                	sd	a0,80(sp)
    8000e41c:	e4ae                	sd	a1,72(sp)
    8000e41e:	02d60a63          	beq	a2,a3,8000e452 <.LBB2_22+0x1a>
    8000e422:	a009                	j	8000e424 <.LBB2_21+0x1c>
    8000e424:	6546                	ld	a0,80(sp)
    8000e426:	f5aa                	sd	a0,232(sp)
    8000e428:	65a6                	ld	a1,72(sp)
    8000e42a:	f9ae                	sd	a1,240(sp)
    8000e42c:	11b0                	addi	a2,sp,232
    8000e42e:	edb2                	sd	a2,216(sp)
    8000e430:	1994                	addi	a3,sp,240
    8000e432:	f1b6                	sd	a3,224(sp)
    8000e434:	e2b2                	sd	a2,320(sp)
    8000e436:	e6b6                	sd	a3,328(sp)

000000008000e438 <.LBB2_22>:
    8000e438:	00011597          	auipc	a1,0x11
    8000e43c:	58058593          	addi	a1,a1,1408 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000e440:	8532                	mv	a0,a2
    8000e442:	e0b6                	sd	a3,64(sp)
    8000e444:	00011097          	auipc	ra,0x11
    8000e448:	592080e7          	jalr	1426(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000e44c:	fc2a                	sd	a0,56(sp)
    8000e44e:	f82e                	sd	a1,48(sp)
    8000e450:	a821                	j	8000e468 <.LBB2_23>
    8000e452:	4501                	li	a0,0
        for i in 0..NUM {
    8000e454:	fdaa                	sd	a0,248(sp)
    8000e456:	45a1                	li	a1,8
    8000e458:	e22e                	sd	a1,256(sp)
    8000e45a:	00011097          	auipc	ra,0x11
    8000e45e:	650080e7          	jalr	1616(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8000e462:	f42a                	sd	a0,40(sp)
    8000e464:	f02e                	sd	a1,32(sp)
    8000e466:	a8a1                	j	8000e4be <.LBB2_25+0x14>

000000008000e468 <.LBB2_23>:
        debug_assert_eq!(self.free.len(), NUM);
    8000e468:	00011597          	auipc	a1,0x11
    8000e46c:	55058593          	addi	a1,a1,1360 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8000e470:	6506                	ld	a0,64(sp)
    8000e472:	00011097          	auipc	ra,0x11
    8000e476:	564080e7          	jalr	1380(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8000e47a:	ec2a                	sd	a0,24(sp)
    8000e47c:	e82e                	sd	a1,16(sp)
    8000e47e:	a009                	j	8000e480 <.LBB2_23+0x18>
    8000e480:	7562                	ld	a0,56(sp)
    8000e482:	fd2a                	sd	a0,184(sp)
    8000e484:	75c2                	ld	a1,48(sp)
    8000e486:	e1ae                	sd	a1,192(sp)
    8000e488:	6662                	ld	a2,24(sp)
    8000e48a:	e5b2                	sd	a2,200(sp)
    8000e48c:	66c2                	ld	a3,16(sp)
    8000e48e:	e9b6                	sd	a3,208(sp)

000000008000e490 <.LBB2_24>:
    8000e490:	00018597          	auipc	a1,0x18
    8000e494:	d3058593          	addi	a1,a1,-720 # 800261c0 <.L__unnamed_2>
    8000e498:	0128                	addi	a0,sp,136
    8000e49a:	460d                	li	a2,3
    8000e49c:	1934                	addi	a3,sp,184
    8000e49e:	4709                	li	a4,2
    8000e4a0:	ffff7097          	auipc	ra,0xffff7
    8000e4a4:	284080e7          	jalr	644(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000e4a8:	a009                	j	8000e4aa <.LBB2_25>

000000008000e4aa <.LBB2_25>:
    8000e4aa:	00018597          	auipc	a1,0x18
    8000e4ae:	e9e58593          	addi	a1,a1,-354 # 80026348 <.L__unnamed_15>
    8000e4b2:	0128                	addi	a0,sp,136
    8000e4b4:	00013097          	auipc	ra,0x13
    8000e4b8:	882080e7          	jalr	-1918(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8000e4bc:	0000                	unimp
        for i in 0..NUM {
    8000e4be:	7522                	ld	a0,40(sp)
    8000e4c0:	e62a                	sd	a0,264(sp)
    8000e4c2:	7582                	ld	a1,32(sp)
    8000e4c4:	ea2e                	sd	a1,272(sp)
    8000e4c6:	a009                	j	8000e4c8 <.LBB2_25+0x1e>
    8000e4c8:	0228                	addi	a0,sp,264
    8000e4ca:	00011097          	auipc	ra,0x11
    8000e4ce:	572080e7          	jalr	1394(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000e4d2:	ee2a                	sd	a0,280(sp)
    8000e4d4:	f22e                	sd	a1,288(sp)
    8000e4d6:	a009                	j	8000e4d8 <.LBB2_25+0x2e>
    8000e4d8:	6572                	ld	a0,280(sp)
    8000e4da:	4581                	li	a1,0
    8000e4dc:	00b50463          	beq	a0,a1,8000e4e4 <.LBB2_25+0x3a>
    8000e4e0:	a009                	j	8000e4e2 <.LBB2_25+0x38>
    8000e4e2:	a029                	j	8000e4ec <.LBB2_25+0x42>
    8000e4e4:	4501                	li	a0,0
            if self.free[i] {
                self.free[i] = false;
                return Some(i)
            }
        }
        None
    8000e4e6:	f0aa                	sd	a0,96(sp)
    }
    8000e4e8:	a899                	j	8000e53e <.LBB2_25+0x94>
        for i in 0..NUM {
    8000e4ea:	0000                	unimp
    8000e4ec:	7512                	ld	a0,288(sp)
    8000e4ee:	eaaa                	sd	a0,336(sp)
    8000e4f0:	eeaa                	sd	a0,344(sp)
    8000e4f2:	f2aa                	sd	a0,352(sp)
    8000e4f4:	459d                	li	a1,7
            if self.free[i] {
    8000e4f6:	e42a                	sd	a0,8(sp)
    8000e4f8:	04a5e863          	bltu	a1,a0,8000e548 <.LBB2_26>
    8000e4fc:	a009                	j	8000e4fe <.LBB2_25+0x54>
    8000e4fe:	6566                	ld	a0,88(sp)
    8000e500:	65a2                	ld	a1,8(sp)
    8000e502:	00b50633          	add	a2,a0,a1
    8000e506:	6689                	lui	a3,0x2
    8000e508:	9636                	add	a2,a2,a3
    8000e50a:	00064603          	lbu	a2,0(a2)
    8000e50e:	8a05                	andi	a2,a2,1
    8000e510:	4681                	li	a3,0
    8000e512:	00d60863          	beq	a2,a3,8000e522 <.LBB2_25+0x78>
    8000e516:	a009                	j	8000e518 <.LBB2_25+0x6e>
    8000e518:	4521                	li	a0,8
                self.free[i] = false;
    8000e51a:	65a2                	ld	a1,8(sp)
    8000e51c:	00a5e463          	bltu	a1,a0,8000e524 <.LBB2_25+0x7a>
    8000e520:	a83d                	j	8000e55e <.LBB2_27>
        for i in 0..NUM {
    8000e522:	b75d                	j	8000e4c8 <.LBB2_25+0x1e>
                self.free[i] = false;
    8000e524:	6566                	ld	a0,88(sp)
    8000e526:	65a2                	ld	a1,8(sp)
    8000e528:	00b50633          	add	a2,a0,a1
    8000e52c:	6689                	lui	a3,0x2
    8000e52e:	9636                	add	a2,a2,a3
    8000e530:	4681                	li	a3,0
    8000e532:	00d60023          	sb	a3,0(a2)
                return Some(i)
    8000e536:	f4ae                	sd	a1,104(sp)
    8000e538:	4605                	li	a2,1
    8000e53a:	f0b2                	sd	a2,96(sp)
    }
    8000e53c:	a009                	j	8000e53e <.LBB2_25+0x94>
    8000e53e:	7506                	ld	a0,96(sp)
    8000e540:	75a6                	ld	a1,104(sp)
    8000e542:	70b6                	ld	ra,360(sp)
    8000e544:	6175                	addi	sp,sp,368
    8000e546:	8082                	ret

000000008000e548 <.LBB2_26>:
            if self.free[i] {
    8000e548:	00018617          	auipc	a2,0x18
    8000e54c:	e1860613          	addi	a2,a2,-488 # 80026360 <.L__unnamed_16>
    8000e550:	45a1                	li	a1,8
    8000e552:	6522                	ld	a0,8(sp)
    8000e554:	00012097          	auipc	ra,0x12
    8000e558:	7a2080e7          	jalr	1954(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e55e <.LBB2_27>:
                self.free[i] = false;
    8000e55e:	00018617          	auipc	a2,0x18
    8000e562:	e1a60613          	addi	a2,a2,-486 # 80026378 <.L__unnamed_17>
    8000e566:	45a1                	li	a1,8
    8000e568:	6522                	ld	a0,8(sp)
    8000e56a:	00012097          	auipc	ra,0x12
    8000e56e:	78c080e7          	jalr	1932(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE:

000000008000e574 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE>:

    /// Mark a descriptor as free.
    fn free_desc(&mut self, i: usize) {
    8000e574:	7139                	addi	sp,sp,-64
    8000e576:	fc06                	sd	ra,56(sp)
    8000e578:	f42a                	sd	a0,40(sp)
    8000e57a:	f82e                	sd	a1,48(sp)
    8000e57c:	4621                	li	a2,8
        if i >= NUM || self.free[i] {
    8000e57e:	ec2e                	sd	a1,24(sp)
    8000e580:	e82a                	sd	a0,16(sp)
    8000e582:	00c5eb63          	bltu	a1,a2,8000e598 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE+0x24>
    8000e586:	a009                	j	8000e588 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE+0x14>
    8000e588:	4505                	li	a0,1
    8000e58a:	02a103a3          	sb	a0,39(sp)
    8000e58e:	a811                	j	8000e5a2 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE+0x2e>
    8000e590:	4501                	li	a0,0
    8000e592:	02a103a3          	sb	a0,39(sp)
    8000e596:	a031                	j	8000e5a2 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE+0x2e>
    8000e598:	4521                	li	a0,8
    8000e59a:	65e2                	ld	a1,24(sp)
    8000e59c:	00a5e863          	bltu	a1,a0,8000e5ac <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE+0x38>
    8000e5a0:	a8d1                	j	8000e674 <.LBB3_23>
    8000e5a2:	02714503          	lbu	a0,39(sp)
    8000e5a6:	8905                	andi	a0,a0,1
    8000e5a8:	ed09                	bnez	a0,8000e5c2 <.LBB3_20>
    8000e5aa:	a815                	j	8000e5de <.LBB3_21+0x14>
    8000e5ac:	6542                	ld	a0,16(sp)
    8000e5ae:	65e2                	ld	a1,24(sp)
    8000e5b0:	00b50633          	add	a2,a0,a1
    8000e5b4:	6689                	lui	a3,0x2
    8000e5b6:	9636                	add	a2,a2,a3
    8000e5b8:	00064603          	lbu	a2,0(a2)
    8000e5bc:	8a05                	andi	a2,a2,1
    8000e5be:	f669                	bnez	a2,8000e588 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE+0x14>
    8000e5c0:	bfc1                	j	8000e590 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE+0x1c>

000000008000e5c2 <.LBB3_20>:
            panic!("desc index not correct");
    8000e5c2:	00018517          	auipc	a0,0x18
    8000e5c6:	de650513          	addi	a0,a0,-538 # 800263a8 <.L__unnamed_18>

000000008000e5ca <.LBB3_21>:
    8000e5ca:	00018617          	auipc	a2,0x18
    8000e5ce:	df660613          	addi	a2,a2,-522 # 800263c0 <.L__unnamed_19>
    8000e5d2:	45d9                	li	a1,22
    8000e5d4:	00012097          	auipc	ra,0x12
    8000e5d8:	6f6080e7          	jalr	1782(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000e5dc:	0000                	unimp
    8000e5de:	451d                	li	a0,7
        }
        self.desc[i].addr = 0;
    8000e5e0:	65e2                	ld	a1,24(sp)
    8000e5e2:	0ab56463          	bltu	a0,a1,8000e68a <.LBB3_24>
    8000e5e6:	a009                	j	8000e5e8 <.LBB3_21+0x1e>
    8000e5e8:	6562                	ld	a0,24(sp)
    8000e5ea:	00451593          	slli	a1,a0,0x4
    8000e5ee:	6642                	ld	a2,16(sp)
    8000e5f0:	95b2                	add	a1,a1,a2
    8000e5f2:	4681                	li	a3,0
    8000e5f4:	e194                	sd	a3,0(a1)
    8000e5f6:	459d                	li	a1,7
        self.desc[i].len = 0;
    8000e5f8:	0aa5e463          	bltu	a1,a0,8000e6a0 <.LBB3_25>
    8000e5fc:	a009                	j	8000e5fe <.LBB3_21+0x34>
    8000e5fe:	6562                	ld	a0,24(sp)
    8000e600:	00451593          	slli	a1,a0,0x4
    8000e604:	6642                	ld	a2,16(sp)
    8000e606:	95b2                	add	a1,a1,a2
    8000e608:	4681                	li	a3,0
    8000e60a:	c594                	sw	a3,8(a1)
    8000e60c:	459d                	li	a1,7
        self.desc[i].flags = 0;
    8000e60e:	0aa5e463          	bltu	a1,a0,8000e6b6 <.LBB3_26>
    8000e612:	a009                	j	8000e614 <.LBB3_21+0x4a>
    8000e614:	6562                	ld	a0,24(sp)
    8000e616:	00451593          	slli	a1,a0,0x4
    8000e61a:	6642                	ld	a2,16(sp)
    8000e61c:	95b2                	add	a1,a1,a2
    8000e61e:	4681                	li	a3,0
    8000e620:	00d59623          	sh	a3,12(a1)
    8000e624:	459d                	li	a1,7
        self.desc[i].next = 0;
    8000e626:	0aa5e363          	bltu	a1,a0,8000e6cc <.LBB3_27>
    8000e62a:	a009                	j	8000e62c <.LBB3_21+0x62>
    8000e62c:	6562                	ld	a0,24(sp)
    8000e62e:	00451593          	slli	a1,a0,0x4
    8000e632:	6642                	ld	a2,16(sp)
    8000e634:	95b2                	add	a1,a1,a2
    8000e636:	4681                	li	a3,0
    8000e638:	00d59723          	sh	a3,14(a1)
    8000e63c:	459d                	li	a1,7
        self.free[i] = true;
    8000e63e:	0aa5e263          	bltu	a1,a0,8000e6e2 <.LBB3_28>
    8000e642:	a009                	j	8000e644 <.LBB3_21+0x7a>
    8000e644:	6509                	lui	a0,0x2
    8000e646:	65c2                	ld	a1,16(sp)
    8000e648:	952e                	add	a0,a0,a1
    8000e64a:	6662                	ld	a2,24(sp)
    8000e64c:	00c506b3          	add	a3,a0,a2
    8000e650:	4705                	li	a4,1
    8000e652:	00e68023          	sb	a4,0(a3) # 2000 <.Lline_table_start0+0x1b>

000000008000e656 <.LBB3_22>:
        unsafe {
            PROC_MANAGER.wake_up(&self.free[0] as *const bool as usize);
    8000e656:	0004e697          	auipc	a3,0x4e
    8000e65a:	8aa68693          	addi	a3,a3,-1878 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000e65e:	e42a                	sd	a0,8(sp)
    8000e660:	8536                	mv	a0,a3
    8000e662:	65a2                	ld	a1,8(sp)
    8000e664:	0000e097          	auipc	ra,0xe
    8000e668:	638080e7          	jalr	1592(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8000e66c:	a009                	j	8000e66e <.LBB3_22+0x18>
        }
    }
    8000e66e:	70e2                	ld	ra,56(sp)
    8000e670:	6121                	addi	sp,sp,64
    8000e672:	8082                	ret

000000008000e674 <.LBB3_23>:
        if i >= NUM || self.free[i] {
    8000e674:	00018617          	auipc	a2,0x18
    8000e678:	d1c60613          	addi	a2,a2,-740 # 80026390 <.L__unnamed_20>
    8000e67c:	45a1                	li	a1,8
    8000e67e:	6562                	ld	a0,24(sp)
    8000e680:	00012097          	auipc	ra,0x12
    8000e684:	676080e7          	jalr	1654(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e68a <.LBB3_24>:
        self.desc[i].addr = 0;
    8000e68a:	00018617          	auipc	a2,0x18
    8000e68e:	d4e60613          	addi	a2,a2,-690 # 800263d8 <.L__unnamed_21>
    8000e692:	45a1                	li	a1,8
    8000e694:	6562                	ld	a0,24(sp)
    8000e696:	00012097          	auipc	ra,0x12
    8000e69a:	660080e7          	jalr	1632(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e6a0 <.LBB3_25>:
        self.desc[i].len = 0;
    8000e6a0:	00018617          	auipc	a2,0x18
    8000e6a4:	d5060613          	addi	a2,a2,-688 # 800263f0 <.L__unnamed_22>
    8000e6a8:	45a1                	li	a1,8
    8000e6aa:	6562                	ld	a0,24(sp)
    8000e6ac:	00012097          	auipc	ra,0x12
    8000e6b0:	64a080e7          	jalr	1610(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e6b6 <.LBB3_26>:
        self.desc[i].flags = 0;
    8000e6b6:	00018617          	auipc	a2,0x18
    8000e6ba:	d5260613          	addi	a2,a2,-686 # 80026408 <.L__unnamed_23>
    8000e6be:	45a1                	li	a1,8
    8000e6c0:	6562                	ld	a0,24(sp)
    8000e6c2:	00012097          	auipc	ra,0x12
    8000e6c6:	634080e7          	jalr	1588(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e6cc <.LBB3_27>:
        self.desc[i].next = 0;
    8000e6cc:	00018617          	auipc	a2,0x18
    8000e6d0:	d5460613          	addi	a2,a2,-684 # 80026420 <.L__unnamed_24>
    8000e6d4:	45a1                	li	a1,8
    8000e6d6:	6562                	ld	a0,24(sp)
    8000e6d8:	00012097          	auipc	ra,0x12
    8000e6dc:	61e080e7          	jalr	1566(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e6e2 <.LBB3_28>:
        self.free[i] = true;
    8000e6e2:	00018617          	auipc	a2,0x18
    8000e6e6:	d5660613          	addi	a2,a2,-682 # 80026438 <.L__unnamed_25>
    8000e6ea:	45a1                	li	a1,8
    8000e6ec:	6562                	ld	a0,24(sp)
    8000e6ee:	00012097          	auipc	ra,0x12
    8000e6f2:	608080e7          	jalr	1544(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE:

000000008000e6f8 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE>:

    /// Free a chain of descriptors.
    fn free_chain(&mut self, mut i: usize) {
    8000e6f8:	715d                	addi	sp,sp,-80
    8000e6fa:	e486                	sd	ra,72(sp)
    8000e6fc:	f82e                	sd	a1,48(sp)
    8000e6fe:	fc2a                	sd	a0,56(sp)
    8000e700:	f42a                	sd	a0,40(sp)
    8000e702:	a009                	j	8000e704 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE+0xc>
        loop {
            let flag = self.desc[i].flags;
    8000e704:	7542                	ld	a0,48(sp)
    8000e706:	459d                	li	a1,7
    8000e708:	f02a                	sd	a0,32(sp)
    8000e70a:	06a5e263          	bltu	a1,a0,8000e76e <.LBB4_9>
    8000e70e:	a009                	j	8000e710 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE+0x18>
    8000e710:	7502                	ld	a0,32(sp)
    8000e712:	00451593          	slli	a1,a0,0x4
    8000e716:	7622                	ld	a2,40(sp)
    8000e718:	95b2                	add	a1,a1,a2
    8000e71a:	00c5d583          	lhu	a1,12(a1)
    8000e71e:	04b11223          	sh	a1,68(sp)
            let next = self.desc[i].next;
    8000e722:	76c2                	ld	a3,48(sp)
    8000e724:	471d                	li	a4,7
    8000e726:	ec2e                	sd	a1,24(sp)
    8000e728:	e836                	sd	a3,16(sp)
    8000e72a:	04d76d63          	bltu	a4,a3,8000e784 <.LBB4_10>
    8000e72e:	a009                	j	8000e730 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE+0x38>
    8000e730:	6542                	ld	a0,16(sp)
    8000e732:	00451593          	slli	a1,a0,0x4
    8000e736:	7622                	ld	a2,40(sp)
    8000e738:	95b2                	add	a1,a1,a2
    8000e73a:	00e5d583          	lhu	a1,14(a1)
    8000e73e:	04b11323          	sh	a1,70(sp)
            self.free_desc(i);
    8000e742:	76c2                	ld	a3,48(sp)
    8000e744:	8532                	mv	a0,a2
    8000e746:	e42e                	sd	a1,8(sp)
    8000e748:	85b6                	mv	a1,a3
    8000e74a:	00000097          	auipc	ra,0x0
    8000e74e:	e2a080e7          	jalr	-470(ra) # 8000e574 <_ZN6kernel6driver11virtio_disk4Disk9free_desc17h8be7db714431018bE>
    8000e752:	a009                	j	8000e754 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE+0x5c>
            if (flag & VRING_DESC_F_NEXT) != 0 {
    8000e754:	6562                	ld	a0,24(sp)
    8000e756:	00157593          	andi	a1,a0,1
    8000e75a:	4601                	li	a2,0
    8000e75c:	00c58663          	beq	a1,a2,8000e768 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE+0x70>
    8000e760:	a009                	j	8000e762 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE+0x6a>
                i = next as usize;
    8000e762:	6522                	ld	a0,8(sp)
    8000e764:	f82a                	sd	a0,48(sp)
        loop {
    8000e766:	bf79                	j	8000e704 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE+0xc>
            } else {
                break;
            }
        }
    }
    8000e768:	60a6                	ld	ra,72(sp)
    8000e76a:	6161                	addi	sp,sp,80
    8000e76c:	8082                	ret

000000008000e76e <.LBB4_9>:
            let flag = self.desc[i].flags;
    8000e76e:	00018617          	auipc	a2,0x18
    8000e772:	ce260613          	addi	a2,a2,-798 # 80026450 <.L__unnamed_26>
    8000e776:	45a1                	li	a1,8
    8000e778:	7502                	ld	a0,32(sp)
    8000e77a:	00012097          	auipc	ra,0x12
    8000e77e:	57c080e7          	jalr	1404(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e784 <.LBB4_10>:
            let next = self.desc[i].next;
    8000e784:	00018617          	auipc	a2,0x18
    8000e788:	ce460613          	addi	a2,a2,-796 # 80026468 <.L__unnamed_27>
    8000e78c:	45a1                	li	a1,8
    8000e78e:	6542                	ld	a0,16(sp)
    8000e790:	00012097          	auipc	ra,0x12
    8000e794:	566080e7          	jalr	1382(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E:

000000008000e79a <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E>:

    /// Called by the trap/interrupt handler in the kernel 
    /// when the disk sends an interrupt.
    pub fn intr(&mut self) {
    8000e79a:	7159                	addi	sp,sp,-112
    8000e79c:	f486                	sd	ra,104(sp)
    8000e79e:	e4aa                	sd	a0,72(sp)
    8000e7a0:	06000593          	li	a1,96
        unsafe {
            let intr_stat = read(VIRTIO_MMIO_INTERRUPT_STATUS);
    8000e7a4:	fc2a                	sd	a0,56(sp)
    8000e7a6:	852e                	mv	a0,a1
    8000e7a8:	00000097          	auipc	ra,0x0
    8000e7ac:	206080e7          	jalr	518(ra) # 8000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>
    8000e7b0:	85aa                	mv	a1,a0
    8000e7b2:	caaa                	sw	a0,84(sp)
    8000e7b4:	f82e                	sd	a1,48(sp)
    8000e7b6:	a009                	j	8000e7b8 <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x1e>
            write(VIRTIO_MMIO_INTERRUPT_ACK, intr_stat & 0x3);
    8000e7b8:	7542                	ld	a0,48(sp)
    8000e7ba:	00357593          	andi	a1,a0,3
    8000e7be:	06400513          	li	a0,100
    8000e7c2:	00000097          	auipc	ra,0x0
    8000e7c6:	24a080e7          	jalr	586(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    8000e7ca:	a009                	j	8000e7cc <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x32>
    8000e7cc:	4511                	li	a0,4
        }

        fence(Ordering::SeqCst);
    8000e7ce:	04a10323          	sb	a0,70(sp)
    8000e7d2:	fffff097          	auipc	ra,0xfffff
    8000e7d6:	8ac080e7          	jalr	-1876(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    8000e7da:	a009                	j	8000e7dc <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x42>

        // the device increments disk.used->idx when it
        // adds an entry to the used ring.
        while self.used_idx != self.used.idx {
    8000e7dc:	a009                	j	8000e7de <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x44>
    8000e7de:	6509                	lui	a0,0x2
    8000e7e0:	2521                	addiw	a0,a0,8
    8000e7e2:	75e2                	ld	a1,56(sp)
    8000e7e4:	952e                	add	a0,a0,a1
    8000e7e6:	00055503          	lhu	a0,0(a0) # 2000 <.Lline_table_start0+0x1b>
    8000e7ea:	6605                	lui	a2,0x1
    8000e7ec:	2609                	addiw	a2,a2,2
    8000e7ee:	962e                	add	a2,a2,a1
    8000e7f0:	00065603          	lhu	a2,0(a2) # 1000 <.Lline_table_start0+0x25a>
    8000e7f4:	00c51663          	bne	a0,a2,8000e800 <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x66>
    8000e7f8:	a009                	j	8000e7fa <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x60>
            self.info[id].disk = false;
            unsafe { PROC_MANAGER.wake_up(buf_raw_data); }

            self.used_idx += 1;
        }
    }
    8000e7fa:	70a6                	ld	ra,104(sp)
    8000e7fc:	6165                	addi	sp,sp,112
    8000e7fe:	8082                	ret
    8000e800:	4511                	li	a0,4
            fence(Ordering::SeqCst);
    8000e802:	04a103a3          	sb	a0,71(sp)
    8000e806:	fffff097          	auipc	ra,0xfffff
    8000e80a:	878080e7          	jalr	-1928(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    8000e80e:	a009                	j	8000e810 <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x76>
    8000e810:	6509                	lui	a0,0x2
    8000e812:	2521                	addiw	a0,a0,8
            let id = self.used.ring[self.used_idx as usize % NUM].id as usize;
    8000e814:	75e2                	ld	a1,56(sp)
    8000e816:	952e                	add	a0,a0,a1
    8000e818:	00055503          	lhu	a0,0(a0) # 2000 <.Lline_table_start0+0x1b>
    8000e81c:	891d                	andi	a0,a0,7
    8000e81e:	461d                	li	a2,7
    8000e820:	f42a                	sd	a0,40(sp)
    8000e822:	10a66c63          	bltu	a2,a0,8000e93a <.LBB5_28>
    8000e826:	a009                	j	8000e828 <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x8e>
    8000e828:	7522                	ld	a0,40(sp)
    8000e82a:	00351593          	slli	a1,a0,0x3
    8000e82e:	7662                	ld	a2,56(sp)
    8000e830:	95b2                	add	a1,a1,a2
    8000e832:	6685                	lui	a3,0x1
    8000e834:	2691                	addiw	a3,a3,4
    8000e836:	95b6                	add	a1,a1,a3
    8000e838:	0005e583          	lwu	a1,0(a1)
    8000e83c:	ecae                	sd	a1,88(sp)
    8000e83e:	469d                	li	a3,7
            if self.info[id].status != 0 {
    8000e840:	f02e                	sd	a1,32(sp)
    8000e842:	10b6e763          	bltu	a3,a1,8000e950 <.LBB5_29>
    8000e846:	a009                	j	8000e848 <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0xae>
    8000e848:	4561                	li	a0,24
    8000e84a:	7582                	ld	a1,32(sp)
    8000e84c:	02a58533          	mul	a0,a1,a0
    8000e850:	7662                	ld	a2,56(sp)
    8000e852:	9532                	add	a0,a0,a2
    8000e854:	6689                	lui	a3,0x2
    8000e856:	0206869b          	addiw	a3,a3,32
    8000e85a:	9536                	add	a0,a0,a3
    8000e85c:	00054503          	lbu	a0,0(a0)
    8000e860:	4681                	li	a3,0
    8000e862:	02d50163          	beq	a0,a3,8000e884 <.LBB5_24+0x14>
    8000e866:	a009                	j	8000e868 <.LBB5_23>

000000008000e868 <.LBB5_23>:
                panic!("interrupt status");
    8000e868:	00015517          	auipc	a0,0x15
    8000e86c:	2c050513          	addi	a0,a0,704 # 80023b28 <.L__unnamed_20+0x48>

000000008000e870 <.LBB5_24>:
    8000e870:	00018617          	auipc	a2,0x18
    8000e874:	c4060613          	addi	a2,a2,-960 # 800264b0 <.L__unnamed_29>
    8000e878:	45c1                	li	a1,16
    8000e87a:	00012097          	auipc	ra,0x12
    8000e87e:	450080e7          	jalr	1104(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000e882:	0000                	unimp
    8000e884:	451d                	li	a0,7
            let buf_raw_data = self.info[id].buf_channel.clone()
    8000e886:	7582                	ld	a1,32(sp)
    8000e888:	0cb56f63          	bltu	a0,a1,8000e966 <.LBB5_30>
    8000e88c:	a009                	j	8000e88e <.LBB5_24+0x1e>
    8000e88e:	4561                	li	a0,24
    8000e890:	7582                	ld	a1,32(sp)
    8000e892:	02a58533          	mul	a0,a1,a0
    8000e896:	7662                	ld	a2,56(sp)
    8000e898:	9532                	add	a0,a0,a2
    8000e89a:	6689                	lui	a3,0x2
    8000e89c:	26c1                	addiw	a3,a3,16
    8000e89e:	9536                	add	a0,a0,a3
    8000e8a0:	0000b097          	auipc	ra,0xb
    8000e8a4:	85a080e7          	jalr	-1958(ra) # 800190fa <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E>
    8000e8a8:	ec2a                	sd	a0,24(sp)
    8000e8aa:	e82e                	sd	a1,16(sp)
    8000e8ac:	a009                	j	8000e8ae <.LBB5_25>

000000008000e8ae <.LBB5_25>:
    8000e8ae:	00018617          	auipc	a2,0x18
    8000e8b2:	c3260613          	addi	a2,a2,-974 # 800264e0 <.L__unnamed_30>

000000008000e8b6 <.LBB5_26>:
    8000e8b6:	00018717          	auipc	a4,0x18
    8000e8ba:	c7270713          	addi	a4,a4,-910 # 80026528 <.L__unnamed_31>
    8000e8be:	04300693          	li	a3,67
    8000e8c2:	6562                	ld	a0,24(sp)
    8000e8c4:	65c2                	ld	a1,16(sp)
    8000e8c6:	0000a097          	auipc	ra,0xa
    8000e8ca:	15e080e7          	jalr	350(ra) # 80018a24 <_ZN4core6option15Option$LT$T$GT$6expect17ha6d9a97cb631f11cE>
    8000e8ce:	85aa                	mv	a1,a0
    8000e8d0:	f0aa                	sd	a0,96(sp)
    8000e8d2:	e42e                	sd	a1,8(sp)
    8000e8d4:	a009                	j	8000e8d6 <.LBB5_26+0x20>
    8000e8d6:	451d                	li	a0,7
            self.info[id].disk = false;
    8000e8d8:	7582                	ld	a1,32(sp)
    8000e8da:	0ab56163          	bltu	a0,a1,8000e97c <.LBB5_31>
    8000e8de:	a009                	j	8000e8e0 <.LBB5_26+0x2a>
    8000e8e0:	4561                	li	a0,24
    8000e8e2:	7582                	ld	a1,32(sp)
    8000e8e4:	02a58533          	mul	a0,a1,a0
    8000e8e8:	7662                	ld	a2,56(sp)
    8000e8ea:	9532                	add	a0,a0,a2
    8000e8ec:	6689                	lui	a3,0x2
    8000e8ee:	0216869b          	addiw	a3,a3,33
    8000e8f2:	9536                	add	a0,a0,a3
    8000e8f4:	4681                	li	a3,0
    8000e8f6:	00d50023          	sb	a3,0(a0)

000000008000e8fa <.LBB5_27>:
            unsafe { PROC_MANAGER.wake_up(buf_raw_data); }
    8000e8fa:	0004d517          	auipc	a0,0x4d
    8000e8fe:	60650513          	addi	a0,a0,1542 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8000e902:	65a2                	ld	a1,8(sp)
    8000e904:	0000e097          	auipc	ra,0xe
    8000e908:	398080e7          	jalr	920(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8000e90c:	a009                	j	8000e90e <.LBB5_27+0x14>
    8000e90e:	6509                	lui	a0,0x2
    8000e910:	2521                	addiw	a0,a0,8
            self.used_idx += 1;
    8000e912:	75e2                	ld	a1,56(sp)
    8000e914:	952e                	add	a0,a0,a1
    8000e916:	00055503          	lhu	a0,0(a0) # 2000 <.Lline_table_start0+0x1b>
    8000e91a:	0505                	addi	a0,a0,1
    8000e91c:	6641                	lui	a2,0x10
    8000e91e:	367d                	addiw	a2,a2,-1
    8000e920:	8e69                	and	a2,a2,a0
    8000e922:	e02a                	sd	a0,0(sp)
    8000e924:	06a61763          	bne	a2,a0,8000e992 <.LBB5_32>
    8000e928:	a009                	j	8000e92a <.LBB5_27+0x30>
    8000e92a:	6509                	lui	a0,0x2
    8000e92c:	2521                	addiw	a0,a0,8
    8000e92e:	75e2                	ld	a1,56(sp)
    8000e930:	952e                	add	a0,a0,a1
    8000e932:	6602                	ld	a2,0(sp)
    8000e934:	00c51023          	sh	a2,0(a0) # 2000 <.Lline_table_start0+0x1b>
        while self.used_idx != self.used.idx {
    8000e938:	b55d                	j	8000e7de <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E+0x44>

000000008000e93a <.LBB5_28>:
            let id = self.used.ring[self.used_idx as usize % NUM].id as usize;
    8000e93a:	00018617          	auipc	a2,0x18
    8000e93e:	b4660613          	addi	a2,a2,-1210 # 80026480 <.L__unnamed_32>
    8000e942:	45a1                	li	a1,8
    8000e944:	7522                	ld	a0,40(sp)
    8000e946:	00012097          	auipc	ra,0x12
    8000e94a:	3b0080e7          	jalr	944(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e950 <.LBB5_29>:
            if self.info[id].status != 0 {
    8000e950:	00018617          	auipc	a2,0x18
    8000e954:	b4860613          	addi	a2,a2,-1208 # 80026498 <.L__unnamed_33>
    8000e958:	45a1                	li	a1,8
    8000e95a:	7502                	ld	a0,32(sp)
    8000e95c:	00012097          	auipc	ra,0x12
    8000e960:	39a080e7          	jalr	922(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e966 <.LBB5_30>:
            let buf_raw_data = self.info[id].buf_channel.clone()
    8000e966:	00018617          	auipc	a2,0x18
    8000e96a:	b6260613          	addi	a2,a2,-1182 # 800264c8 <.L__unnamed_34>
    8000e96e:	45a1                	li	a1,8
    8000e970:	7502                	ld	a0,32(sp)
    8000e972:	00012097          	auipc	ra,0x12
    8000e976:	384080e7          	jalr	900(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e97c <.LBB5_31>:
            self.info[id].disk = false;
    8000e97c:	00018617          	auipc	a2,0x18
    8000e980:	bc460613          	addi	a2,a2,-1084 # 80026540 <.L__unnamed_35>
    8000e984:	45a1                	li	a1,8
    8000e986:	7502                	ld	a0,32(sp)
    8000e988:	00012097          	auipc	ra,0x12
    8000e98c:	36e080e7          	jalr	878(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000e992 <.LBB5_32>:
            self.used_idx += 1;
    8000e992:	00018517          	auipc	a0,0x18
    8000e996:	bde50513          	addi	a0,a0,-1058 # 80026570 <str.0>

000000008000e99a <.LBB5_33>:
    8000e99a:	00018617          	auipc	a2,0x18
    8000e99e:	bbe60613          	addi	a2,a2,-1090 # 80026558 <.L__unnamed_36>
    8000e9a2:	45f1                	li	a1,28
    8000e9a4:	00012097          	auipc	ra,0x12
    8000e9a8:	326080e7          	jalr	806(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE:

000000008000e9ae <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE>:
// this many virtio descriptors
// must be a power of 2
const NUM: usize = 8;

#[inline]
unsafe fn read(offset: usize) -> u32 {
    8000e9ae:	7139                	addi	sp,sp,-64
    8000e9b0:	fc06                	sd	ra,56(sp)
    8000e9b2:	f42a                	sd	a0,40(sp)
    8000e9b4:	100015b7          	lui	a1,0x10001
    let src = (Into::<usize>::into(VIRTIO0) + offset) as *const u32;
    8000e9b8:	f02a                	sd	a0,32(sp)
    8000e9ba:	852e                	mv	a0,a1
    8000e9bc:	0000b097          	auipc	ra,0xb
    8000e9c0:	838080e7          	jalr	-1992(ra) # 800191f4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE>
    8000e9c4:	ec2a                	sd	a0,24(sp)
    8000e9c6:	a009                	j	8000e9c8 <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE+0x1a>
    8000e9c8:	6562                	ld	a0,24(sp)
    8000e9ca:	7582                	ld	a1,32(sp)
    8000e9cc:	00b50633          	add	a2,a0,a1
    8000e9d0:	e832                	sd	a2,16(sp)
    8000e9d2:	00a66f63          	bltu	a2,a0,8000e9f0 <.LBB6_5>
    8000e9d6:	a009                	j	8000e9d8 <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE+0x2a>
    8000e9d8:	6542                	ld	a0,16(sp)
    8000e9da:	f82a                	sd	a0,48(sp)
    ptr::read_volatile(src)
    8000e9dc:	00002097          	auipc	ra,0x2
    8000e9e0:	a28080e7          	jalr	-1496(ra) # 80010404 <_ZN4core3ptr13read_volatile17h0a4ad40027f7331eE>
    8000e9e4:	e42a                	sd	a0,8(sp)
    8000e9e6:	a009                	j	8000e9e8 <_ZN6kernel6driver11virtio_disk4read17hb31033cb8a771e2eE+0x3a>
}
    8000e9e8:	6522                	ld	a0,8(sp)
    8000e9ea:	70e2                	ld	ra,56(sp)
    8000e9ec:	6121                	addi	sp,sp,64
    8000e9ee:	8082                	ret

000000008000e9f0 <.LBB6_5>:
    let src = (Into::<usize>::into(VIRTIO0) + offset) as *const u32;
    8000e9f0:	00018517          	auipc	a0,0x18
    8000e9f4:	b8050513          	addi	a0,a0,-1152 # 80026570 <str.0>

000000008000e9f8 <.LBB6_6>:
    8000e9f8:	00018617          	auipc	a2,0x18
    8000e9fc:	b9860613          	addi	a2,a2,-1128 # 80026590 <.L__unnamed_37>
    8000ea00:	45f1                	li	a1,28
    8000ea02:	00012097          	auipc	ra,0x12
    8000ea06:	2c8080e7          	jalr	712(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E:

000000008000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>:

#[inline]
unsafe fn write(offset: usize, data: u32) {
    8000ea0c:	7139                	addi	sp,sp,-64
    8000ea0e:	fc06                	sd	ra,56(sp)
    8000ea10:	862e                	mv	a2,a1
    8000ea12:	f02a                	sd	a0,32(sp)
    8000ea14:	d62e                	sw	a1,44(sp)
    8000ea16:	100015b7          	lui	a1,0x10001
    let dst = (Into::<usize>::into(VIRTIO0) + offset) as *mut u32;
    8000ea1a:	ec2a                	sd	a0,24(sp)
    8000ea1c:	852e                	mv	a0,a1
    8000ea1e:	e832                	sd	a2,16(sp)
    8000ea20:	0000a097          	auipc	ra,0xa
    8000ea24:	7d4080e7          	jalr	2004(ra) # 800191f4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE>
    8000ea28:	e42a                	sd	a0,8(sp)
    8000ea2a:	a009                	j	8000ea2c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E+0x20>
    8000ea2c:	6522                	ld	a0,8(sp)
    8000ea2e:	65e2                	ld	a1,24(sp)
    8000ea30:	00b50633          	add	a2,a0,a1
    8000ea34:	e032                	sd	a2,0(sp)
    8000ea36:	00a66e63          	bltu	a2,a0,8000ea52 <.LBB7_5>
    8000ea3a:	a009                	j	8000ea3c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E+0x30>
    8000ea3c:	6502                	ld	a0,0(sp)
    8000ea3e:	f82a                	sd	a0,48(sp)
    ptr::write_volatile(dst, data);
    8000ea40:	65c2                	ld	a1,16(sp)
    8000ea42:	00002097          	auipc	ra,0x2
    8000ea46:	9fe080e7          	jalr	-1538(ra) # 80010440 <_ZN4core3ptr14write_volatile17h418d41cedb4e5342E>
    8000ea4a:	a009                	j	8000ea4c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E+0x40>
}
    8000ea4c:	70e2                	ld	ra,56(sp)
    8000ea4e:	6121                	addi	sp,sp,64
    8000ea50:	8082                	ret

000000008000ea52 <.LBB7_5>:
    let dst = (Into::<usize>::into(VIRTIO0) + offset) as *mut u32;
    8000ea52:	00018517          	auipc	a0,0x18
    8000ea56:	b1e50513          	addi	a0,a0,-1250 # 80026570 <str.0>

000000008000ea5a <.LBB7_6>:
    8000ea5a:	00018617          	auipc	a2,0x18
    8000ea5e:	b4e60613          	addi	a2,a2,-1202 # 800265a8 <.L__unnamed_38>
    8000ea62:	45f1                	li	a1,28
    8000ea64:	00012097          	auipc	ra,0x12
    8000ea68:	266080e7          	jalr	614(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb5349879292ed58fE:

000000008000ea6e <_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb5349879292ed58fE>:
    fn index_mut(&mut self, index: I) -> &mut I::Output {
    8000ea6e:	7179                	addi	sp,sp,-48
    8000ea70:	f406                	sd	ra,40(sp)
    8000ea72:	e82a                	sd	a0,16(sp)
    8000ea74:	ec2e                	sd	a1,24(sp)
        index.index_mut(self)
    8000ea76:	ffff7097          	auipc	ra,0xffff7
    8000ea7a:	8f2080e7          	jalr	-1806(ra) # 80005368 <_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb0b3801e92c6e74bE>
    8000ea7e:	e42a                	sd	a0,8(sp)
    8000ea80:	e02e                	sd	a1,0(sp)
    8000ea82:	a009                	j	8000ea84 <_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb5349879292ed58fE+0x16>
    }
    8000ea84:	6522                	ld	a0,8(sp)
    8000ea86:	6582                	ld	a1,0(sp)
    8000ea88:	70a2                	ld	ra,40(sp)
    8000ea8a:	6145                	addi	sp,sp,48
    8000ea8c:	8082                	ret

Disassembly of section .text._ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc95d10a015289ed6E:

000000008000ea8e <_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc95d10a015289ed6E>:
    fn index_mut(&mut self, index: I) -> &mut I::Output {
    8000ea8e:	7139                	addi	sp,sp,-64
    8000ea90:	fc06                	sd	ra,56(sp)
    8000ea92:	f02a                	sd	a0,32(sp)
    8000ea94:	f42e                	sd	a1,40(sp)
    8000ea96:	f832                	sd	a2,48(sp)
        index.index_mut(self)
    8000ea98:	ec2a                	sd	a0,24(sp)
    8000ea9a:	8532                	mv	a0,a2
    8000ea9c:	6662                	ld	a2,24(sp)
    8000ea9e:	e82e                	sd	a1,16(sp)
    8000eaa0:	85b2                	mv	a1,a2
    8000eaa2:	6642                	ld	a2,16(sp)
    8000eaa4:	ffff6097          	auipc	ra,0xffff6
    8000eaa8:	43a080e7          	jalr	1082(ra) # 80004ede <_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf4ffe10e6b956610E>
    8000eaac:	e42a                	sd	a0,8(sp)
    8000eaae:	e02e                	sd	a1,0(sp)
    8000eab0:	a009                	j	8000eab2 <_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc95d10a015289ed6E+0x24>
    }
    8000eab2:	6522                	ld	a0,8(sp)
    8000eab4:	6582                	ld	a1,0(sp)
    8000eab6:	70e2                	ld	ra,56(sp)
    8000eab8:	6121                	addi	sp,sp,64
    8000eaba:	8082                	ret

Disassembly of section .text._ZN6kernel6memory14copy_to_kernel17hdbaa2aea54d3530eE:

000000008000eabc <_ZN6kernel6memory14copy_to_kernel17hdbaa2aea54d3530eE>:

/// Copy from either a user address, or kernel address,
/// depending on is_user. 
/// Returns Result<(), &'static str>
/// 从用户或者内核地址拷贝到内核中
pub fn copy_to_kernel(
    8000eabc:	7135                	addi	sp,sp,-160
    8000eabe:	ed06                	sd	ra,152(sp)
    8000eac0:	872e                	mv	a4,a1
    8000eac2:	f0aa                	sd	a0,96(sp)
    8000eac4:	06b107a3          	sb	a1,111(sp)
    8000eac8:	f8b2                	sd	a2,112(sp)
    8000eaca:	fcb6                	sd	a3,120(sp)

000000008000eacc <.LBB0_11>:
    is_user: bool, 
    src: usize, 
    len: usize
) -> Result<(), &'static str>{
    unsafe {
        let my_proc =  CPU_MANAGER.myproc().unwrap();
    8000eacc:	00060597          	auipc	a1,0x60
    8000ead0:	53458593          	addi	a1,a1,1332 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000ead4:	e4aa                	sd	a0,72(sp)
    8000ead6:	852e                	mv	a0,a1
    8000ead8:	e0b6                	sd	a3,64(sp)
    8000eada:	fc32                	sd	a2,56(sp)
    8000eadc:	f83a                	sd	a4,48(sp)
    8000eade:	0000f097          	auipc	ra,0xf
    8000eae2:	c5a080e7          	jalr	-934(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8000eae6:	f42a                	sd	a0,40(sp)
    8000eae8:	a009                	j	8000eaea <.LBB0_12>

000000008000eaea <.LBB0_12>:
    8000eaea:	00018597          	auipc	a1,0x18
    8000eaee:	aee58593          	addi	a1,a1,-1298 # 800265d8 <.L__unnamed_1>
    8000eaf2:	7522                	ld	a0,40(sp)
    8000eaf4:	0000a097          	auipc	ra,0xa
    8000eaf8:	074080e7          	jalr	116(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    8000eafc:	85aa                	mv	a1,a0
    8000eafe:	e12a                	sd	a0,128(sp)
    8000eb00:	f02e                	sd	a1,32(sp)
    8000eb02:	a009                	j	8000eb04 <.LBB0_12+0x1a>
    8000eb04:	4501                	li	a0,0
        
        if is_user {
    8000eb06:	75c2                	ld	a1,48(sp)
    8000eb08:	00a58c63          	beq	a1,a0,8000eb20 <.LBB0_12+0x36>
    8000eb0c:	a009                	j	8000eb0e <.LBB0_12+0x24>
            let pdata = &mut *(my_proc.data.get());
    8000eb0e:	7502                	ld	a0,32(sp)
    8000eb10:	04050513          	addi	a0,a0,64
    8000eb14:	00008097          	auipc	ra,0x8
    8000eb18:	e74080e7          	jalr	-396(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8000eb1c:	ec2a                	sd	a0,24(sp)
    8000eb1e:	a809                	j	8000eb30 <.LBB0_12+0x46>
                dst,
                src,
                len
            )
        } else {
            ptr::copy(
    8000eb20:	7562                	ld	a0,56(sp)
    8000eb22:	65a6                	ld	a1,72(sp)
    8000eb24:	6606                	ld	a2,64(sp)
    8000eb26:	ffff7097          	auipc	ra,0xffff7
    8000eb2a:	0ce080e7          	jalr	206(ra) # 80005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>
    8000eb2e:	a0a1                	j	8000eb76 <.LBB0_13+0x34>
            let pdata = &mut *(my_proc.data.get());
    8000eb30:	6562                	ld	a0,24(sp)
    8000eb32:	e52a                	sd	a0,136(sp)
            let page_table = pdata.pagetable.as_mut().unwrap();
    8000eb34:	0541                	addi	a0,a0,16
    8000eb36:	0000a097          	auipc	ra,0xa
    8000eb3a:	cfe080e7          	jalr	-770(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    8000eb3e:	e82a                	sd	a0,16(sp)
    8000eb40:	a009                	j	8000eb42 <.LBB0_13>

000000008000eb42 <.LBB0_13>:
    8000eb42:	00018597          	auipc	a1,0x18
    8000eb46:	aae58593          	addi	a1,a1,-1362 # 800265f0 <.L__unnamed_2>
    8000eb4a:	6542                	ld	a0,16(sp)
    8000eb4c:	0000a097          	auipc	ra,0xa
    8000eb50:	12a080e7          	jalr	298(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    8000eb54:	85aa                	mv	a1,a0
    8000eb56:	e92a                	sd	a0,144(sp)
    8000eb58:	e42e                	sd	a1,8(sp)
    8000eb5a:	a009                	j	8000eb5c <.LBB0_13+0x1a>
            page_table.copy_in(
    8000eb5c:	6522                	ld	a0,8(sp)
    8000eb5e:	6108                	ld	a0,0(a0)
    8000eb60:	65a6                	ld	a1,72(sp)
    8000eb62:	7662                	ld	a2,56(sp)
    8000eb64:	6686                	ld	a3,64(sp)
    8000eb66:	00001097          	auipc	ra,0x1
    8000eb6a:	2e6080e7          	jalr	742(ra) # 8000fe4c <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E>
    8000eb6e:	e8aa                	sd	a0,80(sp)
    8000eb70:	ecae                	sd	a1,88(sp)
    8000eb72:	a009                	j	8000eb74 <.LBB0_13+0x32>
        if is_user {
    8000eb74:	a021                	j	8000eb7c <.LBB0_13+0x3a>
    8000eb76:	4501                	li	a0,0
                src as *const u8, 
                dst as *mut u8, 
                len
            );
            Ok(())
    8000eb78:	e8aa                	sd	a0,80(sp)
        if is_user {
    8000eb7a:	a009                	j	8000eb7c <.LBB0_13+0x3a>
        }
    }
}
    8000eb7c:	6546                	ld	a0,80(sp)
    8000eb7e:	65e6                	ld	a1,88(sp)
    8000eb80:	60ea                	ld	ra,152(sp)
    8000eb82:	610d                	addi	sp,sp,160
    8000eb84:	8082                	ret

Disassembly of section .text._ZN6kernel6memory16copy_from_kernel17hacd3d459320e9105E:

000000008000eb86 <_ZN6kernel6memory16copy_from_kernel17hacd3d459320e9105E>:

/// Copy to either a user address, or kernel address,
/// depending on usr_dst. 
/// Returns 0 on success, -1 on error. 
/// 如果is_user是true的话，表明dst是用户的虚拟地址，否则是内核的虚拟地址
pub fn copy_from_kernel(
    8000eb86:	7131                	addi	sp,sp,-192
    8000eb88:	fd06                	sd	ra,184(sp)
    8000eb8a:	872a                	mv	a4,a0
    8000eb8c:	08a103a3          	sb	a0,135(sp)
    8000eb90:	e52e                	sd	a1,136(sp)
    8000eb92:	e932                	sd	a2,144(sp)
    8000eb94:	ed36                	sd	a3,152(sp)

000000008000eb96 <.LBB1_15>:
    dst: usize,
    src: *const u8,
    len: usize
) -> Result<(), &'static str> {
    unsafe{
        let p = CPU_MANAGER.myproc().unwrap();
    8000eb96:	00060517          	auipc	a0,0x60
    8000eb9a:	46a50513          	addi	a0,a0,1130 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8000eb9e:	e8b6                	sd	a3,80(sp)
    8000eba0:	e4b2                	sd	a2,72(sp)
    8000eba2:	e0ae                	sd	a1,64(sp)
    8000eba4:	fc3a                	sd	a4,56(sp)
    8000eba6:	0000f097          	auipc	ra,0xf
    8000ebaa:	b92080e7          	jalr	-1134(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8000ebae:	f82a                	sd	a0,48(sp)
    8000ebb0:	a009                	j	8000ebb2 <.LBB1_16>

000000008000ebb2 <.LBB1_16>:
    8000ebb2:	00018597          	auipc	a1,0x18
    8000ebb6:	a5658593          	addi	a1,a1,-1450 # 80026608 <.L__unnamed_3>
    8000ebba:	7542                	ld	a0,48(sp)
    8000ebbc:	0000a097          	auipc	ra,0xa
    8000ebc0:	fac080e7          	jalr	-84(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    8000ebc4:	85aa                	mv	a1,a0
    8000ebc6:	f12a                	sd	a0,160(sp)
    8000ebc8:	f42e                	sd	a1,40(sp)
    8000ebca:	a009                	j	8000ebcc <.LBB1_16+0x1a>
    8000ebcc:	4501                	li	a0,0
        if is_user {
    8000ebce:	75e2                	ld	a1,56(sp)
    8000ebd0:	00a58e63          	beq	a1,a0,8000ebec <.LBB1_16+0x3a>
    8000ebd4:	a009                	j	8000ebd6 <.LBB1_16+0x24>
            // println!("[Debug] 从内核拷贝到用户");
            let pdata = p.data.get_mut();
    8000ebd6:	7522                	ld	a0,40(sp)
    8000ebd8:	04050513          	addi	a0,a0,64
    8000ebdc:	00008097          	auipc	ra,0x8
    8000ebe0:	dee080e7          	jalr	-530(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    8000ebe4:	85aa                	mv	a1,a0
    8000ebe6:	f52a                	sd	a0,168(sp)
    8000ebe8:	f02e                	sd	a1,32(sp)
    8000ebea:	a809                	j	8000ebfc <.LBB1_16+0x4a>
    8000ebec:	10a8                	addi	a0,sp,104
    8000ebee:	4581                	li	a1,0
                    src,
                    len
                )
        } else {
            // println!("[Debug] 从内核拷贝到内核");
            let mut buf = vec![0u8;len];
    8000ebf0:	6646                	ld	a2,80(sp)
    8000ebf2:	0000b097          	auipc	ra,0xb
    8000ebf6:	eca080e7          	jalr	-310(ra) # 80019abc <_ZN5alloc3vec9from_elem17hcd18068e6cc62c44E>
    8000ebfa:	a099                	j	8000ec40 <.LBB1_17+0x34>
            let page_table = pdata.pagetable.as_mut().unwrap();
    8000ebfc:	7502                	ld	a0,32(sp)
    8000ebfe:	0541                	addi	a0,a0,16
    8000ec00:	0000a097          	auipc	ra,0xa
    8000ec04:	c34080e7          	jalr	-972(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    8000ec08:	ec2a                	sd	a0,24(sp)
    8000ec0a:	a009                	j	8000ec0c <.LBB1_17>

000000008000ec0c <.LBB1_17>:
    8000ec0c:	00018597          	auipc	a1,0x18
    8000ec10:	a1458593          	addi	a1,a1,-1516 # 80026620 <.L__unnamed_4>
    8000ec14:	6562                	ld	a0,24(sp)
    8000ec16:	0000a097          	auipc	ra,0xa
    8000ec1a:	060080e7          	jalr	96(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    8000ec1e:	85aa                	mv	a1,a0
    8000ec20:	f92a                	sd	a0,176(sp)
    8000ec22:	e82e                	sd	a1,16(sp)
    8000ec24:	a009                	j	8000ec26 <.LBB1_17+0x1a>
            page_table
    8000ec26:	6542                	ld	a0,16(sp)
    8000ec28:	6108                	ld	a0,0(a0)
    8000ec2a:	6586                	ld	a1,64(sp)
    8000ec2c:	6626                	ld	a2,72(sp)
    8000ec2e:	66c6                	ld	a3,80(sp)
    8000ec30:	00001097          	auipc	ra,0x1
    8000ec34:	ed6080e7          	jalr	-298(ra) # 8000fb06 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE>
    8000ec38:	ecaa                	sd	a0,88(sp)
    8000ec3a:	f0ae                	sd	a1,96(sp)
    8000ec3c:	a009                	j	8000ec3e <.LBB1_17+0x32>
        if is_user {
    8000ec3e:	a089                	j	8000ec80 <.LBB1_17+0x74>
    8000ec40:	10a8                	addi	a0,sp,104
            ptr::copy(src as *const u8, buf.as_mut_ptr(), len);
    8000ec42:	0000b097          	auipc	ra,0xb
    8000ec46:	e16080e7          	jalr	-490(ra) # 80019a58 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E>
    8000ec4a:	e42a                	sd	a0,8(sp)
    8000ec4c:	a009                	j	8000ec4e <.LBB1_17+0x42>
    8000ec4e:	6526                	ld	a0,72(sp)
    8000ec50:	65a2                	ld	a1,8(sp)
    8000ec52:	6646                	ld	a2,80(sp)
    8000ec54:	ffff7097          	auipc	ra,0xffff7
    8000ec58:	fa0080e7          	jalr	-96(ra) # 80005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>
    8000ec5c:	a009                	j	8000ec5e <.LBB1_17+0x52>
            // println!("buf: {:?}", buf);
            // println!("[Debug] len: 0x{:x}", len);
            ptr::copy(
    8000ec5e:	6526                	ld	a0,72(sp)
    8000ec60:	6586                	ld	a1,64(sp)
    8000ec62:	6646                	ld	a2,80(sp)
    8000ec64:	ffff7097          	auipc	ra,0xffff7
    8000ec68:	f90080e7          	jalr	-112(ra) # 80005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>
    8000ec6c:	a009                	j	8000ec6e <.LBB1_17+0x62>
    8000ec6e:	4501                	li	a0,0
                src as *const u8, 
                dst as *mut u8, 
                len
            );
            Ok(())
    8000ec70:	ecaa                	sd	a0,88(sp)
    8000ec72:	10a8                	addi	a0,sp,104
        }
    8000ec74:	ffff8097          	auipc	ra,0xffff8
    8000ec78:	bf8080e7          	jalr	-1032(ra) # 8000686c <_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hf808aad7710e9ab8E>
    8000ec7c:	a009                	j	8000ec7e <.LBB1_17+0x72>
        if is_user {
    8000ec7e:	a009                	j	8000ec80 <.LBB1_17+0x74>
    }

    8000ec80:	6566                	ld	a0,88(sp)
    8000ec82:	7586                	ld	a1,96(sp)
    8000ec84:	70ea                	ld	ra,184(sp)
    8000ec86:	6129                	addi	sp,sp,192
    8000ec88:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable7as_addr17h893d4e1b40bfebc5E:

000000008000ec8a <_ZN6kernel6memory7mapping10page_table9PageTable7as_addr17h893d4e1b40bfebc5E>:

static mut KERNEL_PAGETABLE:PageTable = PageTable::empty();


impl PageTable{
    pub fn as_addr(&self) -> usize{
    8000ec8a:	1101                	addi	sp,sp,-32
    8000ec8c:	ec06                	sd	ra,24(sp)
    8000ec8e:	e82a                	sd	a0,16(sp)
    8000ec90:	20000593          	li	a1,512
        self.entries.as_ptr() as usize
    8000ec94:	ffff6097          	auipc	ra,0xffff6
    8000ec98:	168080e7          	jalr	360(ra) # 80004dfc <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc98e9f902c2df372E>
    8000ec9c:	e42a                	sd	a0,8(sp)
    8000ec9e:	a009                	j	8000eca0 <_ZN6kernel6memory7mapping10page_table9PageTable7as_addr17h893d4e1b40bfebc5E+0x16>
    }
    8000eca0:	6522                	ld	a0,8(sp)
    8000eca2:	60e2                	ld	ra,24(sp)
    8000eca4:	6105                	addi	sp,sp,32
    8000eca6:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable7as_satp17h37eb5d19d3a9f0cdE:

000000008000eca8 <_ZN6kernel6memory7mapping10page_table9PageTable7as_satp17h37eb5d19d3a9f0cdE>:
        }
    }

    /// Convert the page table to be the usize
    /// that can be written in satp register
    pub fn as_satp(&self) -> usize {
    8000eca8:	1101                	addi	sp,sp,-32
    8000ecaa:	ec06                	sd	ra,24(sp)
    8000ecac:	e82a                	sd	a0,16(sp)
    8000ecae:	20000593          	li	a1,512
        satp::SATP_SV39 | ((self.entries.as_ptr() as usize) >> PGSHIFT)
    8000ecb2:	ffff6097          	auipc	ra,0xffff6
    8000ecb6:	14a080e7          	jalr	330(ra) # 80004dfc <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc98e9f902c2df372E>
    8000ecba:	e42a                	sd	a0,8(sp)
    8000ecbc:	a009                	j	8000ecbe <_ZN6kernel6memory7mapping10page_table9PageTable7as_satp17h37eb5d19d3a9f0cdE+0x16>
    8000ecbe:	6522                	ld	a0,8(sp)
    8000ecc0:	00c55593          	srli	a1,a0,0xc
    8000ecc4:	e02e                	sd	a1,0(sp)
    8000ecc6:	a009                	j	8000ecc8 <_ZN6kernel6memory7mapping10page_table9PageTable7as_satp17h37eb5d19d3a9f0cdE+0x20>
    8000ecc8:	557d                	li	a0,-1
    8000ecca:	157e                	slli	a0,a0,0x3f
    8000eccc:	6582                	ld	a1,0(sp)
    8000ecce:	8d4d                	or	a0,a0,a1
    }
    8000ecd0:	60e2                	ld	ra,24(sp)
    8000ecd2:	6105                	addi	sp,sp,32
    8000ecd4:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E:

000000008000ecd6 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E>:
        for pte in self.entries.iter_mut(){
            pte.write_zero();
        }
    }

    pub fn write(&mut self, page_table: &PageTable) {
    8000ecd6:	7135                	addi	sp,sp,-160
    8000ecd8:	ed06                	sd	ra,152(sp)
    8000ecda:	f8aa                	sd	a0,112(sp)
    8000ecdc:	fcae                	sd	a1,120(sp)
    8000ecde:	4601                	li	a2,0
        for i in 0..512 {
    8000ece0:	e0b2                	sd	a2,64(sp)
    8000ece2:	20000693          	li	a3,512
    8000ece6:	e4b6                	sd	a3,72(sp)
    8000ece8:	fc2a                	sd	a0,56(sp)
    8000ecea:	8532                	mv	a0,a2
    8000ecec:	f82e                	sd	a1,48(sp)
    8000ecee:	85b6                	mv	a1,a3
    8000ecf0:	00011097          	auipc	ra,0x11
    8000ecf4:	dba080e7          	jalr	-582(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8000ecf8:	f42a                	sd	a0,40(sp)
    8000ecfa:	f02e                	sd	a1,32(sp)
    8000ecfc:	a009                	j	8000ecfe <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x28>
    8000ecfe:	7522                	ld	a0,40(sp)
    8000ed00:	e8aa                	sd	a0,80(sp)
    8000ed02:	7582                	ld	a1,32(sp)
    8000ed04:	ecae                	sd	a1,88(sp)
    8000ed06:	a009                	j	8000ed08 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x32>
    8000ed08:	0888                	addi	a0,sp,80
    8000ed0a:	00011097          	auipc	ra,0x11
    8000ed0e:	d32080e7          	jalr	-718(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000ed12:	f0aa                	sd	a0,96(sp)
    8000ed14:	f4ae                	sd	a1,104(sp)
    8000ed16:	a009                	j	8000ed18 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x42>
    8000ed18:	7506                	ld	a0,96(sp)
    8000ed1a:	4581                	li	a1,0
    8000ed1c:	00b50463          	beq	a0,a1,8000ed24 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x4e>
    8000ed20:	a009                	j	8000ed22 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x4c>
    8000ed22:	a029                	j	8000ed2c <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x56>
            self.entries[i].write(page_table.entries[i].as_usize());
        }
    }
    8000ed24:	60ea                	ld	ra,152(sp)
    8000ed26:	610d                	addi	sp,sp,160
    8000ed28:	8082                	ret
        for i in 0..512 {
    8000ed2a:	0000                	unimp
    8000ed2c:	7526                	ld	a0,104(sp)
    8000ed2e:	e12a                	sd	a0,128(sp)
    8000ed30:	e52a                	sd	a0,136(sp)
    8000ed32:	e92a                	sd	a0,144(sp)
    8000ed34:	1ff00593          	li	a1,511
            self.entries[i].write(page_table.entries[i].as_usize());
    8000ed38:	ec2a                	sd	a0,24(sp)
    8000ed3a:	04a5e463          	bltu	a1,a0,8000ed82 <.LBB2_14>
    8000ed3e:	a009                	j	8000ed40 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x6a>
    8000ed40:	6562                	ld	a0,24(sp)
    8000ed42:	00351593          	slli	a1,a0,0x3
    8000ed46:	7662                	ld	a2,56(sp)
    8000ed48:	00b60533          	add	a0,a2,a1
    8000ed4c:	1ff00593          	li	a1,511
    8000ed50:	66e2                	ld	a3,24(sp)
    8000ed52:	e82a                	sd	a0,16(sp)
    8000ed54:	04d5e363          	bltu	a1,a3,8000ed9a <.LBB2_15>
    8000ed58:	a009                	j	8000ed5a <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x84>
    8000ed5a:	6562                	ld	a0,24(sp)
    8000ed5c:	00351593          	slli	a1,a0,0x3
    8000ed60:	7642                	ld	a2,48(sp)
    8000ed62:	00b60533          	add	a0,a2,a1
    8000ed66:	ffff9097          	auipc	ra,0xffff9
    8000ed6a:	e8e080e7          	jalr	-370(ra) # 80007bf4 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_usize17h486ac0941c123b16E>
    8000ed6e:	e42a                	sd	a0,8(sp)
    8000ed70:	a009                	j	8000ed72 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x9c>
    8000ed72:	6542                	ld	a0,16(sp)
    8000ed74:	65a2                	ld	a1,8(sp)
    8000ed76:	ffff9097          	auipc	ra,0xffff9
    8000ed7a:	fbc080e7          	jalr	-68(ra) # 80007d32 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry5write17h7f4744887241f17eE>
    8000ed7e:	a009                	j	8000ed80 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0xaa>
        for i in 0..512 {
    8000ed80:	b761                	j	8000ed08 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E+0x32>

000000008000ed82 <.LBB2_14>:
            self.entries[i].write(page_table.entries[i].as_usize());
    8000ed82:	00018617          	auipc	a2,0x18
    8000ed86:	8b660613          	addi	a2,a2,-1866 # 80026638 <.L__unnamed_1>
    8000ed8a:	20000593          	li	a1,512
    8000ed8e:	6562                	ld	a0,24(sp)
    8000ed90:	00012097          	auipc	ra,0x12
    8000ed94:	f66080e7          	jalr	-154(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000ed9a <.LBB2_15>:
    8000ed9a:	00018617          	auipc	a2,0x18
    8000ed9e:	8b660613          	addi	a2,a2,-1866 # 80026650 <.L__unnamed_2>
    8000eda2:	20000593          	li	a1,512
    8000eda6:	6562                	ld	a0,24(sp)
    8000eda8:	00012097          	auipc	ra,0x12
    8000edac:	f4e080e7          	jalr	-178(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE:

000000008000edb2 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE>:
    /// 
    /// Look up a virtual address, return the physical address,
    /// or 0 if not mapped.
    /// Can only be used to look up user pages.
    /// 将虚拟地址翻译成物理地址，返回页表项
    fn translate(
    8000edb2:	7111                	addi	sp,sp,-256
    8000edb4:	fd86                	sd	ra,248(sp)
    8000edb6:	e0ae                	sd	a1,64(sp)
    8000edb8:	e5aa                	sd	a0,200(sp)
    8000edba:	008c                	addi	a1,sp,64
        &mut self,
        va: VirtualAddress
    ) -> Option<&mut PageTableEntry> {
        if va.as_usize() > MAXVA {
    8000edbc:	fc2a                	sd	a0,56(sp)
    8000edbe:	852e                	mv	a0,a1
    8000edc0:	ffff9097          	auipc	ra,0xffff9
    8000edc4:	d34080e7          	jalr	-716(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000edc8:	f82a                	sd	a0,48(sp)
    8000edca:	a009                	j	8000edcc <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x1a>
    8000edcc:	4505                	li	a0,1
    8000edce:	151a                	slli	a0,a0,0x26
    8000edd0:	0505                	addi	a0,a0,1
    8000edd2:	75c2                	ld	a1,48(sp)
    8000edd4:	00a5e663          	bltu	a1,a0,8000ede0 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x2e>
    8000edd8:	a009                	j	8000edda <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x28>
    8000edda:	4501                	li	a0,0
            return None
    8000eddc:	e4aa                	sd	a0,72(sp)
    8000edde:	a8c5                	j	8000eece <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x11c>
        }
        let mut page_table = self as *mut PageTable;
    8000ede0:	7562                	ld	a0,56(sp)
    8000ede2:	e8aa                	sd	a0,80(sp)
    8000ede4:	0128                	addi	a0,sp,136
    8000ede6:	4585                	li	a1,1
    8000ede8:	4609                	li	a2,2
        for level in (1..=2).rev() {
    8000edea:	ffff6097          	auipc	ra,0xffff6
    8000edee:	134080e7          	jalr	308(ra) # 80004f1e <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h26ac620c2150db9dE>
    8000edf2:	a009                	j	8000edf4 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x42>
    8000edf4:	1888                	addi	a0,sp,112
    8000edf6:	012c                	addi	a1,sp,136
    8000edf8:	ffff6097          	auipc	ra,0xffff6
    8000edfc:	4f2080e7          	jalr	1266(ra) # 800052ea <_ZN4core4iter6traits8iterator8Iterator3rev17hd963d1bbf30802c8E>
    8000ee00:	a009                	j	8000ee02 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x50>
    8000ee02:	08a8                	addi	a0,sp,88
    8000ee04:	188c                	addi	a1,sp,112
    8000ee06:	00003097          	auipc	ra,0x3
    8000ee0a:	b04080e7          	jalr	-1276(ra) # 8001190a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h35c9b31ca5909084E>
    8000ee0e:	a009                	j	8000ee10 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x5e>
    8000ee10:	7526                	ld	a0,104(sp)
    8000ee12:	f92a                	sd	a0,176(sp)
    8000ee14:	7506                	ld	a0,96(sp)
    8000ee16:	f52a                	sd	a0,168(sp)
    8000ee18:	6566                	ld	a0,88(sp)
    8000ee1a:	f12a                	sd	a0,160(sp)
    8000ee1c:	a009                	j	8000ee1e <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x6c>
    8000ee1e:	1108                	addi	a0,sp,160
    8000ee20:	00003097          	auipc	ra,0x3
    8000ee24:	af8080e7          	jalr	-1288(ra) # 80011918 <_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3ed23bc865c74b9aE>
    8000ee28:	fd2a                	sd	a0,184(sp)
    8000ee2a:	e1ae                	sd	a1,192(sp)
    8000ee2c:	a009                	j	8000ee2e <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x7c>
    8000ee2e:	756a                	ld	a0,184(sp)
    8000ee30:	4581                	li	a1,0
    8000ee32:	00b50463          	beq	a0,a1,8000ee3a <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x88>
    8000ee36:	a009                	j	8000ee38 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x86>
    8000ee38:	a811                	j	8000ee4c <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x9a>
    8000ee3a:	0088                	addi	a0,sp,64
    8000ee3c:	4581                	li	a1,0
    
            }else{
               return None
            }            
        }
        let pte = unsafe{&mut (*page_table).entries[va.page_num(0)]};
    8000ee3e:	ffff9097          	auipc	ra,0xffff9
    8000ee42:	ce4080e7          	jalr	-796(ra) # 80007b22 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE>
    8000ee46:	f42a                	sd	a0,40(sp)
    8000ee48:	a0ad                	j	8000eeb2 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x100>
        for level in (1..=2).rev() {
    8000ee4a:	0000                	unimp
    8000ee4c:	650e                	ld	a0,192(sp)
    8000ee4e:	e9aa                	sd	a0,208(sp)
    8000ee50:	edaa                	sd	a0,216(sp)
    8000ee52:	f1aa                	sd	a0,224(sp)
    8000ee54:	008c                	addi	a1,sp,64
            let pte = unsafe{ &mut (*page_table).entries[va.page_num(level)] };
    8000ee56:	f02a                	sd	a0,32(sp)
    8000ee58:	852e                	mv	a0,a1
    8000ee5a:	7582                	ld	a1,32(sp)
    8000ee5c:	ffff9097          	auipc	ra,0xffff9
    8000ee60:	cc6080e7          	jalr	-826(ra) # 80007b22 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE>
    8000ee64:	ec2a                	sd	a0,24(sp)
    8000ee66:	a009                	j	8000ee68 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0xb6>
    8000ee68:	1ff00513          	li	a0,511
    8000ee6c:	65e2                	ld	a1,24(sp)
    8000ee6e:	06b56463          	bltu	a0,a1,8000eed6 <.LBB3_24>
    8000ee72:	a009                	j	8000ee74 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0xc2>
    8000ee74:	6546                	ld	a0,80(sp)
    8000ee76:	65e2                	ld	a1,24(sp)
    8000ee78:	00359613          	slli	a2,a1,0x3
    8000ee7c:	9532                	add	a0,a0,a2
    8000ee7e:	f5aa                	sd	a0,232(sp)
            if pte.is_valid() {
    8000ee80:	e82a                	sd	a0,16(sp)
    8000ee82:	ffff9097          	auipc	ra,0xffff9
    8000ee86:	d7c080e7          	jalr	-644(ra) # 80007bfe <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E>
    8000ee8a:	e42a                	sd	a0,8(sp)
    8000ee8c:	a009                	j	8000ee8e <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0xdc>
    8000ee8e:	4501                	li	a0,0
    8000ee90:	65a2                	ld	a1,8(sp)
    8000ee92:	00a58a63          	beq	a1,a0,8000eea6 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0xf4>
    8000ee96:	a009                	j	8000ee98 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0xe6>
                page_table = pte.as_pagetable();
    8000ee98:	6542                	ld	a0,16(sp)
    8000ee9a:	ffff9097          	auipc	ra,0xffff9
    8000ee9e:	dfa080e7          	jalr	-518(ra) # 80007c94 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E>
    8000eea2:	e02a                	sd	a0,0(sp)
    8000eea4:	a021                	j	8000eeac <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0xfa>
    8000eea6:	4501                	li	a0,0
               return None
    8000eea8:	e4aa                	sd	a0,72(sp)
    8000eeaa:	a015                	j	8000eece <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x11c>
                page_table = pte.as_pagetable();
    8000eeac:	6502                	ld	a0,0(sp)
    8000eeae:	e8aa                	sd	a0,80(sp)
        for level in (1..=2).rev() {
    8000eeb0:	b7bd                	j	8000ee1e <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x6c>
    8000eeb2:	1ff00513          	li	a0,511
        let pte = unsafe{&mut (*page_table).entries[va.page_num(0)]};
    8000eeb6:	75a2                	ld	a1,40(sp)
    8000eeb8:	02b56b63          	bltu	a0,a1,8000eeee <.LBB3_25>
    8000eebc:	a009                	j	8000eebe <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x10c>
    8000eebe:	6546                	ld	a0,80(sp)
    8000eec0:	75a2                	ld	a1,40(sp)
    8000eec2:	00359613          	slli	a2,a1,0x3
    8000eec6:	9532                	add	a0,a0,a2
    8000eec8:	f9aa                	sd	a0,240(sp)
        Some(pte)
    8000eeca:	e4aa                	sd	a0,72(sp)
    }
    8000eecc:	a009                	j	8000eece <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE+0x11c>
    8000eece:	6526                	ld	a0,72(sp)
    8000eed0:	70ee                	ld	ra,248(sp)
    8000eed2:	6111                	addi	sp,sp,256
    8000eed4:	8082                	ret

000000008000eed6 <.LBB3_24>:
            let pte = unsafe{ &mut (*page_table).entries[va.page_num(level)] };
    8000eed6:	00017617          	auipc	a2,0x17
    8000eeda:	79260613          	addi	a2,a2,1938 # 80026668 <.L__unnamed_3>
    8000eede:	20000593          	li	a1,512
    8000eee2:	6562                	ld	a0,24(sp)
    8000eee4:	00012097          	auipc	ra,0x12
    8000eee8:	e12080e7          	jalr	-494(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000eeee <.LBB3_25>:
        let pte = unsafe{&mut (*page_table).entries[va.page_num(0)]};
    8000eeee:	00017617          	auipc	a2,0x17
    8000eef2:	79260613          	addi	a2,a2,1938 # 80026680 <.L__unnamed_4>
    8000eef6:	20000593          	li	a1,512
    8000eefa:	7522                	ld	a0,40(sp)
    8000eefc:	00012097          	auipc	ra,0x12
    8000ef00:	dfa080e7          	jalr	-518(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable18translate_or_alloc17h4a2548210b81ab7bE:

000000008000ef06 <_ZN6kernel6memory7mapping10page_table9PageTable18translate_or_alloc17h4a2548210b81ab7bE>:

    /// 将虚拟地址翻译成物理地址或者直接映射
    fn translate_or_alloc(
    8000ef06:	7169                	addi	sp,sp,-304
    8000ef08:	f606                	sd	ra,296(sp)
    8000ef0a:	f4ae                	sd	a1,104(sp)
    8000ef0c:	f9aa                	sd	a0,240(sp)
        &mut self,
        va: VirtualAddress
    ) -> Option<&mut PageTableEntry> {
        let mut pagetable = self as *mut PageTable;
    8000ef0e:	fcaa                	sd	a0,120(sp)
    8000ef10:	10a8                	addi	a0,sp,104
        let real_addr:usize = va.as_usize();
    8000ef12:	ffff9097          	auipc	ra,0xffff9
    8000ef16:	be2080e7          	jalr	-1054(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000ef1a:	85aa                	mv	a1,a0
    8000ef1c:	fdaa                	sd	a0,248(sp)
    8000ef1e:	f0ae                	sd	a1,96(sp)
    8000ef20:	a009                	j	8000ef22 <_ZN6kernel6memory7mapping10page_table9PageTable18translate_or_alloc17h4a2548210b81ab7bE+0x1c>
    8000ef22:	4505                	li	a0,1
    8000ef24:	151a                	slli	a0,a0,0x26
    8000ef26:	0505                	addi	a0,a0,1
        if real_addr > MAXVA {
    8000ef28:	7586                	ld	a1,96(sp)
    8000ef2a:	02a5e163          	bltu	a1,a0,8000ef4c <.LBB4_31+0x14>
    8000ef2e:	a009                	j	8000ef30 <.LBB4_30>

000000008000ef30 <.LBB4_30>:
            panic!("walk");
    8000ef30:	00016517          	auipc	a0,0x16
    8000ef34:	8e450513          	addi	a0,a0,-1820 # 80024814 <.L__unnamed_4+0x2c>

000000008000ef38 <.LBB4_31>:
    8000ef38:	00017617          	auipc	a2,0x17
    8000ef3c:	76060613          	addi	a2,a2,1888 # 80026698 <.L__unnamed_6>
    8000ef40:	4591                	li	a1,4
    8000ef42:	00012097          	auipc	ra,0x12
    8000ef46:	d88080e7          	jalr	-632(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000ef4a:	0000                	unimp
    8000ef4c:	1908                	addi	a0,sp,176
    8000ef4e:	4585                	li	a1,1
    8000ef50:	4609                	li	a2,2
        }
        for level in (1..=2).rev() {
    8000ef52:	ffff6097          	auipc	ra,0xffff6
    8000ef56:	fcc080e7          	jalr	-52(ra) # 80004f1e <_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h26ac620c2150db9dE>
    8000ef5a:	a009                	j	8000ef5c <.LBB4_31+0x24>
    8000ef5c:	0928                	addi	a0,sp,152
    8000ef5e:	190c                	addi	a1,sp,176
    8000ef60:	ffff6097          	auipc	ra,0xffff6
    8000ef64:	38a080e7          	jalr	906(ra) # 800052ea <_ZN4core4iter6traits8iterator8Iterator3rev17hd963d1bbf30802c8E>
    8000ef68:	a009                	j	8000ef6a <.LBB4_31+0x32>
    8000ef6a:	0108                	addi	a0,sp,128
    8000ef6c:	092c                	addi	a1,sp,152
    8000ef6e:	00003097          	auipc	ra,0x3
    8000ef72:	99c080e7          	jalr	-1636(ra) # 8001190a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h35c9b31ca5909084E>
    8000ef76:	a009                	j	8000ef78 <.LBB4_31+0x40>
    8000ef78:	654a                	ld	a0,144(sp)
    8000ef7a:	edaa                	sd	a0,216(sp)
    8000ef7c:	652a                	ld	a0,136(sp)
    8000ef7e:	e9aa                	sd	a0,208(sp)
    8000ef80:	650a                	ld	a0,128(sp)
    8000ef82:	e5aa                	sd	a0,200(sp)
    8000ef84:	a009                	j	8000ef86 <.LBB4_31+0x4e>
    8000ef86:	01a8                	addi	a0,sp,200
    8000ef88:	00003097          	auipc	ra,0x3
    8000ef8c:	990080e7          	jalr	-1648(ra) # 80011918 <_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3ed23bc865c74b9aE>
    8000ef90:	f1aa                	sd	a0,224(sp)
    8000ef92:	f5ae                	sd	a1,232(sp)
    8000ef94:	a009                	j	8000ef96 <.LBB4_31+0x5e>
    8000ef96:	750e                	ld	a0,224(sp)
    8000ef98:	4581                	li	a1,0
    8000ef9a:	00b50463          	beq	a0,a1,8000efa2 <.LBB4_31+0x6a>
    8000ef9e:	a009                	j	8000efa0 <.LBB4_31+0x68>
    8000efa0:	a811                	j	8000efb4 <.LBB4_31+0x7c>
    8000efa2:	10a8                	addi	a0,sp,104
    8000efa4:	4581                	li	a1,0
                };
                pagetable = Box::into_raw(zeroed_pgt);
                pte.0 = (((pagetable as usize) >> 12) << 10) | (PteFlags::V.bits());
            }
        }
        Some(unsafe{&mut (*pagetable).entries[va.page_num(0)]})
    8000efa6:	ffff9097          	auipc	ra,0xffff9
    8000efaa:	b7c080e7          	jalr	-1156(ra) # 80007b22 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE>
    8000efae:	ecaa                	sd	a0,88(sp)
    8000efb0:	a0e9                	j	8000f07a <.LBB4_32+0x24>
        for level in (1..=2).rev() {
    8000efb2:	0000                	unimp
    8000efb4:	752e                	ld	a0,232(sp)
    8000efb6:	e22a                	sd	a0,256(sp)
    8000efb8:	e62a                	sd	a0,264(sp)
    8000efba:	ea2a                	sd	a0,272(sp)
    8000efbc:	10ac                	addi	a1,sp,104
            let pte = unsafe{ &mut (*pagetable).entries[va.page_num(level)] };
    8000efbe:	e8aa                	sd	a0,80(sp)
    8000efc0:	852e                	mv	a0,a1
    8000efc2:	65c6                	ld	a1,80(sp)
    8000efc4:	ffff9097          	auipc	ra,0xffff9
    8000efc8:	b5e080e7          	jalr	-1186(ra) # 80007b22 <_ZN6kernel6memory7address14VirtualAddress8page_num17he93bfa81e9ece73eE>
    8000efcc:	e4aa                	sd	a0,72(sp)
    8000efce:	a009                	j	8000efd0 <.LBB4_31+0x98>
    8000efd0:	1ff00513          	li	a0,511
    8000efd4:	65a6                	ld	a1,72(sp)
    8000efd6:	0cb56163          	bltu	a0,a1,8000f098 <.LBB4_33>
    8000efda:	a009                	j	8000efdc <.LBB4_31+0xa4>
    8000efdc:	7566                	ld	a0,120(sp)
    8000efde:	65a6                	ld	a1,72(sp)
    8000efe0:	00359613          	slli	a2,a1,0x3
    8000efe4:	9532                	add	a0,a0,a2
    8000efe6:	ee2a                	sd	a0,280(sp)
            if pte.is_valid() {
    8000efe8:	e0aa                	sd	a0,64(sp)
    8000efea:	ffff9097          	auipc	ra,0xffff9
    8000efee:	c14080e7          	jalr	-1004(ra) # 80007bfe <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E>
    8000eff2:	fc2a                	sd	a0,56(sp)
    8000eff4:	a009                	j	8000eff6 <.LBB4_31+0xbe>
    8000eff6:	4501                	li	a0,0
    8000eff8:	75e2                	ld	a1,56(sp)
    8000effa:	00a58a63          	beq	a1,a0,8000f00e <.LBB4_31+0xd6>
    8000effe:	a009                	j	8000f000 <.LBB4_31+0xc8>
                pagetable = pte.as_pagetable();
    8000f000:	6506                	ld	a0,64(sp)
    8000f002:	ffff9097          	auipc	ra,0xffff9
    8000f006:	c92080e7          	jalr	-878(ra) # 80007c94 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E>
    8000f00a:	f82a                	sd	a0,48(sp)
    8000f00c:	a039                	j	8000f01a <.LBB4_31+0xe2>
                    Box::new_zeroed().assume_init()
    8000f00e:	00006097          	auipc	ra,0x6
    8000f012:	32a080e7          	jalr	810(ra) # 80015338 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h0e48eab02947ab85E>
    8000f016:	f42a                	sd	a0,40(sp)
    8000f018:	a021                	j	8000f020 <.LBB4_31+0xe8>
                pagetable = pte.as_pagetable();
    8000f01a:	7542                	ld	a0,48(sp)
    8000f01c:	fcaa                	sd	a0,120(sp)
            if pte.is_valid() {
    8000f01e:	a8a9                	j	8000f078 <.LBB4_32+0x22>
                    Box::new_zeroed().assume_init()
    8000f020:	7522                	ld	a0,40(sp)
    8000f022:	00007097          	auipc	ra,0x7
    8000f026:	f22080e7          	jalr	-222(ra) # 80015f44 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h47305147b904839dE>
    8000f02a:	85aa                	mv	a1,a0
    8000f02c:	f22a                	sd	a0,288(sp)
    8000f02e:	f02e                	sd	a1,32(sp)
    8000f030:	a009                	j	8000f032 <.LBB4_31+0xfa>
                pagetable = Box::into_raw(zeroed_pgt);
    8000f032:	7502                	ld	a0,32(sp)
    8000f034:	00007097          	auipc	ra,0x7
    8000f038:	e5c080e7          	jalr	-420(ra) # 80015e90 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h397d000c104da7ccE>
    8000f03c:	ec2a                	sd	a0,24(sp)
    8000f03e:	a009                	j	8000f040 <.LBB4_31+0x108>
    8000f040:	6562                	ld	a0,24(sp)
    8000f042:	fcaa                	sd	a0,120(sp)
                pte.0 = (((pagetable as usize) >> 12) << 10) | (PteFlags::V.bits());
    8000f044:	00c55593          	srli	a1,a0,0xc
    8000f048:	e82e                	sd	a1,16(sp)
    8000f04a:	a009                	j	8000f04c <.LBB4_31+0x114>
    8000f04c:	6542                	ld	a0,16(sp)
    8000f04e:	00a51593          	slli	a1,a0,0xa
    8000f052:	e42e                	sd	a1,8(sp)
    8000f054:	a009                	j	8000f056 <.LBB4_32>

000000008000f056 <.LBB4_32>:
    8000f056:	00015517          	auipc	a0,0x15
    8000f05a:	d1a50513          	addi	a0,a0,-742 # 80023d70 <.L__unnamed_5+0x70>
    8000f05e:	ffff9097          	auipc	ra,0xffff9
    8000f062:	ce0080e7          	jalr	-800(ra) # 80007d3e <_ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE>
    8000f066:	e02a                	sd	a0,0(sp)
    8000f068:	a009                	j	8000f06a <.LBB4_32+0x14>
    8000f06a:	6522                	ld	a0,8(sp)
    8000f06c:	6582                	ld	a1,0(sp)
    8000f06e:	00b56633          	or	a2,a0,a1
    8000f072:	6686                	ld	a3,64(sp)
    8000f074:	e290                	sd	a2,0(a3)
            if pte.is_valid() {
    8000f076:	a009                	j	8000f078 <.LBB4_32+0x22>
        for level in (1..=2).rev() {
    8000f078:	b739                	j	8000ef86 <.LBB4_31+0x4e>
    8000f07a:	1ff00513          	li	a0,511
        Some(unsafe{&mut (*pagetable).entries[va.page_num(0)]})
    8000f07e:	65e6                	ld	a1,88(sp)
    8000f080:	02b56863          	bltu	a0,a1,8000f0b0 <.LBB4_34>
    8000f084:	a009                	j	8000f086 <.LBB4_32+0x30>
    8000f086:	7566                	ld	a0,120(sp)
    8000f088:	65e6                	ld	a1,88(sp)
    8000f08a:	00359613          	slli	a2,a1,0x3
    8000f08e:	9532                	add	a0,a0,a2
    8000f090:	f8aa                	sd	a0,112(sp)
    }
    8000f092:	70b2                	ld	ra,296(sp)
    8000f094:	6155                	addi	sp,sp,304
    8000f096:	8082                	ret

000000008000f098 <.LBB4_33>:
            let pte = unsafe{ &mut (*pagetable).entries[va.page_num(level)] };
    8000f098:	00017617          	auipc	a2,0x17
    8000f09c:	61860613          	addi	a2,a2,1560 # 800266b0 <.L__unnamed_8>
    8000f0a0:	20000593          	li	a1,512
    8000f0a4:	6526                	ld	a0,72(sp)
    8000f0a6:	00012097          	auipc	ra,0x12
    8000f0aa:	c50080e7          	jalr	-944(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008000f0b0 <.LBB4_34>:
        Some(unsafe{&mut (*pagetable).entries[va.page_num(0)]})
    8000f0b0:	00017617          	auipc	a2,0x17
    8000f0b4:	61860613          	addi	a2,a2,1560 # 800266c8 <.L__unnamed_9>
    8000f0b8:	20000593          	li	a1,512
    8000f0bc:	6566                	ld	a0,88(sp)
    8000f0be:	00012097          	auipc	ra,0x12
    8000f0c2:	c38080e7          	jalr	-968(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E:

000000008000f0c8 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E>:

    /// Look up a virtual address, return the physical address,
    /// or 0 if not mapped.
    /// Can only be used to look up user pages.
    /// 通过给定的页表，将对应的虚拟地址转换成物理地址
    pub fn pgt_translate(
    8000f0c8:	7119                	addi	sp,sp,-128
    8000f0ca:	fc86                	sd	ra,120(sp)
    8000f0cc:	fc2e                	sd	a1,56(sp)
    8000f0ce:	ecaa                	sd	a0,88(sp)
    8000f0d0:	182c                	addi	a1,sp,56
        &mut self, 
        va: VirtualAddress
    ) -> Option<PhysicalAddress> {
        let addr = va.as_usize();
    8000f0d2:	f82a                	sd	a0,48(sp)
    8000f0d4:	852e                	mv	a0,a1
    8000f0d6:	ffff9097          	auipc	ra,0xffff9
    8000f0da:	a1e080e7          	jalr	-1506(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000f0de:	85aa                	mv	a1,a0
    8000f0e0:	f0aa                	sd	a0,96(sp)
    8000f0e2:	f42e                	sd	a1,40(sp)
    8000f0e4:	a009                	j	8000f0e6 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x1e>
    8000f0e6:	4505                	li	a0,1
    8000f0e8:	151a                	slli	a0,a0,0x26
    8000f0ea:	0505                	addi	a0,a0,1
        if addr > MAXVA {
    8000f0ec:	75a2                	ld	a1,40(sp)
    8000f0ee:	00a5e663          	bltu	a1,a0,8000f0fa <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x32>
    8000f0f2:	a009                	j	8000f0f4 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x2c>
    8000f0f4:	4501                	li	a0,0
            return None
    8000f0f6:	e0aa                	sd	a0,64(sp)
    8000f0f8:	a079                	j	8000f186 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xbe>
        }
        match self.translate(va){
    8000f0fa:	75e2                	ld	a1,56(sp)
    8000f0fc:	7542                	ld	a0,48(sp)
    8000f0fe:	00000097          	auipc	ra,0x0
    8000f102:	cb4080e7          	jalr	-844(ra) # 8000edb2 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE>
    8000f106:	e8aa                	sd	a0,80(sp)
    8000f108:	a009                	j	8000f10a <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x42>
            Some(pte) => {
    8000f10a:	6546                	ld	a0,80(sp)
    8000f10c:	00a035b3          	snez	a1,a0
    8000f110:	4601                	li	a2,0
    8000f112:	00c50463          	beq	a0,a2,8000f11a <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x52>
    8000f116:	a009                	j	8000f118 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x50>
    8000f118:	a029                	j	8000f122 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x5a>
    8000f11a:	4501                	li	a0,0

                let pagetable_addr = pte.as_pagetable() as usize;
                Some(PhysicalAddress::new(pagetable_addr))
            }

            None => { None }
    8000f11c:	e0aa                	sd	a0,64(sp)
        match self.translate(va){
    8000f11e:	a095                	j	8000f182 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xba>
    8000f120:	0000                	unimp
            Some(pte) => {
    8000f122:	6546                	ld	a0,80(sp)
    8000f124:	f4aa                	sd	a0,104(sp)
                if !pte.is_valid(){
    8000f126:	f02a                	sd	a0,32(sp)
    8000f128:	ffff9097          	auipc	ra,0xffff9
    8000f12c:	ad6080e7          	jalr	-1322(ra) # 80007bfe <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E>
    8000f130:	ec2a                	sd	a0,24(sp)
    8000f132:	a009                	j	8000f134 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x6c>
    8000f134:	6562                	ld	a0,24(sp)
    8000f136:	e509                	bnez	a0,8000f140 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x78>
    8000f138:	a009                	j	8000f13a <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x72>
    8000f13a:	4501                	li	a0,0
                    return None
    8000f13c:	e0aa                	sd	a0,64(sp)
    8000f13e:	a099                	j	8000f184 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xbc>
                if !pte.is_user(){
    8000f140:	7502                	ld	a0,32(sp)
    8000f142:	ffff9097          	auipc	ra,0xffff9
    8000f146:	aee080e7          	jalr	-1298(ra) # 80007c30 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry7is_user17hc8193ece9ac985e1E>
    8000f14a:	e82a                	sd	a0,16(sp)
    8000f14c:	a009                	j	8000f14e <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x86>
    8000f14e:	6542                	ld	a0,16(sp)
    8000f150:	e509                	bnez	a0,8000f15a <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x92>
    8000f152:	a009                	j	8000f154 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0x8c>
    8000f154:	4501                	li	a0,0
                    return None
    8000f156:	e0aa                	sd	a0,64(sp)
    8000f158:	a035                	j	8000f184 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xbc>
                let pagetable_addr = pte.as_pagetable() as usize;
    8000f15a:	7502                	ld	a0,32(sp)
    8000f15c:	ffff9097          	auipc	ra,0xffff9
    8000f160:	b38080e7          	jalr	-1224(ra) # 80007c94 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E>
    8000f164:	e42a                	sd	a0,8(sp)
    8000f166:	a009                	j	8000f168 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xa0>
    8000f168:	6522                	ld	a0,8(sp)
    8000f16a:	f8aa                	sd	a0,112(sp)
                Some(PhysicalAddress::new(pagetable_addr))
    8000f16c:	ffff9097          	auipc	ra,0xffff9
    8000f170:	a5c080e7          	jalr	-1444(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    8000f174:	e02a                	sd	a0,0(sp)
    8000f176:	a009                	j	8000f178 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xb0>
    8000f178:	6502                	ld	a0,0(sp)
    8000f17a:	e4aa                	sd	a0,72(sp)
    8000f17c:	4585                	li	a1,1
    8000f17e:	e0ae                	sd	a1,64(sp)
        match self.translate(va){
    8000f180:	a009                	j	8000f182 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xba>
        }
    }
    8000f182:	a011                	j	8000f186 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xbe>
    8000f184:	a009                	j	8000f186 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E+0xbe>
    8000f186:	6506                	ld	a0,64(sp)
    8000f188:	65a6                	ld	a1,72(sp)
    8000f18a:	70e6                	ld	ra,120(sp)
    8000f18c:	6109                	addi	sp,sp,128
    8000f18e:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E:

000000008000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>:
    /// Create PTEs for virtual addresses starting at va that refer to
    /// physical addresses starting at pa. va and size might not
    /// be page-aligned. Returns 0 on success, -1 if walk() couldn't
    /// allocate a needed page-table page.
    /// 将虚拟地址与物理地址建立映射，并写入MMU中
    pub unsafe fn map(
    8000f190:	7149                	addi	sp,sp,-368
    8000f192:	f686                	sd	ra,360(sp)
    8000f194:	e12e                	sd	a1,128(sp)
    8000f196:	e532                	sd	a2,136(sp)
    8000f198:	fa2a                	sd	a0,304(sp)
    8000f19a:	fe36                	sd	a3,312(sp)
    8000f19c:	e2ba                	sd	a4,320(sp)
    8000f19e:	010c                	addi	a1,sp,128
        mut va: VirtualAddress, 
        mut pa: PhysicalAddress, 
        size:usize, 
        perm:PteFlags
    ) -> bool {
        let mut last = VirtualAddress::new(va.as_usize() + size);
    8000f1a0:	fcaa                	sd	a0,120(sp)
    8000f1a2:	852e                	mv	a0,a1
    8000f1a4:	f8ba                	sd	a4,112(sp)
    8000f1a6:	f4b6                	sd	a3,104(sp)
    8000f1a8:	ffff9097          	auipc	ra,0xffff9
    8000f1ac:	94c080e7          	jalr	-1716(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000f1b0:	f0aa                	sd	a0,96(sp)
    8000f1b2:	a009                	j	8000f1b4 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x24>
    8000f1b4:	7506                	ld	a0,96(sp)
    8000f1b6:	75a6                	ld	a1,104(sp)
    8000f1b8:	00b50633          	add	a2,a0,a1
    8000f1bc:	ecb2                	sd	a2,88(sp)
    8000f1be:	1aa66363          	bltu	a2,a0,8000f364 <.LBB6_37>
    8000f1c2:	a009                	j	8000f1c4 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x34>
    8000f1c4:	6566                	ld	a0,88(sp)
    8000f1c6:	ffff9097          	auipc	ra,0xffff9
    8000f1ca:	952080e7          	jalr	-1710(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000f1ce:	ed2a                	sd	a0,152(sp)
    8000f1d0:	a009                	j	8000f1d2 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x42>
    8000f1d2:	0108                	addi	a0,sp,128
        va.pg_round_down();
    8000f1d4:	ffffb097          	auipc	ra,0xffffb
    8000f1d8:	4a2080e7          	jalr	1186(ra) # 8000a676 <_ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E>
    8000f1dc:	a009                	j	8000f1de <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x4e>
    8000f1de:	0928                	addi	a0,sp,152
        last.pg_round_up();
    8000f1e0:	ffffb097          	auipc	ra,0xffffb
    8000f1e4:	40c080e7          	jalr	1036(ra) # 8000a5ec <_ZN6kernel6memory7address4Addr11pg_round_up17h5deaf19d8a60b5f1E>
    8000f1e8:	a009                	j	8000f1ea <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x5a>
        while va != last{
    8000f1ea:	a009                	j	8000f1ec <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x5c>
    8000f1ec:	0108                	addi	a0,sp,128
    8000f1ee:	092c                	addi	a1,sp,152
    8000f1f0:	ffff9097          	auipc	ra,0xffff9
    8000f1f4:	9e2080e7          	jalr	-1566(ra) # 80007bd2 <_ZN80_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$core..cmp..PartialEq$GT$2ne17hd326e7ca8a6473daE>
    8000f1f8:	e8aa                	sd	a0,80(sp)
    8000f1fa:	a009                	j	8000f1fc <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x6c>
    8000f1fc:	6546                	ld	a0,80(sp)
    8000f1fe:	e511                	bnez	a0,8000f20a <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x7a>
    8000f200:	a009                	j	8000f202 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x72>
    8000f202:	4505                	li	a0,1

                }
                None => return false
             }
        }
        true
    8000f204:	08a10ba3          	sb	a0,151(sp)
    }
    8000f208:	aa89                	j	8000f35a <.LBB6_36+0x2e>
            match self.translate_or_alloc(va){
    8000f20a:	658a                	ld	a1,128(sp)
    8000f20c:	7566                	ld	a0,120(sp)
    8000f20e:	00000097          	auipc	ra,0x0
    8000f212:	cf8080e7          	jalr	-776(ra) # 8000ef06 <_ZN6kernel6memory7mapping10page_table9PageTable18translate_or_alloc17h4a2548210b81ab7bE>
    8000f216:	f12a                	sd	a0,160(sp)
    8000f218:	a009                	j	8000f21a <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x8a>
                Some(pte) => {
    8000f21a:	750a                	ld	a0,160(sp)
    8000f21c:	00a035b3          	snez	a1,a0
    8000f220:	4601                	li	a2,0
    8000f222:	00c50463          	beq	a0,a2,8000f22a <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x9a>
    8000f226:	a009                	j	8000f228 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x98>
    8000f228:	a031                	j	8000f234 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0xa4>
    8000f22a:	4501                	li	a0,0
                None => return false
    8000f22c:	08a10ba3          	sb	a0,151(sp)
    }
    8000f230:	a22d                	j	8000f35a <.LBB6_36+0x2e>
            match self.translate_or_alloc(va){
    8000f232:	0000                	unimp
                Some(pte) => {
    8000f234:	750a                	ld	a0,160(sp)
    8000f236:	e6aa                	sd	a0,328(sp)
                if pte.is_valid() {
    8000f238:	e4aa                	sd	a0,72(sp)
    8000f23a:	ffff9097          	auipc	ra,0xffff9
    8000f23e:	9c4080e7          	jalr	-1596(ra) # 80007bfe <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E>
    8000f242:	e0aa                	sd	a0,64(sp)
    8000f244:	a009                	j	8000f246 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0xb6>
    8000f246:	4501                	li	a0,0
    8000f248:	6586                	ld	a1,64(sp)
    8000f24a:	00a58a63          	beq	a1,a0,8000f25e <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0xce>
    8000f24e:	a009                	j	8000f250 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0xc0>
    8000f250:	0108                	addi	a0,sp,128
                        va.as_usize(),
    8000f252:	ffff9097          	auipc	ra,0xffff9
    8000f256:	8a2080e7          	jalr	-1886(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000f25a:	f22a                	sd	a0,288(sp)
    8000f25c:	a809                	j	8000f26e <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0xde>
                pte.write_perm(pa, perm);
    8000f25e:	65aa                	ld	a1,136(sp)
    8000f260:	6526                	ld	a0,72(sp)
    8000f262:	7646                	ld	a2,112(sp)
    8000f264:	ffff9097          	auipc	ra,0xffff9
    8000f268:	a6c080e7          	jalr	-1428(ra) # 80007cd0 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry10write_perm17h266276c59d1321a0E>
    8000f26c:	a8d1                	j	8000f340 <.LBB6_36+0x14>
    8000f26e:	0128                	addi	a0,sp,136
                        pa.as_usize(),
    8000f270:	ffff9097          	auipc	ra,0xffff9
    8000f274:	896080e7          	jalr	-1898(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    8000f278:	f62a                	sd	a0,296(sp)
    8000f27a:	a009                	j	8000f27c <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0xec>
    8000f27c:	1208                	addi	a0,sp,288
                    println!(
    8000f27e:	e62a                	sd	a0,264(sp)
    8000f280:	122c                	addi	a1,sp,296
    8000f282:	ea2e                	sd	a1,272(sp)
    8000f284:	6626                	ld	a2,72(sp)
    8000f286:	ee32                	sd	a2,280(sp)
    8000f288:	eaaa                	sd	a0,336(sp)
    8000f28a:	eeae                	sd	a1,344(sp)
    8000f28c:	66a6                	ld	a3,72(sp)
    8000f28e:	f2b6                	sd	a3,352(sp)

000000008000f290 <.LBB6_30>:
    8000f290:	00014717          	auipc	a4,0x14
    8000f294:	a1670713          	addi	a4,a4,-1514 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    8000f298:	fc2e                	sd	a1,56(sp)
    8000f29a:	85ba                	mv	a1,a4
    8000f29c:	f832                	sd	a2,48(sp)
    8000f29e:	00010097          	auipc	ra,0x10
    8000f2a2:	77c080e7          	jalr	1916(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000f2a6:	f42a                	sd	a0,40(sp)
    8000f2a8:	f02e                	sd	a1,32(sp)
    8000f2aa:	a009                	j	8000f2ac <.LBB6_31>

000000008000f2ac <.LBB6_31>:
    8000f2ac:	00014597          	auipc	a1,0x14
    8000f2b0:	9fa58593          	addi	a1,a1,-1542 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    8000f2b4:	7562                	ld	a0,56(sp)
    8000f2b6:	00010097          	auipc	ra,0x10
    8000f2ba:	764080e7          	jalr	1892(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000f2be:	ec2a                	sd	a0,24(sp)
    8000f2c0:	e82e                	sd	a1,16(sp)
    8000f2c2:	a009                	j	8000f2c4 <.LBB6_32>

000000008000f2c4 <.LBB6_32>:
    8000f2c4:	00014597          	auipc	a1,0x14
    8000f2c8:	9e258593          	addi	a1,a1,-1566 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    8000f2cc:	7542                	ld	a0,48(sp)
    8000f2ce:	00010097          	auipc	ra,0x10
    8000f2d2:	74c080e7          	jalr	1868(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000f2d6:	e42a                	sd	a0,8(sp)
    8000f2d8:	e02e                	sd	a1,0(sp)
    8000f2da:	a009                	j	8000f2dc <.LBB6_32+0x18>
    8000f2dc:	7522                	ld	a0,40(sp)
    8000f2de:	edaa                	sd	a0,216(sp)
    8000f2e0:	7582                	ld	a1,32(sp)
    8000f2e2:	f1ae                	sd	a1,224(sp)
    8000f2e4:	6662                	ld	a2,24(sp)
    8000f2e6:	f5b2                	sd	a2,232(sp)
    8000f2e8:	66c2                	ld	a3,16(sp)
    8000f2ea:	f9b6                	sd	a3,240(sp)
    8000f2ec:	6722                	ld	a4,8(sp)
    8000f2ee:	fdba                	sd	a4,248(sp)
    8000f2f0:	6782                	ld	a5,0(sp)
    8000f2f2:	e23e                	sd	a5,256(sp)

000000008000f2f4 <.LBB6_33>:
    8000f2f4:	00017597          	auipc	a1,0x17
    8000f2f8:	43c58593          	addi	a1,a1,1084 # 80026730 <.L__unnamed_10>

000000008000f2fc <.LBB6_34>:
    8000f2fc:	00017797          	auipc	a5,0x17
    8000f300:	47478793          	addi	a5,a5,1140 # 80026770 <.L__unnamed_11>
    8000f304:	1128                	addi	a0,sp,168
    8000f306:	4611                	li	a2,4
    8000f308:	09b4                	addi	a3,sp,216
    8000f30a:	480d                	li	a6,3
    8000f30c:	8742                	mv	a4,a6
    8000f30e:	ffff6097          	auipc	ra,0xffff6
    8000f312:	3f0080e7          	jalr	1008(ra) # 800056fe <_ZN4core3fmt9Arguments16new_v1_formatted17h3e98f428f5d207a2E>
    8000f316:	a009                	j	8000f318 <.LBB6_34+0x1c>
    8000f318:	1128                	addi	a0,sp,168
    8000f31a:	00002097          	auipc	ra,0x2
    8000f31e:	9d6080e7          	jalr	-1578(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000f322:	a009                	j	8000f324 <.LBB6_35>

000000008000f324 <.LBB6_35>:
                    panic!("remap");
    8000f324:	00017517          	auipc	a0,0x17
    8000f328:	4f450513          	addi	a0,a0,1268 # 80026818 <.L__unnamed_12>

000000008000f32c <.LBB6_36>:
    8000f32c:	00017617          	auipc	a2,0x17
    8000f330:	4f460613          	addi	a2,a2,1268 # 80026820 <.L__unnamed_13>
    8000f334:	4595                	li	a1,5
    8000f336:	00012097          	auipc	ra,0x12
    8000f33a:	994080e7          	jalr	-1644(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f33e:	0000                	unimp
    8000f340:	0108                	addi	a0,sp,128
                va.add_page();
    8000f342:	ffffb097          	auipc	ra,0xffffb
    8000f346:	36c080e7          	jalr	876(ra) # 8000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>
    8000f34a:	a009                	j	8000f34c <.LBB6_36+0x20>
    8000f34c:	0128                	addi	a0,sp,136
                pa.add_page();
    8000f34e:	ffffb097          	auipc	ra,0xffffb
    8000f352:	3aa080e7          	jalr	938(ra) # 8000a6f8 <_ZN6kernel6memory7address4Addr8add_page17he49b0f30c9f330d9E>
    8000f356:	a009                	j	8000f358 <.LBB6_36+0x2c>
        while va != last{
    8000f358:	bd51                	j	8000f1ec <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E+0x5c>
    }
    8000f35a:	09714503          	lbu	a0,151(sp)
    8000f35e:	70b6                	ld	ra,360(sp)
    8000f360:	6175                	addi	sp,sp,368
    8000f362:	8082                	ret

000000008000f364 <.LBB6_37>:
        let mut last = VirtualAddress::new(va.as_usize() + size);
    8000f364:	00017517          	auipc	a0,0x17
    8000f368:	39c50513          	addi	a0,a0,924 # 80026700 <str.0>

000000008000f36c <.LBB6_38>:
    8000f36c:	00017617          	auipc	a2,0x17
    8000f370:	37460613          	addi	a2,a2,884 # 800266e0 <.L__unnamed_14>
    8000f374:	45f1                	li	a1,28
    8000f376:	00012097          	auipc	ra,0x12
    8000f37a:	954080e7          	jalr	-1708(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E:

000000008000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>:

    /// add a mapping to the kernel page table.
    /// only used when booting
    /// does not flush TLB or enable paging   
    pub unsafe fn kernel_map(
    8000f380:	7139                	addi	sp,sp,-64
    8000f382:	fc06                	sd	ra,56(sp)
    8000f384:	e82a                	sd	a0,16(sp)
    8000f386:	ec2e                	sd	a1,24(sp)
    8000f388:	f032                	sd	a2,32(sp)
    8000f38a:	f436                	sd	a3,40(sp)
    8000f38c:	f83a                	sd	a4,48(sp)
        //     "kvm_map: va={:#x}, pa={:#x}, size={:#x}",
        //     va.as_usize(),
        //     pa.as_usize(),
        //     size
        // );
        if !self.map(va, pa, size, perm){
    8000f38e:	00000097          	auipc	ra,0x0
    8000f392:	e02080e7          	jalr	-510(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    8000f396:	e42a                	sd	a0,8(sp)
    8000f398:	a009                	j	8000f39a <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E+0x1a>
    8000f39a:	6522                	ld	a0,8(sp)
    8000f39c:	e105                	bnez	a0,8000f3bc <.LBB7_5+0x14>
    8000f39e:	a009                	j	8000f3a0 <.LBB7_4>

000000008000f3a0 <.LBB7_4>:
            panic!("内核虚拟地址映射失败");
    8000f3a0:	00017517          	auipc	a0,0x17
    8000f3a4:	49850513          	addi	a0,a0,1176 # 80026838 <.L__unnamed_15>

000000008000f3a8 <.LBB7_5>:
    8000f3a8:	00017617          	auipc	a2,0x17
    8000f3ac:	4b060613          	addi	a2,a2,1200 # 80026858 <.L__unnamed_16>
    8000f3b0:	45f9                	li	a1,30
    8000f3b2:	00012097          	auipc	ra,0x12
    8000f3b6:	918080e7          	jalr	-1768(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f3ba:	0000                	unimp
        }
    }
    8000f3bc:	70e2                	ld	ra,56(sp)
    8000f3be:	6121                	addi	sp,sp,64
    8000f3c0:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable9uvmcreate17hf0fd6239d321762dE:

000000008000f3c2 <_ZN6kernel6memory7mapping10page_table9PageTable9uvmcreate17hf0fd6239d321762dE>:


    /// Create an empty user page table.
    /// return None if out of memory
    pub unsafe fn uvmcreate() -> Box<PageTable>{
    8000f3c2:	1101                	addi	sp,sp,-32
        Box::new_zeroed().assume_init()
    8000f3c4:	ec06                	sd	ra,24(sp)
    8000f3c6:	00006097          	auipc	ra,0x6
    8000f3ca:	f72080e7          	jalr	-142(ra) # 80015338 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h0e48eab02947ab85E>
    8000f3ce:	e82a                	sd	a0,16(sp)
    8000f3d0:	a009                	j	8000f3d2 <_ZN6kernel6memory7mapping10page_table9PageTable9uvmcreate17hf0fd6239d321762dE+0x10>
    8000f3d2:	6542                	ld	a0,16(sp)
    8000f3d4:	00007097          	auipc	ra,0x7
    8000f3d8:	b70080e7          	jalr	-1168(ra) # 80015f44 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h47305147b904839dE>
    8000f3dc:	e42a                	sd	a0,8(sp)
    8000f3de:	a009                	j	8000f3e0 <_ZN6kernel6memory7mapping10page_table9PageTable9uvmcreate17hf0fd6239d321762dE+0x1e>
    }
    8000f3e0:	6522                	ld	a0,8(sp)
    8000f3e2:	60e2                	ld	ra,24(sp)
    8000f3e4:	6105                	addi	sp,sp,32
    8000f3e6:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable8uvm_init17h062356db7c538c0bE:

000000008000f3e8 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_init17h062356db7c538c0bE>:

    /// Load the user initcode into address 0 of pagetable
    /// for the very first process
    /// size must be less than a page
    pub unsafe fn uvm_init(&mut self, src: &[u8]){
    8000f3e8:	7175                	addi	sp,sp,-144
    8000f3ea:	e506                	sd	ra,136(sp)
    8000f3ec:	f4aa                	sd	a0,104(sp)
    8000f3ee:	f8ae                	sd	a1,112(sp)
    8000f3f0:	fcb2                	sd	a2,120(sp)
        if src.len() >= PGSIZE{
    8000f3f2:	f0aa                	sd	a0,96(sp)
    8000f3f4:	852e                	mv	a0,a1
    8000f3f6:	ecae                	sd	a1,88(sp)
    8000f3f8:	85b2                	mv	a1,a2
    8000f3fa:	e8b2                	sd	a2,80(sp)
    8000f3fc:	00004097          	auipc	ra,0x4
    8000f400:	868080e7          	jalr	-1944(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    8000f404:	e4aa                	sd	a0,72(sp)
    8000f406:	a009                	j	8000f408 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_init17h062356db7c538c0bE+0x20>
    8000f408:	6526                	ld	a0,72(sp)
    8000f40a:	00c55593          	srli	a1,a0,0xc
    8000f40e:	4601                	li	a2,0
    8000f410:	02c58163          	beq	a1,a2,8000f432 <.LBB9_16+0x14>
    8000f414:	a009                	j	8000f416 <.LBB9_15>

000000008000f416 <.LBB9_15>:
            panic!("inituvm: more than a page");
    8000f416:	00017517          	auipc	a0,0x17
    8000f41a:	45a50513          	addi	a0,a0,1114 # 80026870 <.L__unnamed_17>

000000008000f41e <.LBB9_16>:
    8000f41e:	00017617          	auipc	a2,0x17
    8000f422:	47260613          	addi	a2,a2,1138 # 80026890 <.L__unnamed_18>
    8000f426:	45e5                	li	a1,25
    8000f428:	00012097          	auipc	ra,0x12
    8000f42c:	8a2080e7          	jalr	-1886(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f430:	0000                	unimp
        }

        let mem = RawPage::new_zeroed() as *mut u8;
    8000f432:	ffff8097          	auipc	ra,0xffff8
    8000f436:	0ea080e7          	jalr	234(ra) # 8000751c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE>
    8000f43a:	e0aa                	sd	a0,64(sp)
    8000f43c:	a009                	j	8000f43e <.LBB9_16+0x20>
    8000f43e:	6506                	ld	a0,64(sp)
    8000f440:	6586                	ld	a1,64(sp)
    8000f442:	e12e                	sd	a1,128(sp)
    8000f444:	4601                	li	a2,0
    8000f446:	6685                	lui	a3,0x1
        write_bytes(mem, 0, PGSIZE);
    8000f448:	fc2a                	sd	a0,56(sp)
    8000f44a:	852e                	mv	a0,a1
    8000f44c:	85b2                	mv	a1,a2
    8000f44e:	8636                	mv	a2,a3
    8000f450:	00011097          	auipc	ra,0x11
    8000f454:	490080e7          	jalr	1168(ra) # 800208e0 <_ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE>
    8000f458:	a009                	j	8000f45a <.LBB9_16+0x3c>
    8000f45a:	4501                	li	a0,0

        self.map(
            VirtualAddress::new(0), 
    8000f45c:	ffff8097          	auipc	ra,0xffff8
    8000f460:	6bc080e7          	jalr	1724(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000f464:	f82a                	sd	a0,48(sp)
    8000f466:	a009                	j	8000f468 <.LBB9_16+0x4a>
            PhysicalAddress::new(mem as usize), 
    8000f468:	7562                	ld	a0,56(sp)
    8000f46a:	ffff8097          	auipc	ra,0xffff8
    8000f46e:	75e080e7          	jalr	1886(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    8000f472:	f42a                	sd	a0,40(sp)
    8000f474:	a009                	j	8000f476 <.LBB9_16+0x58>
    8000f476:	4511                	li	a0,4
    8000f478:	4589                	li	a1,2
            PGSIZE, 
            PteFlags::W | PteFlags::R | PteFlags::X | PteFlags::U
    8000f47a:	ffff9097          	auipc	ra,0xffff9
    8000f47e:	8ce080e7          	jalr	-1842(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8000f482:	f02a                	sd	a0,32(sp)
    8000f484:	a009                	j	8000f486 <.LBB9_16+0x68>
    8000f486:	45a1                	li	a1,8
    8000f488:	7502                	ld	a0,32(sp)
    8000f48a:	ffff9097          	auipc	ra,0xffff9
    8000f48e:	8be080e7          	jalr	-1858(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8000f492:	ec2a                	sd	a0,24(sp)
    8000f494:	a009                	j	8000f496 <.LBB9_16+0x78>
    8000f496:	45c1                	li	a1,16
    8000f498:	6562                	ld	a0,24(sp)
    8000f49a:	ffff9097          	auipc	ra,0xffff9
    8000f49e:	8ae080e7          	jalr	-1874(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8000f4a2:	e82a                	sd	a0,16(sp)
    8000f4a4:	a009                	j	8000f4a6 <.LBB9_16+0x88>
    8000f4a6:	6685                	lui	a3,0x1
        self.map(
    8000f4a8:	7506                	ld	a0,96(sp)
    8000f4aa:	75c2                	ld	a1,48(sp)
    8000f4ac:	7622                	ld	a2,40(sp)
    8000f4ae:	6742                	ld	a4,16(sp)
    8000f4b0:	00000097          	auipc	ra,0x0
    8000f4b4:	ce0080e7          	jalr	-800(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    8000f4b8:	a009                	j	8000f4ba <.LBB9_16+0x9c>
        );

        copy_nonoverlapping(src.as_ptr(), mem, src.len());
    8000f4ba:	6566                	ld	a0,88(sp)
    8000f4bc:	65c6                	ld	a1,80(sp)
    8000f4be:	00004097          	auipc	ra,0x4
    8000f4c2:	806080e7          	jalr	-2042(ra) # 80012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>
    8000f4c6:	e42a                	sd	a0,8(sp)
    8000f4c8:	a009                	j	8000f4ca <.LBB9_16+0xac>
    8000f4ca:	6566                	ld	a0,88(sp)
    8000f4cc:	65c6                	ld	a1,80(sp)
    8000f4ce:	00003097          	auipc	ra,0x3
    8000f4d2:	796080e7          	jalr	1942(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    8000f4d6:	e02a                	sd	a0,0(sp)
    8000f4d8:	a009                	j	8000f4da <.LBB9_16+0xbc>
    8000f4da:	6522                	ld	a0,8(sp)
    8000f4dc:	75e2                	ld	a1,56(sp)
    8000f4de:	6602                	ld	a2,0(sp)
    8000f4e0:	00011097          	auipc	ra,0x11
    8000f4e4:	46a080e7          	jalr	1130(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8000f4e8:	a009                	j	8000f4ea <.LBB9_16+0xcc>
    }
    8000f4ea:	60aa                	ld	ra,136(sp)
    8000f4ec:	6149                	addi	sp,sp,144
    8000f4ee:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE:

000000008000f4f0 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE>:


    /// Allocate PTEs and physical memory to grow process from old_size to
    /// new_size, which need not be page aligned.  Returns new size or 0 on error.
    pub unsafe fn uvm_alloc(
    8000f4f0:	7169                	addi	sp,sp,-304
    8000f4f2:	f606                	sd	ra,296(sp)
    8000f4f4:	f0ae                	sd	a1,96(sp)
    8000f4f6:	fdaa                	sd	a0,248(sp)
    8000f4f8:	e232                	sd	a2,256(sp)
        &mut self, 
        mut old_size: usize, 
        new_size: usize
    ) -> Option<usize> {
        if new_size < old_size {
    8000f4fa:	ecb2                	sd	a2,88(sp)
    8000f4fc:	e8aa                	sd	a0,80(sp)
    8000f4fe:	00b67863          	bgeu	a2,a1,8000f50e <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x1e>
    8000f502:	a009                	j	8000f504 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x14>
            return Some(old_size)
    8000f504:	7506                	ld	a0,96(sp)
    8000f506:	f8aa                	sd	a0,112(sp)
    8000f508:	4505                	li	a0,1
    8000f50a:	f4aa                	sd	a0,104(sp)
    8000f50c:	a21d                	j	8000f632 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x142>
        }

        old_size = page_round_up(old_size);
    8000f50e:	7506                	ld	a0,96(sp)
    8000f510:	00007097          	auipc	ra,0x7
    8000f514:	658080e7          	jalr	1624(ra) # 80016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>
    8000f518:	e4aa                	sd	a0,72(sp)
    8000f51a:	a009                	j	8000f51c <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x2c>
    8000f51c:	6526                	ld	a0,72(sp)
    8000f51e:	f0aa                	sd	a0,96(sp)

        for cur_size in (old_size..new_size).step_by(PGSIZE) {
    8000f520:	fd2a                	sd	a0,184(sp)
    8000f522:	65e6                	ld	a1,88(sp)
    8000f524:	e1ae                	sd	a1,192(sp)
    8000f526:	0928                	addi	a0,sp,152
    8000f528:	6685                	lui	a3,0x1
    8000f52a:	65a6                	ld	a1,72(sp)
    8000f52c:	6666                	ld	a2,88(sp)
    8000f52e:	ffff6097          	auipc	ra,0xffff6
    8000f532:	dde080e7          	jalr	-546(ra) # 8000530c <_ZN4core4iter6traits8iterator8Iterator7step_by17h1006fc7bdafed74fE>
    8000f536:	a009                	j	8000f538 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x48>
    8000f538:	18a8                	addi	a0,sp,120
    8000f53a:	092c                	addi	a1,sp,152
    8000f53c:	0000a097          	auipc	ra,0xa
    8000f540:	fdc080e7          	jalr	-36(ra) # 80019518 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf8d4f5e5427a4edeE>
    8000f544:	a009                	j	8000f546 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x56>
    8000f546:	654a                	ld	a0,144(sp)
    8000f548:	f1aa                	sd	a0,224(sp)
    8000f54a:	652a                	ld	a0,136(sp)
    8000f54c:	edaa                	sd	a0,216(sp)
    8000f54e:	650a                	ld	a0,128(sp)
    8000f550:	e9aa                	sd	a0,208(sp)
    8000f552:	7566                	ld	a0,120(sp)
    8000f554:	e5aa                	sd	a0,200(sp)
    8000f556:	a009                	j	8000f558 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x68>
    8000f558:	01a8                	addi	a0,sp,200
    8000f55a:	0000a097          	auipc	ra,0xa
    8000f55e:	ebe080e7          	jalr	-322(ra) # 80019418 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E>
    8000f562:	f5aa                	sd	a0,232(sp)
    8000f564:	f9ae                	sd	a1,240(sp)
    8000f566:	a009                	j	8000f568 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x78>
    8000f568:	752e                	ld	a0,232(sp)
    8000f56a:	4581                	li	a1,0
    8000f56c:	00b50463          	beq	a0,a1,8000f574 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x84>
    8000f570:	a009                	j	8000f572 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x82>
    8000f572:	a039                	j	8000f580 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x90>
                self.uvm_dealloc(cur_size, old_size);
                return None
            }
        }

        Some(new_size)
    8000f574:	6566                	ld	a0,88(sp)
    8000f576:	f8aa                	sd	a0,112(sp)
    8000f578:	4585                	li	a1,1
    8000f57a:	f4ae                	sd	a1,104(sp)
    }
    8000f57c:	a85d                	j	8000f632 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x142>
        for cur_size in (old_size..new_size).step_by(PGSIZE) {
    8000f57e:	0000                	unimp
    8000f580:	754e                	ld	a0,240(sp)
    8000f582:	e62a                	sd	a0,264(sp)
    8000f584:	ea2a                	sd	a0,272(sp)
    8000f586:	ee2a                	sd	a0,280(sp)
            let memory = RawPage::new_zeroed();
    8000f588:	e0aa                	sd	a0,64(sp)
    8000f58a:	ffff8097          	auipc	ra,0xffff8
    8000f58e:	f92080e7          	jalr	-110(ra) # 8000751c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE>
    8000f592:	85aa                	mv	a1,a0
    8000f594:	f22a                	sd	a0,288(sp)
    8000f596:	fc2e                	sd	a1,56(sp)
    8000f598:	a009                	j	8000f59a <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0xaa>
    8000f59a:	4501                	li	a0,0
    8000f59c:	6605                	lui	a2,0x1
            write_bytes(memory as *mut u8, 0, PGSIZE);
    8000f59e:	75e2                	ld	a1,56(sp)
    8000f5a0:	f82a                	sd	a0,48(sp)
    8000f5a2:	852e                	mv	a0,a1
    8000f5a4:	75c2                	ld	a1,48(sp)
    8000f5a6:	00011097          	auipc	ra,0x11
    8000f5aa:	33a080e7          	jalr	826(ra) # 800208e0 <_ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE>
    8000f5ae:	a009                	j	8000f5b0 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0xc0>
                VirtualAddress::new(cur_size), 
    8000f5b0:	6506                	ld	a0,64(sp)
    8000f5b2:	ffff8097          	auipc	ra,0xffff8
    8000f5b6:	566080e7          	jalr	1382(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000f5ba:	f42a                	sd	a0,40(sp)
    8000f5bc:	a009                	j	8000f5be <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0xce>
                PhysicalAddress::new(memory), 
    8000f5be:	7562                	ld	a0,56(sp)
    8000f5c0:	ffff8097          	auipc	ra,0xffff8
    8000f5c4:	608080e7          	jalr	1544(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    8000f5c8:	f02a                	sd	a0,32(sp)
    8000f5ca:	a009                	j	8000f5cc <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0xdc>
    8000f5cc:	4511                	li	a0,4
    8000f5ce:	4589                	li	a1,2
                PteFlags::W | PteFlags::R | PteFlags::X | PteFlags::U
    8000f5d0:	ffff8097          	auipc	ra,0xffff8
    8000f5d4:	778080e7          	jalr	1912(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8000f5d8:	ec2a                	sd	a0,24(sp)
    8000f5da:	a009                	j	8000f5dc <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0xec>
    8000f5dc:	45a1                	li	a1,8
    8000f5de:	6562                	ld	a0,24(sp)
    8000f5e0:	ffff8097          	auipc	ra,0xffff8
    8000f5e4:	768080e7          	jalr	1896(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8000f5e8:	e82a                	sd	a0,16(sp)
    8000f5ea:	a009                	j	8000f5ec <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0xfc>
    8000f5ec:	45c1                	li	a1,16
    8000f5ee:	6542                	ld	a0,16(sp)
    8000f5f0:	ffff8097          	auipc	ra,0xffff8
    8000f5f4:	758080e7          	jalr	1880(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8000f5f8:	e42a                	sd	a0,8(sp)
    8000f5fa:	a009                	j	8000f5fc <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x10c>
    8000f5fc:	6685                	lui	a3,0x1
            if !self.map(
    8000f5fe:	6546                	ld	a0,80(sp)
    8000f600:	75a2                	ld	a1,40(sp)
    8000f602:	7602                	ld	a2,32(sp)
    8000f604:	6722                	ld	a4,8(sp)
    8000f606:	00000097          	auipc	ra,0x0
    8000f60a:	b8a080e7          	jalr	-1142(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    8000f60e:	e02a                	sd	a0,0(sp)
    8000f610:	a009                	j	8000f612 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x122>
    8000f612:	6502                	ld	a0,0(sp)
    8000f614:	e119                	bnez	a0,8000f61a <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x12a>
    8000f616:	a009                	j	8000f618 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x128>
                drop_in_place(memory as *mut RawPage);
    8000f618:	a011                	j	8000f61c <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x12c>
        for cur_size in (old_size..new_size).step_by(PGSIZE) {
    8000f61a:	bf3d                	j	8000f558 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x68>
                self.uvm_dealloc(cur_size, old_size);
    8000f61c:	7606                	ld	a2,96(sp)
    8000f61e:	6546                	ld	a0,80(sp)
    8000f620:	6586                	ld	a1,64(sp)
    8000f622:	00000097          	auipc	ra,0x0
    8000f626:	098080e7          	jalr	152(ra) # 8000f6ba <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE>
    8000f62a:	a009                	j	8000f62c <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x13c>
    8000f62c:	4501                	li	a0,0
                return None
    8000f62e:	f4aa                	sd	a0,104(sp)
    8000f630:	a009                	j	8000f632 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_alloc17h8490993122e3f8beE+0x142>
    }
    8000f632:	7526                	ld	a0,104(sp)
    8000f634:	75c6                	ld	a1,112(sp)
    8000f636:	70b2                	ld	ra,296(sp)
    8000f638:	6155                	addi	sp,sp,304
    8000f63a:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE:

000000008000f63c <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE>:

    /// Free user memory pages,
    /// then free page-table pages
    pub fn uvm_free(&mut self, size: usize) {
    8000f63c:	715d                	addi	sp,sp,-80
    8000f63e:	e486                	sd	ra,72(sp)
    8000f640:	f82a                	sd	a0,48(sp)
    8000f642:	fc2e                	sd	a1,56(sp)
    8000f644:	4601                	li	a2,0
        if size > 0 {
    8000f646:	f02e                	sd	a1,32(sp)
    8000f648:	ec2a                	sd	a0,24(sp)
    8000f64a:	00c58a63          	beq	a1,a2,8000f65e <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x22>
    8000f64e:	a009                	j	8000f650 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x14>
            let mut pa = PhysicalAddress::new(size);
    8000f650:	7502                	ld	a0,32(sp)
    8000f652:	ffff8097          	auipc	ra,0xffff8
    8000f656:	576080e7          	jalr	1398(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    8000f65a:	f42a                	sd	a0,40(sp)
    8000f65c:	a011                	j	8000f660 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x24>
        if size > 0 {
    8000f65e:	a0a9                	j	8000f6a8 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x6c>
    8000f660:	1028                	addi	a0,sp,40
            pa.pg_round_up();
    8000f662:	ffffb097          	auipc	ra,0xffffb
    8000f666:	f00080e7          	jalr	-256(ra) # 8000a562 <_ZN6kernel6memory7address4Addr11pg_round_up17h0a326453e9150368E>
    8000f66a:	a009                	j	8000f66c <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x30>
    8000f66c:	1028                	addi	a0,sp,40
            let ppn = pa.as_usize() / PGSIZE;
    8000f66e:	ffff8097          	auipc	ra,0xffff8
    8000f672:	498080e7          	jalr	1176(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    8000f676:	e82a                	sd	a0,16(sp)
    8000f678:	a009                	j	8000f67a <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x3e>
    8000f67a:	6542                	ld	a0,16(sp)
    8000f67c:	00c55593          	srli	a1,a0,0xc
    8000f680:	e0ae                	sd	a1,64(sp)
    8000f682:	4601                	li	a2,0
            self.uvm_unmap(
                VirtualAddress::new(0),
    8000f684:	8532                	mv	a0,a2
    8000f686:	e42e                	sd	a1,8(sp)
    8000f688:	ffff8097          	auipc	ra,0xffff8
    8000f68c:	490080e7          	jalr	1168(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000f690:	e02a                	sd	a0,0(sp)
    8000f692:	a009                	j	8000f694 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x58>
    8000f694:	4685                	li	a3,1
            self.uvm_unmap(
    8000f696:	6562                	ld	a0,24(sp)
    8000f698:	6582                	ld	a1,0(sp)
    8000f69a:	6622                	ld	a2,8(sp)
    8000f69c:	00000097          	auipc	ra,0x0
    8000f6a0:	0f4080e7          	jalr	244(ra) # 8000f790 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE>
    8000f6a4:	a009                	j	8000f6a6 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x6a>
        if size > 0 {
    8000f6a6:	a009                	j	8000f6a8 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x6c>
                 ppn,
                true
            );
        }
        drop(self);
    8000f6a8:	6562                	ld	a0,24(sp)
    8000f6aa:	ffffe097          	auipc	ra,0xffffe
    8000f6ae:	378080e7          	jalr	888(ra) # 8000da22 <_ZN4core3mem4drop17hd3799cf7dfa4d984E>
    8000f6b2:	a009                	j	8000f6b4 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE+0x78>
    }
    8000f6b4:	60a6                	ld	ra,72(sp)
    8000f6b6:	6161                	addi	sp,sp,80
    8000f6b8:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE:

000000008000f6ba <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE>:

    /// Deallocate user pages to bring the process size from old_size to
    /// new_size.  old_size and new_size need not be page-aligned, nor does new_size
    /// need to be less than old_size.  old_size can be larger than the actual
    /// process size.  Returns the new process size.
    pub fn uvm_dealloc(
    8000f6ba:	7175                	addi	sp,sp,-144
    8000f6bc:	e506                	sd	ra,136(sp)
    8000f6be:	f4aa                	sd	a0,104(sp)
    8000f6c0:	f8ae                	sd	a1,112(sp)
    8000f6c2:	fcb2                	sd	a2,120(sp)
        &mut self, 
        old_size:usize, 
        new_size:usize
    ) -> usize {
        if new_size >= old_size { 
    8000f6c4:	ecb2                	sd	a2,88(sp)
    8000f6c6:	e8ae                	sd	a1,80(sp)
    8000f6c8:	e4aa                	sd	a0,72(sp)
    8000f6ca:	00b66663          	bltu	a2,a1,8000f6d6 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x1c>
    8000f6ce:	a009                	j	8000f6d0 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x16>
            return old_size
    8000f6d0:	6546                	ld	a0,80(sp)
    8000f6d2:	f0aa                	sd	a0,96(sp)
            );
        }

        new_size

    }
    8000f6d4:	a859                	j	8000f76a <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0xb0>
        if page_round_up(new_size) < page_round_up(old_size) {
    8000f6d6:	6566                	ld	a0,88(sp)
    8000f6d8:	00007097          	auipc	ra,0x7
    8000f6dc:	490080e7          	jalr	1168(ra) # 80016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>
    8000f6e0:	e0aa                	sd	a0,64(sp)
    8000f6e2:	a009                	j	8000f6e4 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x2a>
    8000f6e4:	6546                	ld	a0,80(sp)
    8000f6e6:	00007097          	auipc	ra,0x7
    8000f6ea:	482080e7          	jalr	1154(ra) # 80016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>
    8000f6ee:	fc2a                	sd	a0,56(sp)
    8000f6f0:	a009                	j	8000f6f2 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x38>
    8000f6f2:	6506                	ld	a0,64(sp)
    8000f6f4:	75e2                	ld	a1,56(sp)
    8000f6f6:	00b57a63          	bgeu	a0,a1,8000f70a <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x50>
    8000f6fa:	a009                	j	8000f6fc <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x42>
            let pages_num = (page_round_up(old_size) - page_round_up(new_size)) / PGSIZE;
    8000f6fc:	6546                	ld	a0,80(sp)
    8000f6fe:	00007097          	auipc	ra,0x7
    8000f702:	46a080e7          	jalr	1130(ra) # 80016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>
    8000f706:	f82a                	sd	a0,48(sp)
    8000f708:	a011                	j	8000f70c <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x52>
        if page_round_up(new_size) < page_round_up(old_size) {
    8000f70a:	a8a9                	j	8000f764 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0xaa>
            let pages_num = (page_round_up(old_size) - page_round_up(new_size)) / PGSIZE;
    8000f70c:	6566                	ld	a0,88(sp)
    8000f70e:	00007097          	auipc	ra,0x7
    8000f712:	45a080e7          	jalr	1114(ra) # 80016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>
    8000f716:	f42a                	sd	a0,40(sp)
    8000f718:	a009                	j	8000f71a <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x60>
    8000f71a:	7542                	ld	a0,48(sp)
    8000f71c:	75a2                	ld	a1,40(sp)
    8000f71e:	40b50633          	sub	a2,a0,a1
    8000f722:	f032                	sd	a2,32(sp)
    8000f724:	04c56763          	bltu	a0,a2,8000f772 <.LBB12_16>
    8000f728:	a009                	j	8000f72a <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x70>
    8000f72a:	7502                	ld	a0,32(sp)
    8000f72c:	00c55593          	srli	a1,a0,0xc
    8000f730:	e12e                	sd	a1,128(sp)
                VirtualAddress::new(page_round_up(new_size)), 
    8000f732:	6566                	ld	a0,88(sp)
    8000f734:	ec2e                	sd	a1,24(sp)
    8000f736:	00007097          	auipc	ra,0x7
    8000f73a:	432080e7          	jalr	1074(ra) # 80016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>
    8000f73e:	e82a                	sd	a0,16(sp)
    8000f740:	a009                	j	8000f742 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x88>
    8000f742:	6542                	ld	a0,16(sp)
    8000f744:	ffff8097          	auipc	ra,0xffff8
    8000f748:	3d4080e7          	jalr	980(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000f74c:	e42a                	sd	a0,8(sp)
    8000f74e:	a009                	j	8000f750 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0x96>
    8000f750:	4685                	li	a3,1
            self.uvm_unmap(
    8000f752:	6526                	ld	a0,72(sp)
    8000f754:	65a2                	ld	a1,8(sp)
    8000f756:	6662                	ld	a2,24(sp)
    8000f758:	00000097          	auipc	ra,0x0
    8000f75c:	038080e7          	jalr	56(ra) # 8000f790 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE>
    8000f760:	a009                	j	8000f762 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0xa8>
        if page_round_up(new_size) < page_round_up(old_size) {
    8000f762:	a009                	j	8000f764 <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0xaa>
        new_size
    8000f764:	6566                	ld	a0,88(sp)
    8000f766:	f0aa                	sd	a0,96(sp)
    }
    8000f768:	a009                	j	8000f76a <_ZN6kernel6memory7mapping10page_table9PageTable11uvm_dealloc17h14d8345ad7fdd8ddE+0xb0>
    8000f76a:	7506                	ld	a0,96(sp)
    8000f76c:	60aa                	ld	ra,136(sp)
    8000f76e:	6149                	addi	sp,sp,144
    8000f770:	8082                	ret

000000008000f772 <.LBB12_16>:
            let pages_num = (page_round_up(old_size) - page_round_up(new_size)) / PGSIZE;
    8000f772:	00017517          	auipc	a0,0x17
    8000f776:	14e50513          	addi	a0,a0,334 # 800268c0 <str.1>

000000008000f77a <.LBB12_17>:
    8000f77a:	00017617          	auipc	a2,0x17
    8000f77e:	12e60613          	addi	a2,a2,302 # 800268a8 <.L__unnamed_19>
    8000f782:	02100593          	li	a1,33
    8000f786:	00011097          	auipc	ra,0x11
    8000f78a:	544080e7          	jalr	1348(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE:

000000008000f790 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE>:


    /// Remove npages of mappings starting from va. va must be
    /// page-aligned. The mappings must exist.
    /// Optionally free the physical memory.
    pub fn uvm_unmap(
    8000f790:	7155                	addi	sp,sp,-208
    8000f792:	e586                	sd	ra,200(sp)
    8000f794:	8736                	mv	a4,a3
    8000f796:	e8ae                	sd	a1,80(sp)
    8000f798:	e92a                	sd	a0,144(sp)
    8000f79a:	ed32                	sd	a2,152(sp)
    8000f79c:	0ad103a3          	sb	a3,167(sp)
    8000f7a0:	088c                	addi	a1,sp,80
        &mut self, 
        mut va: VirtualAddress, 
        npages: usize, 
        free: bool
    ){
        if !va.is_page_aligned() {
    8000f7a2:	e4aa                	sd	a0,72(sp)
    8000f7a4:	852e                	mv	a0,a1
    8000f7a6:	e0b2                	sd	a2,64(sp)
    8000f7a8:	fc3a                	sd	a4,56(sp)
    8000f7aa:	ffffb097          	auipc	ra,0xffffb
    8000f7ae:	d7a080e7          	jalr	-646(ra) # 8000a524 <_ZN6kernel6memory7address4Addr15is_page_aligned17ha9c72291cff71d68E>
    8000f7b2:	f82a                	sd	a0,48(sp)
    8000f7b4:	a009                	j	8000f7b6 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE+0x26>
    8000f7b6:	7542                	ld	a0,48(sp)
    8000f7b8:	e105                	bnez	a0,8000f7d8 <.LBB13_30+0x14>
    8000f7ba:	a009                	j	8000f7bc <.LBB13_29>

000000008000f7bc <.LBB13_29>:
            panic!("uvm_unmap: not aligned");
    8000f7bc:	00017517          	auipc	a0,0x17
    8000f7c0:	12550513          	addi	a0,a0,293 # 800268e1 <.L__unnamed_20>

000000008000f7c4 <.LBB13_30>:
    8000f7c4:	00017617          	auipc	a2,0x17
    8000f7c8:	13460613          	addi	a2,a2,308 # 800268f8 <.L__unnamed_21>
    8000f7cc:	45d9                	li	a1,22
    8000f7ce:	00011097          	auipc	ra,0x11
    8000f7d2:	4fc080e7          	jalr	1276(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f7d6:	0000                	unimp
    8000f7d8:	4501                	li	a0,0
        }
        
        for _ in 0..npages {
    8000f7da:	ecaa                	sd	a0,88(sp)
    8000f7dc:	6586                	ld	a1,64(sp)
    8000f7de:	f0ae                	sd	a1,96(sp)
    8000f7e0:	00010097          	auipc	ra,0x10
    8000f7e4:	2ca080e7          	jalr	714(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8000f7e8:	f42a                	sd	a0,40(sp)
    8000f7ea:	f02e                	sd	a1,32(sp)
    8000f7ec:	a009                	j	8000f7ee <.LBB13_30+0x2a>
    8000f7ee:	7522                	ld	a0,40(sp)
    8000f7f0:	f4aa                	sd	a0,104(sp)
    8000f7f2:	7582                	ld	a1,32(sp)
    8000f7f4:	f8ae                	sd	a1,112(sp)
    8000f7f6:	a009                	j	8000f7f8 <.LBB13_30+0x34>
    8000f7f8:	10a8                	addi	a0,sp,104
    8000f7fa:	00010097          	auipc	ra,0x10
    8000f7fe:	242080e7          	jalr	578(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8000f802:	fcaa                	sd	a0,120(sp)
    8000f804:	e12e                	sd	a1,128(sp)
    8000f806:	a009                	j	8000f808 <.LBB13_30+0x44>
    8000f808:	7566                	ld	a0,120(sp)
    8000f80a:	4581                	li	a1,0
    8000f80c:	00b50463          	beq	a0,a1,8000f814 <.LBB13_30+0x50>
    8000f810:	a009                	j	8000f812 <.LBB13_30+0x4e>
    8000f812:	a029                	j	8000f81c <.LBB13_30+0x58>
                    panic!("uvm_unmap");
                }
            }
            va.add_page();
        }
    }
    8000f814:	60ae                	ld	ra,200(sp)
    8000f816:	6169                	addi	sp,sp,208
    8000f818:	8082                	ret
        for _ in 0..npages {
    8000f81a:	0000                	unimp
    8000f81c:	650a                	ld	a0,128(sp)
    8000f81e:	f52a                	sd	a0,168(sp)
    8000f820:	f92a                	sd	a0,176(sp)
            match self.translate(va) {
    8000f822:	65c6                	ld	a1,80(sp)
    8000f824:	6526                	ld	a0,72(sp)
    8000f826:	fffff097          	auipc	ra,0xfffff
    8000f82a:	58c080e7          	jalr	1420(ra) # 8000edb2 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE>
    8000f82e:	e52a                	sd	a0,136(sp)
    8000f830:	a009                	j	8000f832 <.LBB13_30+0x6e>
                Some(pte) => {
    8000f832:	652a                	ld	a0,136(sp)
    8000f834:	00a035b3          	snez	a1,a0
    8000f838:	4601                	li	a2,0
    8000f83a:	00c50463          	beq	a0,a2,8000f842 <.LBB13_31>
    8000f83e:	a009                	j	8000f840 <.LBB13_30+0x7c>
    8000f840:	a005                	j	8000f860 <.LBB13_32+0x16>

000000008000f842 <.LBB13_31>:
                    panic!("uvm_unmap");
    8000f842:	00017517          	auipc	a0,0x17
    8000f846:	12e50513          	addi	a0,a0,302 # 80026970 <.L__unnamed_22>

000000008000f84a <.LBB13_32>:
    8000f84a:	00017617          	auipc	a2,0x17
    8000f84e:	13660613          	addi	a2,a2,310 # 80026980 <.L__unnamed_23>
    8000f852:	45a5                	li	a1,9
    8000f854:	00011097          	auipc	ra,0x11
    8000f858:	476080e7          	jalr	1142(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f85c:	0000                	unimp
            match self.translate(va) {
    8000f85e:	0000                	unimp
                Some(pte) => {
    8000f860:	652a                	ld	a0,136(sp)
    8000f862:	fd2a                	sd	a0,184(sp)
                    if !pte.is_valid() {
    8000f864:	ec2a                	sd	a0,24(sp)
    8000f866:	ffff8097          	auipc	ra,0xffff8
    8000f86a:	398080e7          	jalr	920(ra) # 80007bfe <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E>
    8000f86e:	e82a                	sd	a0,16(sp)
    8000f870:	a009                	j	8000f872 <.LBB13_32+0x28>
    8000f872:	6542                	ld	a0,16(sp)
    8000f874:	e105                	bnez	a0,8000f894 <.LBB13_34+0x14>
    8000f876:	a009                	j	8000f878 <.LBB13_33>

000000008000f878 <.LBB13_33>:
                        panic!("uvm_unmap: not mapped");
    8000f878:	00017517          	auipc	a0,0x17
    8000f87c:	09850513          	addi	a0,a0,152 # 80026910 <.L__unnamed_24>

000000008000f880 <.LBB13_34>:
    8000f880:	00017617          	auipc	a2,0x17
    8000f884:	0a860613          	addi	a2,a2,168 # 80026928 <.L__unnamed_25>
    8000f888:	45d5                	li	a1,21
    8000f88a:	00011097          	auipc	ra,0x11
    8000f88e:	440080e7          	jalr	1088(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f892:	0000                	unimp
                    if pte.as_flags() == PteFlags::V.bits() {
    8000f894:	6562                	ld	a0,24(sp)
    8000f896:	ffff8097          	auipc	ra,0xffff8
    8000f89a:	41c080e7          	jalr	1052(ra) # 80007cb2 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_flags17h7591d6ffa8a3f225E>
    8000f89e:	e42a                	sd	a0,8(sp)
    8000f8a0:	a009                	j	8000f8a2 <.LBB13_35>

000000008000f8a2 <.LBB13_35>:
    8000f8a2:	00014517          	auipc	a0,0x14
    8000f8a6:	4ce50513          	addi	a0,a0,1230 # 80023d70 <.L__unnamed_5+0x70>
    8000f8aa:	ffff8097          	auipc	ra,0xffff8
    8000f8ae:	494080e7          	jalr	1172(ra) # 80007d3e <_ZN6kernel6memory7mapping16page_table_entry8PteFlags4bits17hbdffc6f1c3afafbcE>
    8000f8b2:	e02a                	sd	a0,0(sp)
    8000f8b4:	a009                	j	8000f8b6 <.LBB13_35+0x14>
    8000f8b6:	6522                	ld	a0,8(sp)
    8000f8b8:	6582                	ld	a1,0(sp)
    8000f8ba:	02b51163          	bne	a0,a1,8000f8dc <.LBB13_37+0x14>
    8000f8be:	a009                	j	8000f8c0 <.LBB13_36>

000000008000f8c0 <.LBB13_36>:
                        panic!("uvm_unmap: not a leaf");
    8000f8c0:	00017517          	auipc	a0,0x17
    8000f8c4:	08050513          	addi	a0,a0,128 # 80026940 <.L__unnamed_26>

000000008000f8c8 <.LBB13_37>:
    8000f8c8:	00017617          	auipc	a2,0x17
    8000f8cc:	09060613          	addi	a2,a2,144 # 80026958 <.L__unnamed_27>
    8000f8d0:	45d5                	li	a1,21
    8000f8d2:	00011097          	auipc	ra,0x11
    8000f8d6:	3f8080e7          	jalr	1016(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f8da:	0000                	unimp
    8000f8dc:	4501                	li	a0,0
                    if free {
    8000f8de:	75e2                	ld	a1,56(sp)
    8000f8e0:	00a58a63          	beq	a1,a0,8000f8f4 <.LBB13_37+0x2c>
    8000f8e4:	a009                	j	8000f8e6 <.LBB13_37+0x1e>
                        let pa = pte.as_pagetable();
    8000f8e6:	6562                	ld	a0,24(sp)
    8000f8e8:	ffff8097          	auipc	ra,0xffff8
    8000f8ec:	3ac080e7          	jalr	940(ra) # 80007c94 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E>
    8000f8f0:	e1aa                	sd	a0,192(sp)
    8000f8f2:	a011                	j	8000f8f6 <.LBB13_37+0x2e>
                    if free {
    8000f8f4:	a019                	j	8000f8fa <.LBB13_37+0x32>
                        unsafe{ drop_in_place(pa) };
    8000f8f6:	a009                	j	8000f8f8 <.LBB13_37+0x30>
                    if free {
    8000f8f8:	a009                	j	8000f8fa <.LBB13_37+0x32>
    8000f8fa:	0888                	addi	a0,sp,80
            va.add_page();
    8000f8fc:	ffffb097          	auipc	ra,0xffffb
    8000f900:	db2080e7          	jalr	-590(ra) # 8000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>
    8000f904:	a009                	j	8000f906 <.LBB13_37+0x3e>
        for _ in 0..npages {
    8000f906:	bdcd                	j	8000f7f8 <.LBB13_30+0x34>

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE:

000000008000f908 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE>:
    /// its memory into a child's page table.
    /// Copies both the page table and the
    /// physical memory.
    /// returns 0 on success, -1 on failure.
    /// frees any allocated pages on failure.
    pub unsafe fn uvm_copy(
    8000f908:	7151                	addi	sp,sp,-240
    8000f90a:	f586                	sd	ra,232(sp)
    8000f90c:	f52a                	sd	a0,168(sp)
    8000f90e:	f92e                	sd	a1,176(sp)
    8000f910:	fd32                	sd	a2,184(sp)
    8000f912:	4681                	li	a3,0
        &mut self, 
        child_pgt: &mut Self, 
        size: usize
    ) -> Result<(), &'static str> {
        let mut va = VirtualAddress::new(0);
    8000f914:	e12a                	sd	a0,128(sp)
    8000f916:	8536                	mv	a0,a3
    8000f918:	fcb2                	sd	a2,120(sp)
    8000f91a:	f8ae                	sd	a1,112(sp)
    8000f91c:	ffff8097          	auipc	ra,0xffff8
    8000f920:	1fc080e7          	jalr	508(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000f924:	ed2a                	sd	a0,152(sp)
    8000f926:	a009                	j	8000f928 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x20>
        while va.as_usize() != size {
    8000f928:	a009                	j	8000f92a <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x22>
    8000f92a:	0928                	addi	a0,sp,152
    8000f92c:	ffff8097          	auipc	ra,0xffff8
    8000f930:	1c8080e7          	jalr	456(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000f934:	f4aa                	sd	a0,104(sp)
    8000f936:	a009                	j	8000f938 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x30>
    8000f938:	7526                	ld	a0,104(sp)
    8000f93a:	75e6                	ld	a1,120(sp)
    8000f93c:	00b51663          	bne	a0,a1,8000f948 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x40>
    8000f940:	a009                	j	8000f942 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x3a>
    8000f942:	4501                	li	a0,0
                }
            }
            va.add_page();
        }

        Ok(())
    8000f944:	e52a                	sd	a0,136(sp)
    }
    8000f946:	a29d                	j	8000faac <.LBB14_34+0x12>
            match self.translate(va) {
    8000f948:	65ea                	ld	a1,152(sp)
    8000f94a:	650a                	ld	a0,128(sp)
    8000f94c:	fffff097          	auipc	ra,0xfffff
    8000f950:	466080e7          	jalr	1126(ra) # 8000edb2 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE>
    8000f954:	f12a                	sd	a0,160(sp)
    8000f956:	a009                	j	8000f958 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x50>
                Some(pte) => {
    8000f958:	750a                	ld	a0,160(sp)
    8000f95a:	00a035b3          	snez	a1,a0
    8000f95e:	4601                	li	a2,0
    8000f960:	00c50463          	beq	a0,a2,8000f968 <.LBB14_30>
    8000f964:	a009                	j	8000f966 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x5e>
    8000f966:	a00d                	j	8000f988 <.LBB14_31+0x18>

000000008000f968 <.LBB14_30>:
                    panic!("uvmcopy(): no exist pte(pte should exist)");
    8000f968:	00017517          	auipc	a0,0x17
    8000f96c:	06850513          	addi	a0,a0,104 # 800269d0 <.L__unnamed_28>

000000008000f970 <.LBB14_31>:
    8000f970:	00017617          	auipc	a2,0x17
    8000f974:	09060613          	addi	a2,a2,144 # 80026a00 <.L__unnamed_29>
    8000f978:	02900593          	li	a1,41
    8000f97c:	00011097          	auipc	ra,0x11
    8000f980:	34e080e7          	jalr	846(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f984:	0000                	unimp
            match self.translate(va) {
    8000f986:	0000                	unimp
                Some(pte) => {
    8000f988:	750a                	ld	a0,160(sp)
    8000f98a:	e1aa                	sd	a0,192(sp)
                    if !pte.is_valid() {
    8000f98c:	f0aa                	sd	a0,96(sp)
    8000f98e:	ffff8097          	auipc	ra,0xffff8
    8000f992:	270080e7          	jalr	624(ra) # 80007bfe <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8is_valid17h214fd46a68f30819E>
    8000f996:	ecaa                	sd	a0,88(sp)
    8000f998:	a009                	j	8000f99a <.LBB14_31+0x2a>
    8000f99a:	6566                	ld	a0,88(sp)
    8000f99c:	e105                	bnez	a0,8000f9bc <.LBB14_33+0x14>
    8000f99e:	a009                	j	8000f9a0 <.LBB14_32>

000000008000f9a0 <.LBB14_32>:
                        panic!("uvmcopy(): page not present");
    8000f9a0:	00017517          	auipc	a0,0x17
    8000f9a4:	ff850513          	addi	a0,a0,-8 # 80026998 <.L__unnamed_30>

000000008000f9a8 <.LBB14_33>:
    8000f9a8:	00017617          	auipc	a2,0x17
    8000f9ac:	01060613          	addi	a2,a2,16 # 800269b8 <.L__unnamed_31>
    8000f9b0:	45ed                	li	a1,27
    8000f9b2:	00011097          	auipc	ra,0x11
    8000f9b6:	318080e7          	jalr	792(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000f9ba:	0000                	unimp
                    let page_table = pte.as_pagetable();
    8000f9bc:	7506                	ld	a0,96(sp)
    8000f9be:	ffff8097          	auipc	ra,0xffff8
    8000f9c2:	2d6080e7          	jalr	726(ra) # 80007c94 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry12as_pagetable17h3f771dc13bfa5991E>
    8000f9c6:	85aa                	mv	a1,a0
    8000f9c8:	e5aa                	sd	a0,200(sp)
    8000f9ca:	e8ae                	sd	a1,80(sp)
    8000f9cc:	a009                	j	8000f9ce <.LBB14_33+0x26>
                    let flags = pte.as_flags();
    8000f9ce:	7506                	ld	a0,96(sp)
    8000f9d0:	ffff8097          	auipc	ra,0xffff8
    8000f9d4:	2e2080e7          	jalr	738(ra) # 80007cb2 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry8as_flags17h7591d6ffa8a3f225E>
    8000f9d8:	85aa                	mv	a1,a0
    8000f9da:	e9aa                	sd	a0,208(sp)
    8000f9dc:	e4ae                	sd	a1,72(sp)
    8000f9de:	a009                	j	8000f9e0 <.LBB14_33+0x38>
                    let flags = PteFlags::new(flags);
    8000f9e0:	6526                	ld	a0,72(sp)
    8000f9e2:	ffff8097          	auipc	ra,0xffff8
    8000f9e6:	208080e7          	jalr	520(ra) # 80007bea <_ZN6kernel6memory7mapping16page_table_entry8PteFlags3new17h7be3f0afab4c8bddE>
    8000f9ea:	85aa                	mv	a1,a0
    8000f9ec:	edaa                	sd	a0,216(sp)
    8000f9ee:	e0ae                	sd	a1,64(sp)
    8000f9f0:	a009                	j	8000f9f2 <.LBB14_33+0x4a>
                    let allocated_pgt = &mut *(RawPage::new_zeroed() as *mut PageTable);
    8000f9f2:	ffff8097          	auipc	ra,0xffff8
    8000f9f6:	b2a080e7          	jalr	-1238(ra) # 8000751c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE>
    8000f9fa:	fc2a                	sd	a0,56(sp)
    8000f9fc:	a009                	j	8000f9fe <.LBB14_33+0x56>
    8000f9fe:	7562                	ld	a0,56(sp)
    8000fa00:	75e2                	ld	a1,56(sp)
    8000fa02:	f1ae                	sd	a1,224(sp)
                    allocated_pgt.write(& *page_table);
    8000fa04:	f82a                	sd	a0,48(sp)
    8000fa06:	852e                	mv	a0,a1
    8000fa08:	65c6                	ld	a1,80(sp)
    8000fa0a:	fffff097          	auipc	ra,0xfffff
    8000fa0e:	2cc080e7          	jalr	716(ra) # 8000ecd6 <_ZN6kernel6memory7mapping10page_table9PageTable5write17h521a22b0bb8bb7c8E>
    8000fa12:	a009                	j	8000fa14 <.LBB14_33+0x6c>
                        va,
    8000fa14:	65ea                	ld	a1,152(sp)
                        PhysicalAddress::new(allocated_pgt.as_addr()),
    8000fa16:	7542                	ld	a0,48(sp)
    8000fa18:	f42e                	sd	a1,40(sp)
    8000fa1a:	fffff097          	auipc	ra,0xfffff
    8000fa1e:	270080e7          	jalr	624(ra) # 8000ec8a <_ZN6kernel6memory7mapping10page_table9PageTable7as_addr17h893d4e1b40bfebc5E>
    8000fa22:	f02a                	sd	a0,32(sp)
    8000fa24:	a009                	j	8000fa26 <.LBB14_33+0x7e>
    8000fa26:	7502                	ld	a0,32(sp)
    8000fa28:	ffff8097          	auipc	ra,0xffff8
    8000fa2c:	1a0080e7          	jalr	416(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    8000fa30:	ec2a                	sd	a0,24(sp)
    8000fa32:	a009                	j	8000fa34 <.LBB14_33+0x8c>
    8000fa34:	6685                	lui	a3,0x1
                    if !child_pgt.map(
    8000fa36:	7546                	ld	a0,112(sp)
    8000fa38:	75a2                	ld	a1,40(sp)
    8000fa3a:	6662                	ld	a2,24(sp)
    8000fa3c:	6706                	ld	a4,64(sp)
    8000fa3e:	fffff097          	auipc	ra,0xfffff
    8000fa42:	752080e7          	jalr	1874(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    8000fa46:	e82a                	sd	a0,16(sp)
    8000fa48:	a009                	j	8000fa4a <.LBB14_33+0xa2>
    8000fa4a:	6542                	ld	a0,16(sp)
    8000fa4c:	e901                	bnez	a0,8000fa5c <.LBB14_33+0xb4>
    8000fa4e:	a009                	j	8000fa50 <.LBB14_33+0xa8>
                        drop(allocated_pgt);
    8000fa50:	7542                	ld	a0,48(sp)
    8000fa52:	ffffe097          	auipc	ra,0xffffe
    8000fa56:	fd0080e7          	jalr	-48(ra) # 8000da22 <_ZN4core3mem4drop17hd3799cf7dfa4d984E>
    8000fa5a:	a039                	j	8000fa68 <.LBB14_33+0xc0>
    8000fa5c:	0928                	addi	a0,sp,152
            va.add_page();
    8000fa5e:	ffffb097          	auipc	ra,0xffffb
    8000fa62:	c50080e7          	jalr	-944(ra) # 8000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>
    8000fa66:	a091                	j	8000faaa <.LBB14_34+0x10>
    8000fa68:	4501                	li	a0,0
                            VirtualAddress::new(0), 
    8000fa6a:	ffff8097          	auipc	ra,0xffff8
    8000fa6e:	0ae080e7          	jalr	174(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000fa72:	e42a                	sd	a0,8(sp)
    8000fa74:	a009                	j	8000fa76 <.LBB14_33+0xce>
    8000fa76:	0928                	addi	a0,sp,152
                            va.as_usize() / PGSIZE, 
    8000fa78:	ffff8097          	auipc	ra,0xffff8
    8000fa7c:	07c080e7          	jalr	124(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000fa80:	e02a                	sd	a0,0(sp)
    8000fa82:	a009                	j	8000fa84 <.LBB14_33+0xdc>
    8000fa84:	6502                	ld	a0,0(sp)
    8000fa86:	00c55613          	srli	a2,a0,0xc
    8000fa8a:	4685                	li	a3,1
                        child_pgt.uvm_unmap(
    8000fa8c:	7546                	ld	a0,112(sp)
    8000fa8e:	65a2                	ld	a1,8(sp)
    8000fa90:	00000097          	auipc	ra,0x0
    8000fa94:	d00080e7          	jalr	-768(ra) # 8000f790 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE>
    8000fa98:	a009                	j	8000fa9a <.LBB14_34>

000000008000fa9a <.LBB14_34>:
                        return Err("uvmcopy(): fail.")
    8000fa9a:	00014517          	auipc	a0,0x14
    8000fa9e:	09e50513          	addi	a0,a0,158 # 80023b38 <.L__unnamed_20+0x58>
    8000faa2:	e52a                	sd	a0,136(sp)
    8000faa4:	4541                	li	a0,16
    8000faa6:	e92a                	sd	a0,144(sp)
    }
    8000faa8:	a011                	j	8000faac <.LBB14_34+0x12>
        while va.as_usize() != size {
    8000faaa:	b541                	j	8000f92a <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE+0x22>
    }
    8000faac:	652a                	ld	a0,136(sp)
    8000faae:	65ca                	ld	a1,144(sp)
    8000fab0:	70ae                	ld	ra,232(sp)
    8000fab2:	616d                	addi	sp,sp,240
    8000fab4:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable9uvm_clear17hdcf2db7601e81774E:

000000008000fab6 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_clear17hdcf2db7601e81774E>:

    /// mark a PTE invalid for user access.
    /// used by exec for the user stack guard page.
    pub fn uvm_clear(&mut self, va: VirtualAddress) {
    8000fab6:	7179                	addi	sp,sp,-48
    8000fab8:	f406                	sd	ra,40(sp)
    8000faba:	e82a                	sd	a0,16(sp)
    8000fabc:	ec2e                	sd	a1,24(sp)
        if let Some(pte) = self.translate(va) {
    8000fabe:	fffff097          	auipc	ra,0xfffff
    8000fac2:	2f4080e7          	jalr	756(ra) # 8000edb2 <_ZN6kernel6memory7mapping10page_table9PageTable9translate17hdf5c8e560dc3ed5eE>
    8000fac6:	e42a                	sd	a0,8(sp)
    8000fac8:	a009                	j	8000faca <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_clear17hdcf2db7601e81774E+0x14>
    8000faca:	6522                	ld	a0,8(sp)
    8000facc:	4581                	li	a1,0
    8000face:	02b51263          	bne	a0,a1,8000faf2 <.LBB15_6+0x16>
    8000fad2:	a009                	j	8000fad4 <.LBB15_5>

000000008000fad4 <.LBB15_5>:
            pte.rm_user_bit();
        }else {
            panic!("uvmclear(): Not found valid pte for virtualaddress");
    8000fad4:	00017517          	auipc	a0,0x17
    8000fad8:	f4450513          	addi	a0,a0,-188 # 80026a18 <.L__unnamed_33>

000000008000fadc <.LBB15_6>:
    8000fadc:	00017617          	auipc	a2,0x17
    8000fae0:	f7460613          	addi	a2,a2,-140 # 80026a50 <.L__unnamed_34>
    8000fae4:	03200593          	li	a1,50
    8000fae8:	00011097          	auipc	ra,0x11
    8000faec:	1e2080e7          	jalr	482(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8000faf0:	0000                	unimp
        if let Some(pte) = self.translate(va) {
    8000faf2:	6522                	ld	a0,8(sp)
    8000faf4:	f02a                	sd	a0,32(sp)
            pte.rm_user_bit();
    8000faf6:	ffff8097          	auipc	ra,0xffff8
    8000fafa:	16c080e7          	jalr	364(ra) # 80007c62 <_ZN6kernel6memory7mapping16page_table_entry14PageTableEntry11rm_user_bit17h04bbee7c0383a4ddE>
    8000fafe:	a009                	j	8000fb00 <.LBB15_6+0x24>
        }
    }
    8000fb00:	70a2                	ld	ra,40(sp)
    8000fb02:	6145                	addi	sp,sp,48
    8000fb04:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE:

000000008000fb06 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE>:

    /// Copy from kernel to user.
    /// Copy len bytes from src to virtual address dstva in a given page table.
    /// Return Result<(), Err>. 
    pub fn copy_out(
    8000fb06:	dc010113          	addi	sp,sp,-576
    8000fb0a:	22113c23          	sd	ra,568(sp)
    8000fb0e:	fdae                	sd	a1,248(sp)
    8000fb10:	e236                	sd	a3,256(sp)
    8000fb12:	20a13423          	sd	a0,520(sp)
    8000fb16:	20c13823          	sd	a2,528(sp)
        mut len: usize 
    ) -> Result<(), &'static str> {
        // 从内核空间向用户空间拷贝数据
        // 拷贝的起始地址为 dst, 拷贝的结束地址为 dst + len
        // 首先将目标地址转成虚拟地址并进行页对齐
        let mut va = VirtualAddress::new(dst);
    8000fb1a:	f9aa                	sd	a0,240(sp)
    8000fb1c:	852e                	mv	a0,a1
    8000fb1e:	f5b2                	sd	a2,232(sp)
    8000fb20:	ffff8097          	auipc	ra,0xffff8
    8000fb24:	ff8080e7          	jalr	-8(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000fb28:	ee2a                	sd	a0,280(sp)
    8000fb2a:	a009                	j	8000fb2c <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE+0x26>
    8000fb2c:	0a28                	addi	a0,sp,280
        va.pg_round_down();
    8000fb2e:	ffffb097          	auipc	ra,0xffffb
    8000fb32:	b48080e7          	jalr	-1208(ra) # 8000a676 <_ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E>
    8000fb36:	a009                	j	8000fb38 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE+0x32>
    8000fb38:	0a28                	addi	a0,sp,280

        println!("[Debug] va: 0x{:x}, dst: 0x{:x}", va.as_usize(), dst);
    8000fb3a:	ffff8097          	auipc	ra,0xffff8
    8000fb3e:	fba080e7          	jalr	-70(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000fb42:	e32a                	sd	a0,384(sp)
    8000fb44:	a009                	j	8000fb46 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE+0x40>
    8000fb46:	0308                	addi	a0,sp,384
    8000fb48:	faaa                	sd	a0,368(sp)
    8000fb4a:	19ac                	addi	a1,sp,248
    8000fb4c:	feae                	sd	a1,376(sp)
    8000fb4e:	20a13c23          	sd	a0,536(sp)
    8000fb52:	22b13023          	sd	a1,544(sp)

000000008000fb56 <.LBB16_39>:
    8000fb56:	00013617          	auipc	a2,0x13
    8000fb5a:	15060613          	addi	a2,a2,336 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    8000fb5e:	f1ae                	sd	a1,224(sp)
    8000fb60:	85b2                	mv	a1,a2
    8000fb62:	00010097          	auipc	ra,0x10
    8000fb66:	eb8080e7          	jalr	-328(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000fb6a:	edaa                	sd	a0,216(sp)
    8000fb6c:	e9ae                	sd	a1,208(sp)
    8000fb6e:	a009                	j	8000fb70 <.LBB16_40>

000000008000fb70 <.LBB16_40>:
    8000fb70:	00013597          	auipc	a1,0x13
    8000fb74:	13658593          	addi	a1,a1,310 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    8000fb78:	750e                	ld	a0,224(sp)
    8000fb7a:	00010097          	auipc	ra,0x10
    8000fb7e:	ea0080e7          	jalr	-352(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000fb82:	e5aa                	sd	a0,200(sp)
    8000fb84:	e1ae                	sd	a1,192(sp)
    8000fb86:	a009                	j	8000fb88 <.LBB16_40+0x18>
    8000fb88:	656e                	ld	a0,216(sp)
    8000fb8a:	eaaa                	sd	a0,336(sp)
    8000fb8c:	65ce                	ld	a1,208(sp)
    8000fb8e:	eeae                	sd	a1,344(sp)
    8000fb90:	662e                	ld	a2,200(sp)
    8000fb92:	f2b2                	sd	a2,352(sp)
    8000fb94:	668e                	ld	a3,192(sp)
    8000fb96:	f6b6                	sd	a3,360(sp)

000000008000fb98 <.LBB16_41>:
    8000fb98:	00017597          	auipc	a1,0x17
    8000fb9c:	ee858593          	addi	a1,a1,-280 # 80026a80 <.L__unnamed_35>
    8000fba0:	1208                	addi	a0,sp,288
    8000fba2:	460d                	li	a2,3
    8000fba4:	0a94                	addi	a3,sp,336
    8000fba6:	4709                	li	a4,2
    8000fba8:	ffff6097          	auipc	ra,0xffff6
    8000fbac:	b7c080e7          	jalr	-1156(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000fbb0:	a009                	j	8000fbb2 <.LBB16_41+0x1a>
    8000fbb2:	1208                	addi	a0,sp,288
    8000fbb4:	00001097          	auipc	ra,0x1
    8000fbb8:	13c080e7          	jalr	316(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000fbbc:	a009                	j	8000fbbe <.LBB16_41+0x26>
        // 计算第一次需要拷贝的字节数，需要进行页对齐
        let mut count = PGSIZE - (dst - va.as_usize());
    8000fbbe:	756e                	ld	a0,248(sp)
    8000fbc0:	0a2c                	addi	a1,sp,280
    8000fbc2:	fd2a                	sd	a0,184(sp)
    8000fbc4:	852e                	mv	a0,a1
    8000fbc6:	ffff8097          	auipc	ra,0xffff8
    8000fbca:	f2e080e7          	jalr	-210(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000fbce:	f92a                	sd	a0,176(sp)
    8000fbd0:	a009                	j	8000fbd2 <.LBB16_41+0x3a>
    8000fbd2:	756a                	ld	a0,184(sp)
    8000fbd4:	75ca                	ld	a1,176(sp)
    8000fbd6:	40b50633          	sub	a2,a0,a1
    8000fbda:	f532                	sd	a2,168(sp)
    8000fbdc:	1cc56e63          	bltu	a0,a2,8000fdb8 <.LBB16_47>
    8000fbe0:	a009                	j	8000fbe2 <.LBB16_41+0x4a>
    8000fbe2:	6505                	lui	a0,0x1
    8000fbe4:	75aa                	ld	a1,168(sp)
    8000fbe6:	40b50633          	sub	a2,a0,a1
    8000fbea:	f132                	sd	a2,160(sp)
    8000fbec:	1ec56563          	bltu	a0,a2,8000fdd6 <.LBB16_49>
    8000fbf0:	a009                	j	8000fbf2 <.LBB16_41+0x5a>
    8000fbf2:	750a                	ld	a0,160(sp)
    8000fbf4:	e72a                	sd	a0,392(sp)
    8000fbf6:	4581                	li	a1,0
        // 拷贝地址的偏移量，即已经拷贝了多少字节
        let mut offset = 0;
    8000fbf8:	eb2e                	sd	a1,400(sp)
        // 将目标地址的虚拟地址翻译成物理地址
        let mut pa = self.pgt_translate(va).unwrap();
    8000fbfa:	65f2                	ld	a1,280(sp)
    8000fbfc:	754e                	ld	a0,240(sp)
    8000fbfe:	fffff097          	auipc	ra,0xfffff
    8000fc02:	4ca080e7          	jalr	1226(ra) # 8000f0c8 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E>
    8000fc06:	ed2a                	sd	a0,152(sp)
    8000fc08:	e92e                	sd	a1,144(sp)
    8000fc0a:	a009                	j	8000fc0c <.LBB16_42>

000000008000fc0c <.LBB16_42>:
    8000fc0c:	00017617          	auipc	a2,0x17
    8000fc10:	ed460613          	addi	a2,a2,-300 # 80026ae0 <.L__unnamed_36>
    8000fc14:	656a                	ld	a0,152(sp)
    8000fc16:	65ca                	ld	a1,144(sp)
    8000fc18:	00009097          	auipc	ra,0x9
    8000fc1c:	ee4080e7          	jalr	-284(ra) # 80018afc <_ZN4core6option15Option$LT$T$GT$6unwrap17h133781e0ae165066E>
    8000fc20:	ef2a                	sd	a0,408(sp)
    8000fc22:	a009                	j	8000fc24 <.LBB16_42+0x18>
    8000fc24:	0b28                	addi	a0,sp,408
        // 计算需要拷贝的虚拟地址的位置
        let mut dst_ptr = unsafe{
            pa.as_mut_ptr().offset((dst - va.as_usize()) as isize)
    8000fc26:	ffffb097          	auipc	ra,0xffffb
    8000fc2a:	922080e7          	jalr	-1758(ra) # 8000a548 <_ZN6kernel6memory7address4Addr10as_mut_ptr17h8d429668b01dce0eE>
    8000fc2e:	e52a                	sd	a0,136(sp)
    8000fc30:	a009                	j	8000fc32 <.LBB16_42+0x26>
    8000fc32:	756e                	ld	a0,248(sp)
    8000fc34:	0a2c                	addi	a1,sp,280
    8000fc36:	e12a                	sd	a0,128(sp)
    8000fc38:	852e                	mv	a0,a1
    8000fc3a:	ffff8097          	auipc	ra,0xffff8
    8000fc3e:	eba080e7          	jalr	-326(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000fc42:	fcaa                	sd	a0,120(sp)
    8000fc44:	a009                	j	8000fc46 <.LBB16_42+0x3a>
    8000fc46:	650a                	ld	a0,128(sp)
    8000fc48:	75e6                	ld	a1,120(sp)
    8000fc4a:	40b50633          	sub	a2,a0,a1
    8000fc4e:	f8b2                	sd	a2,112(sp)
    8000fc50:	1ac56263          	bltu	a0,a2,8000fdf4 <.LBB16_51>
    8000fc54:	a009                	j	8000fc56 <.LBB16_42+0x4a>
    8000fc56:	652a                	ld	a0,136(sp)
    8000fc58:	75c6                	ld	a1,112(sp)
    8000fc5a:	00011097          	auipc	ra,0x11
    8000fc5e:	afe080e7          	jalr	-1282(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    8000fc62:	f32a                	sd	a0,416(sp)
    8000fc64:	a009                	j	8000fc66 <.LBB16_42+0x5a>
        }; 
        loop {
    8000fc66:	a009                	j	8000fc68 <.LBB16_42+0x5c>
    8000fc68:	0328                	addi	a0,sp,392
            // 由于在 syscall 的时候将用户页表切换成了内核页表，
            // 因此在拷贝的时候需要将用户态的虚拟地址转换成物理地址，
            // 由于在内核中数据区是直接映射，因此在访问物理地址的时候
            // 经过 MMU 不会报错
            println!("[Debug] count: {}, len: {}", count, len);
    8000fc6a:	ffaa                	sd	a0,504(sp)
    8000fc6c:	020c                	addi	a1,sp,256
    8000fc6e:	20b13023          	sd	a1,512(sp)
    8000fc72:	22a13423          	sd	a0,552(sp)
    8000fc76:	22b13823          	sd	a1,560(sp)

000000008000fc7a <.LBB16_43>:
    8000fc7a:	00013617          	auipc	a2,0x13
    8000fc7e:	3b860613          	addi	a2,a2,952 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    8000fc82:	f4ae                	sd	a1,104(sp)
    8000fc84:	85b2                	mv	a1,a2
    8000fc86:	00010097          	auipc	ra,0x10
    8000fc8a:	d94080e7          	jalr	-620(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000fc8e:	f0aa                	sd	a0,96(sp)
    8000fc90:	ecae                	sd	a1,88(sp)
    8000fc92:	a009                	j	8000fc94 <.LBB16_44>

000000008000fc94 <.LBB16_44>:
    8000fc94:	00013597          	auipc	a1,0x13
    8000fc98:	39e58593          	addi	a1,a1,926 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    8000fc9c:	7526                	ld	a0,104(sp)
    8000fc9e:	00010097          	auipc	ra,0x10
    8000fca2:	d7c080e7          	jalr	-644(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8000fca6:	e8aa                	sd	a0,80(sp)
    8000fca8:	e4ae                	sd	a1,72(sp)
    8000fcaa:	a009                	j	8000fcac <.LBB16_44+0x18>
    8000fcac:	7506                	ld	a0,96(sp)
    8000fcae:	efaa                	sd	a0,472(sp)
    8000fcb0:	65e6                	ld	a1,88(sp)
    8000fcb2:	f3ae                	sd	a1,480(sp)
    8000fcb4:	6646                	ld	a2,80(sp)
    8000fcb6:	f7b2                	sd	a2,488(sp)
    8000fcb8:	66a6                	ld	a3,72(sp)
    8000fcba:	fbb6                	sd	a3,496(sp)

000000008000fcbc <.LBB16_45>:
    8000fcbc:	00017597          	auipc	a1,0x17
    8000fcc0:	e6c58593          	addi	a1,a1,-404 # 80026b28 <.L__unnamed_37>
    8000fcc4:	1328                	addi	a0,sp,424
    8000fcc6:	460d                	li	a2,3
    8000fcc8:	0bb4                	addi	a3,sp,472
    8000fcca:	4709                	li	a4,2
    8000fccc:	ffff6097          	auipc	ra,0xffff6
    8000fcd0:	a58080e7          	jalr	-1448(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8000fcd4:	a009                	j	8000fcd6 <.LBB16_45+0x1a>
    8000fcd6:	1328                	addi	a0,sp,424
    8000fcd8:	00001097          	auipc	ra,0x1
    8000fcdc:	018080e7          	jalr	24(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8000fce0:	a009                	j	8000fce2 <.LBB16_45+0x26>
            if count > len {
    8000fce2:	653a                	ld	a0,392(sp)
    8000fce4:	6592                	ld	a1,256(sp)
    8000fce6:	00a5fd63          	bgeu	a1,a0,8000fd00 <.LBB16_45+0x44>
    8000fcea:	a009                	j	8000fcec <.LBB16_45+0x30>
                // 如果页内剩余的容量大于生于要拷贝的容量，则将count替换成len
                count = len;
    8000fcec:	6512                	ld	a0,256(sp)
    8000fcee:	e72a                	sd	a0,392(sp)
                unsafe{
                    copy(
                        src.offset(offset as isize), 
    8000fcf0:	65da                	ld	a1,400(sp)
    8000fcf2:	752e                	ld	a0,232(sp)
    8000fcf4:	00010097          	auipc	ra,0x10
    8000fcf8:	4aa080e7          	jalr	1194(ra) # 8002019e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE>
    8000fcfc:	e0aa                	sd	a0,64(sp)
    8000fcfe:	a809                	j	8000fd10 <.LBB16_45+0x54>
                }
                return Ok(())
            }else {
                unsafe{
                    copy(
                        src.offset(offset as isize), 
    8000fd00:	65da                	ld	a1,400(sp)
    8000fd02:	752e                	ld	a0,232(sp)
    8000fd04:	00010097          	auipc	ra,0x10
    8000fd08:	49a080e7          	jalr	1178(ra) # 8002019e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE>
    8000fd0c:	fc2a                	sd	a0,56(sp)
    8000fd0e:	a00d                	j	8000fd30 <.LBB16_45+0x74>
                        dst_ptr, 
    8000fd10:	759a                	ld	a1,416(sp)
                        count
    8000fd12:	663a                	ld	a2,392(sp)
                    copy(
    8000fd14:	6506                	ld	a0,64(sp)
    8000fd16:	ffff6097          	auipc	ra,0xffff6
    8000fd1a:	ede080e7          	jalr	-290(ra) # 80005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>
    8000fd1e:	a009                	j	8000fd20 <.LBB16_45+0x64>
    8000fd20:	4501                	li	a0,0
                return Ok(())
    8000fd22:	e62a                	sd	a0,264(sp)
                pa = self.pgt_translate(va).unwrap();
                count = PGSIZE;
                dst_ptr = pa.as_mut_ptr();
            }
        }
    }   
    8000fd24:	65d2                	ld	a1,272(sp)
    8000fd26:	23813083          	ld	ra,568(sp)
    8000fd2a:	24010113          	addi	sp,sp,576
    8000fd2e:	8082                	ret
                        dst_ptr, 
    8000fd30:	759a                	ld	a1,416(sp)
                        count
    8000fd32:	663a                	ld	a2,392(sp)
                    copy(
    8000fd34:	7562                	ld	a0,56(sp)
    8000fd36:	ffff6097          	auipc	ra,0xffff6
    8000fd3a:	ebe080e7          	jalr	-322(ra) # 80005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>
    8000fd3e:	a009                	j	8000fd40 <.LBB16_45+0x84>
                len -= count;
    8000fd40:	653a                	ld	a0,392(sp)
    8000fd42:	6592                	ld	a1,256(sp)
    8000fd44:	40a58533          	sub	a0,a1,a0
    8000fd48:	f82a                	sd	a0,48(sp)
    8000fd4a:	0ca5e463          	bltu	a1,a0,8000fe12 <.LBB16_53>
    8000fd4e:	a009                	j	8000fd50 <.LBB16_45+0x94>
    8000fd50:	7542                	ld	a0,48(sp)
    8000fd52:	e22a                	sd	a0,256(sp)
                offset += count;
    8000fd54:	65ba                	ld	a1,392(sp)
    8000fd56:	665a                	ld	a2,400(sp)
    8000fd58:	95b2                	add	a1,a1,a2
    8000fd5a:	f42e                	sd	a1,40(sp)
    8000fd5c:	0cc5ea63          	bltu	a1,a2,8000fe30 <.LBB16_55>
    8000fd60:	a009                	j	8000fd62 <.LBB16_45+0xa6>
    8000fd62:	7522                	ld	a0,40(sp)
    8000fd64:	eb2a                	sd	a0,400(sp)
    8000fd66:	0a28                	addi	a0,sp,280
                va.add_page();
    8000fd68:	ffffb097          	auipc	ra,0xffffb
    8000fd6c:	946080e7          	jalr	-1722(ra) # 8000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>
    8000fd70:	a009                	j	8000fd72 <.LBB16_45+0xb6>
                pa = self.pgt_translate(va).unwrap();
    8000fd72:	65f2                	ld	a1,280(sp)
    8000fd74:	754e                	ld	a0,240(sp)
    8000fd76:	fffff097          	auipc	ra,0xfffff
    8000fd7a:	352080e7          	jalr	850(ra) # 8000f0c8 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E>
    8000fd7e:	f02a                	sd	a0,32(sp)
    8000fd80:	ec2e                	sd	a1,24(sp)
    8000fd82:	a009                	j	8000fd84 <.LBB16_46>

000000008000fd84 <.LBB16_46>:
    8000fd84:	00017617          	auipc	a2,0x17
    8000fd88:	e0460613          	addi	a2,a2,-508 # 80026b88 <.L__unnamed_38>
    8000fd8c:	7502                	ld	a0,32(sp)
    8000fd8e:	65e2                	ld	a1,24(sp)
    8000fd90:	00009097          	auipc	ra,0x9
    8000fd94:	d6c080e7          	jalr	-660(ra) # 80018afc <_ZN4core6option15Option$LT$T$GT$6unwrap17h133781e0ae165066E>
    8000fd98:	e82a                	sd	a0,16(sp)
    8000fd9a:	a009                	j	8000fd9c <.LBB16_46+0x18>
    8000fd9c:	6542                	ld	a0,16(sp)
    8000fd9e:	ef2a                	sd	a0,408(sp)
    8000fda0:	6585                	lui	a1,0x1
                count = PGSIZE;
    8000fda2:	e72e                	sd	a1,392(sp)
    8000fda4:	0b28                	addi	a0,sp,408
                dst_ptr = pa.as_mut_ptr();
    8000fda6:	ffffa097          	auipc	ra,0xffffa
    8000fdaa:	7a2080e7          	jalr	1954(ra) # 8000a548 <_ZN6kernel6memory7address4Addr10as_mut_ptr17h8d429668b01dce0eE>
    8000fdae:	e42a                	sd	a0,8(sp)
    8000fdb0:	a009                	j	8000fdb2 <.LBB16_46+0x2e>
    8000fdb2:	6522                	ld	a0,8(sp)
    8000fdb4:	f32a                	sd	a0,416(sp)
        loop {
    8000fdb6:	bd4d                	j	8000fc68 <.LBB16_42+0x5c>

000000008000fdb8 <.LBB16_47>:
        let mut count = PGSIZE - (dst - va.as_usize());
    8000fdb8:	00017517          	auipc	a0,0x17
    8000fdbc:	b0850513          	addi	a0,a0,-1272 # 800268c0 <str.1>

000000008000fdc0 <.LBB16_48>:
    8000fdc0:	00017617          	auipc	a2,0x17
    8000fdc4:	cf060613          	addi	a2,a2,-784 # 80026ab0 <.L__unnamed_39>
    8000fdc8:	02100593          	li	a1,33
    8000fdcc:	00011097          	auipc	ra,0x11
    8000fdd0:	efe080e7          	jalr	-258(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000fdd6 <.LBB16_49>:
    8000fdd6:	00017517          	auipc	a0,0x17
    8000fdda:	aea50513          	addi	a0,a0,-1302 # 800268c0 <str.1>

000000008000fdde <.LBB16_50>:
    8000fdde:	00017617          	auipc	a2,0x17
    8000fde2:	cea60613          	addi	a2,a2,-790 # 80026ac8 <.L__unnamed_40>
    8000fde6:	02100593          	li	a1,33
    8000fdea:	00011097          	auipc	ra,0x11
    8000fdee:	ee0080e7          	jalr	-288(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000fdf4 <.LBB16_51>:
            pa.as_mut_ptr().offset((dst - va.as_usize()) as isize)
    8000fdf4:	00017517          	auipc	a0,0x17
    8000fdf8:	acc50513          	addi	a0,a0,-1332 # 800268c0 <str.1>

000000008000fdfc <.LBB16_52>:
    8000fdfc:	00017617          	auipc	a2,0x17
    8000fe00:	cfc60613          	addi	a2,a2,-772 # 80026af8 <.L__unnamed_41>
    8000fe04:	02100593          	li	a1,33
    8000fe08:	00011097          	auipc	ra,0x11
    8000fe0c:	ec2080e7          	jalr	-318(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000fe12 <.LBB16_53>:
                len -= count;
    8000fe12:	00017517          	auipc	a0,0x17
    8000fe16:	aae50513          	addi	a0,a0,-1362 # 800268c0 <str.1>

000000008000fe1a <.LBB16_54>:
    8000fe1a:	00017617          	auipc	a2,0x17
    8000fe1e:	d3e60613          	addi	a2,a2,-706 # 80026b58 <.L__unnamed_42>
    8000fe22:	02100593          	li	a1,33
    8000fe26:	00011097          	auipc	ra,0x11
    8000fe2a:	ea4080e7          	jalr	-348(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000fe30 <.LBB16_55>:
                offset += count;
    8000fe30:	00017517          	auipc	a0,0x17
    8000fe34:	8d050513          	addi	a0,a0,-1840 # 80026700 <str.0>

000000008000fe38 <.LBB16_56>:
    8000fe38:	00017617          	auipc	a2,0x17
    8000fe3c:	d3860613          	addi	a2,a2,-712 # 80026b70 <.L__unnamed_43>
    8000fe40:	45f1                	li	a1,28
    8000fe42:	00011097          	auipc	ra,0x11
    8000fe46:	e88080e7          	jalr	-376(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E:

000000008000fe4c <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E>:


    /// Copy from user to kernel.
    /// Copy len bytes to dst from virtual address srcva in a given page table.
    /// Return Result<(), Err>
    pub fn copy_in(
    8000fe4c:	7151                	addi	sp,sp,-240
    8000fe4e:	f586                	sd	ra,232(sp)
    8000fe50:	f12e                	sd	a1,160(sp)
    8000fe52:	f536                	sd	a3,168(sp)
    8000fe54:	e9aa                	sd	a0,208(sp)
    8000fe56:	edb2                	sd	a2,216(sp)
        &mut self, 
        mut dst: *mut u8, 
        src: usize, 
        mut len: usize
    ) -> Result<(), &'static str> {
        let mut va = VirtualAddress::new(src);
    8000fe58:	ed2a                	sd	a0,152(sp)
    8000fe5a:	8532                	mv	a0,a2
    8000fe5c:	e932                	sd	a2,144(sp)
    8000fe5e:	ffff8097          	auipc	ra,0xffff8
    8000fe62:	cba080e7          	jalr	-838(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8000fe66:	e1aa                	sd	a0,192(sp)
    8000fe68:	a009                	j	8000fe6a <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E+0x1e>
    8000fe6a:	0188                	addi	a0,sp,192
        va.pg_round_down();
    8000fe6c:	ffffb097          	auipc	ra,0xffffb
    8000fe70:	80a080e7          	jalr	-2038(ra) # 8000a676 <_ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E>
    8000fe74:	a009                	j	8000fe76 <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E+0x2a>
        loop {
    8000fe76:	a009                	j	8000fe78 <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E+0x2c>
            // Get physical address by virtual address
            let pa = self.pgt_translate(va).unwrap();
    8000fe78:	658e                	ld	a1,192(sp)
    8000fe7a:	656a                	ld	a0,152(sp)
    8000fe7c:	fffff097          	auipc	ra,0xfffff
    8000fe80:	24c080e7          	jalr	588(ra) # 8000f0c8 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E>
    8000fe84:	e52a                	sd	a0,136(sp)
    8000fe86:	e12e                	sd	a1,128(sp)
    8000fe88:	a009                	j	8000fe8a <.LBB17_31>

000000008000fe8a <.LBB17_31>:
    8000fe8a:	00017617          	auipc	a2,0x17
    8000fe8e:	d1660613          	addi	a2,a2,-746 # 80026ba0 <.L__unnamed_44>
    8000fe92:	652a                	ld	a0,136(sp)
    8000fe94:	658a                	ld	a1,128(sp)
    8000fe96:	00009097          	auipc	ra,0x9
    8000fe9a:	c66080e7          	jalr	-922(ra) # 80018afc <_ZN4core6option15Option$LT$T$GT$6unwrap17h133781e0ae165066E>
    8000fe9e:	e5aa                	sd	a0,200(sp)
    8000fea0:	a009                	j	8000fea2 <.LBB17_31+0x18>
    8000fea2:	0188                	addi	a0,sp,192
            // Get copy bytes of current page.
            let count = PGSIZE - (src - va.as_usize());
    8000fea4:	ffff8097          	auipc	ra,0xffff8
    8000fea8:	c50080e7          	jalr	-944(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000feac:	fcaa                	sd	a0,120(sp)
    8000feae:	a009                	j	8000feb0 <.LBB17_31+0x26>
    8000feb0:	654a                	ld	a0,144(sp)
    8000feb2:	75e6                	ld	a1,120(sp)
    8000feb4:	40b50633          	sub	a2,a0,a1
    8000feb8:	f8b2                	sd	a2,112(sp)
    8000feba:	10c56463          	bltu	a0,a2,8000ffc2 <.LBB17_32>
    8000febe:	a009                	j	8000fec0 <.LBB17_31+0x36>
    8000fec0:	6505                	lui	a0,0x1
    8000fec2:	75c6                	ld	a1,112(sp)
    8000fec4:	40b50633          	sub	a2,a0,a1
    8000fec8:	f4b2                	sd	a2,104(sp)
    8000feca:	10c56b63          	bltu	a0,a2,8000ffe0 <.LBB17_34>
    8000fece:	a009                	j	8000fed0 <.LBB17_31+0x46>
    8000fed0:	7526                	ld	a0,104(sp)
    8000fed2:	f1aa                	sd	a0,224(sp)
            if len < count {
    8000fed4:	75aa                	ld	a1,168(sp)
    8000fed6:	00a5fd63          	bgeu	a1,a0,8000fef0 <.LBB17_31+0x66>
    8000feda:	a009                	j	8000fedc <.LBB17_31+0x52>
                mem_copy(
                    dst as usize, 
    8000fedc:	750a                	ld	a0,160(sp)
    8000fede:	01ac                	addi	a1,sp,200
                    pa.as_usize() + ( src - va.as_usize() ), 
    8000fee0:	f0aa                	sd	a0,96(sp)
    8000fee2:	852e                	mv	a0,a1
    8000fee4:	ffff8097          	auipc	ra,0xffff8
    8000fee8:	c22080e7          	jalr	-990(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    8000feec:	ecaa                	sd	a0,88(sp)
    8000feee:	a819                	j	8000ff04 <.LBB17_31+0x7a>
                    len
                );
                return Ok(())
            }
            mem_copy(
                dst as usize,
    8000fef0:	750a                	ld	a0,160(sp)
    8000fef2:	01ac                	addi	a1,sp,200
                pa.as_usize() + ( src - va.as_usize() ),
    8000fef4:	e8aa                	sd	a0,80(sp)
    8000fef6:	852e                	mv	a0,a1
    8000fef8:	ffff8097          	auipc	ra,0xffff8
    8000fefc:	c0e080e7          	jalr	-1010(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    8000ff00:	e4aa                	sd	a0,72(sp)
    8000ff02:	a0b1                	j	8000ff4e <.LBB17_31+0xc4>
    8000ff04:	0188                	addi	a0,sp,192
                    pa.as_usize() + ( src - va.as_usize() ), 
    8000ff06:	ffff8097          	auipc	ra,0xffff8
    8000ff0a:	bee080e7          	jalr	-1042(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000ff0e:	e0aa                	sd	a0,64(sp)
    8000ff10:	a009                	j	8000ff12 <.LBB17_31+0x88>
    8000ff12:	654a                	ld	a0,144(sp)
    8000ff14:	6586                	ld	a1,64(sp)
    8000ff16:	40b50633          	sub	a2,a0,a1
    8000ff1a:	fc32                	sd	a2,56(sp)
    8000ff1c:	0ec56163          	bltu	a0,a2,8000fffe <.LBB17_36>
    8000ff20:	a009                	j	8000ff22 <.LBB17_31+0x98>
    8000ff22:	6566                	ld	a0,88(sp)
    8000ff24:	75e2                	ld	a1,56(sp)
    8000ff26:	00b50633          	add	a2,a0,a1
    8000ff2a:	f832                	sd	a2,48(sp)
    8000ff2c:	0ea66863          	bltu	a2,a0,8001001c <.LBB17_38>
    8000ff30:	a009                	j	8000ff32 <.LBB17_31+0xa8>
                    len
    8000ff32:	762a                	ld	a2,168(sp)
                mem_copy(
    8000ff34:	7506                	ld	a0,96(sp)
    8000ff36:	75c2                	ld	a1,48(sp)
    8000ff38:	ffffd097          	auipc	ra,0xffffd
    8000ff3c:	a00080e7          	jalr	-1536(ra) # 8000c938 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E>
    8000ff40:	a009                	j	8000ff42 <.LBB17_31+0xb8>
    8000ff42:	4501                	li	a0,0
                return Ok(())
    8000ff44:	f92a                	sd	a0,176(sp)

            len -= count;
            dst = unsafe{ dst.offset(count as isize) };
            va.add_page();
        }
    }
    8000ff46:	75ea                	ld	a1,184(sp)
    8000ff48:	70ae                	ld	ra,232(sp)
    8000ff4a:	616d                	addi	sp,sp,240
    8000ff4c:	8082                	ret
    8000ff4e:	0188                	addi	a0,sp,192
                pa.as_usize() + ( src - va.as_usize() ),
    8000ff50:	ffff8097          	auipc	ra,0xffff8
    8000ff54:	ba4080e7          	jalr	-1116(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    8000ff58:	f42a                	sd	a0,40(sp)
    8000ff5a:	a009                	j	8000ff5c <.LBB17_31+0xd2>
    8000ff5c:	654a                	ld	a0,144(sp)
    8000ff5e:	75a2                	ld	a1,40(sp)
    8000ff60:	40b50633          	sub	a2,a0,a1
    8000ff64:	f032                	sd	a2,32(sp)
    8000ff66:	0cc56963          	bltu	a0,a2,80010038 <.LBB17_40>
    8000ff6a:	a009                	j	8000ff6c <.LBB17_31+0xe2>
    8000ff6c:	6526                	ld	a0,72(sp)
    8000ff6e:	7582                	ld	a1,32(sp)
    8000ff70:	00b50633          	add	a2,a0,a1
    8000ff74:	ec32                	sd	a2,24(sp)
    8000ff76:	0ea66063          	bltu	a2,a0,80010056 <.LBB17_42>
    8000ff7a:	a009                	j	8000ff7c <.LBB17_31+0xf2>
            mem_copy(
    8000ff7c:	6546                	ld	a0,80(sp)
    8000ff7e:	65e2                	ld	a1,24(sp)
    8000ff80:	7626                	ld	a2,104(sp)
    8000ff82:	ffffd097          	auipc	ra,0xffffd
    8000ff86:	9b6080e7          	jalr	-1610(ra) # 8000c938 <_ZN6kernel4misc8mem_copy17h69d2d9e1865a19a2E>
    8000ff8a:	a009                	j	8000ff8c <.LBB17_31+0x102>
            len -= count;
    8000ff8c:	752a                	ld	a0,168(sp)
    8000ff8e:	75a6                	ld	a1,104(sp)
    8000ff90:	40b50633          	sub	a2,a0,a1
    8000ff94:	e832                	sd	a2,16(sp)
    8000ff96:	0cc56e63          	bltu	a0,a2,80010072 <.LBB17_44>
    8000ff9a:	a009                	j	8000ff9c <.LBB17_31+0x112>
    8000ff9c:	6542                	ld	a0,16(sp)
    8000ff9e:	f52a                	sd	a0,168(sp)
            dst = unsafe{ dst.offset(count as isize) };
    8000ffa0:	750a                	ld	a0,160(sp)
    8000ffa2:	75a6                	ld	a1,104(sp)
    8000ffa4:	00010097          	auipc	ra,0x10
    8000ffa8:	7b4080e7          	jalr	1972(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    8000ffac:	e42a                	sd	a0,8(sp)
    8000ffae:	a009                	j	8000ffb0 <.LBB17_31+0x126>
    8000ffb0:	6522                	ld	a0,8(sp)
    8000ffb2:	f12a                	sd	a0,160(sp)
    8000ffb4:	0188                	addi	a0,sp,192
            va.add_page();
    8000ffb6:	ffffa097          	auipc	ra,0xffffa
    8000ffba:	6f8080e7          	jalr	1784(ra) # 8000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>
    8000ffbe:	a009                	j	8000ffc0 <.LBB17_31+0x136>
        loop {
    8000ffc0:	bd65                	j	8000fe78 <_ZN6kernel6memory7mapping10page_table9PageTable7copy_in17hbb717837ac29ecd4E+0x2c>

000000008000ffc2 <.LBB17_32>:
            let count = PGSIZE - (src - va.as_usize());
    8000ffc2:	00017517          	auipc	a0,0x17
    8000ffc6:	8fe50513          	addi	a0,a0,-1794 # 800268c0 <str.1>

000000008000ffca <.LBB17_33>:
    8000ffca:	00017617          	auipc	a2,0x17
    8000ffce:	bee60613          	addi	a2,a2,-1042 # 80026bb8 <.L__unnamed_45>
    8000ffd2:	02100593          	li	a1,33
    8000ffd6:	00011097          	auipc	ra,0x11
    8000ffda:	cf4080e7          	jalr	-780(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000ffe0 <.LBB17_34>:
    8000ffe0:	00017517          	auipc	a0,0x17
    8000ffe4:	8e050513          	addi	a0,a0,-1824 # 800268c0 <str.1>

000000008000ffe8 <.LBB17_35>:
    8000ffe8:	00017617          	auipc	a2,0x17
    8000ffec:	be860613          	addi	a2,a2,-1048 # 80026bd0 <.L__unnamed_46>
    8000fff0:	02100593          	li	a1,33
    8000fff4:	00011097          	auipc	ra,0x11
    8000fff8:	cd6080e7          	jalr	-810(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008000fffe <.LBB17_36>:
                    pa.as_usize() + ( src - va.as_usize() ), 
    8000fffe:	00017517          	auipc	a0,0x17
    80010002:	8c250513          	addi	a0,a0,-1854 # 800268c0 <str.1>

0000000080010006 <.LBB17_37>:
    80010006:	00017617          	auipc	a2,0x17
    8001000a:	be260613          	addi	a2,a2,-1054 # 80026be8 <.L__unnamed_47>
    8001000e:	02100593          	li	a1,33
    80010012:	00011097          	auipc	ra,0x11
    80010016:	cb8080e7          	jalr	-840(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001001c <.LBB17_38>:
    8001001c:	00016517          	auipc	a0,0x16
    80010020:	6e450513          	addi	a0,a0,1764 # 80026700 <str.0>

0000000080010024 <.LBB17_39>:
    80010024:	00017617          	auipc	a2,0x17
    80010028:	bdc60613          	addi	a2,a2,-1060 # 80026c00 <.L__unnamed_48>
    8001002c:	45f1                	li	a1,28
    8001002e:	00011097          	auipc	ra,0x11
    80010032:	c9c080e7          	jalr	-868(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010038 <.LBB17_40>:
                pa.as_usize() + ( src - va.as_usize() ),
    80010038:	00017517          	auipc	a0,0x17
    8001003c:	88850513          	addi	a0,a0,-1912 # 800268c0 <str.1>

0000000080010040 <.LBB17_41>:
    80010040:	00017617          	auipc	a2,0x17
    80010044:	bd860613          	addi	a2,a2,-1064 # 80026c18 <.L__unnamed_49>
    80010048:	02100593          	li	a1,33
    8001004c:	00011097          	auipc	ra,0x11
    80010050:	c7e080e7          	jalr	-898(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010056 <.LBB17_42>:
    80010056:	00016517          	auipc	a0,0x16
    8001005a:	6aa50513          	addi	a0,a0,1706 # 80026700 <str.0>

000000008001005e <.LBB17_43>:
    8001005e:	00017617          	auipc	a2,0x17
    80010062:	bd260613          	addi	a2,a2,-1070 # 80026c30 <.L__unnamed_50>
    80010066:	45f1                	li	a1,28
    80010068:	00011097          	auipc	ra,0x11
    8001006c:	c62080e7          	jalr	-926(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010072 <.LBB17_44>:
            len -= count;
    80010072:	00017517          	auipc	a0,0x17
    80010076:	84e50513          	addi	a0,a0,-1970 # 800268c0 <str.1>

000000008001007a <.LBB17_45>:
    8001007a:	00017617          	auipc	a2,0x17
    8001007e:	bce60613          	addi	a2,a2,-1074 # 80026c48 <.L__unnamed_51>
    80010082:	02100593          	li	a1,33
    80010086:	00011097          	auipc	ra,0x11
    8001008a:	c44080e7          	jalr	-956(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable11copy_in_str17h64424889d2f87531E:

0000000080010090 <_ZN6kernel6memory7mapping10page_table9PageTable11copy_in_str17h64424889d2f87531E>:

    /// Copy a null-trrminated string from user to kernel. 
    /// Copy bytes to dst from virtual address src in a given table. 
    /// until a '\0', or max. 
    /// Return Result. 
    pub fn copy_in_str(
    80010090:	7141                	addi	sp,sp,-496
    80010092:	f786                	sd	ra,488(sp)
    80010094:	edb6                	sd	a3,216(sp)
    80010096:	f2aa                	sd	a0,352(sp)
    80010098:	f6ae                	sd	a1,360(sp)
    8001009a:	fab2                	sd	a2,368(sp)
        dst: *mut u8,
        src: usize,
        mut max: usize
    ) -> Result<(),&'static str> {
        // 将 src 作为虚拟地址
        let mut va = VirtualAddress::new(src as usize);
    8001009c:	e9aa                	sd	a0,208(sp)
    8001009e:	8532                	mv	a0,a2
    800100a0:	e5b2                	sd	a2,200(sp)
    800100a2:	e1ae                	sd	a1,192(sp)
    800100a4:	ffff8097          	auipc	ra,0xffff8
    800100a8:	a74080e7          	jalr	-1420(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    800100ac:	f9aa                	sd	a0,240(sp)
    800100ae:	a009                	j	800100b0 <_ZN6kernel6memory7mapping10page_table9PageTable11copy_in_str17h64424889d2f87531E+0x20>
    800100b0:	1988                	addi	a0,sp,240
        // 将虚拟地址进行页对齐
        va.pg_round_down();
    800100b2:	ffffa097          	auipc	ra,0xffffa
    800100b6:	5c4080e7          	jalr	1476(ra) # 8000a676 <_ZN6kernel6memory7address4Addr13pg_round_down17h3fdeb585c8f03252E>
    800100ba:	a009                	j	800100bc <_ZN6kernel6memory7mapping10page_table9PageTable11copy_in_str17h64424889d2f87531E+0x2c>
        loop {
    800100bc:	a009                	j	800100be <_ZN6kernel6memory7mapping10page_table9PageTable11copy_in_str17h64424889d2f87531E+0x2e>
            // 将用户态的虚拟地址转成物理地址
            let pa = self.pgt_translate(va).unwrap();
    800100be:	75ce                	ld	a1,240(sp)
    800100c0:	654e                	ld	a0,208(sp)
    800100c2:	fffff097          	auipc	ra,0xfffff
    800100c6:	006080e7          	jalr	6(ra) # 8000f0c8 <_ZN6kernel6memory7mapping10page_table9PageTable13pgt_translate17h02e337901b66e418E>
    800100ca:	fd2a                	sd	a0,184(sp)
    800100cc:	f92e                	sd	a1,176(sp)
    800100ce:	a009                	j	800100d0 <.LBB18_50>

00000000800100d0 <.LBB18_50>:
    800100d0:	00017617          	auipc	a2,0x17
    800100d4:	b9060613          	addi	a2,a2,-1136 # 80026c60 <.L__unnamed_52>
    800100d8:	756a                	ld	a0,184(sp)
    800100da:	75ca                	ld	a1,176(sp)
    800100dc:	00009097          	auipc	ra,0x9
    800100e0:	a20080e7          	jalr	-1504(ra) # 80018afc <_ZN4core6option15Option$LT$T$GT$6unwrap17h133781e0ae165066E>
    800100e4:	fdaa                	sd	a0,248(sp)
    800100e6:	a009                	j	800100e8 <.LBB18_50+0x18>
    800100e8:	1988                	addi	a0,sp,240
            // 计算该页所要读取的字节数
            let count = PGSIZE - (src - va.as_usize());
    800100ea:	ffff8097          	auipc	ra,0xffff8
    800100ee:	a0a080e7          	jalr	-1526(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    800100f2:	f52a                	sd	a0,168(sp)
    800100f4:	a009                	j	800100f6 <.LBB18_50+0x26>
    800100f6:	652e                	ld	a0,200(sp)
    800100f8:	75aa                	ld	a1,168(sp)
    800100fa:	40b50633          	sub	a2,a0,a1
    800100fe:	f132                	sd	a2,160(sp)
    80010100:	1ec56b63          	bltu	a0,a2,800102f6 <.LBB18_51>
    80010104:	a009                	j	80010106 <.LBB18_50+0x36>
    80010106:	6505                	lui	a0,0x1
    80010108:	758a                	ld	a1,160(sp)
    8001010a:	40b50633          	sub	a2,a0,a1
    8001010e:	ed32                	sd	a2,152(sp)
    80010110:	20c56263          	bltu	a0,a2,80010314 <.LBB18_53>
    80010114:	a009                	j	80010116 <.LBB18_50+0x46>
    80010116:	656a                	ld	a0,152(sp)
    80010118:	feaa                	sd	a0,376(sp)
    8001011a:	19a8                	addi	a0,sp,248
            let s = (pa.as_usize() + (src - va.as_usize())) as *const u8;
    8001011c:	ffff8097          	auipc	ra,0xffff8
    80010120:	9ea080e7          	jalr	-1558(ra) # 80007b06 <_ZN90_$LT$kernel..memory..address..PhysicalAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17hb5159df1e7db804dE>
    80010124:	e92a                	sd	a0,144(sp)
    80010126:	a009                	j	80010128 <.LBB18_50+0x58>
    80010128:	1988                	addi	a0,sp,240
    8001012a:	ffff8097          	auipc	ra,0xffff8
    8001012e:	9ca080e7          	jalr	-1590(ra) # 80007af4 <_ZN89_$LT$kernel..memory..address..VirtualAddress$u20$as$u20$kernel..memory..address..Addr$GT$8as_usize17he63872129ecc290cE>
    80010132:	e52a                	sd	a0,136(sp)
    80010134:	a009                	j	80010136 <.LBB18_50+0x66>
    80010136:	652e                	ld	a0,200(sp)
    80010138:	65aa                	ld	a1,136(sp)
    8001013a:	40b50633          	sub	a2,a0,a1
    8001013e:	e132                	sd	a2,128(sp)
    80010140:	1ec56963          	bltu	a0,a2,80010332 <.LBB18_55>
    80010144:	a009                	j	80010146 <.LBB18_50+0x76>
    80010146:	654a                	ld	a0,144(sp)
    80010148:	658a                	ld	a1,128(sp)
    8001014a:	00b50633          	add	a2,a0,a1
    8001014e:	fcb2                	sd	a2,120(sp)
    80010150:	20a66063          	bltu	a2,a0,80010350 <.LBB18_57>
    80010154:	a009                	j	80010156 <.LBB18_50+0x86>
    80010156:	7566                	ld	a0,120(sp)
    80010158:	75e6                	ld	a1,120(sp)
    8001015a:	e32e                	sd	a1,384(sp)
            if max < count {
    8001015c:	666e                	ld	a2,216(sp)
    8001015e:	66ea                	ld	a3,152(sp)
    80010160:	f8aa                	sd	a0,112(sp)
    80010162:	02d67163          	bgeu	a2,a3,80010184 <.LBB18_50+0xb4>
    80010166:	a009                	j	80010168 <.LBB18_50+0x98>
                // 所能读取的最大的字符数小于该页剩余字节
                for i in 0..max {
    80010168:	656e                	ld	a0,216(sp)
    8001016a:	4581                	li	a1,0
    8001016c:	e22e                	sd	a1,256(sp)
    8001016e:	e62a                	sd	a0,264(sp)
    80010170:	f4aa                	sd	a0,104(sp)
    80010172:	852e                	mv	a0,a1
    80010174:	75a6                	ld	a1,104(sp)
    80010176:	00010097          	auipc	ra,0x10
    8001017a:	934080e7          	jalr	-1740(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001017e:	f0aa                	sd	a0,96(sp)
    80010180:	ecae                	sd	a1,88(sp)
    80010182:	a821                	j	8001019a <.LBB18_50+0xca>
    80010184:	4501                	li	a0,0
                    }
                }
                return Ok(())
            }

            for i in 0..count {
    80010186:	fa2a                	sd	a0,304(sp)
    80010188:	65ea                	ld	a1,152(sp)
    8001018a:	fe2e                	sd	a1,312(sp)
    8001018c:	00010097          	auipc	ra,0x10
    80010190:	91e080e7          	jalr	-1762(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    80010194:	e8aa                	sd	a0,80(sp)
    80010196:	e4ae                	sd	a1,72(sp)
    80010198:	a871                	j	80010234 <.LBB18_50+0x164>
                for i in 0..max {
    8001019a:	7506                	ld	a0,96(sp)
    8001019c:	ea2a                	sd	a0,272(sp)
    8001019e:	65e6                	ld	a1,88(sp)
    800101a0:	ee2e                	sd	a1,280(sp)
    800101a2:	a009                	j	800101a4 <.LBB18_50+0xd4>
    800101a4:	0a08                	addi	a0,sp,272
    800101a6:	00010097          	auipc	ra,0x10
    800101aa:	896080e7          	jalr	-1898(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    800101ae:	f22a                	sd	a0,288(sp)
    800101b0:	f62e                	sd	a1,296(sp)
    800101b2:	a009                	j	800101b4 <.LBB18_50+0xe4>
    800101b4:	7512                	ld	a0,288(sp)
    800101b6:	4581                	li	a1,0
    800101b8:	00b50463          	beq	a0,a1,800101c0 <.LBB18_50+0xf0>
    800101bc:	a009                	j	800101be <.LBB18_50+0xee>
    800101be:	a029                	j	800101c8 <.LBB18_50+0xf8>
    800101c0:	4501                	li	a0,0
                return Ok(())
    800101c2:	f1aa                	sd	a0,224(sp)
    800101c4:	a21d                	j	800102ea <.LBB18_50+0x21a>
                for i in 0..max {
    800101c6:	0000                	unimp
    800101c8:	7532                	ld	a0,296(sp)
    800101ca:	e72a                	sd	a0,392(sp)
    800101cc:	eb2a                	sd	a0,400(sp)
    800101ce:	ef2a                	sd	a0,408(sp)
                        let src_ptr = s.offset(i as isize);
    800101d0:	75c6                	ld	a1,112(sp)
    800101d2:	e0aa                	sd	a0,64(sp)
    800101d4:	852e                	mv	a0,a1
    800101d6:	6586                	ld	a1,64(sp)
    800101d8:	00010097          	auipc	ra,0x10
    800101dc:	fc6080e7          	jalr	-58(ra) # 8002019e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE>
    800101e0:	85aa                	mv	a1,a0
    800101e2:	f32a                	sd	a0,416(sp)
    800101e4:	fc2e                	sd	a1,56(sp)
    800101e6:	a009                	j	800101e8 <.LBB18_50+0x118>
                        let val = read(src_ptr); 
    800101e8:	7562                	ld	a0,56(sp)
    800101ea:	00001097          	auipc	ra,0x1
    800101ee:	836080e7          	jalr	-1994(ra) # 80010a20 <_ZN4core3ptr4read17h89a5fabfdcdd4445E>
    800101f2:	85aa                	mv	a1,a0
    800101f4:	1aa107a3          	sb	a0,431(sp)
    800101f8:	f82e                	sd	a1,48(sp)
    800101fa:	a009                	j	800101fc <.LBB18_50+0x12c>
                        if val == 0 { return Ok(()) }
    800101fc:	7542                	ld	a0,48(sp)
    800101fe:	0ff57593          	zext.b	a1,a0
    80010202:	4601                	li	a2,0
    80010204:	00c59663          	bne	a1,a2,80010210 <.LBB18_50+0x140>
    80010208:	a009                	j	8001020a <.LBB18_50+0x13a>
    8001020a:	4501                	li	a0,0
    8001020c:	f1aa                	sd	a0,224(sp)
    8001020e:	a8f1                	j	800102ea <.LBB18_50+0x21a>
                        let dst_ptr = dst.offset(i as isize);
    80010210:	650e                	ld	a0,192(sp)
    80010212:	6586                	ld	a1,64(sp)
    80010214:	00010097          	auipc	ra,0x10
    80010218:	544080e7          	jalr	1348(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    8001021c:	85aa                	mv	a1,a0
    8001021e:	fb2a                	sd	a0,432(sp)
    80010220:	f42e                	sd	a1,40(sp)
    80010222:	a009                	j	80010224 <.LBB18_50+0x154>
                        write(dst_ptr, val);
    80010224:	7522                	ld	a0,40(sp)
    80010226:	75c2                	ld	a1,48(sp)
    80010228:	00001097          	auipc	ra,0x1
    8001022c:	a5e080e7          	jalr	-1442(ra) # 80010c86 <_ZN4core3ptr5write17h7121962e424d368bE>
    80010230:	a009                	j	80010232 <.LBB18_50+0x162>
                for i in 0..max {
    80010232:	bf8d                	j	800101a4 <.LBB18_50+0xd4>
            for i in 0..count {
    80010234:	6546                	ld	a0,80(sp)
    80010236:	e2aa                	sd	a0,320(sp)
    80010238:	65a6                	ld	a1,72(sp)
    8001023a:	e6ae                	sd	a1,328(sp)
    8001023c:	a009                	j	8001023e <.LBB18_50+0x16e>
    8001023e:	0288                	addi	a0,sp,320
    80010240:	0000f097          	auipc	ra,0xf
    80010244:	7fc080e7          	jalr	2044(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    80010248:	eaaa                	sd	a0,336(sp)
    8001024a:	eeae                	sd	a1,344(sp)
    8001024c:	a009                	j	8001024e <.LBB18_50+0x17e>
    8001024e:	6556                	ld	a0,336(sp)
    80010250:	4581                	li	a1,0
    80010252:	00b50463          	beq	a0,a1,8001025a <.LBB18_50+0x18a>
    80010256:	a009                	j	80010258 <.LBB18_50+0x188>
    80010258:	a811                	j	8001026c <.LBB18_50+0x19c>
                    if src_val == 0 { return Ok(()) }
                    let dst_ptr = dst.offset(i as isize);
                    write(dst_ptr, src_val);
                }
            }
            max -= count;
    8001025a:	656e                	ld	a0,216(sp)
    8001025c:	65ea                	ld	a1,152(sp)
    8001025e:	40b50633          	sub	a2,a0,a1
    80010262:	f032                	sd	a2,32(sp)
    80010264:	10c56463          	bltu	a0,a2,8001036c <.LBB18_59>
    80010268:	a885                	j	800102d8 <.LBB18_50+0x208>
            for i in 0..count {
    8001026a:	0000                	unimp
    8001026c:	6576                	ld	a0,344(sp)
    8001026e:	ff2a                	sd	a0,440(sp)
    80010270:	e3aa                	sd	a0,448(sp)
    80010272:	e7aa                	sd	a0,456(sp)
                    let src_ptr = s.offset(i as isize);
    80010274:	75c6                	ld	a1,112(sp)
    80010276:	ec2a                	sd	a0,24(sp)
    80010278:	852e                	mv	a0,a1
    8001027a:	65e2                	ld	a1,24(sp)
    8001027c:	00010097          	auipc	ra,0x10
    80010280:	f22080e7          	jalr	-222(ra) # 8002019e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE>
    80010284:	85aa                	mv	a1,a0
    80010286:	ebaa                	sd	a0,464(sp)
    80010288:	e82e                	sd	a1,16(sp)
    8001028a:	a009                	j	8001028c <.LBB18_50+0x1bc>
                    let src_val = read(src_ptr); 
    8001028c:	6542                	ld	a0,16(sp)
    8001028e:	00000097          	auipc	ra,0x0
    80010292:	792080e7          	jalr	1938(ra) # 80010a20 <_ZN4core3ptr4read17h89a5fabfdcdd4445E>
    80010296:	85aa                	mv	a1,a0
    80010298:	1ca10fa3          	sb	a0,479(sp)
    8001029c:	e42e                	sd	a1,8(sp)
    8001029e:	a009                	j	800102a0 <.LBB18_50+0x1d0>
                    if src_val == 0 { return Ok(()) }
    800102a0:	6522                	ld	a0,8(sp)
    800102a2:	0ff57593          	zext.b	a1,a0
    800102a6:	4601                	li	a2,0
    800102a8:	00c59663          	bne	a1,a2,800102b4 <.LBB18_50+0x1e4>
    800102ac:	a009                	j	800102ae <.LBB18_50+0x1de>
    800102ae:	4501                	li	a0,0
    800102b0:	f1aa                	sd	a0,224(sp)
    800102b2:	a82d                	j	800102ec <.LBB18_50+0x21c>
                    let dst_ptr = dst.offset(i as isize);
    800102b4:	650e                	ld	a0,192(sp)
    800102b6:	65e2                	ld	a1,24(sp)
    800102b8:	00010097          	auipc	ra,0x10
    800102bc:	4a0080e7          	jalr	1184(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    800102c0:	85aa                	mv	a1,a0
    800102c2:	f3aa                	sd	a0,480(sp)
    800102c4:	e02e                	sd	a1,0(sp)
    800102c6:	a009                	j	800102c8 <.LBB18_50+0x1f8>
                    write(dst_ptr, src_val);
    800102c8:	6502                	ld	a0,0(sp)
    800102ca:	65a2                	ld	a1,8(sp)
    800102cc:	00001097          	auipc	ra,0x1
    800102d0:	9ba080e7          	jalr	-1606(ra) # 80010c86 <_ZN4core3ptr5write17h7121962e424d368bE>
    800102d4:	a009                	j	800102d6 <.LBB18_50+0x206>
            for i in 0..count {
    800102d6:	b7a5                	j	8001023e <.LBB18_50+0x16e>
            max -= count;
    800102d8:	7502                	ld	a0,32(sp)
    800102da:	edaa                	sd	a0,216(sp)
    800102dc:	1988                	addi	a0,sp,240
            va.add_page();
    800102de:	ffffa097          	auipc	ra,0xffffa
    800102e2:	3d0080e7          	jalr	976(ra) # 8000a6ae <_ZN6kernel6memory7address4Addr8add_page17ha0376ff76c48c2cbE>
    800102e6:	a009                	j	800102e8 <.LBB18_50+0x218>
        loop {
    800102e8:	bbd9                	j	800100be <_ZN6kernel6memory7mapping10page_table9PageTable11copy_in_str17h64424889d2f87531E+0x2e>
    800102ea:	a009                	j	800102ec <.LBB18_50+0x21c>
        }
    }
    800102ec:	750e                	ld	a0,224(sp)
    800102ee:	75ae                	ld	a1,232(sp)
    800102f0:	70be                	ld	ra,488(sp)
    800102f2:	617d                	addi	sp,sp,496
    800102f4:	8082                	ret

00000000800102f6 <.LBB18_51>:
            let count = PGSIZE - (src - va.as_usize());
    800102f6:	00016517          	auipc	a0,0x16
    800102fa:	5ca50513          	addi	a0,a0,1482 # 800268c0 <str.1>

00000000800102fe <.LBB18_52>:
    800102fe:	00017617          	auipc	a2,0x17
    80010302:	97a60613          	addi	a2,a2,-1670 # 80026c78 <.L__unnamed_53>
    80010306:	02100593          	li	a1,33
    8001030a:	00011097          	auipc	ra,0x11
    8001030e:	9c0080e7          	jalr	-1600(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010314 <.LBB18_53>:
    80010314:	00016517          	auipc	a0,0x16
    80010318:	5ac50513          	addi	a0,a0,1452 # 800268c0 <str.1>

000000008001031c <.LBB18_54>:
    8001031c:	00017617          	auipc	a2,0x17
    80010320:	97460613          	addi	a2,a2,-1676 # 80026c90 <.L__unnamed_54>
    80010324:	02100593          	li	a1,33
    80010328:	00011097          	auipc	ra,0x11
    8001032c:	9a2080e7          	jalr	-1630(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010332 <.LBB18_55>:
            let s = (pa.as_usize() + (src - va.as_usize())) as *const u8;
    80010332:	00016517          	auipc	a0,0x16
    80010336:	58e50513          	addi	a0,a0,1422 # 800268c0 <str.1>

000000008001033a <.LBB18_56>:
    8001033a:	00017617          	auipc	a2,0x17
    8001033e:	96e60613          	addi	a2,a2,-1682 # 80026ca8 <.L__unnamed_55>
    80010342:	02100593          	li	a1,33
    80010346:	00011097          	auipc	ra,0x11
    8001034a:	984080e7          	jalr	-1660(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010350 <.LBB18_57>:
    80010350:	00016517          	auipc	a0,0x16
    80010354:	3b050513          	addi	a0,a0,944 # 80026700 <str.0>

0000000080010358 <.LBB18_58>:
    80010358:	00017617          	auipc	a2,0x17
    8001035c:	96860613          	addi	a2,a2,-1688 # 80026cc0 <.L__unnamed_56>
    80010360:	45f1                	li	a1,28
    80010362:	00011097          	auipc	ra,0x11
    80010366:	968080e7          	jalr	-1688(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001036c <.LBB18_59>:
            max -= count;
    8001036c:	00016517          	auipc	a0,0x16
    80010370:	55450513          	addi	a0,a0,1364 # 800268c0 <str.1>

0000000080010374 <.LBB18_60>:
    80010374:	00017617          	auipc	a2,0x17
    80010378:	96460613          	addi	a2,a2,-1692 # 80026cd8 <.L__unnamed_57>
    8001037c:	02100593          	li	a1,33
    80010380:	00011097          	auipc	ra,0x11
    80010384:	94a080e7          	jalr	-1718(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E:

000000008001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>:


    /// Free a process's page table, and free the
    /// physical memory it refers to.
    pub fn proc_free_pagetable(&mut self, size: usize) {
    8001038a:	715d                	addi	sp,sp,-80
    8001038c:	e486                	sd	ra,72(sp)
    8001038e:	fc2a                	sd	a0,56(sp)
    80010390:	e0ae                	sd	a1,64(sp)
    80010392:	04000637          	lui	a2,0x4000
    80010396:	367d                	addiw	a2,a2,-1
    80010398:	0632                	slli	a2,a2,0xc
        self.uvm_unmap(
            VirtualAddress::new(TRAMPOLINE ), 
    8001039a:	f82a                	sd	a0,48(sp)
    8001039c:	8532                	mv	a0,a2
    8001039e:	f42e                	sd	a1,40(sp)
    800103a0:	ffff7097          	auipc	ra,0xffff7
    800103a4:	778080e7          	jalr	1912(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    800103a8:	f02a                	sd	a0,32(sp)
    800103aa:	a009                	j	800103ac <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E+0x22>
    800103ac:	4605                	li	a2,1
    800103ae:	4501                	li	a0,0
        self.uvm_unmap(
    800103b0:	75c2                	ld	a1,48(sp)
    800103b2:	ec2a                	sd	a0,24(sp)
    800103b4:	852e                	mv	a0,a1
    800103b6:	7582                	ld	a1,32(sp)
    800103b8:	66e2                	ld	a3,24(sp)
    800103ba:	fffff097          	auipc	ra,0xfffff
    800103be:	3d6080e7          	jalr	982(ra) # 8000f790 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE>
    800103c2:	a009                	j	800103c4 <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E+0x3a>
    800103c4:	02000537          	lui	a0,0x2000
    800103c8:	357d                	addiw	a0,a0,-1
    800103ca:	0536                	slli	a0,a0,0xd
            1, 
            false
        );

        self.uvm_unmap(
            VirtualAddress::new(TRAPFRAME),
    800103cc:	ffff7097          	auipc	ra,0xffff7
    800103d0:	74c080e7          	jalr	1868(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    800103d4:	e82a                	sd	a0,16(sp)
    800103d6:	a009                	j	800103d8 <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E+0x4e>
    800103d8:	4605                	li	a2,1
    800103da:	4501                	li	a0,0
        self.uvm_unmap(
    800103dc:	75c2                	ld	a1,48(sp)
    800103de:	e42a                	sd	a0,8(sp)
    800103e0:	852e                	mv	a0,a1
    800103e2:	65c2                	ld	a1,16(sp)
    800103e4:	66a2                	ld	a3,8(sp)
    800103e6:	fffff097          	auipc	ra,0xfffff
    800103ea:	3aa080e7          	jalr	938(ra) # 8000f790 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE>
    800103ee:	a009                	j	800103f0 <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E+0x66>
            1,
            false
        );

        self.uvm_free(size);
    800103f0:	7542                	ld	a0,48(sp)
    800103f2:	75a2                	ld	a1,40(sp)
    800103f4:	fffff097          	auipc	ra,0xfffff
    800103f8:	248080e7          	jalr	584(ra) # 8000f63c <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE>
    800103fc:	a009                	j	800103fe <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E+0x74>
    }
    800103fe:	60a6                	ld	ra,72(sp)
    80010400:	6161                	addi	sp,sp,80
    80010402:	8082                	ret

Disassembly of section .text._ZN4core3ptr13read_volatile17h0a4ad40027f7331eE:

0000000080010404 <_ZN4core3ptr13read_volatile17h0a4ad40027f7331eE>:
///     assert_eq!(std::ptr::read_volatile(y), 12);
/// }
/// ```
#[inline]
#[stable(feature = "volatile", since = "1.9.0")]
pub unsafe fn read_volatile<T>(src: *const T) -> T {
    80010404:	1101                	addi	sp,sp,-32
    80010406:	e82a                	sd	a0,16(sp)
    if cfg!(debug_assertions) && !is_aligned_and_not_null(src) {
        // Not panicking to keep codegen impact smaller.
        abort();
    }
    // SAFETY: the caller must uphold the safety contract for `volatile_load`.
    unsafe { intrinsics::volatile_load(src) }
    80010408:	00056503          	lwu	a0,0(a0) # 2000000 <.Lline_table_start0+0x1fc7cb9>
    8001040c:	ce2a                	sw	a0,28(sp)
    8001040e:	e42a                	sd	a0,8(sp)
    80010410:	a009                	j	80010412 <_ZN4core3ptr13read_volatile17h0a4ad40027f7331eE+0xe>
}
    80010412:	6522                	ld	a0,8(sp)
    80010414:	6105                	addi	sp,sp,32
    80010416:	8082                	ret

Disassembly of section .text._ZN4core3ptr13read_volatile17h6212b0dcb26cb62cE:

0000000080010418 <_ZN4core3ptr13read_volatile17h6212b0dcb26cb62cE>:
pub unsafe fn read_volatile<T>(src: *const T) -> T {
    80010418:	1101                	addi	sp,sp,-32
    8001041a:	e82a                	sd	a0,16(sp)
    unsafe { intrinsics::volatile_load(src) }
    8001041c:	6108                	ld	a0,0(a0)
    8001041e:	ec2a                	sd	a0,24(sp)
    80010420:	e42a                	sd	a0,8(sp)
    80010422:	a009                	j	80010424 <_ZN4core3ptr13read_volatile17h6212b0dcb26cb62cE+0xc>
}
    80010424:	6522                	ld	a0,8(sp)
    80010426:	6105                	addi	sp,sp,32
    80010428:	8082                	ret

Disassembly of section .text._ZN4core3ptr13read_volatile17hd7c38935cb748b8fE:

000000008001042a <_ZN4core3ptr13read_volatile17hd7c38935cb748b8fE>:
pub unsafe fn read_volatile<T>(src: *const T) -> T {
    8001042a:	1101                	addi	sp,sp,-32
    8001042c:	e82a                	sd	a0,16(sp)
    unsafe { intrinsics::volatile_load(src) }
    8001042e:	00054503          	lbu	a0,0(a0)
    80010432:	00a10fa3          	sb	a0,31(sp)
    80010436:	e42a                	sd	a0,8(sp)
    80010438:	a009                	j	8001043a <_ZN4core3ptr13read_volatile17hd7c38935cb748b8fE+0x10>
}
    8001043a:	6522                	ld	a0,8(sp)
    8001043c:	6105                	addi	sp,sp,32
    8001043e:	8082                	ret

Disassembly of section .text._ZN4core3ptr14write_volatile17h418d41cedb4e5342E:

0000000080010440 <_ZN4core3ptr14write_volatile17h418d41cedb4e5342E>:
///     assert_eq!(std::ptr::read_volatile(y), 12);
/// }
/// ```
#[inline]
#[stable(feature = "volatile", since = "1.9.0")]
pub unsafe fn write_volatile<T>(dst: *mut T, src: T) {
    80010440:	1141                	addi	sp,sp,-16
    80010442:	862e                	mv	a2,a1
    80010444:	e02a                	sd	a0,0(sp)
    80010446:	c62e                	sw	a1,12(sp)
        // Not panicking to keep codegen impact smaller.
        abort();
    }
    // SAFETY: the caller must uphold the safety contract for `volatile_store`.
    unsafe {
        intrinsics::volatile_store(dst, src);
    80010448:	c10c                	sw	a1,0(a0)
    8001044a:	a009                	j	8001044c <_ZN4core3ptr14write_volatile17h418d41cedb4e5342E+0xc>
    }
}
    8001044c:	0141                	addi	sp,sp,16
    8001044e:	8082                	ret

Disassembly of section .text._ZN4core3ptr14write_volatile17h6fbe3a30bb1b3c3fE:

0000000080010450 <_ZN4core3ptr14write_volatile17h6fbe3a30bb1b3c3fE>:
pub unsafe fn write_volatile<T>(dst: *mut T, src: T) {
    80010450:	1141                	addi	sp,sp,-16
    80010452:	862e                	mv	a2,a1
    80010454:	e02a                	sd	a0,0(sp)
    80010456:	00b107a3          	sb	a1,15(sp)
        intrinsics::volatile_store(dst, src);
    8001045a:	00b50023          	sb	a1,0(a0)
    8001045e:	a009                	j	80010460 <_ZN4core3ptr14write_volatile17h6fbe3a30bb1b3c3fE+0x10>
}
    80010460:	0141                	addi	sp,sp,16
    80010462:	8082                	ret

Disassembly of section .text._ZN4core3ptr14write_volatile17hbcd48ac0cf1167baE:

0000000080010464 <_ZN4core3ptr14write_volatile17hbcd48ac0cf1167baE>:
pub unsafe fn write_volatile<T>(dst: *mut T, src: T) {
    80010464:	1141                	addi	sp,sp,-16
    80010466:	e02a                	sd	a0,0(sp)
    80010468:	e42e                	sd	a1,8(sp)
        intrinsics::volatile_store(dst, src);
    8001046a:	e10c                	sd	a1,0(a0)
    8001046c:	a009                	j	8001046e <_ZN4core3ptr14write_volatile17hbcd48ac0cf1167baE+0xa>
}
    8001046e:	0141                	addi	sp,sp,16
    80010470:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h1bf95dfbf99ac14cE:

0000000080010472 <_ZN4core3ptr19swap_nonoverlapping17h1bf95dfbf99ac14cE>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    80010472:	715d                	addi	sp,sp,-80
    80010474:	e486                	sd	ra,72(sp)
    80010476:	ec2a                	sd	a0,24(sp)
    80010478:	f02e                	sd	a1,32(sp)
    8001047a:	f432                	sd	a2,40(sp)
    let x = x as *mut u8;
    8001047c:	f82a                	sd	a0,48(sp)
    let y = y as *mut u8;
    8001047e:	fc2e                	sd	a1,56(sp)
    let len = mem::size_of::<T>() * count;
    80010480:	e832                	sd	a2,16(sp)
    80010482:	e42e                	sd	a1,8(sp)
    80010484:	e02a                	sd	a0,0(sp)
    80010486:	a009                	j	80010488 <_ZN4core3ptr19swap_nonoverlapping17h1bf95dfbf99ac14cE+0x16>
    80010488:	6542                	ld	a0,16(sp)
    8001048a:	e0aa                	sd	a0,64(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    8001048c:	6502                	ld	a0,0(sp)
    8001048e:	65a2                	ld	a1,8(sp)
    80010490:	6642                	ld	a2,16(sp)
    80010492:	ffffc097          	auipc	ra,0xffffc
    80010496:	9aa080e7          	jalr	-1622(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    8001049a:	a009                	j	8001049c <_ZN4core3ptr19swap_nonoverlapping17h1bf95dfbf99ac14cE+0x2a>
}
    8001049c:	60a6                	ld	ra,72(sp)
    8001049e:	6161                	addi	sp,sp,80
    800104a0:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h47ecefe3eac53731E:

00000000800104a2 <_ZN4core3ptr19swap_nonoverlapping17h47ecefe3eac53731E>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    800104a2:	711d                	addi	sp,sp,-96
    800104a4:	ec86                	sd	ra,88(sp)
    800104a6:	f42a                	sd	a0,40(sp)
    800104a8:	f82e                	sd	a1,48(sp)
    800104aa:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    800104ac:	86aa                	mv	a3,a0
    800104ae:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    800104b0:	852e                	mv	a0,a1
    800104b2:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    800104b4:	f032                	sd	a2,32(sp)
    800104b6:	ec36                	sd	a3,24(sp)
    800104b8:	e82a                	sd	a0,16(sp)
    800104ba:	a009                	j	800104bc <_ZN4core3ptr19swap_nonoverlapping17h47ecefe3eac53731E+0x1a>
    800104bc:	7502                	ld	a0,32(sp)
    800104be:	00351593          	slli	a1,a0,0x3
    800104c2:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    800104c4:	6562                	ld	a0,24(sp)
    800104c6:	6642                	ld	a2,16(sp)
    800104c8:	e42e                	sd	a1,8(sp)
    800104ca:	85b2                	mv	a1,a2
    800104cc:	6622                	ld	a2,8(sp)
    800104ce:	ffffc097          	auipc	ra,0xffffc
    800104d2:	96e080e7          	jalr	-1682(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    800104d6:	a009                	j	800104d8 <_ZN4core3ptr19swap_nonoverlapping17h47ecefe3eac53731E+0x36>
}
    800104d8:	60e6                	ld	ra,88(sp)
    800104da:	6125                	addi	sp,sp,96
    800104dc:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h5dd6d1fd1ae92219E:

00000000800104de <_ZN4core3ptr19swap_nonoverlapping17h5dd6d1fd1ae92219E>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    800104de:	711d                	addi	sp,sp,-96
    800104e0:	ec86                	sd	ra,88(sp)
    800104e2:	f42a                	sd	a0,40(sp)
    800104e4:	f82e                	sd	a1,48(sp)
    800104e6:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    800104e8:	86aa                	mv	a3,a0
    800104ea:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    800104ec:	852e                	mv	a0,a1
    800104ee:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    800104f0:	f032                	sd	a2,32(sp)
    800104f2:	ec36                	sd	a3,24(sp)
    800104f4:	e82a                	sd	a0,16(sp)
    800104f6:	a009                	j	800104f8 <_ZN4core3ptr19swap_nonoverlapping17h5dd6d1fd1ae92219E+0x1a>
    800104f8:	7502                	ld	a0,32(sp)
    800104fa:	00351593          	slli	a1,a0,0x3
    800104fe:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    80010500:	6562                	ld	a0,24(sp)
    80010502:	6642                	ld	a2,16(sp)
    80010504:	e42e                	sd	a1,8(sp)
    80010506:	85b2                	mv	a1,a2
    80010508:	6622                	ld	a2,8(sp)
    8001050a:	ffffc097          	auipc	ra,0xffffc
    8001050e:	932080e7          	jalr	-1742(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    80010512:	a009                	j	80010514 <_ZN4core3ptr19swap_nonoverlapping17h5dd6d1fd1ae92219E+0x36>
}
    80010514:	60e6                	ld	ra,88(sp)
    80010516:	6125                	addi	sp,sp,96
    80010518:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h5e73e3e39fdbb1acE:

000000008001051a <_ZN4core3ptr19swap_nonoverlapping17h5e73e3e39fdbb1acE>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    8001051a:	711d                	addi	sp,sp,-96
    8001051c:	ec86                	sd	ra,88(sp)
    8001051e:	f42a                	sd	a0,40(sp)
    80010520:	f82e                	sd	a1,48(sp)
    80010522:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    80010524:	86aa                	mv	a3,a0
    80010526:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    80010528:	852e                	mv	a0,a1
    8001052a:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    8001052c:	f032                	sd	a2,32(sp)
    8001052e:	ec36                	sd	a3,24(sp)
    80010530:	e82a                	sd	a0,16(sp)
    80010532:	a009                	j	80010534 <_ZN4core3ptr19swap_nonoverlapping17h5e73e3e39fdbb1acE+0x1a>
    80010534:	7502                	ld	a0,32(sp)
    80010536:	00451593          	slli	a1,a0,0x4
    8001053a:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    8001053c:	6562                	ld	a0,24(sp)
    8001053e:	6642                	ld	a2,16(sp)
    80010540:	e42e                	sd	a1,8(sp)
    80010542:	85b2                	mv	a1,a2
    80010544:	6622                	ld	a2,8(sp)
    80010546:	ffffc097          	auipc	ra,0xffffc
    8001054a:	8f6080e7          	jalr	-1802(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    8001054e:	a009                	j	80010550 <_ZN4core3ptr19swap_nonoverlapping17h5e73e3e39fdbb1acE+0x36>
}
    80010550:	60e6                	ld	ra,88(sp)
    80010552:	6125                	addi	sp,sp,96
    80010554:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h64a2052ab1bbf907E:

0000000080010556 <_ZN4core3ptr19swap_nonoverlapping17h64a2052ab1bbf907E>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    80010556:	711d                	addi	sp,sp,-96
    80010558:	ec86                	sd	ra,88(sp)
    8001055a:	f42a                	sd	a0,40(sp)
    8001055c:	f82e                	sd	a1,48(sp)
    8001055e:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    80010560:	86aa                	mv	a3,a0
    80010562:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    80010564:	852e                	mv	a0,a1
    80010566:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    80010568:	f032                	sd	a2,32(sp)
    8001056a:	ec36                	sd	a3,24(sp)
    8001056c:	e82a                	sd	a0,16(sp)
    8001056e:	a009                	j	80010570 <_ZN4core3ptr19swap_nonoverlapping17h64a2052ab1bbf907E+0x1a>
    80010570:	7502                	ld	a0,32(sp)
    80010572:	00451593          	slli	a1,a0,0x4
    80010576:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    80010578:	6562                	ld	a0,24(sp)
    8001057a:	6642                	ld	a2,16(sp)
    8001057c:	e42e                	sd	a1,8(sp)
    8001057e:	85b2                	mv	a1,a2
    80010580:	6622                	ld	a2,8(sp)
    80010582:	ffffc097          	auipc	ra,0xffffc
    80010586:	8ba080e7          	jalr	-1862(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    8001058a:	a009                	j	8001058c <_ZN4core3ptr19swap_nonoverlapping17h64a2052ab1bbf907E+0x36>
}
    8001058c:	60e6                	ld	ra,88(sp)
    8001058e:	6125                	addi	sp,sp,96
    80010590:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h690d2599ad96d206E:

0000000080010592 <_ZN4core3ptr19swap_nonoverlapping17h690d2599ad96d206E>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    80010592:	711d                	addi	sp,sp,-96
    80010594:	ec86                	sd	ra,88(sp)
    80010596:	f42a                	sd	a0,40(sp)
    80010598:	f82e                	sd	a1,48(sp)
    8001059a:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    8001059c:	86aa                	mv	a3,a0
    8001059e:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    800105a0:	852e                	mv	a0,a1
    800105a2:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    800105a4:	f032                	sd	a2,32(sp)
    800105a6:	ec36                	sd	a3,24(sp)
    800105a8:	e82a                	sd	a0,16(sp)
    800105aa:	a009                	j	800105ac <_ZN4core3ptr19swap_nonoverlapping17h690d2599ad96d206E+0x1a>
    800105ac:	7502                	ld	a0,32(sp)
    800105ae:	00351593          	slli	a1,a0,0x3
    800105b2:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    800105b4:	6562                	ld	a0,24(sp)
    800105b6:	6642                	ld	a2,16(sp)
    800105b8:	e42e                	sd	a1,8(sp)
    800105ba:	85b2                	mv	a1,a2
    800105bc:	6622                	ld	a2,8(sp)
    800105be:	ffffc097          	auipc	ra,0xffffc
    800105c2:	87e080e7          	jalr	-1922(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    800105c6:	a009                	j	800105c8 <_ZN4core3ptr19swap_nonoverlapping17h690d2599ad96d206E+0x36>
}
    800105c8:	60e6                	ld	ra,88(sp)
    800105ca:	6125                	addi	sp,sp,96
    800105cc:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17hb46fae8abb7cbd20E:

00000000800105ce <_ZN4core3ptr19swap_nonoverlapping17hb46fae8abb7cbd20E>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    800105ce:	711d                	addi	sp,sp,-96
    800105d0:	ec86                	sd	ra,88(sp)
    800105d2:	f42a                	sd	a0,40(sp)
    800105d4:	f82e                	sd	a1,48(sp)
    800105d6:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    800105d8:	86aa                	mv	a3,a0
    800105da:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    800105dc:	852e                	mv	a0,a1
    800105de:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    800105e0:	f032                	sd	a2,32(sp)
    800105e2:	ec36                	sd	a3,24(sp)
    800105e4:	e82a                	sd	a0,16(sp)
    800105e6:	a009                	j	800105e8 <_ZN4core3ptr19swap_nonoverlapping17hb46fae8abb7cbd20E+0x1a>
    800105e8:	7502                	ld	a0,32(sp)
    800105ea:	00251593          	slli	a1,a0,0x2
    800105ee:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    800105f0:	6562                	ld	a0,24(sp)
    800105f2:	6642                	ld	a2,16(sp)
    800105f4:	e42e                	sd	a1,8(sp)
    800105f6:	85b2                	mv	a1,a2
    800105f8:	6622                	ld	a2,8(sp)
    800105fa:	ffffc097          	auipc	ra,0xffffc
    800105fe:	842080e7          	jalr	-1982(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    80010602:	a009                	j	80010604 <_ZN4core3ptr19swap_nonoverlapping17hb46fae8abb7cbd20E+0x36>
}
    80010604:	60e6                	ld	ra,88(sp)
    80010606:	6125                	addi	sp,sp,96
    80010608:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17hc3afb1f3aaa27447E:

000000008001060a <_ZN4core3ptr19swap_nonoverlapping17hc3afb1f3aaa27447E>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    8001060a:	711d                	addi	sp,sp,-96
    8001060c:	ec86                	sd	ra,88(sp)
    8001060e:	f42a                	sd	a0,40(sp)
    80010610:	f82e                	sd	a1,48(sp)
    80010612:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    80010614:	86aa                	mv	a3,a0
    80010616:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    80010618:	852e                	mv	a0,a1
    8001061a:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    8001061c:	f032                	sd	a2,32(sp)
    8001061e:	ec36                	sd	a3,24(sp)
    80010620:	e82a                	sd	a0,16(sp)
    80010622:	a009                	j	80010624 <_ZN4core3ptr19swap_nonoverlapping17hc3afb1f3aaa27447E+0x1a>
    80010624:	7502                	ld	a0,32(sp)
    80010626:	00151593          	slli	a1,a0,0x1
    8001062a:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    8001062c:	6562                	ld	a0,24(sp)
    8001062e:	6642                	ld	a2,16(sp)
    80010630:	e42e                	sd	a1,8(sp)
    80010632:	85b2                	mv	a1,a2
    80010634:	6622                	ld	a2,8(sp)
    80010636:	ffffc097          	auipc	ra,0xffffc
    8001063a:	806080e7          	jalr	-2042(ra) # 8000be3c <_ZN4core3ptr25swap_nonoverlapping_bytes17he384474e9a143143E>
    8001063e:	a009                	j	80010640 <_ZN4core3ptr19swap_nonoverlapping17hc3afb1f3aaa27447E+0x36>
}
    80010640:	60e6                	ld	ra,88(sp)
    80010642:	6125                	addi	sp,sp,96
    80010644:	8082                	ret

Disassembly of section .text._ZN4core3ptr20slice_from_raw_parts17h82de6d4061323479E:

0000000080010646 <_ZN4core3ptr20slice_from_raw_parts17h82de6d4061323479E>:
pub const fn slice_from_raw_parts<T>(data: *const T, len: usize) -> *const [T] {
    80010646:	7179                	addi	sp,sp,-48
    80010648:	f02a                	sd	a0,32(sp)
    8001064a:	f42e                	sd	a1,40(sp)
    unsafe { Repr { raw: FatPtr { data, len } }.rust }
    8001064c:	e82a                	sd	a0,16(sp)
    8001064e:	ec2e                	sd	a1,24(sp)
    80010650:	e02a                	sd	a0,0(sp)
    80010652:	e42e                	sd	a1,8(sp)
}
    80010654:	6145                	addi	sp,sp,48
    80010656:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE:

0000000080010658 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    80010658:	715d                	addi	sp,sp,-80
    8001065a:	e486                	sd	ra,72(sp)
    8001065c:	f42a                	sd	a0,40(sp)
    8001065e:	f82e                	sd	a1,48(sp)
    if mem::size_of::<T>() < 32 {
    80010660:	ec2e                	sd	a1,24(sp)
    80010662:	e82a                	sd	a0,16(sp)
    80010664:	a009                	j	80010666 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0xe>
    80010666:	4501                	li	a0,0
    80010668:	ed11                	bnez	a0,80010684 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x2c>
    8001066a:	a009                	j	8001066c <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x14>
            let z = read(x);
    8001066c:	6542                	ld	a0,16(sp)
    8001066e:	00000097          	auipc	ra,0x0
    80010672:	2fe080e7          	jalr	766(ra) # 8001096c <_ZN4core3ptr4read17h38008bd68cef3392E>
    80010676:	862a                	mv	a2,a0
    80010678:	86ae                	mv	a3,a1
    8001067a:	fc2a                	sd	a0,56(sp)
    8001067c:	e0ae                	sd	a1,64(sp)
    8001067e:	e432                	sd	a2,8(sp)
    80010680:	e036                	sd	a3,0(sp)
    80010682:	a809                	j	80010694 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x3c>
    80010684:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    80010686:	6542                	ld	a0,16(sp)
    80010688:	65e2                	ld	a1,24(sp)
    8001068a:	00000097          	auipc	ra,0x0
    8001068e:	ecc080e7          	jalr	-308(ra) # 80010556 <_ZN4core3ptr19swap_nonoverlapping17h64a2052ab1bbf907E>
    80010692:	a015                	j	800106b6 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x5e>
    80010694:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    80010696:	6562                	ld	a0,24(sp)
    80010698:	65c2                	ld	a1,16(sp)
    8001069a:	ffff5097          	auipc	ra,0xffff5
    8001069e:	4ee080e7          	jalr	1262(ra) # 80005b88 <_ZN4core10intrinsics19copy_nonoverlapping17hc3ca3e2499cc3b72E>
    800106a2:	a009                	j	800106a4 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x4c>
            write(y, z);
    800106a4:	6562                	ld	a0,24(sp)
    800106a6:	65a2                	ld	a1,8(sp)
    800106a8:	6602                	ld	a2,0(sp)
    800106aa:	00000097          	auipc	ra,0x0
    800106ae:	620080e7          	jalr	1568(ra) # 80010cca <_ZN4core3ptr5write17haf544b67d1859bc5E>
    800106b2:	a009                	j	800106b4 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x5c>
    if mem::size_of::<T>() < 32 {
    800106b4:	a011                	j	800106b8 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x60>
    800106b6:	a009                	j	800106b8 <_ZN4core3ptr23swap_nonoverlapping_one17h27a68692ef5bae2dE+0x60>
}
    800106b8:	60a6                	ld	ra,72(sp)
    800106ba:	6161                	addi	sp,sp,80
    800106bc:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E:

00000000800106be <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    800106be:	7139                	addi	sp,sp,-64
    800106c0:	fc06                	sd	ra,56(sp)
    800106c2:	f02a                	sd	a0,32(sp)
    800106c4:	f42e                	sd	a1,40(sp)
    if mem::size_of::<T>() < 32 {
    800106c6:	e82e                	sd	a1,16(sp)
    800106c8:	e42a                	sd	a0,8(sp)
    800106ca:	a009                	j	800106cc <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0xe>
    800106cc:	4501                	li	a0,0
    800106ce:	e919                	bnez	a0,800106e4 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x26>
    800106d0:	a009                	j	800106d2 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x14>
            let z = read(x);
    800106d2:	6522                	ld	a0,8(sp)
    800106d4:	00000097          	auipc	ra,0x0
    800106d8:	314080e7          	jalr	788(ra) # 800109e8 <_ZN4core3ptr4read17h5f35d1a17a2b93c1E>
    800106dc:	85aa                	mv	a1,a0
    800106de:	f82a                	sd	a0,48(sp)
    800106e0:	e02e                	sd	a1,0(sp)
    800106e2:	a809                	j	800106f4 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x36>
    800106e4:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    800106e6:	6522                	ld	a0,8(sp)
    800106e8:	65c2                	ld	a1,16(sp)
    800106ea:	00000097          	auipc	ra,0x0
    800106ee:	ea8080e7          	jalr	-344(ra) # 80010592 <_ZN4core3ptr19swap_nonoverlapping17h690d2599ad96d206E>
    800106f2:	a00d                	j	80010714 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x56>
    800106f4:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    800106f6:	6542                	ld	a0,16(sp)
    800106f8:	65a2                	ld	a1,8(sp)
    800106fa:	ffff5097          	auipc	ra,0xffff5
    800106fe:	408080e7          	jalr	1032(ra) # 80005b02 <_ZN4core10intrinsics19copy_nonoverlapping17hac225dd597e2d360E>
    80010702:	a009                	j	80010704 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x46>
            write(y, z);
    80010704:	6542                	ld	a0,16(sp)
    80010706:	6582                	ld	a1,0(sp)
    80010708:	00000097          	auipc	ra,0x0
    8001070c:	5b4080e7          	jalr	1460(ra) # 80010cbc <_ZN4core3ptr5write17haea775929a97340fE>
    80010710:	a009                	j	80010712 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x54>
    if mem::size_of::<T>() < 32 {
    80010712:	a011                	j	80010716 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x58>
    80010714:	a009                	j	80010716 <_ZN4core3ptr23swap_nonoverlapping_one17h42e4244ccffb9bf7E+0x58>
}
    80010716:	70e2                	ld	ra,56(sp)
    80010718:	6121                	addi	sp,sp,64
    8001071a:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE:

000000008001071c <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    8001071c:	7139                	addi	sp,sp,-64
    8001071e:	fc06                	sd	ra,56(sp)
    80010720:	f02a                	sd	a0,32(sp)
    80010722:	f42e                	sd	a1,40(sp)
    if mem::size_of::<T>() < 32 {
    80010724:	e82e                	sd	a1,16(sp)
    80010726:	e42a                	sd	a0,8(sp)
    80010728:	a009                	j	8001072a <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0xe>
    8001072a:	4501                	li	a0,0
    8001072c:	ed01                	bnez	a0,80010744 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x28>
    8001072e:	a009                	j	80010730 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x14>
            let z = read(x);
    80010730:	6522                	ld	a0,8(sp)
    80010732:	00000097          	auipc	ra,0x0
    80010736:	332080e7          	jalr	818(ra) # 80010a64 <_ZN4core3ptr4read17h903924f4ce365fe2E>
    8001073a:	85aa                	mv	a1,a0
    8001073c:	02a10ba3          	sb	a0,55(sp)
    80010740:	e02e                	sd	a1,0(sp)
    80010742:	a809                	j	80010754 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x38>
    80010744:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    80010746:	6522                	ld	a0,8(sp)
    80010748:	65c2                	ld	a1,16(sp)
    8001074a:	00000097          	auipc	ra,0x0
    8001074e:	d28080e7          	jalr	-728(ra) # 80010472 <_ZN4core3ptr19swap_nonoverlapping17h1bf95dfbf99ac14cE>
    80010752:	a00d                	j	80010774 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x58>
    80010754:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    80010756:	6542                	ld	a0,16(sp)
    80010758:	65a2                	ld	a1,8(sp)
    8001075a:	ffff5097          	auipc	ra,0xffff5
    8001075e:	40e080e7          	jalr	1038(ra) # 80005b68 <_ZN4core10intrinsics19copy_nonoverlapping17hbea39e0f916c166dE>
    80010762:	a009                	j	80010764 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x48>
            write(y, z);
    80010764:	6542                	ld	a0,16(sp)
    80010766:	6582                	ld	a1,0(sp)
    80010768:	00000097          	auipc	ra,0x0
    8001076c:	4e2080e7          	jalr	1250(ra) # 80010c4a <_ZN4core3ptr5write17h18c7b9a46cdde9e1E>
    80010770:	a009                	j	80010772 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x56>
    if mem::size_of::<T>() < 32 {
    80010772:	a011                	j	80010776 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x5a>
    80010774:	a009                	j	80010776 <_ZN4core3ptr23swap_nonoverlapping_one17h9a5ba0be5cc557ecE+0x5a>
}
    80010776:	70e2                	ld	ra,56(sp)
    80010778:	6121                	addi	sp,sp,64
    8001077a:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE:

000000008001077c <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    8001077c:	715d                	addi	sp,sp,-80
    8001077e:	e486                	sd	ra,72(sp)
    80010780:	f42a                	sd	a0,40(sp)
    80010782:	f82e                	sd	a1,48(sp)
    if mem::size_of::<T>() < 32 {
    80010784:	ec2e                	sd	a1,24(sp)
    80010786:	e82a                	sd	a0,16(sp)
    80010788:	a009                	j	8001078a <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0xe>
    8001078a:	4501                	li	a0,0
    8001078c:	ed11                	bnez	a0,800107a8 <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x2c>
    8001078e:	a009                	j	80010790 <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x14>
            let z = read(x);
    80010790:	6542                	ld	a0,16(sp)
    80010792:	00000097          	auipc	ra,0x0
    80010796:	31c080e7          	jalr	796(ra) # 80010aae <_ZN4core3ptr4read17h99649a1862dc058cE>
    8001079a:	862a                	mv	a2,a0
    8001079c:	86ae                	mv	a3,a1
    8001079e:	fc2a                	sd	a0,56(sp)
    800107a0:	e0ae                	sd	a1,64(sp)
    800107a2:	e432                	sd	a2,8(sp)
    800107a4:	e036                	sd	a3,0(sp)
    800107a6:	a809                	j	800107b8 <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x3c>
    800107a8:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    800107aa:	6542                	ld	a0,16(sp)
    800107ac:	65e2                	ld	a1,24(sp)
    800107ae:	00000097          	auipc	ra,0x0
    800107b2:	d6c080e7          	jalr	-660(ra) # 8001051a <_ZN4core3ptr19swap_nonoverlapping17h5e73e3e39fdbb1acE>
    800107b6:	a015                	j	800107da <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x5e>
    800107b8:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    800107ba:	6562                	ld	a0,24(sp)
    800107bc:	65c2                	ld	a1,16(sp)
    800107be:	ffff5097          	auipc	ra,0xffff5
    800107c2:	272080e7          	jalr	626(ra) # 80005a30 <_ZN4core10intrinsics19copy_nonoverlapping17h6a4318f11b67d4f7E>
    800107c6:	a009                	j	800107c8 <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x4c>
            write(y, z);
    800107c8:	6562                	ld	a0,24(sp)
    800107ca:	65a2                	ld	a1,8(sp)
    800107cc:	6602                	ld	a2,0(sp)
    800107ce:	00000097          	auipc	ra,0x0
    800107d2:	4cc080e7          	jalr	1228(ra) # 80010c9a <_ZN4core3ptr5write17h928abbb610d264f1E>
    800107d6:	a009                	j	800107d8 <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x5c>
    if mem::size_of::<T>() < 32 {
    800107d8:	a011                	j	800107dc <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x60>
    800107da:	a009                	j	800107dc <_ZN4core3ptr23swap_nonoverlapping_one17hb5f927e9e92c180eE+0x60>
}
    800107dc:	60a6                	ld	ra,72(sp)
    800107de:	6161                	addi	sp,sp,80
    800107e0:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE:

00000000800107e2 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    800107e2:	7139                	addi	sp,sp,-64
    800107e4:	fc06                	sd	ra,56(sp)
    800107e6:	f02a                	sd	a0,32(sp)
    800107e8:	f42e                	sd	a1,40(sp)
    if mem::size_of::<T>() < 32 {
    800107ea:	e82e                	sd	a1,16(sp)
    800107ec:	e42a                	sd	a0,8(sp)
    800107ee:	a009                	j	800107f0 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0xe>
    800107f0:	4501                	li	a0,0
    800107f2:	e919                	bnez	a0,80010808 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x26>
    800107f4:	a009                	j	800107f6 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x14>
            let z = read(x);
    800107f6:	6522                	ld	a0,8(sp)
    800107f8:	00000097          	auipc	ra,0x0
    800107fc:	2fa080e7          	jalr	762(ra) # 80010af2 <_ZN4core3ptr4read17h9c28f54bc51d0888E>
    80010800:	85aa                	mv	a1,a0
    80010802:	da2a                	sw	a0,52(sp)
    80010804:	e02e                	sd	a1,0(sp)
    80010806:	a809                	j	80010818 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x36>
    80010808:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    8001080a:	6522                	ld	a0,8(sp)
    8001080c:	65c2                	ld	a1,16(sp)
    8001080e:	00000097          	auipc	ra,0x0
    80010812:	dc0080e7          	jalr	-576(ra) # 800105ce <_ZN4core3ptr19swap_nonoverlapping17hb46fae8abb7cbd20E>
    80010816:	a00d                	j	80010838 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x56>
    80010818:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    8001081a:	6542                	ld	a0,16(sp)
    8001081c:	65a2                	ld	a1,8(sp)
    8001081e:	ffff5097          	auipc	ra,0xffff5
    80010822:	2c2080e7          	jalr	706(ra) # 80005ae0 <_ZN4core10intrinsics19copy_nonoverlapping17h977eb2abcd65823aE>
    80010826:	a009                	j	80010828 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x46>
            write(y, z);
    80010828:	6542                	ld	a0,16(sp)
    8001082a:	6582                	ld	a1,0(sp)
    8001082c:	00000097          	auipc	ra,0x0
    80010830:	480080e7          	jalr	1152(ra) # 80010cac <_ZN4core3ptr5write17h9ef81f9492ed6dceE>
    80010834:	a009                	j	80010836 <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x54>
    if mem::size_of::<T>() < 32 {
    80010836:	a011                	j	8001083a <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x58>
    80010838:	a009                	j	8001083a <_ZN4core3ptr23swap_nonoverlapping_one17hbecbfbc7d18d7e9fE+0x58>
}
    8001083a:	70e2                	ld	ra,56(sp)
    8001083c:	6121                	addi	sp,sp,64
    8001083e:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE:

0000000080010840 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    80010840:	7139                	addi	sp,sp,-64
    80010842:	fc06                	sd	ra,56(sp)
    80010844:	f02a                	sd	a0,32(sp)
    80010846:	f42e                	sd	a1,40(sp)
    if mem::size_of::<T>() < 32 {
    80010848:	e82e                	sd	a1,16(sp)
    8001084a:	e42a                	sd	a0,8(sp)
    8001084c:	a009                	j	8001084e <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0xe>
    8001084e:	4501                	li	a0,0
    80010850:	e919                	bnez	a0,80010866 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x26>
    80010852:	a009                	j	80010854 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x14>
            let z = read(x);
    80010854:	6522                	ld	a0,8(sp)
    80010856:	00000097          	auipc	ra,0x0
    8001085a:	36a080e7          	jalr	874(ra) # 80010bc0 <_ZN4core3ptr4read17hd61826cda6acc818E>
    8001085e:	85aa                	mv	a1,a0
    80010860:	f82a                	sd	a0,48(sp)
    80010862:	e02e                	sd	a1,0(sp)
    80010864:	a809                	j	80010876 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x36>
    80010866:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    80010868:	6522                	ld	a0,8(sp)
    8001086a:	65c2                	ld	a1,16(sp)
    8001086c:	00000097          	auipc	ra,0x0
    80010870:	c36080e7          	jalr	-970(ra) # 800104a2 <_ZN4core3ptr19swap_nonoverlapping17h47ecefe3eac53731E>
    80010874:	a00d                	j	80010896 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x56>
    80010876:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    80010878:	6542                	ld	a0,16(sp)
    8001087a:	65a2                	ld	a1,8(sp)
    8001087c:	ffff5097          	auipc	ra,0xffff5
    80010880:	2ca080e7          	jalr	714(ra) # 80005b46 <_ZN4core10intrinsics19copy_nonoverlapping17hb8a7ef6ec1e77e87E>
    80010884:	a009                	j	80010886 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x46>
            write(y, z);
    80010886:	6542                	ld	a0,16(sp)
    80010888:	6582                	ld	a1,0(sp)
    8001088a:	00000097          	auipc	ra,0x0
    8001088e:	3b2080e7          	jalr	946(ra) # 80010c3c <_ZN4core3ptr5write17h0fc136be3ebb9f0dE>
    80010892:	a009                	j	80010894 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x54>
    if mem::size_of::<T>() < 32 {
    80010894:	a011                	j	80010898 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x58>
    80010896:	a009                	j	80010898 <_ZN4core3ptr23swap_nonoverlapping_one17hc4ef8a59e032a98fE+0x58>
}
    80010898:	70e2                	ld	ra,56(sp)
    8001089a:	6121                	addi	sp,sp,64
    8001089c:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E:

000000008001089e <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    8001089e:	7139                	addi	sp,sp,-64
    800108a0:	fc06                	sd	ra,56(sp)
    800108a2:	f02a                	sd	a0,32(sp)
    800108a4:	f42e                	sd	a1,40(sp)
    if mem::size_of::<T>() < 32 {
    800108a6:	e82e                	sd	a1,16(sp)
    800108a8:	e42a                	sd	a0,8(sp)
    800108aa:	a009                	j	800108ac <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0xe>
    800108ac:	4501                	li	a0,0
    800108ae:	ed01                	bnez	a0,800108c6 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x28>
    800108b0:	a009                	j	800108b2 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x14>
            let z = read(x);
    800108b2:	6522                	ld	a0,8(sp)
    800108b4:	00000097          	auipc	ra,0x0
    800108b8:	344080e7          	jalr	836(ra) # 80010bf8 <_ZN4core3ptr4read17he1a411b49bb4caa7E>
    800108bc:	85aa                	mv	a1,a0
    800108be:	02a11b23          	sh	a0,54(sp)
    800108c2:	e02e                	sd	a1,0(sp)
    800108c4:	a809                	j	800108d6 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x38>
    800108c6:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    800108c8:	6522                	ld	a0,8(sp)
    800108ca:	65c2                	ld	a1,16(sp)
    800108cc:	00000097          	auipc	ra,0x0
    800108d0:	d3e080e7          	jalr	-706(ra) # 8001060a <_ZN4core3ptr19swap_nonoverlapping17hc3afb1f3aaa27447E>
    800108d4:	a00d                	j	800108f6 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x58>
    800108d6:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    800108d8:	6542                	ld	a0,16(sp)
    800108da:	65a2                	ld	a1,8(sp)
    800108dc:	ffff5097          	auipc	ra,0xffff5
    800108e0:	132080e7          	jalr	306(ra) # 80005a0e <_ZN4core10intrinsics19copy_nonoverlapping17h1b2cde1854500dacE>
    800108e4:	a009                	j	800108e6 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x48>
            write(y, z);
    800108e6:	6542                	ld	a0,16(sp)
    800108e8:	6582                	ld	a1,0(sp)
    800108ea:	00000097          	auipc	ra,0x0
    800108ee:	3f2080e7          	jalr	1010(ra) # 80010cdc <_ZN4core3ptr5write17hf8ffa16aa7c859fcE>
    800108f2:	a009                	j	800108f4 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x56>
    if mem::size_of::<T>() < 32 {
    800108f4:	a011                	j	800108f8 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x5a>
    800108f6:	a009                	j	800108f8 <_ZN4core3ptr23swap_nonoverlapping_one17hceb26f8596fd92f4E+0x5a>
}
    800108f8:	70e2                	ld	ra,56(sp)
    800108fa:	6121                	addi	sp,sp,64
    800108fc:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E:

00000000800108fe <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    800108fe:	7139                	addi	sp,sp,-64
    80010900:	fc06                	sd	ra,56(sp)
    80010902:	f02a                	sd	a0,32(sp)
    80010904:	f42e                	sd	a1,40(sp)
    if mem::size_of::<T>() < 32 {
    80010906:	e82e                	sd	a1,16(sp)
    80010908:	e42a                	sd	a0,8(sp)
    8001090a:	a009                	j	8001090c <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0xe>
    8001090c:	4501                	li	a0,0
    8001090e:	e919                	bnez	a0,80010924 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x26>
    80010910:	a009                	j	80010912 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x14>
            let z = read(x);
    80010912:	6522                	ld	a0,8(sp)
    80010914:	00000097          	auipc	ra,0x0
    80010918:	09e080e7          	jalr	158(ra) # 800109b2 <_ZN4core3ptr4read17h46256d3fd64402e3E>
    8001091c:	85aa                	mv	a1,a0
    8001091e:	f82a                	sd	a0,48(sp)
    80010920:	e02e                	sd	a1,0(sp)
    80010922:	a809                	j	80010934 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x36>
    80010924:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    80010926:	6522                	ld	a0,8(sp)
    80010928:	65c2                	ld	a1,16(sp)
    8001092a:	00000097          	auipc	ra,0x0
    8001092e:	bb4080e7          	jalr	-1100(ra) # 800104de <_ZN4core3ptr19swap_nonoverlapping17h5dd6d1fd1ae92219E>
    80010932:	a00d                	j	80010954 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x56>
    80010934:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    80010936:	6542                	ld	a0,16(sp)
    80010938:	65a2                	ld	a1,8(sp)
    8001093a:	ffff5097          	auipc	ra,0xffff5
    8001093e:	13a080e7          	jalr	314(ra) # 80005a74 <_ZN4core10intrinsics19copy_nonoverlapping17h725faea97d1685c1E>
    80010942:	a009                	j	80010944 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x46>
            write(y, z);
    80010944:	6542                	ld	a0,16(sp)
    80010946:	6582                	ld	a1,0(sp)
    80010948:	00000097          	auipc	ra,0x0
    8001094c:	330080e7          	jalr	816(ra) # 80010c78 <_ZN4core3ptr5write17h465b0371b3cd1235E>
    80010950:	a009                	j	80010952 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x54>
    if mem::size_of::<T>() < 32 {
    80010952:	a011                	j	80010956 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x58>
    80010954:	a009                	j	80010956 <_ZN4core3ptr23swap_nonoverlapping_one17hef78f7837ed43918E+0x58>
}
    80010956:	70e2                	ld	ra,56(sp)
    80010958:	6121                	addi	sp,sp,64
    8001095a:	8082                	ret

Disassembly of section .text._ZN4core3ptr2eq17h1bbcd7553e7a119fE:

000000008001095c <_ZN4core3ptr2eq17h1bbcd7553e7a119fE>:
///     &wrapper.member as &dyn Trait as *const dyn Trait as *const u8,
/// ));
/// ```
#[stable(feature = "ptr_eq", since = "1.17.0")]
#[inline]
pub fn eq<T: ?Sized>(a: *const T, b: *const T) -> bool {
    8001095c:	1141                	addi	sp,sp,-16
    8001095e:	e02a                	sd	a0,0(sp)
    80010960:	e42e                	sd	a1,8(sp)
    a == b
    80010962:	8d2d                	xor	a0,a0,a1
    80010964:	00153513          	seqz	a0,a0
}
    80010968:	0141                	addi	sp,sp,16
    8001096a:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h38008bd68cef3392E:

000000008001096c <_ZN4core3ptr4read17h38008bd68cef3392E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    8001096c:	7119                	addi	sp,sp,-128
    8001096e:	fc86                	sd	ra,120(sp)
    80010970:	fc2a                	sd	a0,56(sp)
    #[rustc_const_stable(feature = "const_maybe_uninit", since = "1.36.0")]
    #[inline(always)]
    #[rustc_diagnostic_item = "maybe_uninit_uninit"]
    pub const fn uninit() -> MaybeUninit<T> {
        MaybeUninit { uninit: () }
    }
    80010972:	6586                	ld	a1,64(sp)
    80010974:	6626                	ld	a2,72(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010976:	f42e                	sd	a1,40(sp)
    80010978:	f832                	sd	a2,48(sp)
    8001097a:	f02a                	sd	a0,32(sp)
    8001097c:	a009                	j	8001097e <_ZN4core3ptr4read17h38008bd68cef3392E+0x12>
    8001097e:	1028                	addi	a0,sp,40
    80010980:	f8aa                	sd	a0,112(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010982:	ec2a                	sd	a0,24(sp)
    80010984:	a009                	j	80010986 <_ZN4core3ptr4read17h38008bd68cef3392E+0x1a>
    80010986:	4605                	li	a2,1
    80010988:	7502                	ld	a0,32(sp)
    8001098a:	65e2                	ld	a1,24(sp)
    8001098c:	ffff5097          	auipc	ra,0xffff5
    80010990:	1fc080e7          	jalr	508(ra) # 80005b88 <_ZN4core10intrinsics19copy_nonoverlapping17hc3ca3e2499cc3b72E>
    80010994:	a009                	j	80010996 <_ZN4core3ptr4read17h38008bd68cef3392E+0x2a>
        tmp.assume_init()
    80010996:	7522                	ld	a0,40(sp)
    80010998:	75c2                	ld	a1,48(sp)
    8001099a:	e8aa                	sd	a0,80(sp)
    8001099c:	ecae                	sd	a1,88(sp)
    8001099e:	f0aa                	sd	a0,96(sp)
    800109a0:	f4ae                	sd	a1,104(sp)
    800109a2:	e82a                	sd	a0,16(sp)
    800109a4:	e42e                	sd	a1,8(sp)
    800109a6:	a009                	j	800109a8 <_ZN4core3ptr4read17h38008bd68cef3392E+0x3c>
}
    800109a8:	6542                	ld	a0,16(sp)
    800109aa:	65a2                	ld	a1,8(sp)
    800109ac:	70e6                	ld	ra,120(sp)
    800109ae:	6109                	addi	sp,sp,128
    800109b0:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h46256d3fd64402e3E:

00000000800109b2 <_ZN4core3ptr4read17h46256d3fd64402e3E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    800109b2:	715d                	addi	sp,sp,-80
    800109b4:	e486                	sd	ra,72(sp)
    800109b6:	f02a                	sd	a0,32(sp)
    800109b8:	75a2                	ld	a1,40(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    800109ba:	ec2e                	sd	a1,24(sp)
    800109bc:	e82a                	sd	a0,16(sp)
    800109be:	a009                	j	800109c0 <_ZN4core3ptr4read17h46256d3fd64402e3E+0xe>
    800109c0:	0828                	addi	a0,sp,24
    800109c2:	e0aa                	sd	a0,64(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    800109c4:	a009                	j	800109c6 <_ZN4core3ptr4read17h46256d3fd64402e3E+0x14>
    800109c6:	082c                	addi	a1,sp,24
    800109c8:	4605                	li	a2,1
    800109ca:	6542                	ld	a0,16(sp)
    800109cc:	ffff5097          	auipc	ra,0xffff5
    800109d0:	0a8080e7          	jalr	168(ra) # 80005a74 <_ZN4core10intrinsics19copy_nonoverlapping17h725faea97d1685c1E>
    800109d4:	a009                	j	800109d6 <_ZN4core3ptr4read17h46256d3fd64402e3E+0x24>
        tmp.assume_init()
    800109d6:	6562                	ld	a0,24(sp)
    800109d8:	f82a                	sd	a0,48(sp)
    800109da:	fc2a                	sd	a0,56(sp)
    800109dc:	e42a                	sd	a0,8(sp)
    800109de:	a009                	j	800109e0 <_ZN4core3ptr4read17h46256d3fd64402e3E+0x2e>
}
    800109e0:	6522                	ld	a0,8(sp)
    800109e2:	60a6                	ld	ra,72(sp)
    800109e4:	6161                	addi	sp,sp,80
    800109e6:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h5f35d1a17a2b93c1E:

00000000800109e8 <_ZN4core3ptr4read17h5f35d1a17a2b93c1E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    800109e8:	715d                	addi	sp,sp,-80
    800109ea:	e486                	sd	ra,72(sp)
    800109ec:	f02a                	sd	a0,32(sp)
    800109ee:	75a2                	ld	a1,40(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    800109f0:	ec2e                	sd	a1,24(sp)
    800109f2:	e82a                	sd	a0,16(sp)
    800109f4:	a009                	j	800109f6 <_ZN4core3ptr4read17h5f35d1a17a2b93c1E+0xe>
    800109f6:	0828                	addi	a0,sp,24
    800109f8:	e0aa                	sd	a0,64(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    800109fa:	e42a                	sd	a0,8(sp)
    800109fc:	a009                	j	800109fe <_ZN4core3ptr4read17h5f35d1a17a2b93c1E+0x16>
    800109fe:	4605                	li	a2,1
    80010a00:	6542                	ld	a0,16(sp)
    80010a02:	65a2                	ld	a1,8(sp)
    80010a04:	ffff5097          	auipc	ra,0xffff5
    80010a08:	0fe080e7          	jalr	254(ra) # 80005b02 <_ZN4core10intrinsics19copy_nonoverlapping17hac225dd597e2d360E>
    80010a0c:	a009                	j	80010a0e <_ZN4core3ptr4read17h5f35d1a17a2b93c1E+0x26>
        tmp.assume_init()
    80010a0e:	6562                	ld	a0,24(sp)
    80010a10:	f82a                	sd	a0,48(sp)
    80010a12:	fc2a                	sd	a0,56(sp)
    80010a14:	e02a                	sd	a0,0(sp)
    80010a16:	a009                	j	80010a18 <_ZN4core3ptr4read17h5f35d1a17a2b93c1E+0x30>
}
    80010a18:	6502                	ld	a0,0(sp)
    80010a1a:	60a6                	ld	ra,72(sp)
    80010a1c:	6161                	addi	sp,sp,80
    80010a1e:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h89a5fabfdcdd4445E:

0000000080010a20 <_ZN4core3ptr4read17h89a5fabfdcdd4445E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010a20:	7139                	addi	sp,sp,-64
    80010a22:	fc06                	sd	ra,56(sp)
    80010a24:	f02a                	sd	a0,32(sp)
    80010a26:	02d10583          	lb	a1,45(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010a2a:	00b10fa3          	sb	a1,31(sp)
    80010a2e:	e82a                	sd	a0,16(sp)
    80010a30:	a009                	j	80010a32 <_ZN4core3ptr4read17h89a5fabfdcdd4445E+0x12>
    80010a32:	01f10513          	addi	a0,sp,31
    80010a36:	f82a                	sd	a0,48(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010a38:	a009                	j	80010a3a <_ZN4core3ptr4read17h89a5fabfdcdd4445E+0x1a>
    80010a3a:	01f10593          	addi	a1,sp,31
    80010a3e:	4605                	li	a2,1
    80010a40:	6542                	ld	a0,16(sp)
    80010a42:	00010097          	auipc	ra,0x10
    80010a46:	f08080e7          	jalr	-248(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    80010a4a:	a009                	j	80010a4c <_ZN4core3ptr4read17h89a5fabfdcdd4445E+0x2c>
        tmp.assume_init()
    80010a4c:	01f14503          	lbu	a0,31(sp)
    80010a50:	02a10723          	sb	a0,46(sp)
    80010a54:	02a107a3          	sb	a0,47(sp)
    80010a58:	e42a                	sd	a0,8(sp)
    80010a5a:	a009                	j	80010a5c <_ZN4core3ptr4read17h89a5fabfdcdd4445E+0x3c>
}
    80010a5c:	6522                	ld	a0,8(sp)
    80010a5e:	70e2                	ld	ra,56(sp)
    80010a60:	6121                	addi	sp,sp,64
    80010a62:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h903924f4ce365fe2E:

0000000080010a64 <_ZN4core3ptr4read17h903924f4ce365fe2E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010a64:	7139                	addi	sp,sp,-64
    80010a66:	fc06                	sd	ra,56(sp)
    80010a68:	f02a                	sd	a0,32(sp)
    80010a6a:	02d10583          	lb	a1,45(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010a6e:	00b10fa3          	sb	a1,31(sp)
    80010a72:	e82a                	sd	a0,16(sp)
    80010a74:	a009                	j	80010a76 <_ZN4core3ptr4read17h903924f4ce365fe2E+0x12>
    80010a76:	01f10513          	addi	a0,sp,31
    80010a7a:	f82a                	sd	a0,48(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010a7c:	a009                	j	80010a7e <_ZN4core3ptr4read17h903924f4ce365fe2E+0x1a>
    80010a7e:	01f10593          	addi	a1,sp,31
    80010a82:	4605                	li	a2,1
    80010a84:	6542                	ld	a0,16(sp)
    80010a86:	ffff5097          	auipc	ra,0xffff5
    80010a8a:	0e2080e7          	jalr	226(ra) # 80005b68 <_ZN4core10intrinsics19copy_nonoverlapping17hbea39e0f916c166dE>
    80010a8e:	a009                	j	80010a90 <_ZN4core3ptr4read17h903924f4ce365fe2E+0x2c>
        tmp.assume_init()
    80010a90:	01f14503          	lbu	a0,31(sp)
    80010a94:	02a10723          	sb	a0,46(sp)
    80010a98:	00157593          	andi	a1,a0,1
    80010a9c:	02b107a3          	sb	a1,47(sp)
    80010aa0:	e42a                	sd	a0,8(sp)
    80010aa2:	a009                	j	80010aa4 <_ZN4core3ptr4read17h903924f4ce365fe2E+0x40>
}
    80010aa4:	6522                	ld	a0,8(sp)
    80010aa6:	8905                	andi	a0,a0,1
    80010aa8:	70e2                	ld	ra,56(sp)
    80010aaa:	6121                	addi	sp,sp,64
    80010aac:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h99649a1862dc058cE:

0000000080010aae <_ZN4core3ptr4read17h99649a1862dc058cE>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010aae:	7159                	addi	sp,sp,-112
    80010ab0:	f486                	sd	ra,104(sp)
    80010ab2:	f42a                	sd	a0,40(sp)
    80010ab4:	75c2                	ld	a1,48(sp)
    80010ab6:	7662                	ld	a2,56(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010ab8:	ec2e                	sd	a1,24(sp)
    80010aba:	f032                	sd	a2,32(sp)
    80010abc:	e82a                	sd	a0,16(sp)
    80010abe:	a009                	j	80010ac0 <_ZN4core3ptr4read17h99649a1862dc058cE+0x12>
    80010ac0:	0828                	addi	a0,sp,24
    80010ac2:	f0aa                	sd	a0,96(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010ac4:	a009                	j	80010ac6 <_ZN4core3ptr4read17h99649a1862dc058cE+0x18>
    80010ac6:	082c                	addi	a1,sp,24
    80010ac8:	4605                	li	a2,1
    80010aca:	6542                	ld	a0,16(sp)
    80010acc:	ffff5097          	auipc	ra,0xffff5
    80010ad0:	f64080e7          	jalr	-156(ra) # 80005a30 <_ZN4core10intrinsics19copy_nonoverlapping17h6a4318f11b67d4f7E>
    80010ad4:	a009                	j	80010ad6 <_ZN4core3ptr4read17h99649a1862dc058cE+0x28>
        tmp.assume_init()
    80010ad6:	6562                	ld	a0,24(sp)
    80010ad8:	7582                	ld	a1,32(sp)
    80010ada:	e0aa                	sd	a0,64(sp)
    80010adc:	e4ae                	sd	a1,72(sp)
    80010ade:	e8aa                	sd	a0,80(sp)
    80010ae0:	ecae                	sd	a1,88(sp)
    80010ae2:	e42a                	sd	a0,8(sp)
    80010ae4:	e02e                	sd	a1,0(sp)
    80010ae6:	a009                	j	80010ae8 <_ZN4core3ptr4read17h99649a1862dc058cE+0x3a>
}
    80010ae8:	6522                	ld	a0,8(sp)
    80010aea:	6582                	ld	a1,0(sp)
    80010aec:	70a6                	ld	ra,104(sp)
    80010aee:	6165                	addi	sp,sp,112
    80010af0:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h9c28f54bc51d0888E:

0000000080010af2 <_ZN4core3ptr4read17h9c28f54bc51d0888E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010af2:	7139                	addi	sp,sp,-64
    80010af4:	fc06                	sd	ra,56(sp)
    80010af6:	ec2a                	sd	a0,24(sp)
    80010af8:	5592                	lw	a1,36(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010afa:	ca2e                	sw	a1,20(sp)
    80010afc:	e42a                	sd	a0,8(sp)
    80010afe:	a009                	j	80010b00 <_ZN4core3ptr4read17h9c28f54bc51d0888E+0xe>
    80010b00:	0848                	addi	a0,sp,20
    80010b02:	f82a                	sd	a0,48(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010b04:	a009                	j	80010b06 <_ZN4core3ptr4read17h9c28f54bc51d0888E+0x14>
    80010b06:	084c                	addi	a1,sp,20
    80010b08:	4605                	li	a2,1
    80010b0a:	6522                	ld	a0,8(sp)
    80010b0c:	ffff5097          	auipc	ra,0xffff5
    80010b10:	fd4080e7          	jalr	-44(ra) # 80005ae0 <_ZN4core10intrinsics19copy_nonoverlapping17h977eb2abcd65823aE>
    80010b14:	a009                	j	80010b16 <_ZN4core3ptr4read17h9c28f54bc51d0888E+0x24>
        tmp.assume_init()
    80010b16:	01416503          	lwu	a0,20(sp)
    80010b1a:	d42a                	sw	a0,40(sp)
    80010b1c:	d62a                	sw	a0,44(sp)
    80010b1e:	e02a                	sd	a0,0(sp)
    80010b20:	a009                	j	80010b22 <_ZN4core3ptr4read17h9c28f54bc51d0888E+0x30>
}
    80010b22:	6502                	ld	a0,0(sp)
    80010b24:	70e2                	ld	ra,56(sp)
    80010b26:	6121                	addi	sp,sp,64
    80010b28:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17hb4af9e96b19a35dcE:

0000000080010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010b2a:	7139                	addi	sp,sp,-64
    80010b2c:	fc06                	sd	ra,56(sp)
    80010b2e:	f02a                	sd	a0,32(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010b30:	e82a                	sd	a0,16(sp)
    80010b32:	a009                	j	80010b34 <_ZN4core3ptr4read17hb4af9e96b19a35dcE+0xa>
    80010b34:	0828                	addi	a0,sp,24
    80010b36:	f82a                	sd	a0,48(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010b38:	e42a                	sd	a0,8(sp)
    80010b3a:	a009                	j	80010b3c <_ZN4core3ptr4read17hb4af9e96b19a35dcE+0x12>
    80010b3c:	4605                	li	a2,1
    80010b3e:	6542                	ld	a0,16(sp)
    80010b40:	65a2                	ld	a1,8(sp)
    80010b42:	ffff5097          	auipc	ra,0xffff5
    80010b46:	f54080e7          	jalr	-172(ra) # 80005a96 <_ZN4core10intrinsics19copy_nonoverlapping17h79862fcc9c5f6dfeE>
    80010b4a:	a009                	j	80010b4c <_ZN4core3ptr4read17hb4af9e96b19a35dcE+0x22>
        tmp.assume_init()
    80010b4c:	a009                	j	80010b4e <_ZN4core3ptr4read17hb4af9e96b19a35dcE+0x24>
}
    80010b4e:	70e2                	ld	ra,56(sp)
    80010b50:	6121                	addi	sp,sp,64
    80010b52:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17hc9a1ca5f3f1dda2cE:

0000000080010b54 <_ZN4core3ptr4read17hc9a1ca5f3f1dda2cE>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010b54:	7151                	addi	sp,sp,-240
    80010b56:	f586                	sd	ra,232(sp)
    80010b58:	ed2e                	sd	a1,152(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010b5a:	e82e                	sd	a1,16(sp)
    80010b5c:	e42a                	sd	a0,8(sp)
    80010b5e:	a009                	j	80010b60 <_ZN4core3ptr4read17hc9a1ca5f3f1dda2cE+0xc>
    80010b60:	0828                	addi	a0,sp,24
    80010b62:	f1aa                	sd	a0,224(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010b64:	e02a                	sd	a0,0(sp)
    80010b66:	a009                	j	80010b68 <_ZN4core3ptr4read17hc9a1ca5f3f1dda2cE+0x14>
    80010b68:	4605                	li	a2,1
    80010b6a:	6542                	ld	a0,16(sp)
    80010b6c:	6582                	ld	a1,0(sp)
    80010b6e:	ffff5097          	auipc	ra,0xffff5
    80010b72:	ee4080e7          	jalr	-284(ra) # 80005a52 <_ZN4core10intrinsics19copy_nonoverlapping17h70e04db9dbb72338E>
    80010b76:	a009                	j	80010b78 <_ZN4core3ptr4read17hc9a1ca5f3f1dda2cE+0x24>
        tmp.assume_init()
    80010b78:	6546                	ld	a0,80(sp)
    80010b7a:	e92a                	sd	a0,144(sp)
    80010b7c:	65a6                	ld	a1,72(sp)
    80010b7e:	e52e                	sd	a1,136(sp)
    80010b80:	6606                	ld	a2,64(sp)
    80010b82:	e132                	sd	a2,128(sp)
    80010b84:	76e2                	ld	a3,56(sp)
    80010b86:	fcb6                	sd	a3,120(sp)
    80010b88:	7742                	ld	a4,48(sp)
    80010b8a:	f8ba                	sd	a4,112(sp)
    80010b8c:	77a2                	ld	a5,40(sp)
    80010b8e:	f4be                	sd	a5,104(sp)
    80010b90:	7802                	ld	a6,32(sp)
    80010b92:	f0c2                	sd	a6,96(sp)
    80010b94:	68e2                	ld	a7,24(sp)
    80010b96:	ecc6                	sd	a7,88(sp)
    pub const unsafe fn assume_init(self) -> T {
        // SAFETY: the caller must guarantee that `self` is initialized.
        // This also means that `self` must be a `value` variant.
        unsafe {
            intrinsics::assert_inhabited::<T>();
            ManuallyDrop::into_inner(self.value)
    80010b98:	f146                	sd	a7,160(sp)
    80010b9a:	f542                	sd	a6,168(sp)
    80010b9c:	f93e                	sd	a5,176(sp)
    80010b9e:	fd3a                	sd	a4,184(sp)
    80010ba0:	e1b6                	sd	a3,192(sp)
    80010ba2:	e5b2                	sd	a2,200(sp)
    80010ba4:	e9ae                	sd	a1,208(sp)
    80010ba6:	edaa                	sd	a0,216(sp)
    80010ba8:	110c                	addi	a1,sp,160
    80010baa:	04000613          	li	a2,64
    80010bae:	6522                	ld	a0,8(sp)
    80010bb0:	00013097          	auipc	ra,0x13
    80010bb4:	cb0080e7          	jalr	-848(ra) # 80023860 <memcpy>
    80010bb8:	a009                	j	80010bba <_ZN4core3ptr4read17hc9a1ca5f3f1dda2cE+0x66>
}
    80010bba:	70ae                	ld	ra,232(sp)
    80010bbc:	616d                	addi	sp,sp,240
    80010bbe:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17hd61826cda6acc818E:

0000000080010bc0 <_ZN4core3ptr4read17hd61826cda6acc818E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010bc0:	715d                	addi	sp,sp,-80
    80010bc2:	e486                	sd	ra,72(sp)
    80010bc4:	f02a                	sd	a0,32(sp)
    }
    80010bc6:	75a2                	ld	a1,40(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010bc8:	ec2e                	sd	a1,24(sp)
    80010bca:	e82a                	sd	a0,16(sp)
    80010bcc:	a009                	j	80010bce <_ZN4core3ptr4read17hd61826cda6acc818E+0xe>
    80010bce:	0828                	addi	a0,sp,24
    80010bd0:	e0aa                	sd	a0,64(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010bd2:	e42a                	sd	a0,8(sp)
    80010bd4:	a009                	j	80010bd6 <_ZN4core3ptr4read17hd61826cda6acc818E+0x16>
    80010bd6:	4605                	li	a2,1
    80010bd8:	6542                	ld	a0,16(sp)
    80010bda:	65a2                	ld	a1,8(sp)
    80010bdc:	ffff5097          	auipc	ra,0xffff5
    80010be0:	f6a080e7          	jalr	-150(ra) # 80005b46 <_ZN4core10intrinsics19copy_nonoverlapping17hb8a7ef6ec1e77e87E>
    80010be4:	a009                	j	80010be6 <_ZN4core3ptr4read17hd61826cda6acc818E+0x26>
        tmp.assume_init()
    80010be6:	6562                	ld	a0,24(sp)
    80010be8:	f82a                	sd	a0,48(sp)
    80010bea:	fc2a                	sd	a0,56(sp)
    80010bec:	e02a                	sd	a0,0(sp)
    80010bee:	a009                	j	80010bf0 <_ZN4core3ptr4read17hd61826cda6acc818E+0x30>
}
    80010bf0:	6502                	ld	a0,0(sp)
    80010bf2:	60a6                	ld	ra,72(sp)
    80010bf4:	6161                	addi	sp,sp,80
    80010bf6:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17he1a411b49bb4caa7E:

0000000080010bf8 <_ZN4core3ptr4read17he1a411b49bb4caa7E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80010bf8:	7139                	addi	sp,sp,-64
    80010bfa:	fc06                	sd	ra,56(sp)
    80010bfc:	f02a                	sd	a0,32(sp)
    80010bfe:	02a11583          	lh	a1,42(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    80010c02:	00b11f23          	sh	a1,30(sp)
    80010c06:	e82a                	sd	a0,16(sp)
    80010c08:	a009                	j	80010c0a <_ZN4core3ptr4read17he1a411b49bb4caa7E+0x12>
    80010c0a:	01e10513          	addi	a0,sp,30
    80010c0e:	f82a                	sd	a0,48(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80010c10:	a009                	j	80010c12 <_ZN4core3ptr4read17he1a411b49bb4caa7E+0x1a>
    80010c12:	01e10593          	addi	a1,sp,30
    80010c16:	4605                	li	a2,1
    80010c18:	6542                	ld	a0,16(sp)
    80010c1a:	ffff5097          	auipc	ra,0xffff5
    80010c1e:	df4080e7          	jalr	-524(ra) # 80005a0e <_ZN4core10intrinsics19copy_nonoverlapping17h1b2cde1854500dacE>
    80010c22:	a009                	j	80010c24 <_ZN4core3ptr4read17he1a411b49bb4caa7E+0x2c>
        tmp.assume_init()
    80010c24:	01e15503          	lhu	a0,30(sp)
    80010c28:	02a11623          	sh	a0,44(sp)
    80010c2c:	02a11723          	sh	a0,46(sp)
    80010c30:	e42a                	sd	a0,8(sp)
    80010c32:	a009                	j	80010c34 <_ZN4core3ptr4read17he1a411b49bb4caa7E+0x3c>
}
    80010c34:	6522                	ld	a0,8(sp)
    80010c36:	70e2                	ld	ra,56(sp)
    80010c38:	6121                	addi	sp,sp,64
    80010c3a:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h0fc136be3ebb9f0dE:

0000000080010c3c <_ZN4core3ptr5write17h0fc136be3ebb9f0dE>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010c3c:	1141                	addi	sp,sp,-16
    80010c3e:	e02e                	sd	a1,0(sp)
    80010c40:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010c42:	e10c                	sd	a1,0(a0)
    80010c44:	a009                	j	80010c46 <_ZN4core3ptr5write17h0fc136be3ebb9f0dE+0xa>
}
    80010c46:	0141                	addi	sp,sp,16
    80010c48:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h18c7b9a46cdde9e1E:

0000000080010c4a <_ZN4core3ptr5write17h18c7b9a46cdde9e1E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010c4a:	1141                	addi	sp,sp,-16
    80010c4c:	862e                	mv	a2,a1
    80010c4e:	00b103a3          	sb	a1,7(sp)
    80010c52:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010c54:	00b50023          	sb	a1,0(a0)
    80010c58:	a009                	j	80010c5a <_ZN4core3ptr5write17h18c7b9a46cdde9e1E+0x10>
}
    80010c5a:	0141                	addi	sp,sp,16
    80010c5c:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h3030b73b862e26f1E:

0000000080010c5e <_ZN4core3ptr5write17h3030b73b862e26f1E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010c5e:	1141                	addi	sp,sp,-16
    80010c60:	e406                	sd	ra,8(sp)
    80010c62:	e02a                	sd	a0,0(sp)
    80010c64:	04000613          	li	a2,64
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010c68:	00013097          	auipc	ra,0x13
    80010c6c:	bf8080e7          	jalr	-1032(ra) # 80023860 <memcpy>
    80010c70:	a009                	j	80010c72 <_ZN4core3ptr5write17h3030b73b862e26f1E+0x14>
}
    80010c72:	60a2                	ld	ra,8(sp)
    80010c74:	0141                	addi	sp,sp,16
    80010c76:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h465b0371b3cd1235E:

0000000080010c78 <_ZN4core3ptr5write17h465b0371b3cd1235E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010c78:	1141                	addi	sp,sp,-16
    80010c7a:	e02e                	sd	a1,0(sp)
    80010c7c:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010c7e:	e10c                	sd	a1,0(a0)
    80010c80:	a009                	j	80010c82 <_ZN4core3ptr5write17h465b0371b3cd1235E+0xa>
}
    80010c82:	0141                	addi	sp,sp,16
    80010c84:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h7121962e424d368bE:

0000000080010c86 <_ZN4core3ptr5write17h7121962e424d368bE>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010c86:	1141                	addi	sp,sp,-16
    80010c88:	862e                	mv	a2,a1
    80010c8a:	00b103a3          	sb	a1,7(sp)
    80010c8e:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010c90:	00b50023          	sb	a1,0(a0)
    80010c94:	a009                	j	80010c96 <_ZN4core3ptr5write17h7121962e424d368bE+0x10>
}
    80010c96:	0141                	addi	sp,sp,16
    80010c98:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h928abbb610d264f1E:

0000000080010c9a <_ZN4core3ptr5write17h928abbb610d264f1E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010c9a:	1101                	addi	sp,sp,-32
    80010c9c:	e42e                	sd	a1,8(sp)
    80010c9e:	e832                	sd	a2,16(sp)
    80010ca0:	ec2a                	sd	a0,24(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010ca2:	e510                	sd	a2,8(a0)
    80010ca4:	e10c                	sd	a1,0(a0)
    80010ca6:	a009                	j	80010ca8 <_ZN4core3ptr5write17h928abbb610d264f1E+0xe>
}
    80010ca8:	6105                	addi	sp,sp,32
    80010caa:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h9ef81f9492ed6dceE:

0000000080010cac <_ZN4core3ptr5write17h9ef81f9492ed6dceE>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010cac:	1141                	addi	sp,sp,-16
    80010cae:	862e                	mv	a2,a1
    80010cb0:	c22e                	sw	a1,4(sp)
    80010cb2:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010cb4:	c10c                	sw	a1,0(a0)
    80010cb6:	a009                	j	80010cb8 <_ZN4core3ptr5write17h9ef81f9492ed6dceE+0xc>
}
    80010cb8:	0141                	addi	sp,sp,16
    80010cba:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17haea775929a97340fE:

0000000080010cbc <_ZN4core3ptr5write17haea775929a97340fE>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010cbc:	1141                	addi	sp,sp,-16
    80010cbe:	e02e                	sd	a1,0(sp)
    80010cc0:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010cc2:	e10c                	sd	a1,0(a0)
    80010cc4:	a009                	j	80010cc6 <_ZN4core3ptr5write17haea775929a97340fE+0xa>
}
    80010cc6:	0141                	addi	sp,sp,16
    80010cc8:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17haf544b67d1859bc5E:

0000000080010cca <_ZN4core3ptr5write17haf544b67d1859bc5E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010cca:	1101                	addi	sp,sp,-32
    80010ccc:	e42e                	sd	a1,8(sp)
    80010cce:	e832                	sd	a2,16(sp)
    80010cd0:	ec2a                	sd	a0,24(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010cd2:	e510                	sd	a2,8(a0)
    80010cd4:	e10c                	sd	a1,0(a0)
    80010cd6:	a009                	j	80010cd8 <_ZN4core3ptr5write17haf544b67d1859bc5E+0xe>
}
    80010cd8:	6105                	addi	sp,sp,32
    80010cda:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17hf8ffa16aa7c859fcE:

0000000080010cdc <_ZN4core3ptr5write17hf8ffa16aa7c859fcE>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80010cdc:	1141                	addi	sp,sp,-16
    80010cde:	862e                	mv	a2,a1
    80010ce0:	00b11323          	sh	a1,6(sp)
    80010ce4:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80010ce6:	00b51023          	sh	a1,0(a0)
    80010cea:	a009                	j	80010cec <_ZN4core3ptr5write17hf8ffa16aa7c859fcE+0x10>
}
    80010cec:	0141                	addi	sp,sp,16
    80010cee:	8082                	ret

Disassembly of section .text._ZN6kernel6printf6_print17hdbec08f95aaab1aaE:

0000000080010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>:

use crate::console;
use crate::lock::spinlock::Spinlock;
use crate::shutdown::*;

pub fn _print(args: fmt::Arguments) {
    80010cf0:	711d                	addi	sp,sp,-96
    use fmt::Write;
    let mut uart = console::UART.acquire();
    80010cf2:	ec86                	sd	ra,88(sp)

0000000080010cf4 <.LBB0_6>:
    80010cf4:	00025597          	auipc	a1,0x25
    80010cf8:	14458593          	addi	a1,a1,324 # 80035e38 <_ZN6kernel7console4uart4UART17hc32d6c0da573df73E>
    80010cfc:	ec2a                	sd	a0,24(sp)
    80010cfe:	852e                	mv	a0,a1
    80010d00:	ffff2097          	auipc	ra,0xffff2
    80010d04:	af2080e7          	jalr	-1294(ra) # 800027f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E>
    80010d08:	f02a                	sd	a0,32(sp)
    80010d0a:	a009                	j	80010d0c <.LBB0_6+0x18>
    80010d0c:	1008                	addi	a0,sp,32
    uart.write_fmt(args).unwrap();
    80010d0e:	ffff3097          	auipc	ra,0xffff3
    80010d12:	c4e080e7          	jalr	-946(ra) # 8000395c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E>
    80010d16:	e82a                	sd	a0,16(sp)
    80010d18:	a009                	j	80010d1a <.LBB0_6+0x26>
    80010d1a:	6562                	ld	a0,24(sp)
    80010d1c:	750c                	ld	a1,40(a0)
    80010d1e:	e8ae                	sd	a1,80(sp)
    80010d20:	710c                	ld	a1,32(a0)
    80010d22:	e4ae                	sd	a1,72(sp)
    80010d24:	6d0c                	ld	a1,24(a0)
    80010d26:	e0ae                	sd	a1,64(sp)
    80010d28:	690c                	ld	a1,16(a0)
    80010d2a:	fc2e                	sd	a1,56(sp)
    80010d2c:	650c                	ld	a1,8(a0)
    80010d2e:	f82e                	sd	a1,48(sp)
    80010d30:	610c                	ld	a1,0(a0)
    80010d32:	f42e                	sd	a1,40(sp)
    80010d34:	102c                	addi	a1,sp,40
    80010d36:	6542                	ld	a0,16(sp)
    80010d38:	ffffb097          	auipc	ra,0xffffb
    80010d3c:	04e080e7          	jalr	78(ra) # 8000bd86 <_ZN4core3fmt5Write9write_fmt17h49754120469365e6E>
    80010d40:	e42a                	sd	a0,8(sp)
    80010d42:	a009                	j	80010d44 <.LBB0_7>

0000000080010d44 <.LBB0_7>:
    80010d44:	00016597          	auipc	a1,0x16
    80010d48:	fbc58593          	addi	a1,a1,-68 # 80026d00 <.L__unnamed_1>
    80010d4c:	6522                	ld	a0,8(sp)
    80010d4e:	ffffc097          	auipc	ra,0xffffc
    80010d52:	fe2080e7          	jalr	-30(ra) # 8000cd30 <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7313a9aabc67527eE>
    80010d56:	a009                	j	80010d58 <.LBB0_7+0x14>
    drop(uart);
    80010d58:	7502                	ld	a0,32(sp)
    80010d5a:	ffffd097          	auipc	ra,0xffffd
    80010d5e:	c98080e7          	jalr	-872(ra) # 8000d9f2 <_ZN4core3mem4drop17hc7855bb71645f11bE>
    80010d62:	a009                	j	80010d64 <.LBB0_7+0x20>
}
    80010d64:	60e6                	ld	ra,88(sp)
    80010d66:	6125                	addi	sp,sp,96
    80010d68:	8082                	ret

Disassembly of section .text.rust_begin_unwind:

0000000080010d6a <rust_begin_unwind>:
        $crate::printf::_print(format_args!(concat!($fmt, "\n") $(,$($arg)+)?));
    }
}

#[panic_handler]
fn panic(info: &PanicInfo<'_>) -> ! {
    80010d6a:	7159                	addi	sp,sp,-112
    80010d6c:	f486                	sd	ra,104(sp)
    80010d6e:	e82a                	sd	a0,16(sp)
    80010d70:	0808                	addi	a0,sp,16
    println!("\x1b[1;31mpanic: '{}'\x1b[0m", info);
    80010d72:	ecaa                	sd	a0,88(sp)
    80010d74:	f0aa                	sd	a0,96(sp)

0000000080010d76 <.LBB1_6>:
    80010d76:	00000597          	auipc	a1,0x0
    80010d7a:	05e58593          	addi	a1,a1,94 # 80010dd4 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf02b9f2e1909ec9eE>
    80010d7e:	ffff7097          	auipc	ra,0xffff7
    80010d82:	0da080e7          	jalr	218(ra) # 80007e58 <_ZN4core3fmt10ArgumentV13new17hb87ed6827629affbE>
    80010d86:	e42a                	sd	a0,8(sp)
    80010d88:	e02e                	sd	a1,0(sp)
    80010d8a:	a009                	j	80010d8c <.LBB1_6+0x16>
    80010d8c:	6522                	ld	a0,8(sp)
    80010d8e:	e4aa                	sd	a0,72(sp)
    80010d90:	6582                	ld	a1,0(sp)
    80010d92:	e8ae                	sd	a1,80(sp)

0000000080010d94 <.LBB1_7>:
    80010d94:	00016597          	auipc	a1,0x16
    80010d98:	f9c58593          	addi	a1,a1,-100 # 80026d30 <.L__unnamed_2>
    80010d9c:	0828                	addi	a0,sp,24
    80010d9e:	4609                	li	a2,2
    80010da0:	00b4                	addi	a3,sp,72
    80010da2:	4705                	li	a4,1
    80010da4:	ffff5097          	auipc	ra,0xffff5
    80010da8:	980080e7          	jalr	-1664(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80010dac:	a009                	j	80010dae <.LBB1_7+0x1a>
    80010dae:	0828                	addi	a0,sp,24
    80010db0:	00000097          	auipc	ra,0x0
    80010db4:	f40080e7          	jalr	-192(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80010db8:	a009                	j	80010dba <.LBB1_7+0x26>
    shutdown();
    80010dba:	00001097          	auipc	ra,0x1
    80010dbe:	c4e080e7          	jalr	-946(ra) # 80011a08 <_ZN6kernel8shutdown8shutdown17hc1a93410168a66ddE>
    80010dc2:	a009                	j	80010dc4 <.LBB1_7+0x30>
    loop {}
    80010dc4:	a009                	j	80010dc6 <.LBB1_7+0x32>
    80010dc6:	a001                	j	80010dc6 <.LBB1_7+0x32>

Disassembly of section .text._ZN6kernel8register7mhartid4read17h65f410e0dc68aa3cE:

0000000080010dc8 <_ZN6kernel8register7mhartid4read17h65f410e0dc68aa3cE>:
// which hart (core) is this?
#[inline]
pub unsafe fn read() -> usize{
    80010dc8:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, mhartid":"=r"(ret):::"volatile");
    80010dca:	f1402573          	csrr	a0,mhartid
    80010dce:	e42a                	sd	a0,8(sp)
    ret
    80010dd0:	0141                	addi	sp,sp,16
    80010dd2:	8082                	ret

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf02b9f2e1909ec9eE:

0000000080010dd4 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf02b9f2e1909ec9eE>:
            fn fmt(&self, f: &mut Formatter<'_>) -> Result { $tr::fmt(&**self, f) }
    80010dd4:	1101                	addi	sp,sp,-32
    80010dd6:	ec06                	sd	ra,24(sp)
    80010dd8:	e42a                	sd	a0,8(sp)
    80010dda:	e82e                	sd	a1,16(sp)
    80010ddc:	6108                	ld	a0,0(a0)
    80010dde:	00010097          	auipc	ra,0x10
    80010de2:	df0080e7          	jalr	-528(ra) # 80020bce <_ZN61_$LT$core..panic..PanicInfo$u20$as$u20$core..fmt..Display$GT$3fmt17hb4d6410e4677a5d3E>
    80010de6:	e02a                	sd	a0,0(sp)
    80010de8:	a009                	j	80010dea <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf02b9f2e1909ec9eE+0x16>
    80010dea:	6502                	ld	a0,0(sp)
    80010dec:	60e2                	ld	ra,24(sp)
    80010dee:	6105                	addi	sp,sp,32
    80010df0:	8082                	ret

Disassembly of section .text._ZN6kernel8register6scause4read17h2a44a33e28e010e0E:

0000000080010df2 <_ZN6kernel8register6scause4read17h2a44a33e28e010e0E>:
use bit_field::BitField;
use core::mem::size_of;

// Supervisor Trap Cause
#[inline]
pub unsafe fn read() -> usize {
    80010df2:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, scause":"=r"(ret):::"volatile");
    80010df4:	14202573          	csrr	a0,scause
    80010df8:	e42a                	sd	a0,8(sp)
    ret
}
    80010dfa:	0141                	addi	sp,sp,16
    80010dfc:	8082                	ret

Disassembly of section .text._ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E:

0000000080010dfe <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E>:
    Unknown
}


impl Interrupt{
    pub fn from(nr: usize) -> Self {
    80010dfe:	1101                	addi	sp,sp,-32
    80010e00:	ec2a                	sd	a0,24(sp)
    80010e02:	4581                	li	a1,0
        match nr{
            0 => Interrupt::UserSoft,
    80010e04:	e42a                	sd	a0,8(sp)
    80010e06:	04b50063          	beq	a0,a1,80010e46 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x48>
    80010e0a:	a009                	j	80010e0c <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0xe>
    80010e0c:	4505                	li	a0,1
    80010e0e:	65a2                	ld	a1,8(sp)
    80010e10:	02a58f63          	beq	a1,a0,80010e4e <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x50>
    80010e14:	a009                	j	80010e16 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x18>
    80010e16:	4511                	li	a0,4
    80010e18:	65a2                	ld	a1,8(sp)
    80010e1a:	02a58e63          	beq	a1,a0,80010e56 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x58>
    80010e1e:	a009                	j	80010e20 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x22>
    80010e20:	4515                	li	a0,5
    80010e22:	65a2                	ld	a1,8(sp)
    80010e24:	02a58d63          	beq	a1,a0,80010e5e <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x60>
    80010e28:	a009                	j	80010e2a <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x2c>
    80010e2a:	4521                	li	a0,8
    80010e2c:	65a2                	ld	a1,8(sp)
    80010e2e:	02a58c63          	beq	a1,a0,80010e66 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x68>
    80010e32:	a009                	j	80010e34 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x36>
    80010e34:	4525                	li	a0,9
    80010e36:	65a2                	ld	a1,8(sp)
    80010e38:	02a58b63          	beq	a1,a0,80010e6e <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x70>
    80010e3c:	a009                	j	80010e3e <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x40>
    80010e3e:	4519                	li	a0,6
            1 => Interrupt::SupervisorSoft,
            4 => Interrupt::UserTimer,
            5 => Interrupt::SupervisorTimer,
            8 => Interrupt::UserExternal,
            9 => Interrupt::SupervisorExternal,
            _ => Interrupt::Unknown
    80010e40:	00a10ba3          	sb	a0,23(sp)
        match nr{
    80010e44:	a80d                	j	80010e76 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x78>
    80010e46:	4501                	li	a0,0
            0 => Interrupt::UserSoft,
    80010e48:	00a10ba3          	sb	a0,23(sp)
        match nr{
    80010e4c:	a02d                	j	80010e76 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x78>
    80010e4e:	4505                	li	a0,1
            1 => Interrupt::SupervisorSoft,
    80010e50:	00a10ba3          	sb	a0,23(sp)
        match nr{
    80010e54:	a00d                	j	80010e76 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x78>
    80010e56:	4509                	li	a0,2
            4 => Interrupt::UserTimer,
    80010e58:	00a10ba3          	sb	a0,23(sp)
        match nr{
    80010e5c:	a829                	j	80010e76 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x78>
    80010e5e:	450d                	li	a0,3
            5 => Interrupt::SupervisorTimer,
    80010e60:	00a10ba3          	sb	a0,23(sp)
        match nr{
    80010e64:	a809                	j	80010e76 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x78>
    80010e66:	4511                	li	a0,4
            8 => Interrupt::UserExternal,
    80010e68:	00a10ba3          	sb	a0,23(sp)
        match nr{
    80010e6c:	a029                	j	80010e76 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x78>
    80010e6e:	4515                	li	a0,5
            9 => Interrupt::SupervisorExternal,
    80010e70:	00a10ba3          	sb	a0,23(sp)
        match nr{
    80010e74:	a009                	j	80010e76 <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E+0x78>
        }
    }
    80010e76:	01710503          	lb	a0,23(sp)
    80010e7a:	6105                	addi	sp,sp,32
    80010e7c:	8082                	ret

Disassembly of section .text._ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E:

0000000080010e7e <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E>:
}

impl Exception{
    pub fn from(nr: usize) -> Self {
    80010e7e:	1101                	addi	sp,sp,-32
    80010e80:	ec2a                	sd	a0,24(sp)
    80010e82:	4581                	li	a1,0
        match nr {
            0 => Exception::InstructionMisaligned,
    80010e84:	e42a                	sd	a0,8(sp)
    80010e86:	06b50e63          	beq	a0,a1,80010f02 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x84>
    80010e8a:	a009                	j	80010e8c <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe>
    80010e8c:	4505                	li	a0,1
    80010e8e:	65a2                	ld	a1,8(sp)
    80010e90:	06a58d63          	beq	a1,a0,80010f0a <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x8c>
    80010e94:	a009                	j	80010e96 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x18>
    80010e96:	4509                	li	a0,2
    80010e98:	65a2                	ld	a1,8(sp)
    80010e9a:	06a58c63          	beq	a1,a0,80010f12 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x94>
    80010e9e:	a009                	j	80010ea0 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x22>
    80010ea0:	450d                	li	a0,3
    80010ea2:	65a2                	ld	a1,8(sp)
    80010ea4:	06a58b63          	beq	a1,a0,80010f1a <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x9c>
    80010ea8:	a009                	j	80010eaa <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x2c>
    80010eaa:	4515                	li	a0,5
    80010eac:	65a2                	ld	a1,8(sp)
    80010eae:	06a58a63          	beq	a1,a0,80010f22 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xa4>
    80010eb2:	a009                	j	80010eb4 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x36>
    80010eb4:	4519                	li	a0,6
    80010eb6:	65a2                	ld	a1,8(sp)
    80010eb8:	06a58963          	beq	a1,a0,80010f2a <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xac>
    80010ebc:	a009                	j	80010ebe <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x40>
    80010ebe:	451d                	li	a0,7
    80010ec0:	65a2                	ld	a1,8(sp)
    80010ec2:	06a58863          	beq	a1,a0,80010f32 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xb4>
    80010ec6:	a009                	j	80010ec8 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x4a>
    80010ec8:	4521                	li	a0,8
    80010eca:	65a2                	ld	a1,8(sp)
    80010ecc:	06a58763          	beq	a1,a0,80010f3a <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xbc>
    80010ed0:	a009                	j	80010ed2 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x54>
    80010ed2:	4525                	li	a0,9
    80010ed4:	65a2                	ld	a1,8(sp)
    80010ed6:	06a58663          	beq	a1,a0,80010f42 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xc4>
    80010eda:	a009                	j	80010edc <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x5e>
    80010edc:	4531                	li	a0,12
    80010ede:	65a2                	ld	a1,8(sp)
    80010ee0:	06a58563          	beq	a1,a0,80010f4a <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xcc>
    80010ee4:	a009                	j	80010ee6 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x68>
    80010ee6:	4535                	li	a0,13
    80010ee8:	65a2                	ld	a1,8(sp)
    80010eea:	06a58463          	beq	a1,a0,80010f52 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xd4>
    80010eee:	a009                	j	80010ef0 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x72>
    80010ef0:	453d                	li	a0,15
    80010ef2:	65a2                	ld	a1,8(sp)
    80010ef4:	06a58363          	beq	a1,a0,80010f5a <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xdc>
    80010ef8:	a009                	j	80010efa <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0x7c>
    80010efa:	4531                	li	a0,12
            8 => Exception::UserEnvCall,
            9 => Exception::KernelEnvCall,
            12 => Exception::InstructionPageFault,
            13 => Exception::LoadPageFault,
            15 => Exception::StorePageFault,
            _ => Exception::Unknown
    80010efc:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f00:	a08d                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f02:	4501                	li	a0,0
            0 => Exception::InstructionMisaligned,
    80010f04:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f08:	a8a9                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f0a:	4505                	li	a0,1
            1 => Exception::InstructionFault,
    80010f0c:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f10:	a889                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f12:	4509                	li	a0,2
            2 => Exception::IllegalInstruction,
    80010f14:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f18:	a0a9                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f1a:	450d                	li	a0,3
            3 => Exception::Breakpoint,
    80010f1c:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f20:	a089                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f22:	4511                	li	a0,4
            5 => Exception::LoadFault,
    80010f24:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f28:	a82d                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f2a:	4515                	li	a0,5
            6 => Exception::StoreMisaligned,
    80010f2c:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f30:	a80d                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f32:	4519                	li	a0,6
            7 => Exception::StoreFault,
    80010f34:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f38:	a02d                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f3a:	451d                	li	a0,7
            8 => Exception::UserEnvCall,
    80010f3c:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f40:	a00d                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f42:	4521                	li	a0,8
            9 => Exception::KernelEnvCall,
    80010f44:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f48:	a829                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f4a:	4525                	li	a0,9
            12 => Exception::InstructionPageFault,
    80010f4c:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f50:	a809                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f52:	4529                	li	a0,10
            13 => Exception::LoadPageFault,
    80010f54:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f58:	a029                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
    80010f5a:	452d                	li	a0,11
            15 => Exception::StorePageFault,
    80010f5c:	00a10ba3          	sb	a0,23(sp)
        match nr {
    80010f60:	a009                	j	80010f62 <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E+0xe4>
        }
    }
    80010f62:	01710503          	lb	a0,23(sp)
    80010f66:	6105                	addi	sp,sp,32
    80010f68:	8082                	ret

Disassembly of section .text._ZN6kernel8register6scause6Scause3new17h2dfdd0e7e1fd63beE:

0000000080010f6a <_ZN6kernel8register6scause6Scause3new17h2dfdd0e7e1fd63beE>:

impl Scause{

    // new a Scause Object by usize
    #[inline]
    pub fn new(scause: usize) -> Self{
    80010f6a:	1141                	addi	sp,sp,-16
    80010f6c:	e42a                	sd	a0,8(sp)
        Self{
    80010f6e:	e02a                	sd	a0,0(sp)
            bits: scause
        }
    }
    80010f70:	0141                	addi	sp,sp,16
    80010f72:	8082                	ret

Disassembly of section .text._ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E:

0000000080010f74 <_ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E>:
    pub fn bits(&self) -> usize{
        self.bits
    }

    // Returns the code field
    pub fn code(&self) -> usize{
    80010f74:	7179                	addi	sp,sp,-48
    80010f76:	f02a                	sd	a0,32(sp)
        let bit =  1 << (size_of::<usize>() * 8 -1);
    80010f78:	ec2a                	sd	a0,24(sp)
    80010f7a:	a009                	j	80010f7c <_ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E+0x8>
    80010f7c:	04000513          	li	a0,64
    80010f80:	4581                	li	a1,0
    80010f82:	e82a                	sd	a0,16(sp)
    80010f84:	ed95                	bnez	a1,80010fc0 <.LBB4_8>
    80010f86:	a009                	j	80010f88 <_ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E+0x14>
    80010f88:	6542                	ld	a0,16(sp)
    80010f8a:	fff50593          	addi	a1,a0,-1
    80010f8e:	e42e                	sd	a1,8(sp)
    80010f90:	04b56763          	bltu	a0,a1,80010fde <.LBB4_10>
    80010f94:	a009                	j	80010f96 <_ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E+0x22>
    80010f96:	6522                	ld	a0,8(sp)
    80010f98:	fc057593          	andi	a1,a0,-64
    80010f9c:	4605                	li	a2,1
    80010f9e:	00a61633          	sll	a2,a2,a0
    80010fa2:	4681                	li	a3,0
    80010fa4:	e032                	sd	a2,0(sp)
    80010fa6:	04d59b63          	bne	a1,a3,80010ffc <.LBB4_12>
    80010faa:	a009                	j	80010fac <_ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E+0x38>
    80010fac:	6502                	ld	a0,0(sp)
    80010fae:	f42a                	sd	a0,40(sp)
        self.bits & !bit
    80010fb0:	65e2                	ld	a1,24(sp)
    80010fb2:	6190                	ld	a2,0(a1)
    80010fb4:	fff54693          	not	a3,a0
    80010fb8:	00d67533          	and	a0,a2,a3
    }
    80010fbc:	6145                	addi	sp,sp,48
    80010fbe:	8082                	ret

0000000080010fc0 <.LBB4_8>:
        let bit =  1 << (size_of::<usize>() * 8 -1);
    80010fc0:	00016517          	auipc	a0,0x16
    80010fc4:	dc050513          	addi	a0,a0,-576 # 80026d80 <str.0>

0000000080010fc8 <.LBB4_9>:
    80010fc8:	00016617          	auipc	a2,0x16
    80010fcc:	da060613          	addi	a2,a2,-608 # 80026d68 <.L__unnamed_3>
    80010fd0:	02100593          	li	a1,33
    80010fd4:	00010097          	auipc	ra,0x10
    80010fd8:	cf6080e7          	jalr	-778(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010fde <.LBB4_10>:
    80010fde:	00016517          	auipc	a0,0x16
    80010fe2:	de250513          	addi	a0,a0,-542 # 80026dc0 <str.1>

0000000080010fe6 <.LBB4_11>:
    80010fe6:	00016617          	auipc	a2,0x16
    80010fea:	dc260613          	addi	a2,a2,-574 # 80026da8 <.L__unnamed_4>
    80010fee:	02100593          	li	a1,33
    80010ff2:	00010097          	auipc	ra,0x10
    80010ff6:	cd8080e7          	jalr	-808(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080010ffc <.LBB4_12>:
    80010ffc:	00016517          	auipc	a0,0x16
    80011000:	e0450513          	addi	a0,a0,-508 # 80026e00 <str.2>

0000000080011004 <.LBB4_13>:
    80011004:	00016617          	auipc	a2,0x16
    80011008:	de460613          	addi	a2,a2,-540 # 80026de8 <.L__unnamed_5>
    8001100c:	02300593          	li	a1,35
    80011010:	00010097          	auipc	ra,0x10
    80011014:	cba080e7          	jalr	-838(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE:

000000008001101a <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE>:

    // Trap Cause
    #[inline]
    pub fn cause(&self) -> Trap{
    8001101a:	715d                	addi	sp,sp,-80
    8001101c:	e486                	sd	ra,72(sp)
    8001101e:	e0aa                	sd	a0,64(sp)
        if self.is_interrupt() {
    80011020:	f82a                	sd	a0,48(sp)
    80011022:	00000097          	auipc	ra,0x0
    80011026:	080080e7          	jalr	128(ra) # 800110a2 <_ZN6kernel8register6scause6Scause12is_interrupt17h80e37291e6012a3aE>
    8001102a:	f42a                	sd	a0,40(sp)
    8001102c:	a009                	j	8001102e <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x14>
    8001102e:	4501                	li	a0,0
    80011030:	75a2                	ld	a1,40(sp)
    80011032:	00a58a63          	beq	a1,a0,80011046 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x2c>
    80011036:	a009                	j	80011038 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x1e>
            Trap::Interrupt(Interrupt::from(self.code()))
    80011038:	7542                	ld	a0,48(sp)
    8001103a:	00000097          	auipc	ra,0x0
    8001103e:	f3a080e7          	jalr	-198(ra) # 80010f74 <_ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E>
    80011042:	f02a                	sd	a0,32(sp)
    80011044:	a801                	j	80011054 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x3a>
        }else{
            Trap::Exception(Exception::from(self.code()))
    80011046:	7542                	ld	a0,48(sp)
    80011048:	00000097          	auipc	ra,0x0
    8001104c:	f2c080e7          	jalr	-212(ra) # 80010f74 <_ZN6kernel8register6scause6Scause4code17h4fdd73d75837d7f3E>
    80011050:	ec2a                	sd	a0,24(sp)
    80011052:	a00d                	j	80011074 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x5a>
            Trap::Interrupt(Interrupt::from(self.code()))
    80011054:	7502                	ld	a0,32(sp)
    80011056:	00000097          	auipc	ra,0x0
    8001105a:	da8080e7          	jalr	-600(ra) # 80010dfe <_ZN6kernel8register6scause9Interrupt4from17hb6eab54fd065cce5E>
    8001105e:	0ff57513          	zext.b	a0,a0
    80011062:	e82a                	sd	a0,16(sp)
    80011064:	a009                	j	80011066 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x4c>
    80011066:	6542                	ld	a0,16(sp)
    80011068:	02a10ca3          	sb	a0,57(sp)
    8001106c:	4581                	li	a1,0
    8001106e:	02b10c23          	sb	a1,56(sp)
        if self.is_interrupt() {
    80011072:	a00d                	j	80011094 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x7a>
            Trap::Exception(Exception::from(self.code()))
    80011074:	6562                	ld	a0,24(sp)
    80011076:	00000097          	auipc	ra,0x0
    8001107a:	e08080e7          	jalr	-504(ra) # 80010e7e <_ZN6kernel8register6scause9Exception4from17hbd60e412b0f7e253E>
    8001107e:	0ff57513          	zext.b	a0,a0
    80011082:	e42a                	sd	a0,8(sp)
    80011084:	a009                	j	80011086 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x6c>
    80011086:	6522                	ld	a0,8(sp)
    80011088:	02a10ca3          	sb	a0,57(sp)
    8001108c:	4585                	li	a1,1
    8001108e:	02b10c23          	sb	a1,56(sp)
        if self.is_interrupt() {
    80011092:	a009                	j	80011094 <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE+0x7a>
        }
    }
    80011094:	03814503          	lbu	a0,56(sp)
    80011098:	03910583          	lb	a1,57(sp)
    8001109c:	60a6                	ld	ra,72(sp)
    8001109e:	6161                	addi	sp,sp,80
    800110a0:	8082                	ret

Disassembly of section .text._ZN6kernel8register6scause6Scause12is_interrupt17h80e37291e6012a3aE:

00000000800110a2 <_ZN6kernel8register6scause6Scause12is_interrupt17h80e37291e6012a3aE>:


    // Is trap cause an interrupt
    #[inline]
    pub fn is_interrupt(&self) -> bool {
    800110a2:	7179                	addi	sp,sp,-48
    800110a4:	f406                	sd	ra,40(sp)
    800110a6:	f02a                	sd	a0,32(sp)
        self.bits.get_bit(size_of::<usize>()*8 - 1)
    800110a8:	ec2a                	sd	a0,24(sp)
    800110aa:	a009                	j	800110ac <_ZN6kernel8register6scause6Scause12is_interrupt17h80e37291e6012a3aE+0xa>
    800110ac:	04000513          	li	a0,64
    800110b0:	4581                	li	a1,0
    800110b2:	e82a                	sd	a0,16(sp)
    800110b4:	e58d                	bnez	a1,800110de <.LBB6_7>
    800110b6:	a009                	j	800110b8 <_ZN6kernel8register6scause6Scause12is_interrupt17h80e37291e6012a3aE+0x16>
    800110b8:	6542                	ld	a0,16(sp)
    800110ba:	fff50593          	addi	a1,a0,-1
    800110be:	e42e                	sd	a1,8(sp)
    800110c0:	02b56e63          	bltu	a0,a1,800110fc <.LBB6_9>
    800110c4:	a009                	j	800110c6 <_ZN6kernel8register6scause6Scause12is_interrupt17h80e37291e6012a3aE+0x24>
    800110c6:	6562                	ld	a0,24(sp)
    800110c8:	65a2                	ld	a1,8(sp)
    800110ca:	ffff4097          	auipc	ra,0xffff4
    800110ce:	7d8080e7          	jalr	2008(ra) # 800058a2 <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7get_bit17h517b97e33b3f68fcE>
    800110d2:	e02a                	sd	a0,0(sp)
    800110d4:	a009                	j	800110d6 <_ZN6kernel8register6scause6Scause12is_interrupt17h80e37291e6012a3aE+0x34>
    }
    800110d6:	6502                	ld	a0,0(sp)
    800110d8:	70a2                	ld	ra,40(sp)
    800110da:	6145                	addi	sp,sp,48
    800110dc:	8082                	ret

00000000800110de <.LBB6_7>:
        self.bits.get_bit(size_of::<usize>()*8 - 1)
    800110de:	00016517          	auipc	a0,0x16
    800110e2:	ca250513          	addi	a0,a0,-862 # 80026d80 <str.0>

00000000800110e6 <.LBB6_8>:
    800110e6:	00016617          	auipc	a2,0x16
    800110ea:	d4260613          	addi	a2,a2,-702 # 80026e28 <.L__unnamed_6>
    800110ee:	02100593          	li	a1,33
    800110f2:	00010097          	auipc	ra,0x10
    800110f6:	bd8080e7          	jalr	-1064(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800110fc <.LBB6_9>:
    800110fc:	00016517          	auipc	a0,0x16
    80011100:	cc450513          	addi	a0,a0,-828 # 80026dc0 <str.1>

0000000080011104 <.LBB6_10>:
    80011104:	00016617          	auipc	a2,0x16
    80011108:	d2460613          	addi	a2,a2,-732 # 80026e28 <.L__unnamed_6>
    8001110c:	02100593          	li	a1,33
    80011110:	00010097          	auipc	ra,0x10
    80011114:	bba080e7          	jalr	-1094(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN67_$LT$kernel..register..scause..Trap$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4d2d90fa04f702E:

000000008001111a <_ZN67_$LT$kernel..register..scause..Trap$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4d2d90fa04f702E>:
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
    8001111a:	7175                	addi	sp,sp,-144
    8001111c:	e506                	sd	ra,136(sp)
    8001111e:	f4aa                	sd	a0,104(sp)
    80011120:	f8ae                	sd	a1,112(sp)
    80011122:	f02a                	sd	a0,32(sp)
    80011124:	00054503          	lbu	a0,0(a0)
    80011128:	8905                	andi	a0,a0,1
    8001112a:	4601                	li	a2,0
    8001112c:	e82e                	sd	a1,16(sp)
    8001112e:	02c50563          	beq	a0,a2,80011158 <.LBB7_12+0x1e>
    80011132:	a009                	j	80011134 <_ZN67_$LT$kernel..register..scause..Trap$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4d2d90fa04f702E+0x1a>
    Exception(Exception),
    80011134:	7502                	ld	a0,32(sp)
    80011136:	0505                	addi	a0,a0,1
    80011138:	fcaa                	sd	a0,120(sp)

000000008001113a <.LBB7_12>:
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
    8001113a:	00016617          	auipc	a2,0x16
    8001113e:	d0660613          	addi	a2,a2,-762 # 80026e40 <.L__unnamed_7>
    80011142:	00ac                	addi	a1,sp,72
    80011144:	46a5                	li	a3,9
    80011146:	e42a                	sd	a0,8(sp)
    80011148:	852e                	mv	a0,a1
    8001114a:	65c2                	ld	a1,16(sp)
    8001114c:	00011097          	auipc	ra,0x11
    80011150:	954080e7          	jalr	-1708(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011154:	a889                	j	800111a6 <.LBB7_14+0x28>
    80011156:	0000                	unimp
    Interrupt(Interrupt),
    80011158:	7502                	ld	a0,32(sp)
    8001115a:	0505                	addi	a0,a0,1
    8001115c:	e12a                	sd	a0,128(sp)

000000008001115e <.LBB7_13>:
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
    8001115e:	00016617          	auipc	a2,0x16
    80011162:	d1260613          	addi	a2,a2,-750 # 80026e70 <.L__unnamed_8>
    80011166:	102c                	addi	a1,sp,40
    80011168:	46a5                	li	a3,9
    8001116a:	e02a                	sd	a0,0(sp)
    8001116c:	852e                	mv	a0,a1
    8001116e:	65c2                	ld	a1,16(sp)
    80011170:	00011097          	auipc	ra,0x11
    80011174:	930080e7          	jalr	-1744(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011178:	a009                	j	8001117a <.LBB7_13+0x1c>
    Interrupt(Interrupt),
    8001117a:	6502                	ld	a0,0(sp)
    8001117c:	e0aa                	sd	a0,64(sp)

000000008001117e <.LBB7_14>:
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
    8001117e:	00016617          	auipc	a2,0x16
    80011182:	d0260613          	addi	a2,a2,-766 # 80026e80 <.L__unnamed_2>
    80011186:	1028                	addi	a0,sp,40
    80011188:	008c                	addi	a1,sp,64
    8001118a:	00010097          	auipc	ra,0x10
    8001118e:	e74080e7          	jalr	-396(ra) # 80020ffe <_ZN4core3fmt8builders10DebugTuple5field17h968d9eaf966503caE>
    80011192:	a009                	j	80011194 <.LBB7_14+0x16>
    80011194:	1028                	addi	a0,sp,40
    80011196:	00010097          	auipc	ra,0x10
    8001119a:	f5c080e7          	jalr	-164(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001119e:	00a10fa3          	sb	a0,31(sp)
    800111a2:	a009                	j	800111a4 <.LBB7_14+0x26>
    800111a4:	a03d                	j	800111d2 <.LBB7_15+0x28>
    Exception(Exception),
    800111a6:	6522                	ld	a0,8(sp)
    800111a8:	f0aa                	sd	a0,96(sp)

00000000800111aa <.LBB7_15>:
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
    800111aa:	00016617          	auipc	a2,0x16
    800111ae:	ca660613          	addi	a2,a2,-858 # 80026e50 <.L__unnamed_1>
    800111b2:	00a8                	addi	a0,sp,72
    800111b4:	108c                	addi	a1,sp,96
    800111b6:	00010097          	auipc	ra,0x10
    800111ba:	e48080e7          	jalr	-440(ra) # 80020ffe <_ZN4core3fmt8builders10DebugTuple5field17h968d9eaf966503caE>
    800111be:	a009                	j	800111c0 <.LBB7_15+0x16>
    800111c0:	00a8                	addi	a0,sp,72
    800111c2:	00010097          	auipc	ra,0x10
    800111c6:	f30080e7          	jalr	-208(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800111ca:	00a10fa3          	sb	a0,31(sp)
    800111ce:	a009                	j	800111d0 <.LBB7_15+0x26>
    800111d0:	a009                	j	800111d2 <.LBB7_15+0x28>
    800111d2:	01f14503          	lbu	a0,31(sp)
    800111d6:	60aa                	ld	ra,136(sp)
    800111d8:	6149                	addi	sp,sp,144
    800111da:	8082                	ret

Disassembly of section .text._ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E:

00000000800111dc <_ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E>:
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
    800111dc:	7115                	addi	sp,sp,-224
    800111de:	ed86                	sd	ra,216(sp)
    800111e0:	e5aa                	sd	a0,200(sp)
    800111e2:	e9ae                	sd	a1,208(sp)
    800111e4:	ec2a                	sd	a0,24(sp)
    800111e6:	00054503          	lbu	a0,0(a0)
    800111ea:	4601                	li	a2,0
    800111ec:	e42e                	sd	a1,8(sp)
    800111ee:	e02a                	sd	a0,0(sp)
    800111f0:	04c50963          	beq	a0,a2,80011242 <.LBB8_31>
    800111f4:	a009                	j	800111f6 <_ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E+0x1a>
    800111f6:	4505                	li	a0,1
    800111f8:	6582                	ld	a1,0(sp)
    800111fa:	06a58963          	beq	a1,a0,8001126c <.LBB8_32>
    800111fe:	a009                	j	80011200 <_ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E+0x24>
    80011200:	4509                	li	a0,2
    80011202:	6582                	ld	a1,0(sp)
    80011204:	08a58963          	beq	a1,a0,80011296 <.LBB8_33>
    80011208:	a009                	j	8001120a <_ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E+0x2e>
    8001120a:	450d                	li	a0,3
    8001120c:	6582                	ld	a1,0(sp)
    8001120e:	0aa58963          	beq	a1,a0,800112c0 <.LBB8_34>
    80011212:	a009                	j	80011214 <_ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E+0x38>
    80011214:	4511                	li	a0,4
    80011216:	6582                	ld	a1,0(sp)
    80011218:	0ca58963          	beq	a1,a0,800112ea <.LBB8_35>
    8001121c:	a009                	j	8001121e <_ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E+0x42>
    8001121e:	4515                	li	a0,5
    80011220:	6582                	ld	a1,0(sp)
    80011222:	0ea58963          	beq	a1,a0,80011314 <.LBB8_36>
    80011226:	a009                	j	80011228 <.LBB8_30>

0000000080011228 <.LBB8_30>:
    80011228:	00016617          	auipc	a2,0x16
    8001122c:	c7860613          	addi	a2,a2,-904 # 80026ea0 <.L__unnamed_9>
    80011230:	1908                	addi	a0,sp,176
    80011232:	469d                	li	a3,7
    80011234:	65a2                	ld	a1,8(sp)
    80011236:	00011097          	auipc	ra,0x11
    8001123a:	86a080e7          	jalr	-1942(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001123e:	a201                	j	8001133e <.LBB8_36+0x2a>
	...

0000000080011242 <.LBB8_31>:
    80011242:	00013617          	auipc	a2,0x13
    80011246:	b0660613          	addi	a2,a2,-1274 # 80023d48 <.L__unnamed_5+0x48>
    8001124a:	1008                	addi	a0,sp,32
    8001124c:	46a1                	li	a3,8
    8001124e:	65a2                	ld	a1,8(sp)
    80011250:	00011097          	auipc	ra,0x11
    80011254:	850080e7          	jalr	-1968(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011258:	a009                	j	8001125a <.LBB8_31+0x18>
    8001125a:	1008                	addi	a0,sp,32
    8001125c:	00010097          	auipc	ra,0x10
    80011260:	e96080e7          	jalr	-362(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80011264:	00a10ba3          	sb	a0,23(sp)
    80011268:	a009                	j	8001126a <.LBB8_31+0x28>
    8001126a:	a0dd                	j	80011350 <.LBB8_36+0x3c>

000000008001126c <.LBB8_32>:
    8001126c:	00016617          	auipc	a2,0x16
    80011270:	c7160613          	addi	a2,a2,-911 # 80026edd <.L__unnamed_11>
    80011274:	1828                	addi	a0,sp,56
    80011276:	46b9                	li	a3,14
    80011278:	65a2                	ld	a1,8(sp)
    8001127a:	00011097          	auipc	ra,0x11
    8001127e:	826080e7          	jalr	-2010(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011282:	a009                	j	80011284 <.LBB8_32+0x18>
    80011284:	1828                	addi	a0,sp,56
    80011286:	00010097          	auipc	ra,0x10
    8001128a:	e6c080e7          	jalr	-404(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001128e:	00a10ba3          	sb	a0,23(sp)
    80011292:	a009                	j	80011294 <.LBB8_32+0x28>
    80011294:	a875                	j	80011350 <.LBB8_36+0x3c>

0000000080011296 <.LBB8_33>:
    80011296:	00016617          	auipc	a2,0x16
    8001129a:	c3e60613          	addi	a2,a2,-962 # 80026ed4 <.L__unnamed_12>
    8001129e:	0888                	addi	a0,sp,80
    800112a0:	46a5                	li	a3,9
    800112a2:	65a2                	ld	a1,8(sp)
    800112a4:	00010097          	auipc	ra,0x10
    800112a8:	7fc080e7          	jalr	2044(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    800112ac:	a009                	j	800112ae <.LBB8_33+0x18>
    800112ae:	0888                	addi	a0,sp,80
    800112b0:	00010097          	auipc	ra,0x10
    800112b4:	e42080e7          	jalr	-446(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800112b8:	00a10ba3          	sb	a0,23(sp)
    800112bc:	a009                	j	800112be <.LBB8_33+0x28>
    800112be:	a849                	j	80011350 <.LBB8_36+0x3c>

00000000800112c0 <.LBB8_34>:
    800112c0:	00016617          	auipc	a2,0x16
    800112c4:	c0560613          	addi	a2,a2,-1019 # 80026ec5 <.L__unnamed_13>
    800112c8:	10a8                	addi	a0,sp,104
    800112ca:	46bd                	li	a3,15
    800112cc:	65a2                	ld	a1,8(sp)
    800112ce:	00010097          	auipc	ra,0x10
    800112d2:	7d2080e7          	jalr	2002(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    800112d6:	a009                	j	800112d8 <.LBB8_34+0x18>
    800112d8:	10a8                	addi	a0,sp,104
    800112da:	00010097          	auipc	ra,0x10
    800112de:	e18080e7          	jalr	-488(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800112e2:	00a10ba3          	sb	a0,23(sp)
    800112e6:	a009                	j	800112e8 <.LBB8_34+0x28>
    800112e8:	a0a5                	j	80011350 <.LBB8_36+0x3c>

00000000800112ea <.LBB8_35>:
    800112ea:	00016617          	auipc	a2,0x16
    800112ee:	bcf60613          	addi	a2,a2,-1073 # 80026eb9 <.L__unnamed_14>
    800112f2:	0108                	addi	a0,sp,128
    800112f4:	46b1                	li	a3,12
    800112f6:	65a2                	ld	a1,8(sp)
    800112f8:	00010097          	auipc	ra,0x10
    800112fc:	7a8080e7          	jalr	1960(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011300:	a009                	j	80011302 <.LBB8_35+0x18>
    80011302:	0108                	addi	a0,sp,128
    80011304:	00010097          	auipc	ra,0x10
    80011308:	dee080e7          	jalr	-530(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001130c:	00a10ba3          	sb	a0,23(sp)
    80011310:	a009                	j	80011312 <.LBB8_35+0x28>
    80011312:	a83d                	j	80011350 <.LBB8_36+0x3c>

0000000080011314 <.LBB8_36>:
    80011314:	00016617          	auipc	a2,0x16
    80011318:	b9360613          	addi	a2,a2,-1133 # 80026ea7 <.L__unnamed_15>
    8001131c:	0928                	addi	a0,sp,152
    8001131e:	46c9                	li	a3,18
    80011320:	65a2                	ld	a1,8(sp)
    80011322:	00010097          	auipc	ra,0x10
    80011326:	77e080e7          	jalr	1918(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001132a:	a009                	j	8001132c <.LBB8_36+0x18>
    8001132c:	0928                	addi	a0,sp,152
    8001132e:	00010097          	auipc	ra,0x10
    80011332:	dc4080e7          	jalr	-572(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80011336:	00a10ba3          	sb	a0,23(sp)
    8001133a:	a009                	j	8001133c <.LBB8_36+0x28>
    8001133c:	a811                	j	80011350 <.LBB8_36+0x3c>
    8001133e:	1908                	addi	a0,sp,176
    80011340:	00010097          	auipc	ra,0x10
    80011344:	db2080e7          	jalr	-590(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80011348:	00a10ba3          	sb	a0,23(sp)
    8001134c:	a009                	j	8001134e <.LBB8_36+0x3a>
    8001134e:	a009                	j	80011350 <.LBB8_36+0x3c>
    80011350:	01714503          	lbu	a0,23(sp)
    80011354:	60ee                	ld	ra,216(sp)
    80011356:	612d                	addi	sp,sp,224
    80011358:	8082                	ret

Disassembly of section .text._ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE:

000000008001135a <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE>:
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
    8001135a:	7149                	addi	sp,sp,-368
    8001135c:	f686                	sd	ra,360(sp)
    8001135e:	eeaa                	sd	a0,344(sp)
    80011360:	f2ae                	sd	a1,352(sp)
    80011362:	ec2a                	sd	a0,24(sp)
    80011364:	00054503          	lbu	a0,0(a0)
    80011368:	4601                	li	a2,0
    8001136a:	e42e                	sd	a1,8(sp)
    8001136c:	e02a                	sd	a0,0(sp)
    8001136e:	08c50763          	beq	a0,a2,800113fc <.LBB9_55>
    80011372:	a009                	j	80011374 <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x1a>
    80011374:	4505                	li	a0,1
    80011376:	6582                	ld	a1,0(sp)
    80011378:	0aa58763          	beq	a1,a0,80011426 <.LBB9_56>
    8001137c:	a009                	j	8001137e <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x24>
    8001137e:	4509                	li	a0,2
    80011380:	6582                	ld	a1,0(sp)
    80011382:	0ca58763          	beq	a1,a0,80011450 <.LBB9_57>
    80011386:	a009                	j	80011388 <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x2e>
    80011388:	450d                	li	a0,3
    8001138a:	6582                	ld	a1,0(sp)
    8001138c:	0ea58763          	beq	a1,a0,8001147a <.LBB9_58>
    80011390:	a009                	j	80011392 <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x38>
    80011392:	4511                	li	a0,4
    80011394:	6582                	ld	a1,0(sp)
    80011396:	10a58763          	beq	a1,a0,800114a4 <.LBB9_59>
    8001139a:	a009                	j	8001139c <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x42>
    8001139c:	4515                	li	a0,5
    8001139e:	6582                	ld	a1,0(sp)
    800113a0:	12a58763          	beq	a1,a0,800114ce <.LBB9_60>
    800113a4:	a009                	j	800113a6 <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x4c>
    800113a6:	4519                	li	a0,6
    800113a8:	6582                	ld	a1,0(sp)
    800113aa:	14a58763          	beq	a1,a0,800114f8 <.LBB9_61>
    800113ae:	a009                	j	800113b0 <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x56>
    800113b0:	451d                	li	a0,7
    800113b2:	6582                	ld	a1,0(sp)
    800113b4:	16a58763          	beq	a1,a0,80011522 <.LBB9_62>
    800113b8:	a009                	j	800113ba <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x60>
    800113ba:	4521                	li	a0,8
    800113bc:	6582                	ld	a1,0(sp)
    800113be:	18a58763          	beq	a1,a0,8001154c <.LBB9_63>
    800113c2:	a009                	j	800113c4 <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x6a>
    800113c4:	4525                	li	a0,9
    800113c6:	6582                	ld	a1,0(sp)
    800113c8:	1aa58763          	beq	a1,a0,80011576 <.LBB9_64>
    800113cc:	a009                	j	800113ce <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x74>
    800113ce:	4529                	li	a0,10
    800113d0:	6582                	ld	a1,0(sp)
    800113d2:	1ca58763          	beq	a1,a0,800115a0 <.LBB9_65>
    800113d6:	a009                	j	800113d8 <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE+0x7e>
    800113d8:	452d                	li	a0,11
    800113da:	6582                	ld	a1,0(sp)
    800113dc:	1ea58763          	beq	a1,a0,800115ca <.LBB9_66>
    800113e0:	a009                	j	800113e2 <.LBB9_54>

00000000800113e2 <.LBB9_54>:
    800113e2:	00016617          	auipc	a2,0x16
    800113e6:	abe60613          	addi	a2,a2,-1346 # 80026ea0 <.L__unnamed_9>
    800113ea:	0288                	addi	a0,sp,320
    800113ec:	469d                	li	a3,7
    800113ee:	65a2                	ld	a1,8(sp)
    800113f0:	00010097          	auipc	ra,0x10
    800113f4:	6b0080e7          	jalr	1712(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    800113f8:	aaf5                	j	800115f4 <.LBB9_66+0x2a>
	...

00000000800113fc <.LBB9_55>:
    800113fc:	00016617          	auipc	a2,0x16
    80011400:	b7460613          	addi	a2,a2,-1164 # 80026f70 <.L__unnamed_16>
    80011404:	1008                	addi	a0,sp,32
    80011406:	46d5                	li	a3,21
    80011408:	65a2                	ld	a1,8(sp)
    8001140a:	00010097          	auipc	ra,0x10
    8001140e:	696080e7          	jalr	1686(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011412:	a009                	j	80011414 <.LBB9_55+0x18>
    80011414:	1008                	addi	a0,sp,32
    80011416:	00010097          	auipc	ra,0x10
    8001141a:	cdc080e7          	jalr	-804(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001141e:	00a10ba3          	sb	a0,23(sp)
    80011422:	a009                	j	80011424 <.LBB9_55+0x28>
    80011424:	a2cd                	j	80011606 <.LBB9_66+0x3c>

0000000080011426 <.LBB9_56>:
    80011426:	00012617          	auipc	a2,0x12
    8001142a:	75260613          	addi	a2,a2,1874 # 80023b78 <.L__unnamed_20+0x98>
    8001142e:	1828                	addi	a0,sp,56
    80011430:	46c1                	li	a3,16
    80011432:	65a2                	ld	a1,8(sp)
    80011434:	00010097          	auipc	ra,0x10
    80011438:	66c080e7          	jalr	1644(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001143c:	a009                	j	8001143e <.LBB9_56+0x18>
    8001143e:	1828                	addi	a0,sp,56
    80011440:	00010097          	auipc	ra,0x10
    80011444:	cb2080e7          	jalr	-846(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80011448:	00a10ba3          	sb	a0,23(sp)
    8001144c:	a009                	j	8001144e <.LBB9_56+0x28>
    8001144e:	aa65                	j	80011606 <.LBB9_66+0x3c>

0000000080011450 <.LBB9_57>:
    80011450:	00016617          	auipc	a2,0x16
    80011454:	b0e60613          	addi	a2,a2,-1266 # 80026f5e <.L__unnamed_18>
    80011458:	0888                	addi	a0,sp,80
    8001145a:	46c9                	li	a3,18
    8001145c:	65a2                	ld	a1,8(sp)
    8001145e:	00010097          	auipc	ra,0x10
    80011462:	642080e7          	jalr	1602(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011466:	a009                	j	80011468 <.LBB9_57+0x18>
    80011468:	0888                	addi	a0,sp,80
    8001146a:	00010097          	auipc	ra,0x10
    8001146e:	c88080e7          	jalr	-888(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80011472:	00a10ba3          	sb	a0,23(sp)
    80011476:	a009                	j	80011478 <.LBB9_57+0x28>
    80011478:	a279                	j	80011606 <.LBB9_66+0x3c>

000000008001147a <.LBB9_58>:
    8001147a:	00016617          	auipc	a2,0x16
    8001147e:	ada60613          	addi	a2,a2,-1318 # 80026f54 <.L__unnamed_19>
    80011482:	10a8                	addi	a0,sp,104
    80011484:	46a9                	li	a3,10
    80011486:	65a2                	ld	a1,8(sp)
    80011488:	00010097          	auipc	ra,0x10
    8001148c:	618080e7          	jalr	1560(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011490:	a009                	j	80011492 <.LBB9_58+0x18>
    80011492:	10a8                	addi	a0,sp,104
    80011494:	00010097          	auipc	ra,0x10
    80011498:	c5e080e7          	jalr	-930(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001149c:	00a10ba3          	sb	a0,23(sp)
    800114a0:	a009                	j	800114a2 <.LBB9_58+0x28>
    800114a2:	a295                	j	80011606 <.LBB9_66+0x3c>

00000000800114a4 <.LBB9_59>:
    800114a4:	00016617          	auipc	a2,0x16
    800114a8:	aa760613          	addi	a2,a2,-1369 # 80026f4b <.L__unnamed_20>
    800114ac:	0108                	addi	a0,sp,128
    800114ae:	46a5                	li	a3,9
    800114b0:	65a2                	ld	a1,8(sp)
    800114b2:	00010097          	auipc	ra,0x10
    800114b6:	5ee080e7          	jalr	1518(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    800114ba:	a009                	j	800114bc <.LBB9_59+0x18>
    800114bc:	0108                	addi	a0,sp,128
    800114be:	00010097          	auipc	ra,0x10
    800114c2:	c34080e7          	jalr	-972(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800114c6:	00a10ba3          	sb	a0,23(sp)
    800114ca:	a009                	j	800114cc <.LBB9_59+0x28>
    800114cc:	aa2d                	j	80011606 <.LBB9_66+0x3c>

00000000800114ce <.LBB9_60>:
    800114ce:	00016617          	auipc	a2,0x16
    800114d2:	a6e60613          	addi	a2,a2,-1426 # 80026f3c <.L__unnamed_21>
    800114d6:	0928                	addi	a0,sp,152
    800114d8:	46bd                	li	a3,15
    800114da:	65a2                	ld	a1,8(sp)
    800114dc:	00010097          	auipc	ra,0x10
    800114e0:	5c4080e7          	jalr	1476(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    800114e4:	a009                	j	800114e6 <.LBB9_60+0x18>
    800114e6:	0928                	addi	a0,sp,152
    800114e8:	00010097          	auipc	ra,0x10
    800114ec:	c0a080e7          	jalr	-1014(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800114f0:	00a10ba3          	sb	a0,23(sp)
    800114f4:	a009                	j	800114f6 <.LBB9_60+0x28>
    800114f6:	aa01                	j	80011606 <.LBB9_66+0x3c>

00000000800114f8 <.LBB9_61>:
    800114f8:	00016617          	auipc	a2,0x16
    800114fc:	a3a60613          	addi	a2,a2,-1478 # 80026f32 <.L__unnamed_22>
    80011500:	1908                	addi	a0,sp,176
    80011502:	46a9                	li	a3,10
    80011504:	65a2                	ld	a1,8(sp)
    80011506:	00010097          	auipc	ra,0x10
    8001150a:	59a080e7          	jalr	1434(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001150e:	a009                	j	80011510 <.LBB9_61+0x18>
    80011510:	1908                	addi	a0,sp,176
    80011512:	00010097          	auipc	ra,0x10
    80011516:	be0080e7          	jalr	-1056(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001151a:	00a10ba3          	sb	a0,23(sp)
    8001151e:	a009                	j	80011520 <.LBB9_61+0x28>
    80011520:	a0dd                	j	80011606 <.LBB9_66+0x3c>

0000000080011522 <.LBB9_62>:
    80011522:	00016617          	auipc	a2,0x16
    80011526:	a0560613          	addi	a2,a2,-1531 # 80026f27 <.L__unnamed_23>
    8001152a:	01a8                	addi	a0,sp,200
    8001152c:	46ad                	li	a3,11
    8001152e:	65a2                	ld	a1,8(sp)
    80011530:	00010097          	auipc	ra,0x10
    80011534:	570080e7          	jalr	1392(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011538:	a009                	j	8001153a <.LBB9_62+0x18>
    8001153a:	01a8                	addi	a0,sp,200
    8001153c:	00010097          	auipc	ra,0x10
    80011540:	bb6080e7          	jalr	-1098(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80011544:	00a10ba3          	sb	a0,23(sp)
    80011548:	a009                	j	8001154a <.LBB9_62+0x28>
    8001154a:	a875                	j	80011606 <.LBB9_66+0x3c>

000000008001154c <.LBB9_63>:
    8001154c:	00016617          	auipc	a2,0x16
    80011550:	9ce60613          	addi	a2,a2,-1586 # 80026f1a <.L__unnamed_24>
    80011554:	1188                	addi	a0,sp,224
    80011556:	46b5                	li	a3,13
    80011558:	65a2                	ld	a1,8(sp)
    8001155a:	00010097          	auipc	ra,0x10
    8001155e:	546080e7          	jalr	1350(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80011562:	a009                	j	80011564 <.LBB9_63+0x18>
    80011564:	1188                	addi	a0,sp,224
    80011566:	00010097          	auipc	ra,0x10
    8001156a:	b8c080e7          	jalr	-1140(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001156e:	00a10ba3          	sb	a0,23(sp)
    80011572:	a009                	j	80011574 <.LBB9_63+0x28>
    80011574:	a849                	j	80011606 <.LBB9_66+0x3c>

0000000080011576 <.LBB9_64>:
    80011576:	00016617          	auipc	a2,0x16
    8001157a:	99060613          	addi	a2,a2,-1648 # 80026f06 <.L__unnamed_25>
    8001157e:	19a8                	addi	a0,sp,248
    80011580:	46d1                	li	a3,20
    80011582:	65a2                	ld	a1,8(sp)
    80011584:	00010097          	auipc	ra,0x10
    80011588:	51c080e7          	jalr	1308(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001158c:	a009                	j	8001158e <.LBB9_64+0x18>
    8001158e:	19a8                	addi	a0,sp,248
    80011590:	00010097          	auipc	ra,0x10
    80011594:	b62080e7          	jalr	-1182(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80011598:	00a10ba3          	sb	a0,23(sp)
    8001159c:	a009                	j	8001159e <.LBB9_64+0x28>
    8001159e:	a0a5                	j	80011606 <.LBB9_66+0x3c>

00000000800115a0 <.LBB9_65>:
    800115a0:	00016617          	auipc	a2,0x16
    800115a4:	95960613          	addi	a2,a2,-1703 # 80026ef9 <.L__unnamed_26>
    800115a8:	0a08                	addi	a0,sp,272
    800115aa:	46b5                	li	a3,13
    800115ac:	65a2                	ld	a1,8(sp)
    800115ae:	00010097          	auipc	ra,0x10
    800115b2:	4f2080e7          	jalr	1266(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    800115b6:	a009                	j	800115b8 <.LBB9_65+0x18>
    800115b8:	0a08                	addi	a0,sp,272
    800115ba:	00010097          	auipc	ra,0x10
    800115be:	b38080e7          	jalr	-1224(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800115c2:	00a10ba3          	sb	a0,23(sp)
    800115c6:	a009                	j	800115c8 <.LBB9_65+0x28>
    800115c8:	a83d                	j	80011606 <.LBB9_66+0x3c>

00000000800115ca <.LBB9_66>:
    800115ca:	00016617          	auipc	a2,0x16
    800115ce:	92160613          	addi	a2,a2,-1759 # 80026eeb <.L__unnamed_27>
    800115d2:	1228                	addi	a0,sp,296
    800115d4:	46b9                	li	a3,14
    800115d6:	65a2                	ld	a1,8(sp)
    800115d8:	00010097          	auipc	ra,0x10
    800115dc:	4c8080e7          	jalr	1224(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    800115e0:	a009                	j	800115e2 <.LBB9_66+0x18>
    800115e2:	1228                	addi	a0,sp,296
    800115e4:	00010097          	auipc	ra,0x10
    800115e8:	b0e080e7          	jalr	-1266(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800115ec:	00a10ba3          	sb	a0,23(sp)
    800115f0:	a009                	j	800115f2 <.LBB9_66+0x28>
    800115f2:	a811                	j	80011606 <.LBB9_66+0x3c>
    800115f4:	0288                	addi	a0,sp,320
    800115f6:	00010097          	auipc	ra,0x10
    800115fa:	afc080e7          	jalr	-1284(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    800115fe:	00a10ba3          	sb	a0,23(sp)
    80011602:	a009                	j	80011604 <.LBB9_66+0x3a>
    80011604:	a009                	j	80011606 <.LBB9_66+0x3c>
    80011606:	01714503          	lbu	a0,23(sp)
    8001160a:	70b6                	ld	ra,360(sp)
    8001160c:	6175                	addi	sp,sp,368
    8001160e:	8082                	ret

Disassembly of section .text._ZN6kernel7process9trapframe9Trapframe10update_epc17hddaa67be0fb9ce91E:

0000000080011610 <_ZN6kernel7process9trapframe9Trapframe10update_epc17hddaa67be0fb9ce91E>:
    /*280 */    pub t6:usize
}


impl Trapframe {
    pub fn update_epc(&mut self) {
    80011610:	1101                	addi	sp,sp,-32
    80011612:	ec2a                	sd	a0,24(sp)
        self.epc += 4;
    80011614:	6d0c                	ld	a1,24(a0)
    80011616:	00458613          	addi	a2,a1,4
    8001161a:	e82a                	sd	a0,16(sp)
    8001161c:	e432                	sd	a2,8(sp)
    8001161e:	00b66863          	bltu	a2,a1,8001162e <.LBB0_3>
    80011622:	a009                	j	80011624 <_ZN6kernel7process9trapframe9Trapframe10update_epc17hddaa67be0fb9ce91E+0x14>
    80011624:	6522                	ld	a0,8(sp)
    80011626:	65c2                	ld	a1,16(sp)
    80011628:	ed88                	sd	a0,24(a1)
    }
    8001162a:	6105                	addi	sp,sp,32
    8001162c:	8082                	ret

000000008001162e <.LBB0_3>:
        self.epc += 4;
    8001162e:	00016517          	auipc	a0,0x16
    80011632:	99250513          	addi	a0,a0,-1646 # 80026fc0 <str.0>

0000000080011636 <.LBB0_4>:
    80011636:	00016617          	auipc	a2,0x16
    8001163a:	96a60613          	addi	a2,a2,-1686 # 80026fa0 <.L__unnamed_1>
    8001163e:	45f1                	li	a1,28
    80011640:	0000f097          	auipc	ra,0xf
    80011644:	68a080e7          	jalr	1674(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core5alloc6layout10size_align17h2216e85feca1e44cE:

000000008001164a <_ZN4core5alloc6layout10size_align17h2216e85feca1e44cE>:
const fn size_align<T>() -> (usize, usize) {
    8001164a:	1101                	addi	sp,sp,-32
    (mem::size_of::<T>(), mem::align_of::<T>())
    8001164c:	a009                	j	8001164e <_ZN4core5alloc6layout10size_align17h2216e85feca1e44cE+0x4>
    8001164e:	4505                	li	a0,1
    intrinsics::min_align_of::<T>()
    80011650:	ec2a                	sd	a0,24(sp)
    80011652:	e02a                	sd	a0,0(sp)
    80011654:	a009                	j	80011656 <_ZN4core5alloc6layout10size_align17h2216e85feca1e44cE+0xc>
    80011656:	4505                	li	a0,1
    80011658:	e42a                	sd	a0,8(sp)
    8001165a:	6582                	ld	a1,0(sp)
    8001165c:	e82e                	sd	a1,16(sp)
}
    8001165e:	6105                	addi	sp,sp,32
    80011660:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout10size_align17h4dc46ebbd95965e1E:

0000000080011662 <_ZN4core5alloc6layout10size_align17h4dc46ebbd95965e1E>:
const fn size_align<T>() -> (usize, usize) {
    80011662:	1101                	addi	sp,sp,-32
    (mem::size_of::<T>(), mem::align_of::<T>())
    80011664:	a009                	j	80011666 <_ZN4core5alloc6layout10size_align17h4dc46ebbd95965e1E+0x4>
    80011666:	4521                	li	a0,8
    80011668:	ec2a                	sd	a0,24(sp)
    8001166a:	e02a                	sd	a0,0(sp)
    8001166c:	a009                	j	8001166e <_ZN4core5alloc6layout10size_align17h4dc46ebbd95965e1E+0xc>
    8001166e:	03800513          	li	a0,56
    80011672:	e42a                	sd	a0,8(sp)
    80011674:	6582                	ld	a1,0(sp)
    80011676:	e82e                	sd	a1,16(sp)
}
    80011678:	6105                	addi	sp,sp,32
    8001167a:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout10size_align17h7c83e7d12094706cE:

000000008001167c <_ZN4core5alloc6layout10size_align17h7c83e7d12094706cE>:
const fn size_align<T>() -> (usize, usize) {
    8001167c:	1101                	addi	sp,sp,-32
    (mem::size_of::<T>(), mem::align_of::<T>())
    8001167e:	a009                	j	80011680 <_ZN4core5alloc6layout10size_align17h7c83e7d12094706cE+0x4>
    80011680:	6505                	lui	a0,0x1
    80011682:	ec2a                	sd	a0,24(sp)
    80011684:	e02a                	sd	a0,0(sp)
    80011686:	a009                	j	80011688 <_ZN4core5alloc6layout10size_align17h7c83e7d12094706cE+0xc>
    80011688:	6505                	lui	a0,0x1
    8001168a:	e42a                	sd	a0,8(sp)
    8001168c:	6582                	ld	a1,0(sp)
    8001168e:	e82e                	sd	a1,16(sp)
}
    80011690:	6105                	addi	sp,sp,32
    80011692:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout10size_align17ha07bc4f0356e95acE:

0000000080011694 <_ZN4core5alloc6layout10size_align17ha07bc4f0356e95acE>:
const fn size_align<T>() -> (usize, usize) {
    80011694:	1101                	addi	sp,sp,-32
    (mem::size_of::<T>(), mem::align_of::<T>())
    80011696:	a009                	j	80011698 <_ZN4core5alloc6layout10size_align17ha07bc4f0356e95acE+0x4>
    80011698:	6505                	lui	a0,0x1
    8001169a:	ec2a                	sd	a0,24(sp)
    8001169c:	e02a                	sd	a0,0(sp)
    8001169e:	a009                	j	800116a0 <_ZN4core5alloc6layout10size_align17ha07bc4f0356e95acE+0xc>
    800116a0:	6511                	lui	a0,0x4
    800116a2:	e42a                	sd	a0,8(sp)
    800116a4:	6582                	ld	a1,0(sp)
    800116a6:	e82e                	sd	a1,16(sp)
}
    800116a8:	6105                	addi	sp,sp,32
    800116aa:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout10size_align17hbf1901590ad8bc36E:

00000000800116ac <_ZN4core5alloc6layout10size_align17hbf1901590ad8bc36E>:
const fn size_align<T>() -> (usize, usize) {
    800116ac:	1101                	addi	sp,sp,-32
    (mem::size_of::<T>(), mem::align_of::<T>())
    800116ae:	a009                	j	800116b0 <_ZN4core5alloc6layout10size_align17hbf1901590ad8bc36E+0x4>
    800116b0:	6505                	lui	a0,0x1
    800116b2:	ec2a                	sd	a0,24(sp)
    800116b4:	e02a                	sd	a0,0(sp)
    800116b6:	a009                	j	800116b8 <_ZN4core5alloc6layout10size_align17hbf1901590ad8bc36E+0xc>
    800116b8:	6505                	lui	a0,0x1
    800116ba:	e42a                	sd	a0,8(sp)
    800116bc:	6582                	ld	a1,0(sp)
    800116be:	e82e                	sd	a1,16(sp)
}
    800116c0:	6105                	addi	sp,sp,32
    800116c2:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout10size_align17hc94fdafbd43162a0E:

00000000800116c4 <_ZN4core5alloc6layout10size_align17hc94fdafbd43162a0E>:
const fn size_align<T>() -> (usize, usize) {
    800116c4:	1101                	addi	sp,sp,-32
    (mem::size_of::<T>(), mem::align_of::<T>())
    800116c6:	a009                	j	800116c8 <_ZN4core5alloc6layout10size_align17hc94fdafbd43162a0E+0x4>
    800116c8:	4521                	li	a0,8
    800116ca:	ec2a                	sd	a0,24(sp)
    800116cc:	e02a                	sd	a0,0(sp)
    800116ce:	a009                	j	800116d0 <_ZN4core5alloc6layout10size_align17hc94fdafbd43162a0E+0xc>
    800116d0:	04000513          	li	a0,64
    800116d4:	e42a                	sd	a0,8(sp)
    800116d6:	6582                	ld	a1,0(sp)
    800116d8:	e82e                	sd	a1,16(sp)
}
    800116da:	6105                	addi	sp,sp,32
    800116dc:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout13for_value_raw17h2981a545f9c5eb82E:

00000000800116de <_ZN4core5alloc6layout6Layout13for_value_raw17h2981a545f9c5eb82E>:
    pub unsafe fn for_value_raw<T: ?Sized>(t: *const T) -> Self {
    800116de:	711d                	addi	sp,sp,-96
    800116e0:	ec86                	sd	ra,88(sp)
    800116e2:	e0aa                	sd	a0,64(sp)
        let (size, align) = unsafe { (mem::size_of_val_raw(t), mem::align_of_val_raw(t)) };
    800116e4:	f42a                	sd	a0,40(sp)
    800116e6:	ffffc097          	auipc	ra,0xffffc
    800116ea:	19a080e7          	jalr	410(ra) # 8000d880 <_ZN4core3mem15size_of_val_raw17h736a7888a7501591E>
    800116ee:	f02a                	sd	a0,32(sp)
    800116f0:	a009                	j	800116f2 <_ZN4core5alloc6layout6Layout13for_value_raw17h2981a545f9c5eb82E+0x14>
    800116f2:	7522                	ld	a0,40(sp)
    800116f4:	ffffc097          	auipc	ra,0xffffc
    800116f8:	1a0080e7          	jalr	416(ra) # 8000d894 <_ZN4core3mem16align_of_val_raw17h760ed152eb7a0f00E>
    800116fc:	ec2a                	sd	a0,24(sp)
    800116fe:	a009                	j	80011700 <_ZN4core5alloc6layout6Layout13for_value_raw17h2981a545f9c5eb82E+0x22>
    80011700:	7502                	ld	a0,32(sp)
    80011702:	f82a                	sd	a0,48(sp)
    80011704:	65e2                	ld	a1,24(sp)
    80011706:	fc2e                	sd	a1,56(sp)
    80011708:	e4aa                	sd	a0,72(sp)
    8001170a:	e8ae                	sd	a1,80(sp)
        unsafe { Layout::from_size_align_unchecked(size, align) }
    8001170c:	ffff4097          	auipc	ra,0xffff4
    80011710:	e42080e7          	jalr	-446(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80011714:	e82a                	sd	a0,16(sp)
    80011716:	e42e                	sd	a1,8(sp)
    80011718:	a009                	j	8001171a <_ZN4core5alloc6layout6Layout13for_value_raw17h2981a545f9c5eb82E+0x3c>
    }
    8001171a:	6542                	ld	a0,16(sp)
    8001171c:	65a2                	ld	a1,8(sp)
    8001171e:	60e6                	ld	ra,88(sp)
    80011720:	6125                	addi	sp,sp,96
    80011722:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout3new17h256ad32e6849cdb3E:

0000000080011724 <_ZN4core5alloc6layout6Layout3new17h256ad32e6849cdb3E>:
    pub const fn new<T>() -> Self {
    80011724:	7139                	addi	sp,sp,-64
        let (size, align) = size_align::<T>();
    80011726:	fc06                	sd	ra,56(sp)
    80011728:	00000097          	auipc	ra,0x0
    8001172c:	f84080e7          	jalr	-124(ra) # 800116ac <_ZN4core5alloc6layout10size_align17hbf1901590ad8bc36E>
    80011730:	f02a                	sd	a0,32(sp)
    80011732:	ec2e                	sd	a1,24(sp)
    80011734:	a009                	j	80011736 <_ZN4core5alloc6layout6Layout3new17h256ad32e6849cdb3E+0x12>
    80011736:	7502                	ld	a0,32(sp)
    80011738:	f42a                	sd	a0,40(sp)
    8001173a:	65e2                	ld	a1,24(sp)
    8001173c:	f82e                	sd	a1,48(sp)
        unsafe { Layout::from_size_align_unchecked(size, align) }
    8001173e:	ffff4097          	auipc	ra,0xffff4
    80011742:	e10080e7          	jalr	-496(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80011746:	e82a                	sd	a0,16(sp)
    80011748:	e42e                	sd	a1,8(sp)
    8001174a:	a009                	j	8001174c <_ZN4core5alloc6layout6Layout3new17h256ad32e6849cdb3E+0x28>
    }
    8001174c:	6542                	ld	a0,16(sp)
    8001174e:	65a2                	ld	a1,8(sp)
    80011750:	70e2                	ld	ra,56(sp)
    80011752:	6121                	addi	sp,sp,64
    80011754:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout3new17h397e702a6286dfcfE:

0000000080011756 <_ZN4core5alloc6layout6Layout3new17h397e702a6286dfcfE>:
    pub const fn new<T>() -> Self {
    80011756:	7139                	addi	sp,sp,-64
        let (size, align) = size_align::<T>();
    80011758:	fc06                	sd	ra,56(sp)
    8001175a:	00000097          	auipc	ra,0x0
    8001175e:	ef0080e7          	jalr	-272(ra) # 8001164a <_ZN4core5alloc6layout10size_align17h2216e85feca1e44cE>
    80011762:	f02a                	sd	a0,32(sp)
    80011764:	ec2e                	sd	a1,24(sp)
    80011766:	a009                	j	80011768 <_ZN4core5alloc6layout6Layout3new17h397e702a6286dfcfE+0x12>
    80011768:	7502                	ld	a0,32(sp)
    8001176a:	f42a                	sd	a0,40(sp)
    8001176c:	65e2                	ld	a1,24(sp)
    8001176e:	f82e                	sd	a1,48(sp)
        unsafe { Layout::from_size_align_unchecked(size, align) }
    80011770:	ffff4097          	auipc	ra,0xffff4
    80011774:	dde080e7          	jalr	-546(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80011778:	e82a                	sd	a0,16(sp)
    8001177a:	e42e                	sd	a1,8(sp)
    8001177c:	a009                	j	8001177e <_ZN4core5alloc6layout6Layout3new17h397e702a6286dfcfE+0x28>
    }
    8001177e:	6542                	ld	a0,16(sp)
    80011780:	65a2                	ld	a1,8(sp)
    80011782:	70e2                	ld	ra,56(sp)
    80011784:	6121                	addi	sp,sp,64
    80011786:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout3new17h4d6fd3151d8c205dE:

0000000080011788 <_ZN4core5alloc6layout6Layout3new17h4d6fd3151d8c205dE>:
    pub const fn new<T>() -> Self {
    80011788:	7139                	addi	sp,sp,-64
        let (size, align) = size_align::<T>();
    8001178a:	fc06                	sd	ra,56(sp)
    8001178c:	00000097          	auipc	ra,0x0
    80011790:	ef0080e7          	jalr	-272(ra) # 8001167c <_ZN4core5alloc6layout10size_align17h7c83e7d12094706cE>
    80011794:	f02a                	sd	a0,32(sp)
    80011796:	ec2e                	sd	a1,24(sp)
    80011798:	a009                	j	8001179a <_ZN4core5alloc6layout6Layout3new17h4d6fd3151d8c205dE+0x12>
    8001179a:	7502                	ld	a0,32(sp)
    8001179c:	f42a                	sd	a0,40(sp)
    8001179e:	65e2                	ld	a1,24(sp)
    800117a0:	f82e                	sd	a1,48(sp)
        unsafe { Layout::from_size_align_unchecked(size, align) }
    800117a2:	ffff4097          	auipc	ra,0xffff4
    800117a6:	dac080e7          	jalr	-596(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    800117aa:	e82a                	sd	a0,16(sp)
    800117ac:	e42e                	sd	a1,8(sp)
    800117ae:	a009                	j	800117b0 <_ZN4core5alloc6layout6Layout3new17h4d6fd3151d8c205dE+0x28>
    }
    800117b0:	6542                	ld	a0,16(sp)
    800117b2:	65a2                	ld	a1,8(sp)
    800117b4:	70e2                	ld	ra,56(sp)
    800117b6:	6121                	addi	sp,sp,64
    800117b8:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout3new17h90cb498dbbc05244E:

00000000800117ba <_ZN4core5alloc6layout6Layout3new17h90cb498dbbc05244E>:
    pub const fn new<T>() -> Self {
    800117ba:	7139                	addi	sp,sp,-64
        let (size, align) = size_align::<T>();
    800117bc:	fc06                	sd	ra,56(sp)
    800117be:	00000097          	auipc	ra,0x0
    800117c2:	ea4080e7          	jalr	-348(ra) # 80011662 <_ZN4core5alloc6layout10size_align17h4dc46ebbd95965e1E>
    800117c6:	f02a                	sd	a0,32(sp)
    800117c8:	ec2e                	sd	a1,24(sp)
    800117ca:	a009                	j	800117cc <_ZN4core5alloc6layout6Layout3new17h90cb498dbbc05244E+0x12>
    800117cc:	7502                	ld	a0,32(sp)
    800117ce:	f42a                	sd	a0,40(sp)
    800117d0:	65e2                	ld	a1,24(sp)
    800117d2:	f82e                	sd	a1,48(sp)
        unsafe { Layout::from_size_align_unchecked(size, align) }
    800117d4:	ffff4097          	auipc	ra,0xffff4
    800117d8:	d7a080e7          	jalr	-646(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    800117dc:	e82a                	sd	a0,16(sp)
    800117de:	e42e                	sd	a1,8(sp)
    800117e0:	a009                	j	800117e2 <_ZN4core5alloc6layout6Layout3new17h90cb498dbbc05244E+0x28>
    }
    800117e2:	6542                	ld	a0,16(sp)
    800117e4:	65a2                	ld	a1,8(sp)
    800117e6:	70e2                	ld	ra,56(sp)
    800117e8:	6121                	addi	sp,sp,64
    800117ea:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout3new17h937433faac0c0e4bE:

00000000800117ec <_ZN4core5alloc6layout6Layout3new17h937433faac0c0e4bE>:
    pub const fn new<T>() -> Self {
    800117ec:	7139                	addi	sp,sp,-64
        let (size, align) = size_align::<T>();
    800117ee:	fc06                	sd	ra,56(sp)
    800117f0:	00000097          	auipc	ra,0x0
    800117f4:	ea4080e7          	jalr	-348(ra) # 80011694 <_ZN4core5alloc6layout10size_align17ha07bc4f0356e95acE>
    800117f8:	f02a                	sd	a0,32(sp)
    800117fa:	ec2e                	sd	a1,24(sp)
    800117fc:	a009                	j	800117fe <_ZN4core5alloc6layout6Layout3new17h937433faac0c0e4bE+0x12>
    800117fe:	7502                	ld	a0,32(sp)
    80011800:	f42a                	sd	a0,40(sp)
    80011802:	65e2                	ld	a1,24(sp)
    80011804:	f82e                	sd	a1,48(sp)
        unsafe { Layout::from_size_align_unchecked(size, align) }
    80011806:	ffff4097          	auipc	ra,0xffff4
    8001180a:	d48080e7          	jalr	-696(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    8001180e:	e82a                	sd	a0,16(sp)
    80011810:	e42e                	sd	a1,8(sp)
    80011812:	a009                	j	80011814 <_ZN4core5alloc6layout6Layout3new17h937433faac0c0e4bE+0x28>
    }
    80011814:	6542                	ld	a0,16(sp)
    80011816:	65a2                	ld	a1,8(sp)
    80011818:	70e2                	ld	ra,56(sp)
    8001181a:	6121                	addi	sp,sp,64
    8001181c:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout3new17ha94e6a9a6b8e6a14E:

000000008001181e <_ZN4core5alloc6layout6Layout3new17ha94e6a9a6b8e6a14E>:
    pub const fn new<T>() -> Self {
    8001181e:	7139                	addi	sp,sp,-64
        let (size, align) = size_align::<T>();
    80011820:	fc06                	sd	ra,56(sp)
    80011822:	00000097          	auipc	ra,0x0
    80011826:	ea2080e7          	jalr	-350(ra) # 800116c4 <_ZN4core5alloc6layout10size_align17hc94fdafbd43162a0E>
    8001182a:	f02a                	sd	a0,32(sp)
    8001182c:	ec2e                	sd	a1,24(sp)
    8001182e:	a009                	j	80011830 <_ZN4core5alloc6layout6Layout3new17ha94e6a9a6b8e6a14E+0x12>
    80011830:	7502                	ld	a0,32(sp)
    80011832:	f42a                	sd	a0,40(sp)
    80011834:	65e2                	ld	a1,24(sp)
    80011836:	f82e                	sd	a1,48(sp)
        unsafe { Layout::from_size_align_unchecked(size, align) }
    80011838:	ffff4097          	auipc	ra,0xffff4
    8001183c:	d16080e7          	jalr	-746(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80011840:	e82a                	sd	a0,16(sp)
    80011842:	e42e                	sd	a1,8(sp)
    80011844:	a009                	j	80011846 <_ZN4core5alloc6layout6Layout3new17ha94e6a9a6b8e6a14E+0x28>
    }
    80011846:	6542                	ld	a0,16(sp)
    80011848:	65a2                	ld	a1,8(sp)
    8001184a:	70e2                	ld	ra,56(sp)
    8001184c:	6121                	addi	sp,sp,64
    8001184e:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E:

0000000080011850 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E>:
    /// Creates a layout describing the record for a `[T; n]`.
    ///
    /// On arithmetic overflow, returns `LayoutError`.
    #[stable(feature = "alloc_layout_manipulation", since = "1.44.0")]
    #[inline]
    pub fn array<T>(n: usize) -> Result<Self, LayoutError> {
    80011850:	7155                	addi	sp,sp,-208
    80011852:	e586                	sd	ra,200(sp)
    80011854:	f92a                	sd	a0,176(sp)
        let (layout, offset) = Layout::new::<T>().repeat(n)?;
    80011856:	ec2a                	sd	a0,24(sp)
    80011858:	00000097          	auipc	ra,0x0
    8001185c:	efe080e7          	jalr	-258(ra) # 80011756 <_ZN4core5alloc6layout6Layout3new17h397e702a6286dfcfE>
    80011860:	e52a                	sd	a0,136(sp)
    80011862:	e92e                	sd	a1,144(sp)
    80011864:	a009                	j	80011866 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x16>
    80011866:	1888                	addi	a0,sp,112
    80011868:	012c                	addi	a1,sp,136
    8001186a:	6662                	ld	a2,24(sp)
    8001186c:	ffff4097          	auipc	ra,0xffff4
    80011870:	d2e080e7          	jalr	-722(ra) # 8000559a <_ZN4core5alloc6layout6Layout6repeat17h419fce78e059d908E>
    80011874:	a009                	j	80011876 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x26>
    80011876:	08a8                	addi	a0,sp,88
    80011878:	188c                	addi	a1,sp,112
    8001187a:	ffffb097          	auipc	ra,0xffffb
    8001187e:	69e080e7          	jalr	1694(ra) # 8000cf18 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha77f1c5942d92051E>
    80011882:	a009                	j	80011884 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x34>
    80011884:	7506                	ld	a0,96(sp)
    80011886:	00153593          	seqz	a1,a0
    8001188a:	4601                	li	a2,0
    8001188c:	00c51463          	bne	a0,a2,80011894 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x44>
    80011890:	a009                	j	80011892 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x42>
    80011892:	a035                	j	800118be <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x6e>
    80011894:	7526                	ld	a0,104(sp)
    80011896:	f52a                	sd	a0,168(sp)
    80011898:	7586                	ld	a1,96(sp)
    8001189a:	f12e                	sd	a1,160(sp)
    8001189c:	6666                	ld	a2,88(sp)
    8001189e:	ed32                	sd	a2,152(sp)
    800118a0:	e0b2                	sd	a2,64(sp)
    800118a2:	e4ae                	sd	a1,72(sp)
    800118a4:	e8aa                	sd	a0,80(sp)
    800118a6:	f832                	sd	a2,48(sp)
    800118a8:	fc2e                	sd	a1,56(sp)
    800118aa:	e1aa                	sd	a0,192(sp)
    800118ac:	1808                	addi	a0,sp,48
        debug_assert_eq!(offset, mem::size_of::<T>());
        Ok(layout.pad_to_align())
    800118ae:	ffff4097          	auipc	ra,0xffff4
    800118b2:	b4c080e7          	jalr	-1204(ra) # 800053fa <_ZN4core5alloc6layout6Layout12pad_to_align17h93cfba0e1d2cc87bE>
    800118b6:	e82a                	sd	a0,16(sp)
    800118b8:	e42e                	sd	a1,8(sp)
    800118ba:	a839                	j	800118d8 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x88>
        let (layout, offset) = Layout::new::<T>().repeat(n)?;
    800118bc:	0000                	unimp
    800118be:	00000097          	auipc	ra,0x0
    800118c2:	02e080e7          	jalr	46(ra) # 800118ec <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8d5d2700446bde9dE>
    800118c6:	a009                	j	800118c8 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x78>
    800118c8:	ffffb097          	auipc	ra,0xffffb
    800118cc:	59e080e7          	jalr	1438(ra) # 8000ce66 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h400983070b61e14bE>
    800118d0:	f02a                	sd	a0,32(sp)
    800118d2:	f42e                	sd	a1,40(sp)
    800118d4:	a009                	j	800118d6 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x86>
    }
    800118d6:	a031                	j	800118e2 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x92>
        Ok(layout.pad_to_align())
    800118d8:	6542                	ld	a0,16(sp)
    800118da:	f02a                	sd	a0,32(sp)
    800118dc:	65a2                	ld	a1,8(sp)
    800118de:	f42e                	sd	a1,40(sp)
    }
    800118e0:	a009                	j	800118e2 <_ZN4core5alloc6layout6Layout5array17h7d3310f4e1151861E+0x92>
    800118e2:	7502                	ld	a0,32(sp)
    800118e4:	75a2                	ld	a1,40(sp)
    800118e6:	60ae                	ld	ra,200(sp)
    800118e8:	6169                	addi	sp,sp,208
    800118ea:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8d5d2700446bde9dE:

00000000800118ec <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8d5d2700446bde9dE>:
}

// From (and thus Into) is reflexive
#[stable(feature = "rust1", since = "1.0.0")]
impl<T> From<T> for T {
    fn from(t: T) -> T {
    800118ec:	1141                	addi	sp,sp,-16
        t
    }
    800118ee:	0141                	addi	sp,sp,16
    800118f0:	8082                	ret

Disassembly of section .text._ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17hacb394750ad24a5dE:

00000000800118f2 <_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17hacb394750ad24a5dE>:
pub struct Rev<T> {
    iter: T,
}

impl<T> Rev<T> {
    pub(in crate::iter) fn new(iter: T) -> Rev<T> {
    800118f2:	1101                	addi	sp,sp,-32
        Rev { iter }
    800118f4:	6990                	ld	a2,16(a1)
    800118f6:	ec32                	sd	a2,24(sp)
    800118f8:	6594                	ld	a3,8(a1)
    800118fa:	e836                	sd	a3,16(sp)
    800118fc:	618c                	ld	a1,0(a1)
    800118fe:	e42e                	sd	a1,8(sp)
    80011900:	e910                	sd	a2,16(a0)
    80011902:	e514                	sd	a3,8(a0)
    80011904:	e10c                	sd	a1,0(a0)
    }
    80011906:	6105                	addi	sp,sp,32
    80011908:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h35c9b31ca5909084E:

000000008001190a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h35c9b31ca5909084E>:
        self
    8001190a:	6990                	ld	a2,16(a1)
    8001190c:	e910                	sd	a2,16(a0)
    8001190e:	6590                	ld	a2,8(a1)
    80011910:	e510                	sd	a2,8(a0)
    80011912:	618c                	ld	a1,0(a1)
    80011914:	e10c                	sd	a1,0(a0)
    }
    80011916:	8082                	ret

Disassembly of section .text._ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3ed23bc865c74b9aE:

0000000080011918 <_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3ed23bc865c74b9aE>:
    I: DoubleEndedIterator,
{
    type Item = <I as Iterator>::Item;

    #[inline]
    fn next(&mut self) -> Option<<I as Iterator>::Item> {
    80011918:	1101                	addi	sp,sp,-32
    8001191a:	ec06                	sd	ra,24(sp)
    8001191c:	e82a                	sd	a0,16(sp)
        self.iter.next_back()
    8001191e:	ffff4097          	auipc	ra,0xffff4
    80011922:	920080e7          	jalr	-1760(ra) # 8000523e <_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hd47c74d044ac2c98E>
    80011926:	e42a                	sd	a0,8(sp)
    80011928:	e02e                	sd	a1,0(sp)
    8001192a:	a009                	j	8001192c <_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3ed23bc865c74b9aE+0x14>
    }
    8001192c:	6522                	ld	a0,8(sp)
    8001192e:	6582                	ld	a1,0(sp)
    80011930:	60e2                	ld	ra,24(sp)
    80011932:	6105                	addi	sp,sp,32
    80011934:	8082                	ret

Disassembly of section .text._ZN6kernel7process7context7Context10write_zero17hdc765d7e1b85febcE:

0000000080011936 <_ZN6kernel7process7context7Context10write_zero17hdc765d7e1b85febcE>:

    pub fn ra(&self) -> usize {
        self.ra
    }

    pub fn write_zero(&mut self) {
    80011936:	1141                	addi	sp,sp,-16
    80011938:	e42a                	sd	a0,8(sp)
    8001193a:	4581                	li	a1,0
        self.ra = 0;
    8001193c:	e10c                	sd	a1,0(a0)
        self.sp = 0;
    8001193e:	e50c                	sd	a1,8(a0)
        self.s0 = 0;
    80011940:	e90c                	sd	a1,16(a0)
        self.s1 = 0;
    80011942:	ed0c                	sd	a1,24(a0)
        self.s2 = 0;
    80011944:	f10c                	sd	a1,32(a0)
        self.s3 = 0;
    80011946:	f50c                	sd	a1,40(a0)
        self.s4 = 0;
    80011948:	f90c                	sd	a1,48(a0)
        self.s5 = 0;
    8001194a:	fd0c                	sd	a1,56(a0)
        self.s6 = 0;
    8001194c:	e12c                	sd	a1,64(a0)
        self.s7 = 0;
    8001194e:	e52c                	sd	a1,72(a0)
        self.s8 = 0;
    80011950:	e92c                	sd	a1,80(a0)
        self.s9 = 0;
    80011952:	ed2c                	sd	a1,88(a0)
        self.s10 = 0;
    80011954:	f12c                	sd	a1,96(a0)
        self.s11 = 0;
    80011956:	f52c                	sd	a1,104(a0)
    }
    80011958:	0141                	addi	sp,sp,16
    8001195a:	8082                	ret

Disassembly of section .text._ZN6kernel7process7context7Context8write_ra17h1f3bdbedbdec22bbE:

000000008001195c <_ZN6kernel7process7context7Context8write_ra17h1f3bdbedbdec22bbE>:

    pub fn write_ra(&mut self, ra: usize) {
    8001195c:	1141                	addi	sp,sp,-16
    8001195e:	e02a                	sd	a0,0(sp)
    80011960:	e42e                	sd	a1,8(sp)
        self.ra = ra;
    80011962:	e10c                	sd	a1,0(a0)
    }
    80011964:	0141                	addi	sp,sp,16
    80011966:	8082                	ret

Disassembly of section .text._ZN6kernel7process7context7Context8write_sp17h24836c24c200ee52E:

0000000080011968 <_ZN6kernel7process7context7Context8write_sp17h24836c24c200ee52E>:

    pub fn write_sp(&mut self, sp: usize) {
    80011968:	1141                	addi	sp,sp,-16
    8001196a:	e02a                	sd	a0,0(sp)
    8001196c:	e42e                	sd	a1,8(sp)
        self.sp = sp;
    8001196e:	e50c                	sd	a1,8(a0)
    }
    80011970:	0141                	addi	sp,sp,16
    80011972:	8082                	ret

Disassembly of section .text._ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E:

0000000080011974 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E>:

const TEST_FAIL:u32 = 0x3333;
const TEST_PASS:u32 = 0x5555;
const TEST_RESET:u32 = 0x7777;

pub fn system_reset(reset_type: usize, reset_reason: usize) {
    80011974:	7179                	addi	sp,sp,-48
    80011976:	f406                	sd	ra,40(sp)
    80011978:	ec2a                	sd	a0,24(sp)
    8001197a:	f02e                	sd	a1,32(sp)
    8001197c:	4601                	li	a2,0
    // Fail = 0x3333,
    // Pass = 0x5555,
    // Reset = 0x7777,

    let mut value = match reset_type {
        RESET_TYPE_SHUTDOWN => TEST_PASS,
    8001197e:	e42e                	sd	a1,8(sp)
    80011980:	e02a                	sd	a0,0(sp)
    80011982:	02c50263          	beq	a0,a2,800119a6 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x32>
    80011986:	a009                	j	80011988 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x14>
    80011988:	4505                	li	a0,1
    8001198a:	6582                	ld	a1,0(sp)
    8001198c:	02a58263          	beq	a1,a0,800119b0 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x3c>
    80011990:	a009                	j	80011992 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x1e>
    80011992:	4509                	li	a0,2
    80011994:	6582                	ld	a1,0(sp)
    80011996:	02a58263          	beq	a1,a0,800119ba <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x46>
    8001199a:	a009                	j	8001199c <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x28>
    8001199c:	650d                	lui	a0,0x3
    8001199e:	3335051b          	addiw	a0,a0,819
        RESET_TYPE_COLD_REBOOT => TEST_RESET,
        RESET_TYPE_WARM_REBOOT => TEST_RESET,
        _ => TEST_FAIL,
    800119a2:	ca2a                	sw	a0,20(sp)
    let mut value = match reset_type {
    800119a4:	a005                	j	800119c4 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x50>
    800119a6:	6515                	lui	a0,0x5
    800119a8:	5555051b          	addiw	a0,a0,1365
        RESET_TYPE_SHUTDOWN => TEST_PASS,
    800119ac:	ca2a                	sw	a0,20(sp)
    let mut value = match reset_type {
    800119ae:	a819                	j	800119c4 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x50>
    800119b0:	651d                	lui	a0,0x7
    800119b2:	7775051b          	addiw	a0,a0,1911
        RESET_TYPE_COLD_REBOOT => TEST_RESET,
    800119b6:	ca2a                	sw	a0,20(sp)
    let mut value = match reset_type {
    800119b8:	a031                	j	800119c4 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x50>
    800119ba:	651d                	lui	a0,0x7
    800119bc:	7775051b          	addiw	a0,a0,1911
        RESET_TYPE_WARM_REBOOT => TEST_RESET,
    800119c0:	ca2a                	sw	a0,20(sp)
    let mut value = match reset_type {
    800119c2:	a009                	j	800119c4 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x50>
    800119c4:	4505                	li	a0,1
    };

    if reset_reason == RESET_REASON_SYSTEM_FAILURE {
    800119c6:	65a2                	ld	a1,8(sp)
    800119c8:	00a59863          	bne	a1,a0,800119d8 <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x64>
    800119cc:	a009                	j	800119ce <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x5a>
    800119ce:	650d                	lui	a0,0x3
    800119d0:	3335051b          	addiw	a0,a0,819
        value = TEST_FAIL
    800119d4:	ca2a                	sw	a0,20(sp)
    if reset_reason == RESET_REASON_SYSTEM_FAILURE {
    800119d6:	a011                	j	800119da <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x66>
    800119d8:	a009                	j	800119da <_ZN6kernel8shutdown12system_reset17h3cd663c4365a3562E+0x66>
    }

    unsafe {
        core::ptr::write_volatile(VIRT_TEST, value);
    800119da:	45d2                	lw	a1,20(sp)
    800119dc:	00100537          	lui	a0,0x100
    800119e0:	fffff097          	auipc	ra,0xfffff
    800119e4:	a60080e7          	jalr	-1440(ra) # 80010440 <_ZN4core3ptr14write_volatile17h418d41cedb4e5342E>
    800119e8:	a009                	j	800119ea <.LBB0_12>

00000000800119ea <.LBB0_12>:
    }

    unreachable!();
    800119ea:	00015517          	auipc	a0,0x15
    800119ee:	5f250513          	addi	a0,a0,1522 # 80026fdc <.L__unnamed_1>

00000000800119f2 <.LBB0_13>:
    800119f2:	00015617          	auipc	a2,0x15
    800119f6:	62660613          	addi	a2,a2,1574 # 80027018 <.L__unnamed_2>
    800119fa:	02800593          	li	a1,40
    800119fe:	0000f097          	auipc	ra,0xf
    80011a02:	2cc080e7          	jalr	716(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel8shutdown8shutdown17hc1a93410168a66ddE:

0000000080011a08 <_ZN6kernel8shutdown8shutdown17hc1a93410168a66ddE>:
}

pub fn shutdown() {
    80011a08:	1141                	addi	sp,sp,-16
    80011a0a:	e406                	sd	ra,8(sp)
    80011a0c:	4521                	li	a0,8
    80011a0e:	4581                	li	a1,0
    kernel_env_call(SHUTDOWN, 0, 0, 0);
    80011a10:	e02e                	sd	a1,0(sp)
    80011a12:	6602                	ld	a2,0(sp)
    80011a14:	6682                	ld	a3,0(sp)
    80011a16:	ffff8097          	auipc	ra,0xffff8
    80011a1a:	546080e7          	jalr	1350(ra) # 80009f5c <_ZN6kernel7syscall15kernel_env_call17ha24e523227c205c1E>
    80011a1e:	a009                	j	80011a20 <_ZN6kernel8shutdown8shutdown17hc1a93410168a66ddE+0x18>
}
    80011a20:	60a2                	ld	ra,8(sp)
    80011a22:	0141                	addi	sp,sp,16
    80011a24:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u16$GT$2lt17h36c43ba75efaa90dE:

0000000080011a26 <_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u16$GT$2lt17h36c43ba75efaa90dE>:
                #[inline]
                fn partial_cmp(&self, other: &$t) -> Option<Ordering> {
                    Some(self.cmp(other))
                }
                #[inline]
                fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
    80011a26:	1141                	addi	sp,sp,-16
    80011a28:	e02a                	sd	a0,0(sp)
    80011a2a:	e42e                	sd	a1,8(sp)
    80011a2c:	00055503          	lhu	a0,0(a0)
    80011a30:	0005d583          	lhu	a1,0(a1)
    80011a34:	00b53533          	sltu	a0,a0,a1
    80011a38:	0141                	addi	sp,sp,16
    80011a3a:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17hb4cd44ec6bcccaf1E:

0000000080011a3c <_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17hb4cd44ec6bcccaf1E>:
    80011a3c:	1141                	addi	sp,sp,-16
    80011a3e:	e02a                	sd	a0,0(sp)
    80011a40:	e42e                	sd	a1,8(sp)
    80011a42:	4108                	lw	a0,0(a0)
    80011a44:	418c                	lw	a1,0(a1)
    80011a46:	00b53533          	sltu	a0,a0,a1
    80011a4a:	0141                	addi	sp,sp,16
    80011a4c:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h5b3f3bd726ecf834E:

0000000080011a4e <_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h5b3f3bd726ecf834E>:
                fn eq(&self, other: &$t) -> bool { (*self) == (*other) }
    80011a4e:	1141                	addi	sp,sp,-16
    80011a50:	e02a                	sd	a0,0(sp)
    80011a52:	e42e                	sd	a1,8(sp)
    80011a54:	6108                	ld	a0,0(a0)
    80011a56:	618c                	ld	a1,0(a1)
    80011a58:	8d2d                	xor	a0,a0,a1
    80011a5a:	00153513          	seqz	a0,a0
    80011a5e:	0141                	addi	sp,sp,16
    80011a60:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2ne17h8edcfa1ced57bbcfE:

0000000080011a62 <_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2ne17h8edcfa1ced57bbcfE>:
                fn ne(&self, other: &$t) -> bool { (*self) != (*other) }
    80011a62:	1141                	addi	sp,sp,-16
    80011a64:	e02a                	sd	a0,0(sp)
    80011a66:	e42e                	sd	a1,8(sp)
    80011a68:	6108                	ld	a0,0(a0)
    80011a6a:	618c                	ld	a1,0(a1)
    80011a6c:	8d2d                	xor	a0,a0,a1
    80011a6e:	00a03533          	snez	a0,a0
    80011a72:	0141                	addi	sp,sp,16
    80011a74:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17hb362a5bf16f8439fE:

0000000080011a76 <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17hb362a5bf16f8439fE>:
                #[inline]
                fn le(&self, other: &$t) -> bool { (*self) <= (*other) }
    80011a76:	1141                	addi	sp,sp,-16
    80011a78:	e02a                	sd	a0,0(sp)
    80011a7a:	e42e                	sd	a1,8(sp)
    80011a7c:	6108                	ld	a0,0(a0)
    80011a7e:	618c                	ld	a1,0(a1)
    80011a80:	00a5b533          	sltu	a0,a1,a0
    80011a84:	00154513          	xori	a0,a0,1
    80011a88:	0141                	addi	sp,sp,16
    80011a8a:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbd123249fa251e75E:

0000000080011a8c <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hbd123249fa251e75E>:
                fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
    80011a8c:	1141                	addi	sp,sp,-16
    80011a8e:	e02a                	sd	a0,0(sp)
    80011a90:	e42e                	sd	a1,8(sp)
    80011a92:	6108                	ld	a0,0(a0)
    80011a94:	618c                	ld	a1,0(a1)
    80011a96:	00b53533          	sltu	a0,a0,a1
    80011a9a:	0141                	addi	sp,sp,16
    80011a9c:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E:

0000000080011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>:
    pub fn set_state(&mut self, state: ProcState) {
    80011a9e:	1141                	addi	sp,sp,-16
    80011aa0:	862e                	mv	a2,a1
    80011aa2:	e02a                	sd	a0,0(sp)
    80011aa4:	00b107a3          	sb	a1,15(sp)
        self.state = state;
    80011aa8:	00b50c23          	sb	a1,24(a0)
    }
    80011aac:	0141                	addi	sp,sp,16
    80011aae:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData13get_trapframe17he132b677f52335f2E:

0000000080011ab0 <_ZN6kernel7process7process8ProcData13get_trapframe17he132b677f52335f2E>:
    pub fn get_trapframe(&self) -> *mut Trapframe {
    80011ab0:	1141                	addi	sp,sp,-16
    80011ab2:	e42a                	sd	a0,8(sp)
        self.trapframe
    80011ab4:	6d08                	ld	a0,24(a0)
    }
    80011ab6:	0141                	addi	sp,sp,16
    80011ab8:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData8set_name17he2cc3f4ed583a386E:

0000000080011aba <_ZN6kernel7process7process8ProcData8set_name17he2cc3f4ed583a386E>:
    pub fn set_name(&mut self, name: &[u8]) {
    80011aba:	715d                	addi	sp,sp,-80
    80011abc:	e486                	sd	ra,72(sp)
    80011abe:	f82a                	sd	a0,48(sp)
    80011ac0:	fc2e                	sd	a1,56(sp)
    80011ac2:	e0b2                	sd	a2,64(sp)
                name.as_ptr(), 
    80011ac4:	f42a                	sd	a0,40(sp)
    80011ac6:	852e                	mv	a0,a1
    80011ac8:	f02e                	sd	a1,32(sp)
    80011aca:	85b2                	mv	a1,a2
    80011acc:	ec32                	sd	a2,24(sp)
    80011ace:	00001097          	auipc	ra,0x1
    80011ad2:	1f6080e7          	jalr	502(ra) # 80012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>
    80011ad6:	e82a                	sd	a0,16(sp)
    80011ad8:	a009                	j	80011ada <_ZN6kernel7process7process8ProcData8set_name17he2cc3f4ed583a386E+0x20>
                self.name.as_mut_ptr(),
    80011ada:	7522                	ld	a0,40(sp)
    80011adc:	3d850513          	addi	a0,a0,984
    80011ae0:	45c1                	li	a1,16
    80011ae2:	00001097          	auipc	ra,0x1
    80011ae6:	178080e7          	jalr	376(ra) # 80012c5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfacde4f5753eccfcE>
    80011aea:	e42a                	sd	a0,8(sp)
    80011aec:	a009                	j	80011aee <_ZN6kernel7process7process8ProcData8set_name17he2cc3f4ed583a386E+0x34>
                name.len()
    80011aee:	7502                	ld	a0,32(sp)
    80011af0:	65e2                	ld	a1,24(sp)
    80011af2:	00001097          	auipc	ra,0x1
    80011af6:	172080e7          	jalr	370(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    80011afa:	e02a                	sd	a0,0(sp)
    80011afc:	a009                	j	80011afe <_ZN6kernel7process7process8ProcData8set_name17he2cc3f4ed583a386E+0x44>
            copy_nonoverlapping(
    80011afe:	6542                	ld	a0,16(sp)
    80011b00:	65a2                	ld	a1,8(sp)
    80011b02:	6602                	ld	a2,0(sp)
    80011b04:	0000f097          	auipc	ra,0xf
    80011b08:	e46080e7          	jalr	-442(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    80011b0c:	a009                	j	80011b0e <_ZN6kernel7process7process8ProcData8set_name17he2cc3f4ed583a386E+0x54>
    }
    80011b0e:	60a6                	ld	ra,72(sp)
    80011b10:	6161                	addi	sp,sp,80
    80011b12:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData10set_parent17h4129c6e07e6f4fb6E:

0000000080011b14 <_ZN6kernel7process7process8ProcData10set_parent17h4129c6e07e6f4fb6E>:
    pub fn set_parent(&mut self, parent: Option<*mut Process>) {
    80011b14:	1101                	addi	sp,sp,-32
    80011b16:	e42a                	sd	a0,8(sp)
    80011b18:	e82e                	sd	a1,16(sp)
    80011b1a:	ec32                	sd	a2,24(sp)
        self.parent = parent;
    80011b1c:	e94c                	sd	a1,144(a0)
    80011b1e:	ed50                	sd	a2,152(a0)
    }
    80011b20:	6105                	addi	sp,sp,32
    80011b22:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData10set_kstack17h2a25c8fe56567b9bE:

0000000080011b24 <_ZN6kernel7process7process8ProcData10set_kstack17h2a25c8fe56567b9bE>:
    pub fn set_kstack(&mut self, ksatck: usize) {
    80011b24:	1141                	addi	sp,sp,-16
    80011b26:	e02a                	sd	a0,0(sp)
    80011b28:	e42e                	sd	a1,8(sp)
        self.kstack = ksatck;
    80011b2a:	e10c                	sd	a1,0(a0)
    }
    80011b2c:	0141                	addi	sp,sp,16
    80011b2e:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData13set_trapframe17hccbafe988ea9307eE:

0000000080011b30 <_ZN6kernel7process7process8ProcData13set_trapframe17hccbafe988ea9307eE>:
    pub fn set_trapframe(&mut self, trapframe: *mut Trapframe) {
    80011b30:	1141                	addi	sp,sp,-16
    80011b32:	e02a                	sd	a0,0(sp)
    80011b34:	e42e                	sd	a1,8(sp)
        self.trapframe = trapframe;
    80011b36:	ed0c                	sd	a1,24(a0)
    }
    80011b38:	0141                	addi	sp,sp,16
    80011b3a:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData13set_pagetable17h45947c1d7b3a335eE:

0000000080011b3c <_ZN6kernel7process7process8ProcData13set_pagetable17h45947c1d7b3a335eE>:
    pub fn set_pagetable(&mut self, pagetable: Option<Box<PageTable>>) {
    80011b3c:	7179                	addi	sp,sp,-48
    80011b3e:	f406                	sd	ra,40(sp)
    80011b40:	ec2a                	sd	a0,24(sp)
    80011b42:	f02e                	sd	a1,32(sp)
        self.pagetable = pagetable
    80011b44:	01050613          	addi	a2,a0,16
    80011b48:	e82a                	sd	a0,16(sp)
    80011b4a:	8532                	mv	a0,a2
    80011b4c:	e42e                	sd	a1,8(sp)
    80011b4e:	ffff5097          	auipc	ra,0xffff5
    80011b52:	c82080e7          	jalr	-894(ra) # 800067d0 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E>
    80011b56:	a009                	j	80011b58 <_ZN6kernel7process7process8ProcData13set_pagetable17h45947c1d7b3a335eE+0x1c>
    80011b58:	6522                	ld	a0,8(sp)
    80011b5a:	65c2                	ld	a1,16(sp)
    80011b5c:	e988                	sd	a0,16(a1)
    }
    80011b5e:	70a2                	ld	ra,40(sp)
    80011b60:	6145                	addi	sp,sp,48
    80011b62:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E:

0000000080011b64 <_ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E>:
    pub fn get_context_mut(&mut self) -> *mut Context {
    80011b64:	1141                	addi	sp,sp,-16
    80011b66:	e42a                	sd	a0,8(sp)
        &mut self.context as *mut Context
    80011b68:	02050513          	addi	a0,a0,32
    }
    80011b6c:	0141                	addi	sp,sp,16
    80011b6e:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData12init_context17ha8586c3e03b0b772E:

0000000080011b70 <_ZN6kernel7process7process8ProcData12init_context17ha8586c3e03b0b772E>:
    pub fn init_context(&mut self) {
    80011b70:	7139                	addi	sp,sp,-64
    80011b72:	fc06                	sd	ra,56(sp)
    80011b74:	f42a                	sd	a0,40(sp)
        let kstack = self.kstack;
    80011b76:	610c                	ld	a1,0(a0)
    80011b78:	f82e                	sd	a1,48(sp)
        self.context.write_zero();
    80011b7a:	02050613          	addi	a2,a0,32
    80011b7e:	f02a                	sd	a0,32(sp)
    80011b80:	8532                	mv	a0,a2
    80011b82:	ec2e                	sd	a1,24(sp)
    80011b84:	00000097          	auipc	ra,0x0
    80011b88:	db2080e7          	jalr	-590(ra) # 80011936 <_ZN6kernel7process7context7Context10write_zero17hdc765d7e1b85febcE>
    80011b8c:	a009                	j	80011b8e <_ZN6kernel7process7process8ProcData12init_context17ha8586c3e03b0b772E+0x1e>
        self.context.write_ra(fork_ret as usize);
    80011b8e:	7502                	ld	a0,32(sp)
    80011b90:	02050513          	addi	a0,a0,32

0000000080011b94 <.LBB8_6>:
    80011b94:	ffff2597          	auipc	a1,0xffff2
    80011b98:	4b858593          	addi	a1,a1,1208 # 8000404c <_ZN6kernel7process8fork_ret17h0f53fd7a3b041115E>
    80011b9c:	00000097          	auipc	ra,0x0
    80011ba0:	dc0080e7          	jalr	-576(ra) # 8001195c <_ZN6kernel7process7context7Context8write_ra17h1f3bdbedbdec22bbE>
    80011ba4:	a009                	j	80011ba6 <.LBB8_6+0x12>
        self.context.write_sp(kstack + PGSIZE);
    80011ba6:	7502                	ld	a0,32(sp)
    80011ba8:	02050513          	addi	a0,a0,32
    80011bac:	6585                	lui	a1,0x1
    80011bae:	6662                	ld	a2,24(sp)
    80011bb0:	95b2                	add	a1,a1,a2
    80011bb2:	e82a                	sd	a0,16(sp)
    80011bb4:	e42e                	sd	a1,8(sp)
    80011bb6:	00c5ed63          	bltu	a1,a2,80011bd0 <.LBB8_7>
    80011bba:	a009                	j	80011bbc <.LBB8_6+0x28>
    80011bbc:	6542                	ld	a0,16(sp)
    80011bbe:	65a2                	ld	a1,8(sp)
    80011bc0:	00000097          	auipc	ra,0x0
    80011bc4:	da8080e7          	jalr	-600(ra) # 80011968 <_ZN6kernel7process7context7Context8write_sp17h24836c24c200ee52E>
    80011bc8:	a009                	j	80011bca <.LBB8_6+0x36>
    }
    80011bca:	70e2                	ld	ra,56(sp)
    80011bcc:	6121                	addi	sp,sp,64
    80011bce:	8082                	ret

0000000080011bd0 <.LBB8_7>:
        self.context.write_sp(kstack + PGSIZE);
    80011bd0:	00015517          	auipc	a0,0x15
    80011bd4:	49050513          	addi	a0,a0,1168 # 80027060 <str.0>

0000000080011bd8 <.LBB8_8>:
    80011bd8:	00015617          	auipc	a2,0x15
    80011bdc:	47060613          	addi	a2,a2,1136 # 80027048 <.L__unnamed_1>
    80011be0:	45f1                	li	a1,28
    80011be2:	0000f097          	auipc	ra,0xf
    80011be6:	0e8080e7          	jalr	232(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E:

0000000080011bec <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E>:
    pub fn find_unallocated_fd(&self) -> Result<usize, &'static str> {
    80011bec:	7175                	addi	sp,sp,-144
    80011bee:	e506                	sd	ra,136(sp)
    80011bf0:	f4ae                	sd	a1,104(sp)
        for fd in 0..self.open_files.len() {
    80011bf2:	0a058613          	addi	a2,a1,160 # 10a0 <.Lline_table_start0+0x2fa>
    80011bf6:	06400693          	li	a3,100
    80011bfa:	f82a                	sd	a0,48(sp)
    80011bfc:	8532                	mv	a0,a2
    80011bfe:	f42e                	sd	a1,40(sp)
    80011c00:	85b6                	mv	a1,a3
    80011c02:	00006097          	auipc	ra,0x6
    80011c06:	79c080e7          	jalr	1948(ra) # 8001839e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9e2712dfd09e8f4dE>
    80011c0a:	f02a                	sd	a0,32(sp)
    80011c0c:	a009                	j	80011c0e <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E+0x22>
    80011c0e:	4501                	li	a0,0
    80011c10:	fc2a                	sd	a0,56(sp)
    80011c12:	7582                	ld	a1,32(sp)
    80011c14:	e0ae                	sd	a1,64(sp)
    80011c16:	0000e097          	auipc	ra,0xe
    80011c1a:	e94080e7          	jalr	-364(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    80011c1e:	ec2a                	sd	a0,24(sp)
    80011c20:	e82e                	sd	a1,16(sp)
    80011c22:	a009                	j	80011c24 <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E+0x38>
    80011c24:	6562                	ld	a0,24(sp)
    80011c26:	e4aa                	sd	a0,72(sp)
    80011c28:	65c2                	ld	a1,16(sp)
    80011c2a:	e8ae                	sd	a1,80(sp)
    80011c2c:	a009                	j	80011c2e <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E+0x42>
    80011c2e:	00a8                	addi	a0,sp,72
    80011c30:	0000e097          	auipc	ra,0xe
    80011c34:	e0c080e7          	jalr	-500(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    80011c38:	ecaa                	sd	a0,88(sp)
    80011c3a:	f0ae                	sd	a1,96(sp)
    80011c3c:	a009                	j	80011c3e <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E+0x52>
    80011c3e:	6566                	ld	a0,88(sp)
    80011c40:	4581                	li	a1,0
    80011c42:	00b50463          	beq	a0,a1,80011c4a <.LBB9_15>
    80011c46:	a009                	j	80011c48 <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E+0x5c>
    80011c48:	a829                	j	80011c62 <.LBB9_15+0x18>

0000000080011c4a <.LBB9_15>:
        Err("Fail to find unallocted fd")
    80011c4a:	00015517          	auipc	a0,0x15
    80011c4e:	44e50513          	addi	a0,a0,1102 # 80027098 <.L__unnamed_2>
    80011c52:	75c2                	ld	a1,48(sp)
    80011c54:	e588                	sd	a0,8(a1)
    80011c56:	4569                	li	a0,26
    80011c58:	e988                	sd	a0,16(a1)
    80011c5a:	4505                	li	a0,1
    80011c5c:	e188                	sd	a0,0(a1)
    }
    80011c5e:	a0a9                	j	80011ca8 <.LBB9_15+0x5e>
        for fd in 0..self.open_files.len() {
    80011c60:	0000                	unimp
    80011c62:	7506                	ld	a0,96(sp)
    80011c64:	f8aa                	sd	a0,112(sp)
    80011c66:	fcaa                	sd	a0,120(sp)
    80011c68:	e12a                	sd	a0,128(sp)
    80011c6a:	06300593          	li	a1,99
            if self.open_files[fd].is_none() {
    80011c6e:	e42a                	sd	a0,8(sp)
    80011c70:	02a5ef63          	bltu	a1,a0,80011cae <.LBB9_16>
    80011c74:	a009                	j	80011c76 <.LBB9_15+0x2c>
    80011c76:	6522                	ld	a0,8(sp)
    80011c78:	00351593          	slli	a1,a0,0x3
    80011c7c:	7622                	ld	a2,40(sp)
    80011c7e:	95b2                	add	a1,a1,a2
    80011c80:	0a058513          	addi	a0,a1,160
    80011c84:	00007097          	auipc	ra,0x7
    80011c88:	286080e7          	jalr	646(ra) # 80018f0a <_ZN4core6option15Option$LT$T$GT$7is_none17hfadf21d940dbe4f4E>
    80011c8c:	e02a                	sd	a0,0(sp)
    80011c8e:	a009                	j	80011c90 <.LBB9_15+0x46>
    80011c90:	4501                	li	a0,0
    80011c92:	6582                	ld	a1,0(sp)
    80011c94:	00a58963          	beq	a1,a0,80011ca6 <.LBB9_15+0x5c>
    80011c98:	a009                	j	80011c9a <.LBB9_15+0x50>
                return Ok(fd)
    80011c9a:	6522                	ld	a0,8(sp)
    80011c9c:	75c2                	ld	a1,48(sp)
    80011c9e:	e588                	sd	a0,8(a1)
    80011ca0:	4601                	li	a2,0
    80011ca2:	e190                	sd	a2,0(a1)
    }
    80011ca4:	a011                	j	80011ca8 <.LBB9_15+0x5e>
        for fd in 0..self.open_files.len() {
    80011ca6:	b761                	j	80011c2e <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E+0x42>
    }
    80011ca8:	60aa                	ld	ra,136(sp)
    80011caa:	6149                	addi	sp,sp,144
    80011cac:	8082                	ret

0000000080011cae <.LBB9_16>:
            if self.open_files[fd].is_none() {
    80011cae:	00015617          	auipc	a2,0x15
    80011cb2:	3d260613          	addi	a2,a2,978 # 80027080 <.L__unnamed_3>
    80011cb6:	06400593          	li	a1,100
    80011cba:	6522                	ld	a0,8(sp)
    80011cbc:	0000f097          	auipc	ra,0xf
    80011cc0:	03a080e7          	jalr	58(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7process7process8ProcData14proc_pagetable17h3f21cb40a3f5ea26E:

0000000080011cc6 <_ZN6kernel7process7process8ProcData14proc_pagetable17h3f21cb40a3f5ea26E>:
    pub unsafe fn proc_pagetable(&mut self) {
    80011cc6:	7119                	addi	sp,sp,-128
    80011cc8:	fc86                	sd	ra,120(sp)
    80011cca:	f4aa                	sd	a0,104(sp)
        let mut page_table = PageTable::uvmcreate();
    80011ccc:	ecaa                	sd	a0,88(sp)
    80011cce:	ffffd097          	auipc	ra,0xffffd
    80011cd2:	6f4080e7          	jalr	1780(ra) # 8000f3c2 <_ZN6kernel6memory7mapping10page_table9PageTable9uvmcreate17hf0fd6239d321762dE>
    80011cd6:	85aa                	mv	a1,a0
    80011cd8:	f8aa                	sd	a0,112(sp)
    80011cda:	e8ae                	sd	a1,80(sp)
    80011cdc:	a009                	j	80011cde <_ZN6kernel7process7process8ProcData14proc_pagetable17h3f21cb40a3f5ea26E+0x18>
    80011cde:	04000537          	lui	a0,0x4000
    80011ce2:	357d                	addiw	a0,a0,-1
    80011ce4:	0532                	slli	a0,a0,0xc
            VirtualAddress::new(TRAMPOLINE),
    80011ce6:	ffff6097          	auipc	ra,0xffff6
    80011cea:	e32080e7          	jalr	-462(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80011cee:	e4aa                	sd	a0,72(sp)
    80011cf0:	a009                	j	80011cf2 <.LBB10_19>

0000000080011cf2 <.LBB10_19>:
            PhysicalAddress::new(trampoline as usize),
    80011cf2:	fffef517          	auipc	a0,0xfffef
    80011cf6:	30e50513          	addi	a0,a0,782 # 80001000 <trampoline>
    80011cfa:	ffff6097          	auipc	ra,0xffff6
    80011cfe:	ece080e7          	jalr	-306(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80011d02:	e0aa                	sd	a0,64(sp)
    80011d04:	a009                	j	80011d06 <.LBB10_19+0x14>
    80011d06:	4509                	li	a0,2
    80011d08:	45a1                	li	a1,8
            PteFlags::R | PteFlags::X
    80011d0a:	ffff6097          	auipc	ra,0xffff6
    80011d0e:	03e080e7          	jalr	62(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80011d12:	fc2a                	sd	a0,56(sp)
    80011d14:	a009                	j	80011d16 <.LBB10_19+0x24>
    80011d16:	6685                	lui	a3,0x1
        if !page_table.map(
    80011d18:	6546                	ld	a0,80(sp)
    80011d1a:	65a6                	ld	a1,72(sp)
    80011d1c:	6606                	ld	a2,64(sp)
    80011d1e:	7762                	ld	a4,56(sp)
    80011d20:	ffffd097          	auipc	ra,0xffffd
    80011d24:	470080e7          	jalr	1136(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    80011d28:	f82a                	sd	a0,48(sp)
    80011d2a:	a009                	j	80011d2c <.LBB10_19+0x3a>
    80011d2c:	7542                	ld	a0,48(sp)
    80011d2e:	ed01                	bnez	a0,80011d46 <.LBB10_19+0x54>
    80011d30:	a009                	j	80011d32 <.LBB10_19+0x40>
    80011d32:	4501                	li	a0,0
            page_table.uvm_free(0);
    80011d34:	65c6                	ld	a1,80(sp)
    80011d36:	f42a                	sd	a0,40(sp)
    80011d38:	852e                	mv	a0,a1
    80011d3a:	75a2                	ld	a1,40(sp)
    80011d3c:	ffffe097          	auipc	ra,0xffffe
    80011d40:	900080e7          	jalr	-1792(ra) # 8000f63c <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE>
    80011d44:	a011                	j	80011d48 <.LBB10_19+0x56>
        if !page_table.map(
    80011d46:	a011                	j	80011d4a <.LBB10_19+0x58>
    80011d48:	a009                	j	80011d4a <.LBB10_19+0x58>
    80011d4a:	02000537          	lui	a0,0x2000
    80011d4e:	357d                	addiw	a0,a0,-1
    80011d50:	0536                	slli	a0,a0,0xd
            VirtualAddress::new(TRAPFRAME), 
    80011d52:	ffff6097          	auipc	ra,0xffff6
    80011d56:	dc6080e7          	jalr	-570(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80011d5a:	f02a                	sd	a0,32(sp)
    80011d5c:	a009                	j	80011d5e <.LBB10_19+0x6c>
            PhysicalAddress::new(self.trapframe as usize),
    80011d5e:	6566                	ld	a0,88(sp)
    80011d60:	6d08                	ld	a0,24(a0)
    80011d62:	ffff6097          	auipc	ra,0xffff6
    80011d66:	e66080e7          	jalr	-410(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80011d6a:	ec2a                	sd	a0,24(sp)
    80011d6c:	a009                	j	80011d6e <.LBB10_19+0x7c>
    80011d6e:	4509                	li	a0,2
    80011d70:	4591                	li	a1,4
            PteFlags::R | PteFlags::W
    80011d72:	ffff6097          	auipc	ra,0xffff6
    80011d76:	fd6080e7          	jalr	-42(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80011d7a:	e82a                	sd	a0,16(sp)
    80011d7c:	a009                	j	80011d7e <.LBB10_19+0x8c>
    80011d7e:	6685                	lui	a3,0x1
        if !page_table.map(
    80011d80:	6546                	ld	a0,80(sp)
    80011d82:	7582                	ld	a1,32(sp)
    80011d84:	6662                	ld	a2,24(sp)
    80011d86:	6742                	ld	a4,16(sp)
    80011d88:	ffffd097          	auipc	ra,0xffffd
    80011d8c:	408080e7          	jalr	1032(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    80011d90:	e42a                	sd	a0,8(sp)
    80011d92:	a009                	j	80011d94 <.LBB10_19+0xa2>
    80011d94:	6522                	ld	a0,8(sp)
    80011d96:	ed01                	bnez	a0,80011dae <.LBB10_19+0xbc>
    80011d98:	a009                	j	80011d9a <.LBB10_19+0xa8>
    80011d9a:	4501                	li	a0,0
            page_table.uvm_free(0);
    80011d9c:	65c6                	ld	a1,80(sp)
    80011d9e:	e02a                	sd	a0,0(sp)
    80011da0:	852e                	mv	a0,a1
    80011da2:	6582                	ld	a1,0(sp)
    80011da4:	ffffe097          	auipc	ra,0xffffe
    80011da8:	898080e7          	jalr	-1896(ra) # 8000f63c <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE>
    80011dac:	a011                	j	80011db0 <.LBB10_19+0xbe>
        if !page_table.map(
    80011dae:	a011                	j	80011db2 <.LBB10_19+0xc0>
    80011db0:	a009                	j	80011db2 <.LBB10_19+0xc0>
        self.pagetable = Some(page_table);
    80011db2:	6546                	ld	a0,80(sp)
    80011db4:	f0aa                	sd	a0,96(sp)
    80011db6:	65e6                	ld	a1,88(sp)
    80011db8:	01058513          	addi	a0,a1,16
    80011dbc:	ffff5097          	auipc	ra,0xffff5
    80011dc0:	a14080e7          	jalr	-1516(ra) # 800067d0 <_ZN4core3ptr120drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$$GT$17h2fd862ba29126ab8E>
    80011dc4:	a009                	j	80011dc6 <.LBB10_19+0xd4>
    80011dc6:	7506                	ld	a0,96(sp)
    80011dc8:	65e6                	ld	a1,88(sp)
    80011dca:	e988                	sd	a0,16(a1)
    }
    80011dcc:	70e6                	ld	ra,120(sp)
    80011dce:	6109                	addi	sp,sp,128
    80011dd0:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process8ProcData8fd_close17hdf97917e0fe514e7E:

0000000080011dd2 <_ZN6kernel7process7process8ProcData8fd_close17hdf97917e0fe514e7E>:
    pub fn fd_close(&mut self, fd: usize) {
    80011dd2:	7179                	addi	sp,sp,-48
    80011dd4:	f406                	sd	ra,40(sp)
    80011dd6:	ec2a                	sd	a0,24(sp)
    80011dd8:	f02e                	sd	a1,32(sp)
    80011dda:	06300613          	li	a2,99
        self.open_files[fd].take();
    80011dde:	e42e                	sd	a1,8(sp)
    80011de0:	e02a                	sd	a0,0(sp)
    80011de2:	02b66963          	bltu	a2,a1,80011e14 <.LBB11_5>
    80011de6:	a009                	j	80011de8 <_ZN6kernel7process7process8ProcData8fd_close17hdf97917e0fe514e7E+0x16>
    80011de8:	6522                	ld	a0,8(sp)
    80011dea:	00351593          	slli	a1,a0,0x3
    80011dee:	6602                	ld	a2,0(sp)
    80011df0:	95b2                	add	a1,a1,a2
    80011df2:	0a058513          	addi	a0,a1,160
    80011df6:	00006097          	auipc	ra,0x6
    80011dfa:	7a0080e7          	jalr	1952(ra) # 80018596 <_ZN4core6option15Option$LT$T$GT$4take17ha270ce5844af4e09E>
    80011dfe:	e82a                	sd	a0,16(sp)
    80011e00:	a009                	j	80011e02 <_ZN6kernel7process7process8ProcData8fd_close17hdf97917e0fe514e7E+0x30>
    80011e02:	0808                	addi	a0,sp,16
    80011e04:	ffff5097          	auipc	ra,0xffff5
    80011e08:	c2e080e7          	jalr	-978(ra) # 80006a32 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E>
    80011e0c:	a009                	j	80011e0e <_ZN6kernel7process7process8ProcData8fd_close17hdf97917e0fe514e7E+0x3c>
    }
    80011e0e:	70a2                	ld	ra,40(sp)
    80011e10:	6145                	addi	sp,sp,48
    80011e12:	8082                	ret

0000000080011e14 <.LBB11_5>:
        self.open_files[fd].take();
    80011e14:	00015617          	auipc	a2,0x15
    80011e18:	2a460613          	addi	a2,a2,676 # 800270b8 <.L__unnamed_4>
    80011e1c:	06400593          	li	a1,100
    80011e20:	6522                	ld	a0,8(sp)
    80011e22:	0000f097          	auipc	ra,0xf
    80011e26:	ed4080e7          	jalr	-300(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7process7process8ProcData9user_init17h2a486fbaa5364ccfE:

0000000080011e2c <_ZN6kernel7process7process8ProcData9user_init17h2a486fbaa5364ccfE>:
    pub fn user_init(&mut self) {
    80011e2c:	7139                	addi	sp,sp,-64
    80011e2e:	fc06                	sd	ra,56(sp)
    80011e30:	f42a                	sd	a0,40(sp)
        let tf = unsafe{ &mut *self.trapframe };
    80011e32:	6d0c                	ld	a1,24(a0)
    80011e34:	f82e                	sd	a1,48(sp)
        tf.kernel_satp = unsafe{ satp::read() };
    80011e36:	f02a                	sd	a0,32(sp)
    80011e38:	ec2e                	sd	a1,24(sp)
    80011e3a:	00007097          	auipc	ra,0x7
    80011e3e:	48c080e7          	jalr	1164(ra) # 800192c6 <_ZN6kernel8register4satp4read17h5c27215ce38b89a3E>
    80011e42:	e82a                	sd	a0,16(sp)
    80011e44:	a009                	j	80011e46 <_ZN6kernel7process7process8ProcData9user_init17h2a486fbaa5364ccfE+0x1a>
    80011e46:	6542                	ld	a0,16(sp)
    80011e48:	65e2                	ld	a1,24(sp)
    80011e4a:	e188                	sd	a0,0(a1)
        tf.kernel_sp = self.kstack + PGSIZE * 4;
    80011e4c:	7602                	ld	a2,32(sp)
    80011e4e:	6214                	ld	a3,0(a2)
    80011e50:	6711                	lui	a4,0x4
    80011e52:	9736                	add	a4,a4,a3
    80011e54:	e43a                	sd	a4,8(sp)
    80011e56:	02d76763          	bltu	a4,a3,80011e84 <.LBB12_6>
    80011e5a:	a009                	j	80011e5c <_ZN6kernel7process7process8ProcData9user_init17h2a486fbaa5364ccfE+0x30>
    80011e5c:	6522                	ld	a0,8(sp)
    80011e5e:	65e2                	ld	a1,24(sp)
    80011e60:	e588                	sd	a0,8(a1)

0000000080011e62 <.LBB12_5>:
        tf.kernel_trap = usertrap as usize;
    80011e62:	00003617          	auipc	a2,0x3
    80011e66:	8aa60613          	addi	a2,a2,-1878 # 8001470c <usertrap>
    80011e6a:	e990                	sd	a2,16(a1)
            cpu::cpuid()
    80011e6c:	0000c097          	auipc	ra,0xc
    80011e70:	864080e7          	jalr	-1948(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    80011e74:	e02a                	sd	a0,0(sp)
    80011e76:	a009                	j	80011e78 <.LBB12_5+0x16>
        tf.kernel_hartid = unsafe {
    80011e78:	6502                	ld	a0,0(sp)
    80011e7a:	65e2                	ld	a1,24(sp)
    80011e7c:	f188                	sd	a0,32(a1)
    }
    80011e7e:	70e2                	ld	ra,56(sp)
    80011e80:	6121                	addi	sp,sp,64
    80011e82:	8082                	ret

0000000080011e84 <.LBB12_6>:
        tf.kernel_sp = self.kstack + PGSIZE * 4;
    80011e84:	00015517          	auipc	a0,0x15
    80011e88:	1dc50513          	addi	a0,a0,476 # 80027060 <str.0>

0000000080011e8c <.LBB12_7>:
    80011e8c:	00015617          	auipc	a2,0x15
    80011e90:	24460613          	addi	a2,a2,580 # 800270d0 <.L__unnamed_5>
    80011e94:	45f1                	li	a1,28
    80011e96:	0000f097          	auipc	ra,0xf
    80011e9a:	e34080e7          	jalr	-460(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process7process7Process4init17h940368e51372f2eaE:

0000000080011ea0 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE>:
    pub fn init(&mut self, kstack: usize) {
    80011ea0:	81010113          	addi	sp,sp,-2032
    80011ea4:	7e113423          	sd	ra,2024(sp)
    80011ea8:	6611                	lui	a2,0x4
    80011eaa:	8306061b          	addiw	a2,a2,-2000
    80011eae:	40c10133          	sub	sp,sp,a2
    80011eb2:	660d                	lui	a2,0x3
    80011eb4:	6686061b          	addiw	a2,a2,1640
    80011eb8:	960a                	add	a2,a2,sp
    80011eba:	e208                	sd	a0,0(a2)
    80011ebc:	660d                	lui	a2,0x3
    80011ebe:	6706061b          	addiw	a2,a2,1648
    80011ec2:	960a                	add	a2,a2,sp
    80011ec4:	e20c                	sd	a1,0(a2)
            &mut *self.data.get()
    80011ec6:	04050513          	addi	a0,a0,64
    80011eca:	e62e                	sd	a1,264(sp)
    80011ecc:	00005097          	auipc	ra,0x5
    80011ed0:	abc080e7          	jalr	-1348(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80011ed4:	e22a                	sd	a0,256(sp)
    80011ed6:	a009                	j	80011ed8 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x38>
    80011ed8:	6512                	ld	a0,256(sp)
    80011eda:	658d                	lui	a1,0x3
    80011edc:	6805859b          	addiw	a1,a1,1664
    80011ee0:	958a                	add	a1,a1,sp
    80011ee2:	e188                	sd	a0,0(a1)
        pdata.open_files = array![_ => None; NFILE];
    80011ee4:	a009                	j	80011ee6 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x46>
    80011ee6:	650d                	lui	a0,0x3
    80011ee8:	6905051b          	addiw	a0,a0,1680
    80011eec:	950a                	add	a0,a0,sp
    80011eee:	852a                	mv	a0,a0
    80011ef0:	6585                	lui	a1,0x1
    80011ef2:	7005859b          	addiw	a1,a1,1792
    80011ef6:	958a                	add	a1,a1,sp
    80011ef8:	85ae                	mv	a1,a1
    80011efa:	32000613          	li	a2,800
        ManuallyDrop { value }
    80011efe:	fdaa                	sd	a0,248(sp)
    80011f00:	f9b2                	sd	a2,240(sp)
    80011f02:	00012097          	auipc	ra,0x12
    80011f06:	95e080e7          	jalr	-1698(ra) # 80023860 <memcpy>
    80011f0a:	6585                	lui	a1,0x1
    80011f0c:	3e05859b          	addiw	a1,a1,992
    80011f10:	958a                	add	a1,a1,sp
    80011f12:	85ae                	mv	a1,a1
    80011f14:	f5aa                	sd	a0,232(sp)
    80011f16:	852e                	mv	a0,a1
    80011f18:	75ee                	ld	a1,248(sp)
    80011f1a:	764e                	ld	a2,240(sp)
    80011f1c:	00012097          	auipc	ra,0x12
    80011f20:	944080e7          	jalr	-1724(ra) # 80023860 <memcpy>
    80011f24:	a009                	j	80011f26 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x86>
    80011f26:	6505                	lui	a0,0x1
    80011f28:	0c05051b          	addiw	a0,a0,192
    80011f2c:	950a                	add	a0,a0,sp
    80011f2e:	852a                	mv	a0,a0
    80011f30:	6585                	lui	a1,0x1
    80011f32:	3e05859b          	addiw	a1,a1,992
    80011f36:	958a                	add	a1,a1,sp
    80011f38:	85ae                	mv	a1,a1
    80011f3a:	32000613          	li	a2,800
    80011f3e:	f1aa                	sd	a0,224(sp)
    80011f40:	edb2                	sd	a2,216(sp)
    80011f42:	00012097          	auipc	ra,0x12
    80011f46:	91e080e7          	jalr	-1762(ra) # 80023860 <memcpy>
    80011f4a:	6585                	lui	a1,0x1
    80011f4c:	da05859b          	addiw	a1,a1,-608
    80011f50:	958a                	add	a1,a1,sp
    80011f52:	85ae                	mv	a1,a1
    80011f54:	e9aa                	sd	a0,208(sp)
    80011f56:	852e                	mv	a0,a1
    80011f58:	760e                	ld	a2,224(sp)
    80011f5a:	e5ae                	sd	a1,200(sp)
    80011f5c:	85b2                	mv	a1,a2
    80011f5e:	666e                	ld	a2,216(sp)
    80011f60:	00012097          	auipc	ra,0x12
    80011f64:	900080e7          	jalr	-1792(ra) # 80023860 <memcpy>
    80011f68:	6585                	lui	a1,0x1
    80011f6a:	a805859b          	addiw	a1,a1,-1408
    80011f6e:	958a                	add	a1,a1,sp
    80011f70:	85ae                	mv	a1,a1
        slot.value
    80011f72:	e1aa                	sd	a0,192(sp)
    80011f74:	852e                	mv	a0,a1
    80011f76:	65ae                	ld	a1,200(sp)
    80011f78:	666e                	ld	a2,216(sp)
    80011f7a:	00012097          	auipc	ra,0x12
    80011f7e:	8e6080e7          	jalr	-1818(ra) # 80023860 <memcpy>
    80011f82:	a009                	j	80011f84 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0xe4>
    80011f84:	75810513          	addi	a0,sp,1880
    80011f88:	6585                	lui	a1,0x1
    80011f8a:	a805859b          	addiw	a1,a1,-1408
    80011f8e:	958a                	add	a1,a1,sp
    80011f90:	85ae                	mv	a1,a1
    80011f92:	00004097          	auipc	ra,0x4
    80011f96:	26c080e7          	jalr	620(ra) # 800161fe <_ZN11array_macro28__ArrayVecInner$LT$T$C$_$GT$3new17h88def819a8e631a5E>
    80011f9a:	a009                	j	80011f9c <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0xfc>
    80011f9c:	43010513          	addi	a0,sp,1072
    80011fa0:	75810593          	addi	a1,sp,1880
    80011fa4:	32800613          	li	a2,808
    80011fa8:	00012097          	auipc	ra,0x12
    80011fac:	8b8080e7          	jalr	-1864(ra) # 80023860 <memcpy>
    80011fb0:	a009                	j	80011fb2 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x112>
    80011fb2:	75013503          	ld	a0,1872(sp)
    80011fb6:	06400593          	li	a1,100
    80011fba:	04b56f63          	bltu	a0,a1,80012018 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x178>
    80011fbe:	a009                	j	80011fc0 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x120>
    80011fc0:	6509                	lui	a0,0x2
    80011fc2:	6c05051b          	addiw	a0,a0,1728
    80011fc6:	950a                	add	a0,a0,sp
    80011fc8:	852a                	mv	a0,a0
    80011fca:	43010593          	addi	a1,sp,1072
    80011fce:	32800613          	li	a2,808
    80011fd2:	fd2a                	sd	a0,184(sp)
    80011fd4:	f932                	sd	a2,176(sp)
    80011fd6:	00012097          	auipc	ra,0x12
    80011fda:	88a080e7          	jalr	-1910(ra) # 80023860 <memcpy>
    80011fde:	6591                	lui	a1,0x4
    80011fe0:	cf05859b          	addiw	a1,a1,-784
    80011fe4:	958a                	add	a1,a1,sp
    80011fe6:	85ae                	mv	a1,a1
        ManuallyDrop { value }
    80011fe8:	f52a                	sd	a0,168(sp)
    80011fea:	852e                	mv	a0,a1
    80011fec:	766a                	ld	a2,184(sp)
    80011fee:	f12e                	sd	a1,160(sp)
    80011ff0:	85b2                	mv	a1,a2
    80011ff2:	764a                	ld	a2,176(sp)
    80011ff4:	00012097          	auipc	ra,0x12
    80011ff8:	86c080e7          	jalr	-1940(ra) # 80023860 <memcpy>
    80011ffc:	6589                	lui	a1,0x2
    80011ffe:	3985859b          	addiw	a1,a1,920
    80012002:	958a                	add	a1,a1,sp
    80012004:	85ae                	mv	a1,a1
    80012006:	ed2a                	sd	a0,152(sp)
    80012008:	852e                	mv	a0,a1
    8001200a:	758a                	ld	a1,160(sp)
    8001200c:	764a                	ld	a2,176(sp)
    8001200e:	00012097          	auipc	ra,0x12
    80012012:	852080e7          	jalr	-1966(ra) # 80023860 <memcpy>
    80012016:	a885                	j	80012086 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x1e6>
    80012018:	4501                	li	a0,0
    8001201a:	658d                	lui	a1,0x3
    8001201c:	6885859b          	addiw	a1,a1,1672
    80012020:	958a                	add	a1,a1,sp
    80012022:	e188                	sd	a0,0(a1)
    80012024:	6591                	lui	a1,0x4
    80012026:	cd85859b          	addiw	a1,a1,-808
    8001202a:	958a                	add	a1,a1,sp
    8001202c:	e188                	sd	a0,0(a1)
    8001202e:	6591                	lui	a1,0x4
    80012030:	ce85859b          	addiw	a1,a1,-792
    80012034:	958a                	add	a1,a1,sp
    80012036:	e188                	sd	a0,0(a1)
    80012038:	6591                	lui	a1,0x4
    8001203a:	ce05859b          	addiw	a1,a1,-800
    8001203e:	958a                	add	a1,a1,sp
    80012040:	e188                	sd	a0,0(a1)
        MaybeUninit { value: ManuallyDrop::new(val) }
    80012042:	6591                	lui	a1,0x4
    80012044:	cd05859b          	addiw	a1,a1,-816
    80012048:	958a                	add	a1,a1,sp
    8001204a:	e188                	sd	a0,0(a1)
    8001204c:	a009                	j	8001204e <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x1ae>
    8001204e:	75013503          	ld	a0,1872(sp)
    80012052:	06300593          	li	a1,99
    80012056:	e92a                	sd	a0,144(sp)
    80012058:	18a5e463          	bltu	a1,a0,800121e0 <.LBB13_20>
    8001205c:	a009                	j	8001205e <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x1be>
    8001205e:	654a                	ld	a0,144(sp)
    80012060:	00351593          	slli	a1,a0,0x3
    80012064:	43010613          	addi	a2,sp,1072
    80012068:	95b2                	add	a1,a1,a2
    8001206a:	4601                	li	a2,0
    8001206c:	e190                	sd	a2,0(a1)
    8001206e:	75013583          	ld	a1,1872(sp)
    80012072:	00158613          	addi	a2,a1,1 # 4001 <.Lline_table_start0+0x476>
    80012076:	e532                	sd	a2,136(sp)
    80012078:	18b66063          	bltu	a2,a1,800121f8 <.LBB13_21>
    8001207c:	a009                	j	8001207e <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x1de>
    8001207e:	652a                	ld	a0,136(sp)
    80012080:	74a13823          	sd	a0,1872(sp)
    80012084:	b73d                	j	80011fb2 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x112>
    80012086:	6509                	lui	a0,0x2
    80012088:	0705051b          	addiw	a0,a0,112
    8001208c:	950a                	add	a0,a0,sp
    8001208e:	852a                	mv	a0,a0
    80012090:	6589                	lui	a1,0x2
    80012092:	3985859b          	addiw	a1,a1,920
    80012096:	958a                	add	a1,a1,sp
    80012098:	85ae                	mv	a1,a1
    8001209a:	32800613          	li	a2,808
    8001209e:	e12a                	sd	a0,128(sp)
    800120a0:	fcb2                	sd	a2,120(sp)
    800120a2:	00011097          	auipc	ra,0x11
    800120a6:	7be080e7          	jalr	1982(ra) # 80023860 <memcpy>
    800120aa:	6589                	lui	a1,0x2
    800120ac:	d485859b          	addiw	a1,a1,-696
    800120b0:	958a                	add	a1,a1,sp
    800120b2:	85ae                	mv	a1,a1
    800120b4:	f8aa                	sd	a0,112(sp)
    800120b6:	852e                	mv	a0,a1
    800120b8:	660a                	ld	a2,128(sp)
    800120ba:	f4ae                	sd	a1,104(sp)
    800120bc:	85b2                	mv	a1,a2
    800120be:	7666                	ld	a2,120(sp)
    800120c0:	00011097          	auipc	ra,0x11
    800120c4:	7a0080e7          	jalr	1952(ra) # 80023860 <memcpy>
    800120c8:	6589                	lui	a1,0x2
    800120ca:	a205859b          	addiw	a1,a1,-1504
    800120ce:	958a                	add	a1,a1,sp
    800120d0:	85ae                	mv	a1,a1
        slot.value
    800120d2:	f0aa                	sd	a0,96(sp)
    800120d4:	852e                	mv	a0,a1
    800120d6:	75a6                	ld	a1,104(sp)
    800120d8:	7666                	ld	a2,120(sp)
    800120da:	00011097          	auipc	ra,0x11
    800120de:	786080e7          	jalr	1926(ra) # 80023860 <memcpy>
    800120e2:	a009                	j	800120e4 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x244>
    800120e4:	650d                	lui	a0,0x3
    800120e6:	3485051b          	addiw	a0,a0,840
    800120ea:	950a                	add	a0,a0,sp
    800120ec:	852a                	mv	a0,a0
    800120ee:	6589                	lui	a1,0x2
    800120f0:	a205859b          	addiw	a1,a1,-1504
    800120f4:	958a                	add	a1,a1,sp
    800120f6:	85ae                	mv	a1,a1
    800120f8:	32000613          	li	a2,800
    800120fc:	ecaa                	sd	a0,88(sp)
    800120fe:	e8b2                	sd	a2,80(sp)
    80012100:	00011097          	auipc	ra,0x11
    80012104:	760080e7          	jalr	1888(ra) # 80023860 <memcpy>
    80012108:	6591                	lui	a1,0x4
    8001210a:	9b05859b          	addiw	a1,a1,-1616
    8001210e:	958a                	add	a1,a1,sp
    80012110:	85ae                	mv	a1,a1
        ManuallyDrop { value }
    80012112:	e4aa                	sd	a0,72(sp)
    80012114:	852e                	mv	a0,a1
    80012116:	6666                	ld	a2,88(sp)
    80012118:	e0ae                	sd	a1,64(sp)
    8001211a:	85b2                	mv	a1,a2
    8001211c:	6646                	ld	a2,80(sp)
    8001211e:	00011097          	auipc	ra,0x11
    80012122:	742080e7          	jalr	1858(ra) # 80023860 <memcpy>
    80012126:	658d                	lui	a1,0x3
    80012128:	0285859b          	addiw	a1,a1,40
    8001212c:	958a                	add	a1,a1,sp
    8001212e:	85ae                	mv	a1,a1
    80012130:	fc2a                	sd	a0,56(sp)
    80012132:	852e                	mv	a0,a1
    80012134:	6586                	ld	a1,64(sp)
    80012136:	6646                	ld	a2,80(sp)
    80012138:	00011097          	auipc	ra,0x11
    8001213c:	728080e7          	jalr	1832(ra) # 80023860 <memcpy>
    80012140:	a009                	j	80012142 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x2a2>
    80012142:	650d                	lui	a0,0x3
    80012144:	d085051b          	addiw	a0,a0,-760
    80012148:	950a                	add	a0,a0,sp
    8001214a:	852a                	mv	a0,a0
    8001214c:	658d                	lui	a1,0x3
    8001214e:	0285859b          	addiw	a1,a1,40
    80012152:	958a                	add	a1,a1,sp
    80012154:	85ae                	mv	a1,a1
    80012156:	32000613          	li	a2,800
    8001215a:	f82a                	sd	a0,48(sp)
    8001215c:	f432                	sd	a2,40(sp)
    8001215e:	00011097          	auipc	ra,0x11
    80012162:	702080e7          	jalr	1794(ra) # 80023860 <memcpy>
    80012166:	658d                	lui	a1,0x3
    80012168:	9e85859b          	addiw	a1,a1,-1560
    8001216c:	958a                	add	a1,a1,sp
    8001216e:	85ae                	mv	a1,a1
    80012170:	f02a                	sd	a0,32(sp)
    80012172:	852e                	mv	a0,a1
    80012174:	7642                	ld	a2,48(sp)
    80012176:	ec2e                	sd	a1,24(sp)
    80012178:	85b2                	mv	a1,a2
    8001217a:	7622                	ld	a2,40(sp)
    8001217c:	00011097          	auipc	ra,0x11
    80012180:	6e4080e7          	jalr	1764(ra) # 80023860 <memcpy>
    80012184:	0a0c                	addi	a1,sp,272
        slot.value
    80012186:	e82a                	sd	a0,16(sp)
    80012188:	852e                	mv	a0,a1
    8001218a:	65e2                	ld	a1,24(sp)
    8001218c:	7622                	ld	a2,40(sp)
    8001218e:	00011097          	auipc	ra,0x11
    80012192:	6d2080e7          	jalr	1746(ra) # 80023860 <memcpy>
    80012196:	a009                	j	80012198 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x2f8>
    80012198:	6512                	ld	a0,256(sp)
    8001219a:	0a050513          	addi	a0,a0,160 # 30a0 <.Lline_table_start0+0x57a>
    8001219e:	ffff4097          	auipc	ra,0xffff4
    800121a2:	5ca080e7          	jalr	1482(ra) # 80006768 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E>
    800121a6:	a811                	j	800121ba <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x31a>
    }
    800121a8:	6511                	lui	a0,0x4
    800121aa:	8305051b          	addiw	a0,a0,-2000
    800121ae:	912a                	add	sp,sp,a0
    800121b0:	7e813083          	ld	ra,2024(sp)
    800121b4:	7f010113          	addi	sp,sp,2032
    800121b8:	8082                	ret
        pdata.open_files = array![_ => None; NFILE];
    800121ba:	6512                	ld	a0,256(sp)
    800121bc:	0a050513          	addi	a0,a0,160 # 40a0 <.Lline_table_start0+0x4>
    800121c0:	0a0c                	addi	a1,sp,272
    800121c2:	32000613          	li	a2,800
    800121c6:	00011097          	auipc	ra,0x11
    800121ca:	69a080e7          	jalr	1690(ra) # 80023860 <memcpy>
        pdata.set_kstack(kstack);
    800121ce:	6592                	ld	a1,256(sp)
    800121d0:	e42a                	sd	a0,8(sp)
    800121d2:	852e                	mv	a0,a1
    800121d4:	65b2                	ld	a1,264(sp)
    800121d6:	00000097          	auipc	ra,0x0
    800121da:	94e080e7          	jalr	-1714(ra) # 80011b24 <_ZN6kernel7process7process8ProcData10set_kstack17h2a25c8fe56567b9bE>
    800121de:	b7e9                	j	800121a8 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE+0x308>

00000000800121e0 <.LBB13_20>:
        pdata.open_files = array![_ => None; NFILE];
    800121e0:	00015617          	auipc	a2,0x15
    800121e4:	f0860613          	addi	a2,a2,-248 # 800270e8 <.L__unnamed_6>
    800121e8:	06400593          	li	a1,100
    800121ec:	654a                	ld	a0,144(sp)
    800121ee:	0000f097          	auipc	ra,0xf
    800121f2:	b08080e7          	jalr	-1272(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800121f8 <.LBB13_21>:
    800121f8:	00015517          	auipc	a0,0x15
    800121fc:	e6850513          	addi	a0,a0,-408 # 80027060 <str.0>

0000000080012200 <.LBB13_22>:
    80012200:	00015617          	auipc	a2,0x15
    80012204:	ee860613          	addi	a2,a2,-280 # 800270e8 <.L__unnamed_6>
    80012208:	45f1                	li	a1,28
    8001220a:	0000f097          	auipc	ra,0xf
    8001220e:	ac0080e7          	jalr	-1344(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E:

0000000080012214 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E>:
    pub fn killed(&self) -> bool {
    80012214:	7179                	addi	sp,sp,-48
    80012216:	f406                	sd	ra,40(sp)
    80012218:	ec2a                	sd	a0,24(sp)
        let proc_data = self.meta.acquire();
    8001221a:	ffff0097          	auipc	ra,0xffff0
    8001221e:	4f2080e7          	jalr	1266(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80012222:	e82a                	sd	a0,16(sp)
    80012224:	a009                	j	80012226 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E+0x12>
    80012226:	0808                	addi	a0,sp,16
        let killed = proc_data.killed;
    80012228:	ffff1097          	auipc	ra,0xffff1
    8001222c:	6b4080e7          	jalr	1716(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    80012230:	e42a                	sd	a0,8(sp)
    80012232:	a009                	j	80012234 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E+0x20>
    80012234:	6522                	ld	a0,8(sp)
    80012236:	01950583          	lb	a1,25(a0)
    8001223a:	02b103a3          	sb	a1,39(sp)
        drop(proc_data);
    8001223e:	6542                	ld	a0,16(sp)
    80012240:	e02e                	sd	a1,0(sp)
    80012242:	ffffb097          	auipc	ra,0xffffb
    80012246:	664080e7          	jalr	1636(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001224a:	a009                	j	8001224c <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E+0x38>
    }
    8001224c:	6502                	ld	a0,0(sp)
    8001224e:	8905                	andi	a0,a0,1
    80012250:	70a2                	ld	ra,40(sp)
    80012252:	6145                	addi	sp,sp,48
    80012254:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process3pid17hdf41eeabecdb1516E:

0000000080012256 <_ZN6kernel7process7process7Process3pid17hdf41eeabecdb1516E>:
    pub fn pid(&self) -> usize {
    80012256:	7179                	addi	sp,sp,-48
    80012258:	f406                	sd	ra,40(sp)
    8001225a:	ec2a                	sd	a0,24(sp)
        let proc_data = self.meta.acquire();
    8001225c:	ffff0097          	auipc	ra,0xffff0
    80012260:	4b0080e7          	jalr	1200(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80012264:	e82a                	sd	a0,16(sp)
    80012266:	a009                	j	80012268 <_ZN6kernel7process7process7Process3pid17hdf41eeabecdb1516E+0x12>
    80012268:	0808                	addi	a0,sp,16
        let pid = proc_data.pid;
    8001226a:	ffff1097          	auipc	ra,0xffff1
    8001226e:	672080e7          	jalr	1650(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    80012272:	e42a                	sd	a0,8(sp)
    80012274:	a009                	j	80012276 <_ZN6kernel7process7process7Process3pid17hdf41eeabecdb1516E+0x20>
    80012276:	6522                	ld	a0,8(sp)
    80012278:	690c                	ld	a1,16(a0)
    8001227a:	f02e                	sd	a1,32(sp)
        drop(proc_data);
    8001227c:	6542                	ld	a0,16(sp)
    8001227e:	e02e                	sd	a1,0(sp)
    80012280:	ffffb097          	auipc	ra,0xffffb
    80012284:	626080e7          	jalr	1574(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    80012288:	a009                	j	8001228a <_ZN6kernel7process7process7Process3pid17hdf41eeabecdb1516E+0x34>
    }
    8001228a:	6502                	ld	a0,0(sp)
    8001228c:	70a2                	ld	ra,40(sp)
    8001228e:	6145                	addi	sp,sp,48
    80012290:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process5state17h1667f7db3e6c24ffE:

0000000080012292 <_ZN6kernel7process7process7Process5state17h1667f7db3e6c24ffE>:
    pub fn state(&self) -> ProcState {
    80012292:	7179                	addi	sp,sp,-48
    80012294:	f406                	sd	ra,40(sp)
    80012296:	ec2a                	sd	a0,24(sp)
        let proc_data = self.meta.acquire();
    80012298:	ffff0097          	auipc	ra,0xffff0
    8001229c:	474080e7          	jalr	1140(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    800122a0:	e82a                	sd	a0,16(sp)
    800122a2:	a009                	j	800122a4 <_ZN6kernel7process7process7Process5state17h1667f7db3e6c24ffE+0x12>
    800122a4:	0808                	addi	a0,sp,16
        let state = proc_data.state;
    800122a6:	ffff1097          	auipc	ra,0xffff1
    800122aa:	636080e7          	jalr	1590(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    800122ae:	e42a                	sd	a0,8(sp)
    800122b0:	a009                	j	800122b2 <_ZN6kernel7process7process7Process5state17h1667f7db3e6c24ffE+0x20>
    800122b2:	6522                	ld	a0,8(sp)
    800122b4:	01854583          	lbu	a1,24(a0)
    800122b8:	02b103a3          	sb	a1,39(sp)
        drop(proc_data);
    800122bc:	6542                	ld	a0,16(sp)
    800122be:	e02e                	sd	a1,0(sp)
    800122c0:	ffffb097          	auipc	ra,0xffffb
    800122c4:	5e6080e7          	jalr	1510(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    800122c8:	a009                	j	800122ca <_ZN6kernel7process7process7Process5state17h1667f7db3e6c24ffE+0x38>
    }
    800122ca:	6502                	ld	a0,0(sp)
    800122cc:	70a2                	ld	ra,40(sp)
    800122ce:	6145                	addi	sp,sp,48
    800122d0:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process4name17he6ec11f693a6ee27E:

00000000800122d2 <_ZN6kernel7process7process7Process4name17he6ec11f693a6ee27E>:
    pub fn name(&self) -> &str {
    800122d2:	715d                	addi	sp,sp,-80
    800122d4:	e486                	sd	ra,72(sp)
    800122d6:	fc2a                	sd	a0,56(sp)
        let pdata = unsafe{ &*self.data.get() };
    800122d8:	04050513          	addi	a0,a0,64
    800122dc:	00004097          	auipc	ra,0x4
    800122e0:	6ac080e7          	jalr	1708(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    800122e4:	ec2a                	sd	a0,24(sp)
    800122e6:	a009                	j	800122e8 <_ZN6kernel7process7process7Process4name17he6ec11f693a6ee27E+0x16>
    800122e8:	6562                	ld	a0,24(sp)
    800122ea:	e0aa                	sd	a0,64(sp)
        from_utf8(&pdata.name).unwrap()
    800122ec:	3d850593          	addi	a1,a0,984
    800122f0:	1008                	addi	a0,sp,32
    800122f2:	4641                	li	a2,16
    800122f4:	00010097          	auipc	ra,0x10
    800122f8:	09c080e7          	jalr	156(ra) # 80022390 <_ZN4core3str8converts9from_utf817h36a155da9055aca2E>
    800122fc:	a009                	j	800122fe <.LBB17_4>

00000000800122fe <.LBB17_4>:
    800122fe:	00015597          	auipc	a1,0x15
    80012302:	e0258593          	addi	a1,a1,-510 # 80027100 <.L__unnamed_7>
    80012306:	1008                	addi	a0,sp,32
    80012308:	ffffb097          	auipc	ra,0xffffb
    8001230c:	994080e7          	jalr	-1644(ra) # 8000cc9c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h00a6f548c55f29e9E>
    80012310:	e82a                	sd	a0,16(sp)
    80012312:	e42e                	sd	a1,8(sp)
    80012314:	a009                	j	80012316 <.LBB17_4+0x18>
    }
    80012316:	6542                	ld	a0,16(sp)
    80012318:	65a2                	ld	a1,8(sp)
    8001231a:	60a6                	ld	ra,72(sp)
    8001231c:	6161                	addi	sp,sp,80
    8001231e:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process11modify_kill17h4f8b34885f798bc3E:

0000000080012320 <_ZN6kernel7process7process7Process11modify_kill17h4f8b34885f798bc3E>:
    pub fn modify_kill(&self, killed: bool) {
    80012320:	7179                	addi	sp,sp,-48
    80012322:	f406                	sd	ra,40(sp)
    80012324:	862e                	mv	a2,a1
    80012326:	ec2a                	sd	a0,24(sp)
    80012328:	02b103a3          	sb	a1,39(sp)
        let mut proc_data = self.meta.acquire();
    8001232c:	e432                	sd	a2,8(sp)
    8001232e:	ffff0097          	auipc	ra,0xffff0
    80012332:	3de080e7          	jalr	990(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80012336:	e82a                	sd	a0,16(sp)
    80012338:	a009                	j	8001233a <_ZN6kernel7process7process7Process11modify_kill17h4f8b34885f798bc3E+0x1a>
    8001233a:	0808                	addi	a0,sp,16
        proc_data.killed = killed;
    8001233c:	ffff1097          	auipc	ra,0xffff1
    80012340:	6be080e7          	jalr	1726(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80012344:	e02a                	sd	a0,0(sp)
    80012346:	a009                	j	80012348 <_ZN6kernel7process7process7Process11modify_kill17h4f8b34885f798bc3E+0x28>
    80012348:	6522                	ld	a0,8(sp)
    8001234a:	6582                	ld	a1,0(sp)
    8001234c:	00a58ca3          	sb	a0,25(a1)
        drop(proc_data);
    80012350:	6542                	ld	a0,16(sp)
    80012352:	ffffb097          	auipc	ra,0xffffb
    80012356:	554080e7          	jalr	1364(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001235a:	a009                	j	8001235c <_ZN6kernel7process7process7Process11modify_kill17h4f8b34885f798bc3E+0x3c>
    }
    8001235c:	70a2                	ld	ra,40(sp)
    8001235e:	6145                	addi	sp,sp,48
    80012360:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process10page_table17hbf36808f3c33898dE:

0000000080012362 <_ZN6kernel7process7process7Process10page_table17hbf36808f3c33898dE>:
    pub fn page_table(&self) -> &mut Box<PageTable> {
    80012362:	7139                	addi	sp,sp,-64
    80012364:	fc06                	sd	ra,56(sp)
    80012366:	f02a                	sd	a0,32(sp)
        let pdata = unsafe{ &mut *self.data.get() };
    80012368:	04050513          	addi	a0,a0,64
    8001236c:	00004097          	auipc	ra,0x4
    80012370:	61c080e7          	jalr	1564(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80012374:	ec2a                	sd	a0,24(sp)
    80012376:	a009                	j	80012378 <_ZN6kernel7process7process7Process10page_table17hbf36808f3c33898dE+0x16>
    80012378:	6562                	ld	a0,24(sp)
    8001237a:	f42a                	sd	a0,40(sp)
        let page_table = pdata.pagetable.as_mut().expect("Fail to get page table");
    8001237c:	0541                	addi	a0,a0,16
    8001237e:	00006097          	auipc	ra,0x6
    80012382:	4b6080e7          	jalr	1206(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    80012386:	e82a                	sd	a0,16(sp)
    80012388:	a009                	j	8001238a <.LBB19_4>

000000008001238a <.LBB19_4>:
    8001238a:	00015597          	auipc	a1,0x15
    8001238e:	d8e58593          	addi	a1,a1,-626 # 80027118 <.L__unnamed_8>

0000000080012392 <.LBB19_5>:
    80012392:	00015697          	auipc	a3,0x15
    80012396:	d9e68693          	addi	a3,a3,-610 # 80027130 <.L__unnamed_9>
    8001239a:	4659                	li	a2,22
    8001239c:	6542                	ld	a0,16(sp)
    8001239e:	00006097          	auipc	ra,0x6
    800123a2:	650080e7          	jalr	1616(ra) # 800189ee <_ZN4core6option15Option$LT$T$GT$6expect17ha380aa9e3ff77169E>
    800123a6:	85aa                	mv	a1,a0
    800123a8:	f82a                	sd	a0,48(sp)
    800123aa:	e42e                	sd	a1,8(sp)
    800123ac:	a009                	j	800123ae <.LBB19_5+0x1c>
    }
    800123ae:	6522                	ld	a0,8(sp)
    800123b0:	70e2                	ld	ra,56(sp)
    800123b2:	6121                	addi	sp,sp,64
    800123b4:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process14proc_pagetable17hb961113e51c17512E:

00000000800123b6 <_ZN6kernel7process7process7Process14proc_pagetable17hb961113e51c17512E>:
    pub fn proc_pagetable(&self) -> Option<Box<PageTable>> {
    800123b6:	7135                	addi	sp,sp,-160
    800123b8:	ed06                	sd	ra,152(sp)
    800123ba:	e92a                	sd	a0,144(sp)
        let mut page_table = unsafe{ PageTable::uvmcreate() };
    800123bc:	fcaa                	sd	a0,120(sp)
    800123be:	ffffd097          	auipc	ra,0xffffd
    800123c2:	004080e7          	jalr	4(ra) # 8000f3c2 <_ZN6kernel6memory7mapping10page_table9PageTable9uvmcreate17hf0fd6239d321762dE>
    800123c6:	e52a                	sd	a0,136(sp)
    800123c8:	a009                	j	800123ca <_ZN6kernel7process7process7Process14proc_pagetable17hb961113e51c17512E+0x14>
            if !page_table.map(
    800123ca:	652a                	ld	a0,136(sp)
    800123cc:	040005b7          	lui	a1,0x4000
    800123d0:	35fd                	addiw	a1,a1,-1
    800123d2:	05b2                	slli	a1,a1,0xc
            VirtualAddress::new(TRAMPOLINE), 
    800123d4:	f8aa                	sd	a0,112(sp)
    800123d6:	852e                	mv	a0,a1
    800123d8:	ffff5097          	auipc	ra,0xffff5
    800123dc:	740080e7          	jalr	1856(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    800123e0:	f4aa                	sd	a0,104(sp)
    800123e2:	a009                	j	800123e4 <.LBB20_23>

00000000800123e4 <.LBB20_23>:
            PhysicalAddress::new(trampoline as usize),
    800123e4:	fffef517          	auipc	a0,0xfffef
    800123e8:	c1c50513          	addi	a0,a0,-996 # 80001000 <trampoline>
    800123ec:	ffff5097          	auipc	ra,0xffff5
    800123f0:	7dc080e7          	jalr	2012(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    800123f4:	f0aa                	sd	a0,96(sp)
    800123f6:	a009                	j	800123f8 <.LBB20_23+0x14>
    800123f8:	4509                	li	a0,2
    800123fa:	45a1                	li	a1,8
             PteFlags::R | PteFlags::X
    800123fc:	ffff6097          	auipc	ra,0xffff6
    80012400:	94c080e7          	jalr	-1716(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80012404:	ecaa                	sd	a0,88(sp)
    80012406:	a009                	j	80012408 <.LBB20_23+0x24>
    80012408:	6685                	lui	a3,0x1
            if !page_table.map(
    8001240a:	7546                	ld	a0,112(sp)
    8001240c:	75a6                	ld	a1,104(sp)
    8001240e:	7606                	ld	a2,96(sp)
    80012410:	6766                	ld	a4,88(sp)
    80012412:	ffffd097          	auipc	ra,0xffffd
    80012416:	d7e080e7          	jalr	-642(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    8001241a:	e8aa                	sd	a0,80(sp)
    8001241c:	a009                	j	8001241e <.LBB20_23+0x3a>
    8001241e:	6546                	ld	a0,80(sp)
    80012420:	e909                	bnez	a0,80012432 <.LBB20_23+0x4e>
    80012422:	a009                	j	80012424 <.LBB20_23+0x40>
                page_table.uvm_free(0);
    80012424:	652a                	ld	a0,136(sp)
    80012426:	4581                	li	a1,0
    80012428:	ffffd097          	auipc	ra,0xffffd
    8001242c:	214080e7          	jalr	532(ra) # 8000f63c <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE>
    80012430:	a831                	j	8001244c <.LBB20_23+0x68>
            if !page_table.map(
    80012432:	652a                	ld	a0,136(sp)
    80012434:	020005b7          	lui	a1,0x2000
    80012438:	35fd                	addiw	a1,a1,-1
    8001243a:	05b6                	slli	a1,a1,0xd
                VirtualAddress::new(TRAPFRAME), 
    8001243c:	e4aa                	sd	a0,72(sp)
    8001243e:	852e                	mv	a0,a1
    80012440:	ffff5097          	auipc	ra,0xffff5
    80012444:	6d8080e7          	jalr	1752(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80012448:	e0aa                	sd	a0,64(sp)
    8001244a:	a021                	j	80012452 <.LBB20_23+0x6e>
    8001244c:	4501                	li	a0,0
                return None
    8001244e:	e12a                	sd	a0,128(sp)
    80012450:	a065                	j	800124f8 <.LBB20_23+0x114>
                PhysicalAddress::new((&*self.data.get()).get_trapframe() as usize), 
    80012452:	7566                	ld	a0,120(sp)
    80012454:	04050513          	addi	a0,a0,64
    80012458:	00004097          	auipc	ra,0x4
    8001245c:	530080e7          	jalr	1328(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80012460:	fc2a                	sd	a0,56(sp)
    80012462:	a009                	j	80012464 <.LBB20_23+0x80>
    80012464:	7562                	ld	a0,56(sp)
    80012466:	fffff097          	auipc	ra,0xfffff
    8001246a:	64a080e7          	jalr	1610(ra) # 80011ab0 <_ZN6kernel7process7process8ProcData13get_trapframe17he132b677f52335f2E>
    8001246e:	f82a                	sd	a0,48(sp)
    80012470:	a009                	j	80012472 <.LBB20_23+0x8e>
    80012472:	7542                	ld	a0,48(sp)
    80012474:	ffff5097          	auipc	ra,0xffff5
    80012478:	754080e7          	jalr	1876(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    8001247c:	f42a                	sd	a0,40(sp)
    8001247e:	a009                	j	80012480 <.LBB20_23+0x9c>
    80012480:	4509                	li	a0,2
    80012482:	4591                	li	a1,4
                PteFlags::R | PteFlags::W
    80012484:	ffff6097          	auipc	ra,0xffff6
    80012488:	8c4080e7          	jalr	-1852(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8001248c:	f02a                	sd	a0,32(sp)
    8001248e:	a009                	j	80012490 <.LBB20_23+0xac>
    80012490:	6685                	lui	a3,0x1
            if !page_table.map(
    80012492:	6526                	ld	a0,72(sp)
    80012494:	6586                	ld	a1,64(sp)
    80012496:	7622                	ld	a2,40(sp)
    80012498:	7702                	ld	a4,32(sp)
    8001249a:	ffffd097          	auipc	ra,0xffffd
    8001249e:	cf6080e7          	jalr	-778(ra) # 8000f190 <_ZN6kernel6memory7mapping10page_table9PageTable3map17h49f8cfe23330bf38E>
    800124a2:	ec2a                	sd	a0,24(sp)
    800124a4:	a009                	j	800124a6 <.LBB20_23+0xc2>
    800124a6:	6562                	ld	a0,24(sp)
    800124a8:	ed19                	bnez	a0,800124c6 <.LBB20_23+0xe2>
    800124aa:	a009                	j	800124ac <.LBB20_23+0xc8>
                page_table.uvm_unmap(
    800124ac:	652a                	ld	a0,136(sp)
    800124ae:	020005b7          	lui	a1,0x2000
    800124b2:	35fd                	addiw	a1,a1,-1
    800124b4:	05b6                	slli	a1,a1,0xd
                    VirtualAddress::new(TRAPFRAME), 
    800124b6:	e82a                	sd	a0,16(sp)
    800124b8:	852e                	mv	a0,a1
    800124ba:	ffff5097          	auipc	ra,0xffff5
    800124be:	65e080e7          	jalr	1630(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    800124c2:	e42a                	sd	a0,8(sp)
    800124c4:	a021                	j	800124cc <.LBB20_23+0xe8>
        Some(page_table)
    800124c6:	652a                	ld	a0,136(sp)
    800124c8:	e12a                	sd	a0,128(sp)
    }
    800124ca:	a835                	j	80012506 <.LBB20_23+0x122>
    800124cc:	4605                	li	a2,1
    800124ce:	4501                	li	a0,0
                page_table.uvm_unmap(
    800124d0:	65c2                	ld	a1,16(sp)
    800124d2:	e02a                	sd	a0,0(sp)
    800124d4:	852e                	mv	a0,a1
    800124d6:	65a2                	ld	a1,8(sp)
    800124d8:	6682                	ld	a3,0(sp)
    800124da:	ffffd097          	auipc	ra,0xffffd
    800124de:	2b6080e7          	jalr	694(ra) # 8000f790 <_ZN6kernel6memory7mapping10page_table9PageTable9uvm_unmap17hea2f5c5af6413a9dE>
    800124e2:	a009                	j	800124e4 <.LBB20_23+0x100>
                page_table.uvm_free(0);
    800124e4:	652a                	ld	a0,136(sp)
    800124e6:	4581                	li	a1,0
    800124e8:	ffffd097          	auipc	ra,0xffffd
    800124ec:	154080e7          	jalr	340(ra) # 8000f63c <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_free17h5efcf06436f282bdE>
    800124f0:	a009                	j	800124f2 <.LBB20_23+0x10e>
    800124f2:	4501                	li	a0,0
                return None
    800124f4:	e12a                	sd	a0,128(sp)
    800124f6:	a009                	j	800124f8 <.LBB20_23+0x114>
    800124f8:	0128                	addi	a0,sp,136
    }
    800124fa:	ffff4097          	auipc	ra,0xffff4
    800124fe:	4d8080e7          	jalr	1240(ra) # 800069d2 <_ZN4core3ptr92drop_in_place$LT$alloc..boxed..Box$LT$kernel..memory..mapping..page_table..PageTable$GT$$GT$17h88c2a927f61a60b4E>
    80012502:	a009                	j	80012504 <.LBB20_23+0x120>
    80012504:	a009                	j	80012506 <.LBB20_23+0x122>
    80012506:	650a                	ld	a0,128(sp)
    80012508:	60ea                	ld	ra,152(sp)
    8001250a:	610d                	addi	sp,sp,160
    8001250c:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E:

000000008001250e <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E>:
    pub fn free_proc(&mut self) {
    8001250e:	7131                	addi	sp,sp,-192
    80012510:	fd06                	sd	ra,184(sp)
    80012512:	f12a                	sd	a0,160(sp)
        let mut pdata = self.data.get_mut();
    80012514:	04050593          	addi	a1,a0,64
    80012518:	f0aa                	sd	a0,96(sp)
    8001251a:	852e                	mv	a0,a1
    8001251c:	00004097          	auipc	ra,0x4
    80012520:	4ae080e7          	jalr	1198(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    80012524:	85aa                	mv	a1,a0
    80012526:	f52a                	sd	a0,168(sp)
    80012528:	ecae                	sd	a1,88(sp)
    8001252a:	a009                	j	8001252c <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x1e>
        if !pdata.trapframe.is_null() {
    8001252c:	6566                	ld	a0,88(sp)
    8001252e:	6d08                	ld	a0,24(a0)
    80012530:	ffff9097          	auipc	ra,0xffff9
    80012534:	7ea080e7          	jalr	2026(ra) # 8000bd1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha63ccb022a5e88e2E>
    80012538:	e8aa                	sd	a0,80(sp)
    8001253a:	a009                	j	8001253c <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x2e>
    8001253c:	6546                	ld	a0,80(sp)
    8001253e:	e909                	bnez	a0,80012550 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x42>
    80012540:	a009                	j	80012542 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x34>
            drop(pdata.trapframe as *mut RawPage);
    80012542:	6566                	ld	a0,88(sp)
    80012544:	6d08                	ld	a0,24(a0)
    80012546:	ffffb097          	auipc	ra,0xffffb
    8001254a:	412080e7          	jalr	1042(ra) # 8000d958 <_ZN4core3mem4drop17h786520b567300594E>
    8001254e:	a011                	j	80012552 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x44>
        if !pdata.trapframe.is_null() {
    80012550:	aa01                	j	80012660 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x152>
    80012552:	4501                	li	a0,0
            pdata.set_trapframe(0 as *mut Trapframe);
    80012554:	65e6                	ld	a1,88(sp)
    80012556:	e4aa                	sd	a0,72(sp)
    80012558:	852e                	mv	a0,a1
    8001255a:	65a6                	ld	a1,72(sp)
    8001255c:	fffff097          	auipc	ra,0xfffff
    80012560:	5d4080e7          	jalr	1492(ra) # 80011b30 <_ZN6kernel7process7process8ProcData13set_trapframe17hccbafe988ea9307eE>
    80012564:	a009                	j	80012566 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x58>
            if let Some(page_table) = pdata.pagetable.as_mut() {
    80012566:	6566                	ld	a0,88(sp)
    80012568:	0541                	addi	a0,a0,16
    8001256a:	00006097          	auipc	ra,0x6
    8001256e:	2ca080e7          	jalr	714(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    80012572:	f8aa                	sd	a0,112(sp)
    80012574:	a009                	j	80012576 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x68>
    80012576:	7546                	ld	a0,112(sp)
    80012578:	4581                	li	a1,0
    8001257a:	00b51463          	bne	a0,a1,80012582 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x74>
    8001257e:	a009                	j	80012580 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x72>
    80012580:	a821                	j	80012598 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x8a>
    80012582:	7546                	ld	a0,112(sp)
    80012584:	f92a                	sd	a0,176(sp)
                page_table.proc_free_pagetable(pdata.size);
    80012586:	6108                	ld	a0,0(a0)
    80012588:	65e6                	ld	a1,88(sp)
    8001258a:	658c                	ld	a1,8(a1)
    8001258c:	ffffe097          	auipc	ra,0xffffe
    80012590:	dfe080e7          	jalr	-514(ra) # 8001038a <_ZN6kernel6memory7mapping10page_table9PageTable19proc_free_pagetable17ha43577c2d8a44c55E>
    80012594:	a009                	j	80012596 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x88>
            if let Some(page_table) = pdata.pagetable.as_mut() {
    80012596:	a009                	j	80012598 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x8a>
            let mut guard = self.meta.acquire();
    80012598:	7506                	ld	a0,96(sp)
    8001259a:	ffff0097          	auipc	ra,0xffff0
    8001259e:	172080e7          	jalr	370(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    800125a2:	fcaa                	sd	a0,120(sp)
    800125a4:	a009                	j	800125a6 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x98>
    800125a6:	4501                	li	a0,0
            pdata.set_pagetable(None);
    800125a8:	e12a                	sd	a0,128(sp)
    800125aa:	65e6                	ld	a1,88(sp)
    800125ac:	e0aa                	sd	a0,64(sp)
    800125ae:	852e                	mv	a0,a1
    800125b0:	6586                	ld	a1,64(sp)
    800125b2:	fffff097          	auipc	ra,0xfffff
    800125b6:	58a080e7          	jalr	1418(ra) # 80011b3c <_ZN6kernel7process7process8ProcData13set_pagetable17h45947c1d7b3a335eE>
    800125ba:	a009                	j	800125bc <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0xae>
    800125bc:	4501                	li	a0,0
            pdata.set_parent(None);
    800125be:	e52a                	sd	a0,136(sp)
    800125c0:	664a                	ld	a2,144(sp)
    800125c2:	65e6                	ld	a1,88(sp)
    800125c4:	fc2a                	sd	a0,56(sp)
    800125c6:	852e                	mv	a0,a1
    800125c8:	75e2                	ld	a1,56(sp)
    800125ca:	fffff097          	auipc	ra,0xfffff
    800125ce:	54a080e7          	jalr	1354(ra) # 80011b14 <_ZN6kernel7process7process8ProcData10set_parent17h4129c6e07e6f4fb6E>
    800125d2:	a009                	j	800125d4 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0xc6>
    800125d4:	4501                	li	a0,0
            pdata.size = 0;
    800125d6:	65e6                	ld	a1,88(sp)
    800125d8:	e588                	sd	a0,8(a1)
    800125da:	18a8                	addi	a0,sp,120
            guard.pid = 0;
    800125dc:	ffff1097          	auipc	ra,0xffff1
    800125e0:	41e080e7          	jalr	1054(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    800125e4:	f82a                	sd	a0,48(sp)
    800125e6:	a009                	j	800125e8 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0xda>
    800125e8:	4501                	li	a0,0
    800125ea:	75c2                	ld	a1,48(sp)
    800125ec:	e988                	sd	a0,16(a1)
    800125ee:	18a8                	addi	a0,sp,120
            guard.channel = 0;
    800125f0:	ffff1097          	auipc	ra,0xffff1
    800125f4:	40a080e7          	jalr	1034(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    800125f8:	f42a                	sd	a0,40(sp)
    800125fa:	a009                	j	800125fc <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0xee>
    800125fc:	4501                	li	a0,0
    800125fe:	75a2                	ld	a1,40(sp)
    80012600:	e188                	sd	a0,0(a1)
    80012602:	18a8                	addi	a0,sp,120
            guard.killed = false;
    80012604:	ffff1097          	auipc	ra,0xffff1
    80012608:	3f6080e7          	jalr	1014(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001260c:	f02a                	sd	a0,32(sp)
    8001260e:	a009                	j	80012610 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x102>
    80012610:	4501                	li	a0,0
    80012612:	7582                	ld	a1,32(sp)
    80012614:	00a58ca3          	sb	a0,25(a1) # 2000019 <.Lline_table_start0+0x1fc7cd2>
    80012618:	18a8                	addi	a0,sp,120
            guard.xstate = 0;
    8001261a:	ffff1097          	auipc	ra,0xffff1
    8001261e:	3e0080e7          	jalr	992(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80012622:	ec2a                	sd	a0,24(sp)
    80012624:	a009                	j	80012626 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x118>
    80012626:	4501                	li	a0,0
    80012628:	65e2                	ld	a1,24(sp)
    8001262a:	e588                	sd	a0,8(a1)
    8001262c:	18a8                	addi	a0,sp,120
            guard.set_state(ProcState::UNUSED);
    8001262e:	ffff1097          	auipc	ra,0xffff1
    80012632:	3cc080e7          	jalr	972(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80012636:	e82a                	sd	a0,16(sp)
    80012638:	a009                	j	8001263a <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x12c>
    8001263a:	4501                	li	a0,0
    8001263c:	08a10fa3          	sb	a0,159(sp)
    80012640:	65c2                	ld	a1,16(sp)
    80012642:	e42a                	sd	a0,8(sp)
    80012644:	852e                	mv	a0,a1
    80012646:	65a2                	ld	a1,8(sp)
    80012648:	fffff097          	auipc	ra,0xfffff
    8001264c:	456080e7          	jalr	1110(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    80012650:	a009                	j	80012652 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x144>
            drop(guard);
    80012652:	7566                	ld	a0,120(sp)
    80012654:	ffffb097          	auipc	ra,0xffffb
    80012658:	252080e7          	jalr	594(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001265c:	a009                	j	8001265e <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x150>
        if !pdata.trapframe.is_null() {
    8001265e:	a009                	j	80012660 <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E+0x152>
    }
    80012660:	70ea                	ld	ra,184(sp)
    80012662:	6129                	addi	sp,sp,192
    80012664:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E:

0000000080012666 <_ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E>:
    pub fn yielding(&mut self) {
    80012666:	7159                	addi	sp,sp,-112
    80012668:	f486                	sd	ra,104(sp)
    8001266a:	e8aa                	sd	a0,80(sp)
        let mut pmeta = self.meta.acquire();
    8001266c:	fc2a                	sd	a0,56(sp)
    8001266e:	ffff0097          	auipc	ra,0xffff0
    80012672:	09e080e7          	jalr	158(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80012676:	e0aa                	sd	a0,64(sp)
    80012678:	a009                	j	8001267a <_ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E+0x14>
        let ctx = self.data.get_mut().get_context_mut();
    8001267a:	7562                	ld	a0,56(sp)
    8001267c:	04050513          	addi	a0,a0,64
    80012680:	00004097          	auipc	ra,0x4
    80012684:	34a080e7          	jalr	842(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    80012688:	f82a                	sd	a0,48(sp)
    8001268a:	a009                	j	8001268c <_ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E+0x26>
    8001268c:	7542                	ld	a0,48(sp)
    8001268e:	fffff097          	auipc	ra,0xfffff
    80012692:	4d6080e7          	jalr	1238(ra) # 80011b64 <_ZN6kernel7process7process8ProcData15get_context_mut17h7e68f558586812b3E>
    80012696:	85aa                	mv	a1,a0
    80012698:	ecaa                	sd	a0,88(sp)
    8001269a:	f42e                	sd	a1,40(sp)
    8001269c:	a009                	j	8001269e <_ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E+0x38>
    8001269e:	0088                	addi	a0,sp,64
        pmeta.set_state(ProcState::RUNNABLE);
    800126a0:	ffff1097          	auipc	ra,0xffff1
    800126a4:	35a080e7          	jalr	858(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    800126a8:	f02a                	sd	a0,32(sp)
    800126aa:	a009                	j	800126ac <_ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E+0x46>
    800126ac:	450d                	li	a0,3
    800126ae:	04a107a3          	sb	a0,79(sp)
    800126b2:	7582                	ld	a1,32(sp)
    800126b4:	ec2a                	sd	a0,24(sp)
    800126b6:	852e                	mv	a0,a1
    800126b8:	65e2                	ld	a1,24(sp)
    800126ba:	fffff097          	auipc	ra,0xfffff
    800126be:	3e4080e7          	jalr	996(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    800126c2:	a009                	j	800126c4 <.LBB22_9>

00000000800126c4 <.LBB22_9>:
            let my_cpu = CPU_MANAGER.mycpu();
    800126c4:	0005d517          	auipc	a0,0x5d
    800126c8:	93c50513          	addi	a0,a0,-1732 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    800126cc:	0000b097          	auipc	ra,0xb
    800126d0:	020080e7          	jalr	32(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    800126d4:	85aa                	mv	a1,a0
    800126d6:	f0aa                	sd	a0,96(sp)
    800126d8:	e82e                	sd	a1,16(sp)
    800126da:	a009                	j	800126dc <.LBB22_9+0x18>
                pmeta,
    800126dc:	6586                	ld	a1,64(sp)
            pmeta = my_cpu.sched(
    800126de:	6542                	ld	a0,16(sp)
    800126e0:	7622                	ld	a2,40(sp)
    800126e2:	0000b097          	auipc	ra,0xb
    800126e6:	29c080e7          	jalr	668(ra) # 8001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>
    800126ea:	e42a                	sd	a0,8(sp)
    800126ec:	a009                	j	800126ee <.LBB22_9+0x2a>
    800126ee:	6522                	ld	a0,8(sp)
    800126f0:	e0aa                	sd	a0,64(sp)
        drop(pmeta)
    800126f2:	ffffb097          	auipc	ra,0xffffb
    800126f6:	1b4080e7          	jalr	436(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    800126fa:	a009                	j	800126fc <.LBB22_9+0x38>
    }
    800126fc:	70a6                	ld	ra,104(sp)
    800126fe:	6165                	addi	sp,sp,112
    80012700:	8082                	ret

Disassembly of section .text._ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E:

0000000080012702 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E>:

    /// Find a unallocated fd
    pub fn fd_alloc(&mut self, file: &VFile) -> Result<usize, &'static str>{
    80012702:	7151                	addi	sp,sp,-240
    80012704:	f586                	sd	ra,232(sp)
    80012706:	f92e                	sd	a1,176(sp)
    80012708:	fd32                	sd	a2,184(sp)
        let pdata = unsafe {
            &mut *self.data.get()
    8001270a:	04058593          	addi	a1,a1,64
    8001270e:	f82a                	sd	a0,48(sp)
    80012710:	852e                	mv	a0,a1
    80012712:	f432                	sd	a2,40(sp)
    80012714:	00004097          	auipc	ra,0x4
    80012718:	274080e7          	jalr	628(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8001271c:	f02a                	sd	a0,32(sp)
    8001271e:	a009                	j	80012720 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0x1e>
    80012720:	7502                	ld	a0,32(sp)
    80012722:	e1aa                	sd	a0,192(sp)
    80012724:	0888                	addi	a0,sp,80
        };
        let fd = pdata.find_unallocated_fd()?;
    80012726:	7582                	ld	a1,32(sp)
    80012728:	fffff097          	auipc	ra,0xfffff
    8001272c:	4c4080e7          	jalr	1220(ra) # 80011bec <_ZN6kernel7process7process8ProcData19find_unallocated_fd17hc5ec1fc96b4be3c1E>
    80012730:	a009                	j	80012732 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0x30>
    80012732:	1828                	addi	a0,sp,56
    80012734:	088c                	addi	a1,sp,80
    80012736:	ffffa097          	auipc	ra,0xffffa
    8001273a:	7ca080e7          	jalr	1994(ra) # 8000cf00 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h98bd22b69e1dae52E>
    8001273e:	a009                	j	80012740 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0x3e>
    80012740:	7562                	ld	a0,56(sp)
    80012742:	4581                	li	a1,0
    80012744:	00b50463          	beq	a0,a1,8001274c <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0x4a>
    80012748:	a009                	j	8001274a <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0x48>
    8001274a:	a83d                	j	80012788 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0x86>
    8001274c:	6506                	ld	a0,64(sp)
    8001274e:	edaa                	sd	a0,216(sp)
    80012750:	f1aa                	sd	a0,224(sp)
        pdata.open_files[fd] = Some(Arc::new(*file));
    80012752:	75a2                	ld	a1,40(sp)
    80012754:	6190                	ld	a2,0(a1)
    80012756:	f8b2                	sd	a2,112(sp)
    80012758:	6590                	ld	a2,8(a1)
    8001275a:	fcb2                	sd	a2,120(sp)
    8001275c:	6990                	ld	a2,16(a1)
    8001275e:	e132                	sd	a2,128(sp)
    80012760:	6d90                	ld	a2,24(a1)
    80012762:	e532                	sd	a2,136(sp)
    80012764:	7190                	ld	a2,32(a1)
    80012766:	e932                	sd	a2,144(sp)
    80012768:	7590                	ld	a2,40(a1)
    8001276a:	ed32                	sd	a2,152(sp)
    8001276c:	7990                	ld	a2,48(a1)
    8001276e:	f132                	sd	a2,160(sp)
    80012770:	7d90                	ld	a2,56(a1)
    80012772:	f532                	sd	a2,168(sp)
    80012774:	1890                	addi	a2,sp,112
    80012776:	ec2a                	sd	a0,24(sp)
    80012778:	8532                	mv	a0,a2
    8001277a:	ffff5097          	auipc	ra,0xffff5
    8001277e:	86a080e7          	jalr	-1942(ra) # 80006fe4 <_ZN5alloc4sync12Arc$LT$T$GT$3new17h51b119be6cccd1aeE>
    80012782:	e82a                	sd	a0,16(sp)
    80012784:	a035                	j	800127b0 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0xae>
        let fd = pdata.find_unallocated_fd()?;
    80012786:	0000                	unimp
    80012788:	6506                	ld	a0,64(sp)
    8001278a:	65a6                	ld	a1,72(sp)
    8001278c:	e5aa                	sd	a0,200(sp)
    8001278e:	e9ae                	sd	a1,208(sp)
    80012790:	00007097          	auipc	ra,0x7
    80012794:	a54080e7          	jalr	-1452(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    80012798:	e42a                	sd	a0,8(sp)
    8001279a:	e02e                	sd	a1,0(sp)
    8001279c:	a009                	j	8001279e <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0x9c>
    8001279e:	7542                	ld	a0,48(sp)
    800127a0:	65a2                	ld	a1,8(sp)
    800127a2:	6602                	ld	a2,0(sp)
    800127a4:	ffffa097          	auipc	ra,0xffffa
    800127a8:	6d4080e7          	jalr	1748(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    800127ac:	a009                	j	800127ae <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0xac>
        Ok(fd)       
    } 
    800127ae:	a02d                	j	800127d8 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0xd6>
        pdata.open_files[fd] = Some(Arc::new(*file));
    800127b0:	6542                	ld	a0,16(sp)
    800127b2:	f4aa                	sd	a0,104(sp)
    800127b4:	06300593          	li	a1,99
    800127b8:	6662                	ld	a2,24(sp)
    800127ba:	02c5ee63          	bltu	a1,a2,800127f6 <.LBB23_15>
    800127be:	a009                	j	800127c0 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0xbe>
    800127c0:	6562                	ld	a0,24(sp)
    800127c2:	00351593          	slli	a1,a0,0x3
    800127c6:	7602                	ld	a2,32(sp)
    800127c8:	95b2                	add	a1,a1,a2
    800127ca:	0a058513          	addi	a0,a1,160
    800127ce:	ffff4097          	auipc	ra,0xffff4
    800127d2:	264080e7          	jalr	612(ra) # 80006a32 <_ZN4core3ptr96drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$GT$17h93789b9261910d58E>
    800127d6:	a021                	j	800127de <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0xdc>
    } 
    800127d8:	70ae                	ld	ra,232(sp)
    800127da:	616d                	addi	sp,sp,240
    800127dc:	8082                	ret
        pdata.open_files[fd] = Some(Arc::new(*file));
    800127de:	6562                	ld	a0,24(sp)
    800127e0:	00351593          	slli	a1,a0,0x3
    800127e4:	7602                	ld	a2,32(sp)
    800127e6:	95b2                	add	a1,a1,a2
    800127e8:	76a6                	ld	a3,104(sp)
    800127ea:	f1d4                	sd	a3,160(a1)
        Ok(fd)       
    800127ec:	75c2                	ld	a1,48(sp)
    800127ee:	e588                	sd	a0,8(a1)
    800127f0:	4681                	li	a3,0
    800127f2:	e194                	sd	a3,0(a1)
    } 
    800127f4:	b7d5                	j	800127d8 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E+0xd6>

00000000800127f6 <.LBB23_15>:
        pdata.open_files[fd] = Some(Arc::new(*file));
    800127f6:	00015617          	auipc	a2,0x15
    800127fa:	95260613          	addi	a2,a2,-1710 # 80027148 <.L__unnamed_10>
    800127fe:	06400593          	li	a1,100
    80012802:	6562                	ld	a0,24(sp)
    80012804:	0000e097          	auipc	ra,0xe
    80012808:	4f2080e7          	jalr	1266(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7process7process7Process4fork17h8d67dc5c1c963a62E:

000000008001280e <_ZN6kernel7process7process7Process4fork17h8d67dc5c1c963a62E>:

    pub fn fork(&mut self) -> Option<&mut Self> {
    8001280e:	7111                	addi	sp,sp,-256
    80012810:	fd86                	sd	ra,248(sp)
    80012812:	e1aa                	sd	a0,192(sp)

0000000080012814 <.LBB24_23>:
        // 从表中获取未被分配的子进程
        if let Some(child_proc) = unsafe{ PROC_MANAGER.alloc_proc() } {
    80012814:	00049597          	auipc	a1,0x49
    80012818:	6ec58593          	addi	a1,a1,1772 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8001281c:	f4aa                	sd	a0,104(sp)
    8001281e:	852e                	mv	a0,a1
    80012820:	0000a097          	auipc	ra,0xa
    80012824:	32e080e7          	jalr	814(ra) # 8001cb4e <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E>
    80012828:	fcaa                	sd	a0,120(sp)
    8001282a:	a009                	j	8001282c <.LBB24_23+0x18>
    8001282c:	7566                	ld	a0,120(sp)
    8001282e:	4581                	li	a1,0
    80012830:	00b51663          	bne	a0,a1,8001283c <.LBB24_23+0x28>
    80012834:	a009                	j	80012836 <.LBB24_23+0x22>
    80012836:	4501                	li	a0,0
            child_data.parent = Some(self as *mut Process);
            drop(wait);

            Some(child_proc)
        }else {
            None
    80012838:	f8aa                	sd	a0,112(sp)
        if let Some(child_proc) = unsafe{ PROC_MANAGER.alloc_proc() } {
    8001283a:	ac25                	j	80012a72 <.LBB24_28+0x3a>
    8001283c:	7566                	ld	a0,120(sp)
    8001283e:	e5aa                	sd	a0,200(sp)
            let pdata = unsafe{ &mut *self.data.get() };
    80012840:	75a6                	ld	a1,104(sp)
    80012842:	04058613          	addi	a2,a1,64
    80012846:	f0aa                	sd	a0,96(sp)
    80012848:	8532                	mv	a0,a2
    8001284a:	00004097          	auipc	ra,0x4
    8001284e:	13e080e7          	jalr	318(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80012852:	ecaa                	sd	a0,88(sp)
    80012854:	a009                	j	80012856 <.LBB24_23+0x42>
    80012856:	6566                	ld	a0,88(sp)
    80012858:	e9aa                	sd	a0,208(sp)
            let child_data = unsafe{ &mut *child_proc.data.get() };
    8001285a:	7586                	ld	a1,96(sp)
    8001285c:	04058513          	addi	a0,a1,64
    80012860:	00004097          	auipc	ra,0x4
    80012864:	128080e7          	jalr	296(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    80012868:	e8aa                	sd	a0,80(sp)
    8001286a:	a009                	j	8001286c <.LBB24_23+0x58>
    8001286c:	6546                	ld	a0,80(sp)
    8001286e:	edaa                	sd	a0,216(sp)
            if unsafe{ pdata.pagetable.as_mut().unwrap().uvm_copy(
    80012870:	65e6                	ld	a1,88(sp)
    80012872:	01058513          	addi	a0,a1,16
    80012876:	00006097          	auipc	ra,0x6
    8001287a:	fbe080e7          	jalr	-66(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    8001287e:	e4aa                	sd	a0,72(sp)
    80012880:	a009                	j	80012882 <.LBB24_24>

0000000080012882 <.LBB24_24>:
    80012882:	00015597          	auipc	a1,0x15
    80012886:	8de58593          	addi	a1,a1,-1826 # 80027160 <.L__unnamed_11>
    8001288a:	6526                	ld	a0,72(sp)
    8001288c:	00006097          	auipc	ra,0x6
    80012890:	3ea080e7          	jalr	1002(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    80012894:	e0aa                	sd	a0,64(sp)
    80012896:	a009                	j	80012898 <.LBB24_24+0x16>
    80012898:	6506                	ld	a0,64(sp)
    8001289a:	6108                	ld	a0,0(a0)
                child_data.pagetable.as_mut().unwrap(), 
    8001289c:	65c6                	ld	a1,80(sp)
    8001289e:	01058613          	addi	a2,a1,16
    800128a2:	fc2a                	sd	a0,56(sp)
    800128a4:	8532                	mv	a0,a2
    800128a6:	00006097          	auipc	ra,0x6
    800128aa:	f8e080e7          	jalr	-114(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    800128ae:	f82a                	sd	a0,48(sp)
    800128b0:	a009                	j	800128b2 <.LBB24_25>

00000000800128b2 <.LBB24_25>:
    800128b2:	00015597          	auipc	a1,0x15
    800128b6:	8c658593          	addi	a1,a1,-1850 # 80027178 <.L__unnamed_12>
    800128ba:	7542                	ld	a0,48(sp)
    800128bc:	00006097          	auipc	ra,0x6
    800128c0:	3ba080e7          	jalr	954(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    800128c4:	f42a                	sd	a0,40(sp)
    800128c6:	a009                	j	800128c8 <.LBB24_25+0x16>
    800128c8:	7522                	ld	a0,40(sp)
    800128ca:	610c                	ld	a1,0(a0)
                pdata.size
    800128cc:	6666                	ld	a2,88(sp)
    800128ce:	6610                	ld	a2,8(a2)
            if unsafe{ pdata.pagetable.as_mut().unwrap().uvm_copy(
    800128d0:	7562                	ld	a0,56(sp)
    800128d2:	ffffd097          	auipc	ra,0xffffd
    800128d6:	036080e7          	jalr	54(ra) # 8000f908 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_copy17h5b0f9567c0cb1cdcE>
    800128da:	e12a                	sd	a0,128(sp)
    800128dc:	e52e                	sd	a1,136(sp)
    800128de:	a009                	j	800128e0 <.LBB24_25+0x2e>
    800128e0:	0108                	addi	a0,sp,128
    800128e2:	ffffa097          	auipc	ra,0xffffa
    800128e6:	39c080e7          	jalr	924(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    800128ea:	f02a                	sd	a0,32(sp)
    800128ec:	a009                	j	800128ee <.LBB24_25+0x3c>
    800128ee:	4501                	li	a0,0
    800128f0:	7582                	ld	a1,32(sp)
    800128f2:	02a58263          	beq	a1,a0,80012916 <.LBB24_27+0x16>
    800128f6:	a009                	j	800128f8 <.LBB24_26>

00000000800128f8 <.LBB24_26>:
                panic!("fork: Fail to copy data from parent process.")
    800128f8:	00015517          	auipc	a0,0x15
    800128fc:	89850513          	addi	a0,a0,-1896 # 80027190 <.L__unnamed_13>

0000000080012900 <.LBB24_27>:
    80012900:	00015617          	auipc	a2,0x15
    80012904:	8c060613          	addi	a2,a2,-1856 # 800271c0 <.L__unnamed_14>
    80012908:	02c00593          	li	a1,44
    8001290c:	0000e097          	auipc	ra,0xe
    80012910:	3be080e7          	jalr	958(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80012914:	0000                	unimp
            let ptf = pdata.trapframe as *const Trapframe;
    80012916:	6566                	ld	a0,88(sp)
    80012918:	6d0c                	ld	a1,24(a0)
    8001291a:	f1ae                	sd	a1,224(sp)
            let child_tf = unsafe{ &mut *child_data.trapframe };
    8001291c:	6646                	ld	a2,80(sp)
    8001291e:	6e14                	ld	a3,24(a2)
    80012920:	f5b6                	sd	a3,232(sp)
    80012922:	4605                	li	a2,1
            unsafe{ copy(ptf, child_tf, 1); }
    80012924:	852e                	mv	a0,a1
    80012926:	85b6                	mv	a1,a3
    80012928:	ec36                	sd	a3,24(sp)
    8001292a:	ffff3097          	auipc	ra,0xffff3
    8001292e:	280080e7          	jalr	640(ra) # 80005baa <_ZN4core10intrinsics4copy17h1abba3ce65d68c9dE>
    80012932:	a009                	j	80012934 <.LBB24_27+0x34>
    80012934:	4501                	li	a0,0
            child_tf.a0 = 0;
    80012936:	65e2                	ld	a1,24(sp)
    80012938:	f9a8                	sd	a0,112(a1)
            child_data.open_files.clone_from(&pdata.open_files);
    8001293a:	6546                	ld	a0,80(sp)
    8001293c:	0a050513          	addi	a0,a0,160
    80012940:	6666                	ld	a2,88(sp)
    80012942:	0a060593          	addi	a1,a2,160
    80012946:	00006097          	auipc	ra,0x6
    8001294a:	a08080e7          	jalr	-1528(ra) # 8001834e <_ZN4core5clone5Clone10clone_from17h366b01f84fe96d57E>
    8001294e:	a009                	j	80012950 <.LBB24_27+0x50>
            child_data.cwd.clone_from(&pdata.cwd);
    80012950:	6546                	ld	a0,80(sp)
    80012952:	3c050513          	addi	a0,a0,960
    80012956:	65e6                	ld	a1,88(sp)
    80012958:	3c058593          	addi	a1,a1,960
    8001295c:	00006097          	auipc	ra,0x6
    80012960:	69a080e7          	jalr	1690(ra) # 80018ff6 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E>
    80012964:	a009                	j	80012966 <.LBB24_27+0x66>
            child_data.name = pdata.name;
    80012966:	6566                	ld	a0,88(sp)
    80012968:	3e054583          	lbu	a1,992(a0)
    8001296c:	3e154603          	lbu	a2,993(a0)
    80012970:	0622                	slli	a2,a2,0x8
    80012972:	8dd1                	or	a1,a1,a2
    80012974:	3e254603          	lbu	a2,994(a0)
    80012978:	3e354683          	lbu	a3,995(a0)
    8001297c:	06a2                	slli	a3,a3,0x8
    8001297e:	8e55                	or	a2,a2,a3
    80012980:	0642                	slli	a2,a2,0x10
    80012982:	8dd1                	or	a1,a1,a2
    80012984:	3e454603          	lbu	a2,996(a0)
    80012988:	3e554683          	lbu	a3,997(a0)
    8001298c:	06a2                	slli	a3,a3,0x8
    8001298e:	8e55                	or	a2,a2,a3
    80012990:	3e654683          	lbu	a3,998(a0)
    80012994:	3e754703          	lbu	a4,999(a0)
    80012998:	0722                	slli	a4,a4,0x8
    8001299a:	8ed9                	or	a3,a3,a4
    8001299c:	06c2                	slli	a3,a3,0x10
    8001299e:	8e55                	or	a2,a2,a3
    800129a0:	1602                	slli	a2,a2,0x20
    800129a2:	8dd1                	or	a1,a1,a2
    800129a4:	ed2e                	sd	a1,152(sp)
    800129a6:	3d854583          	lbu	a1,984(a0)
    800129aa:	3d954603          	lbu	a2,985(a0)
    800129ae:	0622                	slli	a2,a2,0x8
    800129b0:	8dd1                	or	a1,a1,a2
    800129b2:	3da54603          	lbu	a2,986(a0)
    800129b6:	3db54683          	lbu	a3,987(a0)
    800129ba:	06a2                	slli	a3,a3,0x8
    800129bc:	8e55                	or	a2,a2,a3
    800129be:	0642                	slli	a2,a2,0x10
    800129c0:	8dd1                	or	a1,a1,a2
    800129c2:	3dc54603          	lbu	a2,988(a0)
    800129c6:	3dd54683          	lbu	a3,989(a0)
    800129ca:	06a2                	slli	a3,a3,0x8
    800129cc:	8e55                	or	a2,a2,a3
    800129ce:	3de54683          	lbu	a3,990(a0)
    800129d2:	3df54703          	lbu	a4,991(a0)
    800129d6:	0722                	slli	a4,a4,0x8
    800129d8:	8ed9                	or	a3,a3,a4
    800129da:	06c2                	slli	a3,a3,0x10
    800129dc:	8e55                	or	a2,a2,a3
    800129de:	1602                	slli	a2,a2,0x20
    800129e0:	8dd1                	or	a1,a1,a2
    800129e2:	e92e                	sd	a1,144(sp)
    800129e4:	65c6                	ld	a1,80(sp)
    800129e6:	3d858513          	addi	a0,a1,984
    800129ea:	090c                	addi	a1,sp,144
    800129ec:	4641                	li	a2,16
    800129ee:	00011097          	auipc	ra,0x11
    800129f2:	e72080e7          	jalr	-398(ra) # 80023860 <memcpy>
            let mut child_meta = child_proc.meta.acquire();
    800129f6:	7586                	ld	a1,96(sp)
    800129f8:	e82a                	sd	a0,16(sp)
    800129fa:	852e                	mv	a0,a1
    800129fc:	ffff0097          	auipc	ra,0xffff0
    80012a00:	d10080e7          	jalr	-752(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    80012a04:	f12a                	sd	a0,160(sp)
    80012a06:	a009                	j	80012a08 <.LBB24_27+0x108>
    80012a08:	450d                	li	a0,3
            child_meta.state = ProcState::RUNNABLE;
    80012a0a:	0aa107a3          	sb	a0,175(sp)
    80012a0e:	1108                	addi	a0,sp,160
    80012a10:	ffff1097          	auipc	ra,0xffff1
    80012a14:	fea080e7          	jalr	-22(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    80012a18:	e42a                	sd	a0,8(sp)
    80012a1a:	a009                	j	80012a1c <.LBB24_27+0x11c>
    80012a1c:	0af10503          	lb	a0,175(sp)
    80012a20:	65a2                	ld	a1,8(sp)
    80012a22:	00a58c23          	sb	a0,24(a1)
            drop(child_meta);
    80012a26:	750a                	ld	a0,160(sp)
    80012a28:	ffffb097          	auipc	ra,0xffffb
    80012a2c:	e7e080e7          	jalr	-386(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    80012a30:	a009                	j	80012a32 <.LBB24_27+0x132>
    80012a32:	6545                	lui	a0,0x11
    80012a34:	a305051b          	addiw	a0,a0,-1488

0000000080012a38 <.LBB24_28>:
    80012a38:	00049597          	auipc	a1,0x49
    80012a3c:	4c858593          	addi	a1,a1,1224 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    80012a40:	952e                	add	a0,a0,a1
            let wait = unsafe{ PROC_MANAGER.wait_lock.acquire() };
    80012a42:	ffff0097          	auipc	ra,0xffff0
    80012a46:	a18080e7          	jalr	-1512(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    80012a4a:	85aa                	mv	a1,a0
    80012a4c:	f9aa                	sd	a0,240(sp)
    80012a4e:	e02e                	sd	a1,0(sp)
    80012a50:	a009                	j	80012a52 <.LBB24_28+0x1a>
            child_data.parent = Some(self as *mut Process);
    80012a52:	7526                	ld	a0,104(sp)
    80012a54:	fd2a                	sd	a0,184(sp)
    80012a56:	4585                	li	a1,1
    80012a58:	f92e                	sd	a1,176(sp)
    80012a5a:	6646                	ld	a2,80(sp)
    80012a5c:	ea4c                	sd	a1,144(a2)
    80012a5e:	ee48                	sd	a0,152(a2)
            drop(wait);
    80012a60:	6502                	ld	a0,0(sp)
    80012a62:	ffffb097          	auipc	ra,0xffffb
    80012a66:	e8c080e7          	jalr	-372(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    80012a6a:	a009                	j	80012a6c <.LBB24_28+0x34>
            Some(child_proc)
    80012a6c:	7506                	ld	a0,96(sp)
    80012a6e:	f8aa                	sd	a0,112(sp)
        if let Some(child_proc) = unsafe{ PROC_MANAGER.alloc_proc() } {
    80012a70:	a009                	j	80012a72 <.LBB24_28+0x3a>
        }
    }
    80012a72:	7546                	ld	a0,112(sp)
    80012a74:	70ee                	ld	ra,248(sp)
    80012a76:	6111                	addi	sp,sp,256
    80012a78:	8082                	ret

Disassembly of section .text._ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE:

0000000080012a7a <_ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE>:
#[derive(PartialEq, Copy, Clone, Debug)]
    80012a7a:	7115                	addi	sp,sp,-224
    80012a7c:	ed86                	sd	ra,216(sp)
    80012a7e:	e5aa                	sd	a0,200(sp)
    80012a80:	e9ae                	sd	a1,208(sp)
    80012a82:	ec2a                	sd	a0,24(sp)
    80012a84:	00054503          	lbu	a0,0(a0) # 11000 <.Lline_table_start0+0x1ef>
    80012a88:	4601                	li	a2,0
    80012a8a:	e42e                	sd	a1,8(sp)
    80012a8c:	e02a                	sd	a0,0(sp)
    80012a8e:	04c50963          	beq	a0,a2,80012ae0 <.LBB25_31>
    80012a92:	a009                	j	80012a94 <_ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE+0x1a>
    80012a94:	4505                	li	a0,1
    80012a96:	6582                	ld	a1,0(sp)
    80012a98:	06a58963          	beq	a1,a0,80012b0a <.LBB25_32>
    80012a9c:	a009                	j	80012a9e <_ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE+0x24>
    80012a9e:	4509                	li	a0,2
    80012aa0:	6582                	ld	a1,0(sp)
    80012aa2:	08a58963          	beq	a1,a0,80012b34 <.LBB25_33>
    80012aa6:	a009                	j	80012aa8 <_ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE+0x2e>
    80012aa8:	450d                	li	a0,3
    80012aaa:	6582                	ld	a1,0(sp)
    80012aac:	0aa58963          	beq	a1,a0,80012b5e <.LBB25_34>
    80012ab0:	a009                	j	80012ab2 <_ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE+0x38>
    80012ab2:	4511                	li	a0,4
    80012ab4:	6582                	ld	a1,0(sp)
    80012ab6:	0ca58963          	beq	a1,a0,80012b88 <.LBB25_35>
    80012aba:	a009                	j	80012abc <_ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE+0x42>
    80012abc:	4515                	li	a0,5
    80012abe:	6582                	ld	a1,0(sp)
    80012ac0:	0ea58963          	beq	a1,a0,80012bb2 <.LBB25_36>
    80012ac4:	a009                	j	80012ac6 <.LBB25_30>

0000000080012ac6 <.LBB25_30>:
    80012ac6:	00014617          	auipc	a2,0x14
    80012aca:	71260613          	addi	a2,a2,1810 # 800271d8 <.L__unnamed_15>
    80012ace:	1908                	addi	a0,sp,176
    80012ad0:	46a5                	li	a3,9
    80012ad2:	65a2                	ld	a1,8(sp)
    80012ad4:	0000f097          	auipc	ra,0xf
    80012ad8:	fcc080e7          	jalr	-52(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80012adc:	a201                	j	80012bdc <.LBB25_36+0x2a>
	...

0000000080012ae0 <.LBB25_31>:
    80012ae0:	00014617          	auipc	a2,0x14
    80012ae4:	70e60613          	addi	a2,a2,1806 # 800271ee <.L__unnamed_16>
    80012ae8:	1008                	addi	a0,sp,32
    80012aea:	4699                	li	a3,6
    80012aec:	65a2                	ld	a1,8(sp)
    80012aee:	0000f097          	auipc	ra,0xf
    80012af2:	fb2080e7          	jalr	-78(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80012af6:	a009                	j	80012af8 <.LBB25_31+0x18>
    80012af8:	1008                	addi	a0,sp,32
    80012afa:	0000e097          	auipc	ra,0xe
    80012afe:	5f8080e7          	jalr	1528(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80012b02:	00a10ba3          	sb	a0,23(sp)
    80012b06:	a009                	j	80012b08 <.LBB25_31+0x28>
    80012b08:	a0dd                	j	80012bee <.LBB25_36+0x3c>

0000000080012b0a <.LBB25_32>:
    80012b0a:	00012617          	auipc	a2,0x12
    80012b0e:	d1660613          	addi	a2,a2,-746 # 80024820 <.L__unnamed_4+0x38>
    80012b12:	1828                	addi	a0,sp,56
    80012b14:	4691                	li	a3,4
    80012b16:	65a2                	ld	a1,8(sp)
    80012b18:	0000f097          	auipc	ra,0xf
    80012b1c:	f88080e7          	jalr	-120(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80012b20:	a009                	j	80012b22 <.LBB25_32+0x18>
    80012b22:	1828                	addi	a0,sp,56
    80012b24:	0000e097          	auipc	ra,0xe
    80012b28:	5ce080e7          	jalr	1486(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80012b2c:	00a10ba3          	sb	a0,23(sp)
    80012b30:	a009                	j	80012b32 <.LBB25_32+0x28>
    80012b32:	a875                	j	80012bee <.LBB25_36+0x3c>

0000000080012b34 <.LBB25_33>:
    80012b34:	00011617          	auipc	a2,0x11
    80012b38:	25460613          	addi	a2,a2,596 # 80023d88 <.L__unnamed_5+0x88>
    80012b3c:	0888                	addi	a0,sp,80
    80012b3e:	46a1                	li	a3,8
    80012b40:	65a2                	ld	a1,8(sp)
    80012b42:	0000f097          	auipc	ra,0xf
    80012b46:	f5e080e7          	jalr	-162(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80012b4a:	a009                	j	80012b4c <.LBB25_33+0x18>
    80012b4c:	0888                	addi	a0,sp,80
    80012b4e:	0000e097          	auipc	ra,0xe
    80012b52:	5a4080e7          	jalr	1444(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80012b56:	00a10ba3          	sb	a0,23(sp)
    80012b5a:	a009                	j	80012b5c <.LBB25_33+0x28>
    80012b5c:	a849                	j	80012bee <.LBB25_36+0x3c>

0000000080012b5e <.LBB25_34>:
    80012b5e:	00011617          	auipc	a2,0x11
    80012b62:	24a60613          	addi	a2,a2,586 # 80023da8 <.L__unnamed_5+0xa8>
    80012b66:	10a8                	addi	a0,sp,104
    80012b68:	46a1                	li	a3,8
    80012b6a:	65a2                	ld	a1,8(sp)
    80012b6c:	0000f097          	auipc	ra,0xf
    80012b70:	f34080e7          	jalr	-204(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80012b74:	a009                	j	80012b76 <.LBB25_34+0x18>
    80012b76:	10a8                	addi	a0,sp,104
    80012b78:	0000e097          	auipc	ra,0xe
    80012b7c:	57a080e7          	jalr	1402(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80012b80:	00a10ba3          	sb	a0,23(sp)
    80012b84:	a009                	j	80012b86 <.LBB25_34+0x28>
    80012b86:	a0a5                	j	80012bee <.LBB25_36+0x3c>

0000000080012b88 <.LBB25_35>:
    80012b88:	00014617          	auipc	a2,0x14
    80012b8c:	65f60613          	addi	a2,a2,1631 # 800271e7 <.L__unnamed_20>
    80012b90:	0108                	addi	a0,sp,128
    80012b92:	469d                	li	a3,7
    80012b94:	65a2                	ld	a1,8(sp)
    80012b96:	0000f097          	auipc	ra,0xf
    80012b9a:	f0a080e7          	jalr	-246(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80012b9e:	a009                	j	80012ba0 <.LBB25_35+0x18>
    80012ba0:	0108                	addi	a0,sp,128
    80012ba2:	0000e097          	auipc	ra,0xe
    80012ba6:	550080e7          	jalr	1360(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80012baa:	00a10ba3          	sb	a0,23(sp)
    80012bae:	a009                	j	80012bb0 <.LBB25_35+0x28>
    80012bb0:	a83d                	j	80012bee <.LBB25_36+0x3c>

0000000080012bb2 <.LBB25_36>:
    80012bb2:	00014617          	auipc	a2,0x14
    80012bb6:	62f60613          	addi	a2,a2,1583 # 800271e1 <.L__unnamed_21>
    80012bba:	0928                	addi	a0,sp,152
    80012bbc:	4699                	li	a3,6
    80012bbe:	65a2                	ld	a1,8(sp)
    80012bc0:	0000f097          	auipc	ra,0xf
    80012bc4:	ee0080e7          	jalr	-288(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    80012bc8:	a009                	j	80012bca <.LBB25_36+0x18>
    80012bca:	0928                	addi	a0,sp,152
    80012bcc:	0000e097          	auipc	ra,0xe
    80012bd0:	526080e7          	jalr	1318(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80012bd4:	00a10ba3          	sb	a0,23(sp)
    80012bd8:	a009                	j	80012bda <.LBB25_36+0x28>
    80012bda:	a811                	j	80012bee <.LBB25_36+0x3c>
    80012bdc:	1908                	addi	a0,sp,176
    80012bde:	0000e097          	auipc	ra,0xe
    80012be2:	514080e7          	jalr	1300(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    80012be6:	00a10ba3          	sb	a0,23(sp)
    80012bea:	a009                	j	80012bec <.LBB25_36+0x3a>
    80012bec:	a009                	j	80012bee <.LBB25_36+0x3c>
    80012bee:	01714503          	lbu	a0,23(sp)
    80012bf2:	60ee                	ld	ra,216(sp)
    80012bf4:	612d                	addi	sp,sp,224
    80012bf6:	8082                	ret

Disassembly of section .text._ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE:

0000000080012bf8 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE>:
    80012bf8:	7179                	addi	sp,sp,-48
    80012bfa:	e82a                	sd	a0,16(sp)
    80012bfc:	ec2e                	sd	a1,24(sp)
    80012bfe:	00054503          	lbu	a0,0(a0)
    80012c02:	f02a                	sd	a0,32(sp)
    80012c04:	0005c583          	lbu	a1,0(a1)
    80012c08:	f42e                	sd	a1,40(sp)
    80012c0a:	00b51763          	bne	a0,a1,80012c18 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x20>
    80012c0e:	a009                	j	80012c10 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x18>
    80012c10:	4505                	li	a0,1
    80012c12:	00a107a3          	sb	a0,15(sp)
    80012c16:	a029                	j	80012c20 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x28>
    80012c18:	4501                	li	a0,0
    80012c1a:	00a107a3          	sb	a0,15(sp)
    80012c1e:	a009                	j	80012c20 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x28>
    80012c20:	00f14503          	lbu	a0,15(sp)
    80012c24:	8905                	andi	a0,a0,1
    80012c26:	4581                	li	a1,0
    80012c28:	00b50763          	beq	a0,a1,80012c36 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x3e>
    80012c2c:	a009                	j	80012c2e <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x36>
    80012c2e:	4505                	li	a0,1
    80012c30:	00a10723          	sb	a0,14(sp)
    80012c34:	a029                	j	80012c3e <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x46>
    80012c36:	4501                	li	a0,0
    80012c38:	00a10723          	sb	a0,14(sp)
    80012c3c:	a009                	j	80012c3e <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE+0x46>
    80012c3e:	00e14503          	lbu	a0,14(sp)
    80012c42:	6145                	addi	sp,sp,48
    80012c44:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h223cd8622c8c3f1bE:

0000000080012c46 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h223cd8622c8c3f1bE>:
    pub const fn as_mut_ptr(&mut self) -> *mut T {
    80012c46:	1141                	addi	sp,sp,-16
    80012c48:	e02a                	sd	a0,0(sp)
    80012c4a:	e42e                	sd	a1,8(sp)
    }
    80012c4c:	0141                	addi	sp,sp,16
    80012c4e:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h99ebd62dff44a810E:

0000000080012c50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h99ebd62dff44a810E>:
    pub const fn as_mut_ptr(&mut self) -> *mut T {
    80012c50:	1141                	addi	sp,sp,-16
    80012c52:	e02a                	sd	a0,0(sp)
    80012c54:	e42e                	sd	a1,8(sp)
    }
    80012c56:	0141                	addi	sp,sp,16
    80012c58:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfacde4f5753eccfcE:

0000000080012c5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfacde4f5753eccfcE>:
    pub const fn as_mut_ptr(&mut self) -> *mut T {
    80012c5a:	1141                	addi	sp,sp,-16
    80012c5c:	e02a                	sd	a0,0(sp)
    80012c5e:	e42e                	sd	a1,8(sp)
    }
    80012c60:	0141                	addi	sp,sp,16
    80012c62:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE:

0000000080012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>:
    pub const fn len(&self) -> usize {
    80012c64:	1101                	addi	sp,sp,-32
    80012c66:	e82a                	sd	a0,16(sp)
    80012c68:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    80012c6a:	e02a                	sd	a0,0(sp)
    80012c6c:	e42e                	sd	a1,8(sp)
    }
    80012c6e:	852e                	mv	a0,a1
    80012c70:	6105                	addi	sp,sp,32
    80012c72:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h84d9c56a7d4105d0E:

0000000080012c74 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h84d9c56a7d4105d0E>:
    pub const fn len(&self) -> usize {
    80012c74:	1101                	addi	sp,sp,-32
    80012c76:	e82a                	sd	a0,16(sp)
    80012c78:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    80012c7a:	e02a                	sd	a0,0(sp)
    80012c7c:	e42e                	sd	a1,8(sp)
    }
    80012c7e:	852e                	mv	a0,a1
    80012c80:	6105                	addi	sp,sp,32
    80012c82:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbe33bf7fb9e363b3E:

0000000080012c84 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbe33bf7fb9e363b3E>:
    pub const fn len(&self) -> usize {
    80012c84:	1101                	addi	sp,sp,-32
    80012c86:	e82a                	sd	a0,16(sp)
    80012c88:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    80012c8a:	e02a                	sd	a0,0(sp)
    80012c8c:	e42e                	sd	a1,8(sp)
    }
    80012c8e:	852e                	mv	a0,a1
    80012c90:	6105                	addi	sp,sp,32
    80012c92:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hee078f1092d39ceeE:

0000000080012c94 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hee078f1092d39ceeE>:
    pub const fn len(&self) -> usize {
    80012c94:	1101                	addi	sp,sp,-32
    80012c96:	e82a                	sd	a0,16(sp)
    80012c98:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    80012c9a:	e02a                	sd	a0,0(sp)
    80012c9c:	e42e                	sd	a1,8(sp)
    }
    80012c9e:	852e                	mv	a0,a1
    80012ca0:	6105                	addi	sp,sp,32
    80012ca2:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3f952cb34e297d39E:

0000000080012ca4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3f952cb34e297d39E>:
    pub fn iter(&self) -> Iter<'_, T> {
    80012ca4:	7179                	addi	sp,sp,-48
    80012ca6:	f406                	sd	ra,40(sp)
    80012ca8:	ec2a                	sd	a0,24(sp)
    80012caa:	f02e                	sd	a1,32(sp)
        Iter::new(self)
    80012cac:	00000097          	auipc	ra,0x0
    80012cb0:	1aa080e7          	jalr	426(ra) # 80012e56 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E>
    80012cb4:	e82a                	sd	a0,16(sp)
    80012cb6:	e42e                	sd	a1,8(sp)
    80012cb8:	a009                	j	80012cba <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3f952cb34e297d39E+0x16>
    }
    80012cba:	6542                	ld	a0,16(sp)
    80012cbc:	65a2                	ld	a1,8(sp)
    80012cbe:	70a2                	ld	ra,40(sp)
    80012cc0:	6145                	addi	sp,sp,48
    80012cc2:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E:

0000000080012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>:
    pub const fn as_ptr(&self) -> *const T {
    80012cc4:	1141                	addi	sp,sp,-16
    80012cc6:	e02a                	sd	a0,0(sp)
    80012cc8:	e42e                	sd	a1,8(sp)
    }
    80012cca:	0141                	addi	sp,sp,16
    80012ccc:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7db1cdd1ba9e39c4E:

0000000080012cce <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7db1cdd1ba9e39c4E>:
    pub const fn as_ptr(&self) -> *const T {
    80012cce:	1141                	addi	sp,sp,-16
    80012cd0:	e02a                	sd	a0,0(sp)
    80012cd2:	e42e                	sd	a1,8(sp)
    }
    80012cd4:	0141                	addi	sp,sp,16
    80012cd6:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7e4413ebeff7f668E:

0000000080012cd8 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7e4413ebeff7f668E>:
    pub const fn as_ptr(&self) -> *const T {
    80012cd8:	1141                	addi	sp,sp,-16
    80012cda:	e02a                	sd	a0,0(sp)
    80012cdc:	e42e                	sd	a1,8(sp)
    }
    80012cde:	0141                	addi	sp,sp,16
    80012ce0:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h207e0e3e48fafa1bE:

0000000080012ce2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h207e0e3e48fafa1bE>:
    pub fn iter_mut(&mut self) -> IterMut<'_, T> {
    80012ce2:	7179                	addi	sp,sp,-48
    80012ce4:	f406                	sd	ra,40(sp)
    80012ce6:	ec2a                	sd	a0,24(sp)
    80012ce8:	f02e                	sd	a1,32(sp)
        IterMut::new(self)
    80012cea:	00000097          	auipc	ra,0x0
    80012cee:	34c080e7          	jalr	844(ra) # 80013036 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E>
    80012cf2:	e82a                	sd	a0,16(sp)
    80012cf4:	e42e                	sd	a1,8(sp)
    80012cf6:	a009                	j	80012cf8 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h207e0e3e48fafa1bE+0x16>
    }
    80012cf8:	6542                	ld	a0,16(sp)
    80012cfa:	65a2                	ld	a1,8(sp)
    80012cfc:	70a2                	ld	ra,40(sp)
    80012cfe:	6145                	addi	sp,sp,48
    80012d00:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E:

0000000080012d02 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E>:
    fn fold<B, F>(mut self, init: B, mut f: F) -> B
    80012d02:	715d                	addi	sp,sp,-80
    80012d04:	e486                	sd	ra,72(sp)
    80012d06:	e42a                	sd	a0,8(sp)
    80012d08:	e82e                	sd	a1,16(sp)
    80012d0a:	ec32                	sd	a2,24(sp)
        while let Some(x) = self.next() {
    80012d0c:	a009                	j	80012d0e <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0xc>
    80012d0e:	0028                	addi	a0,sp,8
    80012d10:	00000097          	auipc	ra,0x0
    80012d14:	690080e7          	jalr	1680(ra) # 800133a0 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E>
    80012d18:	f42a                	sd	a0,40(sp)
    80012d1a:	a009                	j	80012d1c <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0x1a>
    80012d1c:	7522                	ld	a0,40(sp)
    80012d1e:	4581                	li	a1,0
    80012d20:	00b51463          	bne	a0,a1,80012d28 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0x26>
    80012d24:	a009                	j	80012d26 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0x24>
        }
    80012d26:	a831                	j	80012d42 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0x40>
        while let Some(x) = self.next() {
    80012d28:	7522                	ld	a0,40(sp)
    80012d2a:	e0aa                	sd	a0,64(sp)
            accum = f(accum, x);
    80012d2c:	f82a                	sd	a0,48(sp)
    80012d2e:	082c                	addi	a1,sp,24
    80012d30:	e02a                	sd	a0,0(sp)
    80012d32:	852e                	mv	a0,a1
    80012d34:	6582                	ld	a1,0(sp)
    80012d36:	00003097          	auipc	ra,0x3
    80012d3a:	2c6080e7          	jalr	710(ra) # 80015ffc <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate28_$u7b$$u7b$closure$u7d$$u7d$17hadcc243cb0a5d782E>
    80012d3e:	a009                	j	80012d40 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0x3e>
        while let Some(x) = self.next() {
    80012d40:	b7f9                	j	80012d0e <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0xc>
    }
    80012d42:	a009                	j	80012d44 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0x42>
    80012d44:	a009                	j	80012d46 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E+0x44>
    80012d46:	60a6                	ld	ra,72(sp)
    80012d48:	6161                	addi	sp,sp,80
    80012d4a:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator6copied17h545b20a808d68198E:

0000000080012d4c <_ZN4core4iter6traits8iterator8Iterator6copied17h545b20a808d68198E>:
    ///
    /// assert_eq!(v_copied, vec![1, 2, 3]);
    /// assert_eq!(v_map, vec![1, 2, 3]);
    /// ```
    #[stable(feature = "iter_copied", since = "1.36.0")]
    fn copied<'a, T: 'a>(self) -> Copied<Self>
    80012d4c:	7179                	addi	sp,sp,-48
    80012d4e:	f406                	sd	ra,40(sp)
    80012d50:	ec2a                	sd	a0,24(sp)
    80012d52:	f02e                	sd	a1,32(sp)
    where
        Self: Sized + Iterator<Item = &'a T>,
        T: Copy,
    {
        Copied::new(self)
    80012d54:	ffff4097          	auipc	ra,0xffff4
    80012d58:	780080e7          	jalr	1920(ra) # 800074d4 <_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hea780529cde9430aE>
    80012d5c:	e82a                	sd	a0,16(sp)
    80012d5e:	e42e                	sd	a1,8(sp)
    80012d60:	a009                	j	80012d62 <_ZN4core4iter6traits8iterator8Iterator6copied17h545b20a808d68198E+0x16>
    }
    80012d62:	6542                	ld	a0,16(sp)
    80012d64:	65a2                	ld	a1,8(sp)
    80012d66:	70a2                	ld	ra,40(sp)
    80012d68:	6145                	addi	sp,sp,48
    80012d6a:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator9enumerate17ha616abde0bf88ed2E:

0000000080012d6c <_ZN4core4iter6traits8iterator8Iterator9enumerate17ha616abde0bf88ed2E>:
    fn enumerate(self) -> Enumerate<Self>
    80012d6c:	1101                	addi	sp,sp,-32
    80012d6e:	ec06                	sd	ra,24(sp)
    80012d70:	e42e                	sd	a1,8(sp)
    80012d72:	e832                	sd	a2,16(sp)
        Enumerate::new(self)
    80012d74:	00003097          	auipc	ra,0x3
    80012d78:	40e080e7          	jalr	1038(ra) # 80016182 <_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h42a3faa8ac5437a3E>
    80012d7c:	a009                	j	80012d7e <_ZN4core4iter6traits8iterator8Iterator9enumerate17ha616abde0bf88ed2E+0x12>
    }
    80012d7e:	60e2                	ld	ra,24(sp)
    80012d80:	6105                	addi	sp,sp,32
    80012d82:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator9enumerate17hebcc1fc7a32476d8E:

0000000080012d84 <_ZN4core4iter6traits8iterator8Iterator9enumerate17hebcc1fc7a32476d8E>:
    fn enumerate(self) -> Enumerate<Self>
    80012d84:	1101                	addi	sp,sp,-32
    80012d86:	ec06                	sd	ra,24(sp)
    80012d88:	e42e                	sd	a1,8(sp)
    80012d8a:	e832                	sd	a2,16(sp)
        Enumerate::new(self)
    80012d8c:	00003097          	auipc	ra,0x3
    80012d90:	3e4080e7          	jalr	996(ra) # 80016170 <_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h246669b1ffe3ec71E>
    80012d94:	a009                	j	80012d96 <_ZN4core4iter6traits8iterator8Iterator9enumerate17hebcc1fc7a32476d8E+0x12>
    }
    80012d96:	60e2                	ld	ra,24(sp)
    80012d98:	6105                	addi	sp,sp,32
    80012d9a:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator9enumerate17hfb8292d51cdefbebE:

0000000080012d9c <_ZN4core4iter6traits8iterator8Iterator9enumerate17hfb8292d51cdefbebE>:
    fn enumerate(self) -> Enumerate<Self>
    80012d9c:	1101                	addi	sp,sp,-32
    80012d9e:	ec06                	sd	ra,24(sp)
    80012da0:	e42e                	sd	a1,8(sp)
    80012da2:	e832                	sd	a2,16(sp)
        Enumerate::new(self)
    80012da4:	00003097          	auipc	ra,0x3
    80012da8:	3f0080e7          	jalr	1008(ra) # 80016194 <_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17hb029497487bfa357E>
    80012dac:	a009                	j	80012dae <_ZN4core4iter6traits8iterator8Iterator9enumerate17hfb8292d51cdefbebE+0x12>
    }
    80012dae:	60e2                	ld	ra,24(sp)
    80012db0:	6105                	addi	sp,sp,32
    80012db2:	8082                	ret

Disassembly of section .text._ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E:

0000000080012db4 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E>:
#[stable(feature = "rust1", since = "1.0.0")]
unsafe impl<T: Sync> Send for Iter<'_, T> {}

impl<'a, T> Iter<'a, T> {
    #[inline]
    pub(super) fn new(slice: &'a [T]) -> Self {
    80012db4:	7119                	addi	sp,sp,-128
    80012db6:	fc86                	sd	ra,120(sp)
    80012db8:	f0aa                	sd	a0,96(sp)
    80012dba:	f4ae                	sd	a1,104(sp)
        let ptr = slice.as_ptr();
    80012dbc:	e0aa                	sd	a0,64(sp)
    80012dbe:	fc2e                	sd	a1,56(sp)
    80012dc0:	ffff3097          	auipc	ra,0xffff3
    80012dc4:	fc0080e7          	jalr	-64(ra) # 80005d80 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h00ccdc1c984c0484E>
    80012dc8:	85aa                	mv	a1,a0
    80012dca:	f8aa                	sd	a0,112(sp)
    80012dcc:	f82e                	sd	a1,48(sp)
    80012dce:	a009                	j	80012dd0 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x1c>
        // SAFETY: Similar to `IterMut::new`.
        unsafe {
            assume(!ptr.is_null());
    80012dd0:	7542                	ld	a0,48(sp)
    80012dd2:	ffff3097          	auipc	ra,0xffff3
    80012dd6:	f4c080e7          	jalr	-180(ra) # 80005d1e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5f9be0dc4cb5e613E>
    80012dda:	a009                	j	80012ddc <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x28>
    80012ddc:	a009                	j	80012dde <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x2a>

            let end = if mem::size_of::<T>() == 0 {
    80012dde:	a009                	j	80012de0 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x2c>
    80012de0:	4505                	li	a0,1
    80012de2:	ed09                	bnez	a0,80012dfc <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x48>
    80012de4:	a009                	j	80012de6 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x32>
                (ptr as *const u8).wrapping_add(slice.len()) as *const T
    80012de6:	7542                	ld	a0,48(sp)
    80012de8:	6586                	ld	a1,64(sp)
    80012dea:	f42a                	sd	a0,40(sp)
    80012dec:	852e                	mv	a0,a1
    80012dee:	75e2                	ld	a1,56(sp)
    80012df0:	ffff3097          	auipc	ra,0xffff3
    80012df4:	f60080e7          	jalr	-160(ra) # 80005d50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE>
    80012df8:	f02a                	sd	a0,32(sp)
    80012dfa:	a809                	j	80012e0c <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x58>
            } else {
                ptr.add(slice.len())
    80012dfc:	6506                	ld	a0,64(sp)
    80012dfe:	75e2                	ld	a1,56(sp)
    80012e00:	ffff3097          	auipc	ra,0xffff3
    80012e04:	f50080e7          	jalr	-176(ra) # 80005d50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE>
    80012e08:	ec2a                	sd	a0,24(sp)
    80012e0a:	a821                	j	80012e22 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x6e>
                (ptr as *const u8).wrapping_add(slice.len()) as *const T
    80012e0c:	7522                	ld	a0,40(sp)
    80012e0e:	7582                	ld	a1,32(sp)
    80012e10:	00001097          	auipc	ra,0x1
    80012e14:	96e080e7          	jalr	-1682(ra) # 8001377e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hc5b0d135fc74abafE>
    80012e18:	e82a                	sd	a0,16(sp)
    80012e1a:	a009                	j	80012e1c <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x68>
    80012e1c:	6542                	ld	a0,16(sp)
    80012e1e:	ecaa                	sd	a0,88(sp)
            let end = if mem::size_of::<T>() == 0 {
    80012e20:	a811                	j	80012e34 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x80>
                ptr.add(slice.len())
    80012e22:	7542                	ld	a0,48(sp)
    80012e24:	65e2                	ld	a1,24(sp)
    80012e26:	ffff3097          	auipc	ra,0xffff3
    80012e2a:	ec0080e7          	jalr	-320(ra) # 80005ce6 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h2b9b836b7d2cbc5aE>
    80012e2e:	ecaa                	sd	a0,88(sp)
    80012e30:	a009                	j	80012e32 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x7e>
            let end = if mem::size_of::<T>() == 0 {
    80012e32:	a009                	j	80012e34 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x80>
            };

            Self { ptr: NonNull::new_unchecked(ptr as *mut T), end, _marker: PhantomData }
    80012e34:	7542                	ld	a0,48(sp)
    80012e36:	ffff2097          	auipc	ra,0xffff2
    80012e3a:	c3e080e7          	jalr	-962(ra) # 80004a74 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h450bc69c96768377E>
    80012e3e:	e42a                	sd	a0,8(sp)
    80012e40:	a009                	j	80012e42 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7dfe9a887dd91d77E+0x8e>
    80012e42:	6566                	ld	a0,88(sp)
    80012e44:	65a2                	ld	a1,8(sp)
    80012e46:	e4ae                	sd	a1,72(sp)
    80012e48:	e8aa                	sd	a0,80(sp)
        }
    }
    80012e4a:	e02a                	sd	a0,0(sp)
    80012e4c:	852e                	mv	a0,a1
    80012e4e:	6582                	ld	a1,0(sp)
    80012e50:	70e6                	ld	ra,120(sp)
    80012e52:	6109                	addi	sp,sp,128
    80012e54:	8082                	ret

Disassembly of section .text._ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E:

0000000080012e56 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E>:
    pub(super) fn new(slice: &'a [T]) -> Self {
    80012e56:	7119                	addi	sp,sp,-128
    80012e58:	fc86                	sd	ra,120(sp)
    80012e5a:	f0aa                	sd	a0,96(sp)
    80012e5c:	f4ae                	sd	a1,104(sp)
        let ptr = slice.as_ptr();
    80012e5e:	e0aa                	sd	a0,64(sp)
    80012e60:	fc2e                	sd	a1,56(sp)
    80012e62:	00000097          	auipc	ra,0x0
    80012e66:	e62080e7          	jalr	-414(ra) # 80012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>
    80012e6a:	85aa                	mv	a1,a0
    80012e6c:	f8aa                	sd	a0,112(sp)
    80012e6e:	f82e                	sd	a1,48(sp)
    80012e70:	a009                	j	80012e72 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x1c>
            assume(!ptr.is_null());
    80012e72:	7542                	ld	a0,48(sp)
    80012e74:	0000d097          	auipc	ra,0xd
    80012e78:	33e080e7          	jalr	830(ra) # 800201b2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb556183de7398b23E>
    80012e7c:	a009                	j	80012e7e <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x28>
    80012e7e:	a009                	j	80012e80 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x2a>
            let end = if mem::size_of::<T>() == 0 {
    80012e80:	a009                	j	80012e82 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x2c>
    80012e82:	4505                	li	a0,1
    80012e84:	e911                	bnez	a0,80012e98 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x42>
    80012e86:	a009                	j	80012e88 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x32>
                (ptr as *const u8).wrapping_add(slice.len()) as *const T
    80012e88:	6506                	ld	a0,64(sp)
    80012e8a:	75e2                	ld	a1,56(sp)
    80012e8c:	00000097          	auipc	ra,0x0
    80012e90:	dd8080e7          	jalr	-552(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    80012e94:	f42a                	sd	a0,40(sp)
    80012e96:	a809                	j	80012ea8 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x52>
                ptr.add(slice.len())
    80012e98:	6506                	ld	a0,64(sp)
    80012e9a:	75e2                	ld	a1,56(sp)
    80012e9c:	00000097          	auipc	ra,0x0
    80012ea0:	dc8080e7          	jalr	-568(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    80012ea4:	f02a                	sd	a0,32(sp)
    80012ea6:	a821                	j	80012ebe <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x68>
                (ptr as *const u8).wrapping_add(slice.len()) as *const T
    80012ea8:	7542                	ld	a0,48(sp)
    80012eaa:	75a2                	ld	a1,40(sp)
    80012eac:	00001097          	auipc	ra,0x1
    80012eb0:	8d2080e7          	jalr	-1838(ra) # 8001377e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hc5b0d135fc74abafE>
    80012eb4:	ec2a                	sd	a0,24(sp)
    80012eb6:	a009                	j	80012eb8 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x62>
    80012eb8:	6562                	ld	a0,24(sp)
    80012eba:	ecaa                	sd	a0,88(sp)
            let end = if mem::size_of::<T>() == 0 {
    80012ebc:	a811                	j	80012ed0 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x7a>
                ptr.add(slice.len())
    80012ebe:	7542                	ld	a0,48(sp)
    80012ec0:	7582                	ld	a1,32(sp)
    80012ec2:	0000d097          	auipc	ra,0xd
    80012ec6:	28e080e7          	jalr	654(ra) # 80020150 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3e09147e50e9ceafE>
    80012eca:	ecaa                	sd	a0,88(sp)
    80012ecc:	a009                	j	80012ece <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x78>
            let end = if mem::size_of::<T>() == 0 {
    80012ece:	a009                	j	80012ed0 <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x7a>
            Self { ptr: NonNull::new_unchecked(ptr as *mut T), end, _marker: PhantomData }
    80012ed0:	7542                	ld	a0,48(sp)
    80012ed2:	ffff2097          	auipc	ra,0xffff2
    80012ed6:	bde080e7          	jalr	-1058(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    80012eda:	e82a                	sd	a0,16(sp)
    80012edc:	a009                	j	80012ede <_ZN4core5slice4iter13Iter$LT$T$GT$3new17h86c7449eb2c2ec39E+0x88>
    80012ede:	6566                	ld	a0,88(sp)
    80012ee0:	65c2                	ld	a1,16(sp)
    80012ee2:	e4ae                	sd	a1,72(sp)
    80012ee4:	e8aa                	sd	a0,80(sp)
    }
    80012ee6:	e42a                	sd	a0,8(sp)
    80012ee8:	852e                	mv	a0,a1
    80012eea:	65a2                	ld	a1,8(sp)
    80012eec:	70e6                	ld	ra,120(sp)
    80012eee:	6109                	addi	sp,sp,128
    80012ef0:	8082                	ret

Disassembly of section .text._ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE:

0000000080012ef2 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE>:
#[stable(feature = "rust1", since = "1.0.0")]
unsafe impl<T: Send> Send for IterMut<'_, T> {}

impl<'a, T> IterMut<'a, T> {
    #[inline]
    pub(super) fn new(slice: &'a mut [T]) -> Self {
    80012ef2:	7119                	addi	sp,sp,-128
    80012ef4:	fc86                	sd	ra,120(sp)
    80012ef6:	f0aa                	sd	a0,96(sp)
    80012ef8:	f4ae                	sd	a1,104(sp)
        let ptr = slice.as_mut_ptr();
    80012efa:	e0aa                	sd	a0,64(sp)
    80012efc:	fc2e                	sd	a1,56(sp)
    80012efe:	0000a097          	auipc	ra,0xa
    80012f02:	81e080e7          	jalr	-2018(ra) # 8001c71c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7d432c62e5d13a28E>
    80012f06:	85aa                	mv	a1,a0
    80012f08:	f8aa                	sd	a0,112(sp)
    80012f0a:	f82e                	sd	a1,48(sp)
    80012f0c:	a009                	j	80012f0e <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x1c>
        // the length, to also allows for the fast `ptr == end` check.
        //
        // See the `next_unchecked!` and `is_empty!` macros as well as the
        // `post_inc_start` method for more informations.
        unsafe {
            assume(!ptr.is_null());
    80012f0e:	7542                	ld	a0,48(sp)
    80012f10:	00009097          	auipc	ra,0x9
    80012f14:	7bc080e7          	jalr	1980(ra) # 8001c6cc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1293cd13a0b60abaE>
    80012f18:	a009                	j	80012f1a <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x28>
    80012f1a:	a009                	j	80012f1c <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x2a>

            let end = if mem::size_of::<T>() == 0 {
    80012f1c:	a009                	j	80012f1e <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x2c>
    80012f1e:	4505                	li	a0,1
    80012f20:	ed09                	bnez	a0,80012f3a <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x48>
    80012f22:	a009                	j	80012f24 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x32>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    80012f24:	7542                	ld	a0,48(sp)
    80012f26:	6586                	ld	a1,64(sp)
    80012f28:	f42a                	sd	a0,40(sp)
    80012f2a:	852e                	mv	a0,a1
    80012f2c:	75e2                	ld	a1,56(sp)
    80012f2e:	00009097          	auipc	ra,0x9
    80012f32:	7f8080e7          	jalr	2040(ra) # 8001c726 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc45360ff381e0a5dE>
    80012f36:	f02a                	sd	a0,32(sp)
    80012f38:	a809                	j	80012f4a <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x58>
            } else {
                ptr.add(slice.len())
    80012f3a:	6506                	ld	a0,64(sp)
    80012f3c:	75e2                	ld	a1,56(sp)
    80012f3e:	00009097          	auipc	ra,0x9
    80012f42:	7e8080e7          	jalr	2024(ra) # 8001c726 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc45360ff381e0a5dE>
    80012f46:	ec2a                	sd	a0,24(sp)
    80012f48:	a821                	j	80012f60 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x6e>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    80012f4a:	7522                	ld	a0,40(sp)
    80012f4c:	7582                	ld	a1,32(sp)
    80012f4e:	00006097          	auipc	ra,0x6
    80012f52:	390080e7          	jalr	912(ra) # 800192de <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E>
    80012f56:	e82a                	sd	a0,16(sp)
    80012f58:	a009                	j	80012f5a <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x68>
    80012f5a:	6542                	ld	a0,16(sp)
    80012f5c:	ecaa                	sd	a0,88(sp)
            let end = if mem::size_of::<T>() == 0 {
    80012f5e:	a811                	j	80012f72 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x80>
                ptr.add(slice.len())
    80012f60:	7542                	ld	a0,48(sp)
    80012f62:	65e2                	ld	a1,24(sp)
    80012f64:	00009097          	auipc	ra,0x9
    80012f68:	704080e7          	jalr	1796(ra) # 8001c668 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h24efafb9972ab448E>
    80012f6c:	ecaa                	sd	a0,88(sp)
    80012f6e:	a009                	j	80012f70 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x7e>
            let end = if mem::size_of::<T>() == 0 {
    80012f70:	a009                	j	80012f72 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x80>
            };

            Self { ptr: NonNull::new_unchecked(ptr), end, _marker: PhantomData }
    80012f72:	7542                	ld	a0,48(sp)
    80012f74:	ffff2097          	auipc	ra,0xffff2
    80012f78:	af6080e7          	jalr	-1290(ra) # 80004a6a <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3342b041f8f85d36E>
    80012f7c:	e42a                	sd	a0,8(sp)
    80012f7e:	a009                	j	80012f80 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE+0x8e>
    80012f80:	6566                	ld	a0,88(sp)
    80012f82:	65a2                	ld	a1,8(sp)
    80012f84:	e4ae                	sd	a1,72(sp)
    80012f86:	e8aa                	sd	a0,80(sp)
        }
    }
    80012f88:	e02a                	sd	a0,0(sp)
    80012f8a:	852e                	mv	a0,a1
    80012f8c:	6582                	ld	a1,0(sp)
    80012f8e:	70e6                	ld	ra,120(sp)
    80012f90:	6109                	addi	sp,sp,128
    80012f92:	8082                	ret

Disassembly of section .text._ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E:

0000000080012f94 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E>:
    pub(super) fn new(slice: &'a mut [T]) -> Self {
    80012f94:	7119                	addi	sp,sp,-128
    80012f96:	fc86                	sd	ra,120(sp)
    80012f98:	f0aa                	sd	a0,96(sp)
    80012f9a:	f4ae                	sd	a1,104(sp)
        let ptr = slice.as_mut_ptr();
    80012f9c:	e0aa                	sd	a0,64(sp)
    80012f9e:	fc2e                	sd	a1,56(sp)
    80012fa0:	00005097          	auipc	ra,0x5
    80012fa4:	3f4080e7          	jalr	1012(ra) # 80018394 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h965ad0afe4b3ee72E>
    80012fa8:	85aa                	mv	a1,a0
    80012faa:	f8aa                	sd	a0,112(sp)
    80012fac:	f82e                	sd	a1,48(sp)
    80012fae:	a009                	j	80012fb0 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x1c>
            assume(!ptr.is_null());
    80012fb0:	7542                	ld	a0,48(sp)
    80012fb2:	00005097          	auipc	ra,0x5
    80012fb6:	374080e7          	jalr	884(ra) # 80018326 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha1549d9608753995E>
    80012fba:	a009                	j	80012fbc <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x28>
    80012fbc:	a009                	j	80012fbe <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x2a>
            let end = if mem::size_of::<T>() == 0 {
    80012fbe:	a009                	j	80012fc0 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x2c>
    80012fc0:	4505                	li	a0,1
    80012fc2:	ed09                	bnez	a0,80012fdc <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x48>
    80012fc4:	a009                	j	80012fc6 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x32>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    80012fc6:	7542                	ld	a0,48(sp)
    80012fc8:	6586                	ld	a1,64(sp)
    80012fca:	f42a                	sd	a0,40(sp)
    80012fcc:	852e                	mv	a0,a1
    80012fce:	75e2                	ld	a1,56(sp)
    80012fd0:	00005097          	auipc	ra,0x5
    80012fd4:	3ce080e7          	jalr	974(ra) # 8001839e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9e2712dfd09e8f4dE>
    80012fd8:	f02a                	sd	a0,32(sp)
    80012fda:	a809                	j	80012fec <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x58>
                ptr.add(slice.len())
    80012fdc:	6506                	ld	a0,64(sp)
    80012fde:	75e2                	ld	a1,56(sp)
    80012fe0:	00005097          	auipc	ra,0x5
    80012fe4:	3be080e7          	jalr	958(ra) # 8001839e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9e2712dfd09e8f4dE>
    80012fe8:	ec2a                	sd	a0,24(sp)
    80012fea:	a821                	j	80013002 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x6e>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    80012fec:	7522                	ld	a0,40(sp)
    80012fee:	7582                	ld	a1,32(sp)
    80012ff0:	00006097          	auipc	ra,0x6
    80012ff4:	2ee080e7          	jalr	750(ra) # 800192de <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E>
    80012ff8:	e82a                	sd	a0,16(sp)
    80012ffa:	a009                	j	80012ffc <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x68>
    80012ffc:	6542                	ld	a0,16(sp)
    80012ffe:	ecaa                	sd	a0,88(sp)
            let end = if mem::size_of::<T>() == 0 {
    80013000:	a811                	j	80013014 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x80>
                ptr.add(slice.len())
    80013002:	7542                	ld	a0,48(sp)
    80013004:	65e2                	ld	a1,24(sp)
    80013006:	00005097          	auipc	ra,0x5
    8001300a:	2ee080e7          	jalr	750(ra) # 800182f4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h8f571597377f70efE>
    8001300e:	ecaa                	sd	a0,88(sp)
    80013010:	a009                	j	80013012 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x7e>
            let end = if mem::size_of::<T>() == 0 {
    80013012:	a009                	j	80013014 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x80>
            Self { ptr: NonNull::new_unchecked(ptr), end, _marker: PhantomData }
    80013014:	7542                	ld	a0,48(sp)
    80013016:	ffff2097          	auipc	ra,0xffff2
    8001301a:	a72080e7          	jalr	-1422(ra) # 80004a88 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4c23bebe906be8ebE>
    8001301e:	e42a                	sd	a0,8(sp)
    80013020:	a009                	j	80013022 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E+0x8e>
    80013022:	6566                	ld	a0,88(sp)
    80013024:	65a2                	ld	a1,8(sp)
    80013026:	e4ae                	sd	a1,72(sp)
    80013028:	e8aa                	sd	a0,80(sp)
    }
    8001302a:	e02a                	sd	a0,0(sp)
    8001302c:	852e                	mv	a0,a1
    8001302e:	6582                	ld	a1,0(sp)
    80013030:	70e6                	ld	ra,120(sp)
    80013032:	6109                	addi	sp,sp,128
    80013034:	8082                	ret

Disassembly of section .text._ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E:

0000000080013036 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E>:
    pub(super) fn new(slice: &'a mut [T]) -> Self {
    80013036:	7119                	addi	sp,sp,-128
    80013038:	fc86                	sd	ra,120(sp)
    8001303a:	f0aa                	sd	a0,96(sp)
    8001303c:	f4ae                	sd	a1,104(sp)
        let ptr = slice.as_mut_ptr();
    8001303e:	e0aa                	sd	a0,64(sp)
    80013040:	fc2e                	sd	a1,56(sp)
    80013042:	00000097          	auipc	ra,0x0
    80013046:	c04080e7          	jalr	-1020(ra) # 80012c46 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h223cd8622c8c3f1bE>
    8001304a:	85aa                	mv	a1,a0
    8001304c:	f8aa                	sd	a0,112(sp)
    8001304e:	f82e                	sd	a1,48(sp)
    80013050:	a009                	j	80013052 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x1c>
            assume(!ptr.is_null());
    80013052:	7542                	ld	a0,48(sp)
    80013054:	00006097          	auipc	ra,0x6
    80013058:	338080e7          	jalr	824(ra) # 8001938c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf3a1e7d9f77d17abE>
    8001305c:	a009                	j	8001305e <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x28>
    8001305e:	a009                	j	80013060 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x2a>
            let end = if mem::size_of::<T>() == 0 {
    80013060:	a009                	j	80013062 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x2c>
    80013062:	4505                	li	a0,1
    80013064:	e911                	bnez	a0,80013078 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x42>
    80013066:	a009                	j	80013068 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x32>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    80013068:	6506                	ld	a0,64(sp)
    8001306a:	75e2                	ld	a1,56(sp)
    8001306c:	00000097          	auipc	ra,0x0
    80013070:	c18080e7          	jalr	-1000(ra) # 80012c84 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbe33bf7fb9e363b3E>
    80013074:	f42a                	sd	a0,40(sp)
    80013076:	a809                	j	80013088 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x52>
                ptr.add(slice.len())
    80013078:	6506                	ld	a0,64(sp)
    8001307a:	75e2                	ld	a1,56(sp)
    8001307c:	00000097          	auipc	ra,0x0
    80013080:	c08080e7          	jalr	-1016(ra) # 80012c84 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbe33bf7fb9e363b3E>
    80013084:	f02a                	sd	a0,32(sp)
    80013086:	a821                	j	8001309e <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x68>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    80013088:	7542                	ld	a0,48(sp)
    8001308a:	75a2                	ld	a1,40(sp)
    8001308c:	00006097          	auipc	ra,0x6
    80013090:	252080e7          	jalr	594(ra) # 800192de <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E>
    80013094:	ec2a                	sd	a0,24(sp)
    80013096:	a009                	j	80013098 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x62>
    80013098:	6562                	ld	a0,24(sp)
    8001309a:	ecaa                	sd	a0,88(sp)
            let end = if mem::size_of::<T>() == 0 {
    8001309c:	a811                	j	800130b0 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x7a>
                ptr.add(slice.len())
    8001309e:	7542                	ld	a0,48(sp)
    800130a0:	7582                	ld	a1,32(sp)
    800130a2:	00006097          	auipc	ra,0x6
    800130a6:	2a4080e7          	jalr	676(ra) # 80019346 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb1254e3ac86edc40E>
    800130aa:	ecaa                	sd	a0,88(sp)
    800130ac:	a009                	j	800130ae <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x78>
            let end = if mem::size_of::<T>() == 0 {
    800130ae:	a009                	j	800130b0 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x7a>
            Self { ptr: NonNull::new_unchecked(ptr), end, _marker: PhantomData }
    800130b0:	7542                	ld	a0,48(sp)
    800130b2:	ffff2097          	auipc	ra,0xffff2
    800130b6:	9ea080e7          	jalr	-1558(ra) # 80004a9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h77edbd0aad47c5b9E>
    800130ba:	e82a                	sd	a0,16(sp)
    800130bc:	a009                	j	800130be <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h7f66cf0f9393e448E+0x88>
    800130be:	6566                	ld	a0,88(sp)
    800130c0:	65c2                	ld	a1,16(sp)
    800130c2:	e4ae                	sd	a1,72(sp)
    800130c4:	e8aa                	sd	a0,80(sp)
    }
    800130c6:	e42a                	sd	a0,8(sp)
    800130c8:	852e                	mv	a0,a1
    800130ca:	65a2                	ld	a1,8(sp)
    800130cc:	70e6                	ld	ra,120(sp)
    800130ce:	6109                	addi	sp,sp,128
    800130d0:	8082                	ret

Disassembly of section .text._ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E:

00000000800130d2 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E>:
    pub(super) fn new(slice: &'a mut [T]) -> Self {
    800130d2:	7119                	addi	sp,sp,-128
    800130d4:	fc86                	sd	ra,120(sp)
    800130d6:	f0aa                	sd	a0,96(sp)
    800130d8:	f4ae                	sd	a1,104(sp)
        let ptr = slice.as_mut_ptr();
    800130da:	e0aa                	sd	a0,64(sp)
    800130dc:	fc2e                	sd	a1,56(sp)
    800130de:	00004097          	auipc	ra,0x4
    800130e2:	9b2080e7          	jalr	-1614(ra) # 80016a90 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hc24df89ca06484c1E>
    800130e6:	85aa                	mv	a1,a0
    800130e8:	f8aa                	sd	a0,112(sp)
    800130ea:	f82e                	sd	a1,48(sp)
    800130ec:	a009                	j	800130ee <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x1c>
            assume(!ptr.is_null());
    800130ee:	7542                	ld	a0,48(sp)
    800130f0:	00004097          	auipc	ra,0x4
    800130f4:	978080e7          	jalr	-1672(ra) # 80016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>
    800130f8:	a009                	j	800130fa <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x28>
    800130fa:	a009                	j	800130fc <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x2a>
            let end = if mem::size_of::<T>() == 0 {
    800130fc:	a009                	j	800130fe <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x2c>
    800130fe:	4505                	li	a0,1
    80013100:	ed09                	bnez	a0,8001311a <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x48>
    80013102:	a009                	j	80013104 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x32>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    80013104:	7542                	ld	a0,48(sp)
    80013106:	6586                	ld	a1,64(sp)
    80013108:	f42a                	sd	a0,40(sp)
    8001310a:	852e                	mv	a0,a1
    8001310c:	75e2                	ld	a1,56(sp)
    8001310e:	00004097          	auipc	ra,0x4
    80013112:	98c080e7          	jalr	-1652(ra) # 80016a9a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2724de47f0e590ceE>
    80013116:	f02a                	sd	a0,32(sp)
    80013118:	a809                	j	8001312a <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x58>
                ptr.add(slice.len())
    8001311a:	6506                	ld	a0,64(sp)
    8001311c:	75e2                	ld	a1,56(sp)
    8001311e:	00004097          	auipc	ra,0x4
    80013122:	97c080e7          	jalr	-1668(ra) # 80016a9a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2724de47f0e590ceE>
    80013126:	ec2a                	sd	a0,24(sp)
    80013128:	a821                	j	80013140 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x6e>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    8001312a:	7522                	ld	a0,40(sp)
    8001312c:	7582                	ld	a1,32(sp)
    8001312e:	00006097          	auipc	ra,0x6
    80013132:	1b0080e7          	jalr	432(ra) # 800192de <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E>
    80013136:	e82a                	sd	a0,16(sp)
    80013138:	a009                	j	8001313a <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x68>
    8001313a:	6542                	ld	a0,16(sp)
    8001313c:	ecaa                	sd	a0,88(sp)
            let end = if mem::size_of::<T>() == 0 {
    8001313e:	a811                	j	80013152 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x80>
                ptr.add(slice.len())
    80013140:	7542                	ld	a0,48(sp)
    80013142:	65e2                	ld	a1,24(sp)
    80013144:	00004097          	auipc	ra,0x4
    80013148:	8ba080e7          	jalr	-1862(ra) # 800169fe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hec562f354d7a25f9E>
    8001314c:	ecaa                	sd	a0,88(sp)
    8001314e:	a009                	j	80013150 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x7e>
            let end = if mem::size_of::<T>() == 0 {
    80013150:	a009                	j	80013152 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x80>
            Self { ptr: NonNull::new_unchecked(ptr), end, _marker: PhantomData }
    80013152:	7542                	ld	a0,48(sp)
    80013154:	ffff2097          	auipc	ra,0xffff2
    80013158:	92a080e7          	jalr	-1750(ra) # 80004a7e <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4786fea9648ffd12E>
    8001315c:	e42a                	sd	a0,8(sp)
    8001315e:	a009                	j	80013160 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E+0x8e>
    80013160:	6566                	ld	a0,88(sp)
    80013162:	65a2                	ld	a1,8(sp)
    80013164:	e4ae                	sd	a1,72(sp)
    80013166:	e8aa                	sd	a0,80(sp)
    }
    80013168:	e02a                	sd	a0,0(sp)
    8001316a:	852e                	mv	a0,a1
    8001316c:	6582                	ld	a1,0(sp)
    8001316e:	70e6                	ld	ra,120(sp)
    80013170:	6109                	addi	sp,sp,128
    80013172:	8082                	ret

Disassembly of section .text._ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE:

0000000080013174 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE>:
    pub(super) fn new(slice: &'a mut [T]) -> Self {
    80013174:	7119                	addi	sp,sp,-128
    80013176:	fc86                	sd	ra,120(sp)
    80013178:	f0aa                	sd	a0,96(sp)
    8001317a:	f4ae                	sd	a1,104(sp)
        let ptr = slice.as_mut_ptr();
    8001317c:	e0aa                	sd	a0,64(sp)
    8001317e:	fc2e                	sd	a1,56(sp)
    80013180:	ffff3097          	auipc	ra,0xffff3
    80013184:	bc6080e7          	jalr	-1082(ra) # 80005d46 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7f1394d59155a160E>
    80013188:	85aa                	mv	a1,a0
    8001318a:	f8aa                	sd	a0,112(sp)
    8001318c:	f82e                	sd	a1,48(sp)
    8001318e:	a009                	j	80013190 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x1c>
            assume(!ptr.is_null());
    80013190:	7542                	ld	a0,48(sp)
    80013192:	ffff3097          	auipc	ra,0xffff3
    80013196:	b2c080e7          	jalr	-1236(ra) # 80005cbe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE>
    8001319a:	a009                	j	8001319c <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x28>
    8001319c:	a009                	j	8001319e <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x2a>
            let end = if mem::size_of::<T>() == 0 {
    8001319e:	a009                	j	800131a0 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x2c>
    800131a0:	4505                	li	a0,1
    800131a2:	ed09                	bnez	a0,800131bc <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x48>
    800131a4:	a009                	j	800131a6 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x32>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    800131a6:	7542                	ld	a0,48(sp)
    800131a8:	6586                	ld	a1,64(sp)
    800131aa:	f42a                	sd	a0,40(sp)
    800131ac:	852e                	mv	a0,a1
    800131ae:	75e2                	ld	a1,56(sp)
    800131b0:	ffff3097          	auipc	ra,0xffff3
    800131b4:	ba0080e7          	jalr	-1120(ra) # 80005d50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE>
    800131b8:	f02a                	sd	a0,32(sp)
    800131ba:	a809                	j	800131cc <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x58>
                ptr.add(slice.len())
    800131bc:	6506                	ld	a0,64(sp)
    800131be:	75e2                	ld	a1,56(sp)
    800131c0:	ffff3097          	auipc	ra,0xffff3
    800131c4:	b90080e7          	jalr	-1136(ra) # 80005d50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE>
    800131c8:	ec2a                	sd	a0,24(sp)
    800131ca:	a821                	j	800131e2 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x6e>
                (ptr as *mut u8).wrapping_add(slice.len()) as *mut T
    800131cc:	7522                	ld	a0,40(sp)
    800131ce:	7582                	ld	a1,32(sp)
    800131d0:	00006097          	auipc	ra,0x6
    800131d4:	10e080e7          	jalr	270(ra) # 800192de <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E>
    800131d8:	e82a                	sd	a0,16(sp)
    800131da:	a009                	j	800131dc <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x68>
    800131dc:	6542                	ld	a0,16(sp)
    800131de:	ecaa                	sd	a0,88(sp)
            let end = if mem::size_of::<T>() == 0 {
    800131e0:	a811                	j	800131f4 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x80>
                ptr.add(slice.len())
    800131e2:	7542                	ld	a0,48(sp)
    800131e4:	65e2                	ld	a1,24(sp)
    800131e6:	ffff3097          	auipc	ra,0xffff3
    800131ea:	a46080e7          	jalr	-1466(ra) # 80005c2c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1b5bab886cb6c589E>
    800131ee:	ecaa                	sd	a0,88(sp)
    800131f0:	a009                	j	800131f2 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x7e>
            let end = if mem::size_of::<T>() == 0 {
    800131f2:	a009                	j	800131f4 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x80>
            Self { ptr: NonNull::new_unchecked(ptr), end, _marker: PhantomData }
    800131f4:	7542                	ld	a0,48(sp)
    800131f6:	ffff2097          	auipc	ra,0xffff2
    800131fa:	87e080e7          	jalr	-1922(ra) # 80004a74 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h450bc69c96768377E>
    800131fe:	e42a                	sd	a0,8(sp)
    80013200:	a009                	j	80013202 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17ha07140c8c775bd9cE+0x8e>
    80013202:	6566                	ld	a0,88(sp)
    80013204:	65a2                	ld	a1,8(sp)
    80013206:	e4ae                	sd	a1,72(sp)
    80013208:	e8aa                	sd	a0,80(sp)
    }
    8001320a:	e02a                	sd	a0,0(sp)
    8001320c:	852e                	mv	a0,a1
    8001320e:	6582                	ld	a1,0(sp)
    80013210:	70e6                	ld	ra,120(sp)
    80013212:	6109                	addi	sp,sp,128
    80013214:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1839dc04caf82d17E:

0000000080013216 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1839dc04caf82d17E>:
    fn into_iter(self) -> I {
    80013216:	1141                	addi	sp,sp,-16
    80013218:	e02a                	sd	a0,0(sp)
    8001321a:	e42e                	sd	a1,8(sp)
    }
    8001321c:	0141                	addi	sp,sp,16
    8001321e:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h89c24c14ffde613cE:

0000000080013220 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h89c24c14ffde613cE>:
    fn into_iter(self) -> I {
    80013220:	1141                	addi	sp,sp,-16
    80013222:	e02a                	sd	a0,0(sp)
    80013224:	e42e                	sd	a1,8(sp)
    }
    80013226:	0141                	addi	sp,sp,16
    80013228:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9820011383403f7cE:

000000008001322a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9820011383403f7cE>:
    fn into_iter(self) -> I {
    8001322a:	1141                	addi	sp,sp,-16
    8001322c:	e02a                	sd	a0,0(sp)
    8001322e:	e42e                	sd	a1,8(sp)
    }
    80013230:	0141                	addi	sp,sp,16
    80013232:	8082                	ret

Disassembly of section .text._ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE:

0000000080013234 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE>:
        #[stable(feature = "rust1", since = "1.0.0")]
        impl<'a, T> Iterator for $name<'a, T> {
            type Item = $elem;

            #[inline]
            fn next(&mut self) -> Option<$elem> {
    80013234:	7159                	addi	sp,sp,-112
    80013236:	f486                	sd	ra,104(sp)
    80013238:	e0aa                	sd	a0,64(sp)
                // SAFETY: `assume` calls are safe since a slice's start pointer
                // must be non-null, and slices over non-ZSTs must also have a
                // non-null end pointer. The call to `next_unchecked!` is safe
                // since we check if the iterator is empty first.
                unsafe {
                    assume(!self.ptr.as_ptr().is_null());
    8001323a:	610c                	ld	a1,0(a0)
    8001323c:	f82a                	sd	a0,48(sp)
    8001323e:	852e                	mv	a0,a1
    80013240:	ffff2097          	auipc	ra,0xffff2
    80013244:	a74080e7          	jalr	-1420(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    80013248:	f42a                	sd	a0,40(sp)
    8001324a:	a009                	j	8001324c <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x18>
    8001324c:	7522                	ld	a0,40(sp)
    8001324e:	ffff3097          	auipc	ra,0xffff3
    80013252:	a70080e7          	jalr	-1424(ra) # 80005cbe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE>
    80013256:	a009                	j	80013258 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x24>
    80013258:	a009                	j	8001325a <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x26>
                    if mem::size_of::<T>() != 0 {
    8001325a:	a009                	j	8001325c <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x28>
    8001325c:	4501                	li	a0,0
    8001325e:	e909                	bnez	a0,80013270 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x3c>
    80013260:	a009                	j	80013262 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x2e>
                        assume(!self.end.is_null());
    80013262:	7542                	ld	a0,48(sp)
    80013264:	6508                	ld	a0,8(a0)
    80013266:	ffff3097          	auipc	ra,0xffff3
    8001326a:	ab8080e7          	jalr	-1352(ra) # 80005d1e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5f9be0dc4cb5e613E>
    8001326e:	a011                	j	80013272 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x3e>
                    if mem::size_of::<T>() != 0 {
    80013270:	a019                	j	80013276 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x42>
                        assume(!self.end.is_null());
    80013272:	a009                	j	80013274 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x40>
                    if mem::size_of::<T>() != 0 {
    80013274:	a009                	j	80013276 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x42>
                    }
                    if is_empty!(self) {
    80013276:	7542                	ld	a0,48(sp)
    80013278:	6108                	ld	a0,0(a0)
    8001327a:	ffff2097          	auipc	ra,0xffff2
    8001327e:	a3a080e7          	jalr	-1478(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    80013282:	f02a                	sd	a0,32(sp)
    80013284:	a009                	j	80013286 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x52>
    80013286:	7542                	ld	a0,48(sp)
    80013288:	650c                	ld	a1,8(a0)
    8001328a:	7602                	ld	a2,32(sp)
    8001328c:	00b61663          	bne	a2,a1,80013298 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x64>
    80013290:	a009                	j	80013292 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0x5e>
    80013292:	4501                	li	a0,0
                        None
    80013294:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    80013296:	a0b1                	j	800132e2 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0xae>
    80013298:	7542                	ld	a0,48(sp)
    8001329a:	e8aa                	sd	a0,80(sp)
    8001329c:	4585                	li	a1,1
    8001329e:	ecae                	sd	a1,88(sp)
                    let old = self.ptr.as_ptr();
    800132a0:	6108                	ld	a0,0(a0)
    800132a2:	ec2e                	sd	a1,24(sp)
    800132a4:	ffff2097          	auipc	ra,0xffff2
    800132a8:	a10080e7          	jalr	-1520(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    800132ac:	f0aa                	sd	a0,96(sp)
                    self.ptr = unsafe { NonNull::new_unchecked(self.ptr.as_ptr().offset(offset)) };
    800132ae:	75c2                	ld	a1,48(sp)
    800132b0:	6190                	ld	a2,0(a1)
    800132b2:	e82a                	sd	a0,16(sp)
    800132b4:	8532                	mv	a0,a2
    800132b6:	ffff2097          	auipc	ra,0xffff2
    800132ba:	9fe080e7          	jalr	-1538(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    800132be:	65e2                	ld	a1,24(sp)
    800132c0:	ffff3097          	auipc	ra,0xffff3
    800132c4:	9ba080e7          	jalr	-1606(ra) # 80005c7a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha1968a1ac50d96ddE>
    800132c8:	ffff1097          	auipc	ra,0xffff1
    800132cc:	7ac080e7          	jalr	1964(ra) # 80004a74 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h450bc69c96768377E>
    800132d0:	75c2                	ld	a1,48(sp)
    800132d2:	e188                	sd	a0,0(a1)
                    old
    800132d4:	6542                	ld	a0,16(sp)
    800132d6:	e4aa                	sd	a0,72(sp)
                    } else {
                        Some(next_unchecked!(self))
    800132d8:	e42a                	sd	a0,8(sp)
    800132da:	a009                	j	800132dc <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0xa8>
    800132dc:	6522                	ld	a0,8(sp)
    800132de:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    800132e0:	a009                	j	800132e2 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE+0xae>
                    }
                }
            }
    800132e2:	7562                	ld	a0,56(sp)
    800132e4:	70a6                	ld	ra,104(sp)
    800132e6:	6165                	addi	sp,sp,112
    800132e8:	8082                	ret

Disassembly of section .text._ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E:

00000000800132ea <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E>:
            fn next(&mut self) -> Option<$elem> {
    800132ea:	7159                	addi	sp,sp,-112
    800132ec:	f486                	sd	ra,104(sp)
    800132ee:	e0aa                	sd	a0,64(sp)
                    assume(!self.ptr.as_ptr().is_null());
    800132f0:	610c                	ld	a1,0(a0)
    800132f2:	f82a                	sd	a0,48(sp)
    800132f4:	852e                	mv	a0,a1
    800132f6:	ffff2097          	auipc	ra,0xffff2
    800132fa:	9b6080e7          	jalr	-1610(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    800132fe:	f42a                	sd	a0,40(sp)
    80013300:	a009                	j	80013302 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x18>
    80013302:	7522                	ld	a0,40(sp)
    80013304:	0000d097          	auipc	ra,0xd
    80013308:	468080e7          	jalr	1128(ra) # 8002076c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE>
    8001330c:	a009                	j	8001330e <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x24>
    8001330e:	a009                	j	80013310 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x26>
                    if mem::size_of::<T>() != 0 {
    80013310:	a009                	j	80013312 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x28>
    80013312:	4501                	li	a0,0
    80013314:	e909                	bnez	a0,80013326 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x3c>
    80013316:	a009                	j	80013318 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x2e>
                        assume(!self.end.is_null());
    80013318:	7542                	ld	a0,48(sp)
    8001331a:	6508                	ld	a0,8(a0)
    8001331c:	0000d097          	auipc	ra,0xd
    80013320:	e96080e7          	jalr	-362(ra) # 800201b2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb556183de7398b23E>
    80013324:	a011                	j	80013328 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x3e>
                    if mem::size_of::<T>() != 0 {
    80013326:	a019                	j	8001332c <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x42>
                        assume(!self.end.is_null());
    80013328:	a009                	j	8001332a <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x40>
                    if mem::size_of::<T>() != 0 {
    8001332a:	a009                	j	8001332c <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x42>
                    if is_empty!(self) {
    8001332c:	7542                	ld	a0,48(sp)
    8001332e:	6108                	ld	a0,0(a0)
    80013330:	ffff2097          	auipc	ra,0xffff2
    80013334:	97c080e7          	jalr	-1668(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    80013338:	f02a                	sd	a0,32(sp)
    8001333a:	a009                	j	8001333c <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x52>
    8001333c:	7542                	ld	a0,48(sp)
    8001333e:	650c                	ld	a1,8(a0)
    80013340:	7602                	ld	a2,32(sp)
    80013342:	00b61663          	bne	a2,a1,8001334e <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x64>
    80013346:	a009                	j	80013348 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0x5e>
    80013348:	4501                	li	a0,0
                        None
    8001334a:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    8001334c:	a0b1                	j	80013398 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0xae>
    8001334e:	7542                	ld	a0,48(sp)
    80013350:	e8aa                	sd	a0,80(sp)
    80013352:	4585                	li	a1,1
    80013354:	ecae                	sd	a1,88(sp)
                    let old = self.ptr.as_ptr();
    80013356:	6108                	ld	a0,0(a0)
    80013358:	ec2e                	sd	a1,24(sp)
    8001335a:	ffff2097          	auipc	ra,0xffff2
    8001335e:	952080e7          	jalr	-1710(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    80013362:	f0aa                	sd	a0,96(sp)
                    self.ptr = unsafe { NonNull::new_unchecked(self.ptr.as_ptr().offset(offset)) };
    80013364:	75c2                	ld	a1,48(sp)
    80013366:	6190                	ld	a2,0(a1)
    80013368:	e82a                	sd	a0,16(sp)
    8001336a:	8532                	mv	a0,a2
    8001336c:	ffff2097          	auipc	ra,0xffff2
    80013370:	940080e7          	jalr	-1728(ra) # 80004cac <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5d75c92bac028b01E>
    80013374:	65e2                	ld	a1,24(sp)
    80013376:	0000d097          	auipc	ra,0xd
    8001337a:	3e2080e7          	jalr	994(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    8001337e:	ffff1097          	auipc	ra,0xffff1
    80013382:	732080e7          	jalr	1842(ra) # 80004ab0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h965a9573c35b782dE>
    80013386:	75c2                	ld	a1,48(sp)
    80013388:	e188                	sd	a0,0(a1)
                    old
    8001338a:	6542                	ld	a0,16(sp)
    8001338c:	e4aa                	sd	a0,72(sp)
                        Some(next_unchecked!(self))
    8001338e:	e42a                	sd	a0,8(sp)
    80013390:	a009                	j	80013392 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0xa8>
    80013392:	6522                	ld	a0,8(sp)
    80013394:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    80013396:	a009                	j	80013398 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5f18e5d390e07082E+0xae>
            }
    80013398:	7562                	ld	a0,56(sp)
    8001339a:	70a6                	ld	ra,104(sp)
    8001339c:	6165                	addi	sp,sp,112
    8001339e:	8082                	ret

Disassembly of section .text._ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E:

00000000800133a0 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E>:
            fn next(&mut self) -> Option<$elem> {
    800133a0:	7159                	addi	sp,sp,-112
    800133a2:	f486                	sd	ra,104(sp)
    800133a4:	e0aa                	sd	a0,64(sp)
                    assume(!self.ptr.as_ptr().is_null());
    800133a6:	610c                	ld	a1,0(a0)
    800133a8:	f82a                	sd	a0,48(sp)
    800133aa:	852e                	mv	a0,a1
    800133ac:	ffff2097          	auipc	ra,0xffff2
    800133b0:	918080e7          	jalr	-1768(ra) # 80004cc4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h75b9addfd3a1513bE>
    800133b4:	f42a                	sd	a0,40(sp)
    800133b6:	a009                	j	800133b8 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x18>
    800133b8:	7522                	ld	a0,40(sp)
    800133ba:	00003097          	auipc	ra,0x3
    800133be:	6ae080e7          	jalr	1710(ra) # 80016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>
    800133c2:	a009                	j	800133c4 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x24>
    800133c4:	a009                	j	800133c6 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x26>
                    if mem::size_of::<T>() != 0 {
    800133c6:	a009                	j	800133c8 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x28>
    800133c8:	4501                	li	a0,0
    800133ca:	e909                	bnez	a0,800133dc <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x3c>
    800133cc:	a009                	j	800133ce <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x2e>
                        assume(!self.end.is_null());
    800133ce:	7542                	ld	a0,48(sp)
    800133d0:	6508                	ld	a0,8(a0)
    800133d2:	00003097          	auipc	ra,0x3
    800133d6:	696080e7          	jalr	1686(ra) # 80016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>
    800133da:	a011                	j	800133de <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x3e>
                    if mem::size_of::<T>() != 0 {
    800133dc:	a019                	j	800133e2 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x42>
                        assume(!self.end.is_null());
    800133de:	a009                	j	800133e0 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x40>
                    if mem::size_of::<T>() != 0 {
    800133e0:	a009                	j	800133e2 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x42>
                    if is_empty!(self) {
    800133e2:	7542                	ld	a0,48(sp)
    800133e4:	6108                	ld	a0,0(a0)
    800133e6:	ffff2097          	auipc	ra,0xffff2
    800133ea:	8de080e7          	jalr	-1826(ra) # 80004cc4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h75b9addfd3a1513bE>
    800133ee:	f02a                	sd	a0,32(sp)
    800133f0:	a009                	j	800133f2 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x52>
    800133f2:	7542                	ld	a0,48(sp)
    800133f4:	650c                	ld	a1,8(a0)
    800133f6:	7602                	ld	a2,32(sp)
    800133f8:	00b61663          	bne	a2,a1,80013404 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x64>
    800133fc:	a009                	j	800133fe <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0x5e>
    800133fe:	4501                	li	a0,0
                        None
    80013400:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    80013402:	a0b1                	j	8001344e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0xae>
    80013404:	7542                	ld	a0,48(sp)
    80013406:	e8aa                	sd	a0,80(sp)
    80013408:	4585                	li	a1,1
    8001340a:	ecae                	sd	a1,88(sp)
                    let old = self.ptr.as_ptr();
    8001340c:	6108                	ld	a0,0(a0)
    8001340e:	ec2e                	sd	a1,24(sp)
    80013410:	ffff2097          	auipc	ra,0xffff2
    80013414:	8b4080e7          	jalr	-1868(ra) # 80004cc4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h75b9addfd3a1513bE>
    80013418:	f0aa                	sd	a0,96(sp)
                    self.ptr = unsafe { NonNull::new_unchecked(self.ptr.as_ptr().offset(offset)) };
    8001341a:	75c2                	ld	a1,48(sp)
    8001341c:	6190                	ld	a2,0(a1)
    8001341e:	e82a                	sd	a0,16(sp)
    80013420:	8532                	mv	a0,a2
    80013422:	ffff2097          	auipc	ra,0xffff2
    80013426:	8a2080e7          	jalr	-1886(ra) # 80004cc4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h75b9addfd3a1513bE>
    8001342a:	65e2                	ld	a1,24(sp)
    8001342c:	00003097          	auipc	ra,0x3
    80013430:	620080e7          	jalr	1568(ra) # 80016a4c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h88b870a9120ad7faE>
    80013434:	ffff1097          	auipc	ra,0xffff1
    80013438:	64a080e7          	jalr	1610(ra) # 80004a7e <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4786fea9648ffd12E>
    8001343c:	75c2                	ld	a1,48(sp)
    8001343e:	e188                	sd	a0,0(a1)
                    old
    80013440:	6542                	ld	a0,16(sp)
    80013442:	e4aa                	sd	a0,72(sp)
                        Some(next_unchecked!(self))
    80013444:	e42a                	sd	a0,8(sp)
    80013446:	a009                	j	80013448 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0xa8>
    80013448:	6522                	ld	a0,8(sp)
    8001344a:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    8001344c:	a009                	j	8001344e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h13a1becfb99ed538E+0xae>
            }
    8001344e:	7562                	ld	a0,56(sp)
    80013450:	70a6                	ld	ra,104(sp)
    80013452:	6165                	addi	sp,sp,112
    80013454:	8082                	ret

Disassembly of section .text._ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E:

0000000080013456 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E>:
            fn next(&mut self) -> Option<$elem> {
    80013456:	7159                	addi	sp,sp,-112
    80013458:	f486                	sd	ra,104(sp)
    8001345a:	e0aa                	sd	a0,64(sp)
                    assume(!self.ptr.as_ptr().is_null());
    8001345c:	610c                	ld	a1,0(a0)
    8001345e:	f82a                	sd	a0,48(sp)
    80013460:	852e                	mv	a0,a1
    80013462:	ffff2097          	auipc	ra,0xffff2
    80013466:	852080e7          	jalr	-1966(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    8001346a:	f42a                	sd	a0,40(sp)
    8001346c:	a009                	j	8001346e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x18>
    8001346e:	7522                	ld	a0,40(sp)
    80013470:	ffff3097          	auipc	ra,0xffff3
    80013474:	84e080e7          	jalr	-1970(ra) # 80005cbe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE>
    80013478:	a009                	j	8001347a <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x24>
    8001347a:	a009                	j	8001347c <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x26>
                    if mem::size_of::<T>() != 0 {
    8001347c:	a009                	j	8001347e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x28>
    8001347e:	4501                	li	a0,0
    80013480:	e909                	bnez	a0,80013492 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x3c>
    80013482:	a009                	j	80013484 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x2e>
                        assume(!self.end.is_null());
    80013484:	7542                	ld	a0,48(sp)
    80013486:	6508                	ld	a0,8(a0)
    80013488:	ffff3097          	auipc	ra,0xffff3
    8001348c:	836080e7          	jalr	-1994(ra) # 80005cbe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h84d8f9a42177499fE>
    80013490:	a011                	j	80013494 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x3e>
                    if mem::size_of::<T>() != 0 {
    80013492:	a019                	j	80013498 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x42>
                        assume(!self.end.is_null());
    80013494:	a009                	j	80013496 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x40>
                    if mem::size_of::<T>() != 0 {
    80013496:	a009                	j	80013498 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x42>
                    if is_empty!(self) {
    80013498:	7542                	ld	a0,48(sp)
    8001349a:	6108                	ld	a0,0(a0)
    8001349c:	ffff2097          	auipc	ra,0xffff2
    800134a0:	818080e7          	jalr	-2024(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    800134a4:	f02a                	sd	a0,32(sp)
    800134a6:	a009                	j	800134a8 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x52>
    800134a8:	7542                	ld	a0,48(sp)
    800134aa:	650c                	ld	a1,8(a0)
    800134ac:	7602                	ld	a2,32(sp)
    800134ae:	00b61663          	bne	a2,a1,800134ba <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x64>
    800134b2:	a009                	j	800134b4 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0x5e>
    800134b4:	4501                	li	a0,0
                        None
    800134b6:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    800134b8:	a0b1                	j	80013504 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0xae>
    800134ba:	7542                	ld	a0,48(sp)
    800134bc:	e8aa                	sd	a0,80(sp)
    800134be:	4585                	li	a1,1
    800134c0:	ecae                	sd	a1,88(sp)
                    let old = self.ptr.as_ptr();
    800134c2:	6108                	ld	a0,0(a0)
    800134c4:	ec2e                	sd	a1,24(sp)
    800134c6:	ffff1097          	auipc	ra,0xffff1
    800134ca:	7ee080e7          	jalr	2030(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    800134ce:	f0aa                	sd	a0,96(sp)
                    self.ptr = unsafe { NonNull::new_unchecked(self.ptr.as_ptr().offset(offset)) };
    800134d0:	75c2                	ld	a1,48(sp)
    800134d2:	6190                	ld	a2,0(a1)
    800134d4:	e82a                	sd	a0,16(sp)
    800134d6:	8532                	mv	a0,a2
    800134d8:	ffff1097          	auipc	ra,0xffff1
    800134dc:	7dc080e7          	jalr	2012(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    800134e0:	65e2                	ld	a1,24(sp)
    800134e2:	ffff2097          	auipc	ra,0xffff2
    800134e6:	798080e7          	jalr	1944(ra) # 80005c7a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha1968a1ac50d96ddE>
    800134ea:	ffff1097          	auipc	ra,0xffff1
    800134ee:	58a080e7          	jalr	1418(ra) # 80004a74 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h450bc69c96768377E>
    800134f2:	75c2                	ld	a1,48(sp)
    800134f4:	e188                	sd	a0,0(a1)
                    old
    800134f6:	6542                	ld	a0,16(sp)
    800134f8:	e4aa                	sd	a0,72(sp)
                        Some(next_unchecked!(self))
    800134fa:	e42a                	sd	a0,8(sp)
    800134fc:	a009                	j	800134fe <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0xa8>
    800134fe:	6522                	ld	a0,8(sp)
    80013500:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    80013502:	a009                	j	80013504 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E+0xae>
            }
    80013504:	7562                	ld	a0,56(sp)
    80013506:	70a6                	ld	ra,104(sp)
    80013508:	6165                	addi	sp,sp,112
    8001350a:	8082                	ret

Disassembly of section .text._ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E:

000000008001350c <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E>:
            fn next(&mut self) -> Option<$elem> {
    8001350c:	7159                	addi	sp,sp,-112
    8001350e:	f486                	sd	ra,104(sp)
    80013510:	e0aa                	sd	a0,64(sp)
                    assume(!self.ptr.as_ptr().is_null());
    80013512:	610c                	ld	a1,0(a0)
    80013514:	f82a                	sd	a0,48(sp)
    80013516:	852e                	mv	a0,a1
    80013518:	ffff1097          	auipc	ra,0xffff1
    8001351c:	7a4080e7          	jalr	1956(ra) # 80004cbc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7310b7309020d10cE>
    80013520:	f42a                	sd	a0,40(sp)
    80013522:	a009                	j	80013524 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x18>
    80013524:	7522                	ld	a0,40(sp)
    80013526:	00009097          	auipc	ra,0x9
    8001352a:	1a6080e7          	jalr	422(ra) # 8001c6cc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1293cd13a0b60abaE>
    8001352e:	a009                	j	80013530 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x24>
    80013530:	a009                	j	80013532 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x26>
                    if mem::size_of::<T>() != 0 {
    80013532:	a009                	j	80013534 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x28>
    80013534:	4501                	li	a0,0
    80013536:	e909                	bnez	a0,80013548 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x3c>
    80013538:	a009                	j	8001353a <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x2e>
                        assume(!self.end.is_null());
    8001353a:	7542                	ld	a0,48(sp)
    8001353c:	6508                	ld	a0,8(a0)
    8001353e:	00009097          	auipc	ra,0x9
    80013542:	18e080e7          	jalr	398(ra) # 8001c6cc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1293cd13a0b60abaE>
    80013546:	a011                	j	8001354a <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x3e>
                    if mem::size_of::<T>() != 0 {
    80013548:	a019                	j	8001354e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x42>
                        assume(!self.end.is_null());
    8001354a:	a009                	j	8001354c <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x40>
                    if mem::size_of::<T>() != 0 {
    8001354c:	a009                	j	8001354e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x42>
                    if is_empty!(self) {
    8001354e:	7542                	ld	a0,48(sp)
    80013550:	6108                	ld	a0,0(a0)
    80013552:	ffff1097          	auipc	ra,0xffff1
    80013556:	76a080e7          	jalr	1898(ra) # 80004cbc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7310b7309020d10cE>
    8001355a:	f02a                	sd	a0,32(sp)
    8001355c:	a009                	j	8001355e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x52>
    8001355e:	7542                	ld	a0,48(sp)
    80013560:	650c                	ld	a1,8(a0)
    80013562:	7602                	ld	a2,32(sp)
    80013564:	00b61663          	bne	a2,a1,80013570 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x64>
    80013568:	a009                	j	8001356a <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0x5e>
    8001356a:	4501                	li	a0,0
                        None
    8001356c:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    8001356e:	a0b1                	j	800135ba <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0xae>
    80013570:	7542                	ld	a0,48(sp)
    80013572:	e8aa                	sd	a0,80(sp)
    80013574:	4585                	li	a1,1
    80013576:	ecae                	sd	a1,88(sp)
                    let old = self.ptr.as_ptr();
    80013578:	6108                	ld	a0,0(a0)
    8001357a:	ec2e                	sd	a1,24(sp)
    8001357c:	ffff1097          	auipc	ra,0xffff1
    80013580:	740080e7          	jalr	1856(ra) # 80004cbc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7310b7309020d10cE>
    80013584:	f0aa                	sd	a0,96(sp)
                    self.ptr = unsafe { NonNull::new_unchecked(self.ptr.as_ptr().offset(offset)) };
    80013586:	75c2                	ld	a1,48(sp)
    80013588:	6190                	ld	a2,0(a1)
    8001358a:	e82a                	sd	a0,16(sp)
    8001358c:	8532                	mv	a0,a2
    8001358e:	ffff1097          	auipc	ra,0xffff1
    80013592:	72e080e7          	jalr	1838(ra) # 80004cbc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7310b7309020d10cE>
    80013596:	65e2                	ld	a1,24(sp)
    80013598:	00009097          	auipc	ra,0x9
    8001359c:	11e080e7          	jalr	286(ra) # 8001c6b6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he43ab1f6e6d36455E>
    800135a0:	ffff1097          	auipc	ra,0xffff1
    800135a4:	4ca080e7          	jalr	1226(ra) # 80004a6a <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3342b041f8f85d36E>
    800135a8:	75c2                	ld	a1,48(sp)
    800135aa:	e188                	sd	a0,0(a1)
                    old
    800135ac:	6542                	ld	a0,16(sp)
    800135ae:	e4aa                	sd	a0,72(sp)
                        Some(next_unchecked!(self))
    800135b0:	e42a                	sd	a0,8(sp)
    800135b2:	a009                	j	800135b4 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0xa8>
    800135b4:	6522                	ld	a0,8(sp)
    800135b6:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    800135b8:	a009                	j	800135ba <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E+0xae>
            }
    800135ba:	7562                	ld	a0,56(sp)
    800135bc:	70a6                	ld	ra,104(sp)
    800135be:	6165                	addi	sp,sp,112
    800135c0:	8082                	ret

Disassembly of section .text._ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E:

00000000800135c2 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E>:
            fn next(&mut self) -> Option<$elem> {
    800135c2:	7159                	addi	sp,sp,-112
    800135c4:	f486                	sd	ra,104(sp)
    800135c6:	e0aa                	sd	a0,64(sp)
                    assume(!self.ptr.as_ptr().is_null());
    800135c8:	610c                	ld	a1,0(a0)
    800135ca:	f82a                	sd	a0,48(sp)
    800135cc:	852e                	mv	a0,a1
    800135ce:	ffff1097          	auipc	ra,0xffff1
    800135d2:	6c6080e7          	jalr	1734(ra) # 80004c94 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2a163514486903a6E>
    800135d6:	f42a                	sd	a0,40(sp)
    800135d8:	a009                	j	800135da <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x18>
    800135da:	7522                	ld	a0,40(sp)
    800135dc:	00006097          	auipc	ra,0x6
    800135e0:	db0080e7          	jalr	-592(ra) # 8001938c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf3a1e7d9f77d17abE>
    800135e4:	a009                	j	800135e6 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x24>
    800135e6:	a009                	j	800135e8 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x26>
                    if mem::size_of::<T>() != 0 {
    800135e8:	a009                	j	800135ea <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x28>
    800135ea:	4501                	li	a0,0
    800135ec:	e909                	bnez	a0,800135fe <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x3c>
    800135ee:	a009                	j	800135f0 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x2e>
                        assume(!self.end.is_null());
    800135f0:	7542                	ld	a0,48(sp)
    800135f2:	6508                	ld	a0,8(a0)
    800135f4:	00006097          	auipc	ra,0x6
    800135f8:	d98080e7          	jalr	-616(ra) # 8001938c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf3a1e7d9f77d17abE>
    800135fc:	a011                	j	80013600 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x3e>
                    if mem::size_of::<T>() != 0 {
    800135fe:	a019                	j	80013604 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x42>
                        assume(!self.end.is_null());
    80013600:	a009                	j	80013602 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x40>
                    if mem::size_of::<T>() != 0 {
    80013602:	a009                	j	80013604 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x42>
                    if is_empty!(self) {
    80013604:	7542                	ld	a0,48(sp)
    80013606:	6108                	ld	a0,0(a0)
    80013608:	ffff1097          	auipc	ra,0xffff1
    8001360c:	68c080e7          	jalr	1676(ra) # 80004c94 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2a163514486903a6E>
    80013610:	f02a                	sd	a0,32(sp)
    80013612:	a009                	j	80013614 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x52>
    80013614:	7542                	ld	a0,48(sp)
    80013616:	650c                	ld	a1,8(a0)
    80013618:	7602                	ld	a2,32(sp)
    8001361a:	00b61663          	bne	a2,a1,80013626 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x64>
    8001361e:	a009                	j	80013620 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0x5e>
    80013620:	4501                	li	a0,0
                        None
    80013622:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    80013624:	a0b1                	j	80013670 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0xae>
    80013626:	7542                	ld	a0,48(sp)
    80013628:	e8aa                	sd	a0,80(sp)
    8001362a:	4585                	li	a1,1
    8001362c:	ecae                	sd	a1,88(sp)
                    let old = self.ptr.as_ptr();
    8001362e:	6108                	ld	a0,0(a0)
    80013630:	ec2e                	sd	a1,24(sp)
    80013632:	ffff1097          	auipc	ra,0xffff1
    80013636:	662080e7          	jalr	1634(ra) # 80004c94 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2a163514486903a6E>
    8001363a:	f0aa                	sd	a0,96(sp)
                    self.ptr = unsafe { NonNull::new_unchecked(self.ptr.as_ptr().offset(offset)) };
    8001363c:	75c2                	ld	a1,48(sp)
    8001363e:	6190                	ld	a2,0(a1)
    80013640:	e82a                	sd	a0,16(sp)
    80013642:	8532                	mv	a0,a2
    80013644:	ffff1097          	auipc	ra,0xffff1
    80013648:	650080e7          	jalr	1616(ra) # 80004c94 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2a163514486903a6E>
    8001364c:	65e2                	ld	a1,24(sp)
    8001364e:	00006097          	auipc	ra,0x6
    80013652:	d2a080e7          	jalr	-726(ra) # 80019378 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfd9153fb0c019b16E>
    80013656:	ffff1097          	auipc	ra,0xffff1
    8001365a:	446080e7          	jalr	1094(ra) # 80004a9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h77edbd0aad47c5b9E>
    8001365e:	75c2                	ld	a1,48(sp)
    80013660:	e188                	sd	a0,0(a1)
                    old
    80013662:	6542                	ld	a0,16(sp)
    80013664:	e4aa                	sd	a0,72(sp)
                        Some(next_unchecked!(self))
    80013666:	e42a                	sd	a0,8(sp)
    80013668:	a009                	j	8001366a <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0xa8>
    8001366a:	6522                	ld	a0,8(sp)
    8001366c:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    8001366e:	a009                	j	80013670 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E+0xae>
            }
    80013670:	7562                	ld	a0,56(sp)
    80013672:	70a6                	ld	ra,104(sp)
    80013674:	6165                	addi	sp,sp,112
    80013676:	8082                	ret

Disassembly of section .text._ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E:

0000000080013678 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E>:
            fn next(&mut self) -> Option<$elem> {
    80013678:	7159                	addi	sp,sp,-112
    8001367a:	f486                	sd	ra,104(sp)
    8001367c:	e0aa                	sd	a0,64(sp)
                    assume(!self.ptr.as_ptr().is_null());
    8001367e:	610c                	ld	a1,0(a0)
    80013680:	f82a                	sd	a0,48(sp)
    80013682:	852e                	mv	a0,a1
    80013684:	ffff1097          	auipc	ra,0xffff1
    80013688:	618080e7          	jalr	1560(ra) # 80004c9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2b3b5915d08cee17E>
    8001368c:	f42a                	sd	a0,40(sp)
    8001368e:	a009                	j	80013690 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x18>
    80013690:	7522                	ld	a0,40(sp)
    80013692:	00005097          	auipc	ra,0x5
    80013696:	c94080e7          	jalr	-876(ra) # 80018326 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha1549d9608753995E>
    8001369a:	a009                	j	8001369c <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x24>
    8001369c:	a009                	j	8001369e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x26>
                    if mem::size_of::<T>() != 0 {
    8001369e:	a009                	j	800136a0 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x28>
    800136a0:	4501                	li	a0,0
    800136a2:	e909                	bnez	a0,800136b4 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x3c>
    800136a4:	a009                	j	800136a6 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x2e>
                        assume(!self.end.is_null());
    800136a6:	7542                	ld	a0,48(sp)
    800136a8:	6508                	ld	a0,8(a0)
    800136aa:	00005097          	auipc	ra,0x5
    800136ae:	c7c080e7          	jalr	-900(ra) # 80018326 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha1549d9608753995E>
    800136b2:	a011                	j	800136b6 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x3e>
                    if mem::size_of::<T>() != 0 {
    800136b4:	a019                	j	800136ba <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x42>
                        assume(!self.end.is_null());
    800136b6:	a009                	j	800136b8 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x40>
                    if mem::size_of::<T>() != 0 {
    800136b8:	a009                	j	800136ba <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x42>
                    if is_empty!(self) {
    800136ba:	7542                	ld	a0,48(sp)
    800136bc:	6108                	ld	a0,0(a0)
    800136be:	ffff1097          	auipc	ra,0xffff1
    800136c2:	5de080e7          	jalr	1502(ra) # 80004c9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2b3b5915d08cee17E>
    800136c6:	f02a                	sd	a0,32(sp)
    800136c8:	a009                	j	800136ca <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x52>
    800136ca:	7542                	ld	a0,48(sp)
    800136cc:	650c                	ld	a1,8(a0)
    800136ce:	7602                	ld	a2,32(sp)
    800136d0:	00b61663          	bne	a2,a1,800136dc <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x64>
    800136d4:	a009                	j	800136d6 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0x5e>
    800136d6:	4501                	li	a0,0
                        None
    800136d8:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    800136da:	a0b1                	j	80013726 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0xae>
    800136dc:	7542                	ld	a0,48(sp)
    800136de:	e8aa                	sd	a0,80(sp)
    800136e0:	4585                	li	a1,1
    800136e2:	ecae                	sd	a1,88(sp)
                    let old = self.ptr.as_ptr();
    800136e4:	6108                	ld	a0,0(a0)
    800136e6:	ec2e                	sd	a1,24(sp)
    800136e8:	ffff1097          	auipc	ra,0xffff1
    800136ec:	5b4080e7          	jalr	1460(ra) # 80004c9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2b3b5915d08cee17E>
    800136f0:	f0aa                	sd	a0,96(sp)
                    self.ptr = unsafe { NonNull::new_unchecked(self.ptr.as_ptr().offset(offset)) };
    800136f2:	75c2                	ld	a1,48(sp)
    800136f4:	6190                	ld	a2,0(a1)
    800136f6:	e82a                	sd	a0,16(sp)
    800136f8:	8532                	mv	a0,a2
    800136fa:	ffff1097          	auipc	ra,0xffff1
    800136fe:	5a2080e7          	jalr	1442(ra) # 80004c9c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2b3b5915d08cee17E>
    80013702:	65e2                	ld	a1,24(sp)
    80013704:	00005097          	auipc	ra,0x5
    80013708:	c0c080e7          	jalr	-1012(ra) # 80018310 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h33ea320c421eb7e4E>
    8001370c:	ffff1097          	auipc	ra,0xffff1
    80013710:	37c080e7          	jalr	892(ra) # 80004a88 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4c23bebe906be8ebE>
    80013714:	75c2                	ld	a1,48(sp)
    80013716:	e188                	sd	a0,0(a1)
                    old
    80013718:	6542                	ld	a0,16(sp)
    8001371a:	e4aa                	sd	a0,72(sp)
                        Some(next_unchecked!(self))
    8001371c:	e42a                	sd	a0,8(sp)
    8001371e:	a009                	j	80013720 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0xa8>
    80013720:	6522                	ld	a0,8(sp)
    80013722:	fc2a                	sd	a0,56(sp)
                    if is_empty!(self) {
    80013724:	a009                	j	80013726 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfc6e5f3f92bf1707E+0xae>
            }
    80013726:	7562                	ld	a0,56(sp)
    80013728:	70a6                	ld	ra,104(sp)
    8001372a:	6165                	addi	sp,sp,112
    8001372c:	8082                	ret

Disassembly of section .text._ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E:

000000008001372e <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E>:

            // We override the default implementation, which uses `try_fold`,
            // because this simple implementation generates less LLVM IR and is
            // faster to compile.
            #[inline]
            fn for_each<F>(mut self, mut f: F)
    8001372e:	7139                	addi	sp,sp,-64
    80013730:	fc06                	sd	ra,56(sp)
    80013732:	e42a                	sd	a0,8(sp)
    80013734:	e82e                	sd	a1,16(sp)
    80013736:	a009                	j	80013738 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E+0xa>
    80013738:	0028                	addi	a0,sp,8
            where
                Self: Sized,
                F: FnMut(Self::Item),
            {
                while let Some(x) = self.next() {
    8001373a:	00000097          	auipc	ra,0x0
    8001373e:	e88080e7          	jalr	-376(ra) # 800135c2 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he6b2c16a8cd18405E>
    80013742:	f02a                	sd	a0,32(sp)
    80013744:	a009                	j	80013746 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E+0x18>
    80013746:	7502                	ld	a0,32(sp)
    80013748:	4581                	li	a1,0
    8001374a:	00b51463          	bne	a0,a1,80013752 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E+0x24>
    8001374e:	a009                	j	80013750 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E+0x22>
                    f(x);
                }
            }
    80013750:	a831                	j	8001376c <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E+0x3e>
                while let Some(x) = self.next() {
    80013752:	7502                	ld	a0,32(sp)
    80013754:	f82a                	sd	a0,48(sp)
                    f(x);
    80013756:	f42a                	sd	a0,40(sp)
    80013758:	082c                	addi	a1,sp,24
    8001375a:	e02a                	sd	a0,0(sp)
    8001375c:	852e                	mv	a0,a1
    8001375e:	6582                	ld	a1,0(sp)
    80013760:	ffff4097          	auipc	ra,0xffff4
    80013764:	194080e7          	jalr	404(ra) # 800078f4 <_ZN6kernel6driver11virtio_disk4Disk4init28_$u7b$$u7b$closure$u7d$$u7d$17h689471537d47629aE>
    80013768:	a009                	j	8001376a <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E+0x3c>
                while let Some(x) = self.next() {
    8001376a:	b7f9                	j	80013738 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8for_each17hfcad8a0c57f72604E+0xa>
            }
    8001376c:	70e2                	ld	ra,56(sp)
    8001376e:	6121                	addi	sp,sp,64
    80013770:	8082                	ret

Disassembly of section .text._ZN6kernel8register4mepc5write17had4cb98d9dba847eE:

0000000080013772 <_ZN6kernel8register4mepc5write17had4cb98d9dba847eE>:
// machine exception program counter, holds the
// instruction address to which a return from
// exception will go.
#[inline]
pub unsafe fn write(mepc: usize) {
    80013772:	1141                	addi	sp,sp,-16
    80013774:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw mepc, $0" :: "r"(mepc)::"volatile");
    80013776:	34151073          	csrw	mepc,a0
    8001377a:	0141                	addi	sp,sp,16
    8001377c:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hc5b0d135fc74abafE:

000000008001377e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hc5b0d135fc74abafE>:
    /// ```
    #[stable(feature = "pointer_methods", since = "1.26.0")]
    #[must_use = "returns a new pointer rather than modifying its argument"]
    #[rustc_const_unstable(feature = "const_ptr_offset", issue = "71499")]
    #[inline]
    pub const fn wrapping_add(self, count: usize) -> Self
    8001377e:	1101                	addi	sp,sp,-32
    80013780:	ec06                	sd	ra,24(sp)
    80013782:	e42a                	sd	a0,8(sp)
    80013784:	e82e                	sd	a1,16(sp)
    where
        T: Sized,
    {
        self.wrapping_offset(count as isize)
    80013786:	00000097          	auipc	ra,0x0
    8001378a:	014080e7          	jalr	20(ra) # 8001379a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17he5ec540724edb38cE>
    8001378e:	e02a                	sd	a0,0(sp)
    80013790:	a009                	j	80013792 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hc5b0d135fc74abafE+0x14>
    }
    80013792:	6502                	ld	a0,0(sp)
    80013794:	60e2                	ld	ra,24(sp)
    80013796:	6105                	addi	sp,sp,32
    80013798:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17he5ec540724edb38cE:

000000008001379a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17he5ec540724edb38cE>:
    pub const fn wrapping_offset(self, count: isize) -> *const T
    8001379a:	1101                	addi	sp,sp,-32
    8001379c:	e42a                	sd	a0,8(sp)
    8001379e:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::arith_offset(self, count) }
    800137a0:	952e                	add	a0,a0,a1
    800137a2:	ec2a                	sd	a0,24(sp)
    800137a4:	e02a                	sd	a0,0(sp)
    800137a6:	a009                	j	800137a8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17he5ec540724edb38cE+0xe>
    }
    800137a8:	6502                	ld	a0,0(sp)
    800137aa:	6105                	addi	sp,sp,32
    800137ac:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hbc396b08ae82cfd4E:

00000000800137ae <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hbc396b08ae82cfd4E>:
    pub const unsafe fn offset(self, count: isize) -> *const T
    800137ae:	1101                	addi	sp,sp,-32
    800137b0:	e42a                	sd	a0,8(sp)
    800137b2:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) }
    800137b4:	058a                	slli	a1,a1,0x2
    800137b6:	952e                	add	a0,a0,a1
    800137b8:	ec2a                	sd	a0,24(sp)
    800137ba:	e02a                	sd	a0,0(sp)
    800137bc:	a009                	j	800137be <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hbc396b08ae82cfd4E+0x10>
    }
    800137be:	6502                	ld	a0,0(sp)
    800137c0:	6105                	addi	sp,sp,32
    800137c2:	8082                	ret

Disassembly of section .text.rust_oom:

00000000800137c4 <rust_oom>:

#[global_allocator]
pub static KERNEL_HEAP: KernelHeap = KernelHeap::uninit();

#[alloc_error_handler]
fn alloc_error_handler(layout: Layout) -> ! {
    800137c4:	7119                	addi	sp,sp,-128
    800137c6:	fc86                	sd	ra,120(sp)
    800137c8:	ec2a                	sd	a0,24(sp)
    800137ca:	f02e                	sd	a1,32(sp)
    800137cc:	0828                	addi	a0,sp,24
    panic!("alloc error: {:?}", layout);
    800137ce:	f4aa                	sd	a0,104(sp)
    800137d0:	f8aa                	sd	a0,112(sp)

00000000800137d2 <.LBB0_3>:
    800137d2:	00010597          	auipc	a1,0x10
    800137d6:	f4458593          	addi	a1,a1,-188 # 80023716 <_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17h0283edf57016c8a1E>
    800137da:	0000c097          	auipc	ra,0xc
    800137de:	21e080e7          	jalr	542(ra) # 8001f9f8 <_ZN4core3fmt10ArgumentV13new17h75a66497ffff3272E>
    800137e2:	e82a                	sd	a0,16(sp)
    800137e4:	e42e                	sd	a1,8(sp)
    800137e6:	a009                	j	800137e8 <.LBB0_3+0x16>
    800137e8:	6542                	ld	a0,16(sp)
    800137ea:	ecaa                	sd	a0,88(sp)
    800137ec:	65a2                	ld	a1,8(sp)
    800137ee:	f0ae                	sd	a1,96(sp)

00000000800137f0 <.LBB0_4>:
    800137f0:	00014597          	auipc	a1,0x14
    800137f4:	a1858593          	addi	a1,a1,-1512 # 80027208 <.L__unnamed_1>
    800137f8:	1028                	addi	a0,sp,40
    800137fa:	08b4                	addi	a3,sp,88
    800137fc:	4605                	li	a2,1
    800137fe:	e032                	sd	a2,0(sp)
    80013800:	6702                	ld	a4,0(sp)
    80013802:	ffff2097          	auipc	ra,0xffff2
    80013806:	f22080e7          	jalr	-222(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001380a:	a009                	j	8001380c <.LBB0_5>

000000008001380c <.LBB0_5>:
    8001380c:	00014597          	auipc	a1,0x14
    80013810:	a2458593          	addi	a1,a1,-1500 # 80027230 <.L__unnamed_2>
    80013814:	1028                	addi	a0,sp,40
    80013816:	0000d097          	auipc	ra,0xd
    8001381a:	520080e7          	jalr	1312(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E:

0000000080013820 <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E>:

// kernel heap
pub struct KernelHeap(Spinlock<BuddySystem>);

unsafe impl GlobalAlloc for KernelHeap {
    unsafe fn alloc(&self, layout: Layout) -> *mut u8 {
    80013820:	715d                	addi	sp,sp,-80
    80013822:	e486                	sd	ra,72(sp)
    80013824:	f82a                	sd	a0,48(sp)
    80013826:	fc2e                	sd	a1,56(sp)
    80013828:	e0b2                	sd	a2,64(sp)
        self.0.acquire().alloc(layout)
    8001382a:	f032                	sd	a2,32(sp)
    8001382c:	ec2e                	sd	a1,24(sp)
    8001382e:	fffef097          	auipc	ra,0xfffef
    80013832:	190080e7          	jalr	400(ra) # 800029be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E>
    80013836:	f42a                	sd	a0,40(sp)
    80013838:	a009                	j	8001383a <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E+0x1a>
    8001383a:	1028                	addi	a0,sp,40
    8001383c:	ffff0097          	auipc	ra,0xffff0
    80013840:	1de080e7          	jalr	478(ra) # 80003a1a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9f4f0d98ac704e2dE>
    80013844:	e82a                	sd	a0,16(sp)
    80013846:	a009                	j	80013848 <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E+0x28>
    80013848:	6542                	ld	a0,16(sp)
    8001384a:	65e2                	ld	a1,24(sp)
    8001384c:	7602                	ld	a2,32(sp)
    8001384e:	0000b097          	auipc	ra,0xb
    80013852:	a72080e7          	jalr	-1422(ra) # 8001e2c0 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE>
    80013856:	e42a                	sd	a0,8(sp)
    80013858:	a009                	j	8001385a <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E+0x3a>
    8001385a:	1028                	addi	a0,sp,40
    }
    8001385c:	ffff3097          	auipc	ra,0xffff3
    80013860:	14a080e7          	jalr	330(ra) # 800069a6 <_ZN4core3ptr88drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$allocator..BuddySystem$GT$$GT$17h4f0ad123d07d9c96E>
    80013864:	a009                	j	80013866 <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E+0x46>
    80013866:	6522                	ld	a0,8(sp)
    80013868:	60a6                	ld	ra,72(sp)
    8001386a:	6161                	addi	sp,sp,80
    8001386c:	8082                	ret

Disassembly of section .text._ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$7dealloc17h1e2147e5d267af89E:

000000008001386e <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$7dealloc17h1e2147e5d267af89E>:

    unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {
    8001386e:	715d                	addi	sp,sp,-80
    80013870:	e486                	sd	ra,72(sp)
    80013872:	f42a                	sd	a0,40(sp)
    80013874:	f82e                	sd	a1,48(sp)
    80013876:	fc32                	sd	a2,56(sp)
    80013878:	e0b6                	sd	a3,64(sp)
        self.0.acquire().dealloc(ptr, layout)
    8001387a:	ec36                	sd	a3,24(sp)
    8001387c:	e832                	sd	a2,16(sp)
    8001387e:	e42e                	sd	a1,8(sp)
    80013880:	fffef097          	auipc	ra,0xfffef
    80013884:	13e080e7          	jalr	318(ra) # 800029be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E>
    80013888:	f02a                	sd	a0,32(sp)
    8001388a:	a009                	j	8001388c <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$7dealloc17h1e2147e5d267af89E+0x1e>
    8001388c:	1008                	addi	a0,sp,32
    8001388e:	ffff0097          	auipc	ra,0xffff0
    80013892:	18c080e7          	jalr	396(ra) # 80003a1a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9f4f0d98ac704e2dE>
    80013896:	e02a                	sd	a0,0(sp)
    80013898:	a009                	j	8001389a <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$7dealloc17h1e2147e5d267af89E+0x2c>
    8001389a:	6502                	ld	a0,0(sp)
    8001389c:	65a2                	ld	a1,8(sp)
    8001389e:	6642                	ld	a2,16(sp)
    800138a0:	66e2                	ld	a3,24(sp)
    800138a2:	0000b097          	auipc	ra,0xb
    800138a6:	d80080e7          	jalr	-640(ra) # 8001e622 <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE>
    800138aa:	a009                	j	800138ac <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$7dealloc17h1e2147e5d267af89E+0x3e>
    800138ac:	1008                	addi	a0,sp,32
    }
    800138ae:	ffff3097          	auipc	ra,0xffff3
    800138b2:	0f8080e7          	jalr	248(ra) # 800069a6 <_ZN4core3ptr88drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$allocator..BuddySystem$GT$$GT$17h4f0ad123d07d9c96E>
    800138b6:	a009                	j	800138b8 <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$7dealloc17h1e2147e5d267af89E+0x4a>
    800138b8:	60a6                	ld	ra,72(sp)
    800138ba:	6161                	addi	sp,sp,80
    800138bc:	8082                	ret

Disassembly of section .text._ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE:

00000000800138be <_ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE>:
impl KernelHeap {
    const fn uninit() -> Self {
        Self(Spinlock::new(BuddySystem::uninit(), "kernel heap"))
    }

    unsafe fn init(&self, start: usize, end: usize) {
    800138be:	7111                	addi	sp,sp,-256
    800138c0:	fd86                	sd	ra,248(sp)
    800138c2:	edaa                	sd	a0,216(sp)
    800138c4:	f1ae                	sd	a1,224(sp)
    800138c6:	f5b2                	sd	a2,232(sp)
        let res = self.0.acquire().init(start, end, LEAF_SIZE, MAX_ALIGNMENT);
    800138c8:	f432                	sd	a2,40(sp)
    800138ca:	f02e                	sd	a1,32(sp)
    800138cc:	fffef097          	auipc	ra,0xfffef
    800138d0:	0f2080e7          	jalr	242(ra) # 800029be <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17ha7c1a4fdf7befea3E>
    800138d4:	e4aa                	sd	a0,72(sp)
    800138d6:	a009                	j	800138d8 <_ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE+0x1a>
    800138d8:	00a8                	addi	a0,sp,72
    800138da:	ffff0097          	auipc	ra,0xffff0
    800138de:	140080e7          	jalr	320(ra) # 80003a1a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9f4f0d98ac704e2dE>
    800138e2:	ec2a                	sd	a0,24(sp)
    800138e4:	a009                	j	800138e6 <_ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE+0x28>
    800138e6:	46c1                	li	a3,16
    800138e8:	6705                	lui	a4,0x1
    800138ea:	6562                	ld	a0,24(sp)
    800138ec:	7582                	ld	a1,32(sp)
    800138ee:	7622                	ld	a2,40(sp)
    800138f0:	0000a097          	auipc	ra,0xa
    800138f4:	476080e7          	jalr	1142(ra) # 8001dd66 <_ZN9allocator11BuddySystem4init17hb013dd73949a3bfaE>
    800138f8:	fc2a                	sd	a0,56(sp)
    800138fa:	e0ae                	sd	a1,64(sp)
    800138fc:	a009                	j	800138fe <_ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE+0x40>
    800138fe:	00a8                	addi	a0,sp,72
    80013900:	ffff3097          	auipc	ra,0xffff3
    80013904:	0a6080e7          	jalr	166(ra) # 800069a6 <_ZN4core3ptr88drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$allocator..BuddySystem$GT$$GT$17h4f0ad123d07d9c96E>
    80013908:	a009                	j	8001390a <_ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE+0x4c>
        match res {
            Ok(()) => {
    8001390a:	7562                	ld	a0,56(sp)
    8001390c:	00a035b3          	snez	a1,a0
    80013910:	4601                	li	a2,0
    80013912:	02c50663          	beq	a0,a2,8001393e <.LBB3_16>
    80013916:	a009                	j	80013918 <_ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE+0x5a>
                println!("KernelHeap: success to init.");
            },

            Err(err) => {
    80013918:	7562                	ld	a0,56(sp)
    8001391a:	6586                	ld	a1,64(sp)
    8001391c:	e12a                	sd	a0,128(sp)
    8001391e:	e52e                	sd	a1,136(sp)
    80013920:	0108                	addi	a0,sp,128
                println!("KernelHeap: init error: {}.", err);
    80013922:	e9aa                	sd	a0,208(sp)
    80013924:	f9aa                	sd	a0,240(sp)

0000000080013926 <.LBB3_15>:
    80013926:	ffff4597          	auipc	a1,0xffff4
    8001392a:	45c58593          	addi	a1,a1,1116 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    8001392e:	ffff4097          	auipc	ra,0xffff4
    80013932:	508080e7          	jalr	1288(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    80013936:	e82a                	sd	a0,16(sp)
    80013938:	e42e                	sd	a1,8(sp)
    8001393a:	a80d                	j	8001396c <.LBB3_17+0x26>
	...

000000008001393e <.LBB3_16>:
                println!("KernelHeap: success to init.");
    8001393e:	00014597          	auipc	a1,0x14
    80013942:	96a58593          	addi	a1,a1,-1686 # 800272a8 <.L__unnamed_3>

0000000080013946 <.LBB3_17>:
    80013946:	00014697          	auipc	a3,0x14
    8001394a:	97268693          	addi	a3,a3,-1678 # 800272b8 <.L__unnamed_14>
    8001394e:	0888                	addi	a0,sp,80
    80013950:	4605                	li	a2,1
    80013952:	4701                	li	a4,0
    80013954:	ffff2097          	auipc	ra,0xffff2
    80013958:	dd0080e7          	jalr	-560(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001395c:	a009                	j	8001395e <.LBB3_17+0x18>
    8001395e:	0888                	addi	a0,sp,80
    80013960:	ffffd097          	auipc	ra,0xffffd
    80013964:	390080e7          	jalr	912(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80013968:	a009                	j	8001396a <.LBB3_17+0x24>
        match res {
    8001396a:	a80d                	j	8001399c <.LBB3_18+0x28>
                println!("KernelHeap: init error: {}.", err);
    8001396c:	6542                	ld	a0,16(sp)
    8001396e:	e1aa                	sd	a0,192(sp)
    80013970:	65a2                	ld	a1,8(sp)
    80013972:	e5ae                	sd	a1,200(sp)

0000000080013974 <.LBB3_18>:
    80013974:	00014597          	auipc	a1,0x14
    80013978:	8f458593          	addi	a1,a1,-1804 # 80027268 <.L__unnamed_5>
    8001397c:	0908                	addi	a0,sp,144
    8001397e:	4609                	li	a2,2
    80013980:	0194                	addi	a3,sp,192
    80013982:	4705                	li	a4,1
    80013984:	ffff2097          	auipc	ra,0xffff2
    80013988:	da0080e7          	jalr	-608(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001398c:	a009                	j	8001398e <.LBB3_18+0x1a>
    8001398e:	0908                	addi	a0,sp,144
    80013990:	ffffd097          	auipc	ra,0xffffd
    80013994:	360080e7          	jalr	864(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80013998:	a009                	j	8001399a <.LBB3_18+0x26>
        match res {
    8001399a:	a009                	j	8001399c <.LBB3_18+0x28>
            }
        }
    }
    8001399c:	70ee                	ld	ra,248(sp)
    8001399e:	6111                	addi	sp,sp,256
    800139a0:	8082                	ret

Disassembly of section .text._ZN6kernel6memory6kalloc10KernelHeap5kinit17h546f6d5bb4d10715E:

00000000800139a2 <_ZN6kernel6memory6kalloc10KernelHeap5kinit17h546f6d5bb4d10715E>:

    pub unsafe fn kinit(&self) {
    800139a2:	7131                	addi	sp,sp,-192
    800139a4:	fd06                	sd	ra,184(sp)
    800139a6:	f12a                	sd	a0,160(sp)

00000000800139a8 <.LBB4_6>:
        extern "C" {
            fn end();
        }
        let end = end as usize;
    800139a8:	0005c597          	auipc	a1,0x5c
    800139ac:	a9a58593          	addi	a1,a1,-1382 # 8006f442 <end>
    800139b0:	fc2e                	sd	a1,56(sp)
    800139b2:	182c                	addi	a1,sp,56
        println!("KernelHeap: available memory: [{:#x}, {:#x})", end, PHYSTOP);
    800139b4:	e92e                	sd	a1,144(sp)

00000000800139b6 <.LBB4_7>:
    800139b6:	00010617          	auipc	a2,0x10
    800139ba:	3c260613          	addi	a2,a2,962 # 80023d78 <.L__unnamed_5+0x78>
    800139be:	ed32                	sd	a2,152(sp)
    800139c0:	f52e                	sd	a1,168(sp)
    800139c2:	f932                	sd	a2,176(sp)

00000000800139c4 <.LBB4_8>:
    800139c4:	0000f697          	auipc	a3,0xf
    800139c8:	2e268693          	addi	a3,a3,738 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    800139cc:	f82a                	sd	a0,48(sp)
    800139ce:	852e                	mv	a0,a1
    800139d0:	85b6                	mv	a1,a3
    800139d2:	f432                	sd	a2,40(sp)
    800139d4:	0000c097          	auipc	ra,0xc
    800139d8:	046080e7          	jalr	70(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    800139dc:	f02a                	sd	a0,32(sp)
    800139de:	ec2e                	sd	a1,24(sp)
    800139e0:	a009                	j	800139e2 <.LBB4_9>

00000000800139e2 <.LBB4_9>:
    800139e2:	0000f597          	auipc	a1,0xf
    800139e6:	2c458593          	addi	a1,a1,708 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    800139ea:	7522                	ld	a0,40(sp)
    800139ec:	0000c097          	auipc	ra,0xc
    800139f0:	02e080e7          	jalr	46(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    800139f4:	e82a                	sd	a0,16(sp)
    800139f6:	e42e                	sd	a1,8(sp)
    800139f8:	a009                	j	800139fa <.LBB4_9+0x18>
    800139fa:	7502                	ld	a0,32(sp)
    800139fc:	f8aa                	sd	a0,112(sp)
    800139fe:	65e2                	ld	a1,24(sp)
    80013a00:	fcae                	sd	a1,120(sp)
    80013a02:	6642                	ld	a2,16(sp)
    80013a04:	e132                	sd	a2,128(sp)
    80013a06:	66a2                	ld	a3,8(sp)
    80013a08:	e536                	sd	a3,136(sp)

0000000080013a0a <.LBB4_10>:
    80013a0a:	00014597          	auipc	a1,0x14
    80013a0e:	8d658593          	addi	a1,a1,-1834 # 800272e0 <.L__unnamed_7>

0000000080013a12 <.LBB4_11>:
    80013a12:	00014797          	auipc	a5,0x14
    80013a16:	8fe78793          	addi	a5,a5,-1794 # 80027310 <.L__unnamed_8>
    80013a1a:	0088                	addi	a0,sp,64
    80013a1c:	460d                	li	a2,3
    80013a1e:	1894                	addi	a3,sp,112
    80013a20:	4709                	li	a4,2
    80013a22:	e03a                	sd	a4,0(sp)
    80013a24:	6802                	ld	a6,0(sp)
    80013a26:	ffff2097          	auipc	ra,0xffff2
    80013a2a:	cd8080e7          	jalr	-808(ra) # 800056fe <_ZN4core3fmt9Arguments16new_v1_formatted17h3e98f428f5d207a2E>
    80013a2e:	a009                	j	80013a30 <.LBB4_11+0x1e>
    80013a30:	0088                	addi	a0,sp,64
    80013a32:	ffffd097          	auipc	ra,0xffffd
    80013a36:	2be080e7          	jalr	702(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80013a3a:	a009                	j	80013a3c <.LBB4_11+0x2a>
        self.init(end, PHYSTOP);
    80013a3c:	75e2                	ld	a1,56(sp)
    80013a3e:	4545                	li	a0,17
    80013a40:	01b51613          	slli	a2,a0,0x1b
    80013a44:	7542                	ld	a0,48(sp)
    80013a46:	00000097          	auipc	ra,0x0
    80013a4a:	e78080e7          	jalr	-392(ra) # 800138be <_ZN6kernel6memory6kalloc10KernelHeap4init17hd03fc48c89db9b8eE>
    80013a4e:	a009                	j	80013a50 <.LBB4_11+0x3e>
    }
    80013a50:	70ea                	ld	ra,184(sp)
    80013a52:	6129                	addi	sp,sp,192
    80013a54:	8082                	ret

Disassembly of section .text.__rg_alloc:

0000000080013a56 <__rg_alloc>:
pub static KERNEL_HEAP: KernelHeap = KernelHeap::uninit();
    80013a56:	7179                	addi	sp,sp,-48
    80013a58:	f406                	sd	ra,40(sp)
    80013a5a:	ec2a                	sd	a0,24(sp)
    80013a5c:	f02e                	sd	a1,32(sp)
    80013a5e:	ffff2097          	auipc	ra,0xffff2
    80013a62:	af0080e7          	jalr	-1296(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80013a66:	e82a                	sd	a0,16(sp)
    80013a68:	e42e                	sd	a1,8(sp)
    80013a6a:	a009                	j	80013a6c <.LBB5_3>

0000000080013a6c <.LBB5_3>:
    80013a6c:	00046517          	auipc	a0,0x46
    80013a70:	59450513          	addi	a0,a0,1428 # 8005a000 <_ZN6kernel6memory6kalloc11KERNEL_HEAP17h95da90edf5741b51E>
    80013a74:	65c2                	ld	a1,16(sp)
    80013a76:	6622                	ld	a2,8(sp)
    80013a78:	00000097          	auipc	ra,0x0
    80013a7c:	da8080e7          	jalr	-600(ra) # 80013820 <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E>
    80013a80:	e02a                	sd	a0,0(sp)
    80013a82:	a009                	j	80013a84 <.LBB5_3+0x18>
    80013a84:	6502                	ld	a0,0(sp)
    80013a86:	70a2                	ld	ra,40(sp)
    80013a88:	6145                	addi	sp,sp,48
    80013a8a:	8082                	ret

Disassembly of section .text.__rg_dealloc:

0000000080013a8c <__rg_dealloc>:
    80013a8c:	7139                	addi	sp,sp,-64
    80013a8e:	fc06                	sd	ra,56(sp)
    80013a90:	f02a                	sd	a0,32(sp)
    80013a92:	f42e                	sd	a1,40(sp)
    80013a94:	f832                	sd	a2,48(sp)
    80013a96:	ec2a                	sd	a0,24(sp)
    80013a98:	852e                	mv	a0,a1
    80013a9a:	85b2                	mv	a1,a2
    80013a9c:	ffff2097          	auipc	ra,0xffff2
    80013aa0:	ab2080e7          	jalr	-1358(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80013aa4:	e82a                	sd	a0,16(sp)
    80013aa6:	e42e                	sd	a1,8(sp)
    80013aa8:	a009                	j	80013aaa <.LBB6_3>

0000000080013aaa <.LBB6_3>:
    80013aaa:	00046517          	auipc	a0,0x46
    80013aae:	55650513          	addi	a0,a0,1366 # 8005a000 <_ZN6kernel6memory6kalloc11KERNEL_HEAP17h95da90edf5741b51E>
    80013ab2:	65e2                	ld	a1,24(sp)
    80013ab4:	6642                	ld	a2,16(sp)
    80013ab6:	66a2                	ld	a3,8(sp)
    80013ab8:	00000097          	auipc	ra,0x0
    80013abc:	db6080e7          	jalr	-586(ra) # 8001386e <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$7dealloc17h1e2147e5d267af89E>
    80013ac0:	a009                	j	80013ac2 <.LBB6_3+0x18>
    80013ac2:	70e2                	ld	ra,56(sp)
    80013ac4:	6121                	addi	sp,sp,64
    80013ac6:	8082                	ret

Disassembly of section .text.__rg_alloc_zeroed:

0000000080013ac8 <__rg_alloc_zeroed>:
    80013ac8:	7179                	addi	sp,sp,-48
    80013aca:	f406                	sd	ra,40(sp)
    80013acc:	ec2a                	sd	a0,24(sp)
    80013ace:	f02e                	sd	a1,32(sp)
    80013ad0:	ffff2097          	auipc	ra,0xffff2
    80013ad4:	a7e080e7          	jalr	-1410(ra) # 8000554e <_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h95b033170e559f36E>
    80013ad8:	e82a                	sd	a0,16(sp)
    80013ada:	e42e                	sd	a1,8(sp)
    80013adc:	a009                	j	80013ade <.LBB8_3>

0000000080013ade <.LBB8_3>:
    80013ade:	00046517          	auipc	a0,0x46
    80013ae2:	52250513          	addi	a0,a0,1314 # 8005a000 <_ZN6kernel6memory6kalloc11KERNEL_HEAP17h95da90edf5741b51E>
    80013ae6:	65c2                	ld	a1,16(sp)
    80013ae8:	6622                	ld	a2,8(sp)
    80013aea:	00003097          	auipc	ra,0x3
    80013aee:	ce2080e7          	jalr	-798(ra) # 800167cc <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE>
    80013af2:	e02a                	sd	a0,0(sp)
    80013af4:	a009                	j	80013af6 <.LBB8_3+0x18>
    80013af6:	6502                	ld	a0,0(sp)
    80013af8:	70a2                	ld	ra,40(sp)
    80013afa:	6145                	addi	sp,sp,48
    80013afc:	8082                	ret

Disassembly of section .text.kvm_init:

0000000080013afe <kvm_init>:
    fn trampoline();
}

/// Initialize the one kernel_pagetable
#[no_mangle]
pub unsafe fn kvm_init(){
    80013afe:	7175                	addi	sp,sp,-144
    // check if RawPage and PageTable have the same memory layout
    assert_eq!(size_of::<RawPage>(), PGSIZE);
    80013b00:	e506                	sd	ra,136(sp)

0000000080013b02 <.LBB0_2>:
    80013b02:	00010517          	auipc	a0,0x10
    80013b06:	2ae50513          	addi	a0,a0,686 # 80023db0 <.L__unnamed_5+0xb0>
    80013b0a:	e42a                	sd	a0,8(sp)
    80013b0c:	e82a                	sd	a0,16(sp)
    80013b0e:	e4aa                	sd	a0,72(sp)
    80013b10:	e8aa                	sd	a0,80(sp)
    assert_eq!(align_of::<RawPage>(), PGSIZE);
    80013b12:	ec2a                	sd	a0,24(sp)
    80013b14:	f02a                	sd	a0,32(sp)
    80013b16:	ecaa                	sd	a0,88(sp)
    80013b18:	f0aa                	sd	a0,96(sp)
    assert_eq!(size_of::<RawPage>(), size_of::<PageTable>());
    80013b1a:	f42a                	sd	a0,40(sp)
    80013b1c:	f82a                	sd	a0,48(sp)
    80013b1e:	f4aa                	sd	a0,104(sp)
    80013b20:	f8aa                	sd	a0,112(sp)
    assert_eq!(align_of::<RawPage>(), align_of::<PageTable>());
    80013b22:	fc2a                	sd	a0,56(sp)
    80013b24:	e0aa                	sd	a0,64(sp)
    80013b26:	fcaa                	sd	a0,120(sp)
    80013b28:	e12a                	sd	a0,128(sp)

    kernel_map();
    80013b2a:	00000097          	auipc	ra,0x0
    80013b2e:	044080e7          	jalr	68(ra) # 80013b6e <_ZN6kernel6memory7mapping10kernel_map10kernel_map17hf85069552c2e0565E>
    80013b32:	a009                	j	80013b34 <.LBB0_2+0x32>
}
    80013b34:	60aa                	ld	ra,136(sp)
    80013b36:	6149                	addi	sp,sp,144
    80013b38:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10kernel_map13kvm_init_hart17h1ce24c8ead8aba23E:

0000000080013b3a <_ZN6kernel6memory7mapping10kernel_map13kvm_init_hart17h1ce24c8ead8aba23E>:

/// Switch h/w page table register to the kernel's page table,
/// and enable paging.
pub unsafe fn kvm_init_hart() {
    80013b3a:	1141                	addi	sp,sp,-16
    satp::write(KERNEL_PAGETABLE.as_satp());
    80013b3c:	e406                	sd	ra,8(sp)

0000000080013b3e <.LBB1_4>:
    80013b3e:	0005a517          	auipc	a0,0x5a
    80013b42:	4c250513          	addi	a0,a0,1218 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013b46:	ffffb097          	auipc	ra,0xffffb
    80013b4a:	162080e7          	jalr	354(ra) # 8000eca8 <_ZN6kernel6memory7mapping10page_table9PageTable7as_satp17h37eb5d19d3a9f0cdE>
    80013b4e:	e02a                	sd	a0,0(sp)
    80013b50:	a009                	j	80013b52 <.LBB1_4+0x14>
    80013b52:	6502                	ld	a0,0(sp)
    80013b54:	00005097          	auipc	ra,0x5
    80013b58:	77e080e7          	jalr	1918(ra) # 800192d2 <_ZN6kernel8register4satp5write17h27829d6ed3c6c873E>
    80013b5c:	a009                	j	80013b5e <.LBB1_4+0x20>
    sfence_vma();
    80013b5e:	ffff4097          	auipc	ra,0xffff4
    80013b62:	da6080e7          	jalr	-602(ra) # 80007904 <_ZN6kernel8register10sfence_vma17h5dd28d1c77dda526E>
    80013b66:	a009                	j	80013b68 <.LBB1_4+0x2a>
}
    80013b68:	60a2                	ld	ra,8(sp)
    80013b6a:	0141                	addi	sp,sp,16
    80013b6c:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping10kernel_map10kernel_map17hf85069552c2e0565E:

0000000080013b6e <_ZN6kernel6memory7mapping10kernel_map10kernel_map17hf85069552c2e0565E>:


/// Make a direct-map page table for the kernel.
unsafe fn kernel_map() {
    80013b6e:	7129                	addi	sp,sp,-320
    println!("kernel page map");
    80013b70:	fe06                	sd	ra,312(sp)

0000000080013b72 <.LBB2_48>:
    80013b72:	00014597          	auipc	a1,0x14
    80013b76:	81e58593          	addi	a1,a1,-2018 # 80027390 <.L__unnamed_2>

0000000080013b7a <.LBB2_49>:
    80013b7a:	00014697          	auipc	a3,0x14
    80013b7e:	82668693          	addi	a3,a3,-2010 # 800273a0 <.L__unnamed_4>
    80013b82:	0228                	addi	a0,sp,264
    80013b84:	4605                	li	a2,1
    80013b86:	4701                	li	a4,0
    80013b88:	ffff2097          	auipc	ra,0xffff2
    80013b8c:	b9c080e7          	jalr	-1124(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80013b90:	a009                	j	80013b92 <.LBB2_49+0x18>
    80013b92:	0228                	addi	a0,sp,264
    80013b94:	ffffd097          	auipc	ra,0xffffd
    80013b98:	15c080e7          	jalr	348(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80013b9c:	a009                	j	80013b9e <.LBB2_49+0x24>
    80013b9e:	00100537          	lui	a0,0x100
    // map VIRT_TEST for shutdown or reboot
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(VIRT_TEST),
    80013ba2:	ffff4097          	auipc	ra,0xffff4
    80013ba6:	f76080e7          	jalr	-138(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013baa:	e22a                	sd	a0,256(sp)
    80013bac:	a009                	j	80013bae <.LBB2_49+0x34>
    80013bae:	00100537          	lui	a0,0x100
        PhysicalAddress::new(VIRT_TEST),
    80013bb2:	ffff4097          	auipc	ra,0xffff4
    80013bb6:	016080e7          	jalr	22(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013bba:	fdaa                	sd	a0,248(sp)
    80013bbc:	a009                	j	80013bbe <.LBB2_49+0x44>
    80013bbe:	4509                	li	a0,2
    80013bc0:	4591                	li	a1,4
        PGSIZE,
        PteFlags::R | PteFlags::W
    80013bc2:	ffff4097          	auipc	ra,0xffff4
    80013bc6:	186080e7          	jalr	390(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013bca:	f9aa                	sd	a0,240(sp)
    80013bcc:	a009                	j	80013bce <.LBB2_50>

0000000080013bce <.LBB2_50>:
    KERNEL_PAGETABLE.kernel_map(
    80013bce:	0005a517          	auipc	a0,0x5a
    80013bd2:	43250513          	addi	a0,a0,1074 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013bd6:	6685                	lui	a3,0x1
    80013bd8:	6592                	ld	a1,256(sp)
    80013bda:	766e                	ld	a2,248(sp)
    80013bdc:	774e                	ld	a4,240(sp)
    80013bde:	ffffb097          	auipc	ra,0xffffb
    80013be2:	7a2080e7          	jalr	1954(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013be6:	a009                	j	80013be8 <.LBB2_50+0x1a>
    80013be8:	10000537          	lui	a0,0x10000
    );

    // uart registers
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(UART0), 
    80013bec:	ffff4097          	auipc	ra,0xffff4
    80013bf0:	f2c080e7          	jalr	-212(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013bf4:	f5aa                	sd	a0,232(sp)
    80013bf6:	a009                	j	80013bf8 <.LBB2_50+0x2a>
    80013bf8:	10000537          	lui	a0,0x10000
        PhysicalAddress::new(UART0), 
    80013bfc:	ffff4097          	auipc	ra,0xffff4
    80013c00:	fcc080e7          	jalr	-52(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013c04:	f1aa                	sd	a0,224(sp)
    80013c06:	a009                	j	80013c08 <.LBB2_50+0x3a>
    80013c08:	4509                	li	a0,2
    80013c0a:	4591                	li	a1,4
        PGSIZE, 
        PteFlags::R | PteFlags::W,
    80013c0c:	ffff4097          	auipc	ra,0xffff4
    80013c10:	13c080e7          	jalr	316(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013c14:	edaa                	sd	a0,216(sp)
    80013c16:	a009                	j	80013c18 <.LBB2_51>

0000000080013c18 <.LBB2_51>:
    KERNEL_PAGETABLE.kernel_map(
    80013c18:	0005a517          	auipc	a0,0x5a
    80013c1c:	3e850513          	addi	a0,a0,1000 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013c20:	6685                	lui	a3,0x1
    80013c22:	75ae                	ld	a1,232(sp)
    80013c24:	760e                	ld	a2,224(sp)
    80013c26:	676e                	ld	a4,216(sp)
    80013c28:	ffffb097          	auipc	ra,0xffffb
    80013c2c:	758080e7          	jalr	1880(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013c30:	a009                	j	80013c32 <.LBB2_51+0x1a>
    80013c32:	10001537          	lui	a0,0x10001
    );
    // virtio mmio disk interface
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(VIRTIO0), 
    80013c36:	ffff4097          	auipc	ra,0xffff4
    80013c3a:	ee2080e7          	jalr	-286(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013c3e:	e9aa                	sd	a0,208(sp)
    80013c40:	a009                	j	80013c42 <.LBB2_51+0x2a>
    80013c42:	10001537          	lui	a0,0x10001
        PhysicalAddress::new(VIRTIO0), 
    80013c46:	ffff4097          	auipc	ra,0xffff4
    80013c4a:	f82080e7          	jalr	-126(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013c4e:	e5aa                	sd	a0,200(sp)
    80013c50:	a009                	j	80013c52 <.LBB2_51+0x3a>
    80013c52:	4509                	li	a0,2
    80013c54:	4591                	li	a1,4
        PGSIZE, 
        PteFlags::R | PteFlags::W
    80013c56:	ffff4097          	auipc	ra,0xffff4
    80013c5a:	0f2080e7          	jalr	242(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013c5e:	e1aa                	sd	a0,192(sp)
    80013c60:	a009                	j	80013c62 <.LBB2_52>

0000000080013c62 <.LBB2_52>:
    KERNEL_PAGETABLE.kernel_map(
    80013c62:	0005a517          	auipc	a0,0x5a
    80013c66:	39e50513          	addi	a0,a0,926 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013c6a:	6685                	lui	a3,0x1
    80013c6c:	65ce                	ld	a1,208(sp)
    80013c6e:	662e                	ld	a2,200(sp)
    80013c70:	670e                	ld	a4,192(sp)
    80013c72:	ffffb097          	auipc	ra,0xffffb
    80013c76:	70e080e7          	jalr	1806(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013c7a:	a009                	j	80013c7c <.LBB2_52+0x1a>
    80013c7c:	30000537          	lui	a0,0x30000
    );

    // PCI-E ECAM (configuration space), for pci.rs
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(ECAM),
    80013c80:	ffff4097          	auipc	ra,0xffff4
    80013c84:	e98080e7          	jalr	-360(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013c88:	fd2a                	sd	a0,184(sp)
    80013c8a:	a009                	j	80013c8c <.LBB2_52+0x2a>
    80013c8c:	30000537          	lui	a0,0x30000
        PhysicalAddress::new(ECAM),
    80013c90:	ffff4097          	auipc	ra,0xffff4
    80013c94:	f38080e7          	jalr	-200(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013c98:	f92a                	sd	a0,176(sp)
    80013c9a:	a009                	j	80013c9c <.LBB2_52+0x3a>
    80013c9c:	4509                	li	a0,2
    80013c9e:	4591                	li	a1,4
        0x10000000,
        PteFlags::R | PteFlags::W
    80013ca0:	ffff4097          	auipc	ra,0xffff4
    80013ca4:	0a8080e7          	jalr	168(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013ca8:	f52a                	sd	a0,168(sp)
    80013caa:	a009                	j	80013cac <.LBB2_53>

0000000080013cac <.LBB2_53>:
    KERNEL_PAGETABLE.kernel_map(
    80013cac:	0005a517          	auipc	a0,0x5a
    80013cb0:	35450513          	addi	a0,a0,852 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013cb4:	100006b7          	lui	a3,0x10000
    80013cb8:	75ea                	ld	a1,184(sp)
    80013cba:	764a                	ld	a2,176(sp)
    80013cbc:	772a                	ld	a4,168(sp)
    80013cbe:	ffffb097          	auipc	ra,0xffffb
    80013cc2:	6c2080e7          	jalr	1730(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013cc6:	a009                	j	80013cc8 <.LBB2_53+0x1c>
    80013cc8:	40000537          	lui	a0,0x40000
    );

    // pci maps the e1000's registers here.
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(E1000_REGS),
    80013ccc:	ffff4097          	auipc	ra,0xffff4
    80013cd0:	e4c080e7          	jalr	-436(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013cd4:	f12a                	sd	a0,160(sp)
    80013cd6:	a009                	j	80013cd8 <.LBB2_53+0x2c>
    80013cd8:	40000537          	lui	a0,0x40000
        PhysicalAddress::new(E1000_REGS),
    80013cdc:	ffff4097          	auipc	ra,0xffff4
    80013ce0:	eec080e7          	jalr	-276(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013ce4:	ed2a                	sd	a0,152(sp)
    80013ce6:	a009                	j	80013ce8 <.LBB2_53+0x3c>
    80013ce8:	4509                	li	a0,2
    80013cea:	4591                	li	a1,4
        0x20000,
        PteFlags::R | PteFlags::W
    80013cec:	ffff4097          	auipc	ra,0xffff4
    80013cf0:	05c080e7          	jalr	92(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013cf4:	e92a                	sd	a0,144(sp)
    80013cf6:	a009                	j	80013cf8 <.LBB2_54>

0000000080013cf8 <.LBB2_54>:
    KERNEL_PAGETABLE.kernel_map(
    80013cf8:	0005a517          	auipc	a0,0x5a
    80013cfc:	30850513          	addi	a0,a0,776 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013d00:	000206b7          	lui	a3,0x20
    80013d04:	758a                	ld	a1,160(sp)
    80013d06:	666a                	ld	a2,152(sp)
    80013d08:	674a                	ld	a4,144(sp)
    80013d0a:	ffffb097          	auipc	ra,0xffffb
    80013d0e:	676080e7          	jalr	1654(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013d12:	a009                	j	80013d14 <.LBB2_54+0x1c>
    80013d14:	02000537          	lui	a0,0x2000
    );

    // CLINT
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(CLINT),
    80013d18:	ffff4097          	auipc	ra,0xffff4
    80013d1c:	e00080e7          	jalr	-512(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013d20:	e52a                	sd	a0,136(sp)
    80013d22:	a009                	j	80013d24 <.LBB2_54+0x2c>
    80013d24:	02000537          	lui	a0,0x2000
        PhysicalAddress::new(CLINT),
    80013d28:	ffff4097          	auipc	ra,0xffff4
    80013d2c:	ea0080e7          	jalr	-352(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013d30:	e12a                	sd	a0,128(sp)
    80013d32:	a009                	j	80013d34 <.LBB2_54+0x3c>
    80013d34:	4509                	li	a0,2
    80013d36:	4591                	li	a1,4
        0x10000,
        PteFlags::R | PteFlags::W
    80013d38:	ffff4097          	auipc	ra,0xffff4
    80013d3c:	010080e7          	jalr	16(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013d40:	fcaa                	sd	a0,120(sp)
    80013d42:	a009                	j	80013d44 <.LBB2_55>

0000000080013d44 <.LBB2_55>:
    KERNEL_PAGETABLE.kernel_map(
    80013d44:	0005a517          	auipc	a0,0x5a
    80013d48:	2bc50513          	addi	a0,a0,700 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013d4c:	66c1                	lui	a3,0x10
    80013d4e:	65aa                	ld	a1,136(sp)
    80013d50:	660a                	ld	a2,128(sp)
    80013d52:	7766                	ld	a4,120(sp)
    80013d54:	ffffb097          	auipc	ra,0xffffb
    80013d58:	62c080e7          	jalr	1580(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013d5c:	a009                	j	80013d5e <.LBB2_55+0x1a>
    80013d5e:	0c000537          	lui	a0,0xc000
    );

    // PLIC
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(PLIC_BASE), 
    80013d62:	ffff4097          	auipc	ra,0xffff4
    80013d66:	db6080e7          	jalr	-586(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013d6a:	f8aa                	sd	a0,112(sp)
    80013d6c:	a009                	j	80013d6e <.LBB2_55+0x2a>
    80013d6e:	0c000537          	lui	a0,0xc000
        PhysicalAddress::new(PLIC_BASE), 
    80013d72:	ffff4097          	auipc	ra,0xffff4
    80013d76:	e56080e7          	jalr	-426(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013d7a:	f4aa                	sd	a0,104(sp)
    80013d7c:	a009                	j	80013d7e <.LBB2_55+0x3a>
    80013d7e:	4509                	li	a0,2
    80013d80:	4591                	li	a1,4
        0x400000, 
        PteFlags::R | PteFlags::W
    80013d82:	ffff4097          	auipc	ra,0xffff4
    80013d86:	fc6080e7          	jalr	-58(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013d8a:	f0aa                	sd	a0,96(sp)
    80013d8c:	a009                	j	80013d8e <.LBB2_56>

0000000080013d8e <.LBB2_56>:
    KERNEL_PAGETABLE.kernel_map(
    80013d8e:	0005a517          	auipc	a0,0x5a
    80013d92:	27250513          	addi	a0,a0,626 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013d96:	004006b7          	lui	a3,0x400
    80013d9a:	75c6                	ld	a1,112(sp)
    80013d9c:	7626                	ld	a2,104(sp)
    80013d9e:	7706                	ld	a4,96(sp)
    80013da0:	ffffb097          	auipc	ra,0xffffb
    80013da4:	5e0080e7          	jalr	1504(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013da8:	a009                	j	80013daa <.LBB2_56+0x1c>
    80013daa:	4505                	li	a0,1
    80013dac:	057e                	slli	a0,a0,0x1f
    );

    // map kernel text exectuable and read-only
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(KERNEL_BASE), 
    80013dae:	ffff4097          	auipc	ra,0xffff4
    80013db2:	d6a080e7          	jalr	-662(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013db6:	ecaa                	sd	a0,88(sp)
    80013db8:	a009                	j	80013dba <.LBB2_56+0x2c>
    80013dba:	4505                	li	a0,1
    80013dbc:	057e                	slli	a0,a0,0x1f
        PhysicalAddress::new(KERNEL_BASE), 
    80013dbe:	ffff4097          	auipc	ra,0xffff4
    80013dc2:	e0a080e7          	jalr	-502(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013dc6:	e8aa                	sd	a0,80(sp)
    80013dc8:	a009                	j	80013dca <.LBB2_56+0x3c>
    80013dca:	80000537          	lui	a0,0x80000

0000000080013dce <.LBB2_57>:
        etext as usize - KERNEL_BASE, 
    80013dce:	00018597          	auipc	a1,0x18
    80013dd2:	23258593          	addi	a1,a1,562 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80013dd6:	952e                	add	a0,a0,a1
    80013dd8:	e4aa                	sd	a0,72(sp)
    80013dda:	10a5e263          	bltu	a1,a0,80013ede <.LBB2_66>
    80013dde:	a009                	j	80013de0 <.LBB2_57+0x12>
    80013de0:	4509                	li	a0,2
    80013de2:	45a1                	li	a1,8
        PteFlags::R | PteFlags::X
    80013de4:	ffff4097          	auipc	ra,0xffff4
    80013de8:	f64080e7          	jalr	-156(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013dec:	e0aa                	sd	a0,64(sp)
    80013dee:	a009                	j	80013df0 <.LBB2_58>

0000000080013df0 <.LBB2_58>:
    KERNEL_PAGETABLE.kernel_map(
    80013df0:	0005a517          	auipc	a0,0x5a
    80013df4:	21050513          	addi	a0,a0,528 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013df8:	65e6                	ld	a1,88(sp)
    80013dfa:	6646                	ld	a2,80(sp)
    80013dfc:	66a6                	ld	a3,72(sp)
    80013dfe:	6706                	ld	a4,64(sp)
    80013e00:	ffffb097          	auipc	ra,0xffffb
    80013e04:	580080e7          	jalr	1408(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013e08:	a009                	j	80013e0a <.LBB2_59>

0000000080013e0a <.LBB2_59>:
    );

    // map kernel data and the physical RAM we'll make use of
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(etext as usize), 
    80013e0a:	00018517          	auipc	a0,0x18
    80013e0e:	1f650513          	addi	a0,a0,502 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80013e12:	ffff4097          	auipc	ra,0xffff4
    80013e16:	d06080e7          	jalr	-762(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013e1a:	fc2a                	sd	a0,56(sp)
    80013e1c:	a009                	j	80013e1e <.LBB2_60>

0000000080013e1e <.LBB2_60>:
        PhysicalAddress::new(etext as usize), 
    80013e1e:	00018517          	auipc	a0,0x18
    80013e22:	1e250513          	addi	a0,a0,482 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80013e26:	ffff4097          	auipc	ra,0xffff4
    80013e2a:	da2080e7          	jalr	-606(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013e2e:	f82a                	sd	a0,48(sp)
    80013e30:	a009                	j	80013e32 <.LBB2_61>

0000000080013e32 <.LBB2_61>:
        PHYSTOP - etext as usize, 
    80013e32:	00018517          	auipc	a0,0x18
    80013e36:	1ce50513          	addi	a0,a0,462 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80013e3a:	45c5                	li	a1,17
    80013e3c:	05ee                	slli	a1,a1,0x1b
    80013e3e:	40a58533          	sub	a0,a1,a0
    80013e42:	f42a                	sd	a0,40(sp)
    80013e44:	0aa5ec63          	bltu	a1,a0,80013efc <.LBB2_68>
    80013e48:	a009                	j	80013e4a <.LBB2_61+0x18>
    80013e4a:	4509                	li	a0,2
    80013e4c:	4591                	li	a1,4
        PteFlags::R | PteFlags::W
    80013e4e:	ffff4097          	auipc	ra,0xffff4
    80013e52:	efa080e7          	jalr	-262(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013e56:	f02a                	sd	a0,32(sp)
    80013e58:	a009                	j	80013e5a <.LBB2_62>

0000000080013e5a <.LBB2_62>:
    KERNEL_PAGETABLE.kernel_map(
    80013e5a:	0005a517          	auipc	a0,0x5a
    80013e5e:	1a650513          	addi	a0,a0,422 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013e62:	75e2                	ld	a1,56(sp)
    80013e64:	7642                	ld	a2,48(sp)
    80013e66:	76a2                	ld	a3,40(sp)
    80013e68:	7702                	ld	a4,32(sp)
    80013e6a:	ffffb097          	auipc	ra,0xffffb
    80013e6e:	516080e7          	jalr	1302(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013e72:	a009                	j	80013e74 <.LBB2_62+0x1a>
    80013e74:	04000537          	lui	a0,0x4000
    80013e78:	357d                	addiw	a0,a0,-1
    80013e7a:	0532                	slli	a0,a0,0xc
    );

    // map the trampoline for trap entry/exit
    // the highest virtual address in the kernel
    KERNEL_PAGETABLE.kernel_map(
        VirtualAddress::new(TRAMPOLINE), 
    80013e7c:	ffff4097          	auipc	ra,0xffff4
    80013e80:	c9c080e7          	jalr	-868(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    80013e84:	ec2a                	sd	a0,24(sp)
    80013e86:	a009                	j	80013e88 <.LBB2_63>

0000000080013e88 <.LBB2_63>:
        PhysicalAddress::new(trampoline as usize), 
    80013e88:	fffed517          	auipc	a0,0xfffed
    80013e8c:	17850513          	addi	a0,a0,376 # 80001000 <trampoline>
    80013e90:	ffff4097          	auipc	ra,0xffff4
    80013e94:	d38080e7          	jalr	-712(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    80013e98:	e82a                	sd	a0,16(sp)
    80013e9a:	a009                	j	80013e9c <.LBB2_63+0x14>
    80013e9c:	4509                	li	a0,2
    80013e9e:	45a1                	li	a1,8
        PGSIZE, 
        PteFlags::R | PteFlags::X
    80013ea0:	ffff4097          	auipc	ra,0xffff4
    80013ea4:	ea8080e7          	jalr	-344(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    80013ea8:	e42a                	sd	a0,8(sp)
    80013eaa:	a009                	j	80013eac <.LBB2_64>

0000000080013eac <.LBB2_64>:
    KERNEL_PAGETABLE.kernel_map(
    80013eac:	0005a517          	auipc	a0,0x5a
    80013eb0:	15450513          	addi	a0,a0,340 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    80013eb4:	6685                	lui	a3,0x1
    80013eb6:	65e2                	ld	a1,24(sp)
    80013eb8:	6642                	ld	a2,16(sp)
    80013eba:	6722                	ld	a4,8(sp)
    80013ebc:	ffffb097          	auipc	ra,0xffffb
    80013ec0:	4c4080e7          	jalr	1220(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    80013ec4:	a009                	j	80013ec6 <.LBB2_65>

0000000080013ec6 <.LBB2_65>:
    );

    // 映射不同进程的内核栈
    PROC_MANAGER.proc_mapstacks();
    80013ec6:	00048517          	auipc	a0,0x48
    80013eca:	03a50513          	addi	a0,a0,58 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    80013ece:	00009097          	auipc	ra,0x9
    80013ed2:	9dc080e7          	jalr	-1572(ra) # 8001c8aa <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE>
    80013ed6:	a009                	j	80013ed8 <.LBB2_65+0x12>
}
    80013ed8:	70f2                	ld	ra,312(sp)
    80013eda:	6131                	addi	sp,sp,320
    80013edc:	8082                	ret

0000000080013ede <.LBB2_66>:
        etext as usize - KERNEL_BASE, 
    80013ede:	00013517          	auipc	a0,0x13
    80013ee2:	4e250513          	addi	a0,a0,1250 # 800273c0 <str.0>

0000000080013ee6 <.LBB2_67>:
    80013ee6:	00013617          	auipc	a2,0x13
    80013eea:	4ba60613          	addi	a2,a2,1210 # 800273a0 <.L__unnamed_4>
    80013eee:	02100593          	li	a1,33
    80013ef2:	0000d097          	auipc	ra,0xd
    80013ef6:	dd8080e7          	jalr	-552(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080013efc <.LBB2_68>:
        PHYSTOP - etext as usize, 
    80013efc:	00013517          	auipc	a0,0x13
    80013f00:	4c450513          	addi	a0,a0,1220 # 800273c0 <str.0>

0000000080013f04 <.LBB2_69>:
    80013f04:	00013617          	auipc	a2,0x13
    80013f08:	4e460613          	addi	a2,a2,1252 # 800273e8 <.L__unnamed_5>
    80013f0c:	02100593          	li	a1,33
    80013f10:	0000d097          	auipc	ra,0xd
    80013f14:	dba080e7          	jalr	-582(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel8register3sie4read17h98a93651a957dfdaE:

0000000080013f1a <_ZN6kernel8register3sie4read17h98a93651a957dfdaE>:
    STIE = 1 << 5, // timer
    SSIE = 1 << 1, // software
}

#[inline]
pub unsafe fn read() -> usize {
    80013f1a:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, sie":"=r"(ret):::"volatile");
    80013f1c:	10402573          	csrr	a0,sie
    80013f20:	e42a                	sd	a0,8(sp)
    ret
}
    80013f22:	0141                	addi	sp,sp,16
    80013f24:	8082                	ret

Disassembly of section .text._ZN6kernel8register3sie5write17h8bc3ba37c038c13cE:

0000000080013f26 <_ZN6kernel8register3sie5write17h8bc3ba37c038c13cE>:

#[inline]
pub unsafe fn write(x:usize) {
    80013f26:	1141                	addi	sp,sp,-16
    80013f28:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw sie, $0"::"r"(x)::"volatile");
    80013f2a:	10451073          	csrw	sie,a0
}
    80013f2e:	0141                	addi	sp,sp,16
    80013f30:	8082                	ret

Disassembly of section .text._ZN6kernel8register3sie7intr_on17h6d7bd6af283c5c06E:

0000000080013f32 <_ZN6kernel8register3sie7intr_on17h6d7bd6af283c5c06E>:

/// enable all software interrupts
/// still need to set SIE bit in sstatus
pub unsafe fn intr_on() {
    80013f32:	1141                	addi	sp,sp,-16
    let mut sie = read();
    80013f34:	e406                	sd	ra,8(sp)
    80013f36:	00000097          	auipc	ra,0x0
    80013f3a:	fe4080e7          	jalr	-28(ra) # 80013f1a <_ZN6kernel8register3sie4read17h98a93651a957dfdaE>
    80013f3e:	e02a                	sd	a0,0(sp)
    80013f40:	a009                	j	80013f42 <_ZN6kernel8register3sie7intr_on17h6d7bd6af283c5c06E+0x10>
    sie |= SIE::SSIE as usize | SIE::STIE as usize | SIE::SEIE as usize;
    80013f42:	6502                	ld	a0,0(sp)
    80013f44:	22256513          	ori	a0,a0,546
    80013f48:	e02a                	sd	a0,0(sp)
    write(sie);
    80013f4a:	00000097          	auipc	ra,0x0
    80013f4e:	fdc080e7          	jalr	-36(ra) # 80013f26 <_ZN6kernel8register3sie5write17h8bc3ba37c038c13cE>
    80013f52:	a009                	j	80013f54 <_ZN6kernel8register3sie7intr_on17h6d7bd6af283c5c06E+0x22>
    80013f54:	60a2                	ld	ra,8(sp)
    80013f56:	0141                	addi	sp,sp,16
    80013f58:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3log3Log4init17ha65acaf2dd191df6E:

0000000080013f5a <_ZN6kernel2fs3log3Log4init17ha65acaf2dd191df6E>:

    /// Init the log when booting.
    /// Recover the fs if necessary.
    /// SAFETY: It must be called without holding any locks,
    ///         because it will call disk rw, which might sleep.
    pub unsafe fn init(&mut self, dev: u32) {
    80013f5a:	7129                	addi	sp,sp,-320
    80013f5c:	fe06                	sd	ra,312(sp)
    80013f5e:	862e                	mv	a2,a1
    80013f60:	f9aa                	sd	a0,240(sp)
    80013f62:	dfae                	sw	a1,252(sp)
        debug_assert!(mem::size_of::<LogHeader>() < BSIZE);
    80013f64:	f0aa                	sd	a0,96(sp)
    80013f66:	ecb2                	sd	a2,88(sp)
    80013f68:	a009                	j	80013f6a <_ZN6kernel2fs3log3Log4init17ha65acaf2dd191df6E+0x10>
    80013f6a:	4505                	li	a0,1
    80013f6c:	e10d                	bnez	a0,80013f8e <.LBB0_16+0x16>
    80013f6e:	a009                	j	80013f70 <.LBB0_15>

0000000080013f70 <.LBB0_15>:
    80013f70:	00013517          	auipc	a0,0x13
    80013f74:	49350513          	addi	a0,a0,1171 # 80027403 <.L__unnamed_1>

0000000080013f78 <.LBB0_16>:
    80013f78:	00013617          	auipc	a2,0x13
    80013f7c:	4d060613          	addi	a2,a2,1232 # 80027448 <.L__unnamed_2>
    80013f80:	03500593          	li	a1,53
    80013f84:	0000d097          	auipc	ra,0xd
    80013f88:	d46080e7          	jalr	-698(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80013f8c:	0000                	unimp
    80013f8e:	4521                	li	a0,8
    80013f90:	f62a                	sd	a0,296(sp)
        debug_assert_eq!(mem::align_of::<BufData>() % mem::align_of::<LogHeader>(), 0);
    80013f92:	e8aa                	sd	a0,80(sp)
    80013f94:	a009                	j	80013f96 <.LBB0_16+0x1e>
    80013f96:	4511                	li	a0,4
    80013f98:	fa2a                	sd	a0,304(sp)
    80013f9a:	e4aa                	sd	a0,72(sp)
    80013f9c:	a009                	j	80013f9e <.LBB0_16+0x26>
    80013f9e:	4501                	li	a0,0
    80013fa0:	65a6                	ld	a1,72(sp)
    80013fa2:	0ea58863          	beq	a1,a0,80014092 <.LBB0_23>
    80013fa6:	a009                	j	80013fa8 <.LBB0_16+0x30>
    80013fa8:	6546                	ld	a0,80(sp)
    80013faa:	65a6                	ld	a1,72(sp)
    80013fac:	02b57633          	remu	a2,a0,a1
    80013fb0:	fcb2                	sd	a2,120(sp)
    80013fb2:	18b4                	addi	a3,sp,120
    80013fb4:	f4b6                	sd	a3,104(sp)

0000000080013fb6 <.LBB0_17>:
    80013fb6:	00010717          	auipc	a4,0x10
    80013fba:	dea70713          	addi	a4,a4,-534 # 80023da0 <.L__unnamed_5+0xa0>
    80013fbe:	f8ba                	sd	a4,112(sp)
    80013fc0:	e236                	sd	a3,256(sp)
    80013fc2:	e63a                	sd	a4,264(sp)
    80013fc4:	4781                	li	a5,0
    80013fc6:	e0b6                	sd	a3,64(sp)
    80013fc8:	fc3a                	sd	a4,56(sp)
    80013fca:	02f60a63          	beq	a2,a5,80013ffe <.LBB0_19>
    80013fce:	a009                	j	80013fd0 <.LBB0_17+0x1a>
    80013fd0:	6506                	ld	a0,64(sp)
    80013fd2:	f1aa                	sd	a0,224(sp)
    80013fd4:	75e2                	ld	a1,56(sp)
    80013fd6:	f5ae                	sd	a1,232(sp)
    80013fd8:	1190                	addi	a2,sp,224
    80013fda:	e9b2                	sd	a2,208(sp)
    80013fdc:	11b4                	addi	a3,sp,232
    80013fde:	edb6                	sd	a3,216(sp)
    80013fe0:	ea32                	sd	a2,272(sp)
    80013fe2:	ee36                	sd	a3,280(sp)

0000000080013fe4 <.LBB0_18>:
    80013fe4:	0000c597          	auipc	a1,0xc
    80013fe8:	9d458593          	addi	a1,a1,-1580 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    80013fec:	8532                	mv	a0,a2
    80013fee:	f836                	sd	a3,48(sp)
    80013ff0:	0000c097          	auipc	ra,0xc
    80013ff4:	9e6080e7          	jalr	-1562(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    80013ff8:	f42a                	sd	a0,40(sp)
    80013ffa:	f02e                	sd	a1,32(sp)
    80013ffc:	a821                	j	80014014 <.LBB0_20>

0000000080013ffe <.LBB0_19>:
        let (start, size) = SUPER_BLOCK.read_log();
    80013ffe:	00059517          	auipc	a0,0x59
    80014002:	1e250513          	addi	a0,a0,482 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    80014006:	ffff9097          	auipc	ra,0xffff9
    8001400a:	394080e7          	jalr	916(ra) # 8000d39a <_ZN6kernel2fs10superblock10SuperBlock8read_log17h36e914fd672b2fa8E>
    8001400e:	ec2a                	sd	a0,24(sp)
    80014010:	e82e                	sd	a1,16(sp)
    80014012:	a8a1                	j	8001406a <.LBB0_22+0x14>

0000000080014014 <.LBB0_20>:
        debug_assert_eq!(mem::align_of::<BufData>() % mem::align_of::<LogHeader>(), 0);
    80014014:	0000c597          	auipc	a1,0xc
    80014018:	9a458593          	addi	a1,a1,-1628 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8001401c:	7542                	ld	a0,48(sp)
    8001401e:	0000c097          	auipc	ra,0xc
    80014022:	9b8080e7          	jalr	-1608(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    80014026:	e42a                	sd	a0,8(sp)
    80014028:	e02e                	sd	a1,0(sp)
    8001402a:	a009                	j	8001402c <.LBB0_20+0x18>
    8001402c:	7522                	ld	a0,40(sp)
    8001402e:	f92a                	sd	a0,176(sp)
    80014030:	7582                	ld	a1,32(sp)
    80014032:	fd2e                	sd	a1,184(sp)
    80014034:	6622                	ld	a2,8(sp)
    80014036:	e1b2                	sd	a2,192(sp)
    80014038:	6682                	ld	a3,0(sp)
    8001403a:	e5b6                	sd	a3,200(sp)

000000008001403c <.LBB0_21>:
    8001403c:	00013597          	auipc	a1,0x13
    80014040:	4bc58593          	addi	a1,a1,1212 # 800274f8 <.L__unnamed_4>
    80014044:	0108                	addi	a0,sp,128
    80014046:	460d                	li	a2,3
    80014048:	1914                	addi	a3,sp,176
    8001404a:	4709                	li	a4,2
    8001404c:	ffff1097          	auipc	ra,0xffff1
    80014050:	6d8080e7          	jalr	1752(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014054:	a009                	j	80014056 <.LBB0_22>

0000000080014056 <.LBB0_22>:
    80014056:	00013597          	auipc	a1,0x13
    8001405a:	4d258593          	addi	a1,a1,1234 # 80027528 <.L__unnamed_5>
    8001405e:	0108                	addi	a0,sp,128
    80014060:	0000d097          	auipc	ra,0xd
    80014064:	cd6080e7          	jalr	-810(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80014068:	0000                	unimp
        let (start, size) = SUPER_BLOCK.read_log();
    8001406a:	6562                	ld	a0,24(sp)
    8001406c:	12a12023          	sw	a0,288(sp)
    80014070:	65c2                	ld	a1,16(sp)
    80014072:	12b12223          	sw	a1,292(sp)
        self.start = start;
    80014076:	7606                	ld	a2,96(sp)
    80014078:	c208                	sw	a0,0(a2)
        self.size = size;
    8001407a:	c24c                	sw	a1,4(a2)
        self.dev = dev;
    8001407c:	66e6                	ld	a3,88(sp)
    8001407e:	c614                	sw	a3,8(a2)
        self.recover();
    80014080:	8532                	mv	a0,a2
    80014082:	00000097          	auipc	ra,0x0
    80014086:	02e080e7          	jalr	46(ra) # 800140b0 <_ZN6kernel2fs3log3Log7recover17h8658ea8e560c56edE>
    8001408a:	a009                	j	8001408c <.LBB0_22+0x36>
    }
    8001408c:	70f2                	ld	ra,312(sp)
    8001408e:	6131                	addi	sp,sp,320
    80014090:	8082                	ret

0000000080014092 <.LBB0_23>:
        debug_assert_eq!(mem::align_of::<BufData>() % mem::align_of::<LogHeader>(), 0);
    80014092:	00013517          	auipc	a0,0x13
    80014096:	3ee50513          	addi	a0,a0,1006 # 80027480 <str.0>

000000008001409a <.LBB0_24>:
    8001409a:	00013617          	auipc	a2,0x13
    8001409e:	3c660613          	addi	a2,a2,966 # 80027460 <.L__unnamed_6>
    800140a2:	03900593          	li	a1,57
    800140a6:	0000d097          	auipc	ra,0xd
    800140aa:	c24080e7          	jalr	-988(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs3log3Log7recover17h8658ea8e560c56edE:

00000000800140b0 <_ZN6kernel2fs3log3Log7recover17h8658ea8e560c56edE>:

    /// Recover the file system from log if necessary.
    fn recover(&mut self) {
    800140b0:	7171                	addi	sp,sp,-176
    800140b2:	f506                	sd	ra,168(sp)
    800140b4:	f12a                	sd	a0,160(sp)

00000000800140b6 <.LBB1_13>:
        println!("file system: checking logs");
    800140b6:	00013597          	auipc	a1,0x13
    800140ba:	4aa58593          	addi	a1,a1,1194 # 80027560 <.L__unnamed_7>

00000000800140be <.LBB1_14>:
    800140be:	00013697          	auipc	a3,0x13
    800140c2:	4b268693          	addi	a3,a3,1202 # 80027570 <.L__unnamed_24>
    800140c6:	0810                	addi	a2,sp,16
    800140c8:	4705                	li	a4,1
    800140ca:	4781                	li	a5,0
    800140cc:	e02a                	sd	a0,0(sp)
    800140ce:	8532                	mv	a0,a2
    800140d0:	863a                	mv	a2,a4
    800140d2:	873e                	mv	a4,a5
    800140d4:	ffff1097          	auipc	ra,0xffff1
    800140d8:	650080e7          	jalr	1616(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800140dc:	a009                	j	800140de <.LBB1_14+0x20>
    800140de:	0808                	addi	a0,sp,16
    800140e0:	ffffd097          	auipc	ra,0xffffd
    800140e4:	c10080e7          	jalr	-1008(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    800140e8:	a009                	j	800140ea <.LBB1_14+0x2c>
        self.read_head();
    800140ea:	6502                	ld	a0,0(sp)
    800140ec:	00000097          	auipc	ra,0x0
    800140f0:	092080e7          	jalr	146(ra) # 8001417e <_ZN6kernel2fs3log3Log9read_head17h32ea0ffadabd3667E>
    800140f4:	a009                	j	800140f6 <.LBB1_14+0x38>
        if self.lh.len > 0 {
    800140f6:	6502                	ld	a0,0(sp)
    800140f8:	490c                	lw	a1,16(a0)
    800140fa:	4601                	li	a2,0
    800140fc:	02c58363          	beq	a1,a2,80014122 <.LBB1_17>
    80014100:	a009                	j	80014102 <.LBB1_15>

0000000080014102 <.LBB1_15>:
            println!("file system: recovering from logs");
    80014102:	00013597          	auipc	a1,0x13
    80014106:	49658593          	addi	a1,a1,1174 # 80027598 <.L__unnamed_9>

000000008001410a <.LBB1_16>:
    8001410a:	00013697          	auipc	a3,0x13
    8001410e:	46668693          	addi	a3,a3,1126 # 80027570 <.L__unnamed_24>
    80014112:	0088                	addi	a0,sp,64
    80014114:	4605                	li	a2,1
    80014116:	4701                	li	a4,0
    80014118:	ffff1097          	auipc	ra,0xffff1
    8001411c:	60c080e7          	jalr	1548(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014120:	a00d                	j	80014142 <.LBB1_18+0x18>

0000000080014122 <.LBB1_17>:
            self.install_trans(true);
            self.empty_head();
        } else {
            println!("file system: no need to recover");
    80014122:	00013597          	auipc	a1,0x13
    80014126:	48658593          	addi	a1,a1,1158 # 800275a8 <.L__unnamed_10>

000000008001412a <.LBB1_18>:
    8001412a:	00013697          	auipc	a3,0x13
    8001412e:	44668693          	addi	a3,a3,1094 # 80027570 <.L__unnamed_24>
    80014132:	1888                	addi	a0,sp,112
    80014134:	4605                	li	a2,1
    80014136:	4701                	li	a4,0
    80014138:	ffff1097          	auipc	ra,0xffff1
    8001413c:	5ec080e7          	jalr	1516(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014140:	a02d                	j	8001416a <.LBB1_18+0x40>
    80014142:	0088                	addi	a0,sp,64
            println!("file system: recovering from logs");
    80014144:	ffffd097          	auipc	ra,0xffffd
    80014148:	bac080e7          	jalr	-1108(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8001414c:	a009                	j	8001414e <.LBB1_18+0x24>
    8001414e:	4585                	li	a1,1
            self.install_trans(true);
    80014150:	6502                	ld	a0,0(sp)
    80014152:	00000097          	auipc	ra,0x0
    80014156:	19e080e7          	jalr	414(ra) # 800142f0 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E>
    8001415a:	a009                	j	8001415c <.LBB1_18+0x32>
            self.empty_head();
    8001415c:	6502                	ld	a0,0(sp)
    8001415e:	00000097          	auipc	ra,0x0
    80014162:	104080e7          	jalr	260(ra) # 80014262 <_ZN6kernel2fs3log3Log10empty_head17he667ba1f6ed77561E>
    80014166:	a009                	j	80014168 <.LBB1_18+0x3e>
        if self.lh.len > 0 {
    80014168:	a801                	j	80014178 <.LBB1_18+0x4e>
    8001416a:	1888                	addi	a0,sp,112
            println!("file system: no need to recover");
    8001416c:	ffffd097          	auipc	ra,0xffffd
    80014170:	b84080e7          	jalr	-1148(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80014174:	a009                	j	80014176 <.LBB1_18+0x4c>
        if self.lh.len > 0 {
    80014176:	a009                	j	80014178 <.LBB1_18+0x4e>
        }
    }
    80014178:	70aa                	ld	ra,168(sp)
    8001417a:	614d                	addi	sp,sp,176
    8001417c:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3log3Log9read_head17h32ea0ffadabd3667E:

000000008001417e <_ZN6kernel2fs3log3Log9read_head17h32ea0ffadabd3667E>:

    /// Read the log header from disk into the in-memory log header.
    fn read_head(&mut self) {
    8001417e:	7159                	addi	sp,sp,-112
    80014180:	f486                	sd	ra,104(sp)
    80014182:	f0aa                	sd	a0,96(sp)
        let buf = BCACHE.bread(self.dev, self.start);
    80014184:	4114                	lw	a3,0(a0)
    80014186:	4510                	lw	a2,8(a0)

0000000080014188 <.LBB2_5>:
    80014188:	00018597          	auipc	a1,0x18
    8001418c:	e7858593          	addi	a1,a1,-392 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80014190:	0818                	addi	a4,sp,16
    80014192:	e42a                	sd	a0,8(sp)
    80014194:	853a                	mv	a0,a4
    80014196:	fffed097          	auipc	ra,0xfffed
    8001419a:	668080e7          	jalr	1640(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8001419e:	a009                	j	800141a0 <.LBB2_5+0x18>
    800141a0:	0808                	addi	a0,sp,16
        unsafe {
            ptr::copy_nonoverlapping(
                buf.raw_data() as *const LogHeader,
    800141a2:	fffed097          	auipc	ra,0xfffed
    800141a6:	7b8080e7          	jalr	1976(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    800141aa:	e02a                	sd	a0,0(sp)
    800141ac:	a009                	j	800141ae <.LBB2_5+0x26>
                &mut self.lh,
    800141ae:	6522                	ld	a0,8(sp)
    800141b0:	01050593          	addi	a1,a0,16
    800141b4:	4605                	li	a2,1
            ptr::copy_nonoverlapping(
    800141b6:	6502                	ld	a0,0(sp)
    800141b8:	ffff2097          	auipc	ra,0xffff2
    800141bc:	900080e7          	jalr	-1792(ra) # 80005ab8 <_ZN4core10intrinsics19copy_nonoverlapping17h9563a61b51500449E>
    800141c0:	a009                	j	800141c2 <.LBB2_5+0x3a>
                1
            );
        }
        drop(buf);
    800141c2:	7542                	ld	a0,48(sp)
    800141c4:	ecaa                	sd	a0,88(sp)
    800141c6:	7522                	ld	a0,40(sp)
    800141c8:	e8aa                	sd	a0,80(sp)
    800141ca:	7502                	ld	a0,32(sp)
    800141cc:	e4aa                	sd	a0,72(sp)
    800141ce:	6562                	ld	a0,24(sp)
    800141d0:	e0aa                	sd	a0,64(sp)
    800141d2:	6542                	ld	a0,16(sp)
    800141d4:	fc2a                	sd	a0,56(sp)
    800141d6:	1828                	addi	a0,sp,56
    800141d8:	ffff9097          	auipc	ra,0xffff9
    800141dc:	7ba080e7          	jalr	1978(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    800141e0:	a009                	j	800141e2 <.LBB2_5+0x5a>
    }
    800141e2:	70a6                	ld	ra,104(sp)
    800141e4:	6165                	addi	sp,sp,112
    800141e6:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3log3Log10write_head17h26e7a1129549f762E:

00000000800141e8 <_ZN6kernel2fs3log3Log10write_head17h26e7a1129549f762E>:

    /// Write in-memory log header to disk.
    /// This is the true point at which the current transaction commits.
    fn write_head(&mut self) {
    800141e8:	7119                	addi	sp,sp,-128
    800141ea:	fc86                	sd	ra,120(sp)
    800141ec:	f8aa                	sd	a0,112(sp)
        let mut buf = BCACHE.bread(self.dev, self.start);
    800141ee:	4114                	lw	a3,0(a0)
    800141f0:	4510                	lw	a2,8(a0)

00000000800141f2 <.LBB3_6>:
    800141f2:	00018597          	auipc	a1,0x18
    800141f6:	e0e58593          	addi	a1,a1,-498 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    800141fa:	1018                	addi	a4,sp,32
    800141fc:	ec2a                	sd	a0,24(sp)
    800141fe:	853a                	mv	a0,a4
    80014200:	fffed097          	auipc	ra,0xfffed
    80014204:	5fe080e7          	jalr	1534(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    80014208:	a009                	j	8001420a <.LBB3_6+0x18>
        unsafe {
            ptr::copy_nonoverlapping(
                &self.lh,
    8001420a:	6562                	ld	a0,24(sp)
    8001420c:	0541                	addi	a0,a0,16
    8001420e:	100c                	addi	a1,sp,32
                buf.raw_data_mut() as *mut LogHeader,
    80014210:	e82a                	sd	a0,16(sp)
    80014212:	852e                	mv	a0,a1
    80014214:	fffed097          	auipc	ra,0xfffed
    80014218:	78a080e7          	jalr	1930(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    8001421c:	e42a                	sd	a0,8(sp)
    8001421e:	a009                	j	80014220 <.LBB3_6+0x2e>
    80014220:	4605                	li	a2,1
            ptr::copy_nonoverlapping(
    80014222:	6542                	ld	a0,16(sp)
    80014224:	65a2                	ld	a1,8(sp)
    80014226:	ffff2097          	auipc	ra,0xffff2
    8001422a:	892080e7          	jalr	-1902(ra) # 80005ab8 <_ZN4core10intrinsics19copy_nonoverlapping17h9563a61b51500449E>
    8001422e:	a009                	j	80014230 <.LBB3_6+0x3e>
    80014230:	1008                	addi	a0,sp,32
                1,
            );
        }
        buf.bwrite();
    80014232:	fffed097          	auipc	ra,0xfffed
    80014236:	702080e7          	jalr	1794(ra) # 80001934 <_ZN6kernel2fs3bio3Buf6bwrite17he92a25be232d779bE>
    8001423a:	a009                	j	8001423c <.LBB3_6+0x4a>
        drop(buf);
    8001423c:	6506                	ld	a0,64(sp)
    8001423e:	f4aa                	sd	a0,104(sp)
    80014240:	7562                	ld	a0,56(sp)
    80014242:	f0aa                	sd	a0,96(sp)
    80014244:	7542                	ld	a0,48(sp)
    80014246:	ecaa                	sd	a0,88(sp)
    80014248:	7522                	ld	a0,40(sp)
    8001424a:	e8aa                	sd	a0,80(sp)
    8001424c:	7502                	ld	a0,32(sp)
    8001424e:	e4aa                	sd	a0,72(sp)
    80014250:	00a8                	addi	a0,sp,72
    80014252:	ffff9097          	auipc	ra,0xffff9
    80014256:	740080e7          	jalr	1856(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001425a:	a009                	j	8001425c <.LBB3_6+0x6a>
    }
    8001425c:	70e6                	ld	ra,120(sp)
    8001425e:	6109                	addi	sp,sp,128
    80014260:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3log3Log10empty_head17he667ba1f6ed77561E:

0000000080014262 <_ZN6kernel2fs3log3Log10empty_head17he667ba1f6ed77561E>:

    /// Empty log header in disk by 
    /// setting the len of log(both in-memory and in-disk) to zero.
    fn empty_head(&mut self) {
    80014262:	7119                	addi	sp,sp,-128
    80014264:	fc86                	sd	ra,120(sp)
    80014266:	f4aa                	sd	a0,104(sp)
    80014268:	4581                	li	a1,0
        self.lh.len = 0;
    8001426a:	c90c                	sw	a1,16(a0)
        let mut buf = BCACHE.bread(self.dev, self.start);
    8001426c:	4114                	lw	a3,0(a0)
    8001426e:	4510                	lw	a2,8(a0)

0000000080014270 <.LBB4_7>:
    80014270:	00018597          	auipc	a1,0x18
    80014274:	d9058593          	addi	a1,a1,-624 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80014278:	0828                	addi	a0,sp,24
    8001427a:	fffed097          	auipc	ra,0xfffed
    8001427e:	584080e7          	jalr	1412(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    80014282:	a009                	j	80014284 <.LBB4_7+0x14>
    80014284:	0828                	addi	a0,sp,24
        let raw_lh = buf.raw_data_mut() as *mut LogHeader;
    80014286:	fffed097          	auipc	ra,0xfffed
    8001428a:	718080e7          	jalr	1816(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    8001428e:	e82a                	sd	a0,16(sp)
    80014290:	a009                	j	80014292 <.LBB4_7+0x22>
    80014292:	6542                	ld	a0,16(sp)
    80014294:	f8aa                	sd	a0,112(sp)
        unsafe { raw_lh.as_mut().unwrap().len = 0; }
    80014296:	ffff3097          	auipc	ra,0xffff3
    8001429a:	5aa080e7          	jalr	1450(ra) # 80007840 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1b0798498b305493E>
    8001429e:	e42a                	sd	a0,8(sp)
    800142a0:	a009                	j	800142a2 <.LBB4_8>

00000000800142a2 <.LBB4_8>:
    800142a2:	00013597          	auipc	a1,0x13
    800142a6:	31658593          	addi	a1,a1,790 # 800275b8 <.L__unnamed_11>
    800142aa:	6522                	ld	a0,8(sp)
    800142ac:	00005097          	auipc	ra,0x5
    800142b0:	aa8080e7          	jalr	-1368(ra) # 80018d54 <_ZN4core6option15Option$LT$T$GT$6unwrap17h9f48a2bf9204f63bE>
    800142b4:	e02a                	sd	a0,0(sp)
    800142b6:	a009                	j	800142b8 <.LBB4_8+0x16>
    800142b8:	4501                	li	a0,0
    800142ba:	6582                	ld	a1,0(sp)
    800142bc:	c188                	sw	a0,0(a1)
    800142be:	0828                	addi	a0,sp,24
        buf.bwrite();
    800142c0:	fffed097          	auipc	ra,0xfffed
    800142c4:	674080e7          	jalr	1652(ra) # 80001934 <_ZN6kernel2fs3bio3Buf6bwrite17he92a25be232d779bE>
    800142c8:	a009                	j	800142ca <.LBB4_8+0x28>
        drop(buf);
    800142ca:	7562                	ld	a0,56(sp)
    800142cc:	f0aa                	sd	a0,96(sp)
    800142ce:	7542                	ld	a0,48(sp)
    800142d0:	ecaa                	sd	a0,88(sp)
    800142d2:	7522                	ld	a0,40(sp)
    800142d4:	e8aa                	sd	a0,80(sp)
    800142d6:	7502                	ld	a0,32(sp)
    800142d8:	e4aa                	sd	a0,72(sp)
    800142da:	6562                	ld	a0,24(sp)
    800142dc:	e0aa                	sd	a0,64(sp)
    800142de:	0088                	addi	a0,sp,64
    800142e0:	ffff9097          	auipc	ra,0xffff9
    800142e4:	6b2080e7          	jalr	1714(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    800142e8:	a009                	j	800142ea <.LBB4_8+0x48>
    }
    800142ea:	70e6                	ld	ra,120(sp)
    800142ec:	6109                	addi	sp,sp,128
    800142ee:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E:

00000000800142f0 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E>:

    /// Copy committed blocks from log to their home location.
    fn install_trans(&mut self, recovering: bool) {
    800142f0:	7129                	addi	sp,sp,-320
    800142f2:	fe06                	sd	ra,312(sp)
    800142f4:	862e                	mv	a2,a1
    800142f6:	f22a                	sd	a0,288(sp)
    800142f8:	12b105a3          	sb	a1,299(sp)
        for i in 0..self.lh.len {
    800142fc:	490c                	lw	a1,16(a0)
    800142fe:	4681                	li	a3,0
    80014300:	d4b6                	sw	a3,104(sp)
    80014302:	d6ae                	sw	a1,108(sp)
    80014304:	f0aa                	sd	a0,96(sp)
    80014306:	8536                	mv	a0,a3
    80014308:	ecb2                	sd	a2,88(sp)
    8001430a:	ffff1097          	auipc	ra,0xffff1
    8001430e:	03e080e7          	jalr	62(ra) # 80005348 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb3f70b8b942a274cE>
    80014312:	e8aa                	sd	a0,80(sp)
    80014314:	e4ae                	sd	a1,72(sp)
    80014316:	a009                	j	80014318 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x28>
    80014318:	6546                	ld	a0,80(sp)
    8001431a:	d8aa                	sw	a0,112(sp)
    8001431c:	65a6                	ld	a1,72(sp)
    8001431e:	daae                	sw	a1,116(sp)
    80014320:	a009                	j	80014322 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x32>
    80014322:	1888                	addi	a0,sp,112
    80014324:	ffff1097          	auipc	ra,0xffff1
    80014328:	eac080e7          	jalr	-340(ra) # 800051d0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE>
    8001432c:	dcaa                	sw	a0,120(sp)
    8001432e:	deae                	sw	a1,124(sp)
    80014330:	a009                	j	80014332 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x42>
    80014332:	07816503          	lwu	a0,120(sp)
    80014336:	4581                	li	a1,0
    80014338:	00b50463          	beq	a0,a1,80014340 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x50>
    8001433c:	a009                	j	8001433e <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x4e>
    8001433e:	a029                	j	80014348 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x58>
                unsafe { disk_buf.unpin(); }
            }
            drop(log_buf);
            drop(disk_buf);
        }
    }
    80014340:	70f2                	ld	ra,312(sp)
    80014342:	6131                	addi	sp,sp,320
    80014344:	8082                	ret
        for i in 0..self.lh.len {
    80014346:	0000                	unimp
    80014348:	07c16503          	lwu	a0,124(sp)
    8001434c:	12a12623          	sw	a0,300(sp)
    80014350:	12a12823          	sw	a0,304(sp)
    80014354:	12a12a23          	sw	a0,308(sp)
            let log_buf  = BCACHE.bread(self.dev, self.start+1+i);
    80014358:	7586                	ld	a1,96(sp)
    8001435a:	0085e603          	lwu	a2,8(a1)
    8001435e:	0005e683          	lwu	a3,0(a1)
    80014362:	0685                	addi	a3,a3,1
    80014364:	02069713          	slli	a4,a3,0x20
    80014368:	9301                	srli	a4,a4,0x20
    8001436a:	e0aa                	sd	a0,64(sp)
    8001436c:	fc32                	sd	a2,56(sp)
    8001436e:	f836                	sd	a3,48(sp)
    80014370:	10d71163          	bne	a4,a3,80014472 <.LBB5_28>
    80014374:	a009                	j	80014376 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x86>
    80014376:	7542                	ld	a0,48(sp)
    80014378:	02051593          	slli	a1,a0,0x20
    8001437c:	9181                	srli	a1,a1,0x20
    8001437e:	6606                	ld	a2,64(sp)
    80014380:	95b2                	add	a1,a1,a2
    80014382:	02059693          	slli	a3,a1,0x20
    80014386:	9281                	srli	a3,a3,0x20
    80014388:	f42e                	sd	a1,40(sp)
    8001438a:	10b69263          	bne	a3,a1,8001448e <.LBB5_30>
    8001438e:	a009                	j	80014390 <.LBB5_26>

0000000080014390 <.LBB5_26>:
    80014390:	00018597          	auipc	a1,0x18
    80014394:	c7058593          	addi	a1,a1,-912 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80014398:	0108                	addi	a0,sp,128
    8001439a:	7662                	ld	a2,56(sp)
    8001439c:	76a2                	ld	a3,40(sp)
    8001439e:	fffed097          	auipc	ra,0xfffed
    800143a2:	460080e7          	jalr	1120(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    800143a6:	a009                	j	800143a8 <.LBB5_26+0x18>
            let mut disk_buf = BCACHE.bread(self.dev, self.lh.blocknos[i as usize]);
    800143a8:	7506                	ld	a0,96(sp)
    800143aa:	00856603          	lwu	a2,8(a0)
    800143ae:	6586                	ld	a1,64(sp)
    800143b0:	0005869b          	sext.w	a3,a1
    800143b4:	4771                	li	a4,28
    800143b6:	f032                	sd	a2,32(sp)
    800143b8:	ec2e                	sd	a1,24(sp)
    800143ba:	0ed76863          	bltu	a4,a3,800144aa <.LBB5_32>
    800143be:	a009                	j	800143c0 <.LBB5_26+0x30>
    800143c0:	6562                	ld	a0,24(sp)
    800143c2:	00251593          	slli	a1,a0,0x2
    800143c6:	7606                	ld	a2,96(sp)
    800143c8:	95b2                	add	a1,a1,a2
    800143ca:	49d4                	lw	a3,20(a1)

00000000800143cc <.LBB5_27>:
    800143cc:	00018597          	auipc	a1,0x18
    800143d0:	c3458593          	addi	a1,a1,-972 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    800143d4:	1128                	addi	a0,sp,168
    800143d6:	7602                	ld	a2,32(sp)
    800143d8:	fffed097          	auipc	ra,0xfffed
    800143dc:	426080e7          	jalr	1062(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    800143e0:	a009                	j	800143e2 <.LBB5_27+0x16>
    800143e2:	0108                	addi	a0,sp,128
                    log_buf.raw_data(),
    800143e4:	fffed097          	auipc	ra,0xfffed
    800143e8:	576080e7          	jalr	1398(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    800143ec:	e82a                	sd	a0,16(sp)
    800143ee:	a009                	j	800143f0 <.LBB5_27+0x24>
    800143f0:	1128                	addi	a0,sp,168
                    disk_buf.raw_data_mut(),
    800143f2:	fffed097          	auipc	ra,0xfffed
    800143f6:	5ac080e7          	jalr	1452(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    800143fa:	e42a                	sd	a0,8(sp)
    800143fc:	a009                	j	800143fe <.LBB5_27+0x32>
    800143fe:	4605                	li	a2,1
                ptr::copy(
    80014400:	6542                	ld	a0,16(sp)
    80014402:	65a2                	ld	a1,8(sp)
    80014404:	ffff1097          	auipc	ra,0xffff1
    80014408:	7ce080e7          	jalr	1998(ra) # 80005bd2 <_ZN4core10intrinsics4copy17h82ffe9525b0a7e13E>
    8001440c:	a009                	j	8001440e <.LBB5_27+0x42>
    8001440e:	1128                	addi	a0,sp,168
            disk_buf.bwrite();
    80014410:	fffed097          	auipc	ra,0xfffed
    80014414:	524080e7          	jalr	1316(ra) # 80001934 <_ZN6kernel2fs3bio3Buf6bwrite17he92a25be232d779bE>
    80014418:	a009                	j	8001441a <.LBB5_27+0x4e>
            if !recovering {
    8001441a:	6566                	ld	a0,88(sp)
    8001441c:	e901                	bnez	a0,8001442c <.LBB5_27+0x60>
    8001441e:	a009                	j	80014420 <.LBB5_27+0x54>
    80014420:	1128                	addi	a0,sp,168
                unsafe { disk_buf.unpin(); }
    80014422:	fffed097          	auipc	ra,0xfffed
    80014426:	600080e7          	jalr	1536(ra) # 80001a22 <_ZN6kernel2fs3bio3Buf5unpin17h1d586dc6aecebdeaE>
    8001442a:	a011                	j	8001442e <.LBB5_27+0x62>
            if !recovering {
    8001442c:	a011                	j	80014430 <.LBB5_27+0x64>
    8001442e:	a009                	j	80014430 <.LBB5_27+0x64>
            drop(log_buf);
    80014430:	750a                	ld	a0,160(sp)
    80014432:	f9aa                	sd	a0,240(sp)
    80014434:	656a                	ld	a0,152(sp)
    80014436:	f5aa                	sd	a0,232(sp)
    80014438:	654a                	ld	a0,144(sp)
    8001443a:	f1aa                	sd	a0,224(sp)
    8001443c:	652a                	ld	a0,136(sp)
    8001443e:	edaa                	sd	a0,216(sp)
    80014440:	650a                	ld	a0,128(sp)
    80014442:	e9aa                	sd	a0,208(sp)
    80014444:	0988                	addi	a0,sp,208
    80014446:	ffff9097          	auipc	ra,0xffff9
    8001444a:	54c080e7          	jalr	1356(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001444e:	a009                	j	80014450 <.LBB5_27+0x84>
            drop(disk_buf);
    80014450:	652e                	ld	a0,200(sp)
    80014452:	ee2a                	sd	a0,280(sp)
    80014454:	650e                	ld	a0,192(sp)
    80014456:	ea2a                	sd	a0,272(sp)
    80014458:	756a                	ld	a0,184(sp)
    8001445a:	e62a                	sd	a0,264(sp)
    8001445c:	754a                	ld	a0,176(sp)
    8001445e:	e22a                	sd	a0,256(sp)
    80014460:	752a                	ld	a0,168(sp)
    80014462:	fdaa                	sd	a0,248(sp)
    80014464:	19a8                	addi	a0,sp,248
    80014466:	ffff9097          	auipc	ra,0xffff9
    8001446a:	52c080e7          	jalr	1324(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001446e:	a009                	j	80014470 <.LBB5_27+0xa4>
        for i in 0..self.lh.len {
    80014470:	bd4d                	j	80014322 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E+0x32>

0000000080014472 <.LBB5_28>:
            let log_buf  = BCACHE.bread(self.dev, self.start+1+i);
    80014472:	00013517          	auipc	a0,0x13
    80014476:	17e50513          	addi	a0,a0,382 # 800275f0 <str.1>

000000008001447a <.LBB5_29>:
    8001447a:	00013617          	auipc	a2,0x13
    8001447e:	15660613          	addi	a2,a2,342 # 800275d0 <.L__unnamed_12>
    80014482:	45f1                	li	a1,28
    80014484:	0000d097          	auipc	ra,0xd
    80014488:	846080e7          	jalr	-1978(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001448e <.LBB5_30>:
    8001448e:	00013517          	auipc	a0,0x13
    80014492:	16250513          	addi	a0,a0,354 # 800275f0 <str.1>

0000000080014496 <.LBB5_31>:
    80014496:	00013617          	auipc	a2,0x13
    8001449a:	13a60613          	addi	a2,a2,314 # 800275d0 <.L__unnamed_12>
    8001449e:	45f1                	li	a1,28
    800144a0:	0000d097          	auipc	ra,0xd
    800144a4:	82a080e7          	jalr	-2006(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800144aa <.LBB5_32>:
            let mut disk_buf = BCACHE.bread(self.dev, self.lh.blocknos[i as usize]);
    800144aa:	00013617          	auipc	a2,0x13
    800144ae:	16660613          	addi	a2,a2,358 # 80027610 <.L__unnamed_13>
    800144b2:	45f5                	li	a1,29
    800144b4:	6562                	ld	a0,24(sp)
    800144b6:	0000d097          	auipc	ra,0xd
    800144ba:	840080e7          	jalr	-1984(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs3log3Log6commit17h25ad975ed502fb03E:

00000000800144c0 <_ZN6kernel2fs3log3Log6commit17h25ad975ed502fb03E>:

    /// Commit the log.
    /// SAFETY: It must be called while the committing field is set.
    pub unsafe fn commit(&mut self) {
    800144c0:	7179                	addi	sp,sp,-48
    800144c2:	f406                	sd	ra,40(sp)
    800144c4:	f02a                	sd	a0,32(sp)
        if !self.committing {
    800144c6:	08854583          	lbu	a1,136(a0)
    800144ca:	8985                	andi	a1,a1,1
    800144cc:	e82a                	sd	a0,16(sp)
    800144ce:	e18d                	bnez	a1,800144f0 <.LBB6_11+0x16>
    800144d0:	a009                	j	800144d2 <.LBB6_10>

00000000800144d2 <.LBB6_10>:
            panic!("log: committing while the committing flag is not set");
    800144d2:	00013517          	auipc	a0,0x13
    800144d6:	15650513          	addi	a0,a0,342 # 80027628 <.L__unnamed_14>

00000000800144da <.LBB6_11>:
    800144da:	00013617          	auipc	a2,0x13
    800144de:	18660613          	addi	a2,a2,390 # 80027660 <.L__unnamed_15>
    800144e2:	03400593          	li	a1,52
    800144e6:	0000c097          	auipc	ra,0xc
    800144ea:	7e4080e7          	jalr	2020(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800144ee:	0000                	unimp
        }
        // debug_assert!(self.lh.len > 0);     // it should have some log to commit
        if self.lh.len > 0 {
    800144f0:	6542                	ld	a0,16(sp)
    800144f2:	490c                	lw	a1,16(a0)
    800144f4:	4601                	li	a2,0
    800144f6:	00c58963          	beq	a1,a2,80014508 <.LBB6_11+0x2e>
    800144fa:	a009                	j	800144fc <.LBB6_11+0x22>
            self.write_log();
    800144fc:	6542                	ld	a0,16(sp)
    800144fe:	00000097          	auipc	ra,0x0
    80014502:	040080e7          	jalr	64(ra) # 8001453e <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E>
    80014506:	a011                	j	8001450a <.LBB6_11+0x30>
        if self.lh.len > 0 {
    80014508:	a805                	j	80014538 <.LBB6_11+0x5e>
            self.write_head();
    8001450a:	6542                	ld	a0,16(sp)
    8001450c:	00000097          	auipc	ra,0x0
    80014510:	cdc080e7          	jalr	-804(ra) # 800141e8 <_ZN6kernel2fs3log3Log10write_head17h26e7a1129549f762E>
    80014514:	a009                	j	80014516 <.LBB6_11+0x3c>
    80014516:	4501                	li	a0,0
            self.install_trans(false);
    80014518:	65c2                	ld	a1,16(sp)
    8001451a:	e42a                	sd	a0,8(sp)
    8001451c:	852e                	mv	a0,a1
    8001451e:	65a2                	ld	a1,8(sp)
    80014520:	00000097          	auipc	ra,0x0
    80014524:	dd0080e7          	jalr	-560(ra) # 800142f0 <_ZN6kernel2fs3log3Log13install_trans17h2d02401aab6800e7E>
    80014528:	a009                	j	8001452a <.LBB6_11+0x50>
            self.empty_head();
    8001452a:	6542                	ld	a0,16(sp)
    8001452c:	00000097          	auipc	ra,0x0
    80014530:	d36080e7          	jalr	-714(ra) # 80014262 <_ZN6kernel2fs3log3Log10empty_head17he667ba1f6ed77561E>
    80014534:	a009                	j	80014536 <.LBB6_11+0x5c>
        if self.lh.len > 0 {
    80014536:	a009                	j	80014538 <.LBB6_11+0x5e>
        }
    }
    80014538:	70a2                	ld	ra,40(sp)
    8001453a:	6145                	addi	sp,sp,48
    8001453c:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E:

000000008001453e <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E>:

    /// Copy the log content from buffer cache to disk.
    fn write_log(&mut self) {
    8001453e:	7169                	addi	sp,sp,-304
    80014540:	f606                	sd	ra,296(sp)
    80014542:	ea2a                	sd	a0,272(sp)
        for i in 0..self.lh.len {
    80014544:	490c                	lw	a1,16(a0)
    80014546:	4601                	li	a2,0
    80014548:	ccb2                	sw	a2,88(sp)
    8001454a:	ceae                	sw	a1,92(sp)
    8001454c:	e8aa                	sd	a0,80(sp)
    8001454e:	8532                	mv	a0,a2
    80014550:	ffff1097          	auipc	ra,0xffff1
    80014554:	df8080e7          	jalr	-520(ra) # 80005348 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb3f70b8b942a274cE>
    80014558:	e4aa                	sd	a0,72(sp)
    8001455a:	e0ae                	sd	a1,64(sp)
    8001455c:	a009                	j	8001455e <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x20>
    8001455e:	6526                	ld	a0,72(sp)
    80014560:	d0aa                	sw	a0,96(sp)
    80014562:	6586                	ld	a1,64(sp)
    80014564:	d2ae                	sw	a1,100(sp)
    80014566:	a009                	j	80014568 <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x2a>
    80014568:	1088                	addi	a0,sp,96
    8001456a:	ffff1097          	auipc	ra,0xffff1
    8001456e:	c66080e7          	jalr	-922(ra) # 800051d0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE>
    80014572:	d4aa                	sw	a0,104(sp)
    80014574:	d6ae                	sw	a1,108(sp)
    80014576:	a009                	j	80014578 <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x3a>
    80014578:	06816503          	lwu	a0,104(sp)
    8001457c:	4581                	li	a1,0
    8001457e:	00b50463          	beq	a0,a1,80014586 <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x48>
    80014582:	a009                	j	80014584 <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x46>
    80014584:	a029                	j	8001458e <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x50>
            }
            log_buf.bwrite();
            drop(cache_buf);
            drop(log_buf);
        }
    }
    80014586:	70b2                	ld	ra,296(sp)
    80014588:	6155                	addi	sp,sp,304
    8001458a:	8082                	ret
        for i in 0..self.lh.len {
    8001458c:	0000                	unimp
    8001458e:	06c16503          	lwu	a0,108(sp)
    80014592:	10a12e23          	sw	a0,284(sp)
    80014596:	12a12023          	sw	a0,288(sp)
    8001459a:	12a12223          	sw	a0,292(sp)
            let mut log_buf  = BCACHE.bread(self.dev, self.start+1+i);
    8001459e:	65c6                	ld	a1,80(sp)
    800145a0:	0085e603          	lwu	a2,8(a1)
    800145a4:	0005e683          	lwu	a3,0(a1)
    800145a8:	0685                	addi	a3,a3,1
    800145aa:	02069713          	slli	a4,a3,0x20
    800145ae:	9301                	srli	a4,a4,0x20
    800145b0:	fc2a                	sd	a0,56(sp)
    800145b2:	f832                	sd	a2,48(sp)
    800145b4:	f436                	sd	a3,40(sp)
    800145b6:	0ed71663          	bne	a4,a3,800146a2 <.LBB7_24>
    800145ba:	a009                	j	800145bc <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x7e>
    800145bc:	7522                	ld	a0,40(sp)
    800145be:	02051593          	slli	a1,a0,0x20
    800145c2:	9181                	srli	a1,a1,0x20
    800145c4:	7662                	ld	a2,56(sp)
    800145c6:	95b2                	add	a1,a1,a2
    800145c8:	02059693          	slli	a3,a1,0x20
    800145cc:	9281                	srli	a3,a3,0x20
    800145ce:	f02e                	sd	a1,32(sp)
    800145d0:	0eb69763          	bne	a3,a1,800146be <.LBB7_26>
    800145d4:	a009                	j	800145d6 <.LBB7_22>

00000000800145d6 <.LBB7_22>:
    800145d6:	00018597          	auipc	a1,0x18
    800145da:	a2a58593          	addi	a1,a1,-1494 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    800145de:	1888                	addi	a0,sp,112
    800145e0:	7642                	ld	a2,48(sp)
    800145e2:	7682                	ld	a3,32(sp)
    800145e4:	fffed097          	auipc	ra,0xfffed
    800145e8:	21a080e7          	jalr	538(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    800145ec:	a009                	j	800145ee <.LBB7_22+0x18>
            let cache_buf = BCACHE.bread(self.dev, self.lh.blocknos[i as usize]);
    800145ee:	6546                	ld	a0,80(sp)
    800145f0:	00856603          	lwu	a2,8(a0)
    800145f4:	75e2                	ld	a1,56(sp)
    800145f6:	0005869b          	sext.w	a3,a1
    800145fa:	4771                	li	a4,28
    800145fc:	ec32                	sd	a2,24(sp)
    800145fe:	e82e                	sd	a1,16(sp)
    80014600:	0cd76d63          	bltu	a4,a3,800146da <.LBB7_28>
    80014604:	a009                	j	80014606 <.LBB7_22+0x30>
    80014606:	6542                	ld	a0,16(sp)
    80014608:	00251593          	slli	a1,a0,0x2
    8001460c:	6646                	ld	a2,80(sp)
    8001460e:	95b2                	add	a1,a1,a2
    80014610:	49d4                	lw	a3,20(a1)

0000000080014612 <.LBB7_23>:
    80014612:	00018597          	auipc	a1,0x18
    80014616:	9ee58593          	addi	a1,a1,-1554 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8001461a:	0928                	addi	a0,sp,152
    8001461c:	6662                	ld	a2,24(sp)
    8001461e:	fffed097          	auipc	ra,0xfffed
    80014622:	1e0080e7          	jalr	480(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    80014626:	a009                	j	80014628 <.LBB7_23+0x16>
    80014628:	0928                	addi	a0,sp,152
                    cache_buf.raw_data(),
    8001462a:	fffed097          	auipc	ra,0xfffed
    8001462e:	330080e7          	jalr	816(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    80014632:	e42a                	sd	a0,8(sp)
    80014634:	a009                	j	80014636 <.LBB7_23+0x24>
    80014636:	1888                	addi	a0,sp,112
                    log_buf.raw_data_mut(),
    80014638:	fffed097          	auipc	ra,0xfffed
    8001463c:	366080e7          	jalr	870(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    80014640:	e02a                	sd	a0,0(sp)
    80014642:	a009                	j	80014644 <.LBB7_23+0x32>
    80014644:	4605                	li	a2,1
                ptr::copy(
    80014646:	6522                	ld	a0,8(sp)
    80014648:	6582                	ld	a1,0(sp)
    8001464a:	ffff1097          	auipc	ra,0xffff1
    8001464e:	588080e7          	jalr	1416(ra) # 80005bd2 <_ZN4core10intrinsics4copy17h82ffe9525b0a7e13E>
    80014652:	a009                	j	80014654 <.LBB7_23+0x42>
    80014654:	1888                	addi	a0,sp,112
            log_buf.bwrite();
    80014656:	fffed097          	auipc	ra,0xfffed
    8001465a:	2de080e7          	jalr	734(ra) # 80001934 <_ZN6kernel2fs3bio3Buf6bwrite17he92a25be232d779bE>
    8001465e:	a009                	j	80014660 <.LBB7_23+0x4e>
            drop(cache_buf);
    80014660:	756a                	ld	a0,184(sp)
    80014662:	f1aa                	sd	a0,224(sp)
    80014664:	754a                	ld	a0,176(sp)
    80014666:	edaa                	sd	a0,216(sp)
    80014668:	752a                	ld	a0,168(sp)
    8001466a:	e9aa                	sd	a0,208(sp)
    8001466c:	750a                	ld	a0,160(sp)
    8001466e:	e5aa                	sd	a0,200(sp)
    80014670:	656a                	ld	a0,152(sp)
    80014672:	e1aa                	sd	a0,192(sp)
    80014674:	0188                	addi	a0,sp,192
    80014676:	ffff9097          	auipc	ra,0xffff9
    8001467a:	31c080e7          	jalr	796(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001467e:	a009                	j	80014680 <.LBB7_23+0x6e>
            drop(log_buf);
    80014680:	654a                	ld	a0,144(sp)
    80014682:	e62a                	sd	a0,264(sp)
    80014684:	652a                	ld	a0,136(sp)
    80014686:	e22a                	sd	a0,256(sp)
    80014688:	650a                	ld	a0,128(sp)
    8001468a:	fdaa                	sd	a0,248(sp)
    8001468c:	7566                	ld	a0,120(sp)
    8001468e:	f9aa                	sd	a0,240(sp)
    80014690:	7546                	ld	a0,112(sp)
    80014692:	f5aa                	sd	a0,232(sp)
    80014694:	11a8                	addi	a0,sp,232
    80014696:	ffff9097          	auipc	ra,0xffff9
    8001469a:	2fc080e7          	jalr	764(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001469e:	a009                	j	800146a0 <.LBB7_23+0x8e>
        for i in 0..self.lh.len {
    800146a0:	b5e1                	j	80014568 <_ZN6kernel2fs3log3Log9write_log17h17107404810b5a24E+0x2a>

00000000800146a2 <.LBB7_24>:
            let mut log_buf  = BCACHE.bread(self.dev, self.start+1+i);
    800146a2:	00013517          	auipc	a0,0x13
    800146a6:	f4e50513          	addi	a0,a0,-178 # 800275f0 <str.1>

00000000800146aa <.LBB7_25>:
    800146aa:	00013617          	auipc	a2,0x13
    800146ae:	fce60613          	addi	a2,a2,-50 # 80027678 <.L__unnamed_16>
    800146b2:	45f1                	li	a1,28
    800146b4:	0000c097          	auipc	ra,0xc
    800146b8:	616080e7          	jalr	1558(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800146be <.LBB7_26>:
    800146be:	00013517          	auipc	a0,0x13
    800146c2:	f3250513          	addi	a0,a0,-206 # 800275f0 <str.1>

00000000800146c6 <.LBB7_27>:
    800146c6:	00013617          	auipc	a2,0x13
    800146ca:	fb260613          	addi	a2,a2,-78 # 80027678 <.L__unnamed_16>
    800146ce:	45f1                	li	a1,28
    800146d0:	0000c097          	auipc	ra,0xc
    800146d4:	5fa080e7          	jalr	1530(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800146da <.LBB7_28>:
            let cache_buf = BCACHE.bread(self.dev, self.lh.blocknos[i as usize]);
    800146da:	00013617          	auipc	a2,0x13
    800146de:	fb660613          	addi	a2,a2,-74 # 80027690 <.L__unnamed_17>
    800146e2:	45f5                	li	a1,29
    800146e4:	6542                	ld	a0,16(sp)
    800146e6:	0000c097          	auipc	ra,0xc
    800146ea:	610080e7          	jalr	1552(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel9interrupt4trap14trap_init_hart17hfcceac4be0103e66E:

00000000800146f0 <_ZN6kernel9interrupt4trap14trap_init_hart17hfcceac4be0103e66E>:
use super::*;

pub static mut TICKS_LOCK:Spinlock<usize> = Spinlock::new(0, "time");

/// Set up to take exceptions and traps while in the kernel.
pub unsafe fn trap_init_hart() {
    800146f0:	1141                	addi	sp,sp,-16
    extern "C" {
        fn kernelvec();
    }
    stvec::write(kernelvec as usize);
    800146f2:	e406                	sd	ra,8(sp)

00000000800146f4 <.LBB0_2>:
    800146f4:	fffec517          	auipc	a0,0xfffec
    800146f8:	92c50513          	addi	a0,a0,-1748 # 80000020 <kernelvec>
    800146fc:	00005097          	auipc	ra,0x5
    80014700:	bbe080e7          	jalr	-1090(ra) # 800192ba <_ZN6kernel8register5stvec5write17hf101ca0070f95693E>
    80014704:	a009                	j	80014706 <.LBB0_2+0x12>
}
    80014706:	60a2                	ld	ra,8(sp)
    80014708:	0141                	addi	sp,sp,16
    8001470a:	8082                	ret

Disassembly of section .text.usertrap:

000000008001470c <usertrap>:


/// handle an interrupt, exception, or system call from user space.
/// called from trampoline.S
#[no_mangle]
pub unsafe fn usertrap() {
    8001470c:	df010113          	addi	sp,sp,-528
    // println!("[Debug] 用户态陷入内核");
    let sepc = sepc::read();
    80014710:	20113423          	sd	ra,520(sp)
    80014714:	ffff1097          	auipc	ra,0xffff1
    80014718:	500080e7          	jalr	1280(ra) # 80005c14 <_ZN6kernel8register4sepc4read17h72f396ba007db608E>
    8001471c:	e5aa                	sd	a0,200(sp)
    8001471e:	a009                	j	80014720 <usertrap+0x14>
    let scause = Scause::new(scause::read());
    80014720:	ffffc097          	auipc	ra,0xffffc
    80014724:	6d2080e7          	jalr	1746(ra) # 80010df2 <_ZN6kernel8register6scause4read17h2a44a33e28e010e0E>
    80014728:	e1aa                	sd	a0,192(sp)
    8001472a:	a009                	j	8001472c <usertrap+0x20>
    8001472c:	650e                	ld	a0,192(sp)
    8001472e:	ffffd097          	auipc	ra,0xffffd
    80014732:	83c080e7          	jalr	-1988(ra) # 80010f6a <_ZN6kernel8register6scause6Scause3new17h2dfdd0e7e1fd63beE>
    80014736:	e9aa                	sd	a0,208(sp)
    80014738:	a009                	j	8001473a <usertrap+0x2e>

    if !sstatus::is_from_user() {
    8001473a:	00001097          	auipc	ra,0x1
    8001473e:	b58080e7          	jalr	-1192(ra) # 80015292 <_ZN6kernel8register7sstatus12is_from_user17hc7a29469c32af84bE>
    80014742:	fd2a                	sd	a0,184(sp)
    80014744:	a009                	j	80014746 <usertrap+0x3a>
    80014746:	756a                	ld	a0,184(sp)
    80014748:	e105                	bnez	a0,80014768 <.LBB1_75>
    8001474a:	a009                	j	8001474c <.LBB1_73>

000000008001474c <.LBB1_73>:
        panic!("usertrap(): not from user mode");
    8001474c:	00013517          	auipc	a0,0x13
    80014750:	f5c50513          	addi	a0,a0,-164 # 800276a8 <.L__unnamed_1>

0000000080014754 <.LBB1_74>:
    80014754:	00013617          	auipc	a2,0x13
    80014758:	f8c60613          	addi	a2,a2,-116 # 800276e0 <.L__unnamed_2>
    8001475c:	45f9                	li	a1,30
    8001475e:	0000c097          	auipc	ra,0xc
    80014762:	56c080e7          	jalr	1388(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080014768 <.LBB1_75>:
    // send interrupts and exceptions to kerneltrap(),
    // since we're now in the kernel.
    extern "C" {
        fn kernelvec();
    }
    stvec::write(kernelvec as usize);
    80014768:	fffec517          	auipc	a0,0xfffec
    8001476c:	8b850513          	addi	a0,a0,-1864 # 80000020 <kernelvec>
    80014770:	00005097          	auipc	ra,0x5
    80014774:	b4a080e7          	jalr	-1206(ra) # 800192ba <_ZN6kernel8register5stvec5write17hf101ca0070f95693E>
    80014778:	a009                	j	8001477a <.LBB1_76>

000000008001477a <.LBB1_76>:

    let my_proc = CPU_MANAGER.myproc().unwrap();
    8001477a:	0005b517          	auipc	a0,0x5b
    8001477e:	88650513          	addi	a0,a0,-1914 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80014782:	00009097          	auipc	ra,0x9
    80014786:	fb6080e7          	jalr	-74(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8001478a:	f92a                	sd	a0,176(sp)
    8001478c:	a009                	j	8001478e <.LBB1_77>

000000008001478e <.LBB1_77>:
    8001478e:	00013597          	auipc	a1,0x13
    80014792:	f6a58593          	addi	a1,a1,-150 # 800276f8 <.L__unnamed_3>
    80014796:	754a                	ld	a0,176(sp)
    80014798:	00004097          	auipc	ra,0x4
    8001479c:	3d0080e7          	jalr	976(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    800147a0:	85aa                	mv	a1,a0
    800147a2:	e7aa                	sd	a0,456(sp)
    800147a4:	f52e                	sd	a1,168(sp)
    800147a6:	a009                	j	800147a8 <.LBB1_77+0x1a>
    let pdata = my_proc.data.get_mut();
    800147a8:	752a                	ld	a0,168(sp)
    800147aa:	04050513          	addi	a0,a0,64
    800147ae:	00002097          	auipc	ra,0x2
    800147b2:	21c080e7          	jalr	540(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    800147b6:	85aa                	mv	a1,a0
    800147b8:	ebaa                	sd	a0,464(sp)
    800147ba:	f12e                	sd	a1,160(sp)
    800147bc:	a009                	j	800147be <.LBB1_77+0x30>

    let tf = &mut *pdata.trapframe;
    800147be:	750a                	ld	a0,160(sp)
    800147c0:	6d0c                	ld	a1,24(a0)
    800147c2:	efae                	sd	a1,472(sp)
    tf.epc = sepc;
    800147c4:	662e                	ld	a2,200(sp)
    800147c6:	ed90                	sd	a2,24(a1)
    800147c8:	0988                	addi	a0,sp,208

    match scause.cause() {
    800147ca:	ed2e                	sd	a1,152(sp)
    800147cc:	ffffd097          	auipc	ra,0xffffd
    800147d0:	84e080e7          	jalr	-1970(ra) # 8001101a <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE>
    800147d4:	0ca10c23          	sb	a0,216(sp)
    800147d8:	0cb10ca3          	sb	a1,217(sp)
    800147dc:	a009                	j	800147de <.LBB1_77+0x50>
        Trap::Exception(Exception::UserEnvCall) => {
    800147de:	0d814503          	lbu	a0,216(sp)
    800147e2:	00157593          	andi	a1,a0,1
    800147e6:	4601                	li	a2,0
    800147e8:	e92a                	sd	a0,144(sp)
    800147ea:	00c58863          	beq	a1,a2,800147fa <.LBB1_77+0x6c>
    800147ee:	a009                	j	800147f0 <.LBB1_77+0x62>
    800147f0:	4505                	li	a0,1
    800147f2:	65ca                	ld	a1,144(sp)
    800147f4:	02a58963          	beq	a1,a0,80014826 <.LBB1_77+0x98>
    800147f8:	a829                	j	80014812 <.LBB1_77+0x84>
            sstatus::intr_on();
            handle_syscall();
        },

        // Device interrupt
        Trap::Interrupt(Interrupt::SupervisorExternal) => {
    800147fa:	0d914503          	lbu	a0,217(sp)
    800147fe:	4585                	li	a1,1
    80014800:	e52a                	sd	a0,136(sp)
    80014802:	12b50a63          	beq	a0,a1,80014936 <.LBB1_81+0x24>
    80014806:	a009                	j	80014808 <.LBB1_77+0x7a>
    80014808:	4515                	li	a0,5
    8001480a:	65aa                	ld	a1,136(sp)
    8001480c:	06a58a63          	beq	a1,a0,80014880 <.LBB1_77+0xf2>
    80014810:	a009                	j	80014812 <.LBB1_77+0x84>
    80014812:	0988                	addi	a0,sp,208
            // yield up the CPU if this is a timer interrupt
            my_proc.yielding();
        },

        _ => {
            println!("usertrap: unexpected scacuse: {:?}\n pid: {}", scause.cause(), my_proc.pid());
    80014814:	ffffd097          	auipc	ra,0xffffd
    80014818:	806080e7          	jalr	-2042(ra) # 8001101a <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE>
    8001481c:	14a10823          	sb	a0,336(sp)
    80014820:	14b108a3          	sb	a1,337(sp)
    80014824:	aaad                	j	8001499e <.LBB1_81+0x8c>
        Trap::Exception(Exception::UserEnvCall) => {
    80014826:	0d914503          	lbu	a0,217(sp)
    8001482a:	459d                	li	a1,7
    8001482c:	feb513e3          	bne	a0,a1,80014812 <.LBB1_77+0x84>
    80014830:	a009                	j	80014832 <.LBB1_77+0xa4>
            if my_proc.killed() {
    80014832:	752a                	ld	a0,168(sp)
    80014834:	ffffe097          	auipc	ra,0xffffe
    80014838:	9e0080e7          	jalr	-1568(ra) # 80012214 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E>
    8001483c:	e12a                	sd	a0,128(sp)
    8001483e:	a009                	j	80014840 <.LBB1_77+0xb2>
    80014840:	4501                	li	a0,0
    80014842:	658a                	ld	a1,128(sp)
    80014844:	00a58b63          	beq	a1,a0,8001485a <.LBB1_77+0xcc>
    80014848:	a009                	j	8001484a <.LBB1_77+0xbc>
    8001484a:	4505                	li	a0,1
    8001484c:	1502                	slli	a0,a0,0x20
    8001484e:	157d                	addi	a0,a0,-1
                exit(-1);
    80014850:	fffef097          	auipc	ra,0xfffef
    80014854:	24a080e7          	jalr	586(ra) # 80003a9a <_ZN6kernel7process4exit17hb536ee8020d4475cE>
    80014858:	a011                	j	8001485c <.LBB1_77+0xce>
            if my_proc.killed() {
    8001485a:	a011                	j	8001485e <.LBB1_77+0xd0>
    8001485c:	a009                	j	8001485e <.LBB1_77+0xd0>
            tf.update_epc();
    8001485e:	656a                	ld	a0,152(sp)
    80014860:	ffffd097          	auipc	ra,0xffffd
    80014864:	db0080e7          	jalr	-592(ra) # 80011610 <_ZN6kernel7process9trapframe9Trapframe10update_epc17hddaa67be0fb9ce91E>
    80014868:	a009                	j	8001486a <.LBB1_77+0xdc>
            sstatus::intr_on();
    8001486a:	00001097          	auipc	ra,0x1
    8001486e:	a48080e7          	jalr	-1464(ra) # 800152b2 <_ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE>
    80014872:	a009                	j	80014874 <.LBB1_77+0xe6>
            handle_syscall();
    80014874:	ffff5097          	auipc	ra,0xffff5
    80014878:	03a080e7          	jalr	58(ra) # 800098ae <handle_syscall>
    8001487c:	a009                	j	8001487e <.LBB1_77+0xf0>
    match scause.cause() {
    8001487e:	ac0d                	j	80014ab0 <.LBB1_87+0x36>
            if let Some(interrupt) = plic_claim() {
    80014880:	ffff8097          	auipc	ra,0xffff8
    80014884:	8c2080e7          	jalr	-1854(ra) # 8000c142 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E>
    80014888:	d1aa                	sw	a0,224(sp)
    8001488a:	d3ae                	sw	a1,228(sp)
    8001488c:	a009                	j	8001488e <.LBB1_77+0x100>
    8001488e:	550e                	lw	a0,224(sp)
    80014890:	4585                	li	a1,1
    80014892:	00b50463          	beq	a0,a1,8001489a <.LBB1_77+0x10c>
    80014896:	a009                	j	80014898 <.LBB1_77+0x10a>
    80014898:	a871                	j	80014934 <.LBB1_81+0x22>
    8001489a:	551e                	lw	a0,228(sp)
    8001489c:	02051593          	slli	a1,a0,0x20
    800148a0:	9181                	srli	a1,a1,0x20
    800148a2:	20a12223          	sw	a0,516(sp)
    800148a6:	4605                	li	a2,1
                    VIRTIO0_IRQ => {
    800148a8:	fcae                	sd	a1,120(sp)
    800148aa:	02c50663          	beq	a0,a2,800148d6 <.LBB1_80>
    800148ae:	a009                	j	800148b0 <.LBB1_77+0x122>
    800148b0:	4529                	li	a0,10
    800148b2:	75e6                	ld	a1,120(sp)
    800148b4:	04a58f63          	beq	a1,a0,80014912 <.LBB1_81>
    800148b8:	a009                	j	800148ba <.LBB1_78>

00000000800148ba <.LBB1_78>:
                        panic!("Unresolved interrupt");
    800148ba:	00013517          	auipc	a0,0x13
    800148be:	eee50513          	addi	a0,a0,-274 # 800277a8 <.L__unnamed_4>

00000000800148c2 <.LBB1_79>:
    800148c2:	00013617          	auipc	a2,0x13
    800148c6:	efe60613          	addi	a2,a2,-258 # 800277c0 <.L__unnamed_5>
    800148ca:	45d1                	li	a1,20
    800148cc:	0000c097          	auipc	ra,0xc
    800148d0:	3fe080e7          	jalr	1022(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800148d6 <.LBB1_80>:
                        DISK.acquire().intr();
    800148d6:	00041517          	auipc	a0,0x41
    800148da:	72a50513          	addi	a0,a0,1834 # 80056000 <_ZN6kernel6driver11virtio_disk4DISK17h48d93f2a1d70ec15E>
    800148de:	fffee097          	auipc	ra,0xfffee
    800148e2:	d48080e7          	jalr	-696(ra) # 80002626 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE>
    800148e6:	f5aa                	sd	a0,232(sp)
    800148e8:	a009                	j	800148ea <.LBB1_80+0x14>
    800148ea:	11a8                	addi	a0,sp,232
    800148ec:	fffef097          	auipc	ra,0xfffef
    800148f0:	18e080e7          	jalr	398(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    800148f4:	f8aa                	sd	a0,112(sp)
    800148f6:	a009                	j	800148f8 <.LBB1_80+0x22>
    800148f8:	7546                	ld	a0,112(sp)
    800148fa:	ffffa097          	auipc	ra,0xffffa
    800148fe:	ea0080e7          	jalr	-352(ra) # 8000e79a <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E>
    80014902:	a009                	j	80014904 <.LBB1_80+0x2e>
    80014904:	11a8                	addi	a0,sp,232
    80014906:	ffff2097          	auipc	ra,0xffff2
    8001490a:	17c080e7          	jalr	380(ra) # 80006a82 <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..driver..virtio_disk..Disk$GT$$GT$17h3a869af89cb88c7dE>
    8001490e:	a009                	j	80014910 <.LBB1_80+0x3a>
                match interrupt {
    80014910:	a819                	j	80014926 <.LBB1_81+0x14>

0000000080014912 <.LBB1_81>:
                        UART.intr();
    80014912:	00021517          	auipc	a0,0x21
    80014916:	52650513          	addi	a0,a0,1318 # 80035e38 <_ZN6kernel7console4uart4UART17hc32d6c0da573df73E>
    8001491a:	00002097          	auipc	ra,0x2
    8001491e:	58c080e7          	jalr	1420(ra) # 80016ea6 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE>
    80014922:	a009                	j	80014924 <.LBB1_81+0x12>
                match interrupt {
    80014924:	a009                	j	80014926 <.LBB1_81+0x14>
                plic_complete(interrupt);
    80014926:	7566                	ld	a0,120(sp)
    80014928:	ffff8097          	auipc	ra,0xffff8
    8001492c:	878080e7          	jalr	-1928(ra) # 8000c1a0 <_ZN6kernel6driver4plic13plic_complete17hda6f35daf280a4e7E>
    80014930:	a009                	j	80014932 <.LBB1_81+0x20>
            if let Some(interrupt) = plic_claim() {
    80014932:	a009                	j	80014934 <.LBB1_81+0x22>
    match scause.cause() {
    80014934:	aab5                	j	80014ab0 <.LBB1_87+0x36>
            if cpu::cpuid() == 0{
    80014936:	00009097          	auipc	ra,0x9
    8001493a:	d9a080e7          	jalr	-614(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8001493e:	f4aa                	sd	a0,104(sp)
    80014940:	a009                	j	80014942 <.LBB1_81+0x30>
    80014942:	4501                	li	a0,0
    80014944:	75a6                	ld	a1,104(sp)
    80014946:	00a59863          	bne	a1,a0,80014956 <.LBB1_81+0x44>
    8001494a:	a009                	j	8001494c <.LBB1_81+0x3a>
                clock_intr();
    8001494c:	00001097          	auipc	ra,0x1
    80014950:	896080e7          	jalr	-1898(ra) # 800151e2 <_ZN6kernel9interrupt4trap10clock_intr17heea1ba55d8a6041fE>
    80014954:	a011                	j	80014958 <.LBB1_81+0x46>
            if cpu::cpuid() == 0{
    80014956:	a011                	j	8001495a <.LBB1_81+0x48>
    80014958:	a009                	j	8001495a <.LBB1_81+0x48>
            sip::clear_ssip();
    8001495a:	ffff9097          	auipc	ra,0xffff9
    8001495e:	eb0080e7          	jalr	-336(ra) # 8000d80a <_ZN6kernel8register3sip10clear_ssip17hb6becdc966d2cc13E>
    80014962:	a009                	j	80014964 <.LBB1_81+0x52>
            if my_proc.killed() {
    80014964:	752a                	ld	a0,168(sp)
    80014966:	ffffe097          	auipc	ra,0xffffe
    8001496a:	8ae080e7          	jalr	-1874(ra) # 80012214 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E>
    8001496e:	f0aa                	sd	a0,96(sp)
    80014970:	a009                	j	80014972 <.LBB1_81+0x60>
    80014972:	4501                	li	a0,0
    80014974:	7586                	ld	a1,96(sp)
    80014976:	00a58b63          	beq	a1,a0,8001498c <.LBB1_81+0x7a>
    8001497a:	a009                	j	8001497c <.LBB1_81+0x6a>
    8001497c:	4505                	li	a0,1
    8001497e:	1502                	slli	a0,a0,0x20
    80014980:	157d                	addi	a0,a0,-1
                exit(-1);
    80014982:	fffef097          	auipc	ra,0xfffef
    80014986:	118080e7          	jalr	280(ra) # 80003a9a <_ZN6kernel7process4exit17hb536ee8020d4475cE>
    8001498a:	a011                	j	8001498e <.LBB1_81+0x7c>
            if my_proc.killed() {
    8001498c:	a011                	j	80014990 <.LBB1_81+0x7e>
    8001498e:	a009                	j	80014990 <.LBB1_81+0x7e>
            my_proc.yielding();
    80014990:	752a                	ld	a0,168(sp)
    80014992:	ffffe097          	auipc	ra,0xffffe
    80014996:	cd4080e7          	jalr	-812(ra) # 80012666 <_ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E>
    8001499a:	a009                	j	8001499c <.LBB1_81+0x8a>
    match scause.cause() {
    8001499c:	aa11                	j	80014ab0 <.LBB1_87+0x36>
            println!("usertrap: unexpected scacuse: {:?}\n pid: {}", scause.cause(), my_proc.pid());
    8001499e:	752a                	ld	a0,168(sp)
    800149a0:	ffffe097          	auipc	ra,0xffffe
    800149a4:	8b6080e7          	jalr	-1866(ra) # 80012256 <_ZN6kernel7process7process7Process3pid17hdf41eeabecdb1516E>
    800149a8:	eeaa                	sd	a0,344(sp)
    800149aa:	a009                	j	800149ac <.LBB1_81+0x9a>
    800149ac:	0a88                	addi	a0,sp,336
    800149ae:	e2aa                	sd	a0,320(sp)
    800149b0:	0aac                	addi	a1,sp,344
    800149b2:	e6ae                	sd	a1,328(sp)
    800149b4:	f3aa                	sd	a0,480(sp)
    800149b6:	f7ae                	sd	a1,488(sp)

00000000800149b8 <.LBB1_82>:
    800149b8:	ffffc617          	auipc	a2,0xffffc
    800149bc:	76260613          	addi	a2,a2,1890 # 8001111a <_ZN67_$LT$kernel..register..scause..Trap$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4d2d90fa04f702E>
    800149c0:	ecae                	sd	a1,88(sp)
    800149c2:	85b2                	mv	a1,a2
    800149c4:	ffff3097          	auipc	ra,0xffff3
    800149c8:	450080e7          	jalr	1104(ra) # 80007e14 <_ZN4core3fmt10ArgumentV13new17h8cb3450fede3818dE>
    800149cc:	e8aa                	sd	a0,80(sp)
    800149ce:	e4ae                	sd	a1,72(sp)
    800149d0:	a009                	j	800149d2 <.LBB1_83>

00000000800149d2 <.LBB1_83>:
    800149d2:	0000e597          	auipc	a1,0xe
    800149d6:	66058593          	addi	a1,a1,1632 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    800149da:	6566                	ld	a0,88(sp)
    800149dc:	0000b097          	auipc	ra,0xb
    800149e0:	03e080e7          	jalr	62(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    800149e4:	e0aa                	sd	a0,64(sp)
    800149e6:	fc2e                	sd	a1,56(sp)
    800149e8:	a009                	j	800149ea <.LBB1_83+0x18>
    800149ea:	6546                	ld	a0,80(sp)
    800149ec:	f22a                	sd	a0,288(sp)
    800149ee:	65a6                	ld	a1,72(sp)
    800149f0:	f62e                	sd	a1,296(sp)
    800149f2:	6606                	ld	a2,64(sp)
    800149f4:	fa32                	sd	a2,304(sp)
    800149f6:	76e2                	ld	a3,56(sp)
    800149f8:	fe36                	sd	a3,312(sp)

00000000800149fa <.LBB1_84>:
    800149fa:	00013597          	auipc	a1,0x13
    800149fe:	d3e58593          	addi	a1,a1,-706 # 80027738 <.L__unnamed_6>
    80014a02:	1988                	addi	a0,sp,240
    80014a04:	460d                	li	a2,3
    80014a06:	1214                	addi	a3,sp,288
    80014a08:	4709                	li	a4,2
    80014a0a:	ffff1097          	auipc	ra,0xffff1
    80014a0e:	d1a080e7          	jalr	-742(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014a12:	a009                	j	80014a14 <.LBB1_84+0x1a>
    80014a14:	1988                	addi	a0,sp,240
    80014a16:	ffffc097          	auipc	ra,0xffffc
    80014a1a:	2da080e7          	jalr	730(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80014a1e:	a009                	j	80014a20 <.LBB1_84+0x26>
            println!("sepc: 0x{:x}, stval: 0x{:x}", sepc, stval::read());
    80014a20:	ffff3097          	auipc	ra,0xffff3
    80014a24:	f5e080e7          	jalr	-162(ra) # 8000797e <_ZN6kernel8register5stval4read17h20f8eee1779dac39E>
    80014a28:	e3aa                	sd	a0,448(sp)
    80014a2a:	a009                	j	80014a2c <.LBB1_84+0x32>
    80014a2c:	01a8                	addi	a0,sp,200
    80014a2e:	fb2a                	sd	a0,432(sp)
    80014a30:	038c                	addi	a1,sp,448
    80014a32:	ff2e                	sd	a1,440(sp)
    80014a34:	fbaa                	sd	a0,496(sp)
    80014a36:	ffae                	sd	a1,504(sp)

0000000080014a38 <.LBB1_85>:
    80014a38:	0000e617          	auipc	a2,0xe
    80014a3c:	26e60613          	addi	a2,a2,622 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80014a40:	f82e                	sd	a1,48(sp)
    80014a42:	85b2                	mv	a1,a2
    80014a44:	0000b097          	auipc	ra,0xb
    80014a48:	fd6080e7          	jalr	-42(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80014a4c:	f42a                	sd	a0,40(sp)
    80014a4e:	f02e                	sd	a1,32(sp)
    80014a50:	a009                	j	80014a52 <.LBB1_86>

0000000080014a52 <.LBB1_86>:
    80014a52:	0000e597          	auipc	a1,0xe
    80014a56:	25458593          	addi	a1,a1,596 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80014a5a:	7542                	ld	a0,48(sp)
    80014a5c:	0000b097          	auipc	ra,0xb
    80014a60:	fbe080e7          	jalr	-66(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80014a64:	ec2a                	sd	a0,24(sp)
    80014a66:	e82e                	sd	a1,16(sp)
    80014a68:	a009                	j	80014a6a <.LBB1_86+0x18>
    80014a6a:	7522                	ld	a0,40(sp)
    80014a6c:	eb2a                	sd	a0,400(sp)
    80014a6e:	7582                	ld	a1,32(sp)
    80014a70:	ef2e                	sd	a1,408(sp)
    80014a72:	6662                	ld	a2,24(sp)
    80014a74:	f332                	sd	a2,416(sp)
    80014a76:	66c2                	ld	a3,16(sp)
    80014a78:	f736                	sd	a3,424(sp)

0000000080014a7a <.LBB1_87>:
    80014a7a:	00013597          	auipc	a1,0x13
    80014a7e:	cfe58593          	addi	a1,a1,-770 # 80027778 <.L__unnamed_7>
    80014a82:	1288                	addi	a0,sp,352
    80014a84:	460d                	li	a2,3
    80014a86:	0b14                	addi	a3,sp,400
    80014a88:	4709                	li	a4,2
    80014a8a:	ffff1097          	auipc	ra,0xffff1
    80014a8e:	c9a080e7          	jalr	-870(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014a92:	a009                	j	80014a94 <.LBB1_87+0x1a>
    80014a94:	1288                	addi	a0,sp,352
    80014a96:	ffffc097          	auipc	ra,0xffffc
    80014a9a:	25a080e7          	jalr	602(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80014a9e:	a009                	j	80014aa0 <.LBB1_87+0x26>
    80014aa0:	4585                	li	a1,1
            my_proc.modify_kill(true);
    80014aa2:	752a                	ld	a0,168(sp)
    80014aa4:	ffffe097          	auipc	ra,0xffffe
    80014aa8:	87c080e7          	jalr	-1924(ra) # 80012320 <_ZN6kernel7process7process7Process11modify_kill17h4f8b34885f798bc3E>
    80014aac:	a009                	j	80014aae <.LBB1_87+0x34>
    match scause.cause() {
    80014aae:	a009                	j	80014ab0 <.LBB1_87+0x36>
        }

    }

    if my_proc.killed() {
    80014ab0:	752a                	ld	a0,168(sp)
    80014ab2:	ffffd097          	auipc	ra,0xffffd
    80014ab6:	762080e7          	jalr	1890(ra) # 80012214 <_ZN6kernel7process7process7Process6killed17h29c4dd505c2d1346E>
    80014aba:	e42a                	sd	a0,8(sp)
    80014abc:	a009                	j	80014abe <.LBB1_87+0x44>
    80014abe:	4501                	li	a0,0
    80014ac0:	65a2                	ld	a1,8(sp)
    80014ac2:	00a58b63          	beq	a1,a0,80014ad8 <.LBB1_87+0x5e>
    80014ac6:	a009                	j	80014ac8 <.LBB1_87+0x4e>
    80014ac8:	4505                	li	a0,1
    80014aca:	1502                	slli	a0,a0,0x20
    80014acc:	157d                	addi	a0,a0,-1
        exit(-1);
    80014ace:	fffef097          	auipc	ra,0xfffef
    80014ad2:	fcc080e7          	jalr	-52(ra) # 80003a9a <_ZN6kernel7process4exit17hb536ee8020d4475cE>
    80014ad6:	a011                	j	80014ada <.LBB1_87+0x60>
    if my_proc.killed() {
    80014ad8:	a011                	j	80014adc <.LBB1_87+0x62>
    80014ada:	a009                	j	80014adc <.LBB1_87+0x62>
    }
    
    usertrap_ret();
    80014adc:	00000097          	auipc	ra,0x0
    80014ae0:	00a080e7          	jalr	10(ra) # 80014ae6 <usertrap_ret>
	...

Disassembly of section .text.usertrap_ret:

0000000080014ae6 <usertrap_ret>:
}


/// return to user space
#[no_mangle]
pub unsafe fn usertrap_ret() -> ! {
    80014ae6:	7171                	addi	sp,sp,-176
        fn trampoline();
        fn userret();
        fn etext();
    }

    let my_proc = CPU_MANAGER.myproc().unwrap();
    80014ae8:	f506                	sd	ra,168(sp)

0000000080014aea <.LBB2_24>:
    80014aea:	0005a517          	auipc	a0,0x5a
    80014aee:	51650513          	addi	a0,a0,1302 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80014af2:	00009097          	auipc	ra,0x9
    80014af6:	c46080e7          	jalr	-954(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    80014afa:	f4aa                	sd	a0,104(sp)
    80014afc:	a009                	j	80014afe <.LBB2_25>

0000000080014afe <.LBB2_25>:
    80014afe:	00013597          	auipc	a1,0x13
    80014b02:	cda58593          	addi	a1,a1,-806 # 800277d8 <.L__unnamed_8>
    80014b06:	7526                	ld	a0,104(sp)
    80014b08:	00004097          	auipc	ra,0x4
    80014b0c:	060080e7          	jalr	96(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    80014b10:	85aa                	mv	a1,a0
    80014b12:	fcaa                	sd	a0,120(sp)
    80014b14:	f0ae                	sd	a1,96(sp)
    80014b16:	a009                	j	80014b18 <.LBB2_25+0x1a>

    // we're about to switch the destination of traps from
    // kerneltrap() to usertrap(), so turn off interrupts until
    // we're back in user space, where usertrap() is correct.
    sstatus::intr_off();
    80014b18:	00000097          	auipc	ra,0x0
    80014b1c:	7c0080e7          	jalr	1984(ra) # 800152d8 <_ZN6kernel8register7sstatus8intr_off17h9574962c04e4d2b2E>
    80014b20:	a009                	j	80014b22 <.LBB2_26>

0000000080014b22 <.LBB2_26>:

    // send syscalls, interrupts, and exceptions to trampoline.S
    stvec::write(TRAMPOLINE + (uservec as usize - trampoline as usize));
    80014b22:	fffec517          	auipc	a0,0xfffec
    80014b26:	4de50513          	addi	a0,a0,1246 # 80001000 <trampoline>

0000000080014b2a <.LBB2_27>:
    80014b2a:	fffec597          	auipc	a1,0xfffec
    80014b2e:	4d658593          	addi	a1,a1,1238 # 80001000 <trampoline>
    80014b32:	40a58533          	sub	a0,a1,a0
    80014b36:	ecaa                	sd	a0,88(sp)
    80014b38:	10a5ec63          	bltu	a1,a0,80014c50 <.LBB2_31>
    80014b3c:	a009                	j	80014b3e <.LBB2_27+0x14>
    80014b3e:	04000537          	lui	a0,0x4000
    80014b42:	357d                	addiw	a0,a0,-1
    80014b44:	0532                	slli	a0,a0,0xc
    80014b46:	65e6                	ld	a1,88(sp)
    80014b48:	952e                	add	a0,a0,a1
    80014b4a:	e8aa                	sd	a0,80(sp)
    80014b4c:	12b56163          	bltu	a0,a1,80014c6e <.LBB2_33>
    80014b50:	a009                	j	80014b52 <.LBB2_27+0x28>
    80014b52:	6546                	ld	a0,80(sp)
    80014b54:	00004097          	auipc	ra,0x4
    80014b58:	766080e7          	jalr	1894(ra) # 800192ba <_ZN6kernel8register5stvec5write17hf101ca0070f95693E>
    80014b5c:	a009                	j	80014b5e <.LBB2_27+0x34>

    // set up trapframe values that uservec will need when
    // the process next re-enters the kernel.
    let pdata = my_proc.data.get_mut();
    80014b5e:	7506                	ld	a0,96(sp)
    80014b60:	04050513          	addi	a0,a0,64 # 4000040 <.Lline_table_start0+0x3fc7cf9>
    80014b64:	00002097          	auipc	ra,0x2
    80014b68:	e66080e7          	jalr	-410(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    80014b6c:	85aa                	mv	a1,a0
    80014b6e:	e12a                	sd	a0,128(sp)
    80014b70:	e4ae                	sd	a1,72(sp)
    80014b72:	a009                	j	80014b74 <.LBB2_27+0x4a>
    pdata.user_init();
    80014b74:	6526                	ld	a0,72(sp)
    80014b76:	ffffd097          	auipc	ra,0xffffd
    80014b7a:	2b6080e7          	jalr	694(ra) # 80011e2c <_ZN6kernel7process7process8ProcData9user_init17h2a486fbaa5364ccfE>
    80014b7e:	a009                	j	80014b80 <.LBB2_27+0x56>

    // set up the registers that trampoline.S's sret will use
    // to get to user space.
    // Set S Previous Privilege mode to User. 
    let mut sstatus = sstatus::read();
    80014b80:	00000097          	auipc	ra,0x0
    80014b84:	6da080e7          	jalr	1754(ra) # 8001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>
    80014b88:	f8aa                	sd	a0,112(sp)
    80014b8a:	a009                	j	80014b8c <.LBB2_27+0x62>
    sstatus = sstatus::clear_spp(sstatus); // clear SPP to 0 for user mode
    80014b8c:	7546                	ld	a0,112(sp)
    80014b8e:	00000097          	auipc	ra,0x0
    80014b92:	792080e7          	jalr	1938(ra) # 80015320 <_ZN6kernel8register7sstatus9clear_spp17h0b6e769a5c132772E>
    80014b96:	e0aa                	sd	a0,64(sp)
    80014b98:	a009                	j	80014b9a <.LBB2_27+0x70>
    80014b9a:	6506                	ld	a0,64(sp)
    80014b9c:	f8aa                	sd	a0,112(sp)
    sstatus = sstatus::user_intr_on(sstatus); // enable interrupts in user mode
    80014b9e:	00000097          	auipc	ra,0x0
    80014ba2:	78e080e7          	jalr	1934(ra) # 8001532c <_ZN6kernel8register7sstatus12user_intr_on17hb1db780ce7280f1eE>
    80014ba6:	fc2a                	sd	a0,56(sp)
    80014ba8:	a009                	j	80014baa <.LBB2_27+0x80>
    80014baa:	7562                	ld	a0,56(sp)
    80014bac:	f8aa                	sd	a0,112(sp)
    sstatus::write(sstatus);
    80014bae:	00000097          	auipc	ra,0x0
    80014bb2:	6b8080e7          	jalr	1720(ra) # 80015266 <_ZN6kernel8register7sstatus5write17h5425a048a71e3665E>
    80014bb6:	a009                	j	80014bb8 <.LBB2_27+0x8e>

    // set S Exception Program Counter to the saved user pc. 
    sepc::write((*pdata.trapframe).epc);
    80014bb8:	6526                	ld	a0,72(sp)
    80014bba:	6d0c                	ld	a1,24(a0)
    80014bbc:	6d88                	ld	a0,24(a1)
    80014bbe:	ffff1097          	auipc	ra,0xffff1
    80014bc2:	062080e7          	jalr	98(ra) # 80005c20 <_ZN6kernel8register4sepc5write17hb628f5972fcdd7c3E>
    80014bc6:	a009                	j	80014bc8 <.LBB2_27+0x9e>
    
    // tell trampoline.S the user page table to switch to
    let satp = pdata.pagetable.as_ref().unwrap().as_satp();
    80014bc8:	6526                	ld	a0,72(sp)
    80014bca:	0541                	addi	a0,a0,16
    80014bcc:	00004097          	auipc	ra,0x4
    80014bd0:	c94080e7          	jalr	-876(ra) # 80018860 <_ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE>
    80014bd4:	f82a                	sd	a0,48(sp)
    80014bd6:	a009                	j	80014bd8 <.LBB2_28>

0000000080014bd8 <.LBB2_28>:
    80014bd8:	00013597          	auipc	a1,0x13
    80014bdc:	c9858593          	addi	a1,a1,-872 # 80027870 <.L__unnamed_9>
    80014be0:	7542                	ld	a0,48(sp)
    80014be2:	00004097          	auipc	ra,0x4
    80014be6:	f50080e7          	jalr	-176(ra) # 80018b32 <_ZN4core6option15Option$LT$T$GT$6unwrap17h227f9c5c00f6b91eE>
    80014bea:	f42a                	sd	a0,40(sp)
    80014bec:	a009                	j	80014bee <.LBB2_28+0x16>
    80014bee:	7522                	ld	a0,40(sp)
    80014bf0:	6108                	ld	a0,0(a0)
    80014bf2:	ffffa097          	auipc	ra,0xffffa
    80014bf6:	0b6080e7          	jalr	182(ra) # 8000eca8 <_ZN6kernel6memory7mapping10page_table9PageTable7as_satp17h37eb5d19d3a9f0cdE>
    80014bfa:	85aa                	mv	a1,a0
    80014bfc:	e52a                	sd	a0,136(sp)
    80014bfe:	f02e                	sd	a1,32(sp)
    80014c00:	a009                	j	80014c02 <.LBB2_29>

0000000080014c02 <.LBB2_29>:

    // jump to trampoline.S at the top of memory, which
    // switches to the user page table, restores user registers,
    // and switches to user mode with sret. 
    let userret_virt = TRAMPOLINE + (userret as usize - trampoline as usize);
    80014c02:	fffec517          	auipc	a0,0xfffec
    80014c06:	3fe50513          	addi	a0,a0,1022 # 80001000 <trampoline>

0000000080014c0a <.LBB2_30>:
    80014c0a:	fffec597          	auipc	a1,0xfffec
    80014c0e:	49658593          	addi	a1,a1,1174 # 800010a0 <userret>
    80014c12:	40a58533          	sub	a0,a1,a0
    80014c16:	ec2a                	sd	a0,24(sp)
    80014c18:	06a5e963          	bltu	a1,a0,80014c8a <.LBB2_35>
    80014c1c:	a009                	j	80014c1e <.LBB2_30+0x14>
    80014c1e:	04000537          	lui	a0,0x4000
    80014c22:	357d                	addiw	a0,a0,-1
    80014c24:	0532                	slli	a0,a0,0xc
    80014c26:	65e2                	ld	a1,24(sp)
    80014c28:	952e                	add	a0,a0,a1
    80014c2a:	e82a                	sd	a0,16(sp)
    80014c2c:	06b56e63          	bltu	a0,a1,80014ca8 <.LBB2_37>
    80014c30:	a009                	j	80014c32 <.LBB2_30+0x28>
    80014c32:	6542                	ld	a0,16(sp)
    80014c34:	e92a                	sd	a0,144(sp)
    let userret_virt: extern "C" fn(usize, usize) -> ! = 
    core::mem::transmute(userret_virt as usize);
    80014c36:	ed2a                	sd	a0,152(sp)
    80014c38:	65c2                	ld	a1,16(sp)
    80014c3a:	f12e                	sd	a1,160(sp)
    80014c3c:	e42a                	sd	a0,8(sp)
    80014c3e:	a009                	j	80014c40 <.LBB2_30+0x36>
    80014c40:	02000537          	lui	a0,0x2000
    80014c44:	357d                	addiw	a0,a0,-1
    80014c46:	0536                	slli	a0,a0,0xd
    userret_virt(TRAPFRAME, satp);
    80014c48:	7582                	ld	a1,32(sp)
    80014c4a:	6622                	ld	a2,8(sp)
    80014c4c:	9602                	jalr	a2
	...

0000000080014c50 <.LBB2_31>:
    stvec::write(TRAMPOLINE + (uservec as usize - trampoline as usize));
    80014c50:	00013517          	auipc	a0,0x13
    80014c54:	bc050513          	addi	a0,a0,-1088 # 80027810 <str.0>

0000000080014c58 <.LBB2_32>:
    80014c58:	00013617          	auipc	a2,0x13
    80014c5c:	b9860613          	addi	a2,a2,-1128 # 800277f0 <.L__unnamed_10>
    80014c60:	02100593          	li	a1,33
    80014c64:	0000c097          	auipc	ra,0xc
    80014c68:	066080e7          	jalr	102(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080014c6e <.LBB2_33>:
    80014c6e:	00013517          	auipc	a0,0x13
    80014c72:	be250513          	addi	a0,a0,-1054 # 80027850 <str.1>

0000000080014c76 <.LBB2_34>:
    80014c76:	00013617          	auipc	a2,0x13
    80014c7a:	bc260613          	addi	a2,a2,-1086 # 80027838 <.L__unnamed_11>
    80014c7e:	45f1                	li	a1,28
    80014c80:	0000c097          	auipc	ra,0xc
    80014c84:	04a080e7          	jalr	74(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080014c8a <.LBB2_35>:
    let userret_virt = TRAMPOLINE + (userret as usize - trampoline as usize);
    80014c8a:	00013517          	auipc	a0,0x13
    80014c8e:	b8650513          	addi	a0,a0,-1146 # 80027810 <str.0>

0000000080014c92 <.LBB2_36>:
    80014c92:	00013617          	auipc	a2,0x13
    80014c96:	bf660613          	addi	a2,a2,-1034 # 80027888 <.L__unnamed_12>
    80014c9a:	02100593          	li	a1,33
    80014c9e:	0000c097          	auipc	ra,0xc
    80014ca2:	02c080e7          	jalr	44(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080014ca8 <.LBB2_37>:
    80014ca8:	00013517          	auipc	a0,0x13
    80014cac:	ba850513          	addi	a0,a0,-1112 # 80027850 <str.1>

0000000080014cb0 <.LBB2_38>:
    80014cb0:	00013617          	auipc	a2,0x13
    80014cb4:	bf060613          	addi	a2,a2,-1040 # 800278a0 <.L__unnamed_13>
    80014cb8:	45f1                	li	a1,28
    80014cba:	0000c097          	auipc	ra,0xc
    80014cbe:	010080e7          	jalr	16(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text.kerneltrap:

0000000080014cc4 <kerneltrap>:
}

/// interrupts and exceptions from kernel code go here via kernelvec,
/// on whatever the current kernel stack is.
#[no_mangle]
pub unsafe fn kerneltrap(
    80014cc4:	cc010113          	addi	sp,sp,-832
    80014cc8:	32113c23          	sd	ra,824(sp)
    80014ccc:	2aa13823          	sd	a0,688(sp)
    80014cd0:	2ab13c23          	sd	a1,696(sp)
    80014cd4:	2cc13023          	sd	a2,704(sp)
    80014cd8:	2cd13423          	sd	a3,712(sp)
    80014cdc:	2ce13823          	sd	a4,720(sp)
    80014ce0:	2cf13c23          	sd	a5,728(sp)
    80014ce4:	2f013023          	sd	a6,736(sp)
    80014ce8:	2f113423          	sd	a7,744(sp)
   arg0: usize, arg1: usize, arg2: usize, _: usize,
   _: usize, _: usize, _: usize, which: usize
) {
    let sepc = sepc::read();
    80014cec:	f5c6                	sd	a7,232(sp)
    80014cee:	f1b2                	sd	a2,224(sp)
    80014cf0:	edae                	sd	a1,216(sp)
    80014cf2:	e9aa                	sd	a0,208(sp)
    80014cf4:	ffff1097          	auipc	ra,0xffff1
    80014cf8:	f20080e7          	jalr	-224(ra) # 80005c14 <_ZN6kernel8register4sepc4read17h72f396ba007db608E>
    80014cfc:	f9aa                	sd	a0,240(sp)
    80014cfe:	a009                	j	80014d00 <kerneltrap+0x3c>
    let sstatus = sstatus::read();
    80014d00:	00000097          	auipc	ra,0x0
    80014d04:	55a080e7          	jalr	1370(ra) # 8001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>
    80014d08:	85aa                	mv	a1,a0
    80014d0a:	2ea13823          	sd	a0,752(sp)
    80014d0e:	e5ae                	sd	a1,200(sp)
    80014d10:	a009                	j	80014d12 <kerneltrap+0x4e>
    let scause = scause::read();
    80014d12:	ffffc097          	auipc	ra,0xffffc
    80014d16:	0e0080e7          	jalr	224(ra) # 80010df2 <_ZN6kernel8register6scause4read17h2a44a33e28e010e0E>
    80014d1a:	85aa                	mv	a1,a0
    80014d1c:	2ea13c23          	sd	a0,760(sp)
    80014d20:	e1ae                	sd	a1,192(sp)
    80014d22:	a009                	j	80014d24 <kerneltrap+0x60>
    let stval = stval::read();
    80014d24:	ffff3097          	auipc	ra,0xffff3
    80014d28:	c5a080e7          	jalr	-934(ra) # 8000797e <_ZN6kernel8register5stval4read17h20f8eee1779dac39E>
    80014d2c:	fdaa                	sd	a0,248(sp)
    80014d2e:	a009                	j	80014d30 <kerneltrap+0x6c>

    if !sstatus::is_from_supervisor() {
    80014d30:	00000097          	auipc	ra,0x0
    80014d34:	542080e7          	jalr	1346(ra) # 80015272 <_ZN6kernel8register7sstatus18is_from_supervisor17hb46e26657258836bE>
    80014d38:	fd2a                	sd	a0,184(sp)
    80014d3a:	a009                	j	80014d3c <kerneltrap+0x78>
    80014d3c:	756a                	ld	a0,184(sp)
    80014d3e:	e105                	bnez	a0,80014d5e <.LBB3_78+0x14>
    80014d40:	a009                	j	80014d42 <.LBB3_77>

0000000080014d42 <.LBB3_77>:
        panic!("not from supervisor mode");
    80014d42:	00013517          	auipc	a0,0x13
    80014d46:	b7650513          	addi	a0,a0,-1162 # 800278b8 <.L__unnamed_14>

0000000080014d4a <.LBB3_78>:
    80014d4a:	00013617          	auipc	a2,0x13
    80014d4e:	b8660613          	addi	a2,a2,-1146 # 800278d0 <.L__unnamed_15>
    80014d52:	45e1                	li	a1,24
    80014d54:	0000c097          	auipc	ra,0xc
    80014d58:	f76080e7          	jalr	-138(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80014d5c:	0000                	unimp
    }

    if sstatus::intr_get() {
    80014d5e:	00000097          	auipc	ra,0x0
    80014d62:	59e080e7          	jalr	1438(ra) # 800152fc <_ZN6kernel8register7sstatus8intr_get17h3eba542b3f5f7dfdE>
    80014d66:	f92a                	sd	a0,176(sp)
    80014d68:	a009                	j	80014d6a <.LBB3_78+0x20>
    80014d6a:	4501                	li	a0,0
    80014d6c:	75ca                	ld	a1,176(sp)
    80014d6e:	02a58263          	beq	a1,a0,80014d92 <.LBB3_80+0x16>
    80014d72:	a009                	j	80014d74 <.LBB3_79>

0000000080014d74 <.LBB3_79>:
        panic!("kerneltrap(): interrupts enabled");
    80014d74:	00010517          	auipc	a0,0x10
    80014d78:	37250513          	addi	a0,a0,882 # 800250e6 <.L__unnamed_11+0x1e>

0000000080014d7c <.LBB3_80>:
    80014d7c:	00013617          	auipc	a2,0x13
    80014d80:	b6c60613          	addi	a2,a2,-1172 # 800278e8 <.L__unnamed_17>
    80014d84:	02000593          	li	a1,32
    80014d88:	0000c097          	auipc	ra,0xc
    80014d8c:	f42080e7          	jalr	-190(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80014d90:	0000                	unimp
    }

    let mut local_spec = sepc;
    80014d92:	754e                	ld	a0,240(sp)
    80014d94:	e22a                	sd	a0,256(sp)
    // Update progrma counter
    let scause = Scause::new(scause);
    80014d96:	650e                	ld	a0,192(sp)
    80014d98:	ffffc097          	auipc	ra,0xffffc
    80014d9c:	1d2080e7          	jalr	466(ra) # 80010f6a <_ZN6kernel8register6scause6Scause3new17h2dfdd0e7e1fd63beE>
    80014da0:	e62a                	sd	a0,264(sp)
    80014da2:	a009                	j	80014da4 <.LBB3_80+0x28>
    80014da4:	0228                	addi	a0,sp,264
    match scause.cause() {
    80014da6:	ffffc097          	auipc	ra,0xffffc
    80014daa:	274080e7          	jalr	628(ra) # 8001101a <_ZN6kernel8register6scause6Scause5cause17h78d3a574a45fc99bE>
    80014dae:	10a10c23          	sb	a0,280(sp)
    80014db2:	10b10ca3          	sb	a1,281(sp)
    80014db6:	a009                	j	80014db8 <.LBB3_80+0x3c>
        Trap::Exception(Exception::Breakpoint) => {
    80014db8:	11814503          	lbu	a0,280(sp)
    80014dbc:	00157593          	andi	a1,a0,1
    80014dc0:	4601                	li	a2,0
    80014dc2:	f52a                	sd	a0,168(sp)
    80014dc4:	00c58863          	beq	a1,a2,80014dd4 <.LBB3_80+0x58>
    80014dc8:	a009                	j	80014dca <.LBB3_80+0x4e>
    80014dca:	4505                	li	a0,1
    80014dcc:	75aa                	ld	a1,168(sp)
    80014dce:	02a58d63          	beq	a1,a0,80014e08 <.LBB3_82+0x14>
    80014dd2:	a829                	j	80014dec <.LBB3_81>
            println!("stval: 0x{:x}", stval);
            panic!();
        },

        // Device Interruput
        Trap::Interrupt(Interrupt::SupervisorExternal) => {
    80014dd4:	11914503          	lbu	a0,281(sp)
    80014dd8:	4585                	li	a1,1
    80014dda:	f12a                	sd	a0,160(sp)
    80014ddc:	36b50c63          	beq	a0,a1,80015154 <.LBB3_104+0x24>
    80014de0:	a009                	j	80014de2 <.LBB3_80+0x66>
    80014de2:	4515                	li	a0,5
    80014de4:	758a                	ld	a1,160(sp)
    80014de6:	2aa58763          	beq	a1,a0,80015094 <.LBB3_100+0x14>
    80014dea:	a009                	j	80014dec <.LBB3_81>

0000000080014dec <.LBB3_81>:
            // give up the cpu. 
            CPU_MANAGER.mycpu().try_yield_proc();
        }

        _ => {       
            panic!("Unresolved Trap!");
    80014dec:	0000f517          	auipc	a0,0xf
    80014df0:	d9c50513          	addi	a0,a0,-612 # 80023b88 <.L__unnamed_20+0xa8>

0000000080014df4 <.LBB3_82>:
    80014df4:	00013617          	auipc	a2,0x13
    80014df8:	ccc60613          	addi	a2,a2,-820 # 80027ac0 <.L__unnamed_19>
    80014dfc:	45c1                	li	a1,16
    80014dfe:	0000c097          	auipc	ra,0xc
    80014e02:	ecc080e7          	jalr	-308(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80014e06:	0000                	unimp
        Trap::Exception(Exception::Breakpoint) => {
    80014e08:	11914503          	lbu	a0,281(sp)
    80014e0c:	4585                	li	a1,1
    80014e0e:	ed2a                	sd	a0,152(sp)
    80014e10:	1ab50b63          	beq	a0,a1,80014fc6 <.LBB3_94+0x28>
    80014e14:	a009                	j	80014e16 <.LBB3_82+0x22>
    80014e16:	450d                	li	a0,3
    80014e18:	65ea                	ld	a1,152(sp)
    80014e1a:	02a58c63          	beq	a1,a0,80014e52 <.LBB3_82+0x5e>
    80014e1e:	a009                	j	80014e20 <.LBB3_82+0x2c>
    80014e20:	4511                	li	a0,4
    80014e22:	65ea                	ld	a1,152(sp)
    80014e24:	06a58763          	beq	a1,a0,80014e92 <.LBB3_85>
    80014e28:	a009                	j	80014e2a <.LBB3_82+0x36>
    80014e2a:	4521                	li	a0,8
    80014e2c:	65ea                	ld	a1,152(sp)
    80014e2e:	18a58263          	beq	a1,a0,80014fb2 <.LBB3_94+0x14>
    80014e32:	a009                	j	80014e34 <.LBB3_82+0x40>
    80014e34:	4525                	li	a0,9
    80014e36:	65ea                	ld	a1,152(sp)
    80014e38:	18a58e63          	beq	a1,a0,80014fd4 <.LBB3_94+0x36>
    80014e3c:	a009                	j	80014e3e <.LBB3_82+0x4a>
    80014e3e:	4529                	li	a0,10
    80014e40:	65ea                	ld	a1,152(sp)
    80014e42:	06a58663          	beq	a1,a0,80014eae <.LBB3_86+0x14>
    80014e46:	a009                	j	80014e48 <.LBB3_82+0x54>
    80014e48:	452d                	li	a0,11
    80014e4a:	65ea                	ld	a1,152(sp)
    80014e4c:	0ea58163          	beq	a1,a0,80014f2e <.LBB3_90+0x14>
    80014e50:	bf71                	j	80014dec <.LBB3_81>
            local_spec += 2;
    80014e52:	6512                	ld	a0,256(sp)
    80014e54:	00250593          	addi	a1,a0,2
    80014e58:	e92e                	sd	a1,144(sp)
    80014e5a:	36a5e663          	bltu	a1,a0,800151c6 <.LBB3_106>
    80014e5e:	a009                	j	80014e60 <.LBB3_82+0x6c>
    80014e60:	654a                	ld	a0,144(sp)
    80014e62:	e22a                	sd	a0,256(sp)

0000000080014e64 <.LBB3_83>:
            println!("BreakPoint!");
    80014e64:	00013597          	auipc	a1,0x13
    80014e68:	c4c58593          	addi	a1,a1,-948 # 80027ab0 <.L__unnamed_20>

0000000080014e6c <.LBB3_84>:
    80014e6c:	00013697          	auipc	a3,0x13
    80014e70:	c5468693          	addi	a3,a3,-940 # 80027ac0 <.L__unnamed_19>
    80014e74:	1208                	addi	a0,sp,288
    80014e76:	4605                	li	a2,1
    80014e78:	4701                	li	a4,0
    80014e7a:	ffff1097          	auipc	ra,0xffff1
    80014e7e:	8aa080e7          	jalr	-1878(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014e82:	a009                	j	80014e84 <.LBB3_84+0x18>
    80014e84:	1208                	addi	a0,sp,288
    80014e86:	ffffc097          	auipc	ra,0xffffc
    80014e8a:	e6a080e7          	jalr	-406(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80014e8e:	a009                	j	80014e90 <.LBB3_84+0x24>
    match scause.cause() {
    80014e90:	ae11                	j	800151a4 <.LBB3_105+0x22>

0000000080014e92 <.LBB3_85>:
        Trap::Exception(Exception::LoadFault) => panic!("Load Fault!"),
    80014e92:	00013517          	auipc	a0,0x13
    80014e96:	bce50513          	addi	a0,a0,-1074 # 80027a60 <.L__unnamed_22>

0000000080014e9a <.LBB3_86>:
    80014e9a:	00013617          	auipc	a2,0x13
    80014e9e:	bd660613          	addi	a2,a2,-1066 # 80027a70 <.L__unnamed_23>
    80014ea2:	45ad                	li	a1,11
    80014ea4:	0000c097          	auipc	ra,0xc
    80014ea8:	e26080e7          	jalr	-474(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80014eac:	0000                	unimp
    80014eae:	19a8                	addi	a0,sp,248
            panic!("[Panic] Load Page Fault!\n stval: 0x{:x}\n sepc: 0x{:x}\n", stval, sepc);
    80014eb0:	f32a                	sd	a0,416(sp)
    80014eb2:	198c                	addi	a1,sp,240
    80014eb4:	f72e                	sd	a1,424(sp)
    80014eb6:	30a13823          	sd	a0,784(sp)
    80014eba:	30b13c23          	sd	a1,792(sp)

0000000080014ebe <.LBB3_87>:
    80014ebe:	0000e617          	auipc	a2,0xe
    80014ec2:	de860613          	addi	a2,a2,-536 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80014ec6:	e52e                	sd	a1,136(sp)
    80014ec8:	85b2                	mv	a1,a2
    80014eca:	0000b097          	auipc	ra,0xb
    80014ece:	b50080e7          	jalr	-1200(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80014ed2:	e12a                	sd	a0,128(sp)
    80014ed4:	fcae                	sd	a1,120(sp)
    80014ed6:	a009                	j	80014ed8 <.LBB3_88>

0000000080014ed8 <.LBB3_88>:
    80014ed8:	0000e597          	auipc	a1,0xe
    80014edc:	dce58593          	addi	a1,a1,-562 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80014ee0:	652a                	ld	a0,136(sp)
    80014ee2:	0000b097          	auipc	ra,0xb
    80014ee6:	b38080e7          	jalr	-1224(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80014eea:	f8aa                	sd	a0,112(sp)
    80014eec:	f4ae                	sd	a1,104(sp)
    80014eee:	a009                	j	80014ef0 <.LBB3_88+0x18>
    80014ef0:	650a                	ld	a0,128(sp)
    80014ef2:	e32a                	sd	a0,384(sp)
    80014ef4:	75e6                	ld	a1,120(sp)
    80014ef6:	e72e                	sd	a1,392(sp)
    80014ef8:	7646                	ld	a2,112(sp)
    80014efa:	eb32                	sd	a2,400(sp)
    80014efc:	76a6                	ld	a3,104(sp)
    80014efe:	ef36                	sd	a3,408(sp)

0000000080014f00 <.LBB3_89>:
    80014f00:	00013597          	auipc	a1,0x13
    80014f04:	aa058593          	addi	a1,a1,-1376 # 800279a0 <.L__unnamed_24>
    80014f08:	0a88                	addi	a0,sp,336
    80014f0a:	460d                	li	a2,3
    80014f0c:	0314                	addi	a3,sp,384
    80014f0e:	4709                	li	a4,2
    80014f10:	ffff1097          	auipc	ra,0xffff1
    80014f14:	814080e7          	jalr	-2028(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014f18:	a009                	j	80014f1a <.LBB3_90>

0000000080014f1a <.LBB3_90>:
    80014f1a:	00013597          	auipc	a1,0x13
    80014f1e:	ab658593          	addi	a1,a1,-1354 # 800279d0 <.L__unnamed_25>
    80014f22:	0a88                	addi	a0,sp,336
    80014f24:	0000c097          	auipc	ra,0xc
    80014f28:	e12080e7          	jalr	-494(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80014f2c:	0000                	unimp
    80014f2e:	19a8                	addi	a0,sp,248
            panic!("[Panic] Store Page Fault!\n stval: 0x{:x}\n sepc: 0x{:x}\n", stval, sepc);
    80014f30:	20a13023          	sd	a0,512(sp)
    80014f34:	198c                	addi	a1,sp,240
    80014f36:	20b13423          	sd	a1,520(sp)
    80014f3a:	30a13023          	sd	a0,768(sp)
    80014f3e:	30b13423          	sd	a1,776(sp)

0000000080014f42 <.LBB3_91>:
    80014f42:	0000e617          	auipc	a2,0xe
    80014f46:	d6460613          	addi	a2,a2,-668 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80014f4a:	f0ae                	sd	a1,96(sp)
    80014f4c:	85b2                	mv	a1,a2
    80014f4e:	0000b097          	auipc	ra,0xb
    80014f52:	acc080e7          	jalr	-1332(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80014f56:	ecaa                	sd	a0,88(sp)
    80014f58:	e8ae                	sd	a1,80(sp)
    80014f5a:	a009                	j	80014f5c <.LBB3_92>

0000000080014f5c <.LBB3_92>:
    80014f5c:	0000e597          	auipc	a1,0xe
    80014f60:	d4a58593          	addi	a1,a1,-694 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80014f64:	7506                	ld	a0,96(sp)
    80014f66:	0000b097          	auipc	ra,0xb
    80014f6a:	ab4080e7          	jalr	-1356(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80014f6e:	e4aa                	sd	a0,72(sp)
    80014f70:	e0ae                	sd	a1,64(sp)
    80014f72:	a009                	j	80014f74 <.LBB3_92+0x18>
    80014f74:	6566                	ld	a0,88(sp)
    80014f76:	f3aa                	sd	a0,480(sp)
    80014f78:	65c6                	ld	a1,80(sp)
    80014f7a:	f7ae                	sd	a1,488(sp)
    80014f7c:	6626                	ld	a2,72(sp)
    80014f7e:	fbb2                	sd	a2,496(sp)
    80014f80:	6686                	ld	a3,64(sp)
    80014f82:	ffb6                	sd	a3,504(sp)

0000000080014f84 <.LBB3_93>:
    80014f84:	00013597          	auipc	a1,0x13
    80014f88:	9ac58593          	addi	a1,a1,-1620 # 80027930 <.L__unnamed_26>
    80014f8c:	1b08                	addi	a0,sp,432
    80014f8e:	460d                	li	a2,3
    80014f90:	1394                	addi	a3,sp,480
    80014f92:	4709                	li	a4,2
    80014f94:	ffff0097          	auipc	ra,0xffff0
    80014f98:	790080e7          	jalr	1936(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80014f9c:	a009                	j	80014f9e <.LBB3_94>

0000000080014f9e <.LBB3_94>:
    80014f9e:	00013597          	auipc	a1,0x13
    80014fa2:	9c258593          	addi	a1,a1,-1598 # 80027960 <.L__unnamed_27>
    80014fa6:	1b08                	addi	a0,sp,432
    80014fa8:	0000c097          	auipc	ra,0xc
    80014fac:	d8e080e7          	jalr	-626(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80014fb0:	0000                	unimp
        Trap::Exception(Exception::KernelEnvCall) => kernel_syscall(arg0, arg1, arg2, which),
    80014fb2:	654e                	ld	a0,208(sp)
    80014fb4:	65ee                	ld	a1,216(sp)
    80014fb6:	760e                	ld	a2,224(sp)
    80014fb8:	76ae                	ld	a3,232(sp)
    80014fba:	ffff5097          	auipc	ra,0xffff5
    80014fbe:	454080e7          	jalr	1108(ra) # 8000a40e <_ZN6kernel9interrupt7handler14kernel_syscall17h27dc8fee548bc2b1E>
    80014fc2:	a009                	j	80014fc4 <.LBB3_94+0x26>
    match scause.cause() {
    80014fc4:	a2c5                	j	800151a4 <.LBB3_105+0x22>
        Trap::Exception(Exception::InstructionFault) => instr_handler(sepc),
    80014fc6:	754e                	ld	a0,240(sp)
    80014fc8:	ffff5097          	auipc	ra,0xffff5
    80014fcc:	502080e7          	jalr	1282(ra) # 8000a4ca <_ZN6kernel9interrupt7handler13instr_handler17hc65348f67b2a2746E>
    80014fd0:	a009                	j	80014fd2 <.LBB3_94+0x34>
    match scause.cause() {
    80014fd2:	aac9                	j	800151a4 <.LBB3_105+0x22>
    80014fd4:	1988                	addi	a0,sp,240
            println!("sepc: 0x{:x}", sepc);
    80014fd6:	24a13823          	sd	a0,592(sp)
    80014fda:	32a13023          	sd	a0,800(sp)

0000000080014fde <.LBB3_95>:
    80014fde:	0000e597          	auipc	a1,0xe
    80014fe2:	cc858593          	addi	a1,a1,-824 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80014fe6:	0000b097          	auipc	ra,0xb
    80014fea:	a34080e7          	jalr	-1484(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80014fee:	fc2a                	sd	a0,56(sp)
    80014ff0:	f82e                	sd	a1,48(sp)
    80014ff2:	a009                	j	80014ff4 <.LBB3_95+0x16>
    80014ff4:	7562                	ld	a0,56(sp)
    80014ff6:	24a13023          	sd	a0,576(sp)
    80014ffa:	75c2                	ld	a1,48(sp)
    80014ffc:	24b13423          	sd	a1,584(sp)

0000000080015000 <.LBB3_96>:
    80015000:	00013597          	auipc	a1,0x13
    80015004:	9e858593          	addi	a1,a1,-1560 # 800279e8 <.L__unnamed_28>
    80015008:	0c08                	addi	a0,sp,528
    8001500a:	4609                	li	a2,2
    8001500c:	0494                	addi	a3,sp,576
    8001500e:	4705                	li	a4,1
    80015010:	ffff0097          	auipc	ra,0xffff0
    80015014:	714080e7          	jalr	1812(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80015018:	a009                	j	8001501a <.LBB3_96+0x1a>
    8001501a:	0c08                	addi	a0,sp,528
    8001501c:	ffffc097          	auipc	ra,0xffffc
    80015020:	cd4080e7          	jalr	-812(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80015024:	a009                	j	80015026 <.LBB3_96+0x26>
    80015026:	19a8                	addi	a0,sp,248
            println!("stval: 0x{:x}", stval);
    80015028:	28a13c23          	sd	a0,664(sp)
    8001502c:	32a13423          	sd	a0,808(sp)

0000000080015030 <.LBB3_97>:
    80015030:	0000e597          	auipc	a1,0xe
    80015034:	c7658593          	addi	a1,a1,-906 # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    80015038:	0000b097          	auipc	ra,0xb
    8001503c:	9e2080e7          	jalr	-1566(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80015040:	f42a                	sd	a0,40(sp)
    80015042:	f02e                	sd	a1,32(sp)
    80015044:	a009                	j	80015046 <.LBB3_97+0x16>
    80015046:	7522                	ld	a0,40(sp)
    80015048:	28a13423          	sd	a0,648(sp)
    8001504c:	7582                	ld	a1,32(sp)
    8001504e:	28b13823          	sd	a1,656(sp)

0000000080015052 <.LBB3_98>:
    80015052:	00013597          	auipc	a1,0x13
    80015056:	9c658593          	addi	a1,a1,-1594 # 80027a18 <.L__unnamed_29>
    8001505a:	0ca8                	addi	a0,sp,600
    8001505c:	4609                	li	a2,2
    8001505e:	0534                	addi	a3,sp,648
    80015060:	4705                	li	a4,1
    80015062:	ffff0097          	auipc	ra,0xffff0
    80015066:	6c2080e7          	jalr	1730(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001506a:	a009                	j	8001506c <.LBB3_98+0x1a>
    8001506c:	0ca8                	addi	a0,sp,600
    8001506e:	ffffc097          	auipc	ra,0xffffc
    80015072:	c82080e7          	jalr	-894(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    80015076:	a009                	j	80015078 <.LBB3_99>

0000000080015078 <.LBB3_99>:
            panic!();
    80015078:	00013517          	auipc	a0,0x13
    8001507c:	9c050513          	addi	a0,a0,-1600 # 80027a38 <.L__unnamed_30>

0000000080015080 <.LBB3_100>:
    80015080:	00013617          	auipc	a2,0x13
    80015084:	9c860613          	addi	a2,a2,-1592 # 80027a48 <.L__unnamed_31>
    80015088:	45b9                	li	a1,14
    8001508a:	0000c097          	auipc	ra,0xc
    8001508e:	c40080e7          	jalr	-960(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80015092:	0000                	unimp
            if let Some(interrupt) = plic_claim() {
    80015094:	ffff7097          	auipc	ra,0xffff7
    80015098:	0ae080e7          	jalr	174(ra) # 8000c142 <_ZN6kernel6driver4plic10plic_claim17h2e043ee82191dc17E>
    8001509c:	2aa12023          	sw	a0,672(sp)
    800150a0:	2ab12223          	sw	a1,676(sp)
    800150a4:	a009                	j	800150a6 <.LBB3_100+0x26>
    800150a6:	2a012503          	lw	a0,672(sp)
    800150aa:	4585                	li	a1,1
    800150ac:	00b50463          	beq	a0,a1,800150b4 <.LBB3_100+0x34>
    800150b0:	a009                	j	800150b2 <.LBB3_100+0x32>
    800150b2:	a045                	j	80015152 <.LBB3_104+0x22>
    800150b4:	2a412503          	lw	a0,676(sp)
    800150b8:	02051593          	slli	a1,a0,0x20
    800150bc:	9181                	srli	a1,a1,0x20
    800150be:	32a12a23          	sw	a0,820(sp)
    800150c2:	4605                	li	a2,1
                    VIRTIO0_IRQ => {
    800150c4:	ec2e                	sd	a1,24(sp)
    800150c6:	02c50663          	beq	a0,a2,800150f2 <.LBB3_103>
    800150ca:	a009                	j	800150cc <.LBB3_100+0x4c>
    800150cc:	4529                	li	a0,10
    800150ce:	65e2                	ld	a1,24(sp)
    800150d0:	06a58063          	beq	a1,a0,80015130 <.LBB3_104>
    800150d4:	a009                	j	800150d6 <.LBB3_101>

00000000800150d6 <.LBB3_101>:
                        panic!("Unresolved interrupt");
    800150d6:	00012517          	auipc	a0,0x12
    800150da:	6d250513          	addi	a0,a0,1746 # 800277a8 <.L__unnamed_4>

00000000800150de <.LBB3_102>:
    800150de:	00013617          	auipc	a2,0x13
    800150e2:	9fa60613          	addi	a2,a2,-1542 # 80027ad8 <.L__unnamed_32>
    800150e6:	45d1                	li	a1,20
    800150e8:	0000c097          	auipc	ra,0xc
    800150ec:	be2080e7          	jalr	-1054(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800150f2 <.LBB3_103>:
                        DISK.acquire().intr();
    800150f2:	00041517          	auipc	a0,0x41
    800150f6:	f0e50513          	addi	a0,a0,-242 # 80056000 <_ZN6kernel6driver11virtio_disk4DISK17h48d93f2a1d70ec15E>
    800150fa:	fffed097          	auipc	ra,0xfffed
    800150fe:	52c080e7          	jalr	1324(ra) # 80002626 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE>
    80015102:	2aa13423          	sd	a0,680(sp)
    80015106:	a009                	j	80015108 <.LBB3_103+0x16>
    80015108:	1528                	addi	a0,sp,680
    8001510a:	fffef097          	auipc	ra,0xfffef
    8001510e:	970080e7          	jalr	-1680(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80015112:	e82a                	sd	a0,16(sp)
    80015114:	a009                	j	80015116 <.LBB3_103+0x24>
    80015116:	6542                	ld	a0,16(sp)
    80015118:	ffff9097          	auipc	ra,0xffff9
    8001511c:	682080e7          	jalr	1666(ra) # 8000e79a <_ZN6kernel6driver11virtio_disk4Disk4intr17hc292f21579a286d1E>
    80015120:	a009                	j	80015122 <.LBB3_103+0x30>
    80015122:	1528                	addi	a0,sp,680
    80015124:	ffff2097          	auipc	ra,0xffff2
    80015128:	95e080e7          	jalr	-1698(ra) # 80006a82 <_ZN4core3ptr99drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..driver..virtio_disk..Disk$GT$$GT$17h3a869af89cb88c7dE>
    8001512c:	a009                	j	8001512e <.LBB3_103+0x3c>
                match interrupt {
    8001512e:	a819                	j	80015144 <.LBB3_104+0x14>

0000000080015130 <.LBB3_104>:
                        UART.intr();
    80015130:	00021517          	auipc	a0,0x21
    80015134:	d0850513          	addi	a0,a0,-760 # 80035e38 <_ZN6kernel7console4uart4UART17hc32d6c0da573df73E>
    80015138:	00002097          	auipc	ra,0x2
    8001513c:	d6e080e7          	jalr	-658(ra) # 80016ea6 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE>
    80015140:	a009                	j	80015142 <.LBB3_104+0x12>
                match interrupt {
    80015142:	a009                	j	80015144 <.LBB3_104+0x14>
                plic_complete(interrupt);
    80015144:	6562                	ld	a0,24(sp)
    80015146:	ffff7097          	auipc	ra,0xffff7
    8001514a:	05a080e7          	jalr	90(ra) # 8000c1a0 <_ZN6kernel6driver4plic13plic_complete17hda6f35daf280a4e7E>
    8001514e:	a009                	j	80015150 <.LBB3_104+0x20>
            if let Some(interrupt) = plic_claim() {
    80015150:	a009                	j	80015152 <.LBB3_104+0x22>
    match scause.cause() {
    80015152:	a889                	j	800151a4 <.LBB3_105+0x22>
            if cpu::cpuid() == 0{
    80015154:	00008097          	auipc	ra,0x8
    80015158:	57c080e7          	jalr	1404(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8001515c:	e42a                	sd	a0,8(sp)
    8001515e:	a009                	j	80015160 <.LBB3_104+0x30>
    80015160:	4501                	li	a0,0
    80015162:	65a2                	ld	a1,8(sp)
    80015164:	00a59863          	bne	a1,a0,80015174 <.LBB3_104+0x44>
    80015168:	a009                	j	8001516a <.LBB3_104+0x3a>
                clock_intr();
    8001516a:	00000097          	auipc	ra,0x0
    8001516e:	078080e7          	jalr	120(ra) # 800151e2 <_ZN6kernel9interrupt4trap10clock_intr17heea1ba55d8a6041fE>
    80015172:	a011                	j	80015176 <.LBB3_104+0x46>
            if cpu::cpuid() == 0{
    80015174:	a011                	j	80015178 <.LBB3_104+0x48>
    80015176:	a009                	j	80015178 <.LBB3_104+0x48>
            sip::clear_ssip();
    80015178:	ffff8097          	auipc	ra,0xffff8
    8001517c:	692080e7          	jalr	1682(ra) # 8000d80a <_ZN6kernel8register3sip10clear_ssip17hb6becdc966d2cc13E>
    80015180:	a009                	j	80015182 <.LBB3_105>

0000000080015182 <.LBB3_105>:
            CPU_MANAGER.mycpu().try_yield_proc();
    80015182:	0005a517          	auipc	a0,0x5a
    80015186:	e7e50513          	addi	a0,a0,-386 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001518a:	00008097          	auipc	ra,0x8
    8001518e:	562080e7          	jalr	1378(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    80015192:	e02a                	sd	a0,0(sp)
    80015194:	a009                	j	80015196 <.LBB3_105+0x14>
    80015196:	6502                	ld	a0,0(sp)
    80015198:	00009097          	auipc	ra,0x9
    8001519c:	946080e7          	jalr	-1722(ra) # 8001dade <_ZN6kernel7process3cpu3CPU14try_yield_proc17hf71262baec4184d0E>
    800151a0:	a009                	j	800151a2 <.LBB3_105+0x20>
    match scause.cause() {
    800151a2:	a009                	j	800151a4 <.LBB3_105+0x22>
        }
    }
    // store context
    sepc::write(local_spec);
    800151a4:	6512                	ld	a0,256(sp)
    800151a6:	ffff1097          	auipc	ra,0xffff1
    800151aa:	a7a080e7          	jalr	-1414(ra) # 80005c20 <_ZN6kernel8register4sepc5write17hb628f5972fcdd7c3E>
    800151ae:	a009                	j	800151b0 <.LBB3_105+0x2e>
    sstatus::write(sstatus);
    800151b0:	652e                	ld	a0,200(sp)
    800151b2:	00000097          	auipc	ra,0x0
    800151b6:	0b4080e7          	jalr	180(ra) # 80015266 <_ZN6kernel8register7sstatus5write17h5425a048a71e3665E>
    800151ba:	a009                	j	800151bc <.LBB3_105+0x3a>

}
    800151bc:	33813083          	ld	ra,824(sp)
    800151c0:	34010113          	addi	sp,sp,832
    800151c4:	8082                	ret

00000000800151c6 <.LBB3_106>:
            local_spec += 2;
    800151c6:	00012517          	auipc	a0,0x12
    800151ca:	68a50513          	addi	a0,a0,1674 # 80027850 <str.1>

00000000800151ce <.LBB3_107>:
    800151ce:	00013617          	auipc	a2,0x13
    800151d2:	8ba60613          	addi	a2,a2,-1862 # 80027a88 <.L__unnamed_33>
    800151d6:	45f1                	li	a1,28
    800151d8:	0000c097          	auipc	ra,0xc
    800151dc:	af2080e7          	jalr	-1294(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel9interrupt4trap10clock_intr17heea1ba55d8a6041fE:

00000000800151e2 <_ZN6kernel9interrupt4trap10clock_intr17heea1ba55d8a6041fE>:


pub unsafe fn clock_intr(){
    800151e2:	7179                	addi	sp,sp,-48
    let mut ticks = TICKS_LOCK.acquire();
    800151e4:	f406                	sd	ra,40(sp)

00000000800151e6 <.LBB4_7>:
    800151e6:	00045517          	auipc	a0,0x45
    800151ea:	f2250513          	addi	a0,a0,-222 # 8005a108 <_ZN6kernel9interrupt4trap10TICKS_LOCK17hddc62c40cff88442E>
    800151ee:	fffed097          	auipc	ra,0xfffed
    800151f2:	0a0080e7          	jalr	160(ra) # 8000228e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h40045d76933e66b9E>
    800151f6:	f02a                	sd	a0,32(sp)
    800151f8:	a009                	j	800151fa <.LBB4_7+0x14>
    800151fa:	1008                	addi	a0,sp,32
    *ticks = *ticks + 1;
    800151fc:	fffee097          	auipc	ra,0xfffee
    80015200:	662080e7          	jalr	1634(ra) # 8000385e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h52b5113a9e8a7318E>
    80015204:	ec2a                	sd	a0,24(sp)
    80015206:	a009                	j	80015208 <.LBB4_7+0x22>
    80015208:	6562                	ld	a0,24(sp)
    8001520a:	610c                	ld	a1,0(a0)
    8001520c:	00158613          	addi	a2,a1,1
    80015210:	e832                	sd	a2,16(sp)
    80015212:	02b66663          	bltu	a2,a1,8001523e <.LBB4_8>
    80015216:	a009                	j	80015218 <.LBB4_7+0x32>
    80015218:	1008                	addi	a0,sp,32
    8001521a:	fffee097          	auipc	ra,0xfffee
    8001521e:	782080e7          	jalr	1922(ra) # 8000399c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6ba8d8739836030bE>
    80015222:	e42a                	sd	a0,8(sp)
    80015224:	a009                	j	80015226 <.LBB4_7+0x40>
    80015226:	6542                	ld	a0,16(sp)
    80015228:	65a2                	ld	a1,8(sp)
    8001522a:	e188                	sd	a0,0(a1)
    drop(ticks);
    8001522c:	7502                	ld	a0,32(sp)
    8001522e:	ffff8097          	auipc	ra,0xffff8
    80015232:	7ac080e7          	jalr	1964(ra) # 8000d9da <_ZN4core3mem4drop17hb46a08cef9bf9f0dE>
    80015236:	a009                	j	80015238 <.LBB4_7+0x52>
}
    80015238:	70a2                	ld	ra,40(sp)
    8001523a:	6145                	addi	sp,sp,48
    8001523c:	8082                	ret

000000008001523e <.LBB4_8>:
    *ticks = *ticks + 1;
    8001523e:	00012517          	auipc	a0,0x12
    80015242:	61250513          	addi	a0,a0,1554 # 80027850 <str.1>

0000000080015246 <.LBB4_9>:
    80015246:	00013617          	auipc	a2,0x13
    8001524a:	8aa60613          	addi	a2,a2,-1878 # 80027af0 <.L__unnamed_34>
    8001524e:	45f1                	li	a1,28
    80015250:	0000c097          	auipc	ra,0xc
    80015254:	a7a080e7          	jalr	-1414(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel8register7sstatus4read17h616eb643f02f205dE:

000000008001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>:
    /// User Interrupt Enable
    UIE = 1 << 0
}

#[inline]
pub unsafe fn read() -> usize {
    8001525a:	1141                	addi	sp,sp,-16
    let sstatus: usize;
    llvm_asm!("csrr $0, sstatus":"=r"(sstatus):::"volatile");
    8001525c:	10002573          	csrr	a0,sstatus
    80015260:	e42a                	sd	a0,8(sp)
    sstatus
}
    80015262:	0141                	addi	sp,sp,16
    80015264:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus5write17h5425a048a71e3665E:

0000000080015266 <_ZN6kernel8register7sstatus5write17h5425a048a71e3665E>:

#[inline]
pub unsafe fn write(sstatus: usize) {
    80015266:	1141                	addi	sp,sp,-16
    80015268:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw sstatus, $0"::"r"(sstatus)::"volatile");
    8001526a:	10051073          	csrw	sstatus,a0
}
    8001526e:	0141                	addi	sp,sp,16
    80015270:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus18is_from_supervisor17hb46e26657258836bE:

0000000080015272 <_ZN6kernel8register7sstatus18is_from_supervisor17hb46e26657258836bE>:

#[inline]
pub unsafe fn is_from_supervisor() -> bool {
    80015272:	1141                	addi	sp,sp,-16
    (read() & SSTATUS::SPP as usize) != 0
    80015274:	e406                	sd	ra,8(sp)
    80015276:	00000097          	auipc	ra,0x0
    8001527a:	fe4080e7          	jalr	-28(ra) # 8001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>
    8001527e:	e02a                	sd	a0,0(sp)
    80015280:	a009                	j	80015282 <_ZN6kernel8register7sstatus18is_from_supervisor17hb46e26657258836bE+0x10>
    80015282:	6502                	ld	a0,0(sp)
    80015284:	10057593          	andi	a1,a0,256
    80015288:	0085d513          	srli	a0,a1,0x8
}
    8001528c:	60a2                	ld	ra,8(sp)
    8001528e:	0141                	addi	sp,sp,16
    80015290:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus12is_from_user17hc7a29469c32af84bE:

0000000080015292 <_ZN6kernel8register7sstatus12is_from_user17hc7a29469c32af84bE>:

#[inline]
pub unsafe fn is_from_user() -> bool {
    80015292:	1141                	addi	sp,sp,-16
    (read() & SSTATUS::SPP as usize) == 0
    80015294:	e406                	sd	ra,8(sp)
    80015296:	00000097          	auipc	ra,0x0
    8001529a:	fc4080e7          	jalr	-60(ra) # 8001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>
    8001529e:	e02a                	sd	a0,0(sp)
    800152a0:	a009                	j	800152a2 <_ZN6kernel8register7sstatus12is_from_user17hc7a29469c32af84bE+0x10>
    800152a2:	6502                	ld	a0,0(sp)
    800152a4:	10057593          	andi	a1,a0,256
    800152a8:	0015b513          	seqz	a0,a1
}
    800152ac:	60a2                	ld	ra,8(sp)
    800152ae:	0141                	addi	sp,sp,16
    800152b0:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE:

00000000800152b2 <_ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE>:

/// enable device interrupts
#[inline]
pub unsafe fn intr_on() {
    800152b2:	1141                	addi	sp,sp,-16
    write(read() | SSTATUS::SIE as usize);
    800152b4:	e406                	sd	ra,8(sp)
    800152b6:	00000097          	auipc	ra,0x0
    800152ba:	fa4080e7          	jalr	-92(ra) # 8001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>
    800152be:	e02a                	sd	a0,0(sp)
    800152c0:	a009                	j	800152c2 <_ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE+0x10>
    800152c2:	6502                	ld	a0,0(sp)
    800152c4:	00256513          	ori	a0,a0,2
    800152c8:	00000097          	auipc	ra,0x0
    800152cc:	f9e080e7          	jalr	-98(ra) # 80015266 <_ZN6kernel8register7sstatus5write17h5425a048a71e3665E>
    800152d0:	a009                	j	800152d2 <_ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE+0x20>
}
    800152d2:	60a2                	ld	ra,8(sp)
    800152d4:	0141                	addi	sp,sp,16
    800152d6:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus8intr_off17h9574962c04e4d2b2E:

00000000800152d8 <_ZN6kernel8register7sstatus8intr_off17h9574962c04e4d2b2E>:

/// disable device interrupts
#[inline]
pub unsafe fn intr_off() {
    800152d8:	1141                	addi	sp,sp,-16
    write(read() & !(SSTATUS::SIE as usize));
    800152da:	e406                	sd	ra,8(sp)
    800152dc:	00000097          	auipc	ra,0x0
    800152e0:	f7e080e7          	jalr	-130(ra) # 8001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>
    800152e4:	e02a                	sd	a0,0(sp)
    800152e6:	a009                	j	800152e8 <_ZN6kernel8register7sstatus8intr_off17h9574962c04e4d2b2E+0x10>
    800152e8:	6502                	ld	a0,0(sp)
    800152ea:	9975                	andi	a0,a0,-3
    800152ec:	00000097          	auipc	ra,0x0
    800152f0:	f7a080e7          	jalr	-134(ra) # 80015266 <_ZN6kernel8register7sstatus5write17h5425a048a71e3665E>
    800152f4:	a009                	j	800152f6 <_ZN6kernel8register7sstatus8intr_off17h9574962c04e4d2b2E+0x1e>
}
    800152f6:	60a2                	ld	ra,8(sp)
    800152f8:	0141                	addi	sp,sp,16
    800152fa:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus8intr_get17h3eba542b3f5f7dfdE:

00000000800152fc <_ZN6kernel8register7sstatus8intr_get17h3eba542b3f5f7dfdE>:


/// are device interrupts enabled?
#[inline]
pub unsafe fn intr_get() -> bool {
    800152fc:	1101                	addi	sp,sp,-32
    let x = read();
    800152fe:	ec06                	sd	ra,24(sp)
    80015300:	00000097          	auipc	ra,0x0
    80015304:	f5a080e7          	jalr	-166(ra) # 8001525a <_ZN6kernel8register7sstatus4read17h616eb643f02f205dE>
    80015308:	85aa                	mv	a1,a0
    8001530a:	e82a                	sd	a0,16(sp)
    8001530c:	e42e                	sd	a1,8(sp)
    8001530e:	a009                	j	80015310 <_ZN6kernel8register7sstatus8intr_get17h3eba542b3f5f7dfdE+0x14>
    return (x & SSTATUS::SIE as usize) != 0;
    80015310:	6522                	ld	a0,8(sp)
    80015312:	00257593          	andi	a1,a0,2
    80015316:	0015d513          	srli	a0,a1,0x1
}
    8001531a:	60e2                	ld	ra,24(sp)
    8001531c:	6105                	addi	sp,sp,32
    8001531e:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus9clear_spp17h0b6e769a5c132772E:

0000000080015320 <_ZN6kernel8register7sstatus9clear_spp17h0b6e769a5c132772E>:

/// clear SPP to 0
#[inline]
pub fn clear_spp(sstatus: usize) -> usize {
    80015320:	1141                	addi	sp,sp,-16
    80015322:	e42a                	sd	a0,8(sp)
    sstatus & !(SSTATUS::SPP as usize)
    80015324:	eff57513          	andi	a0,a0,-257
}
    80015328:	0141                	addi	sp,sp,16
    8001532a:	8082                	ret

Disassembly of section .text._ZN6kernel8register7sstatus12user_intr_on17hb1db780ce7280f1eE:

000000008001532c <_ZN6kernel8register7sstatus12user_intr_on17hb1db780ce7280f1eE>:

/// enable interrupts in user mode
#[inline]
pub fn user_intr_on(sstatus: usize) -> usize {
    8001532c:	1141                	addi	sp,sp,-16
    8001532e:	e42a                	sd	a0,8(sp)
    sstatus | (SSTATUS::SPIE as usize)
    80015330:	02056513          	ori	a0,a0,32
}
    80015334:	0141                	addi	sp,sp,16
    80015336:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h0e48eab02947ab85E:

0000000080015338 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h0e48eab02947ab85E>:
    ///
    /// [zeroed]: mem::MaybeUninit::zeroed
    #[inline]
    #[doc(alias = "calloc")]
    #[unstable(feature = "new_uninit", issue = "63291")]
    pub fn new_zeroed() -> Box<mem::MaybeUninit<T>> {
    80015338:	1101                	addi	sp,sp,-32
        Self::new_zeroed_in(Global)
    8001533a:	ec06                	sd	ra,24(sp)
    8001533c:	00000097          	auipc	ra,0x0
    80015340:	3c8080e7          	jalr	968(ra) # 80015704 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h8e90b560468c5f9cE>
    80015344:	e42a                	sd	a0,8(sp)
    80015346:	a009                	j	80015348 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h0e48eab02947ab85E+0x10>
    }
    80015348:	6522                	ld	a0,8(sp)
    8001534a:	60e2                	ld	ra,24(sp)
    8001534c:	6105                	addi	sp,sp,32
    8001534e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h45ba989bfa15e669E:

0000000080015350 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h45ba989bfa15e669E>:
    pub fn new_zeroed() -> Box<mem::MaybeUninit<T>> {
    80015350:	1101                	addi	sp,sp,-32
        Self::new_zeroed_in(Global)
    80015352:	ec06                	sd	ra,24(sp)
    80015354:	00000097          	auipc	ra,0x0
    80015358:	372080e7          	jalr	882(ra) # 800156c6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h4d2eb44b6e280242E>
    8001535c:	e42a                	sd	a0,8(sp)
    8001535e:	a009                	j	80015360 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17h45ba989bfa15e669E+0x10>
    }
    80015360:	6522                	ld	a0,8(sp)
    80015362:	60e2                	ld	ra,24(sp)
    80015364:	6105                	addi	sp,sp,32
    80015366:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17haf392853c9c868cdE:

0000000080015368 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17haf392853c9c868cdE>:
    pub fn new_zeroed() -> Box<mem::MaybeUninit<T>> {
    80015368:	1101                	addi	sp,sp,-32
        Self::new_zeroed_in(Global)
    8001536a:	ec06                	sd	ra,24(sp)
    8001536c:	00000097          	auipc	ra,0x0
    80015370:	3d6080e7          	jalr	982(ra) # 80015742 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h948336e67d6a2d37E>
    80015374:	e42a                	sd	a0,8(sp)
    80015376:	a009                	j	80015378 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17haf392853c9c868cdE+0x10>
    }
    80015378:	6522                	ld	a0,8(sp)
    8001537a:	60e2                	ld	ra,24(sp)
    8001537c:	6105                	addi	sp,sp,32
    8001537e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hcdd52b02a2811be1E:

0000000080015380 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hcdd52b02a2811be1E>:
    pub fn new_zeroed() -> Box<mem::MaybeUninit<T>> {
    80015380:	1101                	addi	sp,sp,-32
        Self::new_zeroed_in(Global)
    80015382:	ec06                	sd	ra,24(sp)
    80015384:	00000097          	auipc	ra,0x0
    80015388:	3fc080e7          	jalr	1020(ra) # 80015780 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17hde36d7c4a0f92086E>
    8001538c:	e42a                	sd	a0,8(sp)
    8001538e:	a009                	j	80015390 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hcdd52b02a2811be1E+0x10>
    }
    80015390:	6522                	ld	a0,8(sp)
    80015392:	60e2                	ld	ra,24(sp)
    80015394:	6105                	addi	sp,sp,32
    80015396:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hf51afb00ae7c861cE:

0000000080015398 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hf51afb00ae7c861cE>:
    pub fn new_zeroed() -> Box<mem::MaybeUninit<T>> {
    80015398:	1101                	addi	sp,sp,-32
        Self::new_zeroed_in(Global)
    8001539a:	ec06                	sd	ra,24(sp)
    8001539c:	00000097          	auipc	ra,0x0
    800153a0:	2ec080e7          	jalr	748(ra) # 80015688 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h3b47f6b8da927f65E>
    800153a4:	e42a                	sd	a0,8(sp)
    800153a6:	a009                	j	800153a8 <_ZN5alloc5boxed12Box$LT$T$GT$10new_zeroed17hf51afb00ae7c861cE+0x10>
    }
    800153a8:	6522                	ld	a0,8(sp)
    800153aa:	60e2                	ld	ra,24(sp)
    800153ac:	6105                	addi	sp,sp,32
    800153ae:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h25c1c058a1d8d4e1E:

00000000800153b0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h25c1c058a1d8d4e1E>:
    ///
    /// [memory layout]: self#memory-layout
    /// [`Layout`]: crate::Layout
    #[unstable(feature = "allocator_api", issue = "32838")]
    #[inline]
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    800153b0:	7179                	addi	sp,sp,-48
    800153b2:	f406                	sd	ra,40(sp)
    800153b4:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    800153b6:	fffed097          	auipc	ra,0xfffed
    800153ba:	b04080e7          	jalr	-1276(ra) # 80001eba <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbebc9bb9f86d3ce3E>
    800153be:	e42a                	sd	a0,8(sp)
    800153c0:	a009                	j	800153c2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h25c1c058a1d8d4e1E+0x12>
    800153c2:	6522                	ld	a0,8(sp)
    800153c4:	e82a                	sd	a0,16(sp)
    }
    800153c6:	70a2                	ld	ra,40(sp)
    800153c8:	6145                	addi	sp,sp,48
    800153ca:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3cebae41d0b5afeaE:

00000000800153cc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3cebae41d0b5afeaE>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    800153cc:	7179                	addi	sp,sp,-48
    800153ce:	f406                	sd	ra,40(sp)
    800153d0:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    800153d2:	fffed097          	auipc	ra,0xfffed
    800153d6:	ade080e7          	jalr	-1314(ra) # 80001eb0 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17ha7bd729a3c416b65E>
    800153da:	e42a                	sd	a0,8(sp)
    800153dc:	a009                	j	800153de <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3cebae41d0b5afeaE+0x12>
    800153de:	6522                	ld	a0,8(sp)
    800153e0:	e82a                	sd	a0,16(sp)
    }
    800153e2:	70a2                	ld	ra,40(sp)
    800153e4:	6145                	addi	sp,sp,48
    800153e6:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c19b825ce0218b0E:

00000000800153e8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c19b825ce0218b0E>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    800153e8:	7179                	addi	sp,sp,-48
    800153ea:	f406                	sd	ra,40(sp)
    800153ec:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    800153ee:	fffed097          	auipc	ra,0xfffed
    800153f2:	a90080e7          	jalr	-1392(ra) # 80001e7e <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2f8c923d52c3c5a7E>
    800153f6:	e42a                	sd	a0,8(sp)
    800153f8:	a009                	j	800153fa <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c19b825ce0218b0E+0x12>
    800153fa:	6522                	ld	a0,8(sp)
    800153fc:	e82a                	sd	a0,16(sp)
    }
    800153fe:	70a2                	ld	ra,40(sp)
    80015400:	6145                	addi	sp,sp,48
    80015402:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c9ee6407af676a6E:

0000000080015404 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c9ee6407af676a6E>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    80015404:	7179                	addi	sp,sp,-48
    80015406:	f406                	sd	ra,40(sp)
    80015408:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    8001540a:	fffed097          	auipc	ra,0xfffed
    8001540e:	a88080e7          	jalr	-1400(ra) # 80001e92 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h39f675013525d82dE>
    80015412:	e42a                	sd	a0,8(sp)
    80015414:	a009                	j	80015416 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c9ee6407af676a6E+0x12>
    80015416:	6522                	ld	a0,8(sp)
    80015418:	e82a                	sd	a0,16(sp)
    }
    8001541a:	70a2                	ld	ra,40(sp)
    8001541c:	6145                	addi	sp,sp,48
    8001541e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h6ad99d8ddbbe0789E:

0000000080015420 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h6ad99d8ddbbe0789E>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    80015420:	7179                	addi	sp,sp,-48
    80015422:	f406                	sd	ra,40(sp)
    80015424:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    80015426:	fffed097          	auipc	ra,0xfffed
    8001542a:	a62080e7          	jalr	-1438(ra) # 80001e88 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h3353e712eb2a3ffaE>
    8001542e:	e42a                	sd	a0,8(sp)
    80015430:	a009                	j	80015432 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h6ad99d8ddbbe0789E+0x12>
    80015432:	6522                	ld	a0,8(sp)
    80015434:	e82a                	sd	a0,16(sp)
    }
    80015436:	70a2                	ld	ra,40(sp)
    80015438:	6145                	addi	sp,sp,48
    8001543a:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h7e7d496197924dd9E:

000000008001543c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h7e7d496197924dd9E>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    8001543c:	7179                	addi	sp,sp,-48
    8001543e:	f406                	sd	ra,40(sp)
    80015440:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    80015442:	fffed097          	auipc	ra,0xfffed
    80015446:	a64080e7          	jalr	-1436(ra) # 80001ea6 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h924794941152a721E>
    8001544a:	e42a                	sd	a0,8(sp)
    8001544c:	a009                	j	8001544e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h7e7d496197924dd9E+0x12>
    8001544e:	6522                	ld	a0,8(sp)
    80015450:	e82a                	sd	a0,16(sp)
    }
    80015452:	70a2                	ld	ra,40(sp)
    80015454:	6145                	addi	sp,sp,48
    80015456:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h888d2ca99bd9146aE:

0000000080015458 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h888d2ca99bd9146aE>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    80015458:	7179                	addi	sp,sp,-48
    8001545a:	f406                	sd	ra,40(sp)
    8001545c:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    8001545e:	fffed097          	auipc	ra,0xfffed
    80015462:	a3e080e7          	jalr	-1474(ra) # 80001e9c <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h4308fef04503f178E>
    80015466:	e42a                	sd	a0,8(sp)
    80015468:	a009                	j	8001546a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h888d2ca99bd9146aE+0x12>
    8001546a:	6522                	ld	a0,8(sp)
    8001546c:	e82a                	sd	a0,16(sp)
    }
    8001546e:	70a2                	ld	ra,40(sp)
    80015470:	6145                	addi	sp,sp,48
    80015472:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h9979a0ee59f68f24E:

0000000080015474 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h9979a0ee59f68f24E>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    80015474:	7179                	addi	sp,sp,-48
    80015476:	f406                	sd	ra,40(sp)
    80015478:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    8001547a:	fffed097          	auipc	ra,0xfffed
    8001547e:	9fa080e7          	jalr	-1542(ra) # 80001e74 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h21adf75b002a4242E>
    80015482:	e42a                	sd	a0,8(sp)
    80015484:	a009                	j	80015486 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h9979a0ee59f68f24E+0x12>
    80015486:	6522                	ld	a0,8(sp)
    80015488:	e82a                	sd	a0,16(sp)
    }
    8001548a:	70a2                	ld	ra,40(sp)
    8001548c:	6145                	addi	sp,sp,48
    8001548e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hfcf2a593efdf2bb0E:

0000000080015490 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hfcf2a593efdf2bb0E>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    80015490:	7179                	addi	sp,sp,-48
    80015492:	f406                	sd	ra,40(sp)
    80015494:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    80015496:	fffed097          	auipc	ra,0xfffed
    8001549a:	a42080e7          	jalr	-1470(ra) # 80001ed8 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17heee931e2ec7501e7E>
    8001549e:	e42a                	sd	a0,8(sp)
    800154a0:	a009                	j	800154a2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hfcf2a593efdf2bb0E+0x12>
    800154a2:	6522                	ld	a0,8(sp)
    800154a4:	e82a                	sd	a0,16(sp)
    }
    800154a6:	70a2                	ld	ra,40(sp)
    800154a8:	6145                	addi	sp,sp,48
    800154aa:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hff128a703f6ffb3fE:

00000000800154ac <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hff128a703f6ffb3fE>:
    pub unsafe fn from_raw_in(raw: *mut T, alloc: A) -> Self {
    800154ac:	7179                	addi	sp,sp,-48
    800154ae:	f406                	sd	ra,40(sp)
    800154b0:	ec2a                	sd	a0,24(sp)
        Box(unsafe { Unique::new_unchecked(raw) }, alloc)
    800154b2:	fffed097          	auipc	ra,0xfffed
    800154b6:	a12080e7          	jalr	-1518(ra) # 80001ec4 <_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hccef918f8b6125c8E>
    800154ba:	e42a                	sd	a0,8(sp)
    800154bc:	a009                	j	800154be <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hff128a703f6ffb3fE+0x12>
    800154be:	6522                	ld	a0,8(sp)
    800154c0:	e82a                	sd	a0,16(sp)
    }
    800154c2:	70a2                	ld	ra,40(sp)
    800154c4:	6145                	addi	sp,sp,48
    800154c6:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h18b6a3ebd1eecb44E:

00000000800154c8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h18b6a3ebd1eecb44E>:
        issue = "none",
        reason = "use `Box::leak(b).into()` or `Unique::from(Box::leak(b))` instead"
    )]
    #[inline]
    #[doc(hidden)]
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    800154c8:	7179                	addi	sp,sp,-48
    800154ca:	f406                	sd	ra,40(sp)
    800154cc:	e82a                	sd	a0,16(sp)
    800154ce:	0808                	addi	a0,sp,16
        // Box is recognized as a "unique pointer" by Stacked Borrows, but internally it is a
        // raw pointer for the type system. Turning it directly into a raw pointer would not be
        // recognized as "releasing" the unique pointer to permit aliased raw accesses,
        // so all raw pointer methods have to go through `Box::leak`. Turning *that* to a raw pointer
        // behaves correctly.
        let alloc = unsafe { ptr::read(&b.1) };
    800154d0:	ffffb097          	auipc	ra,0xffffb
    800154d4:	65a080e7          	jalr	1626(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    800154d8:	a009                	j	800154da <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h18b6a3ebd1eecb44E+0x12>
        (Unique::from(Box::leak(b)), alloc)
    800154da:	6542                	ld	a0,16(sp)
    800154dc:	00001097          	auipc	ra,0x1
    800154e0:	844080e7          	jalr	-1980(ra) # 80015d20 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h71564a35db604a9aE>
    800154e4:	e42a                	sd	a0,8(sp)
    800154e6:	a009                	j	800154e8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h18b6a3ebd1eecb44E+0x20>
    800154e8:	6522                	ld	a0,8(sp)
    800154ea:	fffed097          	auipc	ra,0xfffed
    800154ee:	bce080e7          	jalr	-1074(ra) # 800020b8 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hfda33f9aa45effc8E>
    800154f2:	e02a                	sd	a0,0(sp)
    800154f4:	a009                	j	800154f6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h18b6a3ebd1eecb44E+0x2e>
    800154f6:	6502                	ld	a0,0(sp)
    800154f8:	ec2a                	sd	a0,24(sp)
    }
    800154fa:	70a2                	ld	ra,40(sp)
    800154fc:	6145                	addi	sp,sp,48
    800154fe:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h1e4452dec3826fd1E:

0000000080015500 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h1e4452dec3826fd1E>:
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    80015500:	7179                	addi	sp,sp,-48
    80015502:	f406                	sd	ra,40(sp)
    80015504:	e82a                	sd	a0,16(sp)
    80015506:	0808                	addi	a0,sp,16
        let alloc = unsafe { ptr::read(&b.1) };
    80015508:	ffffb097          	auipc	ra,0xffffb
    8001550c:	622080e7          	jalr	1570(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    80015510:	a009                	j	80015512 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h1e4452dec3826fd1E+0x12>
        (Unique::from(Box::leak(b)), alloc)
    80015512:	6542                	ld	a0,16(sp)
    80015514:	00001097          	auipc	ra,0x1
    80015518:	8c4080e7          	jalr	-1852(ra) # 80015dd8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb8ba5beb13b16d89E>
    8001551c:	e42a                	sd	a0,8(sp)
    8001551e:	a009                	j	80015520 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h1e4452dec3826fd1E+0x20>
    80015520:	6522                	ld	a0,8(sp)
    80015522:	fffed097          	auipc	ra,0xfffed
    80015526:	b78080e7          	jalr	-1160(ra) # 8000209a <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc2b9671993f6f790E>
    8001552a:	e02a                	sd	a0,0(sp)
    8001552c:	a009                	j	8001552e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h1e4452dec3826fd1E+0x2e>
    8001552e:	6502                	ld	a0,0(sp)
    80015530:	ec2a                	sd	a0,24(sp)
    }
    80015532:	70a2                	ld	ra,40(sp)
    80015534:	6145                	addi	sp,sp,48
    80015536:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h3eb2b19dfe5fac2eE:

0000000080015538 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h3eb2b19dfe5fac2eE>:
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    80015538:	7179                	addi	sp,sp,-48
    8001553a:	f406                	sd	ra,40(sp)
    8001553c:	e82a                	sd	a0,16(sp)
    8001553e:	0808                	addi	a0,sp,16
        let alloc = unsafe { ptr::read(&b.1) };
    80015540:	ffffb097          	auipc	ra,0xffffb
    80015544:	5ea080e7          	jalr	1514(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    80015548:	a009                	j	8001554a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h3eb2b19dfe5fac2eE+0x12>
        (Unique::from(Box::leak(b)), alloc)
    8001554a:	6542                	ld	a0,16(sp)
    8001554c:	00000097          	auipc	ra,0x0
    80015550:	7a6080e7          	jalr	1958(ra) # 80015cf2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h42ed1033945a6d02E>
    80015554:	e42a                	sd	a0,8(sp)
    80015556:	a009                	j	80015558 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h3eb2b19dfe5fac2eE+0x20>
    80015558:	6522                	ld	a0,8(sp)
    8001555a:	fffed097          	auipc	ra,0xfffed
    8001555e:	b36080e7          	jalr	-1226(ra) # 80002090 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hb0bac57ce42b758fE>
    80015562:	e02a                	sd	a0,0(sp)
    80015564:	a009                	j	80015566 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h3eb2b19dfe5fac2eE+0x2e>
    80015566:	6502                	ld	a0,0(sp)
    80015568:	ec2a                	sd	a0,24(sp)
    }
    8001556a:	70a2                	ld	ra,40(sp)
    8001556c:	6145                	addi	sp,sp,48
    8001556e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h84d7f3a1b5437865E:

0000000080015570 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h84d7f3a1b5437865E>:
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    80015570:	7179                	addi	sp,sp,-48
    80015572:	f406                	sd	ra,40(sp)
    80015574:	e82a                	sd	a0,16(sp)
    80015576:	0808                	addi	a0,sp,16
        let alloc = unsafe { ptr::read(&b.1) };
    80015578:	ffffb097          	auipc	ra,0xffffb
    8001557c:	5b2080e7          	jalr	1458(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    80015580:	a009                	j	80015582 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h84d7f3a1b5437865E+0x12>
        (Unique::from(Box::leak(b)), alloc)
    80015582:	6542                	ld	a0,16(sp)
    80015584:	00001097          	auipc	ra,0x1
    80015588:	8b0080e7          	jalr	-1872(ra) # 80015e34 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hfed59c3750890b7fE>
    8001558c:	e42a                	sd	a0,8(sp)
    8001558e:	a009                	j	80015590 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h84d7f3a1b5437865E+0x20>
    80015590:	6522                	ld	a0,8(sp)
    80015592:	fffed097          	auipc	ra,0xfffed
    80015596:	af4080e7          	jalr	-1292(ra) # 80002086 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h9edc2f33a0d276cbE>
    8001559a:	e02a                	sd	a0,0(sp)
    8001559c:	a009                	j	8001559e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h84d7f3a1b5437865E+0x2e>
    8001559e:	6502                	ld	a0,0(sp)
    800155a0:	ec2a                	sd	a0,24(sp)
    }
    800155a2:	70a2                	ld	ra,40(sp)
    800155a4:	6145                	addi	sp,sp,48
    800155a6:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17ha9af285512c80f2cE:

00000000800155a8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17ha9af285512c80f2cE>:
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    800155a8:	7179                	addi	sp,sp,-48
    800155aa:	f406                	sd	ra,40(sp)
    800155ac:	e82a                	sd	a0,16(sp)
    800155ae:	0808                	addi	a0,sp,16
        let alloc = unsafe { ptr::read(&b.1) };
    800155b0:	ffffb097          	auipc	ra,0xffffb
    800155b4:	57a080e7          	jalr	1402(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    800155b8:	a009                	j	800155ba <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17ha9af285512c80f2cE+0x12>
        (Unique::from(Box::leak(b)), alloc)
    800155ba:	6542                	ld	a0,16(sp)
    800155bc:	00001097          	auipc	ra,0x1
    800155c0:	8a6080e7          	jalr	-1882(ra) # 80015e62 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hff51e5a153ccafaeE>
    800155c4:	e42a                	sd	a0,8(sp)
    800155c6:	a009                	j	800155c8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17ha9af285512c80f2cE+0x20>
    800155c8:	6522                	ld	a0,8(sp)
    800155ca:	fffed097          	auipc	ra,0xfffed
    800155ce:	aa8080e7          	jalr	-1368(ra) # 80002072 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h006907329984ac95E>
    800155d2:	e02a                	sd	a0,0(sp)
    800155d4:	a009                	j	800155d6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17ha9af285512c80f2cE+0x2e>
    800155d6:	6502                	ld	a0,0(sp)
    800155d8:	ec2a                	sd	a0,24(sp)
    }
    800155da:	70a2                	ld	ra,40(sp)
    800155dc:	6145                	addi	sp,sp,48
    800155de:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hcd8ba2ca8298babfE:

00000000800155e0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hcd8ba2ca8298babfE>:
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    800155e0:	7179                	addi	sp,sp,-48
    800155e2:	f406                	sd	ra,40(sp)
    800155e4:	e82a                	sd	a0,16(sp)
    800155e6:	0808                	addi	a0,sp,16
        let alloc = unsafe { ptr::read(&b.1) };
    800155e8:	ffffb097          	auipc	ra,0xffffb
    800155ec:	542080e7          	jalr	1346(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    800155f0:	a009                	j	800155f2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hcd8ba2ca8298babfE+0x12>
        (Unique::from(Box::leak(b)), alloc)
    800155f2:	6542                	ld	a0,16(sp)
    800155f4:	00000097          	auipc	ra,0x0
    800155f8:	75a080e7          	jalr	1882(ra) # 80015d4e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h763664c044a5c4a4E>
    800155fc:	e42a                	sd	a0,8(sp)
    800155fe:	a009                	j	80015600 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hcd8ba2ca8298babfE+0x20>
    80015600:	6522                	ld	a0,8(sp)
    80015602:	fffed097          	auipc	ra,0xfffed
    80015606:	a7a080e7          	jalr	-1414(ra) # 8000207c <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h51d1f1221f20c5f4E>
    8001560a:	e02a                	sd	a0,0(sp)
    8001560c:	a009                	j	8001560e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hcd8ba2ca8298babfE+0x2e>
    8001560e:	6502                	ld	a0,0(sp)
    80015610:	ec2a                	sd	a0,24(sp)
    }
    80015612:	70a2                	ld	ra,40(sp)
    80015614:	6145                	addi	sp,sp,48
    80015616:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe0e7fcc4eef0502E:

0000000080015618 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe0e7fcc4eef0502E>:
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    80015618:	7179                	addi	sp,sp,-48
    8001561a:	f406                	sd	ra,40(sp)
    8001561c:	e82a                	sd	a0,16(sp)
    8001561e:	0808                	addi	a0,sp,16
        let alloc = unsafe { ptr::read(&b.1) };
    80015620:	ffffb097          	auipc	ra,0xffffb
    80015624:	50a080e7          	jalr	1290(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    80015628:	a009                	j	8001562a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe0e7fcc4eef0502E+0x12>
        (Unique::from(Box::leak(b)), alloc)
    8001562a:	6542                	ld	a0,16(sp)
    8001562c:	00000097          	auipc	ra,0x0
    80015630:	77e080e7          	jalr	1918(ra) # 80015daa <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8e2dd8dfb9eba303E>
    80015634:	e42a                	sd	a0,8(sp)
    80015636:	a009                	j	80015638 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe0e7fcc4eef0502E+0x20>
    80015638:	6522                	ld	a0,8(sp)
    8001563a:	fffed097          	auipc	ra,0xfffed
    8001563e:	a6a080e7          	jalr	-1430(ra) # 800020a4 <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc4659dfa449ae3d8E>
    80015642:	e02a                	sd	a0,0(sp)
    80015644:	a009                	j	80015646 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe0e7fcc4eef0502E+0x2e>
    80015646:	6502                	ld	a0,0(sp)
    80015648:	ec2a                	sd	a0,24(sp)
    }
    8001564a:	70a2                	ld	ra,40(sp)
    8001564c:	6145                	addi	sp,sp,48
    8001564e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe4d35d711a1aa7fE:

0000000080015650 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe4d35d711a1aa7fE>:
    pub fn into_unique(b: Self) -> (Unique<T>, A) {
    80015650:	7179                	addi	sp,sp,-48
    80015652:	f406                	sd	ra,40(sp)
    80015654:	e82a                	sd	a0,16(sp)
    80015656:	0808                	addi	a0,sp,16
        let alloc = unsafe { ptr::read(&b.1) };
    80015658:	ffffb097          	auipc	ra,0xffffb
    8001565c:	4d2080e7          	jalr	1234(ra) # 80010b2a <_ZN4core3ptr4read17hb4af9e96b19a35dcE>
    80015660:	a009                	j	80015662 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe4d35d711a1aa7fE+0x12>
        (Unique::from(Box::leak(b)), alloc)
    80015662:	6542                	ld	a0,16(sp)
    80015664:	00000097          	auipc	ra,0x0
    80015668:	718080e7          	jalr	1816(ra) # 80015d7c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8c8714436929026aE>
    8001566c:	e42a                	sd	a0,8(sp)
    8001566e:	a009                	j	80015670 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe4d35d711a1aa7fE+0x20>
    80015670:	6522                	ld	a0,8(sp)
    80015672:	fffed097          	auipc	ra,0xfffed
    80015676:	a3c080e7          	jalr	-1476(ra) # 800020ae <_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hf0a72ea7b4162721E>
    8001567a:	e02a                	sd	a0,0(sp)
    8001567c:	a009                	j	8001567e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe4d35d711a1aa7fE+0x2e>
    8001567e:	6502                	ld	a0,0(sp)
    80015680:	ec2a                	sd	a0,24(sp)
    }
    80015682:	70a2                	ld	ra,40(sp)
    80015684:	6145                	addi	sp,sp,48
    80015686:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h3b47f6b8da927f65E:

0000000080015688 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h3b47f6b8da927f65E>:
    pub fn new_zeroed_in(alloc: A) -> Box<mem::MaybeUninit<T>, A> {
    80015688:	7139                	addi	sp,sp,-64
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    8001568a:	fc06                	sd	ra,56(sp)
    8001568c:	ffffc097          	auipc	ra,0xffffc
    80015690:	160080e7          	jalr	352(ra) # 800117ec <_ZN4core5alloc6layout6Layout3new17h937433faac0c0e4bE>
    80015694:	ec2a                	sd	a0,24(sp)
    80015696:	f02e                	sd	a1,32(sp)
    80015698:	a009                	j	8001569a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h3b47f6b8da927f65E+0x12>
        Box::try_new_zeroed_in(alloc).unwrap_or_else(|_| handle_alloc_error(layout))
    8001569a:	00000097          	auipc	ra,0x0
    8001569e:	3a0080e7          	jalr	928(ra) # 80015a3a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E>
    800156a2:	e82a                	sd	a0,16(sp)
    800156a4:	a009                	j	800156a6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h3b47f6b8da927f65E+0x1e>
    800156a6:	0828                	addi	a0,sp,24
    800156a8:	f42a                	sd	a0,40(sp)
    800156aa:	65c2                	ld	a1,16(sp)
    800156ac:	e42a                	sd	a0,8(sp)
    800156ae:	852e                	mv	a0,a1
    800156b0:	65a2                	ld	a1,8(sp)
    800156b2:	ffff7097          	auipc	ra,0xffff7
    800156b6:	44e080e7          	jalr	1102(ra) # 8000cb00 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf406d5fb65be5af9E>
    800156ba:	e02a                	sd	a0,0(sp)
    800156bc:	a009                	j	800156be <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h3b47f6b8da927f65E+0x36>
    }
    800156be:	6502                	ld	a0,0(sp)
    800156c0:	70e2                	ld	ra,56(sp)
    800156c2:	6121                	addi	sp,sp,64
    800156c4:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h4d2eb44b6e280242E:

00000000800156c6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h4d2eb44b6e280242E>:
    pub fn new_zeroed_in(alloc: A) -> Box<mem::MaybeUninit<T>, A> {
    800156c6:	7139                	addi	sp,sp,-64
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    800156c8:	fc06                	sd	ra,56(sp)
    800156ca:	ffffc097          	auipc	ra,0xffffc
    800156ce:	0f0080e7          	jalr	240(ra) # 800117ba <_ZN4core5alloc6layout6Layout3new17h90cb498dbbc05244E>
    800156d2:	ec2a                	sd	a0,24(sp)
    800156d4:	f02e                	sd	a1,32(sp)
    800156d6:	a009                	j	800156d8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h4d2eb44b6e280242E+0x12>
        Box::try_new_zeroed_in(alloc).unwrap_or_else(|_| handle_alloc_error(layout))
    800156d8:	00000097          	auipc	ra,0x0
    800156dc:	2b6080e7          	jalr	694(ra) # 8001598e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E>
    800156e0:	e82a                	sd	a0,16(sp)
    800156e2:	a009                	j	800156e4 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h4d2eb44b6e280242E+0x1e>
    800156e4:	0828                	addi	a0,sp,24
    800156e6:	f42a                	sd	a0,40(sp)
    800156e8:	65c2                	ld	a1,16(sp)
    800156ea:	e42a                	sd	a0,8(sp)
    800156ec:	852e                	mv	a0,a1
    800156ee:	65a2                	ld	a1,8(sp)
    800156f0:	ffff7097          	auipc	ra,0xffff7
    800156f4:	3c0080e7          	jalr	960(ra) # 8000cab0 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf402fc65d9422a16E>
    800156f8:	e02a                	sd	a0,0(sp)
    800156fa:	a009                	j	800156fc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h4d2eb44b6e280242E+0x36>
    }
    800156fc:	6502                	ld	a0,0(sp)
    800156fe:	70e2                	ld	ra,56(sp)
    80015700:	6121                	addi	sp,sp,64
    80015702:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h8e90b560468c5f9cE:

0000000080015704 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h8e90b560468c5f9cE>:
    pub fn new_zeroed_in(alloc: A) -> Box<mem::MaybeUninit<T>, A> {
    80015704:	7139                	addi	sp,sp,-64
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    80015706:	fc06                	sd	ra,56(sp)
    80015708:	ffffc097          	auipc	ra,0xffffc
    8001570c:	080080e7          	jalr	128(ra) # 80011788 <_ZN4core5alloc6layout6Layout3new17h4d6fd3151d8c205dE>
    80015710:	ec2a                	sd	a0,24(sp)
    80015712:	f02e                	sd	a1,32(sp)
    80015714:	a009                	j	80015716 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h8e90b560468c5f9cE+0x12>
        Box::try_new_zeroed_in(alloc).unwrap_or_else(|_| handle_alloc_error(layout))
    80015716:	00000097          	auipc	ra,0x0
    8001571a:	1cc080e7          	jalr	460(ra) # 800158e2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE>
    8001571e:	e82a                	sd	a0,16(sp)
    80015720:	a009                	j	80015722 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h8e90b560468c5f9cE+0x1e>
    80015722:	0828                	addi	a0,sp,24
    80015724:	f42a                	sd	a0,40(sp)
    80015726:	65c2                	ld	a1,16(sp)
    80015728:	e42a                	sd	a0,8(sp)
    8001572a:	852e                	mv	a0,a1
    8001572c:	65a2                	ld	a1,8(sp)
    8001572e:	ffff7097          	auipc	ra,0xffff7
    80015732:	2e2080e7          	jalr	738(ra) # 8000ca10 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h688483bcef04095aE>
    80015736:	e02a                	sd	a0,0(sp)
    80015738:	a009                	j	8001573a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h8e90b560468c5f9cE+0x36>
    }
    8001573a:	6502                	ld	a0,0(sp)
    8001573c:	70e2                	ld	ra,56(sp)
    8001573e:	6121                	addi	sp,sp,64
    80015740:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h948336e67d6a2d37E:

0000000080015742 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h948336e67d6a2d37E>:
    pub fn new_zeroed_in(alloc: A) -> Box<mem::MaybeUninit<T>, A> {
    80015742:	7139                	addi	sp,sp,-64
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    80015744:	fc06                	sd	ra,56(sp)
    80015746:	ffffc097          	auipc	ra,0xffffc
    8001574a:	0d8080e7          	jalr	216(ra) # 8001181e <_ZN4core5alloc6layout6Layout3new17ha94e6a9a6b8e6a14E>
    8001574e:	ec2a                	sd	a0,24(sp)
    80015750:	f02e                	sd	a1,32(sp)
    80015752:	a009                	j	80015754 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h948336e67d6a2d37E+0x12>
        Box::try_new_zeroed_in(alloc).unwrap_or_else(|_| handle_alloc_error(layout))
    80015754:	00000097          	auipc	ra,0x0
    80015758:	0e2080e7          	jalr	226(ra) # 80015836 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE>
    8001575c:	e82a                	sd	a0,16(sp)
    8001575e:	a009                	j	80015760 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h948336e67d6a2d37E+0x1e>
    80015760:	0828                	addi	a0,sp,24
    80015762:	f42a                	sd	a0,40(sp)
    80015764:	65c2                	ld	a1,16(sp)
    80015766:	e42a                	sd	a0,8(sp)
    80015768:	852e                	mv	a0,a1
    8001576a:	65a2                	ld	a1,8(sp)
    8001576c:	ffff7097          	auipc	ra,0xffff7
    80015770:	3e4080e7          	jalr	996(ra) # 8000cb50 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hf80dc5651a421aa1E>
    80015774:	e02a                	sd	a0,0(sp)
    80015776:	a009                	j	80015778 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17h948336e67d6a2d37E+0x36>
    }
    80015778:	6502                	ld	a0,0(sp)
    8001577a:	70e2                	ld	ra,56(sp)
    8001577c:	6121                	addi	sp,sp,64
    8001577e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17hde36d7c4a0f92086E:

0000000080015780 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17hde36d7c4a0f92086E>:
    pub fn new_zeroed_in(alloc: A) -> Box<mem::MaybeUninit<T>, A> {
    80015780:	7139                	addi	sp,sp,-64
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    80015782:	fc06                	sd	ra,56(sp)
    80015784:	ffffc097          	auipc	ra,0xffffc
    80015788:	fa0080e7          	jalr	-96(ra) # 80011724 <_ZN4core5alloc6layout6Layout3new17h256ad32e6849cdb3E>
    8001578c:	ec2a                	sd	a0,24(sp)
    8001578e:	f02e                	sd	a1,32(sp)
    80015790:	a009                	j	80015792 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17hde36d7c4a0f92086E+0x12>
        Box::try_new_zeroed_in(alloc).unwrap_or_else(|_| handle_alloc_error(layout))
    80015792:	00000097          	auipc	ra,0x0
    80015796:	354080e7          	jalr	852(ra) # 80015ae6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E>
    8001579a:	e82a                	sd	a0,16(sp)
    8001579c:	a009                	j	8001579e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17hde36d7c4a0f92086E+0x1e>
    8001579e:	0828                	addi	a0,sp,24
    800157a0:	f42a                	sd	a0,40(sp)
    800157a2:	65c2                	ld	a1,16(sp)
    800157a4:	e42a                	sd	a0,8(sp)
    800157a6:	852e                	mv	a0,a1
    800157a8:	65a2                	ld	a1,8(sp)
    800157aa:	ffff7097          	auipc	ra,0xffff7
    800157ae:	2b6080e7          	jalr	694(ra) # 8000ca60 <_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17ha799e96be1e35e96E>
    800157b2:	e02a                	sd	a0,0(sp)
    800157b4:	a009                	j	800157b6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in17hde36d7c4a0f92086E+0x36>
    }
    800157b6:	6502                	ld	a0,0(sp)
    800157b8:	70e2                	ld	ra,56(sp)
    800157ba:	6121                	addi	sp,sp,64
    800157bc:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h0ff512ccf5d61bf0E:

00000000800157be <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h0ff512ccf5d61bf0E>:
        Box::try_new_zeroed_in(alloc).unwrap_or_else(|_| handle_alloc_error(layout))
    800157be:	1101                	addi	sp,sp,-32
    800157c0:	e82a                	sd	a0,16(sp)
    800157c2:	610c                	ld	a1,0(a0)
    800157c4:	6508                	ld	a0,8(a0)
    800157c6:	e42a                	sd	a0,8(sp)
    800157c8:	852e                	mv	a0,a1
    800157ca:	65a2                	ld	a1,8(sp)
    800157cc:	0000b097          	auipc	ra,0xb
    800157d0:	2b2080e7          	jalr	690(ra) # 80020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>
	...

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h1f4a7daa74a2f080E:

00000000800157d6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h1f4a7daa74a2f080E>:
    800157d6:	1101                	addi	sp,sp,-32
    800157d8:	e82a                	sd	a0,16(sp)
    800157da:	610c                	ld	a1,0(a0)
    800157dc:	6508                	ld	a0,8(a0)
    800157de:	e42a                	sd	a0,8(sp)
    800157e0:	852e                	mv	a0,a1
    800157e2:	65a2                	ld	a1,8(sp)
    800157e4:	0000b097          	auipc	ra,0xb
    800157e8:	29a080e7          	jalr	666(ra) # 80020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>
	...

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h26b91424e8191b6eE:

00000000800157ee <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17h26b91424e8191b6eE>:
    800157ee:	1101                	addi	sp,sp,-32
    800157f0:	e82a                	sd	a0,16(sp)
    800157f2:	610c                	ld	a1,0(a0)
    800157f4:	6508                	ld	a0,8(a0)
    800157f6:	e42a                	sd	a0,8(sp)
    800157f8:	852e                	mv	a0,a1
    800157fa:	65a2                	ld	a1,8(sp)
    800157fc:	0000b097          	auipc	ra,0xb
    80015800:	282080e7          	jalr	642(ra) # 80020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>
	...

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17heb429d49ac53f6cbE:

0000000080015806 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17heb429d49ac53f6cbE>:
    80015806:	1101                	addi	sp,sp,-32
    80015808:	e82a                	sd	a0,16(sp)
    8001580a:	610c                	ld	a1,0(a0)
    8001580c:	6508                	ld	a0,8(a0)
    8001580e:	e42a                	sd	a0,8(sp)
    80015810:	852e                	mv	a0,a1
    80015812:	65a2                	ld	a1,8(sp)
    80015814:	0000b097          	auipc	ra,0xb
    80015818:	26a080e7          	jalr	618(ra) # 80020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>
	...

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17heeb6330ea6c582bbE:

000000008001581e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$13new_zeroed_in28_$u7b$$u7b$closure$u7d$$u7d$17heeb6330ea6c582bbE>:
    8001581e:	1101                	addi	sp,sp,-32
    80015820:	e82a                	sd	a0,16(sp)
    80015822:	610c                	ld	a1,0(a0)
    80015824:	6508                	ld	a0,8(a0)
    80015826:	e42a                	sd	a0,8(sp)
    80015828:	852e                	mv	a0,a1
    8001582a:	65a2                	ld	a1,8(sp)
    8001582c:	0000b097          	auipc	ra,0xb
    80015830:	252080e7          	jalr	594(ra) # 80020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>
	...

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE:

0000000080015836 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE>:
    pub fn try_new_zeroed_in(alloc: A) -> Result<Box<mem::MaybeUninit<T>, A>, AllocError> {
    80015836:	7175                	addi	sp,sp,-144
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    80015838:	e506                	sd	ra,136(sp)
    8001583a:	ffffc097          	auipc	ra,0xffffc
    8001583e:	fe4080e7          	jalr	-28(ra) # 8001181e <_ZN4core5alloc6layout6Layout3new17ha94e6a9a6b8e6a14E>
    80015842:	862a                	mv	a2,a0
    80015844:	86ae                	mv	a3,a1
    80015846:	f0aa                	sd	a0,96(sp)
    80015848:	f4ae                	sd	a1,104(sp)
    8001584a:	f832                	sd	a2,48(sp)
    8001584c:	f436                	sd	a3,40(sp)
    8001584e:	a009                	j	80015850 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x1a>
    80015850:	1828                	addi	a0,sp,56
        let ptr = alloc.allocate_zeroed(layout)?.cast();
    80015852:	75c2                	ld	a1,48(sp)
    80015854:	7622                	ld	a2,40(sp)
    80015856:	ffff2097          	auipc	ra,0xffff2
    8001585a:	fa2080e7          	jalr	-94(ra) # 800077f8 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E>
    8001585e:	f02a                	sd	a0,32(sp)
    80015860:	ec2e                	sd	a1,24(sp)
    80015862:	a009                	j	80015864 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x2e>
    80015864:	7502                	ld	a0,32(sp)
    80015866:	65e2                	ld	a1,24(sp)
    80015868:	ffff7097          	auipc	ra,0xffff7
    8001586c:	6a6080e7          	jalr	1702(ra) # 8000cf0e <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9ba69d212640d350E>
    80015870:	e4aa                	sd	a0,72(sp)
    80015872:	e8ae                	sd	a1,80(sp)
    80015874:	a009                	j	80015876 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x40>
    80015876:	6526                	ld	a0,72(sp)
    80015878:	00153593          	seqz	a1,a0
    8001587c:	4601                	li	a2,0
    8001587e:	00c51463          	bne	a0,a2,80015886 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x50>
    80015882:	a009                	j	80015884 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x4e>
    80015884:	a831                	j	800158a0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x6a>
    80015886:	6526                	ld	a0,72(sp)
    80015888:	65c6                	ld	a1,80(sp)
    8001588a:	f8aa                	sd	a0,112(sp)
    8001588c:	fcae                	sd	a1,120(sp)
    8001588e:	fffef097          	auipc	ra,0xfffef
    80015892:	342080e7          	jalr	834(ra) # 80004bd0 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h626b2b0237b6be84E>
    80015896:	85aa                	mv	a1,a0
    80015898:	e12a                	sd	a0,128(sp)
    8001589a:	e82e                	sd	a1,16(sp)
    8001589c:	a831                	j	800158b8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x82>
    8001589e:	0000                	unimp
    800158a0:	00004097          	auipc	ra,0x4
    800158a4:	924080e7          	jalr	-1756(ra) # 800191c4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E>
    800158a8:	a009                	j	800158aa <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x74>
    800158aa:	ffff7097          	auipc	ra,0xffff7
    800158ae:	600080e7          	jalr	1536(ra) # 8000ceaa <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9786450190e97da3E>
    800158b2:	e0aa                	sd	a0,64(sp)
    800158b4:	a009                	j	800158b6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x80>
    }
    800158b6:	a015                	j	800158da <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0xa4>
        unsafe { Ok(Box::from_raw_in(ptr.as_ptr(), alloc)) }
    800158b8:	6542                	ld	a0,16(sp)
    800158ba:	fffef097          	auipc	ra,0xfffef
    800158be:	434080e7          	jalr	1076(ra) # 80004cee <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd6bc9c323a33c637E>
    800158c2:	e42a                	sd	a0,8(sp)
    800158c4:	a009                	j	800158c6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x90>
    800158c6:	6522                	ld	a0,8(sp)
    800158c8:	00000097          	auipc	ra,0x0
    800158cc:	b74080e7          	jalr	-1164(ra) # 8001543c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h7e7d496197924dd9E>
    800158d0:	e02a                	sd	a0,0(sp)
    800158d2:	a009                	j	800158d4 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0x9e>
    800158d4:	6502                	ld	a0,0(sp)
    800158d6:	e0aa                	sd	a0,64(sp)
    }
    800158d8:	a009                	j	800158da <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17h7076456e34f6ec9bE+0xa4>
    800158da:	6506                	ld	a0,64(sp)
    800158dc:	60aa                	ld	ra,136(sp)
    800158de:	6149                	addi	sp,sp,144
    800158e0:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE:

00000000800158e2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE>:
    pub fn try_new_zeroed_in(alloc: A) -> Result<Box<mem::MaybeUninit<T>, A>, AllocError> {
    800158e2:	7175                	addi	sp,sp,-144
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    800158e4:	e506                	sd	ra,136(sp)
    800158e6:	ffffc097          	auipc	ra,0xffffc
    800158ea:	ea2080e7          	jalr	-350(ra) # 80011788 <_ZN4core5alloc6layout6Layout3new17h4d6fd3151d8c205dE>
    800158ee:	862a                	mv	a2,a0
    800158f0:	86ae                	mv	a3,a1
    800158f2:	f0aa                	sd	a0,96(sp)
    800158f4:	f4ae                	sd	a1,104(sp)
    800158f6:	f832                	sd	a2,48(sp)
    800158f8:	f436                	sd	a3,40(sp)
    800158fa:	a009                	j	800158fc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x1a>
    800158fc:	1828                	addi	a0,sp,56
        let ptr = alloc.allocate_zeroed(layout)?.cast();
    800158fe:	75c2                	ld	a1,48(sp)
    80015900:	7622                	ld	a2,40(sp)
    80015902:	ffff2097          	auipc	ra,0xffff2
    80015906:	ef6080e7          	jalr	-266(ra) # 800077f8 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E>
    8001590a:	f02a                	sd	a0,32(sp)
    8001590c:	ec2e                	sd	a1,24(sp)
    8001590e:	a009                	j	80015910 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x2e>
    80015910:	7502                	ld	a0,32(sp)
    80015912:	65e2                	ld	a1,24(sp)
    80015914:	ffff7097          	auipc	ra,0xffff7
    80015918:	5fa080e7          	jalr	1530(ra) # 8000cf0e <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9ba69d212640d350E>
    8001591c:	e4aa                	sd	a0,72(sp)
    8001591e:	e8ae                	sd	a1,80(sp)
    80015920:	a009                	j	80015922 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x40>
    80015922:	6526                	ld	a0,72(sp)
    80015924:	00153593          	seqz	a1,a0
    80015928:	4601                	li	a2,0
    8001592a:	00c51463          	bne	a0,a2,80015932 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x50>
    8001592e:	a009                	j	80015930 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x4e>
    80015930:	a831                	j	8001594c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x6a>
    80015932:	6526                	ld	a0,72(sp)
    80015934:	65c6                	ld	a1,80(sp)
    80015936:	f8aa                	sd	a0,112(sp)
    80015938:	fcae                	sd	a1,120(sp)
    8001593a:	fffef097          	auipc	ra,0xfffef
    8001593e:	2c0080e7          	jalr	704(ra) # 80004bfa <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h95dd4caf3038a0f9E>
    80015942:	85aa                	mv	a1,a0
    80015944:	e12a                	sd	a0,128(sp)
    80015946:	e82e                	sd	a1,16(sp)
    80015948:	a831                	j	80015964 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x82>
    8001594a:	0000                	unimp
    8001594c:	00004097          	auipc	ra,0x4
    80015950:	878080e7          	jalr	-1928(ra) # 800191c4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E>
    80015954:	a009                	j	80015956 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x74>
    80015956:	ffff7097          	auipc	ra,0xffff7
    8001595a:	568080e7          	jalr	1384(ra) # 8000cebe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17he0f71f099a2cce66E>
    8001595e:	e0aa                	sd	a0,64(sp)
    80015960:	a009                	j	80015962 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x80>
    }
    80015962:	a015                	j	80015986 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0xa4>
        unsafe { Ok(Box::from_raw_in(ptr.as_ptr(), alloc)) }
    80015964:	6542                	ld	a0,16(sp)
    80015966:	fffef097          	auipc	ra,0xfffef
    8001596a:	376080e7          	jalr	886(ra) # 80004cdc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h88bde10dec68c78aE>
    8001596e:	e42a                	sd	a0,8(sp)
    80015970:	a009                	j	80015972 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x90>
    80015972:	6522                	ld	a0,8(sp)
    80015974:	00000097          	auipc	ra,0x0
    80015978:	ae4080e7          	jalr	-1308(ra) # 80015458 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h888d2ca99bd9146aE>
    8001597c:	e02a                	sd	a0,0(sp)
    8001597e:	a009                	j	80015980 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0x9e>
    80015980:	6502                	ld	a0,0(sp)
    80015982:	e0aa                	sd	a0,64(sp)
    }
    80015984:	a009                	j	80015986 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hab15afb3bf5b604dE+0xa4>
    80015986:	6506                	ld	a0,64(sp)
    80015988:	60aa                	ld	ra,136(sp)
    8001598a:	6149                	addi	sp,sp,144
    8001598c:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E:

000000008001598e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E>:
    pub fn try_new_zeroed_in(alloc: A) -> Result<Box<mem::MaybeUninit<T>, A>, AllocError> {
    8001598e:	7175                	addi	sp,sp,-144
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    80015990:	e506                	sd	ra,136(sp)
    80015992:	ffffc097          	auipc	ra,0xffffc
    80015996:	e28080e7          	jalr	-472(ra) # 800117ba <_ZN4core5alloc6layout6Layout3new17h90cb498dbbc05244E>
    8001599a:	862a                	mv	a2,a0
    8001599c:	86ae                	mv	a3,a1
    8001599e:	f0aa                	sd	a0,96(sp)
    800159a0:	f4ae                	sd	a1,104(sp)
    800159a2:	f832                	sd	a2,48(sp)
    800159a4:	f436                	sd	a3,40(sp)
    800159a6:	a009                	j	800159a8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x1a>
    800159a8:	1828                	addi	a0,sp,56
        let ptr = alloc.allocate_zeroed(layout)?.cast();
    800159aa:	75c2                	ld	a1,48(sp)
    800159ac:	7622                	ld	a2,40(sp)
    800159ae:	ffff2097          	auipc	ra,0xffff2
    800159b2:	e4a080e7          	jalr	-438(ra) # 800077f8 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E>
    800159b6:	f02a                	sd	a0,32(sp)
    800159b8:	ec2e                	sd	a1,24(sp)
    800159ba:	a009                	j	800159bc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x2e>
    800159bc:	7502                	ld	a0,32(sp)
    800159be:	65e2                	ld	a1,24(sp)
    800159c0:	ffff7097          	auipc	ra,0xffff7
    800159c4:	54e080e7          	jalr	1358(ra) # 8000cf0e <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9ba69d212640d350E>
    800159c8:	e4aa                	sd	a0,72(sp)
    800159ca:	e8ae                	sd	a1,80(sp)
    800159cc:	a009                	j	800159ce <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x40>
    800159ce:	6526                	ld	a0,72(sp)
    800159d0:	00153593          	seqz	a1,a0
    800159d4:	4601                	li	a2,0
    800159d6:	00c51463          	bne	a0,a2,800159de <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x50>
    800159da:	a009                	j	800159dc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x4e>
    800159dc:	a831                	j	800159f8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x6a>
    800159de:	6526                	ld	a0,72(sp)
    800159e0:	65c6                	ld	a1,80(sp)
    800159e2:	f8aa                	sd	a0,112(sp)
    800159e4:	fcae                	sd	a1,120(sp)
    800159e6:	fffef097          	auipc	ra,0xfffef
    800159ea:	196080e7          	jalr	406(ra) # 80004b7c <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h428793c312ca8478E>
    800159ee:	85aa                	mv	a1,a0
    800159f0:	e12a                	sd	a0,128(sp)
    800159f2:	e82e                	sd	a1,16(sp)
    800159f4:	a831                	j	80015a10 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x82>
    800159f6:	0000                	unimp
    800159f8:	00003097          	auipc	ra,0x3
    800159fc:	7cc080e7          	jalr	1996(ra) # 800191c4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E>
    80015a00:	a009                	j	80015a02 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x74>
    80015a02:	ffff7097          	auipc	ra,0xffff7
    80015a06:	450080e7          	jalr	1104(ra) # 8000ce52 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h358646dce9bdcb30E>
    80015a0a:	e0aa                	sd	a0,64(sp)
    80015a0c:	a009                	j	80015a0e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x80>
    }
    80015a0e:	a015                	j	80015a32 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0xa4>
        unsafe { Ok(Box::from_raw_in(ptr.as_ptr(), alloc)) }
    80015a10:	6542                	ld	a0,16(sp)
    80015a12:	fffef097          	auipc	ra,0xfffef
    80015a16:	292080e7          	jalr	658(ra) # 80004ca4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4d8ee9149c4302f4E>
    80015a1a:	e42a                	sd	a0,8(sp)
    80015a1c:	a009                	j	80015a1e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x90>
    80015a1e:	6522                	ld	a0,8(sp)
    80015a20:	00000097          	auipc	ra,0x0
    80015a24:	9c8080e7          	jalr	-1592(ra) # 800153e8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c19b825ce0218b0E>
    80015a28:	e02a                	sd	a0,0(sp)
    80015a2a:	a009                	j	80015a2c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0x9e>
    80015a2c:	6502                	ld	a0,0(sp)
    80015a2e:	e0aa                	sd	a0,64(sp)
    }
    80015a30:	a009                	j	80015a32 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hcbc5991e0b9bf9f3E+0xa4>
    80015a32:	6506                	ld	a0,64(sp)
    80015a34:	60aa                	ld	ra,136(sp)
    80015a36:	6149                	addi	sp,sp,144
    80015a38:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E:

0000000080015a3a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E>:
    pub fn try_new_zeroed_in(alloc: A) -> Result<Box<mem::MaybeUninit<T>, A>, AllocError> {
    80015a3a:	7175                	addi	sp,sp,-144
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    80015a3c:	e506                	sd	ra,136(sp)
    80015a3e:	ffffc097          	auipc	ra,0xffffc
    80015a42:	dae080e7          	jalr	-594(ra) # 800117ec <_ZN4core5alloc6layout6Layout3new17h937433faac0c0e4bE>
    80015a46:	862a                	mv	a2,a0
    80015a48:	86ae                	mv	a3,a1
    80015a4a:	f0aa                	sd	a0,96(sp)
    80015a4c:	f4ae                	sd	a1,104(sp)
    80015a4e:	f832                	sd	a2,48(sp)
    80015a50:	f436                	sd	a3,40(sp)
    80015a52:	a009                	j	80015a54 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x1a>
    80015a54:	1828                	addi	a0,sp,56
        let ptr = alloc.allocate_zeroed(layout)?.cast();
    80015a56:	75c2                	ld	a1,48(sp)
    80015a58:	7622                	ld	a2,40(sp)
    80015a5a:	ffff2097          	auipc	ra,0xffff2
    80015a5e:	d9e080e7          	jalr	-610(ra) # 800077f8 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E>
    80015a62:	f02a                	sd	a0,32(sp)
    80015a64:	ec2e                	sd	a1,24(sp)
    80015a66:	a009                	j	80015a68 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x2e>
    80015a68:	7502                	ld	a0,32(sp)
    80015a6a:	65e2                	ld	a1,24(sp)
    80015a6c:	ffff7097          	auipc	ra,0xffff7
    80015a70:	4a2080e7          	jalr	1186(ra) # 8000cf0e <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9ba69d212640d350E>
    80015a74:	e4aa                	sd	a0,72(sp)
    80015a76:	e8ae                	sd	a1,80(sp)
    80015a78:	a009                	j	80015a7a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x40>
    80015a7a:	6526                	ld	a0,72(sp)
    80015a7c:	00153593          	seqz	a1,a0
    80015a80:	4601                	li	a2,0
    80015a82:	00c51463          	bne	a0,a2,80015a8a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x50>
    80015a86:	a009                	j	80015a88 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x4e>
    80015a88:	a831                	j	80015aa4 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x6a>
    80015a8a:	6526                	ld	a0,72(sp)
    80015a8c:	65c6                	ld	a1,80(sp)
    80015a8e:	f8aa                	sd	a0,112(sp)
    80015a90:	fcae                	sd	a1,120(sp)
    80015a92:	fffef097          	auipc	ra,0xfffef
    80015a96:	1bc080e7          	jalr	444(ra) # 80004c4e <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe7bb7c4d45f4f92E>
    80015a9a:	85aa                	mv	a1,a0
    80015a9c:	e12a                	sd	a0,128(sp)
    80015a9e:	e82e                	sd	a1,16(sp)
    80015aa0:	a831                	j	80015abc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x82>
    80015aa2:	0000                	unimp
    80015aa4:	00003097          	auipc	ra,0x3
    80015aa8:	720080e7          	jalr	1824(ra) # 800191c4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E>
    80015aac:	a009                	j	80015aae <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x74>
    80015aae:	ffff7097          	auipc	ra,0xffff7
    80015ab2:	3ae080e7          	jalr	942(ra) # 8000ce5c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h3fe6642e3386bac9E>
    80015ab6:	e0aa                	sd	a0,64(sp)
    80015ab8:	a009                	j	80015aba <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x80>
    }
    80015aba:	a015                	j	80015ade <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0xa4>
        unsafe { Ok(Box::from_raw_in(ptr.as_ptr(), alloc)) }
    80015abc:	6542                	ld	a0,16(sp)
    80015abe:	fffef097          	auipc	ra,0xfffef
    80015ac2:	216080e7          	jalr	534(ra) # 80004cd4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7b3e78a0adc9da94E>
    80015ac6:	e42a                	sd	a0,8(sp)
    80015ac8:	a009                	j	80015aca <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x90>
    80015aca:	6522                	ld	a0,8(sp)
    80015acc:	00000097          	auipc	ra,0x0
    80015ad0:	9c4080e7          	jalr	-1596(ra) # 80015490 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hfcf2a593efdf2bb0E>
    80015ad4:	e02a                	sd	a0,0(sp)
    80015ad6:	a009                	j	80015ad8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0x9e>
    80015ad8:	6502                	ld	a0,0(sp)
    80015ada:	e0aa                	sd	a0,64(sp)
    }
    80015adc:	a009                	j	80015ade <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hdc7b21d4b8417671E+0xa4>
    80015ade:	6506                	ld	a0,64(sp)
    80015ae0:	60aa                	ld	ra,136(sp)
    80015ae2:	6149                	addi	sp,sp,144
    80015ae4:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E:

0000000080015ae6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E>:
    pub fn try_new_zeroed_in(alloc: A) -> Result<Box<mem::MaybeUninit<T>, A>, AllocError> {
    80015ae6:	7175                	addi	sp,sp,-144
        let layout = Layout::new::<mem::MaybeUninit<T>>();
    80015ae8:	e506                	sd	ra,136(sp)
    80015aea:	ffffc097          	auipc	ra,0xffffc
    80015aee:	c3a080e7          	jalr	-966(ra) # 80011724 <_ZN4core5alloc6layout6Layout3new17h256ad32e6849cdb3E>
    80015af2:	862a                	mv	a2,a0
    80015af4:	86ae                	mv	a3,a1
    80015af6:	f0aa                	sd	a0,96(sp)
    80015af8:	f4ae                	sd	a1,104(sp)
    80015afa:	f832                	sd	a2,48(sp)
    80015afc:	f436                	sd	a3,40(sp)
    80015afe:	a009                	j	80015b00 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x1a>
    80015b00:	1828                	addi	a0,sp,56
        let ptr = alloc.allocate_zeroed(layout)?.cast();
    80015b02:	75c2                	ld	a1,48(sp)
    80015b04:	7622                	ld	a2,40(sp)
    80015b06:	ffff2097          	auipc	ra,0xffff2
    80015b0a:	cf2080e7          	jalr	-782(ra) # 800077f8 <_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h3c99ac0b276b97c4E>
    80015b0e:	f02a                	sd	a0,32(sp)
    80015b10:	ec2e                	sd	a1,24(sp)
    80015b12:	a009                	j	80015b14 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x2e>
    80015b14:	7502                	ld	a0,32(sp)
    80015b16:	65e2                	ld	a1,24(sp)
    80015b18:	ffff7097          	auipc	ra,0xffff7
    80015b1c:	3f6080e7          	jalr	1014(ra) # 8000cf0e <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9ba69d212640d350E>
    80015b20:	e4aa                	sd	a0,72(sp)
    80015b22:	e8ae                	sd	a1,80(sp)
    80015b24:	a009                	j	80015b26 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x40>
    80015b26:	6526                	ld	a0,72(sp)
    80015b28:	00153593          	seqz	a1,a0
    80015b2c:	4601                	li	a2,0
    80015b2e:	00c51463          	bne	a0,a2,80015b36 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x50>
    80015b32:	a009                	j	80015b34 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x4e>
    80015b34:	a831                	j	80015b50 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x6a>
    80015b36:	6526                	ld	a0,72(sp)
    80015b38:	65c6                	ld	a1,80(sp)
    80015b3a:	f8aa                	sd	a0,112(sp)
    80015b3c:	fcae                	sd	a1,120(sp)
    80015b3e:	fffef097          	auipc	ra,0xfffef
    80015b42:	0e6080e7          	jalr	230(ra) # 80004c24 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb064ce68ef9b2e49E>
    80015b46:	85aa                	mv	a1,a0
    80015b48:	e12a                	sd	a0,128(sp)
    80015b4a:	e82e                	sd	a1,16(sp)
    80015b4c:	a831                	j	80015b68 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x82>
    80015b4e:	0000                	unimp
    80015b50:	00003097          	auipc	ra,0x3
    80015b54:	674080e7          	jalr	1652(ra) # 800191c4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E>
    80015b58:	a009                	j	80015b5a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x74>
    80015b5a:	ffff7097          	auipc	ra,0xffff7
    80015b5e:	35a080e7          	jalr	858(ra) # 8000ceb4 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd4049e353037300fE>
    80015b62:	e0aa                	sd	a0,64(sp)
    80015b64:	a009                	j	80015b66 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x80>
    }
    80015b66:	a015                	j	80015b8a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0xa4>
        unsafe { Ok(Box::from_raw_in(ptr.as_ptr(), alloc)) }
    80015b68:	6542                	ld	a0,16(sp)
    80015b6a:	fffef097          	auipc	ra,0xfffef
    80015b6e:	18c080e7          	jalr	396(ra) # 80004cf6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he7c69943ccdacf63E>
    80015b72:	e42a                	sd	a0,8(sp)
    80015b74:	a009                	j	80015b76 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x90>
    80015b76:	6522                	ld	a0,8(sp)
    80015b78:	00000097          	auipc	ra,0x0
    80015b7c:	934080e7          	jalr	-1740(ra) # 800154ac <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hff128a703f6ffb3fE>
    80015b80:	e02a                	sd	a0,0(sp)
    80015b82:	a009                	j	80015b84 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0x9e>
    80015b84:	6502                	ld	a0,0(sp)
    80015b86:	e0aa                	sd	a0,64(sp)
    }
    80015b88:	a009                	j	80015b8a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$17try_new_zeroed_in17hf93099c8834ab611E+0xa4>
    80015b8a:	6506                	ld	a0,64(sp)
    80015b8c:	60aa                	ld	ra,136(sp)
    80015b8e:	6149                	addi	sp,sp,144
    80015b90:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h3323540c40885d4fE:

0000000080015b92 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h3323540c40885d4fE>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015b92:	7139                	addi	sp,sp,-64
    80015b94:	fc06                	sd	ra,56(sp)
    80015b96:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015b98:	00000097          	auipc	ra,0x0
    80015b9c:	930080e7          	jalr	-1744(ra) # 800154c8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h18b6a3ebd1eecb44E>
    80015ba0:	e82a                	sd	a0,16(sp)
    80015ba2:	a009                	j	80015ba4 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h3323540c40885d4fE+0x12>
    80015ba4:	6542                	ld	a0,16(sp)
    80015ba6:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015ba8:	fffec097          	auipc	ra,0xfffec
    80015bac:	3f2080e7          	jalr	1010(ra) # 80001f9a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h48c57f5ee2020847E>
    80015bb0:	e42a                	sd	a0,8(sp)
    80015bb2:	a009                	j	80015bb4 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h3323540c40885d4fE+0x22>
    80015bb4:	6522                	ld	a0,8(sp)
    80015bb6:	ec2a                	sd	a0,24(sp)
    }
    80015bb8:	70e2                	ld	ra,56(sp)
    80015bba:	6121                	addi	sp,sp,64
    80015bbc:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h4a620900ed3435feE:

0000000080015bbe <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h4a620900ed3435feE>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015bbe:	7139                	addi	sp,sp,-64
    80015bc0:	fc06                	sd	ra,56(sp)
    80015bc2:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015bc4:	00000097          	auipc	ra,0x0
    80015bc8:	93c080e7          	jalr	-1732(ra) # 80015500 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h1e4452dec3826fd1E>
    80015bcc:	e82a                	sd	a0,16(sp)
    80015bce:	a009                	j	80015bd0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h4a620900ed3435feE+0x12>
    80015bd0:	6542                	ld	a0,16(sp)
    80015bd2:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015bd4:	fffec097          	auipc	ra,0xfffec
    80015bd8:	3d6080e7          	jalr	982(ra) # 80001faa <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6813dc49e09f1909E>
    80015bdc:	e42a                	sd	a0,8(sp)
    80015bde:	a009                	j	80015be0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h4a620900ed3435feE+0x22>
    80015be0:	6522                	ld	a0,8(sp)
    80015be2:	ec2a                	sd	a0,24(sp)
    }
    80015be4:	70e2                	ld	ra,56(sp)
    80015be6:	6121                	addi	sp,sp,64
    80015be8:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c224b19459301b4E:

0000000080015bea <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c224b19459301b4E>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015bea:	7139                	addi	sp,sp,-64
    80015bec:	fc06                	sd	ra,56(sp)
    80015bee:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015bf0:	00000097          	auipc	ra,0x0
    80015bf4:	a60080e7          	jalr	-1440(ra) # 80015650 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe4d35d711a1aa7fE>
    80015bf8:	e82a                	sd	a0,16(sp)
    80015bfa:	a009                	j	80015bfc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c224b19459301b4E+0x12>
    80015bfc:	6542                	ld	a0,16(sp)
    80015bfe:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015c00:	fffec097          	auipc	ra,0xfffec
    80015c04:	392080e7          	jalr	914(ra) # 80001f92 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h468cf24034a9739bE>
    80015c08:	e42a                	sd	a0,8(sp)
    80015c0a:	a009                	j	80015c0c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c224b19459301b4E+0x22>
    80015c0c:	6522                	ld	a0,8(sp)
    80015c0e:	ec2a                	sd	a0,24(sp)
    }
    80015c10:	70e2                	ld	ra,56(sp)
    80015c12:	6121                	addi	sp,sp,64
    80015c14:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hd2b30602d389b75cE:

0000000080015c16 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hd2b30602d389b75cE>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015c16:	7139                	addi	sp,sp,-64
    80015c18:	fc06                	sd	ra,56(sp)
    80015c1a:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015c1c:	00000097          	auipc	ra,0x0
    80015c20:	954080e7          	jalr	-1708(ra) # 80015570 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h84d7f3a1b5437865E>
    80015c24:	e82a                	sd	a0,16(sp)
    80015c26:	a009                	j	80015c28 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hd2b30602d389b75cE+0x12>
    80015c28:	6542                	ld	a0,16(sp)
    80015c2a:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015c2c:	fffec097          	auipc	ra,0xfffec
    80015c30:	376080e7          	jalr	886(ra) # 80001fa2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h56386e93ea326343E>
    80015c34:	e42a                	sd	a0,8(sp)
    80015c36:	a009                	j	80015c38 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hd2b30602d389b75cE+0x22>
    80015c38:	6522                	ld	a0,8(sp)
    80015c3a:	ec2a                	sd	a0,24(sp)
    }
    80015c3c:	70e2                	ld	ra,56(sp)
    80015c3e:	6121                	addi	sp,sp,64
    80015c40:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1537af45556d5d9E:

0000000080015c42 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1537af45556d5d9E>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015c42:	7139                	addi	sp,sp,-64
    80015c44:	fc06                	sd	ra,56(sp)
    80015c46:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015c48:	00000097          	auipc	ra,0x0
    80015c4c:	9d0080e7          	jalr	-1584(ra) # 80015618 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hfe0e7fcc4eef0502E>
    80015c50:	e82a                	sd	a0,16(sp)
    80015c52:	a009                	j	80015c54 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1537af45556d5d9E+0x12>
    80015c54:	6542                	ld	a0,16(sp)
    80015c56:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015c58:	fffec097          	auipc	ra,0xfffec
    80015c5c:	36a080e7          	jalr	874(ra) # 80001fc2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha9257223563d9ec5E>
    80015c60:	e42a                	sd	a0,8(sp)
    80015c62:	a009                	j	80015c64 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1537af45556d5d9E+0x22>
    80015c64:	6522                	ld	a0,8(sp)
    80015c66:	ec2a                	sd	a0,24(sp)
    }
    80015c68:	70e2                	ld	ra,56(sp)
    80015c6a:	6121                	addi	sp,sp,64
    80015c6c:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1e86542041063eeE:

0000000080015c6e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1e86542041063eeE>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015c6e:	7139                	addi	sp,sp,-64
    80015c70:	fc06                	sd	ra,56(sp)
    80015c72:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015c74:	00000097          	auipc	ra,0x0
    80015c78:	96c080e7          	jalr	-1684(ra) # 800155e0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hcd8ba2ca8298babfE>
    80015c7c:	e82a                	sd	a0,16(sp)
    80015c7e:	a009                	j	80015c80 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1e86542041063eeE+0x12>
    80015c80:	6542                	ld	a0,16(sp)
    80015c82:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015c84:	fffec097          	auipc	ra,0xfffec
    80015c88:	346080e7          	jalr	838(ra) # 80001fca <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdbbd95956b998284E>
    80015c8c:	e42a                	sd	a0,8(sp)
    80015c8e:	a009                	j	80015c90 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1e86542041063eeE+0x22>
    80015c90:	6522                	ld	a0,8(sp)
    80015c92:	ec2a                	sd	a0,24(sp)
    }
    80015c94:	70e2                	ld	ra,56(sp)
    80015c96:	6121                	addi	sp,sp,64
    80015c98:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he8a0f286e21fe70dE:

0000000080015c9a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he8a0f286e21fe70dE>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015c9a:	7139                	addi	sp,sp,-64
    80015c9c:	fc06                	sd	ra,56(sp)
    80015c9e:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015ca0:	00000097          	auipc	ra,0x0
    80015ca4:	908080e7          	jalr	-1784(ra) # 800155a8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17ha9af285512c80f2cE>
    80015ca8:	e82a                	sd	a0,16(sp)
    80015caa:	a009                	j	80015cac <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he8a0f286e21fe70dE+0x12>
    80015cac:	6542                	ld	a0,16(sp)
    80015cae:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015cb0:	fffec097          	auipc	ra,0xfffec
    80015cb4:	2da080e7          	jalr	730(ra) # 80001f8a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2181edd212a7ee9aE>
    80015cb8:	e42a                	sd	a0,8(sp)
    80015cba:	a009                	j	80015cbc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he8a0f286e21fe70dE+0x22>
    80015cbc:	6522                	ld	a0,8(sp)
    80015cbe:	ec2a                	sd	a0,24(sp)
    }
    80015cc0:	70e2                	ld	ra,56(sp)
    80015cc2:	6121                	addi	sp,sp,64
    80015cc4:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf96ec20edd1bc384E:

0000000080015cc6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf96ec20edd1bc384E>:
    pub fn into_raw_with_allocator(b: Self) -> (*mut T, A) {
    80015cc6:	7139                	addi	sp,sp,-64
    80015cc8:	fc06                	sd	ra,56(sp)
    80015cca:	f02a                	sd	a0,32(sp)
        let (leaked, alloc) = Box::into_unique(b);
    80015ccc:	00000097          	auipc	ra,0x0
    80015cd0:	86c080e7          	jalr	-1940(ra) # 80015538 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h3eb2b19dfe5fac2eE>
    80015cd4:	e82a                	sd	a0,16(sp)
    80015cd6:	a009                	j	80015cd8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf96ec20edd1bc384E+0x12>
    80015cd8:	6542                	ld	a0,16(sp)
    80015cda:	f82a                	sd	a0,48(sp)
        (leaked.as_ptr(), alloc)
    80015cdc:	fffec097          	auipc	ra,0xfffec
    80015ce0:	2f6080e7          	jalr	758(ra) # 80001fd2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf41eaba29410c82aE>
    80015ce4:	e42a                	sd	a0,8(sp)
    80015ce6:	a009                	j	80015ce8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf96ec20edd1bc384E+0x22>
    80015ce8:	6522                	ld	a0,8(sp)
    80015cea:	ec2a                	sd	a0,24(sp)
    }
    80015cec:	70e2                	ld	ra,56(sp)
    80015cee:	6121                	addi	sp,sp,64
    80015cf0:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h42ed1033945a6d02E:

0000000080015cf2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h42ed1033945a6d02E>:
    /// static_ref[0] = 4;
    /// assert_eq!(*static_ref, [4, 2, 3]);
    /// ```
    #[stable(feature = "box_leak", since = "1.26.0")]
    #[inline]
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015cf2:	7139                	addi	sp,sp,-64
    80015cf4:	fc06                	sd	ra,56(sp)
    80015cf6:	ec2a                	sd	a0,24(sp)
    80015cf8:	f42a                	sd	a0,40(sp)
        ManuallyDrop { value }
    80015cfa:	f02a                	sd	a0,32(sp)
    where
        A: 'a,
    {
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015cfc:	e82a                	sd	a0,16(sp)
    80015cfe:	a009                	j	80015d00 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h42ed1033945a6d02E+0xe>
    80015d00:	0808                	addi	a0,sp,16
    80015d02:	f82a                	sd	a0,48(sp)
    80015d04:	e42a                	sd	a0,8(sp)
    80015d06:	a009                	j	80015d08 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h42ed1033945a6d02E+0x16>
    80015d08:	6522                	ld	a0,8(sp)
    80015d0a:	6108                	ld	a0,0(a0)
    80015d0c:	fffec097          	auipc	ra,0xfffec
    80015d10:	2c6080e7          	jalr	710(ra) # 80001fd2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf41eaba29410c82aE>
    80015d14:	e02a                	sd	a0,0(sp)
    80015d16:	a009                	j	80015d18 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h42ed1033945a6d02E+0x26>
    }
    80015d18:	6502                	ld	a0,0(sp)
    80015d1a:	70e2                	ld	ra,56(sp)
    80015d1c:	6121                	addi	sp,sp,64
    80015d1e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h71564a35db604a9aE:

0000000080015d20 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h71564a35db604a9aE>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015d20:	7139                	addi	sp,sp,-64
    80015d22:	fc06                	sd	ra,56(sp)
    80015d24:	ec2a                	sd	a0,24(sp)
    80015d26:	f42a                	sd	a0,40(sp)
    80015d28:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015d2a:	e82a                	sd	a0,16(sp)
    80015d2c:	a009                	j	80015d2e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h71564a35db604a9aE+0xe>
    80015d2e:	0808                	addi	a0,sp,16
    80015d30:	f82a                	sd	a0,48(sp)
    80015d32:	e42a                	sd	a0,8(sp)
    80015d34:	a009                	j	80015d36 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h71564a35db604a9aE+0x16>
    80015d36:	6522                	ld	a0,8(sp)
    80015d38:	6108                	ld	a0,0(a0)
    80015d3a:	fffec097          	auipc	ra,0xfffec
    80015d3e:	260080e7          	jalr	608(ra) # 80001f9a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h48c57f5ee2020847E>
    80015d42:	e02a                	sd	a0,0(sp)
    80015d44:	a009                	j	80015d46 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h71564a35db604a9aE+0x26>
    }
    80015d46:	6502                	ld	a0,0(sp)
    80015d48:	70e2                	ld	ra,56(sp)
    80015d4a:	6121                	addi	sp,sp,64
    80015d4c:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h763664c044a5c4a4E:

0000000080015d4e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h763664c044a5c4a4E>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015d4e:	7139                	addi	sp,sp,-64
    80015d50:	fc06                	sd	ra,56(sp)
    80015d52:	ec2a                	sd	a0,24(sp)
    80015d54:	f42a                	sd	a0,40(sp)
    80015d56:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015d58:	e82a                	sd	a0,16(sp)
    80015d5a:	a009                	j	80015d5c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h763664c044a5c4a4E+0xe>
    80015d5c:	0808                	addi	a0,sp,16
    80015d5e:	f82a                	sd	a0,48(sp)
    80015d60:	e42a                	sd	a0,8(sp)
    80015d62:	a009                	j	80015d64 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h763664c044a5c4a4E+0x16>
    80015d64:	6522                	ld	a0,8(sp)
    80015d66:	6108                	ld	a0,0(a0)
    80015d68:	fffec097          	auipc	ra,0xfffec
    80015d6c:	262080e7          	jalr	610(ra) # 80001fca <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdbbd95956b998284E>
    80015d70:	e02a                	sd	a0,0(sp)
    80015d72:	a009                	j	80015d74 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h763664c044a5c4a4E+0x26>
    }
    80015d74:	6502                	ld	a0,0(sp)
    80015d76:	70e2                	ld	ra,56(sp)
    80015d78:	6121                	addi	sp,sp,64
    80015d7a:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8c8714436929026aE:

0000000080015d7c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8c8714436929026aE>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015d7c:	7139                	addi	sp,sp,-64
    80015d7e:	fc06                	sd	ra,56(sp)
    80015d80:	ec2a                	sd	a0,24(sp)
    80015d82:	f42a                	sd	a0,40(sp)
    80015d84:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015d86:	e82a                	sd	a0,16(sp)
    80015d88:	a009                	j	80015d8a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8c8714436929026aE+0xe>
    80015d8a:	0808                	addi	a0,sp,16
    80015d8c:	f82a                	sd	a0,48(sp)
    80015d8e:	e42a                	sd	a0,8(sp)
    80015d90:	a009                	j	80015d92 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8c8714436929026aE+0x16>
    80015d92:	6522                	ld	a0,8(sp)
    80015d94:	6108                	ld	a0,0(a0)
    80015d96:	fffec097          	auipc	ra,0xfffec
    80015d9a:	1fc080e7          	jalr	508(ra) # 80001f92 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h468cf24034a9739bE>
    80015d9e:	e02a                	sd	a0,0(sp)
    80015da0:	a009                	j	80015da2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8c8714436929026aE+0x26>
    }
    80015da2:	6502                	ld	a0,0(sp)
    80015da4:	70e2                	ld	ra,56(sp)
    80015da6:	6121                	addi	sp,sp,64
    80015da8:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8e2dd8dfb9eba303E:

0000000080015daa <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8e2dd8dfb9eba303E>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015daa:	7139                	addi	sp,sp,-64
    80015dac:	fc06                	sd	ra,56(sp)
    80015dae:	ec2a                	sd	a0,24(sp)
    80015db0:	f42a                	sd	a0,40(sp)
    80015db2:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015db4:	e82a                	sd	a0,16(sp)
    80015db6:	a009                	j	80015db8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8e2dd8dfb9eba303E+0xe>
    80015db8:	0808                	addi	a0,sp,16
    80015dba:	f82a                	sd	a0,48(sp)
    80015dbc:	e42a                	sd	a0,8(sp)
    80015dbe:	a009                	j	80015dc0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8e2dd8dfb9eba303E+0x16>
    80015dc0:	6522                	ld	a0,8(sp)
    80015dc2:	6108                	ld	a0,0(a0)
    80015dc4:	fffec097          	auipc	ra,0xfffec
    80015dc8:	1fe080e7          	jalr	510(ra) # 80001fc2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha9257223563d9ec5E>
    80015dcc:	e02a                	sd	a0,0(sp)
    80015dce:	a009                	j	80015dd0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h8e2dd8dfb9eba303E+0x26>
    }
    80015dd0:	6502                	ld	a0,0(sp)
    80015dd2:	70e2                	ld	ra,56(sp)
    80015dd4:	6121                	addi	sp,sp,64
    80015dd6:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb8ba5beb13b16d89E:

0000000080015dd8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb8ba5beb13b16d89E>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015dd8:	7139                	addi	sp,sp,-64
    80015dda:	fc06                	sd	ra,56(sp)
    80015ddc:	ec2a                	sd	a0,24(sp)
    80015dde:	f42a                	sd	a0,40(sp)
    80015de0:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015de2:	e82a                	sd	a0,16(sp)
    80015de4:	a009                	j	80015de6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb8ba5beb13b16d89E+0xe>
    80015de6:	0808                	addi	a0,sp,16
    80015de8:	f82a                	sd	a0,48(sp)
    80015dea:	e42a                	sd	a0,8(sp)
    80015dec:	a009                	j	80015dee <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb8ba5beb13b16d89E+0x16>
    80015dee:	6522                	ld	a0,8(sp)
    80015df0:	6108                	ld	a0,0(a0)
    80015df2:	fffec097          	auipc	ra,0xfffec
    80015df6:	1b8080e7          	jalr	440(ra) # 80001faa <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6813dc49e09f1909E>
    80015dfa:	e02a                	sd	a0,0(sp)
    80015dfc:	a009                	j	80015dfe <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb8ba5beb13b16d89E+0x26>
    }
    80015dfe:	6502                	ld	a0,0(sp)
    80015e00:	70e2                	ld	ra,56(sp)
    80015e02:	6121                	addi	sp,sp,64
    80015e04:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf4d2de252b031521E:

0000000080015e06 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf4d2de252b031521E>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015e06:	7139                	addi	sp,sp,-64
    80015e08:	fc06                	sd	ra,56(sp)
    80015e0a:	ec2a                	sd	a0,24(sp)
    80015e0c:	f42a                	sd	a0,40(sp)
    80015e0e:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015e10:	e82a                	sd	a0,16(sp)
    80015e12:	a009                	j	80015e14 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf4d2de252b031521E+0xe>
    80015e14:	0808                	addi	a0,sp,16
    80015e16:	f82a                	sd	a0,48(sp)
    80015e18:	e42a                	sd	a0,8(sp)
    80015e1a:	a009                	j	80015e1c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf4d2de252b031521E+0x16>
    80015e1c:	6522                	ld	a0,8(sp)
    80015e1e:	6108                	ld	a0,0(a0)
    80015e20:	fffec097          	auipc	ra,0xfffec
    80015e24:	162080e7          	jalr	354(ra) # 80001f82 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h0386423813171eb0E>
    80015e28:	e02a                	sd	a0,0(sp)
    80015e2a:	a009                	j	80015e2c <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf4d2de252b031521E+0x26>
    }
    80015e2c:	6502                	ld	a0,0(sp)
    80015e2e:	70e2                	ld	ra,56(sp)
    80015e30:	6121                	addi	sp,sp,64
    80015e32:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hfed59c3750890b7fE:

0000000080015e34 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hfed59c3750890b7fE>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015e34:	7139                	addi	sp,sp,-64
    80015e36:	fc06                	sd	ra,56(sp)
    80015e38:	ec2a                	sd	a0,24(sp)
    80015e3a:	f42a                	sd	a0,40(sp)
    80015e3c:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015e3e:	e82a                	sd	a0,16(sp)
    80015e40:	a009                	j	80015e42 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hfed59c3750890b7fE+0xe>
    80015e42:	0808                	addi	a0,sp,16
    80015e44:	f82a                	sd	a0,48(sp)
    80015e46:	e42a                	sd	a0,8(sp)
    80015e48:	a009                	j	80015e4a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hfed59c3750890b7fE+0x16>
    80015e4a:	6522                	ld	a0,8(sp)
    80015e4c:	6108                	ld	a0,0(a0)
    80015e4e:	fffec097          	auipc	ra,0xfffec
    80015e52:	154080e7          	jalr	340(ra) # 80001fa2 <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h56386e93ea326343E>
    80015e56:	e02a                	sd	a0,0(sp)
    80015e58:	a009                	j	80015e5a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hfed59c3750890b7fE+0x26>
    }
    80015e5a:	6502                	ld	a0,0(sp)
    80015e5c:	70e2                	ld	ra,56(sp)
    80015e5e:	6121                	addi	sp,sp,64
    80015e60:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hff51e5a153ccafaeE:

0000000080015e62 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hff51e5a153ccafaeE>:
    pub fn leak<'a>(b: Self) -> &'a mut T
    80015e62:	7139                	addi	sp,sp,-64
    80015e64:	fc06                	sd	ra,56(sp)
    80015e66:	ec2a                	sd	a0,24(sp)
    80015e68:	f42a                	sd	a0,40(sp)
    80015e6a:	f02a                	sd	a0,32(sp)
        unsafe { &mut *mem::ManuallyDrop::new(b).0.as_ptr() }
    80015e6c:	e82a                	sd	a0,16(sp)
    80015e6e:	a009                	j	80015e70 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hff51e5a153ccafaeE+0xe>
    80015e70:	0808                	addi	a0,sp,16
    80015e72:	f82a                	sd	a0,48(sp)
    80015e74:	e42a                	sd	a0,8(sp)
    80015e76:	a009                	j	80015e78 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hff51e5a153ccafaeE+0x16>
    80015e78:	6522                	ld	a0,8(sp)
    80015e7a:	6108                	ld	a0,0(a0)
    80015e7c:	fffec097          	auipc	ra,0xfffec
    80015e80:	10e080e7          	jalr	270(ra) # 80001f8a <_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2181edd212a7ee9aE>
    80015e84:	e02a                	sd	a0,0(sp)
    80015e86:	a009                	j	80015e88 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hff51e5a153ccafaeE+0x26>
    }
    80015e88:	6502                	ld	a0,0(sp)
    80015e8a:	70e2                	ld	ra,56(sp)
    80015e8c:	6121                	addi	sp,sp,64
    80015e8e:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h397d000c104da7ccE:

0000000080015e90 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h397d000c104da7ccE>:
    pub fn into_raw(b: Self) -> *mut T {
    80015e90:	1101                	addi	sp,sp,-32
    80015e92:	ec06                	sd	ra,24(sp)
    80015e94:	e82a                	sd	a0,16(sp)
        Self::into_raw_with_allocator(b).0
    80015e96:	00000097          	auipc	ra,0x0
    80015e9a:	dd8080e7          	jalr	-552(ra) # 80015c6e <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1e86542041063eeE>
    80015e9e:	e42a                	sd	a0,8(sp)
    80015ea0:	a009                	j	80015ea2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h397d000c104da7ccE+0x12>
    80015ea2:	6522                	ld	a0,8(sp)
    }
    80015ea4:	e02a                	sd	a0,0(sp)
    80015ea6:	a009                	j	80015ea8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h397d000c104da7ccE+0x18>
    80015ea8:	6502                	ld	a0,0(sp)
    80015eaa:	60e2                	ld	ra,24(sp)
    80015eac:	6105                	addi	sp,sp,32
    80015eae:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h4cdd2d5b1d5df5feE:

0000000080015eb0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h4cdd2d5b1d5df5feE>:
    pub fn into_raw(b: Self) -> *mut T {
    80015eb0:	1101                	addi	sp,sp,-32
    80015eb2:	ec06                	sd	ra,24(sp)
    80015eb4:	e82a                	sd	a0,16(sp)
        Self::into_raw_with_allocator(b).0
    80015eb6:	00000097          	auipc	ra,0x0
    80015eba:	cdc080e7          	jalr	-804(ra) # 80015b92 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h3323540c40885d4fE>
    80015ebe:	e42a                	sd	a0,8(sp)
    80015ec0:	a009                	j	80015ec2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h4cdd2d5b1d5df5feE+0x12>
    80015ec2:	6522                	ld	a0,8(sp)
    }
    80015ec4:	e02a                	sd	a0,0(sp)
    80015ec6:	a009                	j	80015ec8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h4cdd2d5b1d5df5feE+0x18>
    80015ec8:	6502                	ld	a0,0(sp)
    80015eca:	60e2                	ld	ra,24(sp)
    80015ecc:	6105                	addi	sp,sp,32
    80015ece:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17hd1999be463f28fceE:

0000000080015ed0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17hd1999be463f28fceE>:
    pub fn into_raw(b: Self) -> *mut T {
    80015ed0:	1101                	addi	sp,sp,-32
    80015ed2:	ec06                	sd	ra,24(sp)
    80015ed4:	e82a                	sd	a0,16(sp)
        Self::into_raw_with_allocator(b).0
    80015ed6:	00000097          	auipc	ra,0x0
    80015eda:	dc4080e7          	jalr	-572(ra) # 80015c9a <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he8a0f286e21fe70dE>
    80015ede:	e42a                	sd	a0,8(sp)
    80015ee0:	a009                	j	80015ee2 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17hd1999be463f28fceE+0x12>
    80015ee2:	6522                	ld	a0,8(sp)
    }
    80015ee4:	e02a                	sd	a0,0(sp)
    80015ee6:	a009                	j	80015ee8 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17hd1999be463f28fceE+0x18>
    80015ee8:	6502                	ld	a0,0(sp)
    80015eea:	60e2                	ld	ra,24(sp)
    80015eec:	6105                	addi	sp,sp,32
    80015eee:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h1200dab49321eeb1E:

0000000080015ef0 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h1200dab49321eeb1E>:
    pub unsafe fn assume_init(self) -> Box<T, A> {
    80015ef0:	7179                	addi	sp,sp,-48
    80015ef2:	f406                	sd	ra,40(sp)
    80015ef4:	e82a                	sd	a0,16(sp)
        let (raw, alloc) = Box::into_raw_with_allocator(self);
    80015ef6:	00000097          	auipc	ra,0x0
    80015efa:	cf4080e7          	jalr	-780(ra) # 80015bea <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c224b19459301b4E>
    80015efe:	e42a                	sd	a0,8(sp)
    80015f00:	a009                	j	80015f02 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h1200dab49321eeb1E+0x12>
    80015f02:	6522                	ld	a0,8(sp)
    80015f04:	f02a                	sd	a0,32(sp)
        unsafe { Box::from_raw_in(raw as *mut T, alloc) }
    80015f06:	fffff097          	auipc	ra,0xfffff
    80015f0a:	4fe080e7          	jalr	1278(ra) # 80015404 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h4c9ee6407af676a6E>
    80015f0e:	e02a                	sd	a0,0(sp)
    80015f10:	a009                	j	80015f12 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h1200dab49321eeb1E+0x22>
    }
    80015f12:	6502                	ld	a0,0(sp)
    80015f14:	70a2                	ld	ra,40(sp)
    80015f16:	6145                	addi	sp,sp,48
    80015f18:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h21a3543f341f6249E:

0000000080015f1a <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h21a3543f341f6249E>:
    pub unsafe fn assume_init(self) -> Box<T, A> {
    80015f1a:	7179                	addi	sp,sp,-48
    80015f1c:	f406                	sd	ra,40(sp)
    80015f1e:	e82a                	sd	a0,16(sp)
        let (raw, alloc) = Box::into_raw_with_allocator(self);
    80015f20:	00000097          	auipc	ra,0x0
    80015f24:	cf6080e7          	jalr	-778(ra) # 80015c16 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hd2b30602d389b75cE>
    80015f28:	e42a                	sd	a0,8(sp)
    80015f2a:	a009                	j	80015f2c <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h21a3543f341f6249E+0x12>
    80015f2c:	6522                	ld	a0,8(sp)
    80015f2e:	f02a                	sd	a0,32(sp)
        unsafe { Box::from_raw_in(raw as *mut T, alloc) }
    80015f30:	fffff097          	auipc	ra,0xfffff
    80015f34:	4f0080e7          	jalr	1264(ra) # 80015420 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h6ad99d8ddbbe0789E>
    80015f38:	e02a                	sd	a0,0(sp)
    80015f3a:	a009                	j	80015f3c <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h21a3543f341f6249E+0x22>
    }
    80015f3c:	6502                	ld	a0,0(sp)
    80015f3e:	70a2                	ld	ra,40(sp)
    80015f40:	6145                	addi	sp,sp,48
    80015f42:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h47305147b904839dE:

0000000080015f44 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h47305147b904839dE>:
    pub unsafe fn assume_init(self) -> Box<T, A> {
    80015f44:	7179                	addi	sp,sp,-48
    80015f46:	f406                	sd	ra,40(sp)
    80015f48:	e82a                	sd	a0,16(sp)
        let (raw, alloc) = Box::into_raw_with_allocator(self);
    80015f4a:	00000097          	auipc	ra,0x0
    80015f4e:	c74080e7          	jalr	-908(ra) # 80015bbe <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h4a620900ed3435feE>
    80015f52:	e42a                	sd	a0,8(sp)
    80015f54:	a009                	j	80015f56 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h47305147b904839dE+0x12>
    80015f56:	6522                	ld	a0,8(sp)
    80015f58:	f02a                	sd	a0,32(sp)
        unsafe { Box::from_raw_in(raw as *mut T, alloc) }
    80015f5a:	fffff097          	auipc	ra,0xfffff
    80015f5e:	472080e7          	jalr	1138(ra) # 800153cc <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3cebae41d0b5afeaE>
    80015f62:	e02a                	sd	a0,0(sp)
    80015f64:	a009                	j	80015f66 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17h47305147b904839dE+0x22>
    }
    80015f66:	6502                	ld	a0,0(sp)
    80015f68:	70a2                	ld	ra,40(sp)
    80015f6a:	6145                	addi	sp,sp,48
    80015f6c:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hbf0bf6e3c18ea814E:

0000000080015f6e <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hbf0bf6e3c18ea814E>:
    pub unsafe fn assume_init(self) -> Box<T, A> {
    80015f6e:	7179                	addi	sp,sp,-48
    80015f70:	f406                	sd	ra,40(sp)
    80015f72:	e82a                	sd	a0,16(sp)
        let (raw, alloc) = Box::into_raw_with_allocator(self);
    80015f74:	00000097          	auipc	ra,0x0
    80015f78:	cce080e7          	jalr	-818(ra) # 80015c42 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he1537af45556d5d9E>
    80015f7c:	e42a                	sd	a0,8(sp)
    80015f7e:	a009                	j	80015f80 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hbf0bf6e3c18ea814E+0x12>
    80015f80:	6522                	ld	a0,8(sp)
    80015f82:	f02a                	sd	a0,32(sp)
        unsafe { Box::from_raw_in(raw as *mut T, alloc) }
    80015f84:	fffff097          	auipc	ra,0xfffff
    80015f88:	42c080e7          	jalr	1068(ra) # 800153b0 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h25c1c058a1d8d4e1E>
    80015f8c:	e02a                	sd	a0,0(sp)
    80015f8e:	a009                	j	80015f90 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hbf0bf6e3c18ea814E+0x22>
    }
    80015f90:	6502                	ld	a0,0(sp)
    80015f92:	70a2                	ld	ra,40(sp)
    80015f94:	6145                	addi	sp,sp,48
    80015f96:	8082                	ret

Disassembly of section .text._ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hed25fa8062bc4a28E:

0000000080015f98 <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hed25fa8062bc4a28E>:
    pub unsafe fn assume_init(self) -> Box<T, A> {
    80015f98:	7179                	addi	sp,sp,-48
    80015f9a:	f406                	sd	ra,40(sp)
    80015f9c:	e82a                	sd	a0,16(sp)
        let (raw, alloc) = Box::into_raw_with_allocator(self);
    80015f9e:	00000097          	auipc	ra,0x0
    80015fa2:	d28080e7          	jalr	-728(ra) # 80015cc6 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf96ec20edd1bc384E>
    80015fa6:	e42a                	sd	a0,8(sp)
    80015fa8:	a009                	j	80015faa <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hed25fa8062bc4a28E+0x12>
    80015faa:	6522                	ld	a0,8(sp)
    80015fac:	f02a                	sd	a0,32(sp)
        unsafe { Box::from_raw_in(raw as *mut T, alloc) }
    80015fae:	fffff097          	auipc	ra,0xfffff
    80015fb2:	4c6080e7          	jalr	1222(ra) # 80015474 <_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h9979a0ee59f68f24E>
    80015fb6:	e02a                	sd	a0,0(sp)
    80015fb8:	a009                	j	80015fba <_ZN5alloc5boxed60Box$LT$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$C$A$GT$11assume_init17hed25fa8062bc4a28E+0x22>
    }
    80015fba:	6502                	ld	a0,0(sp)
    80015fbc:	70a2                	ld	ra,40(sp)
    80015fbe:	6145                	addi	sp,sp,48
    80015fc0:	8082                	ret

Disassembly of section .text._ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h8c89b1288187e1e0E:

0000000080015fc2 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h8c89b1288187e1e0E>:

        self.iter.try_fold(init, enumerate(&mut self.count, fold))
    }

    #[inline]
    fn fold<Acc, Fold>(self, init: Acc, fold: Fold) -> Acc
    80015fc2:	7179                	addi	sp,sp,-48
                AddAssign::add_assign(&mut count, 1);
                acc
            }
        }

        self.iter.fold(init, enumerate(self.count, fold))
    80015fc4:	f406                	sd	ra,40(sp)
    80015fc6:	610c                	ld	a1,0(a0)
    80015fc8:	6510                	ld	a2,8(a0)
    80015fca:	6908                	ld	a0,16(a0)
    80015fcc:	e82e                	sd	a1,16(sp)
    80015fce:	e432                	sd	a2,8(sp)
    80015fd0:	00000097          	auipc	ra,0x0
    80015fd4:	022080e7          	jalr	34(ra) # 80015ff2 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate17hf4b4e22806494d42E>
    80015fd8:	e02a                	sd	a0,0(sp)
    80015fda:	a009                	j	80015fdc <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h8c89b1288187e1e0E+0x1a>
    80015fdc:	6542                	ld	a0,16(sp)
    80015fde:	65a2                	ld	a1,8(sp)
    80015fe0:	6602                	ld	a2,0(sp)
    80015fe2:	ffffd097          	auipc	ra,0xffffd
    80015fe6:	d20080e7          	jalr	-736(ra) # 80012d02 <_ZN4core4iter6traits8iterator8Iterator4fold17h4496ea684db5eab8E>
    80015fea:	a009                	j	80015fec <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h8c89b1288187e1e0E+0x2a>
    }
    80015fec:	70a2                	ld	ra,40(sp)
    80015fee:	6145                	addi	sp,sp,48
    80015ff0:	8082                	ret

Disassembly of section .text._ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate17hf4b4e22806494d42E:

0000000080015ff2 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate17hf4b4e22806494d42E>:
        fn enumerate<T, Acc>(
    80015ff2:	1101                	addi	sp,sp,-32
    80015ff4:	e82a                	sd	a0,16(sp)
            move |acc, item| {
    80015ff6:	e42a                	sd	a0,8(sp)
        }
    80015ff8:	6105                	addi	sp,sp,32
    80015ffa:	8082                	ret

Disassembly of section .text._ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate28_$u7b$$u7b$closure$u7d$$u7d$17hadcc243cb0a5d782E:

0000000080015ffc <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate28_$u7b$$u7b$closure$u7d$$u7d$17hadcc243cb0a5d782E>:
            move |acc, item| {
    80015ffc:	711d                	addi	sp,sp,-96
    80015ffe:	ec86                	sd	ra,88(sp)
    80016000:	e0aa                	sd	a0,64(sp)
    80016002:	e8ae                	sd	a1,80(sp)
                let acc = fold(acc, (count, item));
    80016004:	6110                	ld	a2,0(a0)
    80016006:	f432                	sd	a2,40(sp)
    80016008:	f82e                	sd	a1,48(sp)
    8001600a:	ec32                	sd	a2,24(sp)
    8001600c:	f02e                	sd	a1,32(sp)
    8001600e:	e82a                	sd	a0,16(sp)
    80016010:	e42e                	sd	a1,8(sp)
    80016012:	85b2                	mv	a1,a2
    80016014:	6622                	ld	a2,8(sp)
    80016016:	ffff0097          	auipc	ra,0xffff0
    8001601a:	708080e7          	jalr	1800(ra) # 8000671e <_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hdff32788bbd3f93fE>
    8001601e:	a009                	j	80016020 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate28_$u7b$$u7b$closure$u7d$$u7d$17hadcc243cb0a5d782E+0x24>
    80016020:	4585                	li	a1,1
                AddAssign::add_assign(&mut count, 1);
    80016022:	6542                	ld	a0,16(sp)
    80016024:	fffef097          	auipc	ra,0xfffef
    80016028:	9da080e7          	jalr	-1574(ra) # 800049fe <_ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h52b01649b741416aE>
    8001602c:	a009                	j	8001602e <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold9enumerate28_$u7b$$u7b$closure$u7d$$u7d$17hadcc243cb0a5d782E+0x32>
            }
    8001602e:	60e6                	ld	ra,88(sp)
    80016030:	6125                	addi	sp,sp,96
    80016032:	8082                	ret

Disassembly of section .text._ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E:

0000000080016034 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E>:
    fn next(&mut self) -> Option<(usize, <I as Iterator>::Item)> {
    80016034:	7119                	addi	sp,sp,-128
    80016036:	fc86                	sd	ra,120(sp)
    80016038:	e8aa                	sd	a0,80(sp)
        let a = self.iter.next()?;
    8001603a:	f02a                	sd	a0,32(sp)
    8001603c:	ffffd097          	auipc	ra,0xffffd
    80016040:	4d0080e7          	jalr	1232(ra) # 8001350c <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc626839576349c55E>
    80016044:	ec2a                	sd	a0,24(sp)
    80016046:	a009                	j	80016048 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x14>
    80016048:	6562                	ld	a0,24(sp)
    8001604a:	00003097          	auipc	ra,0x3
    8001604e:	11a080e7          	jalr	282(ra) # 80019164 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3e352ee0b81a1776E>
    80016052:	fc2a                	sd	a0,56(sp)
    80016054:	a009                	j	80016056 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x22>
    80016056:	7562                	ld	a0,56(sp)
    80016058:	00153593          	seqz	a1,a0
    8001605c:	4601                	li	a2,0
    8001605e:	00c51463          	bne	a0,a2,80016066 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x32>
    80016062:	a009                	j	80016064 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x30>
    80016064:	a01d                	j	8001608a <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x56>
    80016066:	7562                	ld	a0,56(sp)
    80016068:	f0aa                	sd	a0,96(sp)
    8001606a:	f4aa                	sd	a0,104(sp)
        let i = self.count;
    8001606c:	7582                	ld	a1,32(sp)
    8001606e:	01058613          	addi	a2,a1,16
    80016072:	6994                	ld	a3,16(a1)
    80016074:	f8b6                	sd	a3,112(sp)
    80016076:	4585                	li	a1,1
        AddAssign::add_assign(&mut self.count, 1);
    80016078:	e82a                	sd	a0,16(sp)
    8001607a:	8532                	mv	a0,a2
    8001607c:	e436                	sd	a3,8(sp)
    8001607e:	fffef097          	auipc	ra,0xfffef
    80016082:	980080e7          	jalr	-1664(ra) # 800049fe <_ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h52b01649b741416aE>
    80016086:	a839                	j	800160a4 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x70>
        let a = self.iter.next()?;
    80016088:	0000                	unimp
    8001608a:	00003097          	auipc	ra,0x3
    8001608e:	f66080e7          	jalr	-154(ra) # 80018ff0 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hac07f7df93d28f54E>
    80016092:	a009                	j	80016094 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x60>
    80016094:	00003097          	auipc	ra,0x3
    80016098:	0ac080e7          	jalr	172(ra) # 80019140 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hb35ce1158bd24b79E>
    8001609c:	f42a                	sd	a0,40(sp)
    8001609e:	f82e                	sd	a1,48(sp)
    800160a0:	a009                	j	800160a2 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x6e>
    }
    800160a2:	a801                	j	800160b2 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x7e>
        Some((i, a))
    800160a4:	6522                	ld	a0,8(sp)
    800160a6:	e0aa                	sd	a0,64(sp)
    800160a8:	65c2                	ld	a1,16(sp)
    800160aa:	e4ae                	sd	a1,72(sp)
    800160ac:	f42a                	sd	a0,40(sp)
    800160ae:	f82e                	sd	a1,48(sp)
    }
    800160b0:	a009                	j	800160b2 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h45b04c9783e68111E+0x7e>
    800160b2:	7522                	ld	a0,40(sp)
    800160b4:	75c2                	ld	a1,48(sp)
    800160b6:	70e6                	ld	ra,120(sp)
    800160b8:	6109                	addi	sp,sp,128
    800160ba:	8082                	ret

Disassembly of section .text._ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E:

00000000800160bc <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E>:
    fn next(&mut self) -> Option<(usize, <I as Iterator>::Item)> {
    800160bc:	7119                	addi	sp,sp,-128
    800160be:	fc86                	sd	ra,120(sp)
    800160c0:	e8aa                	sd	a0,80(sp)
        let a = self.iter.next()?;
    800160c2:	f02a                	sd	a0,32(sp)
    800160c4:	ffffd097          	auipc	ra,0xffffd
    800160c8:	392080e7          	jalr	914(ra) # 80013456 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E>
    800160cc:	ec2a                	sd	a0,24(sp)
    800160ce:	a009                	j	800160d0 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x14>
    800160d0:	6562                	ld	a0,24(sp)
    800160d2:	00003097          	auipc	ra,0x3
    800160d6:	0ac080e7          	jalr	172(ra) # 8001917e <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h7178c6563938a1aaE>
    800160da:	fc2a                	sd	a0,56(sp)
    800160dc:	a009                	j	800160de <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x22>
    800160de:	7562                	ld	a0,56(sp)
    800160e0:	00153593          	seqz	a1,a0
    800160e4:	4601                	li	a2,0
    800160e6:	00c51463          	bne	a0,a2,800160ee <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x32>
    800160ea:	a009                	j	800160ec <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x30>
    800160ec:	a01d                	j	80016112 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x56>
    800160ee:	7562                	ld	a0,56(sp)
    800160f0:	f0aa                	sd	a0,96(sp)
    800160f2:	f4aa                	sd	a0,104(sp)
        let i = self.count;
    800160f4:	7582                	ld	a1,32(sp)
    800160f6:	01058613          	addi	a2,a1,16
    800160fa:	6994                	ld	a3,16(a1)
    800160fc:	f8b6                	sd	a3,112(sp)
    800160fe:	4585                	li	a1,1
        AddAssign::add_assign(&mut self.count, 1);
    80016100:	e82a                	sd	a0,16(sp)
    80016102:	8532                	mv	a0,a2
    80016104:	e436                	sd	a3,8(sp)
    80016106:	fffef097          	auipc	ra,0xfffef
    8001610a:	8f8080e7          	jalr	-1800(ra) # 800049fe <_ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h52b01649b741416aE>
    8001610e:	a839                	j	8001612c <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x70>
        let a = self.iter.next()?;
    80016110:	0000                	unimp
    80016112:	00003097          	auipc	ra,0x3
    80016116:	ede080e7          	jalr	-290(ra) # 80018ff0 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hac07f7df93d28f54E>
    8001611a:	a009                	j	8001611c <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x60>
    8001611c:	00003097          	auipc	ra,0x3
    80016120:	036080e7          	jalr	54(ra) # 80019152 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hfc3b6dff1230c341E>
    80016124:	f42a                	sd	a0,40(sp)
    80016126:	f82e                	sd	a1,48(sp)
    80016128:	a009                	j	8001612a <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x6e>
    }
    8001612a:	a801                	j	8001613a <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x7e>
        Some((i, a))
    8001612c:	6522                	ld	a0,8(sp)
    8001612e:	e0aa                	sd	a0,64(sp)
    80016130:	65c2                	ld	a1,16(sp)
    80016132:	e4ae                	sd	a1,72(sp)
    80016134:	f42a                	sd	a0,40(sp)
    80016136:	f82e                	sd	a1,48(sp)
    }
    80016138:	a009                	j	8001613a <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E+0x7e>
    8001613a:	7522                	ld	a0,40(sp)
    8001613c:	75c2                	ld	a1,48(sp)
    8001613e:	70e6                	ld	ra,120(sp)
    80016140:	6109                	addi	sp,sp,128
    80016142:	8082                	ret

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator8for_each17ha2fb126c57faa0d0E:

0000000080016144 <_ZN4core4iter6traits8iterator8Iterator8for_each17ha2fb126c57faa0d0E>:
    fn for_each<F>(self, f: F)
    80016144:	7179                	addi	sp,sp,-48
        self.fold((), call(f));
    80016146:	f406                	sd	ra,40(sp)
    80016148:	690c                	ld	a1,16(a0)
    8001614a:	e82e                	sd	a1,16(sp)
    8001614c:	650c                	ld	a1,8(a0)
    8001614e:	e42e                	sd	a1,8(sp)
    80016150:	6108                	ld	a0,0(a0)
    80016152:	e02a                	sd	a0,0(sp)
    80016154:	ffff0097          	auipc	ra,0xffff0
    80016158:	5c4080e7          	jalr	1476(ra) # 80006718 <_ZN4core4iter6traits8iterator8Iterator8for_each4call17h80e5b101f6bd2f11E>
    8001615c:	a009                	j	8001615e <_ZN4core4iter6traits8iterator8Iterator8for_each17ha2fb126c57faa0d0E+0x1a>
    8001615e:	850a                	mv	a0,sp
    80016160:	00000097          	auipc	ra,0x0
    80016164:	e62080e7          	jalr	-414(ra) # 80015fc2 <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h8c89b1288187e1e0E>
    80016168:	a009                	j	8001616a <_ZN4core4iter6traits8iterator8Iterator8for_each17ha2fb126c57faa0d0E+0x26>
    }
    8001616a:	70a2                	ld	ra,40(sp)
    8001616c:	6145                	addi	sp,sp,48
    8001616e:	8082                	ret

Disassembly of section .text._ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h246669b1ffe3ec71E:

0000000080016170 <_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h246669b1ffe3ec71E>:
    pub(in crate::iter) fn new(iter: I) -> Enumerate<I> {
    80016170:	1141                	addi	sp,sp,-16
    80016172:	e02e                	sd	a1,0(sp)
    80016174:	e432                	sd	a2,8(sp)
        Enumerate { iter, count: 0 }
    80016176:	e10c                	sd	a1,0(a0)
    80016178:	e510                	sd	a2,8(a0)
    8001617a:	4581                	li	a1,0
    8001617c:	e90c                	sd	a1,16(a0)
    }
    8001617e:	0141                	addi	sp,sp,16
    80016180:	8082                	ret

Disassembly of section .text._ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h42a3faa8ac5437a3E:

0000000080016182 <_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h42a3faa8ac5437a3E>:
    pub(in crate::iter) fn new(iter: I) -> Enumerate<I> {
    80016182:	1141                	addi	sp,sp,-16
    80016184:	e02e                	sd	a1,0(sp)
    80016186:	e432                	sd	a2,8(sp)
        Enumerate { iter, count: 0 }
    80016188:	e10c                	sd	a1,0(a0)
    8001618a:	e510                	sd	a2,8(a0)
    8001618c:	4581                	li	a1,0
    8001618e:	e90c                	sd	a1,16(a0)
    }
    80016190:	0141                	addi	sp,sp,16
    80016192:	8082                	ret

Disassembly of section .text._ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17hb029497487bfa357E:

0000000080016194 <_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17hb029497487bfa357E>:
    pub(in crate::iter) fn new(iter: I) -> Enumerate<I> {
    80016194:	1141                	addi	sp,sp,-16
    80016196:	e02e                	sd	a1,0(sp)
    80016198:	e432                	sd	a2,8(sp)
        Enumerate { iter, count: 0 }
    8001619a:	e10c                	sd	a1,0(a0)
    8001619c:	e510                	sd	a2,8(a0)
    8001619e:	4581                	li	a1,0
    800161a0:	e90c                	sd	a1,16(a0)
    }
    800161a2:	0141                	addi	sp,sp,16
    800161a4:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h71e328a14c9107ffE:

00000000800161a6 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h71e328a14c9107ffE>:
        self
    800161a6:	6990                	ld	a2,16(a1)
    800161a8:	e910                	sd	a2,16(a0)
    800161aa:	6590                	ld	a2,8(a1)
    800161ac:	e510                	sd	a2,8(a0)
    800161ae:	618c                	ld	a1,0(a1)
    800161b0:	e10c                	sd	a1,0(a0)
    }
    800161b2:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h829219028a2b95f9E:

00000000800161b4 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h829219028a2b95f9E>:
        self
    800161b4:	6990                	ld	a2,16(a1)
    800161b6:	e910                	sd	a2,16(a0)
    800161b8:	6590                	ld	a2,8(a1)
    800161ba:	e510                	sd	a2,8(a0)
    800161bc:	618c                	ld	a1,0(a1)
    800161be:	e10c                	sd	a1,0(a0)
    }
    800161c0:	8082                	ret

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8447e4c2a008233bE:

00000000800161c2 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8447e4c2a008233bE>:
    800161c2:	1101                	addi	sp,sp,-32
    800161c4:	ec06                	sd	ra,24(sp)
    800161c6:	e42a                	sd	a0,8(sp)
    800161c8:	e82e                	sd	a1,16(sp)
    800161ca:	6108                	ld	a0,0(a0)
    800161cc:	ffffb097          	auipc	ra,0xffffb
    800161d0:	18e080e7          	jalr	398(ra) # 8001135a <_ZN72_$LT$kernel..register..scause..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hb22ee38431534b6dE>
    800161d4:	e02a                	sd	a0,0(sp)
    800161d6:	a009                	j	800161d8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8447e4c2a008233bE+0x16>
    800161d8:	6502                	ld	a0,0(sp)
    800161da:	60e2                	ld	ra,24(sp)
    800161dc:	6105                	addi	sp,sp,32
    800161de:	8082                	ret

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd0abe9d5c4416d60E:

00000000800161e0 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd0abe9d5c4416d60E>:
    800161e0:	1101                	addi	sp,sp,-32
    800161e2:	ec06                	sd	ra,24(sp)
    800161e4:	e42a                	sd	a0,8(sp)
    800161e6:	e82e                	sd	a1,16(sp)
    800161e8:	6108                	ld	a0,0(a0)
    800161ea:	ffffb097          	auipc	ra,0xffffb
    800161ee:	ff2080e7          	jalr	-14(ra) # 800111dc <_ZN72_$LT$kernel..register..scause..Interrupt$u20$as$u20$core..fmt..Debug$GT$3fmt17h2b8aaa418d944757E>
    800161f2:	e02a                	sd	a0,0(sp)
    800161f4:	a009                	j	800161f6 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd0abe9d5c4416d60E+0x16>
    800161f6:	6502                	ld	a0,0(sp)
    800161f8:	60e2                	ld	ra,24(sp)
    800161fa:	6105                	addi	sp,sp,32
    800161fc:	8082                	ret

Disassembly of section .text._ZN11array_macro28__ArrayVecInner$LT$T$C$_$GT$3new17h88def819a8e631a5E:

00000000800161fe <_ZN11array_macro28__ArrayVecInner$LT$T$C$_$GT$3new17h88def819a8e631a5E>:
    pub len: usize,
}

impl<T, const N: usize> __ArrayVecInner<T, N> {
    #[doc(hidden)]
    pub const unsafe fn new(arr: [MaybeUninit<T>; N]) -> Self {
    800161fe:	cb010113          	addi	sp,sp,-848
    80016202:	34113423          	sd	ra,840(sp)
    80016206:	1030                	addi	a2,sp,40
    80016208:	32000693          	li	a3,800
        Self { arr, len: 0 }
    8001620c:	f02a                	sd	a0,32(sp)
    8001620e:	8532                	mv	a0,a2
    80016210:	ec32                	sd	a2,24(sp)
    80016212:	8636                	mv	a2,a3
    80016214:	e836                	sd	a3,16(sp)
    80016216:	0000d097          	auipc	ra,0xd
    8001621a:	64a080e7          	jalr	1610(ra) # 80023860 <memcpy>
    8001621e:	7582                	ld	a1,32(sp)
    80016220:	e42a                	sd	a0,8(sp)
    80016222:	852e                	mv	a0,a1
    80016224:	65e2                	ld	a1,24(sp)
    80016226:	6642                	ld	a2,16(sp)
    80016228:	0000d097          	auipc	ra,0xd
    8001622c:	638080e7          	jalr	1592(ra) # 80023860 <memcpy>
    80016230:	4581                	li	a1,0
    80016232:	7602                	ld	a2,32(sp)
    80016234:	32b63023          	sd	a1,800(a2)
    }
    80016238:	34813083          	ld	ra,840(sp)
    8001623c:	35010113          	addi	sp,sp,848
    80016240:	8082                	ret

Disassembly of section .text._ZN6kernel8register8mscratch5write17he5cf42c47b75ef15E:

0000000080016242 <_ZN6kernel8register8mscratch5write17he5cf42c47b75ef15E>:
#[inline]
pub unsafe fn write(x:usize){
    80016242:	1141                	addi	sp,sp,-16
    80016244:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw mscratch, $0"::"r"(x)::"volatile");
    80016246:	34051073          	csrw	mscratch,a0
    8001624a:	0141                	addi	sp,sp,16
    8001624c:	8082                	ret

Disassembly of section .text._ZN4core3num21_$LT$impl$u20$u16$GT$13unchecked_add17h77849cfea045d66cE:

000000008001624e <_ZN4core3num21_$LT$impl$u20$u16$GT$13unchecked_add17h77849cfea045d66cE>:
            issue = "none",
        )]
        #[must_use = "this returns the result of the operation, \
                      without modifying the original"]
        #[inline]
        pub unsafe fn unchecked_add(self, rhs: Self) -> Self {
    8001624e:	1141                	addi	sp,sp,-16
    80016250:	862e                	mv	a2,a1
    80016252:	86aa                	mv	a3,a0
    80016254:	00a11523          	sh	a0,10(sp)
    80016258:	00b11623          	sh	a1,12(sp)
            // SAFETY: the caller must uphold the safety contract for
            // `unchecked_add`.
            unsafe { intrinsics::unchecked_add(self, rhs) }
    8001625c:	952e                	add	a0,a0,a1
    8001625e:	00a11723          	sh	a0,14(sp)
    80016262:	65c1                	lui	a1,0x10
    80016264:	35fd                	addiw	a1,a1,-1
    80016266:	8d6d                	and	a0,a0,a1
    80016268:	e02a                	sd	a0,0(sp)
    8001626a:	a009                	j	8001626c <_ZN4core3num21_$LT$impl$u20$u16$GT$13unchecked_add17h77849cfea045d66cE+0x1e>
        }
    8001626c:	6502                	ld	a0,0(sp)
    8001626e:	0141                	addi	sp,sp,16
    80016270:	8082                	ret

Disassembly of section .text._ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E:

0000000080016272 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E>:
        pub const fn checked_add(self, rhs: Self) -> Option<Self> {
    80016272:	715d                	addi	sp,sp,-80
    80016274:	e486                	sd	ra,72(sp)
    80016276:	862e                	mv	a2,a1
    80016278:	86aa                	mv	a3,a0
    8001627a:	dc2a                	sw	a0,56(sp)
    8001627c:	de2e                	sw	a1,60(sp)
            let (a, b) = self.overflowing_add(rhs);
    8001627e:	f432                	sd	a2,40(sp)
    80016280:	f036                	sd	a3,32(sp)
    80016282:	00000097          	auipc	ra,0x0
    80016286:	064080e7          	jalr	100(ra) # 800162e6 <_ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17hf0ff2b6348d5978cE>
    8001628a:	ec2a                	sd	a0,24(sp)
    8001628c:	e82e                	sd	a1,16(sp)
    8001628e:	a009                	j	80016290 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E+0x1e>
    80016290:	6562                	ld	a0,24(sp)
    80016292:	c0aa                	sw	a0,64(sp)
    80016294:	65c2                	ld	a1,16(sp)
    80016296:	0015f613          	andi	a2,a1,1
    8001629a:	04c10323          	sb	a2,70(sp)
            if unlikely!(b) {None} else {Some(a)}
    8001629e:	04c103a3          	sb	a2,71(sp)
    800162a2:	e432                	sd	a2,8(sp)
    800162a4:	a009                	j	800162a6 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E+0x34>
    800162a6:	4501                	li	a0,0
    800162a8:	65a2                	ld	a1,8(sp)
    800162aa:	00a58663          	beq	a1,a0,800162b6 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E+0x44>
    800162ae:	a009                	j	800162b0 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E+0x3e>
    800162b0:	4501                	li	a0,0
    800162b2:	d82a                	sw	a0,48(sp)
    800162b4:	a031                	j	800162c0 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E+0x4e>
    800162b6:	6562                	ld	a0,24(sp)
    800162b8:	da2a                	sw	a0,52(sp)
    800162ba:	4585                	li	a1,1
    800162bc:	d82e                	sw	a1,48(sp)
    800162be:	a009                	j	800162c0 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E+0x4e>
        }
    800162c0:	5542                	lw	a0,48(sp)
    800162c2:	55d2                	lw	a1,52(sp)
    800162c4:	60a6                	ld	ra,72(sp)
    800162c6:	6161                	addi	sp,sp,80
    800162c8:	8082                	ret

Disassembly of section .text._ZN4core3num21_$LT$impl$u20$u32$GT$13unchecked_add17hb130835cf0cc9f4fE:

00000000800162ca <_ZN4core3num21_$LT$impl$u20$u32$GT$13unchecked_add17hb130835cf0cc9f4fE>:
        pub unsafe fn unchecked_add(self, rhs: Self) -> Self {
    800162ca:	1101                	addi	sp,sp,-32
    800162cc:	862e                	mv	a2,a1
    800162ce:	86aa                	mv	a3,a0
    800162d0:	ca2a                	sw	a0,20(sp)
    800162d2:	cc2e                	sw	a1,24(sp)
            unsafe { intrinsics::unchecked_add(self, rhs) }
    800162d4:	952e                	add	a0,a0,a1
    800162d6:	ce2a                	sw	a0,28(sp)
    800162d8:	1502                	slli	a0,a0,0x20
    800162da:	9101                	srli	a0,a0,0x20
    800162dc:	e42a                	sd	a0,8(sp)
    800162de:	a009                	j	800162e0 <_ZN4core3num21_$LT$impl$u20$u32$GT$13unchecked_add17hb130835cf0cc9f4fE+0x16>
        }
    800162e0:	6522                	ld	a0,8(sp)
    800162e2:	6105                	addi	sp,sp,32
    800162e4:	8082                	ret

Disassembly of section .text._ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17hf0ff2b6348d5978cE:

00000000800162e6 <_ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17hf0ff2b6348d5978cE>:
        #[stable(feature = "wrapping", since = "1.7.0")]
        #[rustc_const_stable(feature = "const_wrapping_math", since = "1.32.0")]
        #[must_use = "this returns the result of the operation, \
                      without modifying the original"]
        #[inline]
        pub const fn overflowing_add(self, rhs: Self) -> (Self, bool) {
    800162e6:	7179                	addi	sp,sp,-48
    800162e8:	02059613          	slli	a2,a1,0x20
    800162ec:	9201                	srli	a2,a2,0x20
    800162ee:	02051693          	slli	a3,a0,0x20
    800162f2:	9281                	srli	a3,a3,0x20
    800162f4:	872e                	mv	a4,a1
    800162f6:	87aa                	mv	a5,a0
    800162f8:	cc2a                	sw	a0,24(sp)
    800162fa:	ce2e                	sw	a1,28(sp)
            let (a, b) = intrinsics::add_with_overflow(self as $ActualT, rhs as $ActualT);
    800162fc:	00c68533          	add	a0,a3,a2
    80016300:	02051593          	slli	a1,a0,0x20
    80016304:	9181                	srli	a1,a1,0x20
    80016306:	00a5c633          	xor	a2,a1,a0
    8001630a:	00c03633          	snez	a2,a2
    8001630e:	d02a                	sw	a0,32(sp)
    80016310:	02c10223          	sb	a2,36(sp)
    80016314:	e42e                	sd	a1,8(sp)
    80016316:	e032                	sd	a2,0(sp)
    80016318:	a009                	j	8001631a <_ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17hf0ff2b6348d5978cE+0x34>
    8001631a:	6522                	ld	a0,8(sp)
    8001631c:	d42a                	sw	a0,40(sp)
    8001631e:	6582                	ld	a1,0(sp)
    80016320:	02b107a3          	sb	a1,47(sp)
            (a as Self, b)
    80016324:	c82a                	sw	a0,16(sp)
    80016326:	00b10a23          	sb	a1,20(sp)
        }
    8001632a:	6145                	addi	sp,sp,48
    8001632c:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hb7071c0053580154E:

000000008001632e <_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hb7071c0053580154E>:
        pub const fn count_ones(self) -> u32 {
    8001632e:	1101                	addi	sp,sp,-32
    80016330:	e82a                	sd	a0,16(sp)
            intrinsics::ctpop(self as $ActualT) as u32
    80016332:	00155593          	srli	a1,a0,0x1
    80016336:	05555637          	lui	a2,0x5555
    8001633a:	5556061b          	addiw	a2,a2,1365
    8001633e:	0632                	slli	a2,a2,0xc
    80016340:	55560613          	addi	a2,a2,1365 # 5555555 <.Lline_table_start0+0x551d20e>
    80016344:	0632                	slli	a2,a2,0xc
    80016346:	55560613          	addi	a2,a2,1365
    8001634a:	0632                	slli	a2,a2,0xc
    8001634c:	55560613          	addi	a2,a2,1365
    80016350:	8df1                	and	a1,a1,a2
    80016352:	8d0d                	sub	a0,a0,a1
    80016354:	033335b7          	lui	a1,0x3333
    80016358:	3335859b          	addiw	a1,a1,819
    8001635c:	05b2                	slli	a1,a1,0xc
    8001635e:	33358593          	addi	a1,a1,819 # 3333333 <.Lline_table_start0+0x32fafec>
    80016362:	05b2                	slli	a1,a1,0xc
    80016364:	33358593          	addi	a1,a1,819
    80016368:	05b2                	slli	a1,a1,0xc
    8001636a:	33358593          	addi	a1,a1,819
    8001636e:	00b57633          	and	a2,a0,a1
    80016372:	8109                	srli	a0,a0,0x2
    80016374:	8d6d                	and	a0,a0,a1
    80016376:	9532                	add	a0,a0,a2
    80016378:	00455593          	srli	a1,a0,0x4
    8001637c:	952e                	add	a0,a0,a1
    8001637e:	00f0f5b7          	lui	a1,0xf0f
    80016382:	0f15859b          	addiw	a1,a1,241
    80016386:	05b2                	slli	a1,a1,0xc
    80016388:	f0f58593          	addi	a1,a1,-241 # f0ef0f <.Lline_table_start0+0xed6bc8>
    8001638c:	05b2                	slli	a1,a1,0xc
    8001638e:	0f158593          	addi	a1,a1,241
    80016392:	05b2                	slli	a1,a1,0xc
    80016394:	f0f58593          	addi	a1,a1,-241
    80016398:	8d6d                	and	a0,a0,a1
    8001639a:	010105b7          	lui	a1,0x1010
    8001639e:	1015859b          	addiw	a1,a1,257
    800163a2:	05c2                	slli	a1,a1,0x10
    800163a4:	10158593          	addi	a1,a1,257 # 1010101 <.Lline_table_start0+0xfd7dba>
    800163a8:	05c2                	slli	a1,a1,0x10
    800163aa:	10158593          	addi	a1,a1,257
    800163ae:	02b50533          	mul	a0,a0,a1
    800163b2:	9161                	srli	a0,a0,0x38
    800163b4:	ec2a                	sd	a0,24(sp)
    800163b6:	e42a                	sd	a0,8(sp)
    800163b8:	a009                	j	800163ba <_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hb7071c0053580154E+0x8c>
        }
    800163ba:	6522                	ld	a0,8(sp)
    800163bc:	6105                	addi	sp,sp,32
    800163be:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE:

00000000800163c0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE>:
        pub const fn checked_add(self, rhs: Self) -> Option<Self> {
    800163c0:	715d                	addi	sp,sp,-80
    800163c2:	e486                	sd	ra,72(sp)
    800163c4:	f42a                	sd	a0,40(sp)
    800163c6:	f82e                	sd	a1,48(sp)
            let (a, b) = self.overflowing_add(rhs);
    800163c8:	00000097          	auipc	ra,0x0
    800163cc:	18e080e7          	jalr	398(ra) # 80016556 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h25e515ee8b640e09E>
    800163d0:	e82a                	sd	a0,16(sp)
    800163d2:	e42e                	sd	a1,8(sp)
    800163d4:	a009                	j	800163d6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE+0x16>
    800163d6:	6542                	ld	a0,16(sp)
    800163d8:	fc2a                	sd	a0,56(sp)
    800163da:	65a2                	ld	a1,8(sp)
    800163dc:	0015f613          	andi	a2,a1,1
    800163e0:	04c10323          	sb	a2,70(sp)
            if unlikely!(b) {None} else {Some(a)}
    800163e4:	04c103a3          	sb	a2,71(sp)
    800163e8:	e032                	sd	a2,0(sp)
    800163ea:	a009                	j	800163ec <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE+0x2c>
    800163ec:	4501                	li	a0,0
    800163ee:	6582                	ld	a1,0(sp)
    800163f0:	00a58663          	beq	a1,a0,800163fc <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE+0x3c>
    800163f4:	a009                	j	800163f6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE+0x36>
    800163f6:	4501                	li	a0,0
    800163f8:	ec2a                	sd	a0,24(sp)
    800163fa:	a031                	j	80016406 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE+0x46>
    800163fc:	6542                	ld	a0,16(sp)
    800163fe:	f02a                	sd	a0,32(sp)
    80016400:	4585                	li	a1,1
    80016402:	ec2e                	sd	a1,24(sp)
    80016404:	a009                	j	80016406 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE+0x46>
        }
    80016406:	6562                	ld	a0,24(sp)
    80016408:	7582                	ld	a1,32(sp)
    8001640a:	60a6                	ld	ra,72(sp)
    8001640c:	6161                	addi	sp,sp,80
    8001640e:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E:

0000000080016410 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E>:
        pub const fn checked_mul(self, rhs: Self) -> Option<Self> {
    80016410:	715d                	addi	sp,sp,-80
    80016412:	e486                	sd	ra,72(sp)
    80016414:	f42a                	sd	a0,40(sp)
    80016416:	f82e                	sd	a1,48(sp)
            let (a, b) = self.overflowing_mul(rhs);
    80016418:	00000097          	auipc	ra,0x0
    8001641c:	16a080e7          	jalr	362(ra) # 80016582 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h6f46e686af1ebd29E>
    80016420:	e82a                	sd	a0,16(sp)
    80016422:	e42e                	sd	a1,8(sp)
    80016424:	a009                	j	80016426 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E+0x16>
    80016426:	6542                	ld	a0,16(sp)
    80016428:	fc2a                	sd	a0,56(sp)
    8001642a:	65a2                	ld	a1,8(sp)
    8001642c:	0015f613          	andi	a2,a1,1
    80016430:	04c10323          	sb	a2,70(sp)
            if unlikely!(b) {None} else {Some(a)}
    80016434:	04c103a3          	sb	a2,71(sp)
    80016438:	e032                	sd	a2,0(sp)
    8001643a:	a009                	j	8001643c <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E+0x2c>
    8001643c:	4501                	li	a0,0
    8001643e:	6582                	ld	a1,0(sp)
    80016440:	00a58663          	beq	a1,a0,8001644c <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E+0x3c>
    80016444:	a009                	j	80016446 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E+0x36>
    80016446:	4501                	li	a0,0
    80016448:	ec2a                	sd	a0,24(sp)
    8001644a:	a031                	j	80016456 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E+0x46>
    8001644c:	6542                	ld	a0,16(sp)
    8001644e:	f02a                	sd	a0,32(sp)
    80016450:	4585                	li	a1,1
    80016452:	ec2e                	sd	a1,24(sp)
    80016454:	a009                	j	80016456 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h74158944d57e4590E+0x46>
        }
    80016456:	6562                	ld	a0,24(sp)
    80016458:	7582                	ld	a1,32(sp)
    8001645a:	60a6                	ld	ra,72(sp)
    8001645c:	6161                	addi	sp,sp,80
    8001645e:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E:

0000000080016460 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E>:
        pub const fn checked_sub(self, rhs: Self) -> Option<Self> {
    80016460:	715d                	addi	sp,sp,-80
    80016462:	e486                	sd	ra,72(sp)
    80016464:	f42a                	sd	a0,40(sp)
    80016466:	f82e                	sd	a1,48(sp)
            let (a, b) = self.overflowing_sub(rhs);
    80016468:	00000097          	auipc	ra,0x0
    8001646c:	14c080e7          	jalr	332(ra) # 800165b4 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h9448744e4fc3c963E>
    80016470:	e82a                	sd	a0,16(sp)
    80016472:	e42e                	sd	a1,8(sp)
    80016474:	a009                	j	80016476 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E+0x16>
    80016476:	6542                	ld	a0,16(sp)
    80016478:	fc2a                	sd	a0,56(sp)
    8001647a:	65a2                	ld	a1,8(sp)
    8001647c:	0015f613          	andi	a2,a1,1
    80016480:	04c10323          	sb	a2,70(sp)
            if unlikely!(b) {None} else {Some(a)}
    80016484:	04c103a3          	sb	a2,71(sp)
    80016488:	e032                	sd	a2,0(sp)
    8001648a:	a009                	j	8001648c <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E+0x2c>
    8001648c:	4501                	li	a0,0
    8001648e:	6582                	ld	a1,0(sp)
    80016490:	00a58663          	beq	a1,a0,8001649c <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E+0x3c>
    80016494:	a009                	j	80016496 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E+0x36>
    80016496:	4501                	li	a0,0
    80016498:	ec2a                	sd	a0,24(sp)
    8001649a:	a031                	j	800164a6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E+0x46>
    8001649c:	6542                	ld	a0,16(sp)
    8001649e:	f02a                	sd	a0,32(sp)
    800164a0:	4585                	li	a1,1
    800164a2:	ec2e                	sd	a1,24(sp)
    800164a4:	a009                	j	800164a6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E+0x46>
        }
    800164a6:	6562                	ld	a0,24(sp)
    800164a8:	7582                	ld	a1,32(sp)
    800164aa:	60a6                	ld	ra,72(sp)
    800164ac:	6161                	addi	sp,sp,80
    800164ae:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hd953d4ef26e36608E:

00000000800164b0 <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hd953d4ef26e36608E>:
        pub const fn wrapping_add(self, rhs: Self) -> Self {
    800164b0:	1141                	addi	sp,sp,-16
    800164b2:	e02a                	sd	a0,0(sp)
    800164b4:	e42e                	sd	a1,8(sp)
            intrinsics::wrapping_add(self, rhs)
    800164b6:	952e                	add	a0,a0,a1
        }
    800164b8:	0141                	addi	sp,sp,16
    800164ba:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17ha895a6f73d27b4f7E:

00000000800164bc <_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17ha895a6f73d27b4f7E>:
        pub const fn wrapping_sub(self, rhs: Self) -> Self {
    800164bc:	1141                	addi	sp,sp,-16
    800164be:	e02a                	sd	a0,0(sp)
    800164c0:	e42e                	sd	a1,8(sp)
            intrinsics::wrapping_sub(self, rhs)
    800164c2:	8d0d                	sub	a0,a0,a1
        }
    800164c4:	0141                	addi	sp,sp,16
    800164c6:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$13from_le_bytes17h0becb231dcd886d9E:

00000000800164c8 <_ZN4core3num23_$LT$impl$u20$usize$GT$13from_le_bytes17h0becb231dcd886d9E>:
        /// }
        /// ```
        #[stable(feature = "int_to_from_bytes", since = "1.32.0")]
        #[rustc_const_stable(feature = "const_int_conversion", since = "1.44.0")]
        #[inline]
        pub const fn from_le_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {
    800164c8:	7179                	addi	sp,sp,-48
    800164ca:	f406                	sd	ra,40(sp)
    800164cc:	ec2a                	sd	a0,24(sp)
    800164ce:	e82a                	sd	a0,16(sp)
            Self::from_le(Self::from_ne_bytes(bytes))
    800164d0:	f02a                	sd	a0,32(sp)
    800164d2:	00000097          	auipc	ra,0x0
    800164d6:	022080e7          	jalr	34(ra) # 800164f4 <_ZN4core3num23_$LT$impl$u20$usize$GT$13from_ne_bytes17h3b1bb52a5eaf70faE>
    800164da:	e42a                	sd	a0,8(sp)
    800164dc:	a009                	j	800164de <_ZN4core3num23_$LT$impl$u20$usize$GT$13from_le_bytes17h0becb231dcd886d9E+0x16>
    800164de:	6522                	ld	a0,8(sp)
    800164e0:	00000097          	auipc	ra,0x0
    800164e4:	102080e7          	jalr	258(ra) # 800165e2 <_ZN4core3num23_$LT$impl$u20$usize$GT$7from_le17he04485b4ca68808bE>
    800164e8:	e02a                	sd	a0,0(sp)
    800164ea:	a009                	j	800164ec <_ZN4core3num23_$LT$impl$u20$usize$GT$13from_le_bytes17h0becb231dcd886d9E+0x24>
        }
    800164ec:	6502                	ld	a0,0(sp)
    800164ee:	70a2                	ld	ra,40(sp)
    800164f0:	6145                	addi	sp,sp,48
    800164f2:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$13from_ne_bytes17h3b1bb52a5eaf70faE:

00000000800164f4 <_ZN4core3num23_$LT$impl$u20$usize$GT$13from_ne_bytes17h3b1bb52a5eaf70faE>:
        #[rustc_const_stable(feature = "const_int_conversion", since = "1.44.0")]
        // SAFETY: const sound because integers are plain old datatypes so we can always
        // transmute to them
        #[rustc_allow_const_fn_unstable(const_fn_transmute)]
        #[inline]
        pub const fn from_ne_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {
    800164f4:	7179                	addi	sp,sp,-48
    800164f6:	ec2a                	sd	a0,24(sp)
    800164f8:	e82a                	sd	a0,16(sp)
            // SAFETY: integers are plain old datatypes so we can always transmute to them
            unsafe { mem::transmute(bytes) }
    800164fa:	f02a                	sd	a0,32(sp)
    800164fc:	f42a                	sd	a0,40(sp)
    800164fe:	e42a                	sd	a0,8(sp)
    80016500:	a009                	j	80016502 <_ZN4core3num23_$LT$impl$u20$usize$GT$13from_ne_bytes17h3b1bb52a5eaf70faE+0xe>
        }
    80016502:	6522                	ld	a0,8(sp)
    80016504:	6145                	addi	sp,sp,48
    80016506:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h5e607d2949000324E:

0000000080016508 <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h5e607d2949000324E>:
        pub unsafe fn unchecked_add(self, rhs: Self) -> Self {
    80016508:	1101                	addi	sp,sp,-32
    8001650a:	e42a                	sd	a0,8(sp)
    8001650c:	e82e                	sd	a1,16(sp)
            unsafe { intrinsics::unchecked_add(self, rhs) }
    8001650e:	952e                	add	a0,a0,a1
    80016510:	ec2a                	sd	a0,24(sp)
    80016512:	e02a                	sd	a0,0(sp)
    80016514:	a009                	j	80016516 <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h5e607d2949000324E+0xe>
        }
    80016516:	6502                	ld	a0,0(sp)
    80016518:	6105                	addi	sp,sp,32
    8001651a:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub17h9b0c642caf21362dE:

000000008001651c <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub17h9b0c642caf21362dE>:
        pub unsafe fn unchecked_sub(self, rhs: Self) -> Self {
    8001651c:	1101                	addi	sp,sp,-32
    8001651e:	e42a                	sd	a0,8(sp)
    80016520:	e82e                	sd	a1,16(sp)
            unsafe { intrinsics::unchecked_sub(self, rhs) }
    80016522:	8d0d                	sub	a0,a0,a1
    80016524:	ec2a                	sd	a0,24(sp)
    80016526:	e02a                	sd	a0,0(sp)
    80016528:	a009                	j	8001652a <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub17h9b0c642caf21362dE+0xe>
        }
    8001652a:	6502                	ld	a0,0(sp)
    8001652c:	6105                	addi	sp,sp,32
    8001652e:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17hcb48402cc74226bcE:

0000000080016530 <_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17hcb48402cc74226bcE>:
        pub const fn is_power_of_two(self) -> bool {
    80016530:	1101                	addi	sp,sp,-32
    80016532:	ec06                	sd	ra,24(sp)
    80016534:	e82a                	sd	a0,16(sp)
            self.count_ones() == 1
    80016536:	00000097          	auipc	ra,0x0
    8001653a:	df8080e7          	jalr	-520(ra) # 8001632e <_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hb7071c0053580154E>
    8001653e:	e42a                	sd	a0,8(sp)
    80016540:	a009                	j	80016542 <_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17hcb48402cc74226bcE+0x12>
    80016542:	6522                	ld	a0,8(sp)
    80016544:	02051593          	slli	a1,a0,0x20
    80016548:	9181                	srli	a1,a1,0x20
    8001654a:	15fd                	addi	a1,a1,-1
    8001654c:	0015b513          	seqz	a0,a1
        }
    80016550:	60e2                	ld	ra,24(sp)
    80016552:	6105                	addi	sp,sp,32
    80016554:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h25e515ee8b640e09E:

0000000080016556 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h25e515ee8b640e09E>:
        pub const fn overflowing_add(self, rhs: Self) -> (Self, bool) {
    80016556:	715d                	addi	sp,sp,-80
    80016558:	f02a                	sd	a0,32(sp)
    8001655a:	f42e                	sd	a1,40(sp)
            let (a, b) = intrinsics::add_with_overflow(self as $ActualT, rhs as $ActualT);
    8001655c:	95aa                	add	a1,a1,a0
    8001655e:	00a5b533          	sltu	a0,a1,a0
    80016562:	f82e                	sd	a1,48(sp)
    80016564:	02a10c23          	sb	a0,56(sp)
    80016568:	e42e                	sd	a1,8(sp)
    8001656a:	e02a                	sd	a0,0(sp)
    8001656c:	a009                	j	8001656e <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h25e515ee8b640e09E+0x18>
    8001656e:	6522                	ld	a0,8(sp)
    80016570:	e0aa                	sd	a0,64(sp)
    80016572:	6582                	ld	a1,0(sp)
    80016574:	04b107a3          	sb	a1,79(sp)
            (a as Self, b)
    80016578:	e82a                	sd	a0,16(sp)
    8001657a:	00b10c23          	sb	a1,24(sp)
        }
    8001657e:	6161                	addi	sp,sp,80
    80016580:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h6f46e686af1ebd29E:

0000000080016582 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h6f46e686af1ebd29E>:
        pub const fn overflowing_mul(self, rhs: Self) -> (Self, bool) {
    80016582:	715d                	addi	sp,sp,-80
    80016584:	f02a                	sd	a0,32(sp)
    80016586:	f42e                	sd	a1,40(sp)
            let (a, b) = intrinsics::mul_with_overflow(self as $ActualT, rhs as $ActualT);
    80016588:	02b53633          	mulhu	a2,a0,a1
    8001658c:	00c03633          	snez	a2,a2
    80016590:	02b50533          	mul	a0,a0,a1
    80016594:	f82a                	sd	a0,48(sp)
    80016596:	02c10c23          	sb	a2,56(sp)
    8001659a:	e432                	sd	a2,8(sp)
    8001659c:	e02a                	sd	a0,0(sp)
    8001659e:	a009                	j	800165a0 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h6f46e686af1ebd29E+0x1e>
    800165a0:	6502                	ld	a0,0(sp)
    800165a2:	e0aa                	sd	a0,64(sp)
    800165a4:	65a2                	ld	a1,8(sp)
    800165a6:	04b107a3          	sb	a1,79(sp)
            (a as Self, b)
    800165aa:	e82a                	sd	a0,16(sp)
    800165ac:	00b10c23          	sb	a1,24(sp)
        }
    800165b0:	6161                	addi	sp,sp,80
    800165b2:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h9448744e4fc3c963E:

00000000800165b4 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h9448744e4fc3c963E>:
        pub const fn overflowing_sub(self, rhs: Self) -> (Self, bool) {
    800165b4:	715d                	addi	sp,sp,-80
    800165b6:	f02a                	sd	a0,32(sp)
    800165b8:	f42e                	sd	a1,40(sp)
            let (a, b) = intrinsics::sub_with_overflow(self as $ActualT, rhs as $ActualT);
    800165ba:	40b505b3          	sub	a1,a0,a1
    800165be:	00b53533          	sltu	a0,a0,a1
    800165c2:	f82e                	sd	a1,48(sp)
    800165c4:	02a10c23          	sb	a0,56(sp)
    800165c8:	e42e                	sd	a1,8(sp)
    800165ca:	e02a                	sd	a0,0(sp)
    800165cc:	a009                	j	800165ce <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h9448744e4fc3c963E+0x1a>
    800165ce:	6522                	ld	a0,8(sp)
    800165d0:	e0aa                	sd	a0,64(sp)
    800165d2:	6582                	ld	a1,0(sp)
    800165d4:	04b107a3          	sb	a1,79(sp)
            (a as Self, b)
    800165d8:	e82a                	sd	a0,16(sp)
    800165da:	00b10c23          	sb	a1,24(sp)
        }
    800165de:	6161                	addi	sp,sp,80
    800165e0:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$7from_le17he04485b4ca68808bE:

00000000800165e2 <_ZN4core3num23_$LT$impl$u20$usize$GT$7from_le17he04485b4ca68808bE>:
        pub const fn from_le(x: Self) -> Self {
    800165e2:	1141                	addi	sp,sp,-16
    800165e4:	e42a                	sd	a0,8(sp)
        }
    800165e6:	0141                	addi	sp,sp,16
    800165e8:	8082                	ret

Disassembly of section .text._ZN6kernel8register5clint10read_mtime17h6d9b19e5915d7233E:

00000000800165ea <_ZN6kernel8register5clint10read_mtime17h6d9b19e5915d7233E>:
use crate::define::layout::{CLINT_MTIME, CLINT_MTIMECMP, CLINT};

// core local interruptor (CLINT), which contains the timer.

#[inline]
unsafe fn read_mtime() -> u64 {
    800165ea:	1101                	addi	sp,sp,-32
    800165ec:	ec06                	sd	ra,24(sp)
    800165ee:	0200c537          	lui	a0,0x200c
    800165f2:	3561                	addiw	a0,a0,-8
    ptr::read_volatile(Into::<usize>::into(CLINT_MTIME) as *const u64)
    800165f4:	00003097          	auipc	ra,0x3
    800165f8:	c00080e7          	jalr	-1024(ra) # 800191f4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE>
    800165fc:	e82a                	sd	a0,16(sp)
    800165fe:	a009                	j	80016600 <_ZN6kernel8register5clint10read_mtime17h6d9b19e5915d7233E+0x16>
    80016600:	6542                	ld	a0,16(sp)
    80016602:	ffffa097          	auipc	ra,0xffffa
    80016606:	e16080e7          	jalr	-490(ra) # 80010418 <_ZN4core3ptr13read_volatile17h6212b0dcb26cb62cE>
    8001660a:	e42a                	sd	a0,8(sp)
    8001660c:	a009                	j	8001660e <_ZN6kernel8register5clint10read_mtime17h6d9b19e5915d7233E+0x24>
}
    8001660e:	6522                	ld	a0,8(sp)
    80016610:	60e2                	ld	ra,24(sp)
    80016612:	6105                	addi	sp,sp,32
    80016614:	8082                	ret

Disassembly of section .text._ZN6kernel8register5clint14write_mtimecmp17h73a068875deef154E:

0000000080016616 <_ZN6kernel8register5clint14write_mtimecmp17h73a068875deef154E>:

unsafe fn write_mtimecmp(mhartid:usize, value: u64) {
    80016616:	715d                	addi	sp,sp,-80
    80016618:	e486                	sd	ra,72(sp)
    8001661a:	f82a                	sd	a0,48(sp)
    8001661c:	fc2e                	sd	a1,56(sp)
    8001661e:	02004637          	lui	a2,0x2004
    let offset = Into::<usize>::into(CLINT_MTIMECMP) + 8*mhartid;
    80016622:	f42a                	sd	a0,40(sp)
    80016624:	8532                	mv	a0,a2
    80016626:	f02e                	sd	a1,32(sp)
    80016628:	00003097          	auipc	ra,0x3
    8001662c:	bcc080e7          	jalr	-1076(ra) # 800191f4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE>
    80016630:	ec2a                	sd	a0,24(sp)
    80016632:	a009                	j	80016634 <_ZN6kernel8register5clint14write_mtimecmp17h73a068875deef154E+0x1e>
    80016634:	4505                	li	a0,1
    80016636:	1576                	slli	a0,a0,0x3d
    80016638:	157d                	addi	a0,a0,-1
    8001663a:	75a2                	ld	a1,40(sp)
    8001663c:	8d6d                	and	a0,a0,a1
    8001663e:	00359613          	slli	a2,a1,0x3
    80016642:	e832                	sd	a2,16(sp)
    80016644:	02b51663          	bne	a0,a1,80016670 <.LBB1_7>
    80016648:	a009                	j	8001664a <_ZN6kernel8register5clint14write_mtimecmp17h73a068875deef154E+0x34>
    8001664a:	6562                	ld	a0,24(sp)
    8001664c:	65c2                	ld	a1,16(sp)
    8001664e:	00b50633          	add	a2,a0,a1
    80016652:	e432                	sd	a2,8(sp)
    80016654:	02a66d63          	bltu	a2,a0,8001668e <.LBB1_9>
    80016658:	a009                	j	8001665a <_ZN6kernel8register5clint14write_mtimecmp17h73a068875deef154E+0x44>
    8001665a:	6522                	ld	a0,8(sp)
    8001665c:	e0aa                	sd	a0,64(sp)
    ptr::write_volatile(offset as *mut u64, value);
    8001665e:	7582                	ld	a1,32(sp)
    80016660:	ffffa097          	auipc	ra,0xffffa
    80016664:	e04080e7          	jalr	-508(ra) # 80010464 <_ZN4core3ptr14write_volatile17hbcd48ac0cf1167baE>
    80016668:	a009                	j	8001666a <_ZN6kernel8register5clint14write_mtimecmp17h73a068875deef154E+0x54>
}
    8001666a:	60a6                	ld	ra,72(sp)
    8001666c:	6161                	addi	sp,sp,80
    8001666e:	8082                	ret

0000000080016670 <.LBB1_7>:
    let offset = Into::<usize>::into(CLINT_MTIMECMP) + 8*mhartid;
    80016670:	00011517          	auipc	a0,0x11
    80016674:	4d050513          	addi	a0,a0,1232 # 80027b40 <str.0>

0000000080016678 <.LBB1_8>:
    80016678:	00011617          	auipc	a2,0x11
    8001667c:	4a860613          	addi	a2,a2,1192 # 80027b20 <.L__unnamed_1>
    80016680:	02100593          	li	a1,33
    80016684:	0000a097          	auipc	ra,0xa
    80016688:	646080e7          	jalr	1606(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001668e <.LBB1_9>:
    8001668e:	00011517          	auipc	a0,0x11
    80016692:	4f250513          	addi	a0,a0,1266 # 80027b80 <str.1>

0000000080016696 <.LBB1_10>:
    80016696:	00011617          	auipc	a2,0x11
    8001669a:	4d260613          	addi	a2,a2,1234 # 80027b68 <.L__unnamed_2>
    8001669e:	45f1                	li	a1,28
    800166a0:	0000a097          	auipc	ra,0xa
    800166a4:	62a080e7          	jalr	1578(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel8register5clint12add_mtimecmp17h46e9dfd75e231c3eE:

00000000800166aa <_ZN6kernel8register5clint12add_mtimecmp17h46e9dfd75e231c3eE>:

pub unsafe fn add_mtimecmp(mhartid:usize, interval:u64){
    800166aa:	7139                	addi	sp,sp,-64
    800166ac:	fc06                	sd	ra,56(sp)
    800166ae:	f02a                	sd	a0,32(sp)
    800166b0:	f42e                	sd	a1,40(sp)
    let value = read_mtime();
    800166b2:	ec2e                	sd	a1,24(sp)
    800166b4:	e82a                	sd	a0,16(sp)
    800166b6:	00000097          	auipc	ra,0x0
    800166ba:	f34080e7          	jalr	-204(ra) # 800165ea <_ZN6kernel8register5clint10read_mtime17h6d9b19e5915d7233E>
    800166be:	85aa                	mv	a1,a0
    800166c0:	f82a                	sd	a0,48(sp)
    800166c2:	e42e                	sd	a1,8(sp)
    800166c4:	a009                	j	800166c6 <_ZN6kernel8register5clint12add_mtimecmp17h46e9dfd75e231c3eE+0x1c>
    write_mtimecmp(mhartid, value+interval);
    800166c6:	6522                	ld	a0,8(sp)
    800166c8:	65e2                	ld	a1,24(sp)
    800166ca:	00b50633          	add	a2,a0,a1
    800166ce:	e032                	sd	a2,0(sp)
    800166d0:	00a66d63          	bltu	a2,a0,800166ea <.LBB2_5>
    800166d4:	a009                	j	800166d6 <_ZN6kernel8register5clint12add_mtimecmp17h46e9dfd75e231c3eE+0x2c>
    800166d6:	6542                	ld	a0,16(sp)
    800166d8:	6582                	ld	a1,0(sp)
    800166da:	00000097          	auipc	ra,0x0
    800166de:	f3c080e7          	jalr	-196(ra) # 80016616 <_ZN6kernel8register5clint14write_mtimecmp17h73a068875deef154E>
    800166e2:	a009                	j	800166e4 <_ZN6kernel8register5clint12add_mtimecmp17h46e9dfd75e231c3eE+0x3a>
}
    800166e4:	70e2                	ld	ra,56(sp)
    800166e6:	6121                	addi	sp,sp,64
    800166e8:	8082                	ret

00000000800166ea <.LBB2_5>:
    write_mtimecmp(mhartid, value+interval);
    800166ea:	00011517          	auipc	a0,0x11
    800166ee:	49650513          	addi	a0,a0,1174 # 80027b80 <str.1>

00000000800166f2 <.LBB2_6>:
    800166f2:	00011617          	auipc	a2,0x11
    800166f6:	4ae60613          	addi	a2,a2,1198 # 80027ba0 <.L__unnamed_3>
    800166fa:	45f1                	li	a1,28
    800166fc:	0000a097          	auipc	ra,0xa
    80016700:	5ce080e7          	jalr	1486(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel8register5clint13count_mtiecmp17h27ec2b6e04b747b1E:

0000000080016706 <_ZN6kernel8register5clint13count_mtiecmp17h27ec2b6e04b747b1E>:

pub fn count_mtiecmp(mhartid:usize) -> usize{
    80016706:	7139                	addi	sp,sp,-64
    80016708:	fc06                	sd	ra,56(sp)
    8001670a:	f42a                	sd	a0,40(sp)
    8001670c:	020005b7          	lui	a1,0x2000
    let ret:usize;
    ret = Into::<usize>::into(CLINT) + 8*mhartid + 0x4000;
    80016710:	f02a                	sd	a0,32(sp)
    80016712:	852e                	mv	a0,a1
    80016714:	00003097          	auipc	ra,0x3
    80016718:	ae0080e7          	jalr	-1312(ra) # 800191f4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE>
    8001671c:	ec2a                	sd	a0,24(sp)
    8001671e:	a009                	j	80016720 <_ZN6kernel8register5clint13count_mtiecmp17h27ec2b6e04b747b1E+0x1a>
    80016720:	4505                	li	a0,1
    80016722:	1576                	slli	a0,a0,0x3d
    80016724:	157d                	addi	a0,a0,-1
    80016726:	7582                	ld	a1,32(sp)
    80016728:	8d6d                	and	a0,a0,a1
    8001672a:	00359613          	slli	a2,a1,0x3
    8001672e:	e832                	sd	a2,16(sp)
    80016730:	02b51763          	bne	a0,a1,8001675e <.LBB3_8>
    80016734:	a009                	j	80016736 <_ZN6kernel8register5clint13count_mtiecmp17h27ec2b6e04b747b1E+0x30>
    80016736:	6562                	ld	a0,24(sp)
    80016738:	65c2                	ld	a1,16(sp)
    8001673a:	00b50633          	add	a2,a0,a1
    8001673e:	e432                	sd	a2,8(sp)
    80016740:	02a66e63          	bltu	a2,a0,8001677c <.LBB3_10>
    80016744:	a009                	j	80016746 <_ZN6kernel8register5clint13count_mtiecmp17h27ec2b6e04b747b1E+0x40>
    80016746:	6511                	lui	a0,0x4
    80016748:	65a2                	ld	a1,8(sp)
    8001674a:	952e                	add	a0,a0,a1
    8001674c:	e02a                	sd	a0,0(sp)
    8001674e:	04b56563          	bltu	a0,a1,80016798 <.LBB3_12>
    80016752:	a009                	j	80016754 <_ZN6kernel8register5clint13count_mtiecmp17h27ec2b6e04b747b1E+0x4e>
    80016754:	6502                	ld	a0,0(sp)
    80016756:	f82a                	sd	a0,48(sp)
    ret
}
    80016758:	70e2                	ld	ra,56(sp)
    8001675a:	6121                	addi	sp,sp,64
    8001675c:	8082                	ret

000000008001675e <.LBB3_8>:
    ret = Into::<usize>::into(CLINT) + 8*mhartid + 0x4000;
    8001675e:	00011517          	auipc	a0,0x11
    80016762:	3e250513          	addi	a0,a0,994 # 80027b40 <str.0>

0000000080016766 <.LBB3_9>:
    80016766:	00011617          	auipc	a2,0x11
    8001676a:	45260613          	addi	a2,a2,1106 # 80027bb8 <.L__unnamed_4>
    8001676e:	02100593          	li	a1,33
    80016772:	0000a097          	auipc	ra,0xa
    80016776:	558080e7          	jalr	1368(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001677c <.LBB3_10>:
    8001677c:	00011517          	auipc	a0,0x11
    80016780:	40450513          	addi	a0,a0,1028 # 80027b80 <str.1>

0000000080016784 <.LBB3_11>:
    80016784:	00011617          	auipc	a2,0x11
    80016788:	44c60613          	addi	a2,a2,1100 # 80027bd0 <.L__unnamed_5>
    8001678c:	45f1                	li	a1,28
    8001678e:	0000a097          	auipc	ra,0xa
    80016792:	53c080e7          	jalr	1340(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080016798 <.LBB3_12>:
    80016798:	00011517          	auipc	a0,0x11
    8001679c:	3e850513          	addi	a0,a0,1000 # 80027b80 <str.1>

00000000800167a0 <.LBB3_13>:
    800167a0:	00011617          	auipc	a2,0x11
    800167a4:	43060613          	addi	a2,a2,1072 # 80027bd0 <.L__unnamed_5>
    800167a8:	45f1                	li	a1,28
    800167aa:	0000a097          	auipc	ra,0xa
    800167ae:	520080e7          	jalr	1312(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel8register3mie4read17h91b5237713f50ea4E:

00000000800167b4 <_ZN6kernel8register3mie4read17h91b5237713f50ea4E>:
    MTIE = 1 << 7,  // timer
    MSIE = 1 << 3  // software
}

#[inline]
pub unsafe fn read() -> usize {
    800167b4:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, mie":"=r"(ret):::"volatile");
    800167b6:	30402573          	csrr	a0,mie
    800167ba:	e42a                	sd	a0,8(sp)
    ret
}
    800167bc:	0141                	addi	sp,sp,16
    800167be:	8082                	ret

Disassembly of section .text._ZN6kernel8register3mie5write17hf39a605abac0cad9E:

00000000800167c0 <_ZN6kernel8register3mie5write17hf39a605abac0cad9E>:

#[inline]
pub unsafe fn write(x:usize){
    800167c0:	1141                	addi	sp,sp,-16
    800167c2:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw mie, $0"::"r"(x)::"volatile");
    800167c4:	30451073          	csrw	mie,a0
    800167c8:	0141                	addi	sp,sp,16
    800167ca:	8082                	ret

Disassembly of section .text._ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE:

00000000800167cc <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE>:
    /// allocation error are encouraged to call the [`handle_alloc_error`] function,
    /// rather than directly invoking `panic!` or similar.
    ///
    /// [`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html
    #[stable(feature = "global_alloc", since = "1.28.0")]
    unsafe fn alloc_zeroed(&self, layout: Layout) -> *mut u8 {
    800167cc:	711d                	addi	sp,sp,-96
    800167ce:	ec86                	sd	ra,88(sp)
    800167d0:	f82e                	sd	a1,48(sp)
    800167d2:	fc32                	sd	a2,56(sp)
    800167d4:	e0aa                	sd	a0,64(sp)
    800167d6:	180c                	addi	a1,sp,48
        let size = layout.size();
    800167d8:	f42a                	sd	a0,40(sp)
    800167da:	852e                	mv	a0,a1
    800167dc:	fffef097          	auipc	ra,0xfffef
    800167e0:	d98080e7          	jalr	-616(ra) # 80005574 <_ZN4core5alloc6layout6Layout4size17h143a0f1b4c0a6679E>
    800167e4:	85aa                	mv	a1,a0
    800167e6:	e4aa                	sd	a0,72(sp)
    800167e8:	f02e                	sd	a1,32(sp)
    800167ea:	a009                	j	800167ec <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x20>
        // SAFETY: the safety contract for `alloc` must be upheld by the caller.
        let ptr = unsafe { self.alloc(layout) };
    800167ec:	75c2                	ld	a1,48(sp)
    800167ee:	7662                	ld	a2,56(sp)
    800167f0:	7522                	ld	a0,40(sp)
    800167f2:	ffffd097          	auipc	ra,0xffffd
    800167f6:	02e080e7          	jalr	46(ra) # 80013820 <_ZN87_$LT$kernel..memory..kalloc..KernelHeap$u20$as$u20$core..alloc..global..GlobalAlloc$GT$5alloc17h61171683b14ca203E>
    800167fa:	85aa                	mv	a1,a0
    800167fc:	e8aa                	sd	a0,80(sp)
    800167fe:	ec2e                	sd	a1,24(sp)
    80016800:	a009                	j	80016802 <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x36>
        if !ptr.is_null() {
    80016802:	6562                	ld	a0,24(sp)
    80016804:	0000a097          	auipc	ra,0xa
    80016808:	f68080e7          	jalr	-152(ra) # 8002076c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE>
    8001680c:	e82a                	sd	a0,16(sp)
    8001680e:	a009                	j	80016810 <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x44>
    80016810:	6542                	ld	a0,16(sp)
    80016812:	ed09                	bnez	a0,8001682c <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x60>
    80016814:	a009                	j	80016816 <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x4a>
    80016816:	4501                	li	a0,0
            // SAFETY: as allocation succeeded, the region from `ptr`
            // of size `size` is guaranteed to be valid for writes.
            unsafe { ptr::write_bytes(ptr, 0, size) };
    80016818:	65e2                	ld	a1,24(sp)
    8001681a:	e42a                	sd	a0,8(sp)
    8001681c:	852e                	mv	a0,a1
    8001681e:	65a2                	ld	a1,8(sp)
    80016820:	7602                	ld	a2,32(sp)
    80016822:	0000a097          	auipc	ra,0xa
    80016826:	0be080e7          	jalr	190(ra) # 800208e0 <_ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE>
    8001682a:	a011                	j	8001682e <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x62>
        if !ptr.is_null() {
    8001682c:	a011                	j	80016830 <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x64>
    8001682e:	a009                	j	80016830 <_ZN4core5alloc6global11GlobalAlloc12alloc_zeroed17h2f69085da04307ddE+0x64>
        }
        ptr
    }
    80016830:	6562                	ld	a0,24(sp)
    80016832:	60e6                	ld	ra,88(sp)
    80016834:	6125                	addi	sp,sp,96
    80016836:	8082                	ret

Disassembly of section .text._ZN4core4cell13Cell$LT$T$GT$3get17h0e12a3149c7662f9E:

0000000080016838 <_ZN4core4cell13Cell$LT$T$GT$3get17h0e12a3149c7662f9E>:
    ///
    /// let five = c.get();
    /// ```
    #[inline]
    #[stable(feature = "rust1", since = "1.0.0")]
    pub fn get(&self) -> T {
    80016838:	1101                	addi	sp,sp,-32
    8001683a:	ec06                	sd	ra,24(sp)
    8001683c:	e82a                	sd	a0,16(sp)
        // SAFETY: This can cause data races if called from a separate thread,
        // but `Cell` is `!Sync` so this won't happen.
        unsafe { *self.value.get() }
    8001683e:	00000097          	auipc	ra,0x0
    80016842:	16a080e7          	jalr	362(ra) # 800169a8 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hc58ed601b76afc55E>
    80016846:	e42a                	sd	a0,8(sp)
    80016848:	a009                	j	8001684a <_ZN4core4cell13Cell$LT$T$GT$3get17h0e12a3149c7662f9E+0x12>
    8001684a:	6522                	ld	a0,8(sp)
    8001684c:	00054503          	lbu	a0,0(a0)
    }
    80016850:	60e2                	ld	ra,24(sp)
    80016852:	6105                	addi	sp,sp,32
    80016854:	8082                	ret

Disassembly of section .text._ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE:

0000000080016856 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE>:
    pub fn get(&self) -> T {
    80016856:	1101                	addi	sp,sp,-32
    80016858:	ec06                	sd	ra,24(sp)
    8001685a:	e82a                	sd	a0,16(sp)
        unsafe { *self.value.get() }
    8001685c:	00000097          	auipc	ra,0x0
    80016860:	124080e7          	jalr	292(ra) # 80016980 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h65ddf1cefe738ca0E>
    80016864:	e42a                	sd	a0,8(sp)
    80016866:	a009                	j	80016868 <_ZN4core4cell13Cell$LT$T$GT$3get17hb3554dc0e71bafcaE+0x12>
    80016868:	6522                	ld	a0,8(sp)
    8001686a:	6108                	ld	a0,0(a0)
    }
    8001686c:	60e2                	ld	ra,24(sp)
    8001686e:	6105                	addi	sp,sp,32
    80016870:	8082                	ret

Disassembly of section .text._ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E:

0000000080016872 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E>:
    pub fn set(&self, val: T) {
    80016872:	7179                	addi	sp,sp,-48
    80016874:	f406                	sd	ra,40(sp)
    80016876:	e82a                	sd	a0,16(sp)
    80016878:	ec2e                	sd	a1,24(sp)
        let old = self.replace(val);
    8001687a:	00000097          	auipc	ra,0x0
    8001687e:	06e080e7          	jalr	110(ra) # 800168e8 <_ZN4core4cell13Cell$LT$T$GT$7replace17h6def9a51320b6303E>
    80016882:	85aa                	mv	a1,a0
    80016884:	f02a                	sd	a0,32(sp)
    80016886:	e42e                	sd	a1,8(sp)
    80016888:	a009                	j	8001688a <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E+0x18>
        drop(old);
    8001688a:	6522                	ld	a0,8(sp)
    8001688c:	ffff7097          	auipc	ra,0xffff7
    80016890:	07a080e7          	jalr	122(ra) # 8000d906 <_ZN4core3mem4drop17h393d54ea566b7dd7E>
    80016894:	a009                	j	80016896 <_ZN4core4cell13Cell$LT$T$GT$3set17hc3ac7665606696e2E+0x24>
    }
    80016896:	70a2                	ld	ra,40(sp)
    80016898:	6145                	addi	sp,sp,48
    8001689a:	8082                	ret

Disassembly of section .text._ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE:

000000008001689c <_ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE>:
    pub fn set(&self, val: T) {
    8001689c:	7179                	addi	sp,sp,-48
    8001689e:	f406                	sd	ra,40(sp)
    800168a0:	862e                	mv	a2,a1
    800168a2:	ec2a                	sd	a0,24(sp)
    800168a4:	02b10323          	sb	a1,38(sp)
        let old = self.replace(val);
    800168a8:	e832                	sd	a2,16(sp)
    800168aa:	00000097          	auipc	ra,0x0
    800168ae:	06c080e7          	jalr	108(ra) # 80016916 <_ZN4core4cell13Cell$LT$T$GT$7replace17h7835bc5a8ba32077E>
    800168b2:	85aa                	mv	a1,a0
    800168b4:	02a103a3          	sb	a0,39(sp)
    800168b8:	e42e                	sd	a1,8(sp)
    800168ba:	a009                	j	800168bc <_ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE+0x20>
        drop(old);
    800168bc:	6522                	ld	a0,8(sp)
    800168be:	ffff7097          	auipc	ra,0xffff7
    800168c2:	05c080e7          	jalr	92(ra) # 8000d91a <_ZN4core3mem4drop17h4a75b27d9f12246bE>
    800168c6:	a009                	j	800168c8 <_ZN4core4cell13Cell$LT$T$GT$3set17hd68f1752b58bf00dE+0x2c>
    }
    800168c8:	70a2                	ld	ra,40(sp)
    800168ca:	6145                	addi	sp,sp,48
    800168cc:	8082                	ret

Disassembly of section .text._ZN4core4cell13Cell$LT$T$GT$6as_ptr17h42045593e383af58E:

00000000800168ce <_ZN4core4cell13Cell$LT$T$GT$6as_ptr17h42045593e383af58E>:
    /// let ptr = c.as_ptr();
    /// ```
    #[inline]
    #[stable(feature = "cell_as_ptr", since = "1.12.0")]
    #[rustc_const_stable(feature = "const_cell_as_ptr", since = "1.32.0")]
    pub const fn as_ptr(&self) -> *mut T {
    800168ce:	1101                	addi	sp,sp,-32
    800168d0:	ec06                	sd	ra,24(sp)
    800168d2:	e82a                	sd	a0,16(sp)
        self.value.get()
    800168d4:	00000097          	auipc	ra,0x0
    800168d8:	0d4080e7          	jalr	212(ra) # 800169a8 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hc58ed601b76afc55E>
    800168dc:	e42a                	sd	a0,8(sp)
    800168de:	a009                	j	800168e0 <_ZN4core4cell13Cell$LT$T$GT$6as_ptr17h42045593e383af58E+0x12>
    }
    800168e0:	6522                	ld	a0,8(sp)
    800168e2:	60e2                	ld	ra,24(sp)
    800168e4:	6105                	addi	sp,sp,32
    800168e6:	8082                	ret

Disassembly of section .text._ZN4core4cell13Cell$LT$T$GT$7replace17h6def9a51320b6303E:

00000000800168e8 <_ZN4core4cell13Cell$LT$T$GT$7replace17h6def9a51320b6303E>:
    pub fn replace(&self, val: T) -> T {
    800168e8:	7179                	addi	sp,sp,-48
    800168ea:	f406                	sd	ra,40(sp)
    800168ec:	ec2a                	sd	a0,24(sp)
    800168ee:	f02e                	sd	a1,32(sp)
        mem::replace(unsafe { &mut *self.value.get() }, val)
    800168f0:	e82e                	sd	a1,16(sp)
    800168f2:	00000097          	auipc	ra,0x0
    800168f6:	08e080e7          	jalr	142(ra) # 80016980 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h65ddf1cefe738ca0E>
    800168fa:	e42a                	sd	a0,8(sp)
    800168fc:	a009                	j	800168fe <_ZN4core4cell13Cell$LT$T$GT$7replace17h6def9a51320b6303E+0x16>
    800168fe:	6522                	ld	a0,8(sp)
    80016900:	65c2                	ld	a1,16(sp)
    80016902:	ffff7097          	auipc	ra,0xffff7
    80016906:	35c080e7          	jalr	860(ra) # 8000dc5e <_ZN4core3mem7replace17h7d8490d5f05eae2eE>
    8001690a:	e02a                	sd	a0,0(sp)
    8001690c:	a009                	j	8001690e <_ZN4core4cell13Cell$LT$T$GT$7replace17h6def9a51320b6303E+0x26>
    }
    8001690e:	6502                	ld	a0,0(sp)
    80016910:	70a2                	ld	ra,40(sp)
    80016912:	6145                	addi	sp,sp,48
    80016914:	8082                	ret

Disassembly of section .text._ZN4core4cell13Cell$LT$T$GT$7replace17h7835bc5a8ba32077E:

0000000080016916 <_ZN4core4cell13Cell$LT$T$GT$7replace17h7835bc5a8ba32077E>:
    pub fn replace(&self, val: T) -> T {
    80016916:	7179                	addi	sp,sp,-48
    80016918:	f406                	sd	ra,40(sp)
    8001691a:	862e                	mv	a2,a1
    8001691c:	ec2a                	sd	a0,24(sp)
    8001691e:	02b103a3          	sb	a1,39(sp)
        mem::replace(unsafe { &mut *self.value.get() }, val)
    80016922:	e832                	sd	a2,16(sp)
    80016924:	00000097          	auipc	ra,0x0
    80016928:	084080e7          	jalr	132(ra) # 800169a8 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hc58ed601b76afc55E>
    8001692c:	e42a                	sd	a0,8(sp)
    8001692e:	a009                	j	80016930 <_ZN4core4cell13Cell$LT$T$GT$7replace17h7835bc5a8ba32077E+0x1a>
    80016930:	6522                	ld	a0,8(sp)
    80016932:	65c2                	ld	a1,16(sp)
    80016934:	ffff7097          	auipc	ra,0xffff7
    80016938:	2a8080e7          	jalr	680(ra) # 8000dbdc <_ZN4core3mem7replace17h077d81b6a931835eE>
    8001693c:	e02a                	sd	a0,0(sp)
    8001693e:	a009                	j	80016940 <_ZN4core4cell13Cell$LT$T$GT$7replace17h7835bc5a8ba32077E+0x2a>
    }
    80016940:	6502                	ld	a0,0(sp)
    80016942:	70a2                	ld	ra,40(sp)
    80016944:	6145                	addi	sp,sp,48
    80016946:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h04a2b46c96f17fa9E:

0000000080016948 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h04a2b46c96f17fa9E>:
    /// let five = uc.get();
    /// ```
    #[inline]
    #[stable(feature = "rust1", since = "1.0.0")]
    #[rustc_const_stable(feature = "const_unsafecell_get", since = "1.32.0")]
    pub const fn get(&self) -> *mut T {
    80016948:	1141                	addi	sp,sp,-16
    8001694a:	e42a                	sd	a0,8(sp)
        // We can just cast the pointer from `UnsafeCell<T>` to `T` because of
        // #[repr(transparent)]. This exploits libstd's special status, there is
        // no guarantee for user code that this will work in future versions of the compiler!
        self as *const UnsafeCell<T> as *const T as *mut T
    }
    8001694c:	0141                	addi	sp,sp,16
    8001694e:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h07a29974dbebee5bE:

0000000080016950 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h07a29974dbebee5bE>:
    pub const fn get(&self) -> *mut T {
    80016950:	1141                	addi	sp,sp,-16
    80016952:	e42a                	sd	a0,8(sp)
    }
    80016954:	0141                	addi	sp,sp,16
    80016956:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h0b134a7d7fbf0d13E:

0000000080016958 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h0b134a7d7fbf0d13E>:
    pub const fn get(&self) -> *mut T {
    80016958:	1141                	addi	sp,sp,-16
    8001695a:	e42a                	sd	a0,8(sp)
    }
    8001695c:	0141                	addi	sp,sp,16
    8001695e:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h1a9b91f6c23748bcE:

0000000080016960 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h1a9b91f6c23748bcE>:
    pub const fn get(&self) -> *mut T {
    80016960:	1141                	addi	sp,sp,-16
    80016962:	e42a                	sd	a0,8(sp)
    }
    80016964:	0141                	addi	sp,sp,16
    80016966:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h2a102518438837beE:

0000000080016968 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h2a102518438837beE>:
    pub const fn get(&self) -> *mut T {
    80016968:	1141                	addi	sp,sp,-16
    8001696a:	e42a                	sd	a0,8(sp)
    }
    8001696c:	0141                	addi	sp,sp,16
    8001696e:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h2a617dc7b1b924cfE:

0000000080016970 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h2a617dc7b1b924cfE>:
    pub const fn get(&self) -> *mut T {
    80016970:	1141                	addi	sp,sp,-16
    80016972:	e42a                	sd	a0,8(sp)
    }
    80016974:	0141                	addi	sp,sp,16
    80016976:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h439ad230354d4128E:

0000000080016978 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h439ad230354d4128E>:
    pub const fn get(&self) -> *mut T {
    80016978:	1141                	addi	sp,sp,-16
    8001697a:	e42a                	sd	a0,8(sp)
    }
    8001697c:	0141                	addi	sp,sp,16
    8001697e:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h65ddf1cefe738ca0E:

0000000080016980 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h65ddf1cefe738ca0E>:
    pub const fn get(&self) -> *mut T {
    80016980:	1141                	addi	sp,sp,-16
    80016982:	e42a                	sd	a0,8(sp)
    }
    80016984:	0141                	addi	sp,sp,16
    80016986:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E:

0000000080016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>:
    pub const fn get(&self) -> *mut T {
    80016988:	1141                	addi	sp,sp,-16
    8001698a:	e42a                	sd	a0,8(sp)
    }
    8001698c:	0141                	addi	sp,sp,16
    8001698e:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h9e5f3f7327874a42E:

0000000080016990 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h9e5f3f7327874a42E>:
    pub const fn get(&self) -> *mut T {
    80016990:	1141                	addi	sp,sp,-16
    80016992:	e42a                	sd	a0,8(sp)
    }
    80016994:	0141                	addi	sp,sp,16
    80016996:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hb7bae59a35416950E:

0000000080016998 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hb7bae59a35416950E>:
    pub const fn get(&self) -> *mut T {
    80016998:	1141                	addi	sp,sp,-16
    8001699a:	e42a                	sd	a0,8(sp)
    }
    8001699c:	0141                	addi	sp,sp,16
    8001699e:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hbfeaf0bc1ca24adeE:

00000000800169a0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hbfeaf0bc1ca24adeE>:
    pub const fn get(&self) -> *mut T {
    800169a0:	1141                	addi	sp,sp,-16
    800169a2:	e42a                	sd	a0,8(sp)
    }
    800169a4:	0141                	addi	sp,sp,16
    800169a6:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hc58ed601b76afc55E:

00000000800169a8 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hc58ed601b76afc55E>:
    pub const fn get(&self) -> *mut T {
    800169a8:	1141                	addi	sp,sp,-16
    800169aa:	e42a                	sd	a0,8(sp)
    }
    800169ac:	0141                	addi	sp,sp,16
    800169ae:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hd9bc18af06e3ba86E:

00000000800169b0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hd9bc18af06e3ba86E>:
    pub const fn get(&self) -> *mut T {
    800169b0:	1141                	addi	sp,sp,-16
    800169b2:	e42a                	sd	a0,8(sp)
    }
    800169b4:	0141                	addi	sp,sp,16
    800169b6:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hf72365034576d8c6E:

00000000800169b8 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hf72365034576d8c6E>:
    pub const fn get(&self) -> *mut T {
    800169b8:	1141                	addi	sp,sp,-16
    800169ba:	e42a                	sd	a0,8(sp)
    }
    800169bc:	0141                	addi	sp,sp,16
    800169be:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3new17h176d299b2a4dd82aE:

00000000800169c0 <_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h176d299b2a4dd82aE>:
    pub const fn new(value: T) -> UnsafeCell<T> {
    800169c0:	1141                	addi	sp,sp,-16
    800169c2:	e42a                	sd	a0,8(sp)
        UnsafeCell { value }
    800169c4:	e02a                	sd	a0,0(sp)
    }
    800169c6:	0141                	addi	sp,sp,16
    800169c8:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E:

00000000800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>:
    ///
    /// assert_eq!(*c.get_mut(), 6);
    /// ```
    #[inline]
    #[stable(feature = "unsafe_cell_get_mut", since = "1.50.0")]
    pub fn get_mut(&mut self) -> &mut T {
    800169ca:	1141                	addi	sp,sp,-16
    800169cc:	e42a                	sd	a0,8(sp)
        &mut self.value
    }
    800169ce:	0141                	addi	sp,sp,16
    800169d0:	8082                	ret

Disassembly of section .text._ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h9ddf81ec8b1e9077E:

00000000800169d2 <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h9ddf81ec8b1e9077E>:
        ($($t:ty)*) => {
            $(
                #[stable(feature = "rust1", since = "1.0.0")]
                impl Clone for $t {
                    #[inline]
                    fn clone(&self) -> Self {
    800169d2:	1141                	addi	sp,sp,-16
    800169d4:	e42a                	sd	a0,8(sp)
                        *self
                    }
    800169d6:	00051503          	lh	a0,0(a0)
    800169da:	0141                	addi	sp,sp,16
    800169dc:	8082                	ret

Disassembly of section .text._ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h9a859945ed614a32E:

00000000800169de <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h9a859945ed614a32E>:
                    fn clone(&self) -> Self {
    800169de:	1141                	addi	sp,sp,-16
    800169e0:	e42a                	sd	a0,8(sp)
                    }
    800169e2:	4108                	lw	a0,0(a0)
    800169e4:	0141                	addi	sp,sp,16
    800169e6:	8082                	ret

Disassembly of section .text._ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE:

00000000800169e8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE>:
                    fn clone(&self) -> Self {
    800169e8:	1141                	addi	sp,sp,-16
    800169ea:	e42a                	sd	a0,8(sp)
                        *self
    800169ec:	6108                	ld	a0,0(a0)
                    }
    800169ee:	0141                	addi	sp,sp,16
    800169f0:	8082                	ret

Disassembly of section .text._ZN6kernel8register7mideleg5write17h9b7c33b6863dfd65E:

00000000800169f2 <_ZN6kernel8register7mideleg5write17h9b7c33b6863dfd65E>:
    llvm_asm!("csrr $0, mideleg":"=r"(ret):::"volatile");
    ret
}

#[inline]
pub unsafe fn write(mideleg: usize) {
    800169f2:	1141                	addi	sp,sp,-16
    800169f4:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw mideleg, $0"::"r"(mideleg)::"volatile");
    800169f6:	30351073          	csrw	mideleg,a0
    800169fa:	0141                	addi	sp,sp,16
    800169fc:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hec562f354d7a25f9E:

00000000800169fe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hec562f354d7a25f9E>:
    pub const unsafe fn add(self, count: usize) -> Self
    800169fe:	1101                	addi	sp,sp,-32
    80016a00:	ec06                	sd	ra,24(sp)
    80016a02:	e42a                	sd	a0,8(sp)
    80016a04:	e82e                	sd	a1,16(sp)
        unsafe { self.offset(count as isize) }
    80016a06:	00000097          	auipc	ra,0x0
    80016a0a:	046080e7          	jalr	70(ra) # 80016a4c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h88b870a9120ad7faE>
    80016a0e:	e02a                	sd	a0,0(sp)
    80016a10:	a009                	j	80016a12 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hec562f354d7a25f9E+0x14>
    }
    80016a12:	6502                	ld	a0,0(sp)
    80016a14:	60e2                	ld	ra,24(sp)
    80016a16:	6105                	addi	sp,sp,32
    80016a18:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E:

0000000080016a1a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    80016a1a:	7179                	addi	sp,sp,-48
    80016a1c:	f406                	sd	ra,40(sp)
    80016a1e:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    80016a20:	e82a                	sd	a0,16(sp)
    80016a22:	00000097          	auipc	ra,0x0
    80016a26:	046080e7          	jalr	70(ra) # 80016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>
    80016a2a:	e42a                	sd	a0,8(sp)
    80016a2c:	a009                	j	80016a2e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E+0x14>
    80016a2e:	4501                	li	a0,0
    80016a30:	65a2                	ld	a1,8(sp)
    80016a32:	00a58663          	beq	a1,a0,80016a3e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E+0x24>
    80016a36:	a009                	j	80016a38 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E+0x1e>
    80016a38:	4501                	li	a0,0
    80016a3a:	ec2a                	sd	a0,24(sp)
    80016a3c:	a021                	j	80016a44 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E+0x2a>
    80016a3e:	6542                	ld	a0,16(sp)
    80016a40:	ec2a                	sd	a0,24(sp)
    80016a42:	a009                	j	80016a44 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h66750c1d0d614d42E+0x2a>
    }
    80016a44:	6562                	ld	a0,24(sp)
    80016a46:	70a2                	ld	ra,40(sp)
    80016a48:	6145                	addi	sp,sp,48
    80016a4a:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h88b870a9120ad7faE:

0000000080016a4c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h88b870a9120ad7faE>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    80016a4c:	1101                	addi	sp,sp,-32
    80016a4e:	e42a                	sd	a0,8(sp)
    80016a50:	e82e                	sd	a1,16(sp)
    80016a52:	02800613          	li	a2,40
        unsafe { intrinsics::offset(self, count) as *mut T }
    80016a56:	02c585b3          	mul	a1,a1,a2
    80016a5a:	952e                	add	a0,a0,a1
    80016a5c:	ec2a                	sd	a0,24(sp)
    80016a5e:	e02a                	sd	a0,0(sp)
    80016a60:	a009                	j	80016a62 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h88b870a9120ad7faE+0x16>
    }
    80016a62:	6502                	ld	a0,0(sp)
    80016a64:	6105                	addi	sp,sp,32
    80016a66:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE:

0000000080016a68 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE>:
    pub const fn is_null(self) -> bool {
    80016a68:	7179                	addi	sp,sp,-48
    80016a6a:	f406                	sd	ra,40(sp)
    80016a6c:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    80016a6e:	ec2a                	sd	a0,24(sp)
    80016a70:	a009                	j	80016a72 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE+0xa>
    80016a72:	4501                	li	a0,0
    80016a74:	65e2                	ld	a1,24(sp)
    80016a76:	e82a                	sd	a0,16(sp)
    80016a78:	852e                	mv	a0,a1
    80016a7a:	65c2                	ld	a1,16(sp)
    80016a7c:	0000a097          	auipc	ra,0xa
    80016a80:	f32080e7          	jalr	-206(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    80016a84:	e42a                	sd	a0,8(sp)
    80016a86:	a009                	j	80016a88 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he914eebbf4613d1eE+0x20>
    }
    80016a88:	6522                	ld	a0,8(sp)
    80016a8a:	70a2                	ld	ra,40(sp)
    80016a8c:	6145                	addi	sp,sp,48
    80016a8e:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hc24df89ca06484c1E:

0000000080016a90 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hc24df89ca06484c1E>:
    pub const fn as_mut_ptr(&mut self) -> *mut T {
    80016a90:	1141                	addi	sp,sp,-16
    80016a92:	e02a                	sd	a0,0(sp)
    80016a94:	e42e                	sd	a1,8(sp)
    }
    80016a96:	0141                	addi	sp,sp,16
    80016a98:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2724de47f0e590ceE:

0000000080016a9a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2724de47f0e590ceE>:
    pub const fn len(&self) -> usize {
    80016a9a:	1101                	addi	sp,sp,-32
    80016a9c:	e82a                	sd	a0,16(sp)
    80016a9e:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    80016aa0:	e02a                	sd	a0,0(sp)
    80016aa2:	e42e                	sd	a1,8(sp)
    }
    80016aa4:	852e                	mv	a0,a1
    80016aa6:	6105                	addi	sp,sp,32
    80016aa8:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hcfa1e835f1d2856bE:

0000000080016aaa <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hcfa1e835f1d2856bE>:
    pub fn iter_mut(&mut self) -> IterMut<'_, T> {
    80016aaa:	7179                	addi	sp,sp,-48
    80016aac:	f406                	sd	ra,40(sp)
    80016aae:	ec2a                	sd	a0,24(sp)
    80016ab0:	f02e                	sd	a1,32(sp)
        IterMut::new(self)
    80016ab2:	ffffc097          	auipc	ra,0xffffc
    80016ab6:	620080e7          	jalr	1568(ra) # 800130d2 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h9ae754db7c5be4c8E>
    80016aba:	e82a                	sd	a0,16(sp)
    80016abc:	e42e                	sd	a1,8(sp)
    80016abe:	a009                	j	80016ac0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hcfa1e835f1d2856bE+0x16>
    }
    80016ac0:	6542                	ld	a0,16(sp)
    80016ac2:	65a2                	ld	a1,8(sp)
    80016ac4:	70a2                	ld	ra,40(sp)
    80016ac6:	6145                	addi	sp,sp,48
    80016ac8:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio6Bcache5binit28_$u7b$$u7b$closure$u7d$$u7d$17h552a96d4bdd13689E:

0000000080016aca <_ZN6kernel2fs3bio6Bcache5binit28_$u7b$$u7b$closure$u7d$$u7d$17h552a96d4bdd13689E>:
            .for_each(|(i, b)| b.index = i);
    80016aca:	7179                	addi	sp,sp,-48
    80016acc:	e42a                	sd	a0,8(sp)
    80016ace:	e82e                	sd	a1,16(sp)
    80016ad0:	ec32                	sd	a2,24(sp)
    80016ad2:	f02e                	sd	a1,32(sp)
    80016ad4:	f432                	sd	a2,40(sp)
    80016ad6:	ee0c                	sd	a1,24(a2)
    80016ad8:	6145                	addi	sp,sp,48
    80016ada:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17h247c31d0e2bc1fe4E:

0000000080016adc <_ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17h247c31d0e2bc1fe4E>:
                b.next.as_mut().map(|b_next| b_next.prev = b.prev);
    80016adc:	1141                	addi	sp,sp,-16
    80016ade:	e02a                	sd	a0,0(sp)
    80016ae0:	e42e                	sd	a1,8(sp)
    80016ae2:	6108                	ld	a0,0(a0)
    80016ae4:	6108                	ld	a0,0(a0)
    80016ae6:	e188                	sd	a0,0(a1)
    80016ae8:	0141                	addi	sp,sp,16
    80016aea:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17hdb0f9bb26d135180E:

0000000080016aec <_ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17hdb0f9bb26d135180E>:
                b.prev.as_mut().map(|b_prev| b_prev.next = b.next);
    80016aec:	1141                	addi	sp,sp,-16
    80016aee:	e02a                	sd	a0,0(sp)
    80016af0:	e42e                	sd	a1,8(sp)
    80016af2:	6108                	ld	a0,0(a0)
    80016af4:	6508                	ld	a0,8(a0)
    80016af6:	e588                	sd	a0,8(a1)
    80016af8:	0141                	addi	sp,sp,16
    80016afa:	8082                	ret

Disassembly of section .text._ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17h9d7725745ff4b8c8E:

0000000080016afc <_ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17h9d7725745ff4b8c8E>:
                self.head.as_mut().map(|old_head| old_head.prev = b);
    80016afc:	1141                	addi	sp,sp,-16
    80016afe:	e02a                	sd	a0,0(sp)
    80016b00:	e42e                	sd	a1,8(sp)
    80016b02:	6108                	ld	a0,0(a0)
    80016b04:	e188                	sd	a0,0(a1)
    80016b06:	0141                	addi	sp,sp,16
    80016b08:	8082                	ret

Disassembly of section .text._ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u16$GT$8try_from17h2fa0acdecb2a4bc0E:

0000000080016b0a <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u16$GT$8try_from17h2fa0acdecb2a4bc0E>:

            /// Try to create the target number type from a source
            /// number type. This returns an error if the source value
            /// is outside of the range of the target type.
            #[inline]
            fn try_from(u: $source) -> Result<Self, Self::Error> {
    80016b0a:	1101                	addi	sp,sp,-32
    80016b0c:	ec2a                	sd	a0,24(sp)
                if u > (Self::MAX as $source) {
    80016b0e:	01055593          	srli	a1,a0,0x10
    80016b12:	4601                	li	a2,0
    80016b14:	e42a                	sd	a0,8(sp)
    80016b16:	00c58763          	beq	a1,a2,80016b24 <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u16$GT$8try_from17h2fa0acdecb2a4bc0E+0x1a>
    80016b1a:	a009                	j	80016b1c <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u16$GT$8try_from17h2fa0acdecb2a4bc0E+0x12>
    80016b1c:	4505                	li	a0,1
                    Err(TryFromIntError(()))
    80016b1e:	00a11823          	sh	a0,16(sp)
                if u > (Self::MAX as $source) {
    80016b22:	a801                	j	80016b32 <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u16$GT$8try_from17h2fa0acdecb2a4bc0E+0x28>
                } else {
                    Ok(u as Self)
    80016b24:	6522                	ld	a0,8(sp)
    80016b26:	00a11923          	sh	a0,18(sp)
    80016b2a:	4581                	li	a1,0
    80016b2c:	00b11823          	sh	a1,16(sp)
                if u > (Self::MAX as $source) {
    80016b30:	a009                	j	80016b32 <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u16$GT$8try_from17h2fa0acdecb2a4bc0E+0x28>
                }
            }
    80016b32:	01011503          	lh	a0,16(sp)
    80016b36:	01211583          	lh	a1,18(sp)
    80016b3a:	6105                	addi	sp,sp,32
    80016b3c:	8082                	ret

Disassembly of section .text._ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E:

0000000080016b3e <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E>:
            fn try_from(u: $source) -> Result<Self, Self::Error> {
    80016b3e:	1101                	addi	sp,sp,-32
    80016b40:	ec2a                	sd	a0,24(sp)
                if u > (Self::MAX as $source) {
    80016b42:	02055593          	srli	a1,a0,0x20
    80016b46:	4601                	li	a2,0
    80016b48:	e42a                	sd	a0,8(sp)
    80016b4a:	00c58663          	beq	a1,a2,80016b56 <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E+0x18>
    80016b4e:	a009                	j	80016b50 <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E+0x12>
    80016b50:	4505                	li	a0,1
                    Err(TryFromIntError(()))
    80016b52:	c82a                	sw	a0,16(sp)
                if u > (Self::MAX as $source) {
    80016b54:	a031                	j	80016b60 <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E+0x22>
                    Ok(u as Self)
    80016b56:	6522                	ld	a0,8(sp)
    80016b58:	ca2a                	sw	a0,20(sp)
    80016b5a:	4581                	li	a1,0
    80016b5c:	c82e                	sw	a1,16(sp)
                if u > (Self::MAX as $source) {
    80016b5e:	a009                	j	80016b60 <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E+0x22>
            }
    80016b60:	4542                	lw	a0,16(sp)
    80016b62:	45d2                	lw	a1,20(sp)
    80016b64:	6105                	addi	sp,sp,32
    80016b66:	8082                	ret

Disassembly of section .text._ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE:

0000000080016b68 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE>:
pub use page_table_entry::*;
pub use kernel_map::*;

use crate::define::layout::PGSIZE;

pub fn page_round_up(addr: usize) -> usize{
    80016b68:	1101                	addi	sp,sp,-32
    80016b6a:	ec2a                	sd	a0,24(sp)
    80016b6c:	6585                	lui	a1,0x1
    (addr + PGSIZE - 1) & !(PGSIZE - 1)
    80016b6e:	95aa                	add	a1,a1,a0
    80016b70:	e82e                	sd	a1,16(sp)
    80016b72:	00a5ef63          	bltu	a1,a0,80016b90 <.LBB0_5>
    80016b76:	a009                	j	80016b78 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE+0x10>
    80016b78:	6542                	ld	a0,16(sp)
    80016b7a:	fff50593          	addi	a1,a0,-1
    80016b7e:	e42e                	sd	a1,8(sp)
    80016b80:	02b56663          	bltu	a0,a1,80016bac <.LBB0_7>
    80016b84:	a009                	j	80016b86 <_ZN6kernel6memory7mapping13page_round_up17hd019002326951c2bE+0x1e>
    80016b86:	757d                	lui	a0,0xfffff
    80016b88:	65a2                	ld	a1,8(sp)
    80016b8a:	8d6d                	and	a0,a0,a1
}
    80016b8c:	6105                	addi	sp,sp,32
    80016b8e:	8082                	ret

0000000080016b90 <.LBB0_5>:
    (addr + PGSIZE - 1) & !(PGSIZE - 1)
    80016b90:	00011517          	auipc	a0,0x11
    80016b94:	09050513          	addi	a0,a0,144 # 80027c20 <str.0>

0000000080016b98 <.LBB0_6>:
    80016b98:	00011617          	auipc	a2,0x11
    80016b9c:	07060613          	addi	a2,a2,112 # 80027c08 <.L__unnamed_1>
    80016ba0:	45f1                	li	a1,28
    80016ba2:	0000a097          	auipc	ra,0xa
    80016ba6:	128080e7          	jalr	296(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080016bac <.LBB0_7>:
    80016bac:	00011517          	auipc	a0,0x11
    80016bb0:	0b450513          	addi	a0,a0,180 # 80027c60 <str.1>

0000000080016bb4 <.LBB0_8>:
    80016bb4:	00011617          	auipc	a2,0x11
    80016bb8:	08c60613          	addi	a2,a2,140 # 80027c40 <.L__unnamed_2>
    80016bbc:	02100593          	li	a1,33
    80016bc0:	0000a097          	auipc	ra,0xa
    80016bc4:	10a080e7          	jalr	266(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core4char7methods15encode_utf8_raw17h091a5d94eb1f4ed8E:

0000000080016bca <_ZN4core4char7methods15encode_utf8_raw17h091a5d94eb1f4ed8E>:
/// Panics if the buffer is not large enough.
/// A buffer of length four is large enough to encode any `char`.
#[unstable(feature = "char_internals", reason = "exposed only for libstd", issue = "none")]
#[doc(hidden)]
#[inline]
pub fn encode_utf8_raw(code: u32, dst: &mut [u8]) -> &mut [u8] {
    80016bca:	7145                	addi	sp,sp,-464
    80016bcc:	e786                	sd	ra,456(sp)
    80016bce:	86aa                	mv	a3,a0
    80016bd0:	cf2a                	sw	a0,156(sp)
    80016bd2:	eaae                	sd	a1,336(sp)
    80016bd4:	eeb2                	sd	a2,344(sp)
    let len = len_utf8(code);
    80016bd6:	e932                	sd	a2,144(sp)
    80016bd8:	e52e                	sd	a1,136(sp)
    80016bda:	e136                	sd	a3,128(sp)
    80016bdc:	00000097          	auipc	ra,0x0
    80016be0:	274080e7          	jalr	628(ra) # 80016e50 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E>
    80016be4:	f12a                	sd	a0,160(sp)
    80016be6:	a009                	j	80016be8 <_ZN4core4char7methods15encode_utf8_raw17h091a5d94eb1f4ed8E+0x1e>
    match (len, &mut dst[..]) {
    80016be8:	750a                	ld	a0,160(sp)

0000000080016bea <.LBB0_22>:
    80016bea:	00011617          	auipc	a2,0x11
    80016bee:	11660613          	addi	a2,a2,278 # 80027d00 <.L__unnamed_1>
    80016bf2:	65aa                	ld	a1,136(sp)
    80016bf4:	fcaa                	sd	a0,120(sp)
    80016bf6:	852e                	mv	a0,a1
    80016bf8:	65ca                	ld	a1,144(sp)
    80016bfa:	ffff8097          	auipc	ra,0xffff8
    80016bfe:	e74080e7          	jalr	-396(ra) # 8000ea6e <_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb5349879292ed58fE>
    80016c02:	f8aa                	sd	a0,112(sp)
    80016c04:	f4ae                	sd	a1,104(sp)
    80016c06:	a009                	j	80016c08 <.LBB0_22+0x1e>
    80016c08:	7566                	ld	a0,120(sp)
    80016c0a:	f52a                	sd	a0,168(sp)
    80016c0c:	75c6                	ld	a1,112(sp)
    80016c0e:	f92e                	sd	a1,176(sp)
    80016c10:	7626                	ld	a2,104(sp)
    80016c12:	fd32                	sd	a2,184(sp)
    80016c14:	4685                	li	a3,1
        (1, [a, ..]) => {
    80016c16:	7766                	ld	a4,120(sp)
    80016c18:	f0aa                	sd	a0,96(sp)
    80016c1a:	02d70263          	beq	a4,a3,80016c3e <.LBB0_22+0x54>
    80016c1e:	a009                	j	80016c20 <.LBB0_22+0x36>
    80016c20:	4509                	li	a0,2
    80016c22:	7586                	ld	a1,96(sp)
    80016c24:	02a58a63          	beq	a1,a0,80016c58 <.LBB0_22+0x6e>
    80016c28:	a009                	j	80016c2a <.LBB0_22+0x40>
    80016c2a:	450d                	li	a0,3
    80016c2c:	7586                	ld	a1,96(sp)
    80016c2e:	02a58a63          	beq	a1,a0,80016c62 <.LBB0_22+0x78>
    80016c32:	a009                	j	80016c34 <.LBB0_22+0x4a>
    80016c34:	4511                	li	a0,4
    80016c36:	7586                	ld	a1,96(sp)
    80016c38:	02a58a63          	beq	a1,a0,80016c6c <.LBB0_22+0x82>
    80016c3c:	a031                	j	80016c48 <.LBB0_22+0x5e>
    80016c3e:	756a                	ld	a0,184(sp)
    80016c40:	4581                	li	a1,0
    80016c42:	02b51a63          	bne	a0,a1,80016c76 <.LBB0_22+0x8c>
    80016c46:	a009                	j	80016c48 <.LBB0_22+0x5e>
        }
        _ => panic!(
            "encode_utf8: need {} bytes to encode U+{:X}, but the buffer has {}",
            len,
            code,
            dst.len(),
    80016c48:	652a                	ld	a0,136(sp)
    80016c4a:	65ca                	ld	a1,144(sp)
    80016c4c:	ffffc097          	auipc	ra,0xffffc
    80016c50:	018080e7          	jalr	24(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    80016c54:	e2aa                	sd	a0,320(sp)
    80016c56:	a0fd                	j	80016d44 <.LBB0_22+0x15a>
        (2, [a, b, ..]) => {
    80016c58:	756a                	ld	a0,184(sp)
    80016c5a:	4585                	li	a1,1
    80016c5c:	02a5e463          	bltu	a1,a0,80016c84 <.LBB0_22+0x9a>
    80016c60:	b7e5                	j	80016c48 <.LBB0_22+0x5e>
        (3, [a, b, c, ..]) => {
    80016c62:	756a                	ld	a0,184(sp)
    80016c64:	4589                	li	a1,2
    80016c66:	04a5e463          	bltu	a1,a0,80016cae <.LBB0_22+0xc4>
    80016c6a:	bff9                	j	80016c48 <.LBB0_22+0x5e>
        (4, [a, b, c, d, ..]) => {
    80016c6c:	756a                	ld	a0,184(sp)
    80016c6e:	458d                	li	a1,3
    80016c70:	06a5ef63          	bltu	a1,a0,80016cee <.LBB0_22+0x104>
    80016c74:	bfd1                	j	80016c48 <.LBB0_22+0x5e>
        (1, [a, ..]) => {
    80016c76:	754a                	ld	a0,176(sp)
    80016c78:	f72a                	sd	a0,424(sp)
            *a = code as u8;
    80016c7a:	09c10583          	lb	a1,156(sp)
    80016c7e:	00b50023          	sb	a1,0(a0)
    match (len, &mut dst[..]) {
    80016c82:	a2a5                	j	80016dea <.LBB0_27+0x14>
        (2, [a, b, ..]) => {
    80016c84:	754a                	ld	a0,176(sp)
    80016c86:	ef2a                	sd	a0,408(sp)
    80016c88:	00150593          	addi	a1,a0,1
    80016c8c:	f32e                	sd	a1,416(sp)
            *a = (code >> 6 & 0x1F) as u8 | TAG_TWO_B;
    80016c8e:	45fa                	lw	a1,156(sp)
    80016c90:	8199                	srli	a1,a1,0x6
    80016c92:	89fd                	andi	a1,a1,31
    80016c94:	0c05e593          	ori	a1,a1,192
    80016c98:	00b50023          	sb	a1,0(a0)
            *b = (code & 0x3F) as u8 | TAG_CONT;
    80016c9c:	09c14583          	lbu	a1,156(sp)
    80016ca0:	03f5f593          	andi	a1,a1,63
    80016ca4:	0805e593          	ori	a1,a1,128
    80016ca8:	00b500a3          	sb	a1,1(a0)
    match (len, &mut dst[..]) {
    80016cac:	aa3d                	j	80016dea <.LBB0_27+0x14>
        (3, [a, b, c, ..]) => {
    80016cae:	754a                	ld	a0,176(sp)
    80016cb0:	e32a                	sd	a0,384(sp)
    80016cb2:	00150593          	addi	a1,a0,1
    80016cb6:	e72e                	sd	a1,392(sp)
    80016cb8:	00250593          	addi	a1,a0,2
    80016cbc:	eb2e                	sd	a1,400(sp)
            *a = (code >> 12 & 0x0F) as u8 | TAG_THREE_B;
    80016cbe:	45fa                	lw	a1,156(sp)
    80016cc0:	81b1                	srli	a1,a1,0xc
    80016cc2:	89bd                	andi	a1,a1,15
    80016cc4:	0e05e593          	ori	a1,a1,224
    80016cc8:	00b50023          	sb	a1,0(a0)
            *b = (code >> 6 & 0x3F) as u8 | TAG_CONT;
    80016ccc:	45fa                	lw	a1,156(sp)
    80016cce:	8199                	srli	a1,a1,0x6
    80016cd0:	03f5f593          	andi	a1,a1,63
    80016cd4:	0805e593          	ori	a1,a1,128
    80016cd8:	00b500a3          	sb	a1,1(a0)
            *c = (code & 0x3F) as u8 | TAG_CONT;
    80016cdc:	09c14583          	lbu	a1,156(sp)
    80016ce0:	03f5f593          	andi	a1,a1,63
    80016ce4:	0805e593          	ori	a1,a1,128
    80016ce8:	00b50123          	sb	a1,2(a0)
    match (len, &mut dst[..]) {
    80016cec:	a8fd                	j	80016dea <.LBB0_27+0x14>
        (4, [a, b, c, d, ..]) => {
    80016cee:	754a                	ld	a0,176(sp)
    80016cf0:	f2aa                	sd	a0,352(sp)
    80016cf2:	00150593          	addi	a1,a0,1
    80016cf6:	f6ae                	sd	a1,360(sp)
    80016cf8:	00250593          	addi	a1,a0,2
    80016cfc:	faae                	sd	a1,368(sp)
    80016cfe:	00350593          	addi	a1,a0,3
    80016d02:	feae                	sd	a1,376(sp)
            *a = (code >> 18 & 0x07) as u8 | TAG_FOUR_B;
    80016d04:	45fa                	lw	a1,156(sp)
    80016d06:	81c9                	srli	a1,a1,0x12
    80016d08:	899d                	andi	a1,a1,7
    80016d0a:	0f05e593          	ori	a1,a1,240
    80016d0e:	00b50023          	sb	a1,0(a0)
            *b = (code >> 12 & 0x3F) as u8 | TAG_CONT;
    80016d12:	45fa                	lw	a1,156(sp)
    80016d14:	81b1                	srli	a1,a1,0xc
    80016d16:	03f5f593          	andi	a1,a1,63
    80016d1a:	0805e593          	ori	a1,a1,128
    80016d1e:	00b500a3          	sb	a1,1(a0)
            *c = (code >> 6 & 0x3F) as u8 | TAG_CONT;
    80016d22:	45fa                	lw	a1,156(sp)
    80016d24:	8199                	srli	a1,a1,0x6
    80016d26:	03f5f593          	andi	a1,a1,63
    80016d2a:	0805e593          	ori	a1,a1,128
    80016d2e:	00b50123          	sb	a1,2(a0)
            *d = (code & 0x3F) as u8 | TAG_CONT;
    80016d32:	09c14583          	lbu	a1,156(sp)
    80016d36:	03f5f593          	andi	a1,a1,63
    80016d3a:	0805e593          	ori	a1,a1,128
    80016d3e:	00b501a3          	sb	a1,3(a0)
    match (len, &mut dst[..]) {
    80016d42:	a065                	j	80016dea <.LBB0_27+0x14>
    80016d44:	1108                	addi	a0,sp,160
        _ => panic!(
    80016d46:	f62a                	sd	a0,296(sp)
    80016d48:	096c                	addi	a1,sp,156
    80016d4a:	fa2e                	sd	a1,304(sp)
    80016d4c:	0290                	addi	a2,sp,320
    80016d4e:	fe32                	sd	a2,312(sp)
    80016d50:	fb2a                	sd	a0,432(sp)
    80016d52:	ff2e                	sd	a1,440(sp)
    80016d54:	e3b2                	sd	a2,448(sp)

0000000080016d56 <.LBB0_23>:
    80016d56:	0000c697          	auipc	a3,0xc
    80016d5a:	2dc68693          	addi	a3,a3,732 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    80016d5e:	ecae                	sd	a1,88(sp)
    80016d60:	85b6                	mv	a1,a3
    80016d62:	e8b2                	sd	a2,80(sp)
    80016d64:	00009097          	auipc	ra,0x9
    80016d68:	cb6080e7          	jalr	-842(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80016d6c:	e4aa                	sd	a0,72(sp)
    80016d6e:	e0ae                	sd	a1,64(sp)
    80016d70:	a009                	j	80016d72 <.LBB0_24>

0000000080016d72 <.LBB0_24>:
    80016d72:	0000c597          	auipc	a1,0xc
    80016d76:	ea458593          	addi	a1,a1,-348 # 80022c16 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h4c4c08db6a399c7cE>
    80016d7a:	6566                	ld	a0,88(sp)
    80016d7c:	0000a097          	auipc	ra,0xa
    80016d80:	c10080e7          	jalr	-1008(ra) # 8002098c <_ZN4core3fmt10ArgumentV13new17haf816dc4f723dcb1E>
    80016d84:	fc2a                	sd	a0,56(sp)
    80016d86:	f82e                	sd	a1,48(sp)
    80016d88:	a009                	j	80016d8a <.LBB0_25>

0000000080016d8a <.LBB0_25>:
    80016d8a:	0000c597          	auipc	a1,0xc
    80016d8e:	2a858593          	addi	a1,a1,680 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    80016d92:	6546                	ld	a0,80(sp)
    80016d94:	00009097          	auipc	ra,0x9
    80016d98:	c86080e7          	jalr	-890(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    80016d9c:	f42a                	sd	a0,40(sp)
    80016d9e:	f02e                	sd	a1,32(sp)
    80016da0:	a009                	j	80016da2 <.LBB0_25+0x18>
    80016da2:	6526                	ld	a0,72(sp)
    80016da4:	fdaa                	sd	a0,248(sp)
    80016da6:	6586                	ld	a1,64(sp)
    80016da8:	e22e                	sd	a1,256(sp)
    80016daa:	7662                	ld	a2,56(sp)
    80016dac:	e632                	sd	a2,264(sp)
    80016dae:	76c2                	ld	a3,48(sp)
    80016db0:	ea36                	sd	a3,272(sp)
    80016db2:	7722                	ld	a4,40(sp)
    80016db4:	ee3a                	sd	a4,280(sp)
    80016db6:	7782                	ld	a5,32(sp)
    80016db8:	f23e                	sd	a5,288(sp)

0000000080016dba <.LBB0_26>:
    80016dba:	00011597          	auipc	a1,0x11
    80016dbe:	fb658593          	addi	a1,a1,-74 # 80027d70 <.L__unnamed_2>
    80016dc2:	01a8                	addi	a0,sp,200
    80016dc4:	19b4                	addi	a3,sp,248
    80016dc6:	480d                	li	a6,3
    80016dc8:	8642                	mv	a2,a6
    80016dca:	8742                	mv	a4,a6
    80016dcc:	fffef097          	auipc	ra,0xfffef
    80016dd0:	958080e7          	jalr	-1704(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80016dd4:	a009                	j	80016dd6 <.LBB0_27>

0000000080016dd6 <.LBB0_27>:
    80016dd6:	00011597          	auipc	a1,0x11
    80016dda:	fca58593          	addi	a1,a1,-54 # 80027da0 <.L__unnamed_3>
    80016dde:	01a8                	addi	a0,sp,200
    80016de0:	0000a097          	auipc	ra,0xa
    80016de4:	f56080e7          	jalr	-170(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80016de8:	0000                	unimp
        ),
    };
    &mut dst[..len]
    80016dea:	750a                	ld	a0,160(sp)
    80016dec:	e6aa                	sd	a0,328(sp)

0000000080016dee <.LBB0_28>:
    80016dee:	00011697          	auipc	a3,0x11
    80016df2:	f2a68693          	addi	a3,a3,-214 # 80027d18 <.L__unnamed_4>
    80016df6:	65aa                	ld	a1,136(sp)
    80016df8:	ec2a                	sd	a0,24(sp)
    80016dfa:	852e                	mv	a0,a1
    80016dfc:	65ca                	ld	a1,144(sp)
    80016dfe:	6662                	ld	a2,24(sp)
    80016e00:	ffff8097          	auipc	ra,0xffff8
    80016e04:	c8e080e7          	jalr	-882(ra) # 8000ea8e <_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc95d10a015289ed6E>
    80016e08:	e82a                	sd	a0,16(sp)
    80016e0a:	e42e                	sd	a1,8(sp)
    80016e0c:	a009                	j	80016e0e <.LBB0_28+0x20>
}
    80016e0e:	6542                	ld	a0,16(sp)
    80016e10:	65a2                	ld	a1,8(sp)
    80016e12:	60be                	ld	ra,456(sp)
    80016e14:	6179                	addi	sp,sp,464
    80016e16:	8082                	ret

Disassembly of section .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h93438ae21c2ae2bdE:

0000000080016e18 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h93438ae21c2ae2bdE>:
    pub fn encode_utf8(self, dst: &mut [u8]) -> &mut str {
    80016e18:	715d                	addi	sp,sp,-80
    80016e1a:	e486                	sd	ra,72(sp)
    80016e1c:	86aa                	mv	a3,a0
    80016e1e:	da2a                	sw	a0,52(sp)
    80016e20:	fc2e                	sd	a1,56(sp)
    80016e22:	e0b2                	sd	a2,64(sp)
        unsafe { from_utf8_unchecked_mut(encode_utf8_raw(self as u32, dst)) }
    80016e24:	f436                	sd	a3,40(sp)
    80016e26:	00000097          	auipc	ra,0x0
    80016e2a:	da4080e7          	jalr	-604(ra) # 80016bca <_ZN4core4char7methods15encode_utf8_raw17h091a5d94eb1f4ed8E>
    80016e2e:	f02a                	sd	a0,32(sp)
    80016e30:	ec2e                	sd	a1,24(sp)
    80016e32:	a009                	j	80016e34 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h93438ae21c2ae2bdE+0x1c>
    80016e34:	7502                	ld	a0,32(sp)
    80016e36:	65e2                	ld	a1,24(sp)
    80016e38:	ffff0097          	auipc	ra,0xffff0
    80016e3c:	388080e7          	jalr	904(ra) # 800071c0 <_ZN4core3str8converts23from_utf8_unchecked_mut17h128d31fadbde6f60E>
    80016e40:	e82a                	sd	a0,16(sp)
    80016e42:	e42e                	sd	a1,8(sp)
    80016e44:	a009                	j	80016e46 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h93438ae21c2ae2bdE+0x2e>
    }
    80016e46:	6542                	ld	a0,16(sp)
    80016e48:	65a2                	ld	a1,8(sp)
    80016e4a:	60a6                	ld	ra,72(sp)
    80016e4c:	6161                	addi	sp,sp,80
    80016e4e:	8082                	ret

Disassembly of section .text._ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E:

0000000080016e50 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E>:
fn len_utf8(code: u32) -> usize {
    80016e50:	1101                	addi	sp,sp,-32
    80016e52:	0005059b          	sext.w	a1,a0
    80016e56:	862a                	mv	a2,a0
    80016e58:	ce2a                	sw	a0,28(sp)
    80016e5a:	07f00513          	li	a0,127
    if code < MAX_ONE_B {
    80016e5e:	e432                	sd	a2,8(sp)
    80016e60:	00b56663          	bltu	a0,a1,80016e6c <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x1c>
    80016e64:	a009                	j	80016e66 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x16>
    80016e66:	4505                	li	a0,1
        1
    80016e68:	e82a                	sd	a0,16(sp)
    if code < MAX_ONE_B {
    80016e6a:	a81d                	j	80016ea0 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x50>
    } else if code < MAX_TWO_B {
    80016e6c:	6522                	ld	a0,8(sp)
    80016e6e:	0005059b          	sext.w	a1,a0
    80016e72:	7ff00613          	li	a2,2047
    80016e76:	00b66663          	bltu	a2,a1,80016e82 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x32>
    80016e7a:	a009                	j	80016e7c <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x2c>
    80016e7c:	4509                	li	a0,2
        2
    80016e7e:	e82a                	sd	a0,16(sp)
    } else if code < MAX_TWO_B {
    80016e80:	a839                	j	80016e9e <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x4e>
    } else if code < MAX_THREE_B {
    80016e82:	6522                	ld	a0,8(sp)
    80016e84:	0105559b          	srliw	a1,a0,0x10
    80016e88:	4601                	li	a2,0
    80016e8a:	00c59663          	bne	a1,a2,80016e96 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x46>
    80016e8e:	a009                	j	80016e90 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x40>
    80016e90:	450d                	li	a0,3
        3
    80016e92:	e82a                	sd	a0,16(sp)
    } else if code < MAX_THREE_B {
    80016e94:	a021                	j	80016e9c <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x4c>
    80016e96:	4511                	li	a0,4
        4
    80016e98:	e82a                	sd	a0,16(sp)
    } else if code < MAX_THREE_B {
    80016e9a:	a009                	j	80016e9c <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x4c>
    } else if code < MAX_TWO_B {
    80016e9c:	a009                	j	80016e9e <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x4e>
    if code < MAX_ONE_B {
    80016e9e:	a009                	j	80016ea0 <_ZN4core4char7methods8len_utf817hc5df5f218a1b28f8E+0x50>
}
    80016ea0:	6542                	ld	a0,16(sp)
    80016ea2:	6105                	addi	sp,sp,32
    80016ea4:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE:

0000000080016ea6 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE>:
    pub fn intr(&self) {
    80016ea6:	7139                	addi	sp,sp,-64
    80016ea8:	fc06                	sd	ra,56(sp)
    80016eaa:	f42a                	sd	a0,40(sp)
        loop {
    80016eac:	ec2a                	sd	a0,24(sp)
    80016eae:	a009                	j	80016eb0 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0xa>
    80016eb0:	10000537          	lui	a0,0x10000
    80016eb4:	2515                	addiw	a0,a0,5
            if read_reg(UART_BASE_ADDR + LSR) & 1 > 0 {
    80016eb6:	ffff1097          	auipc	ra,0xffff1
    80016eba:	70e080e7          	jalr	1806(ra) # 800085c4 <_ZN6kernel7console4uart8read_reg17h2f2f6f4bb909913dE>
    80016ebe:	e82a                	sd	a0,16(sp)
    80016ec0:	a009                	j	80016ec2 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x1c>
    80016ec2:	6542                	ld	a0,16(sp)
    80016ec4:	00157593          	andi	a1,a0,1
    80016ec8:	4601                	li	a2,0
    80016eca:	00c58b63          	beq	a1,a2,80016ee0 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x3a>
    80016ece:	a009                	j	80016ed0 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x2a>
    80016ed0:	10000537          	lui	a0,0x10000
                c = read_reg(UART_BASE_ADDR + RHR)
    80016ed4:	ffff1097          	auipc	ra,0xffff1
    80016ed8:	6f0080e7          	jalr	1776(ra) # 800085c4 <_ZN6kernel7console4uart8read_reg17h2f2f6f4bb909913dE>
    80016edc:	e42a                	sd	a0,8(sp)
    80016ede:	a801                	j	80016eee <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x48>
        self.acquire().transmit();
    80016ee0:	6562                	ld	a0,24(sp)
    80016ee2:	fffec097          	auipc	ra,0xfffec
    80016ee6:	910080e7          	jalr	-1776(ra) # 800027f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E>
    80016eea:	f02a                	sd	a0,32(sp)
    80016eec:	a811                	j	80016f00 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x5a>
                c = read_reg(UART_BASE_ADDR + RHR)
    80016eee:	6522                	ld	a0,8(sp)
    80016ef0:	02a10ba3          	sb	a0,55(sp)
            console_intr(c);
    80016ef4:	fffef097          	auipc	ra,0xfffef
    80016ef8:	442080e7          	jalr	1090(ra) # 80006336 <_ZN6kernel7console7console12console_intr17hdd8efd451c5130d6E>
    80016efc:	a009                	j	80016efe <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x58>
        loop {
    80016efe:	bf4d                	j	80016eb0 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0xa>
    80016f00:	1008                	addi	a0,sp,32
        self.acquire().transmit();
    80016f02:	fffed097          	auipc	ra,0xfffed
    80016f06:	a5a080e7          	jalr	-1446(ra) # 8000395c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E>
    80016f0a:	e02a                	sd	a0,0(sp)
    80016f0c:	a009                	j	80016f0e <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x68>
    80016f0e:	6502                	ld	a0,0(sp)
    80016f10:	ffff1097          	auipc	ra,0xffff1
    80016f14:	53a080e7          	jalr	1338(ra) # 8000844a <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE>
    80016f18:	a009                	j	80016f1a <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x74>
    80016f1a:	1008                	addi	a0,sp,32
    80016f1c:	ffff0097          	auipc	ra,0xffff0
    80016f20:	aea080e7          	jalr	-1302(ra) # 80006a06 <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..uart..Uart$GT$$GT$17h54382ef7f7dfed0fE>
    80016f24:	a009                	j	80016f26 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4intr17h932184497dbe6dceE+0x80>
    }
    80016f26:	70e2                	ld	ra,56(sp)
    80016f28:	6121                	addi	sp,sp,64
    80016f2a:	8082                	ret

Disassembly of section .text._ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4putc17he64b05db7d2daa05E:

0000000080016f2c <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4putc17he64b05db7d2daa05E>:
    pub fn putc(&self, c: u8) {
    80016f2c:	7115                	addi	sp,sp,-224
    80016f2e:	ed86                	sd	ra,216(sp)
    80016f30:	862e                	mv	a2,a1
    80016f32:	fd2a                	sd	a0,184(sp)
    80016f34:	0cb103a3          	sb	a1,199(sp)
        let mut uart = self.acquire();
    80016f38:	e52a                	sd	a0,136(sp)
    80016f3a:	e132                	sd	a2,128(sp)
    80016f3c:	fffec097          	auipc	ra,0xfffec
    80016f40:	8b6080e7          	jalr	-1866(ra) # 800027f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E>
    80016f44:	e92a                	sd	a0,144(sp)
    80016f46:	a009                	j	80016f48 <_ZN6kernel7console4uart85_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..console..uart..Uart$GT$$GT$4putc17he64b05db7d2daa05E+0x1c>
    80016f48:	4501                	li	a0,0
        if PANICKED.load(Ordering::Relaxed) {
    80016f4a:	08a10fa3          	sb	a0,159(sp)

0000000080016f4e <.LBB1_27>:
    80016f4e:	00058597          	auipc	a1,0x58
    80016f52:	4f358593          	addi	a1,a1,1267 # 8006f441 <_ZN6kernel7console8PANICKED17h5bf2cc13585b246aE>
    80016f56:	fcaa                	sd	a0,120(sp)
    80016f58:	852e                	mv	a0,a1
    80016f5a:	75e6                	ld	a1,120(sp)
    80016f5c:	ffff6097          	auipc	ra,0xffff6
    80016f60:	fe0080e7          	jalr	-32(ra) # 8000cf3c <_ZN4core4sync6atomic10AtomicBool4load17h0d4c9d106ba3b844E>
    80016f64:	f8aa                	sd	a0,112(sp)
    80016f66:	a009                	j	80016f68 <.LBB1_27+0x1a>
    80016f68:	4501                	li	a0,0
    80016f6a:	75c6                	ld	a1,112(sp)
    80016f6c:	00a58463          	beq	a1,a0,80016f74 <.LBB1_27+0x26>
    80016f70:	a009                	j	80016f72 <.LBB1_27+0x24>
            loop{}
    80016f72:	a011                	j	80016f76 <.LBB1_27+0x28>
        loop {
    80016f74:	a011                	j	80016f78 <.LBB1_27+0x2a>
            loop{}
    80016f76:	a001                	j	80016f76 <.LBB1_27+0x28>
    80016f78:	0908                	addi	a0,sp,144
            if uart.write_index == uart.read_index + Wrapping(UART_BUF_SIZE) {
    80016f7a:	fffed097          	auipc	ra,0xfffed
    80016f7e:	9c2080e7          	jalr	-1598(ra) # 8000393c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17haf587ca18fa6b292E>
    80016f82:	f4aa                	sd	a0,104(sp)
    80016f84:	a009                	j	80016f86 <.LBB1_27+0x38>
    80016f86:	7526                	ld	a0,104(sp)
    80016f88:	090c                	addi	a1,sp,144
    80016f8a:	f0aa                	sd	a0,96(sp)
    80016f8c:	852e                	mv	a0,a1
    80016f8e:	fffed097          	auipc	ra,0xfffed
    80016f92:	9ae080e7          	jalr	-1618(ra) # 8000393c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17haf587ca18fa6b292E>
    80016f96:	ecaa                	sd	a0,88(sp)
    80016f98:	a009                	j	80016f9a <.LBB1_27+0x4c>
    80016f9a:	6566                	ld	a0,88(sp)
    80016f9c:	6508                	ld	a0,8(a0)
    80016f9e:	02000593          	li	a1,32
    80016fa2:	f52e                	sd	a1,168(sp)
    80016fa4:	fffee097          	auipc	ra,0xfffee
    80016fa8:	3ce080e7          	jalr	974(ra) # 80005372 <_ZN84_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h07fd531db752633dE>
    80016fac:	f12a                	sd	a0,160(sp)
    80016fae:	a009                	j	80016fb0 <.LBB1_27+0x62>
    80016fb0:	110c                	addi	a1,sp,160
    80016fb2:	7506                	ld	a0,96(sp)
    80016fb4:	ffff1097          	auipc	ra,0xffff1
    80016fb8:	a46080e7          	jalr	-1466(ra) # 800079fa <_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4ec36c5424dd304fE>
    80016fbc:	e8aa                	sd	a0,80(sp)
    80016fbe:	a009                	j	80016fc0 <.LBB1_27+0x72>
    80016fc0:	4501                	li	a0,0
    80016fc2:	65c6                	ld	a1,80(sp)
    80016fc4:	00a58d63          	beq	a1,a0,80016fde <.LBB1_28+0x14>
    80016fc8:	a009                	j	80016fca <.LBB1_28>

0000000080016fca <.LBB1_28>:
                    CPU_MANAGER.myproc().expect("Fail to get my process.")
    80016fca:	00058517          	auipc	a0,0x58
    80016fce:	03650513          	addi	a0,a0,54 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80016fd2:	00006097          	auipc	ra,0x6
    80016fd6:	766080e7          	jalr	1894(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    80016fda:	e4aa                	sd	a0,72(sp)
    80016fdc:	a801                	j	80016fec <.LBB1_29>
    80016fde:	0908                	addi	a0,sp,144
                let write_index = uart.write_index.0 % UART_BUF_SIZE;
    80016fe0:	fffed097          	auipc	ra,0xfffed
    80016fe4:	95c080e7          	jalr	-1700(ra) # 8000393c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17haf587ca18fa6b292E>
    80016fe8:	e0aa                	sd	a0,64(sp)
    80016fea:	a8b1                	j	80017046 <.LBB1_30+0x52>

0000000080016fec <.LBB1_29>:
                    CPU_MANAGER.myproc().expect("Fail to get my process.")
    80016fec:	00011597          	auipc	a1,0x11
    80016ff0:	dcc58593          	addi	a1,a1,-564 # 80027db8 <.L__unnamed_1>

0000000080016ff4 <.LBB1_30>:
    80016ff4:	00011697          	auipc	a3,0x11
    80016ff8:	df468693          	addi	a3,a3,-524 # 80027de8 <.L__unnamed_2>
    80016ffc:	465d                	li	a2,23
    80016ffe:	6526                	ld	a0,72(sp)
    80017000:	00002097          	auipc	ra,0x2
    80017004:	a5a080e7          	jalr	-1446(ra) # 80018a5a <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E>
    80017008:	fc2a                	sd	a0,56(sp)
    8001700a:	a009                	j	8001700c <.LBB1_30+0x18>
    8001700c:	7562                	ld	a0,56(sp)
    8001700e:	e5aa                	sd	a0,200(sp)
    80017010:	0908                	addi	a0,sp,144
                p.sleep(&uart.read_index as *const _ as usize, uart);
    80017012:	fffed097          	auipc	ra,0xfffed
    80017016:	92a080e7          	jalr	-1750(ra) # 8000393c <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17haf587ca18fa6b292E>
    8001701a:	f82a                	sd	a0,48(sp)
    8001701c:	a009                	j	8001701e <.LBB1_30+0x2a>
    8001701e:	7542                	ld	a0,48(sp)
    80017020:	00850593          	addi	a1,a0,8
    80017024:	664a                	ld	a2,144(sp)
    80017026:	7562                	ld	a0,56(sp)
    80017028:	fffef097          	auipc	ra,0xfffef
    8001702c:	d82080e7          	jalr	-638(ra) # 80005daa <_ZN6kernel7process7process7Process5sleep17h6f528152a54896a9E>
    80017030:	a009                	j	80017032 <.LBB1_30+0x3e>
                uart = self.acquire();
    80017032:	652a                	ld	a0,136(sp)
    80017034:	fffeb097          	auipc	ra,0xfffeb
    80017038:	7be080e7          	jalr	1982(ra) # 800027f2 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h9834c7f18834e8c0E>
    8001703c:	f42a                	sd	a0,40(sp)
    8001703e:	a009                	j	80017040 <.LBB1_30+0x4c>
    80017040:	7522                	ld	a0,40(sp)
    80017042:	e92a                	sd	a0,144(sp)
        loop {
    80017044:	bf15                	j	80016f78 <.LBB1_27+0x2a>
                let write_index = uart.write_index.0 % UART_BUF_SIZE;
    80017046:	6506                	ld	a0,64(sp)
    80017048:	610c                	ld	a1,0(a0)
    8001704a:	89fd                	andi	a1,a1,31
    8001704c:	e9ae                	sd	a1,208(sp)
    8001704e:	0908                	addi	a0,sp,144
                uart.buf[write_index] = c;
    80017050:	f02e                	sd	a1,32(sp)
    80017052:	fffed097          	auipc	ra,0xfffed
    80017056:	90a080e7          	jalr	-1782(ra) # 8000395c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E>
    8001705a:	ec2a                	sd	a0,24(sp)
    8001705c:	a009                	j	8001705e <.LBB1_30+0x6a>
    8001705e:	457d                	li	a0,31
    80017060:	7582                	ld	a1,32(sp)
    80017062:	06b56263          	bltu	a0,a1,800170c6 <.LBB1_31>
    80017066:	a009                	j	80017068 <.LBB1_30+0x74>
    80017068:	6562                	ld	a0,24(sp)
    8001706a:	7582                	ld	a1,32(sp)
    8001706c:	00b50633          	add	a2,a0,a1
    80017070:	668a                	ld	a3,128(sp)
    80017072:	00d60823          	sb	a3,16(a2)
    80017076:	0908                	addi	a0,sp,144
                uart.write_index += Wrapping(1);
    80017078:	fffed097          	auipc	ra,0xfffed
    8001707c:	8e4080e7          	jalr	-1820(ra) # 8000395c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E>
    80017080:	e82a                	sd	a0,16(sp)
    80017082:	a009                	j	80017084 <.LBB1_30+0x90>
    80017084:	4505                	li	a0,1
    80017086:	f92a                	sd	a0,176(sp)
    80017088:	65c2                	ld	a1,16(sp)
    8001708a:	e42a                	sd	a0,8(sp)
    8001708c:	852e                	mv	a0,a1
    8001708e:	65a2                	ld	a1,8(sp)
    80017090:	fffee097          	auipc	ra,0xfffee
    80017094:	31e080e7          	jalr	798(ra) # 800053ae <_ZN90_$LT$core..num..wrapping..Wrapping$LT$usize$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hcde6a2ec0c355ebdE>
    80017098:	a009                	j	8001709a <.LBB1_30+0xa6>
    8001709a:	0908                	addi	a0,sp,144
                uart.transmit();
    8001709c:	fffed097          	auipc	ra,0xfffed
    800170a0:	8c0080e7          	jalr	-1856(ra) # 8000395c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h0299e6153726a344E>
    800170a4:	e02a                	sd	a0,0(sp)
    800170a6:	a009                	j	800170a8 <.LBB1_30+0xb4>
    800170a8:	6502                	ld	a0,0(sp)
    800170aa:	ffff1097          	auipc	ra,0xffff1
    800170ae:	3a0080e7          	jalr	928(ra) # 8000844a <_ZN6kernel7console4uart4Uart8transmit17h78978c2aee6400ffE>
    800170b2:	a009                	j	800170b4 <.LBB1_30+0xc0>
    800170b4:	0908                	addi	a0,sp,144
    }
    800170b6:	ffff0097          	auipc	ra,0xffff0
    800170ba:	950080e7          	jalr	-1712(ra) # 80006a06 <_ZN4core3ptr93drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..console..uart..Uart$GT$$GT$17h54382ef7f7dfed0fE>
    800170be:	a009                	j	800170c0 <.LBB1_30+0xcc>
    800170c0:	60ee                	ld	ra,216(sp)
    800170c2:	612d                	addi	sp,sp,224
    800170c4:	8082                	ret

00000000800170c6 <.LBB1_31>:
                uart.buf[write_index] = c;
    800170c6:	00011617          	auipc	a2,0x11
    800170ca:	d3a60613          	addi	a2,a2,-710 # 80027e00 <.L__unnamed_3>
    800170ce:	02000593          	li	a1,32
    800170d2:	7502                	ld	a0,32(sp)
    800170d4:	0000a097          	auipc	ra,0xa
    800170d8:	c22080e7          	jalr	-990(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E:

00000000800170de <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E>:
}

impl Spinlock<Log> {
    /// It should be called at the start of file system call.
    pub fn begin_op(&self) {
    800170de:	7135                	addi	sp,sp,-160
    800170e0:	ed06                	sd	ra,152(sp)
    800170e2:	e52a                	sd	a0,136(sp)
        let mut guard  = self.acquire();
    800170e4:	f8aa                	sd	a0,112(sp)
    800170e6:	fffeb097          	auipc	ra,0xfffeb
    800170ea:	0c2080e7          	jalr	194(ra) # 800021a8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE>
    800170ee:	fcaa                	sd	a0,120(sp)
    800170f0:	a009                	j	800170f2 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x14>
        loop {
    800170f2:	a009                	j	800170f4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x16>
    800170f4:	18a8                	addi	a0,sp,120
            if guard.committing ||
    800170f6:	fffec097          	auipc	ra,0xfffec
    800170fa:	788080e7          	jalr	1928(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    800170fe:	f4aa                	sd	a0,104(sp)
    80017100:	a02d                	j	8001712a <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x4c>
    80017102:	4505                	li	a0,1
    80017104:	08a103a3          	sb	a0,135(sp)
    80017108:	a821                	j	80017120 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x42>
    8001710a:	4501                	li	a0,0
    8001710c:	08a103a3          	sb	a0,135(sp)
    80017110:	a801                	j	80017120 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x42>
    80017112:	18a8                	addi	a0,sp,120
                1 + guard.lh.len as usize +
    80017114:	fffec097          	auipc	ra,0xfffec
    80017118:	76a080e7          	jalr	1898(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    8001711c:	f0aa                	sd	a0,96(sp)
    8001711e:	a821                	j	80017136 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x58>
            if guard.committing ||
    80017120:	08714503          	lbu	a0,135(sp)
    80017124:	8905                	andi	a0,a0,1
    80017126:	ed3d                	bnez	a0,800171a4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0xc6>
    80017128:	a069                	j	800171b2 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0xd4>
    8001712a:	7526                	ld	a0,104(sp)
    8001712c:	08854583          	lbu	a1,136(a0)
    80017130:	8985                	andi	a1,a1,1
    80017132:	f9e1                	bnez	a1,80017102 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x24>
    80017134:	bff9                	j	80017112 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x34>
                1 + guard.lh.len as usize +
    80017136:	7506                	ld	a0,96(sp)
    80017138:	01056583          	lwu	a1,16(a0)
    8001713c:	0585                	addi	a1,a1,1
    8001713e:	4601                	li	a2,0
    80017140:	ecae                	sd	a1,88(sp)
    80017142:	10061263          	bnez	a2,80017246 <.LBB2_31>
    80017146:	a009                	j	80017148 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x6a>
    80017148:	18a8                	addi	a0,sp,120
                (guard.outstanding+1) as usize * MAXOPBLOCKS > LOGSIZE
    8001714a:	fffec097          	auipc	ra,0xfffec
    8001714e:	734080e7          	jalr	1844(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    80017152:	e8aa                	sd	a0,80(sp)
    80017154:	a009                	j	80017156 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x78>
    80017156:	6546                	ld	a0,80(sp)
    80017158:	00c56583          	lwu	a1,12(a0)
    8001715c:	0585                	addi	a1,a1,1
    8001715e:	02059613          	slli	a2,a1,0x20
    80017162:	9201                	srli	a2,a2,0x20
    80017164:	e4ae                	sd	a1,72(sp)
    80017166:	0eb61e63          	bne	a2,a1,80017262 <.LBB2_33>
    8001716a:	a009                	j	8001716c <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x8e>
    8001716c:	6526                	ld	a0,72(sp)
    8001716e:	02051593          	slli	a1,a0,0x20
    80017172:	9181                	srli	a1,a1,0x20
    80017174:	4629                	li	a2,10
    80017176:	02c586b3          	mul	a3,a1,a2
    8001717a:	02c5b5b3          	mulhu	a1,a1,a2
    8001717e:	4601                	li	a2,0
    80017180:	e0b6                	sd	a3,64(sp)
    80017182:	0ec59e63          	bne	a1,a2,8001727e <.LBB2_35>
    80017186:	a009                	j	80017188 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0xaa>
                1 + guard.lh.len as usize +
    80017188:	6566                	ld	a0,88(sp)
    8001718a:	6586                	ld	a1,64(sp)
    8001718c:	00b50633          	add	a2,a0,a1
    80017190:	4681                	li	a3,0
    80017192:	fc32                	sd	a2,56(sp)
    80017194:	10069463          	bnez	a3,8001729c <.LBB2_37>
    80017198:	a009                	j	8001719a <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0xbc>
    8001719a:	4579                	li	a0,30
            if guard.committing ||
    8001719c:	75e2                	ld	a1,56(sp)
    8001719e:	f6b562e3          	bltu	a0,a1,80017102 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x24>
    800171a2:	b7a5                	j	8001710a <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x2c>
    800171a4:	18a8                	addi	a0,sp,120
            {
                let channel = guard.deref() as *const Log as usize;
    800171a6:	fffec097          	auipc	ra,0xfffec
    800171aa:	6d8080e7          	jalr	1752(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    800171ae:	f82a                	sd	a0,48(sp)
    800171b0:	a801                	j	800171c0 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0xe2>
    800171b2:	18a8                	addi	a0,sp,120
                unsafe { CPU_MANAGER.myproc().unwrap().sleep(channel, guard); }
                guard = self.acquire();
            } else {
                guard.outstanding += 1;
    800171b4:	fffed097          	auipc	ra,0xfffed
    800171b8:	808080e7          	jalr	-2040(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    800171bc:	f42a                	sd	a0,40(sp)
    800171be:	a8a9                	j	80017218 <.LBB2_30+0x3a>
                let channel = guard.deref() as *const Log as usize;
    800171c0:	7542                	ld	a0,48(sp)
    800171c2:	75c2                	ld	a1,48(sp)
    800171c4:	e92e                	sd	a1,144(sp)

00000000800171c6 <.LBB2_29>:
                unsafe { CPU_MANAGER.myproc().unwrap().sleep(channel, guard); }
    800171c6:	00058617          	auipc	a2,0x58
    800171ca:	e3a60613          	addi	a2,a2,-454 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    800171ce:	f02a                	sd	a0,32(sp)
    800171d0:	8532                	mv	a0,a2
    800171d2:	00006097          	auipc	ra,0x6
    800171d6:	566080e7          	jalr	1382(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    800171da:	ec2a                	sd	a0,24(sp)
    800171dc:	a009                	j	800171de <.LBB2_30>

00000000800171de <.LBB2_30>:
    800171de:	00011597          	auipc	a1,0x11
    800171e2:	cca58593          	addi	a1,a1,-822 # 80027ea8 <.L__unnamed_4>
    800171e6:	6562                	ld	a0,24(sp)
    800171e8:	00002097          	auipc	ra,0x2
    800171ec:	980080e7          	jalr	-1664(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    800171f0:	e82a                	sd	a0,16(sp)
    800171f2:	a009                	j	800171f4 <.LBB2_30+0x16>
    800171f4:	7666                	ld	a2,120(sp)
    800171f6:	6542                	ld	a0,16(sp)
    800171f8:	7582                	ld	a1,32(sp)
    800171fa:	fffef097          	auipc	ra,0xfffef
    800171fe:	f18080e7          	jalr	-232(ra) # 80006112 <_ZN6kernel7process7process7Process5sleep17hc96bd88cc1d866b8E>
    80017202:	a009                	j	80017204 <.LBB2_30+0x26>
                guard = self.acquire();
    80017204:	7546                	ld	a0,112(sp)
    80017206:	fffeb097          	auipc	ra,0xfffeb
    8001720a:	fa2080e7          	jalr	-94(ra) # 800021a8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE>
    8001720e:	e42a                	sd	a0,8(sp)
    80017210:	a009                	j	80017212 <.LBB2_30+0x34>
    80017212:	6522                	ld	a0,8(sp)
    80017214:	fcaa                	sd	a0,120(sp)
        loop {
    80017216:	bdf9                	j	800170f4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E+0x16>
                guard.outstanding += 1;
    80017218:	7522                	ld	a0,40(sp)
    8001721a:	00c56583          	lwu	a1,12(a0)
    8001721e:	0585                	addi	a1,a1,1
    80017220:	02059613          	slli	a2,a1,0x20
    80017224:	9201                	srli	a2,a2,0x20
    80017226:	e02e                	sd	a1,0(sp)
    80017228:	08b61863          	bne	a2,a1,800172b8 <.LBB2_39>
    8001722c:	a009                	j	8001722e <.LBB2_30+0x50>
    8001722e:	6502                	ld	a0,0(sp)
    80017230:	75a2                	ld	a1,40(sp)
    80017232:	c5c8                	sw	a0,12(a1)
                drop(guard);
    80017234:	7566                	ld	a0,120(sp)
    80017236:	ffff6097          	auipc	ra,0xffff6
    8001723a:	6f2080e7          	jalr	1778(ra) # 8000d928 <_ZN4core3mem4drop17h5cfedcef037f9974E>
    8001723e:	a009                	j	80017240 <.LBB2_30+0x62>
                break;
            }
        }
    }
    80017240:	60ea                	ld	ra,152(sp)
    80017242:	610d                	addi	sp,sp,160
    80017244:	8082                	ret

0000000080017246 <.LBB2_31>:
                1 + guard.lh.len as usize +
    80017246:	00011517          	auipc	a0,0x11
    8001724a:	bfa50513          	addi	a0,a0,-1030 # 80027e40 <str.0>

000000008001724e <.LBB2_32>:
    8001724e:	00011617          	auipc	a2,0x11
    80017252:	bda60613          	addi	a2,a2,-1062 # 80027e28 <.L__unnamed_5>
    80017256:	45f1                	li	a1,28
    80017258:	0000a097          	auipc	ra,0xa
    8001725c:	a72080e7          	jalr	-1422(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080017262 <.LBB2_33>:
                (guard.outstanding+1) as usize * MAXOPBLOCKS > LOGSIZE
    80017262:	00011517          	auipc	a0,0x11
    80017266:	bde50513          	addi	a0,a0,-1058 # 80027e40 <str.0>

000000008001726a <.LBB2_34>:
    8001726a:	00011617          	auipc	a2,0x11
    8001726e:	bf660613          	addi	a2,a2,-1034 # 80027e60 <.L__unnamed_6>
    80017272:	45f1                	li	a1,28
    80017274:	0000a097          	auipc	ra,0xa
    80017278:	a56080e7          	jalr	-1450(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001727e <.LBB2_35>:
    8001727e:	00011517          	auipc	a0,0x11
    80017282:	c0250513          	addi	a0,a0,-1022 # 80027e80 <str.1>

0000000080017286 <.LBB2_36>:
    80017286:	00011617          	auipc	a2,0x11
    8001728a:	bda60613          	addi	a2,a2,-1062 # 80027e60 <.L__unnamed_6>
    8001728e:	02100593          	li	a1,33
    80017292:	0000a097          	auipc	ra,0xa
    80017296:	a38080e7          	jalr	-1480(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001729c <.LBB2_37>:
                1 + guard.lh.len as usize +
    8001729c:	00011517          	auipc	a0,0x11
    800172a0:	ba450513          	addi	a0,a0,-1116 # 80027e40 <str.0>

00000000800172a4 <.LBB2_38>:
    800172a4:	00011617          	auipc	a2,0x11
    800172a8:	b8460613          	addi	a2,a2,-1148 # 80027e28 <.L__unnamed_5>
    800172ac:	45f1                	li	a1,28
    800172ae:	0000a097          	auipc	ra,0xa
    800172b2:	a1c080e7          	jalr	-1508(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800172b8 <.LBB2_39>:
                guard.outstanding += 1;
    800172b8:	00011517          	auipc	a0,0x11
    800172bc:	b8850513          	addi	a0,a0,-1144 # 80027e40 <str.0>

00000000800172c0 <.LBB2_40>:
    800172c0:	00011617          	auipc	a2,0x11
    800172c4:	c0060613          	addi	a2,a2,-1024 # 80027ec0 <.L__unnamed_7>
    800172c8:	45f1                	li	a1,28
    800172ca:	0000a097          	auipc	ra,0xa
    800172ce:	a00080e7          	jalr	-1536(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E:

00000000800172d4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E>:

    /// Accept a buffer, write it into the log and then release the buffer.
    /// This function will pin this buf in the cache until the log commits.
    pub fn write(&self, buf: Buf<'_>) {
    800172d4:	7109                	addi	sp,sp,-384
    800172d6:	fe86                	sd	ra,376(sp)
    800172d8:	eeaa                	sd	a0,344(sp)
        let mut guard = self.acquire();
    800172da:	e5ae                	sd	a1,200(sp)
    800172dc:	fffeb097          	auipc	ra,0xfffeb
    800172e0:	ecc080e7          	jalr	-308(ra) # 800021a8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE>
    800172e4:	edaa                	sd	a0,216(sp)
    800172e6:	a009                	j	800172e8 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x14>
    800172e8:	09a8                	addi	a0,sp,216
        
        if (guard.lh.len+1) as usize >= LOGSIZE || guard.lh.len+1 >= guard.size {
    800172ea:	fffec097          	auipc	ra,0xfffec
    800172ee:	594080e7          	jalr	1428(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    800172f2:	e1aa                	sd	a0,192(sp)
    800172f4:	a02d                	j	8001731e <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x4a>
    800172f6:	4505                	li	a0,1
    800172f8:	0ea103a3          	sb	a0,231(sp)
    800172fc:	a821                	j	80017314 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x40>
    800172fe:	4501                	li	a0,0
    80017300:	0ea103a3          	sb	a0,231(sp)
    80017304:	a801                	j	80017314 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x40>
    80017306:	09a8                	addi	a0,sp,216
    80017308:	fffec097          	auipc	ra,0xfffec
    8001730c:	576080e7          	jalr	1398(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    80017310:	fd2a                	sd	a0,184(sp)
    80017312:	a805                	j	80017342 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x6e>
    80017314:	0e714503          	lbu	a0,231(sp)
    80017318:	8905                	andi	a0,a0,1
    8001731a:	ed31                	bnez	a0,80017376 <.LBB3_59>
    8001731c:	a8a5                	j	80017394 <.LBB3_60+0x16>
    8001731e:	650e                	ld	a0,192(sp)
    80017320:	01056583          	lwu	a1,16(a0)
    80017324:	0585                	addi	a1,a1,1
    80017326:	02059613          	slli	a2,a1,0x20
    8001732a:	9201                	srli	a2,a2,0x20
    8001732c:	f92e                	sd	a1,176(sp)
    8001732e:	2eb61463          	bne	a2,a1,80017616 <.LBB3_65>
    80017332:	a009                	j	80017334 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x60>
    80017334:	754a                	ld	a0,176(sp)
    80017336:	0005059b          	sext.w	a1,a0
    8001733a:	4675                	li	a2,29
    8001733c:	fab66de3          	bltu	a2,a1,800172f6 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x22>
    80017340:	b7d9                	j	80017306 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x32>
    80017342:	756a                	ld	a0,184(sp)
    80017344:	01056583          	lwu	a1,16(a0)
    80017348:	0585                	addi	a1,a1,1
    8001734a:	02059613          	slli	a2,a1,0x20
    8001734e:	9201                	srli	a2,a2,0x20
    80017350:	f52e                	sd	a1,168(sp)
    80017352:	2eb61063          	bne	a2,a1,80017632 <.LBB3_67>
    80017356:	a009                	j	80017358 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x84>
    80017358:	09a8                	addi	a0,sp,216
    8001735a:	fffec097          	auipc	ra,0xfffec
    8001735e:	524080e7          	jalr	1316(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    80017362:	f12a                	sd	a0,160(sp)
    80017364:	a009                	j	80017366 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x92>
    80017366:	750a                	ld	a0,160(sp)
    80017368:	414c                	lw	a1,4(a0)
    8001736a:	762a                	ld	a2,168(sp)
    8001736c:	0006069b          	sext.w	a3,a2
    80017370:	f8b6f3e3          	bgeu	a3,a1,800172f6 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x22>
    80017374:	b769                	j	800172fe <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E+0x2a>

0000000080017376 <.LBB3_59>:
            panic!("log: not enough space for ongoing transactions");
    80017376:	00011517          	auipc	a0,0x11
    8001737a:	b9250513          	addi	a0,a0,-1134 # 80027f08 <.L__unnamed_8>

000000008001737e <.LBB3_60>:
    8001737e:	00011617          	auipc	a2,0x11
    80017382:	bba60613          	addi	a2,a2,-1094 # 80027f38 <.L__unnamed_9>
    80017386:	02e00593          	li	a1,46
    8001738a:	0000a097          	auipc	ra,0xa
    8001738e:	940080e7          	jalr	-1728(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80017392:	0000                	unimp
    80017394:	09a8                	addi	a0,sp,216
        }
        if guard.outstanding < 1 {
    80017396:	fffec097          	auipc	ra,0xfffec
    8001739a:	4e8080e7          	jalr	1256(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    8001739e:	ed2a                	sd	a0,152(sp)
    800173a0:	a009                	j	800173a2 <.LBB3_60+0x24>
    800173a2:	656a                	ld	a0,152(sp)
    800173a4:	454c                	lw	a1,12(a0)
    800173a6:	4601                	li	a2,0
    800173a8:	02c59263          	bne	a1,a2,800173cc <.LBB3_62+0x16>
    800173ac:	a009                	j	800173ae <.LBB3_61>

00000000800173ae <.LBB3_61>:
            panic!("log: this log write is out of recording");
    800173ae:	00011517          	auipc	a0,0x11
    800173b2:	ba250513          	addi	a0,a0,-1118 # 80027f50 <.L__unnamed_10>

00000000800173b6 <.LBB3_62>:
    800173b6:	00011617          	auipc	a2,0x11
    800173ba:	bc260613          	addi	a2,a2,-1086 # 80027f78 <.L__unnamed_11>
    800173be:	02700593          	li	a1,39
    800173c2:	0000a097          	auipc	ra,0xa
    800173c6:	908080e7          	jalr	-1784(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800173ca:	0000                	unimp
    800173cc:	09a8                	addi	a0,sp,216
        }

        // record the buf's blockno in the log header
        for i in 0..guard.lh.len {
    800173ce:	fffec097          	auipc	ra,0xfffec
    800173d2:	4b0080e7          	jalr	1200(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    800173d6:	e92a                	sd	a0,144(sp)
    800173d8:	a009                	j	800173da <.LBB3_62+0x24>
    800173da:	654a                	ld	a0,144(sp)
    800173dc:	490c                	lw	a1,16(a0)
    800173de:	4601                	li	a2,0
    800173e0:	d5b2                	sw	a2,232(sp)
    800173e2:	d7ae                	sw	a1,236(sp)
    800173e4:	8532                	mv	a0,a2
    800173e6:	fffee097          	auipc	ra,0xfffee
    800173ea:	f62080e7          	jalr	-158(ra) # 80005348 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb3f70b8b942a274cE>
    800173ee:	e52a                	sd	a0,136(sp)
    800173f0:	e12e                	sd	a1,128(sp)
    800173f2:	a009                	j	800173f4 <.LBB3_62+0x3e>
    800173f4:	652a                	ld	a0,136(sp)
    800173f6:	d9aa                	sw	a0,240(sp)
    800173f8:	658a                	ld	a1,128(sp)
    800173fa:	dbae                	sw	a1,244(sp)
    800173fc:	a009                	j	800173fe <.LBB3_62+0x48>
    800173fe:	1988                	addi	a0,sp,240
    80017400:	fffee097          	auipc	ra,0xfffee
    80017404:	dd0080e7          	jalr	-560(ra) # 800051d0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE>
    80017408:	ddaa                	sw	a0,248(sp)
    8001740a:	dfae                	sw	a1,252(sp)
    8001740c:	a009                	j	8001740e <.LBB3_62+0x58>
    8001740e:	0f816503          	lwu	a0,248(sp)
    80017412:	4581                	li	a1,0
    80017414:	00b50463          	beq	a0,a1,8001741c <.LBB3_62+0x66>
    80017418:	a009                	j	8001741a <.LBB3_62+0x64>
    8001741a:	a809                	j	8001742c <.LBB3_62+0x76>
    8001741c:	09a8                	addi	a0,sp,216
                drop(guard);
                drop(buf);
                return;
            }
        }
        if (guard.lh.len+2) as usize >= LOGSIZE || guard.lh.len+2 >= guard.size {
    8001741e:	fffec097          	auipc	ra,0xfffec
    80017422:	460080e7          	jalr	1120(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    80017426:	fcaa                	sd	a0,120(sp)
    80017428:	a0c1                	j	800174e8 <.LBB3_62+0x132>
        for i in 0..guard.lh.len {
    8001742a:	0000                	unimp
    8001742c:	0fc16503          	lwu	a0,252(sp)
    80017430:	16a12223          	sw	a0,356(sp)
    80017434:	16a12423          	sw	a0,360(sp)
    80017438:	16a12623          	sw	a0,364(sp)
    8001743c:	09ac                	addi	a1,sp,216
            if guard.lh.blocknos[i as usize] == buf.read_blockno() {
    8001743e:	f8aa                	sd	a0,112(sp)
    80017440:	852e                	mv	a0,a1
    80017442:	fffec097          	auipc	ra,0xfffec
    80017446:	43c080e7          	jalr	1084(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    8001744a:	f4aa                	sd	a0,104(sp)
    8001744c:	a009                	j	8001744e <.LBB3_62+0x98>
    8001744e:	7546                	ld	a0,112(sp)
    80017450:	0005059b          	sext.w	a1,a0
    80017454:	4671                	li	a2,28
    80017456:	f0aa                	sd	a0,96(sp)
    80017458:	1eb66b63          	bltu	a2,a1,8001764e <.LBB3_69>
    8001745c:	a009                	j	8001745e <.LBB3_62+0xa8>
    8001745e:	7506                	ld	a0,96(sp)
    80017460:	00251593          	slli	a1,a0,0x2
    80017464:	7626                	ld	a2,104(sp)
    80017466:	95b2                	add	a1,a1,a2
    80017468:	0145e583          	lwu	a1,20(a1)
    8001746c:	652e                	ld	a0,200(sp)
    8001746e:	ecae                	sd	a1,88(sp)
    80017470:	fffea097          	auipc	ra,0xfffea
    80017474:	4ba080e7          	jalr	1210(ra) # 8000192a <_ZN6kernel2fs3bio3Buf12read_blockno17h273c260285cdf6bdE>
    80017478:	e8aa                	sd	a0,80(sp)
    8001747a:	a009                	j	8001747c <.LBB3_62+0xc6>
    8001747c:	6546                	ld	a0,80(sp)
    8001747e:	0005059b          	sext.w	a1,a0
    80017482:	6666                	ld	a2,88(sp)
    80017484:	0006069b          	sext.w	a3,a2
    80017488:	00b69963          	bne	a3,a1,8001749a <.LBB3_62+0xe4>
    8001748c:	a009                	j	8001748e <.LBB3_62+0xd8>
                drop(guard);
    8001748e:	656e                	ld	a0,216(sp)
    80017490:	ffff6097          	auipc	ra,0xffff6
    80017494:	498080e7          	jalr	1176(ra) # 8000d928 <_ZN4core3mem4drop17h5cfedcef037f9974E>
    80017498:	a011                	j	8001749c <.LBB3_62+0xe6>
        for i in 0..guard.lh.len {
    8001749a:	b795                	j	800173fe <.LBB3_62+0x48>
                drop(buf);
    8001749c:	652e                	ld	a0,200(sp)
    8001749e:	710c                	ld	a1,32(a0)
    800174a0:	f22e                	sd	a1,288(sp)
    800174a2:	6d0c                	ld	a1,24(a0)
    800174a4:	ee2e                	sd	a1,280(sp)
    800174a6:	690c                	ld	a1,16(a0)
    800174a8:	ea2e                	sd	a1,272(sp)
    800174aa:	650c                	ld	a1,8(a0)
    800174ac:	e62e                	sd	a1,264(sp)
    800174ae:	610c                	ld	a1,0(a0)
    800174b0:	e22e                	sd	a1,256(sp)
    800174b2:	0208                	addi	a0,sp,256
    800174b4:	ffff6097          	auipc	ra,0xffff6
    800174b8:	4de080e7          	jalr	1246(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    800174bc:	a009                	j	800174be <.LBB3_62+0x108>
        let len = guard.lh.len as usize;
        guard.lh.blocknos[len] = buf.read_blockno();
        guard.lh.len += 1;
        drop(guard);
        drop(buf);
    }
    800174be:	aa89                	j	80017610 <.LBB3_64+0xc8>
    800174c0:	4505                	li	a0,1
        if (guard.lh.len+2) as usize >= LOGSIZE || guard.lh.len+2 >= guard.size {
    800174c2:	12a107a3          	sb	a0,303(sp)
    800174c6:	a821                	j	800174de <.LBB3_62+0x128>
    800174c8:	4501                	li	a0,0
    800174ca:	12a107a3          	sb	a0,303(sp)
    800174ce:	a801                	j	800174de <.LBB3_62+0x128>
    800174d0:	09a8                	addi	a0,sp,216
    800174d2:	fffec097          	auipc	ra,0xfffec
    800174d6:	3ac080e7          	jalr	940(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    800174da:	e4aa                	sd	a0,72(sp)
    800174dc:	a805                	j	8001750c <.LBB3_62+0x156>
    800174de:	12f14503          	lbu	a0,303(sp)
    800174e2:	8905                	andi	a0,a0,1
    800174e4:	ed31                	bnez	a0,80017540 <.LBB3_63>
    800174e6:	a8a5                	j	8001755e <.LBB3_64+0x16>
    800174e8:	7566                	ld	a0,120(sp)
    800174ea:	01056583          	lwu	a1,16(a0)
    800174ee:	0589                	addi	a1,a1,2
    800174f0:	02059613          	slli	a2,a1,0x20
    800174f4:	9201                	srli	a2,a2,0x20
    800174f6:	e0ae                	sd	a1,64(sp)
    800174f8:	16b61663          	bne	a2,a1,80017664 <.LBB3_70>
    800174fc:	a009                	j	800174fe <.LBB3_62+0x148>
    800174fe:	6506                	ld	a0,64(sp)
    80017500:	0005059b          	sext.w	a1,a0
    80017504:	4675                	li	a2,29
    80017506:	fab66de3          	bltu	a2,a1,800174c0 <.LBB3_62+0x10a>
    8001750a:	b7d9                	j	800174d0 <.LBB3_62+0x11a>
    8001750c:	6526                	ld	a0,72(sp)
    8001750e:	01056583          	lwu	a1,16(a0)
    80017512:	0589                	addi	a1,a1,2
    80017514:	02059613          	slli	a2,a1,0x20
    80017518:	9201                	srli	a2,a2,0x20
    8001751a:	fc2e                	sd	a1,56(sp)
    8001751c:	16b61263          	bne	a2,a1,80017680 <.LBB3_72>
    80017520:	a009                	j	80017522 <.LBB3_62+0x16c>
    80017522:	09a8                	addi	a0,sp,216
    80017524:	fffec097          	auipc	ra,0xfffec
    80017528:	35a080e7          	jalr	858(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    8001752c:	f82a                	sd	a0,48(sp)
    8001752e:	a009                	j	80017530 <.LBB3_62+0x17a>
    80017530:	7542                	ld	a0,48(sp)
    80017532:	414c                	lw	a1,4(a0)
    80017534:	7662                	ld	a2,56(sp)
    80017536:	0006069b          	sext.w	a3,a2
    8001753a:	f8b6f3e3          	bgeu	a3,a1,800174c0 <.LBB3_62+0x10a>
    8001753e:	b769                	j	800174c8 <.LBB3_62+0x112>

0000000080017540 <.LBB3_63>:
            panic!("log: not enough space for this transaction");
    80017540:	00011517          	auipc	a0,0x11
    80017544:	a9850513          	addi	a0,a0,-1384 # 80027fd8 <.L__unnamed_12>

0000000080017548 <.LBB3_64>:
    80017548:	00011617          	auipc	a2,0x11
    8001754c:	ac060613          	addi	a2,a2,-1344 # 80028008 <.L__unnamed_13>
    80017550:	02a00593          	li	a1,42
    80017554:	00009097          	auipc	ra,0x9
    80017558:	776080e7          	jalr	1910(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001755c:	0000                	unimp
        unsafe { buf.pin(); }
    8001755e:	652e                	ld	a0,200(sp)
    80017560:	fffea097          	auipc	ra,0xfffea
    80017564:	482080e7          	jalr	1154(ra) # 800019e2 <_ZN6kernel2fs3bio3Buf3pin17hd9cbcf2459e86140E>
    80017568:	a009                	j	8001756a <.LBB3_64+0x22>
    8001756a:	09a8                	addi	a0,sp,216
        let len = guard.lh.len as usize;
    8001756c:	fffec097          	auipc	ra,0xfffec
    80017570:	312080e7          	jalr	786(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    80017574:	f42a                	sd	a0,40(sp)
    80017576:	a009                	j	80017578 <.LBB3_64+0x30>
    80017578:	7522                	ld	a0,40(sp)
    8001757a:	01056583          	lwu	a1,16(a0)
    8001757e:	faae                	sd	a1,368(sp)
        guard.lh.blocknos[len] = buf.read_blockno();
    80017580:	652e                	ld	a0,200(sp)
    80017582:	f02e                	sd	a1,32(sp)
    80017584:	fffea097          	auipc	ra,0xfffea
    80017588:	3a6080e7          	jalr	934(ra) # 8000192a <_ZN6kernel2fs3bio3Buf12read_blockno17h273c260285cdf6bdE>
    8001758c:	ec2a                	sd	a0,24(sp)
    8001758e:	a009                	j	80017590 <.LBB3_64+0x48>
    80017590:	09a8                	addi	a0,sp,216
    80017592:	fffec097          	auipc	ra,0xfffec
    80017596:	42a080e7          	jalr	1066(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    8001759a:	e82a                	sd	a0,16(sp)
    8001759c:	a009                	j	8001759e <.LBB3_64+0x56>
    8001759e:	4571                	li	a0,28
    800175a0:	7582                	ld	a1,32(sp)
    800175a2:	0eb56d63          	bltu	a0,a1,8001769c <.LBB3_74>
    800175a6:	a009                	j	800175a8 <.LBB3_64+0x60>
    800175a8:	7502                	ld	a0,32(sp)
    800175aa:	00251593          	slli	a1,a0,0x2
    800175ae:	6642                	ld	a2,16(sp)
    800175b0:	95b2                	add	a1,a1,a2
    800175b2:	66e2                	ld	a3,24(sp)
    800175b4:	c9d4                	sw	a3,20(a1)
    800175b6:	09a8                	addi	a0,sp,216
        guard.lh.len += 1;
    800175b8:	fffec097          	auipc	ra,0xfffec
    800175bc:	404080e7          	jalr	1028(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    800175c0:	e42a                	sd	a0,8(sp)
    800175c2:	a009                	j	800175c4 <.LBB3_64+0x7c>
    800175c4:	6522                	ld	a0,8(sp)
    800175c6:	01056583          	lwu	a1,16(a0)
    800175ca:	0585                	addi	a1,a1,1
    800175cc:	02059613          	slli	a2,a1,0x20
    800175d0:	9201                	srli	a2,a2,0x20
    800175d2:	e02e                	sd	a1,0(sp)
    800175d4:	0cb61f63          	bne	a2,a1,800176b2 <.LBB3_75>
    800175d8:	a009                	j	800175da <.LBB3_64+0x92>
    800175da:	6502                	ld	a0,0(sp)
    800175dc:	65a2                	ld	a1,8(sp)
    800175de:	c988                	sw	a0,16(a1)
        drop(guard);
    800175e0:	656e                	ld	a0,216(sp)
    800175e2:	ffff6097          	auipc	ra,0xffff6
    800175e6:	346080e7          	jalr	838(ra) # 8000d928 <_ZN4core3mem4drop17h5cfedcef037f9974E>
    800175ea:	a009                	j	800175ec <.LBB3_64+0xa4>
        drop(buf);
    800175ec:	652e                	ld	a0,200(sp)
    800175ee:	710c                	ld	a1,32(a0)
    800175f0:	eaae                	sd	a1,336(sp)
    800175f2:	6d0c                	ld	a1,24(a0)
    800175f4:	e6ae                	sd	a1,328(sp)
    800175f6:	690c                	ld	a1,16(a0)
    800175f8:	e2ae                	sd	a1,320(sp)
    800175fa:	650c                	ld	a1,8(a0)
    800175fc:	fe2e                	sd	a1,312(sp)
    800175fe:	610c                	ld	a1,0(a0)
    80017600:	fa2e                	sd	a1,304(sp)
    80017602:	1a08                	addi	a0,sp,304
    80017604:	ffff6097          	auipc	ra,0xffff6
    80017608:	38e080e7          	jalr	910(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001760c:	a009                	j	8001760e <.LBB3_64+0xc6>
    }
    8001760e:	a009                	j	80017610 <.LBB3_64+0xc8>
    80017610:	70f6                	ld	ra,376(sp)
    80017612:	6119                	addi	sp,sp,384
    80017614:	8082                	ret

0000000080017616 <.LBB3_65>:
        if (guard.lh.len+1) as usize >= LOGSIZE || guard.lh.len+1 >= guard.size {
    80017616:	00011517          	auipc	a0,0x11
    8001761a:	82a50513          	addi	a0,a0,-2006 # 80027e40 <str.0>

000000008001761e <.LBB3_66>:
    8001761e:	00011617          	auipc	a2,0x11
    80017622:	8ba60613          	addi	a2,a2,-1862 # 80027ed8 <.L__unnamed_14>
    80017626:	45f1                	li	a1,28
    80017628:	00009097          	auipc	ra,0x9
    8001762c:	6a2080e7          	jalr	1698(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080017632 <.LBB3_67>:
    80017632:	00011517          	auipc	a0,0x11
    80017636:	80e50513          	addi	a0,a0,-2034 # 80027e40 <str.0>

000000008001763a <.LBB3_68>:
    8001763a:	00011617          	auipc	a2,0x11
    8001763e:	8b660613          	addi	a2,a2,-1866 # 80027ef0 <.L__unnamed_15>
    80017642:	45f1                	li	a1,28
    80017644:	00009097          	auipc	ra,0x9
    80017648:	686080e7          	jalr	1670(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001764e <.LBB3_69>:
            if guard.lh.blocknos[i as usize] == buf.read_blockno() {
    8001764e:	00011617          	auipc	a2,0x11
    80017652:	94260613          	addi	a2,a2,-1726 # 80027f90 <.L__unnamed_16>
    80017656:	45f5                	li	a1,29
    80017658:	7506                	ld	a0,96(sp)
    8001765a:	00009097          	auipc	ra,0x9
    8001765e:	69c080e7          	jalr	1692(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080017664 <.LBB3_70>:
        if (guard.lh.len+2) as usize >= LOGSIZE || guard.lh.len+2 >= guard.size {
    80017664:	00010517          	auipc	a0,0x10
    80017668:	7dc50513          	addi	a0,a0,2012 # 80027e40 <str.0>

000000008001766c <.LBB3_71>:
    8001766c:	00011617          	auipc	a2,0x11
    80017670:	93c60613          	addi	a2,a2,-1732 # 80027fa8 <.L__unnamed_17>
    80017674:	45f1                	li	a1,28
    80017676:	00009097          	auipc	ra,0x9
    8001767a:	654080e7          	jalr	1620(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080017680 <.LBB3_72>:
    80017680:	00010517          	auipc	a0,0x10
    80017684:	7c050513          	addi	a0,a0,1984 # 80027e40 <str.0>

0000000080017688 <.LBB3_73>:
    80017688:	00011617          	auipc	a2,0x11
    8001768c:	93860613          	addi	a2,a2,-1736 # 80027fc0 <.L__unnamed_18>
    80017690:	45f1                	li	a1,28
    80017692:	00009097          	auipc	ra,0x9
    80017696:	638080e7          	jalr	1592(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001769c <.LBB3_74>:
        guard.lh.blocknos[len] = buf.read_blockno();
    8001769c:	00011617          	auipc	a2,0x11
    800176a0:	98460613          	addi	a2,a2,-1660 # 80028020 <.L__unnamed_19>
    800176a4:	45f5                	li	a1,29
    800176a6:	7502                	ld	a0,32(sp)
    800176a8:	00009097          	auipc	ra,0x9
    800176ac:	64e080e7          	jalr	1614(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800176b2 <.LBB3_75>:
        guard.lh.len += 1;
    800176b2:	00010517          	auipc	a0,0x10
    800176b6:	78e50513          	addi	a0,a0,1934 # 80027e40 <str.0>

00000000800176ba <.LBB3_76>:
    800176ba:	00011617          	auipc	a2,0x11
    800176be:	97e60613          	addi	a2,a2,-1666 # 80028038 <.L__unnamed_20>
    800176c2:	45f1                	li	a1,28
    800176c4:	00009097          	auipc	ra,0x9
    800176c8:	606080e7          	jalr	1542(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E:

00000000800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>:

    /// It should be called at the end of file system call.
    /// It will commit the log if this is the last outstanding op.
    pub fn end_op(&self) {
    800176ce:	7171                	addi	sp,sp,-176
    800176d0:	f506                	sd	ra,168(sp)
    800176d2:	e92a                	sd	a0,144(sp)
    800176d4:	4581                	li	a1,0
        let mut log_ptr: *mut Log = ptr::null_mut();
    800176d6:	fcae                	sd	a1,120(sp)
    800176d8:	f4aa                	sd	a0,104(sp)
    800176da:	a009                	j	800176dc <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E+0xe>

        let mut guard = self.acquire();
    800176dc:	7526                	ld	a0,104(sp)
    800176de:	fffeb097          	auipc	ra,0xfffeb
    800176e2:	aca080e7          	jalr	-1334(ra) # 800021a8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE>
    800176e6:	e12a                	sd	a0,128(sp)
    800176e8:	a009                	j	800176ea <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E+0x1c>
    800176ea:	0108                	addi	a0,sp,128
        guard.outstanding -= 1;
    800176ec:	fffec097          	auipc	ra,0xfffec
    800176f0:	2d0080e7          	jalr	720(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    800176f4:	f0aa                	sd	a0,96(sp)
    800176f6:	a009                	j	800176f8 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E+0x2a>
    800176f8:	7506                	ld	a0,96(sp)
    800176fa:	00c56583          	lwu	a1,12(a0)
    800176fe:	15fd                	addi	a1,a1,-1
    80017700:	02059613          	slli	a2,a1,0x20
    80017704:	9201                	srli	a2,a2,0x20
    80017706:	ecae                	sd	a1,88(sp)
    80017708:	16b61263          	bne	a2,a1,8001786c <.LBB4_35>
    8001770c:	a009                	j	8001770e <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E+0x40>
    8001770e:	6566                	ld	a0,88(sp)
    80017710:	7586                	ld	a1,96(sp)
    80017712:	c5c8                	sw	a0,12(a1)
    80017714:	0108                	addi	a0,sp,128
        if guard.committing {
    80017716:	fffec097          	auipc	ra,0xfffec
    8001771a:	168080e7          	jalr	360(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    8001771e:	e8aa                	sd	a0,80(sp)
    80017720:	a009                	j	80017722 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E+0x54>
    80017722:	6546                	ld	a0,80(sp)
    80017724:	08854583          	lbu	a1,136(a0)
    80017728:	8985                	andi	a1,a1,1
    8001772a:	4601                	li	a2,0
    8001772c:	02c58263          	beq	a1,a2,80017750 <.LBB4_31+0x16>
    80017730:	a009                	j	80017732 <.LBB4_30>

0000000080017732 <.LBB4_30>:
            // it is not allowed to start a fs op while the log is commiting
            panic!("log: end fs op while the log is committing");
    80017732:	00011517          	auipc	a0,0x11
    80017736:	95f50513          	addi	a0,a0,-1697 # 80028091 <.L__unnamed_21>

000000008001773a <.LBB4_31>:
    8001773a:	00011617          	auipc	a2,0x11
    8001773e:	98660613          	addi	a2,a2,-1658 # 800280c0 <.L__unnamed_22>
    80017742:	02a00593          	li	a1,42
    80017746:	00009097          	auipc	ra,0x9
    8001774a:	584080e7          	jalr	1412(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001774e:	0000                	unimp
    80017750:	0108                	addi	a0,sp,128
        }
        if guard.outstanding == 0 {
    80017752:	fffec097          	auipc	ra,0xfffec
    80017756:	12c080e7          	jalr	300(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    8001775a:	e4aa                	sd	a0,72(sp)
    8001775c:	a009                	j	8001775e <.LBB4_31+0x24>
    8001775e:	6526                	ld	a0,72(sp)
    80017760:	454c                	lw	a1,12(a0)
    80017762:	4601                	li	a2,0
    80017764:	00c59a63          	bne	a1,a2,80017778 <.LBB4_31+0x3e>
    80017768:	a009                	j	8001776a <.LBB4_31+0x30>
    8001776a:	0108                	addi	a0,sp,128
            guard.committing = true;
    8001776c:	fffec097          	auipc	ra,0xfffec
    80017770:	250080e7          	jalr	592(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    80017774:	e0aa                	sd	a0,64(sp)
    80017776:	a801                	j	80017786 <.LBB4_31+0x4c>
    80017778:	0108                	addi	a0,sp,128
            log_ptr = guard.deref_mut() as *mut Log;
        } else {
            let channel = guard.deref() as *const Log as usize;
    8001777a:	fffec097          	auipc	ra,0xfffec
    8001777e:	104080e7          	jalr	260(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    80017782:	fc2a                	sd	a0,56(sp)
    80017784:	a839                	j	800177a2 <.LBB4_31+0x68>
    80017786:	4505                	li	a0,1
            guard.committing = true;
    80017788:	6586                	ld	a1,64(sp)
    8001778a:	08a58423          	sb	a0,136(a1)
    8001778e:	0108                	addi	a0,sp,128
            log_ptr = guard.deref_mut() as *mut Log;
    80017790:	fffec097          	auipc	ra,0xfffec
    80017794:	22c080e7          	jalr	556(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    80017798:	f82a                	sd	a0,48(sp)
    8001779a:	a009                	j	8001779c <.LBB4_31+0x62>
    8001779c:	7542                	ld	a0,48(sp)
    8001779e:	fcaa                	sd	a0,120(sp)
        if guard.outstanding == 0 {
    800177a0:	a831                	j	800177bc <.LBB4_32+0x16>
            let channel = guard.deref() as *const Log as usize;
    800177a2:	7562                	ld	a0,56(sp)
    800177a4:	ed2a                	sd	a0,152(sp)

00000000800177a6 <.LBB4_32>:
            unsafe { PROC_MANAGER.wake_up(channel); }
    800177a6:	00044517          	auipc	a0,0x44
    800177aa:	75a50513          	addi	a0,a0,1882 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    800177ae:	75e2                	ld	a1,56(sp)
    800177b0:	00005097          	auipc	ra,0x5
    800177b4:	4ec080e7          	jalr	1260(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    800177b8:	a009                	j	800177ba <.LBB4_32+0x14>
        if guard.outstanding == 0 {
    800177ba:	a009                	j	800177bc <.LBB4_32+0x16>
        }
        drop(guard);
    800177bc:	650a                	ld	a0,128(sp)
    800177be:	ffff6097          	auipc	ra,0xffff6
    800177c2:	16a080e7          	jalr	362(ra) # 8000d928 <_ZN4core3mem4drop17h5cfedcef037f9974E>
    800177c6:	a009                	j	800177c8 <.LBB4_32+0x22>

        if !log_ptr.is_null() {
    800177c8:	7566                	ld	a0,120(sp)
    800177ca:	ffff0097          	auipc	ra,0xffff0
    800177ce:	0da080e7          	jalr	218(ra) # 800078a4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h001cae8077e6fec4E>
    800177d2:	f42a                	sd	a0,40(sp)
    800177d4:	a009                	j	800177d6 <.LBB4_32+0x30>
    800177d6:	7522                	ld	a0,40(sp)
    800177d8:	e909                	bnez	a0,800177ea <.LBB4_32+0x44>
    800177da:	a009                	j	800177dc <.LBB4_32+0x36>
            // SAFETY: Call commit without holding any lock.
            //        And the committing flag protects the log op.
            unsafe { log_ptr.as_mut().unwrap().commit(); }
    800177dc:	7566                	ld	a0,120(sp)
    800177de:	ffff0097          	auipc	ra,0xffff0
    800177e2:	094080e7          	jalr	148(ra) # 80007872 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h8174cc88712737b7E>
    800177e6:	f02a                	sd	a0,32(sp)
    800177e8:	a011                	j	800177ec <.LBB4_33>
        if !log_ptr.is_null() {
    800177ea:	a8b5                	j	80017866 <.LBB4_34+0x22>

00000000800177ec <.LBB4_33>:
            unsafe { log_ptr.as_mut().unwrap().commit(); }
    800177ec:	00011597          	auipc	a1,0x11
    800177f0:	8ec58593          	addi	a1,a1,-1812 # 800280d8 <.L__unnamed_23>
    800177f4:	7502                	ld	a0,32(sp)
    800177f6:	00001097          	auipc	ra,0x1
    800177fa:	6a2080e7          	jalr	1698(ra) # 80018e98 <_ZN4core6option15Option$LT$T$GT$6unwrap17hf05086444e17f716E>
    800177fe:	ec2a                	sd	a0,24(sp)
    80017800:	a009                	j	80017802 <.LBB4_33+0x16>
    80017802:	6562                	ld	a0,24(sp)
    80017804:	ffffd097          	auipc	ra,0xffffd
    80017808:	cbc080e7          	jalr	-836(ra) # 800144c0 <_ZN6kernel2fs3log3Log6commit17h25ad975ed502fb03E>
    8001780c:	a009                	j	8001780e <.LBB4_33+0x22>
            let mut guard = self.acquire();
    8001780e:	7526                	ld	a0,104(sp)
    80017810:	fffeb097          	auipc	ra,0xfffeb
    80017814:	998080e7          	jalr	-1640(ra) # 800021a8 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h3ed0a9095f9c2c3fE>
    80017818:	e52a                	sd	a0,136(sp)
    8001781a:	a009                	j	8001781c <.LBB4_33+0x30>
    8001781c:	0128                	addi	a0,sp,136
            guard.committing = false;
    8001781e:	fffec097          	auipc	ra,0xfffec
    80017822:	19e080e7          	jalr	414(ra) # 800039bc <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c0cd98429372945E>
    80017826:	e82a                	sd	a0,16(sp)
    80017828:	a009                	j	8001782a <.LBB4_33+0x3e>
    8001782a:	4501                	li	a0,0
    8001782c:	65c2                	ld	a1,16(sp)
    8001782e:	08a58423          	sb	a0,136(a1)
    80017832:	0128                	addi	a0,sp,136
            let channel = guard.deref() as *const Log as usize;
    80017834:	fffec097          	auipc	ra,0xfffec
    80017838:	04a080e7          	jalr	74(ra) # 8000387e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h55c69dd1e756b177E>
    8001783c:	e42a                	sd	a0,8(sp)
    8001783e:	a009                	j	80017840 <.LBB4_33+0x54>
    80017840:	6522                	ld	a0,8(sp)
    80017842:	f12a                	sd	a0,160(sp)

0000000080017844 <.LBB4_34>:
            unsafe { PROC_MANAGER.wake_up(channel); }
    80017844:	00044517          	auipc	a0,0x44
    80017848:	6bc50513          	addi	a0,a0,1724 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8001784c:	65a2                	ld	a1,8(sp)
    8001784e:	00005097          	auipc	ra,0x5
    80017852:	44e080e7          	jalr	1102(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    80017856:	a009                	j	80017858 <.LBB4_34+0x14>
            drop(guard);
    80017858:	652a                	ld	a0,136(sp)
    8001785a:	ffff6097          	auipc	ra,0xffff6
    8001785e:	0ce080e7          	jalr	206(ra) # 8000d928 <_ZN4core3mem4drop17h5cfedcef037f9974E>
    80017862:	a009                	j	80017864 <.LBB4_34+0x20>
        if !log_ptr.is_null() {
    80017864:	a009                	j	80017866 <.LBB4_34+0x22>
        }
    }
    80017866:	70aa                	ld	ra,168(sp)
    80017868:	614d                	addi	sp,sp,176
    8001786a:	8082                	ret

000000008001786c <.LBB4_35>:
        guard.outstanding -= 1;
    8001786c:	00011517          	auipc	a0,0x11
    80017870:	80450513          	addi	a0,a0,-2044 # 80028070 <str.2>

0000000080017874 <.LBB4_36>:
    80017874:	00010617          	auipc	a2,0x10
    80017878:	7dc60613          	addi	a2,a2,2012 # 80028050 <.L__unnamed_24>
    8001787c:	02100593          	li	a1,33
    80017880:	00009097          	auipc	ra,0x9
    80017884:	44a080e7          	jalr	1098(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E:

000000008001788a <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E>:
    pub fn rw(&self, buf: &mut Buf<'_>, writing: bool) {
    8001788a:	c1010113          	addi	sp,sp,-1008
    8001788e:	3e113423          	sd	ra,1000(sp)
    80017892:	86b2                	mv	a3,a2
    80017894:	38a13423          	sd	a0,904(sp)
    80017898:	38b13823          	sd	a1,912(sp)
    8001789c:	38c10fa3          	sb	a2,927(sp)
        let mut guard = self.acquire();
    800178a0:	2aa13823          	sd	a0,688(sp)
    800178a4:	2ab13423          	sd	a1,680(sp)
    800178a8:	2ad13023          	sd	a3,672(sp)
    800178ac:	fffeb097          	auipc	ra,0xfffeb
    800178b0:	d7a080e7          	jalr	-646(ra) # 80002626 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE>
    800178b4:	2aa13c23          	sd	a0,696(sp)
    800178b8:	a009                	j	800178ba <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E+0x30>
        let buf_raw_data = buf.raw_data_mut();
    800178ba:	2a813503          	ld	a0,680(sp)
    800178be:	fffea097          	auipc	ra,0xfffea
    800178c2:	0e0080e7          	jalr	224(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    800178c6:	85aa                	mv	a1,a0
    800178c8:	3aa13023          	sd	a0,928(sp)
    800178cc:	28b13c23          	sd	a1,664(sp)
    800178d0:	a009                	j	800178d2 <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E+0x48>
    800178d2:	4501                	li	a0,0
        let mut idx: [usize; 3] = [0; 3];
    800178d4:	2ca13823          	sd	a0,720(sp)
    800178d8:	2ca13423          	sd	a0,712(sp)
    800178dc:	2ca13023          	sd	a0,704(sp)
        loop {
    800178e0:	a009                	j	800178e2 <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E+0x58>
    800178e2:	1d28                	addi	a0,sp,696
            if guard.alloc3_desc(&mut idx) {
    800178e4:	fffec097          	auipc	ra,0xfffec
    800178e8:	196080e7          	jalr	406(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    800178ec:	28a13823          	sd	a0,656(sp)
    800178f0:	a009                	j	800178f2 <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E+0x68>
    800178f2:	058c                	addi	a1,sp,704
    800178f4:	29013503          	ld	a0,656(sp)
    800178f8:	ffff7097          	auipc	ra,0xffff7
    800178fc:	9be080e7          	jalr	-1602(ra) # 8000e2b6 <_ZN6kernel6driver11virtio_disk4Disk11alloc3_desc17h73a96bf26b3528c9E>
    80017900:	28a13423          	sd	a0,648(sp)
    80017904:	a009                	j	80017906 <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E+0x7c>
    80017906:	4501                	li	a0,0
    80017908:	28813583          	ld	a1,648(sp)
    8001790c:	00a58b63          	beq	a1,a0,80017922 <.LBB5_120>
    80017910:	a009                	j	80017912 <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E+0x88>
    80017912:	1d28                	addi	a0,sp,696
        let buf0 = &mut guard.ops[idx[0]];
    80017914:	fffec097          	auipc	ra,0xfffec
    80017918:	166080e7          	jalr	358(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    8001791c:	28a13023          	sd	a0,640(sp)
    80017920:	a8a5                	j	80017998 <.LBB5_121+0x60>

0000000080017922 <.LBB5_120>:
                    CPU_MANAGER.myproc().unwrap().sleep(&guard.free[0] as *const bool as usize, guard);
    80017922:	00057517          	auipc	a0,0x57
    80017926:	6de50513          	addi	a0,a0,1758 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001792a:	00006097          	auipc	ra,0x6
    8001792e:	e0e080e7          	jalr	-498(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    80017932:	26a13c23          	sd	a0,632(sp)
    80017936:	a009                	j	80017938 <.LBB5_121>

0000000080017938 <.LBB5_121>:
    80017938:	00011597          	auipc	a1,0x11
    8001793c:	b3058593          	addi	a1,a1,-1232 # 80028468 <.L__unnamed_25>
    80017940:	27813503          	ld	a0,632(sp)
    80017944:	00001097          	auipc	ra,0x1
    80017948:	224080e7          	jalr	548(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    8001794c:	26a13823          	sd	a0,624(sp)
    80017950:	a009                	j	80017952 <.LBB5_121+0x1a>
    80017952:	1d28                	addi	a0,sp,696
    80017954:	fffec097          	auipc	ra,0xfffec
    80017958:	f68080e7          	jalr	-152(ra) # 800038bc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7da9d3aa29c3e8d2E>
    8001795c:	26a13423          	sd	a0,616(sp)
    80017960:	a009                	j	80017962 <.LBB5_121+0x2a>
    80017962:	6509                	lui	a0,0x2
    80017964:	26813583          	ld	a1,616(sp)
    80017968:	95aa                	add	a1,a1,a0
    8001796a:	2b813603          	ld	a2,696(sp)
    8001796e:	27013503          	ld	a0,624(sp)
    80017972:	fffee097          	auipc	ra,0xfffee
    80017976:	6c6080e7          	jalr	1734(ra) # 80006038 <_ZN6kernel7process7process7Process5sleep17ha58964a638b57238E>
    8001797a:	a009                	j	8001797c <.LBB5_121+0x44>
                guard = self.acquire();
    8001797c:	2b013503          	ld	a0,688(sp)
    80017980:	fffeb097          	auipc	ra,0xfffeb
    80017984:	ca6080e7          	jalr	-858(ra) # 80002626 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE>
    80017988:	26a13023          	sd	a0,608(sp)
    8001798c:	a009                	j	8001798e <.LBB5_121+0x56>
    8001798e:	26013503          	ld	a0,608(sp)
    80017992:	2aa13c23          	sd	a0,696(sp)
        loop {
    80017996:	b7b1                	j	800178e2 <_ZN6kernel6driver11virtio_disk91_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..driver..virtio_disk..Disk$GT$$GT$2rw17h8cfa7f5e66c1e3a1E+0x58>
        let buf0 = &mut guard.ops[idx[0]];
    80017998:	2c013503          	ld	a0,704(sp)
    8001799c:	459d                	li	a1,7
    8001799e:	24a13c23          	sd	a0,600(sp)
    800179a2:	74a5e263          	bltu	a1,a0,800180e6 <.LBB5_134>
    800179a6:	a009                	j	800179a8 <.LBB5_121+0x70>
    800179a8:	25813503          	ld	a0,600(sp)
    800179ac:	00451593          	slli	a1,a0,0x4
    800179b0:	28013603          	ld	a2,640(sp)
    800179b4:	95b2                	add	a1,a1,a2
    800179b6:	6689                	lui	a3,0x2
    800179b8:	0d06869b          	addiw	a3,a3,208
    800179bc:	95b6                	add	a1,a1,a3
    800179be:	3ab13423          	sd	a1,936(sp)
    800179c2:	4681                	li	a3,0
        buf0.type_ = if writing { VIRTIO_BLK_T_OUT } else { VIRTIO_BLK_T_IN };
    800179c4:	2a013703          	ld	a4,672(sp)
    800179c8:	24b13823          	sd	a1,592(sp)
    800179cc:	00d70763          	beq	a4,a3,800179da <.LBB5_121+0xa2>
    800179d0:	a009                	j	800179d2 <.LBB5_121+0x9a>
    800179d2:	4505                	li	a0,1
    800179d4:	2ca12c23          	sw	a0,728(sp)
    800179d8:	a029                	j	800179e2 <.LBB5_121+0xaa>
    800179da:	4501                	li	a0,0
    800179dc:	2ca12c23          	sw	a0,728(sp)
    800179e0:	a009                	j	800179e2 <.LBB5_121+0xaa>
    800179e2:	2d812503          	lw	a0,728(sp)
    800179e6:	25013583          	ld	a1,592(sp)
    800179ea:	c188                	sw	a0,0(a1)
    800179ec:	4501                	li	a0,0
        buf0.reserved = 0;
    800179ee:	c1c8                	sw	a0,4(a1)
        buf0.sector = (buf.read_blockno() as usize * (BSIZE / 512)) as u64;
    800179f0:	2a813503          	ld	a0,680(sp)
    800179f4:	fffea097          	auipc	ra,0xfffea
    800179f8:	f36080e7          	jalr	-202(ra) # 8000192a <_ZN6kernel2fs3bio3Buf12read_blockno17h273c260285cdf6bdE>
    800179fc:	24a13423          	sd	a0,584(sp)
    80017a00:	a009                	j	80017a02 <.LBB5_121+0xca>
    80017a02:	24813503          	ld	a0,584(sp)
    80017a06:	02051593          	slli	a1,a0,0x20
    80017a0a:	9181                	srli	a1,a1,0x20
    80017a0c:	95ae                	add	a1,a1,a1
    80017a0e:	4601                	li	a2,0
    80017a10:	24b13023          	sd	a1,576(sp)
    80017a14:	6e061563          	bnez	a2,800180fe <.LBB5_135>
    80017a18:	a009                	j	80017a1a <.LBB5_121+0xe2>
    80017a1a:	24013503          	ld	a0,576(sp)
    80017a1e:	25013583          	ld	a1,592(sp)
    80017a22:	e588                	sd	a0,8(a1)
    80017a24:	1d28                	addi	a0,sp,696
        guard.desc[idx[0]].addr = buf0 as *mut _ as u64;
    80017a26:	fffec097          	auipc	ra,0xfffec
    80017a2a:	054080e7          	jalr	84(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017a2e:	22a13c23          	sd	a0,568(sp)
    80017a32:	a009                	j	80017a34 <.LBB5_121+0xfc>
    80017a34:	2c013503          	ld	a0,704(sp)
    80017a38:	459d                	li	a1,7
    80017a3a:	22a13823          	sd	a0,560(sp)
    80017a3e:	6ca5ef63          	bltu	a1,a0,8001811c <.LBB5_137>
    80017a42:	a009                	j	80017a44 <.LBB5_121+0x10c>
    80017a44:	23013503          	ld	a0,560(sp)
    80017a48:	00451593          	slli	a1,a0,0x4
    80017a4c:	23813603          	ld	a2,568(sp)
    80017a50:	95b2                	add	a1,a1,a2
    80017a52:	25013683          	ld	a3,592(sp)
    80017a56:	e194                	sd	a3,0(a1)
        guard.desc[idx[0]].len = core::mem::size_of::<VirtIOBlkReq>().try_into().unwrap();
    80017a58:	a009                	j	80017a5a <.LBB5_121+0x122>
    80017a5a:	4541                	li	a0,16
    80017a5c:	00001097          	auipc	ra,0x1
    80017a60:	7ec080e7          	jalr	2028(ra) # 80019248 <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h4c0c019cde2d6c30E>
    80017a64:	22a13423          	sd	a0,552(sp)
    80017a68:	22b13023          	sd	a1,544(sp)
    80017a6c:	a009                	j	80017a6e <.LBB5_122>

0000000080017a6e <.LBB5_122>:
    80017a6e:	00010617          	auipc	a2,0x10
    80017a72:	6ea60613          	addi	a2,a2,1770 # 80028158 <.L__unnamed_26>
    80017a76:	22813503          	ld	a0,552(sp)
    80017a7a:	22013583          	ld	a1,544(sp)
    80017a7e:	ffff5097          	auipc	ra,0xffff5
    80017a82:	26e080e7          	jalr	622(ra) # 8000ccec <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h33f778f1365d54f3E>
    80017a86:	20a13c23          	sd	a0,536(sp)
    80017a8a:	a009                	j	80017a8c <.LBB5_122+0x1e>
    80017a8c:	1d28                	addi	a0,sp,696
    80017a8e:	fffec097          	auipc	ra,0xfffec
    80017a92:	fec080e7          	jalr	-20(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017a96:	20a13823          	sd	a0,528(sp)
    80017a9a:	a009                	j	80017a9c <.LBB5_122+0x2e>
    80017a9c:	2c013503          	ld	a0,704(sp)
    80017aa0:	459d                	li	a1,7
    80017aa2:	20a13423          	sd	a0,520(sp)
    80017aa6:	68a5e763          	bltu	a1,a0,80018134 <.LBB5_138>
    80017aaa:	a009                	j	80017aac <.LBB5_122+0x3e>
    80017aac:	20813503          	ld	a0,520(sp)
    80017ab0:	00451593          	slli	a1,a0,0x4
    80017ab4:	21013603          	ld	a2,528(sp)
    80017ab8:	95b2                	add	a1,a1,a2
    80017aba:	21813683          	ld	a3,536(sp)
    80017abe:	c594                	sw	a3,8(a1)
    80017ac0:	1d28                	addi	a0,sp,696
        guard.desc[idx[0]].flags = VRING_DESC_F_NEXT;
    80017ac2:	fffec097          	auipc	ra,0xfffec
    80017ac6:	fb8080e7          	jalr	-72(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017aca:	20a13023          	sd	a0,512(sp)
    80017ace:	a009                	j	80017ad0 <.LBB5_122+0x62>
    80017ad0:	2c013503          	ld	a0,704(sp)
    80017ad4:	459d                	li	a1,7
    80017ad6:	ffaa                	sd	a0,504(sp)
    80017ad8:	66a5ea63          	bltu	a1,a0,8001814c <.LBB5_139>
    80017adc:	a009                	j	80017ade <.LBB5_122+0x70>
    80017ade:	757e                	ld	a0,504(sp)
    80017ae0:	00451593          	slli	a1,a0,0x4
    80017ae4:	20013603          	ld	a2,512(sp)
    80017ae8:	95b2                	add	a1,a1,a2
    80017aea:	4685                	li	a3,1
    80017aec:	00d59623          	sh	a3,12(a1)
        guard.desc[idx[0]].next = idx[1].try_into().unwrap();
    80017af0:	2c813503          	ld	a0,712(sp)
    80017af4:	00001097          	auipc	ra,0x1
    80017af8:	736080e7          	jalr	1846(ra) # 8001922a <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h25067841c822c84bE>
    80017afc:	fbaa                	sd	a0,496(sp)
    80017afe:	f7ae                	sd	a1,488(sp)
    80017b00:	a009                	j	80017b02 <.LBB5_123>

0000000080017b02 <.LBB5_123>:
    80017b02:	00010617          	auipc	a2,0x10
    80017b06:	69e60613          	addi	a2,a2,1694 # 800281a0 <.L__unnamed_27>
    80017b0a:	755e                	ld	a0,496(sp)
    80017b0c:	75be                	ld	a1,488(sp)
    80017b0e:	ffff5097          	auipc	ra,0xffff5
    80017b12:	25e080e7          	jalr	606(ra) # 8000cd6c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbdb77aaba0d52dc4E>
    80017b16:	f3aa                	sd	a0,480(sp)
    80017b18:	a009                	j	80017b1a <.LBB5_123+0x18>
    80017b1a:	1d28                	addi	a0,sp,696
    80017b1c:	fffec097          	auipc	ra,0xfffec
    80017b20:	f5e080e7          	jalr	-162(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017b24:	efaa                	sd	a0,472(sp)
    80017b26:	a009                	j	80017b28 <.LBB5_123+0x26>
    80017b28:	2c013503          	ld	a0,704(sp)
    80017b2c:	459d                	li	a1,7
    80017b2e:	ebaa                	sd	a0,464(sp)
    80017b30:	62a5e963          	bltu	a1,a0,80018162 <.LBB5_140>
    80017b34:	a009                	j	80017b36 <.LBB5_123+0x34>
    80017b36:	655e                	ld	a0,464(sp)
    80017b38:	00451593          	slli	a1,a0,0x4
    80017b3c:	667e                	ld	a2,472(sp)
    80017b3e:	95b2                	add	a1,a1,a2
    80017b40:	769e                	ld	a3,480(sp)
    80017b42:	00d59723          	sh	a3,14(a1)
    80017b46:	1d28                	addi	a0,sp,696
        guard.desc[idx[1]].addr = buf_raw_data as u64;
    80017b48:	fffec097          	auipc	ra,0xfffec
    80017b4c:	f32080e7          	jalr	-206(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017b50:	e7aa                	sd	a0,456(sp)
    80017b52:	a009                	j	80017b54 <.LBB5_123+0x52>
    80017b54:	2c813503          	ld	a0,712(sp)
    80017b58:	459d                	li	a1,7
    80017b5a:	e3aa                	sd	a0,448(sp)
    80017b5c:	60a5ee63          	bltu	a1,a0,80018178 <.LBB5_141>
    80017b60:	a009                	j	80017b62 <.LBB5_123+0x60>
    80017b62:	651e                	ld	a0,448(sp)
    80017b64:	00451593          	slli	a1,a0,0x4
    80017b68:	663e                	ld	a2,456(sp)
    80017b6a:	95b2                	add	a1,a1,a2
    80017b6c:	29813683          	ld	a3,664(sp)
    80017b70:	e194                	sd	a3,0(a1)
    80017b72:	40000513          	li	a0,1024
        guard.desc[idx[1]].len = BSIZE.try_into().unwrap();
    80017b76:	00001097          	auipc	ra,0x1
    80017b7a:	6d2080e7          	jalr	1746(ra) # 80019248 <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h4c0c019cde2d6c30E>
    80017b7e:	ff2a                	sd	a0,440(sp)
    80017b80:	fb2e                	sd	a1,432(sp)
    80017b82:	a009                	j	80017b84 <.LBB5_124>

0000000080017b84 <.LBB5_124>:
    80017b84:	00010617          	auipc	a2,0x10
    80017b88:	66460613          	addi	a2,a2,1636 # 800281e8 <.L__unnamed_28>
    80017b8c:	757a                	ld	a0,440(sp)
    80017b8e:	75da                	ld	a1,432(sp)
    80017b90:	ffff5097          	auipc	ra,0xffff5
    80017b94:	15c080e7          	jalr	348(ra) # 8000ccec <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h33f778f1365d54f3E>
    80017b98:	f72a                	sd	a0,424(sp)
    80017b9a:	a009                	j	80017b9c <.LBB5_124+0x18>
    80017b9c:	1d28                	addi	a0,sp,696
    80017b9e:	fffec097          	auipc	ra,0xfffec
    80017ba2:	edc080e7          	jalr	-292(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017ba6:	f32a                	sd	a0,416(sp)
    80017ba8:	a009                	j	80017baa <.LBB5_124+0x26>
    80017baa:	2c813503          	ld	a0,712(sp)
    80017bae:	459d                	li	a1,7
    80017bb0:	ef2a                	sd	a0,408(sp)
    80017bb2:	5ca5ee63          	bltu	a1,a0,8001818e <.LBB5_142>
    80017bb6:	a009                	j	80017bb8 <.LBB5_124+0x34>
    80017bb8:	657a                	ld	a0,408(sp)
    80017bba:	00451593          	slli	a1,a0,0x4
    80017bbe:	761a                	ld	a2,416(sp)
    80017bc0:	95b2                	add	a1,a1,a2
    80017bc2:	76ba                	ld	a3,424(sp)
    80017bc4:	c594                	sw	a3,8(a1)
    80017bc6:	4581                	li	a1,0
        guard.desc[idx[1]].flags = if writing { 0 } else { VRING_DESC_F_WRITE };
    80017bc8:	2a013703          	ld	a4,672(sp)
    80017bcc:	00b70763          	beq	a4,a1,80017bda <.LBB5_124+0x56>
    80017bd0:	a009                	j	80017bd2 <.LBB5_124+0x4e>
    80017bd2:	4501                	li	a0,0
    80017bd4:	2ca11f23          	sh	a0,734(sp)
    80017bd8:	a029                	j	80017be2 <.LBB5_124+0x5e>
    80017bda:	4509                	li	a0,2
    80017bdc:	2ca11f23          	sh	a0,734(sp)
    80017be0:	a009                	j	80017be2 <.LBB5_124+0x5e>
    80017be2:	1d28                	addi	a0,sp,696
    80017be4:	fffec097          	auipc	ra,0xfffec
    80017be8:	e96080e7          	jalr	-362(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017bec:	eb2a                	sd	a0,400(sp)
    80017bee:	a009                	j	80017bf0 <.LBB5_124+0x6c>
    80017bf0:	2c813503          	ld	a0,712(sp)
    80017bf4:	459d                	li	a1,7
    80017bf6:	e72a                	sd	a0,392(sp)
    80017bf8:	5aa5e663          	bltu	a1,a0,800181a4 <.LBB5_143>
    80017bfc:	a009                	j	80017bfe <.LBB5_124+0x7a>
    80017bfe:	653a                	ld	a0,392(sp)
    80017c00:	00451593          	slli	a1,a0,0x4
    80017c04:	665a                	ld	a2,400(sp)
    80017c06:	95b2                	add	a1,a1,a2
    80017c08:	2de11683          	lh	a3,734(sp)
    80017c0c:	00d59623          	sh	a3,12(a1)
    80017c10:	1d28                	addi	a0,sp,696
        guard.desc[idx[1]].flags |= VRING_DESC_F_NEXT;
    80017c12:	fffec097          	auipc	ra,0xfffec
    80017c16:	e68080e7          	jalr	-408(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017c1a:	e32a                	sd	a0,384(sp)
    80017c1c:	a009                	j	80017c1e <.LBB5_124+0x9a>
    80017c1e:	2c813503          	ld	a0,712(sp)
    80017c22:	459d                	li	a1,7
    80017c24:	feaa                	sd	a0,376(sp)
    80017c26:	58a5ea63          	bltu	a1,a0,800181ba <.LBB5_144>
    80017c2a:	a009                	j	80017c2c <.LBB5_124+0xa8>
    80017c2c:	7576                	ld	a0,376(sp)
    80017c2e:	00451593          	slli	a1,a0,0x4
    80017c32:	661a                	ld	a2,384(sp)
    80017c34:	95b2                	add	a1,a1,a2
    80017c36:	00c59683          	lh	a3,12(a1)
    80017c3a:	0016e693          	ori	a3,a3,1
    80017c3e:	00d59623          	sh	a3,12(a1)
        guard.desc[idx[1]].next = idx[2].try_into().unwrap();
    80017c42:	2d013503          	ld	a0,720(sp)
    80017c46:	00001097          	auipc	ra,0x1
    80017c4a:	5e4080e7          	jalr	1508(ra) # 8001922a <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h25067841c822c84bE>
    80017c4e:	faaa                	sd	a0,368(sp)
    80017c50:	f6ae                	sd	a1,360(sp)
    80017c52:	a009                	j	80017c54 <.LBB5_125>

0000000080017c54 <.LBB5_125>:
    80017c54:	00010617          	auipc	a2,0x10
    80017c58:	5f460613          	addi	a2,a2,1524 # 80028248 <.L__unnamed_29>
    80017c5c:	7556                	ld	a0,368(sp)
    80017c5e:	75b6                	ld	a1,360(sp)
    80017c60:	ffff5097          	auipc	ra,0xffff5
    80017c64:	10c080e7          	jalr	268(ra) # 8000cd6c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbdb77aaba0d52dc4E>
    80017c68:	f2aa                	sd	a0,352(sp)
    80017c6a:	a009                	j	80017c6c <.LBB5_125+0x18>
    80017c6c:	1d28                	addi	a0,sp,696
    80017c6e:	fffec097          	auipc	ra,0xfffec
    80017c72:	e0c080e7          	jalr	-500(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017c76:	eeaa                	sd	a0,344(sp)
    80017c78:	a009                	j	80017c7a <.LBB5_125+0x26>
    80017c7a:	2c813503          	ld	a0,712(sp)
    80017c7e:	459d                	li	a1,7
    80017c80:	eaaa                	sd	a0,336(sp)
    80017c82:	54a5e763          	bltu	a1,a0,800181d0 <.LBB5_145>
    80017c86:	a009                	j	80017c88 <.LBB5_125+0x34>
    80017c88:	6556                	ld	a0,336(sp)
    80017c8a:	00451593          	slli	a1,a0,0x4
    80017c8e:	6676                	ld	a2,344(sp)
    80017c90:	95b2                	add	a1,a1,a2
    80017c92:	7696                	ld	a3,352(sp)
    80017c94:	00d59723          	sh	a3,14(a1)
    80017c98:	1d28                	addi	a0,sp,696
        guard.info[idx[0]].status = 0xff;
    80017c9a:	fffec097          	auipc	ra,0xfffec
    80017c9e:	de0080e7          	jalr	-544(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017ca2:	e6aa                	sd	a0,328(sp)
    80017ca4:	a009                	j	80017ca6 <.LBB5_125+0x52>
    80017ca6:	2c013503          	ld	a0,704(sp)
    80017caa:	459d                	li	a1,7
    80017cac:	e2aa                	sd	a0,320(sp)
    80017cae:	52a5ec63          	bltu	a1,a0,800181e6 <.LBB5_146>
    80017cb2:	a009                	j	80017cb4 <.LBB5_125+0x60>
    80017cb4:	4561                	li	a0,24
    80017cb6:	6596                	ld	a1,320(sp)
    80017cb8:	02a58533          	mul	a0,a1,a0
    80017cbc:	6636                	ld	a2,328(sp)
    80017cbe:	9532                	add	a0,a0,a2
    80017cc0:	6689                	lui	a3,0x2
    80017cc2:	0206869b          	addiw	a3,a3,32
    80017cc6:	9536                	add	a0,a0,a3
    80017cc8:	0ff00693          	li	a3,255
    80017ccc:	00d50023          	sb	a3,0(a0) # 2000 <.Lline_table_start0+0x1b>
    80017cd0:	1d28                	addi	a0,sp,696
        guard.desc[idx[2]].addr = &mut guard.info[idx[0]].status as *mut _ as u64;
    80017cd2:	fffec097          	auipc	ra,0xfffec
    80017cd6:	da8080e7          	jalr	-600(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017cda:	fe2a                	sd	a0,312(sp)
    80017cdc:	a009                	j	80017cde <.LBB5_125+0x8a>
    80017cde:	2c013503          	ld	a0,704(sp)
    80017ce2:	459d                	li	a1,7
    80017ce4:	fa2a                	sd	a0,304(sp)
    80017ce6:	50a5eb63          	bltu	a1,a0,800181fc <.LBB5_147>
    80017cea:	a009                	j	80017cec <.LBB5_125+0x98>
    80017cec:	4561                	li	a0,24
    80017cee:	75d2                	ld	a1,304(sp)
    80017cf0:	02a58533          	mul	a0,a1,a0
    80017cf4:	7672                	ld	a2,312(sp)
    80017cf6:	9532                	add	a0,a0,a2
    80017cf8:	6689                	lui	a3,0x2
    80017cfa:	0206869b          	addiw	a3,a3,32
    80017cfe:	9536                	add	a0,a0,a3
    80017d00:	1d34                	addi	a3,sp,696
    80017d02:	f62a                	sd	a0,296(sp)
    80017d04:	8536                	mv	a0,a3
    80017d06:	fffec097          	auipc	ra,0xfffec
    80017d0a:	d74080e7          	jalr	-652(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017d0e:	f22a                	sd	a0,288(sp)
    80017d10:	a009                	j	80017d12 <.LBB5_125+0xbe>
    80017d12:	2d013503          	ld	a0,720(sp)
    80017d16:	459d                	li	a1,7
    80017d18:	ee2a                	sd	a0,280(sp)
    80017d1a:	4ea5ec63          	bltu	a1,a0,80018212 <.LBB5_148>
    80017d1e:	a009                	j	80017d20 <.LBB5_125+0xcc>
    80017d20:	6572                	ld	a0,280(sp)
    80017d22:	00451593          	slli	a1,a0,0x4
    80017d26:	7612                	ld	a2,288(sp)
    80017d28:	95b2                	add	a1,a1,a2
    80017d2a:	76b2                	ld	a3,296(sp)
    80017d2c:	e194                	sd	a3,0(a1)
    80017d2e:	1d28                	addi	a0,sp,696
        guard.desc[idx[2]].len = 1;
    80017d30:	fffec097          	auipc	ra,0xfffec
    80017d34:	d4a080e7          	jalr	-694(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017d38:	ea2a                	sd	a0,272(sp)
    80017d3a:	a009                	j	80017d3c <.LBB5_125+0xe8>
    80017d3c:	2d013503          	ld	a0,720(sp)
    80017d40:	459d                	li	a1,7
    80017d42:	e62a                	sd	a0,264(sp)
    80017d44:	4ea5e263          	bltu	a1,a0,80018228 <.LBB5_149>
    80017d48:	a009                	j	80017d4a <.LBB5_125+0xf6>
    80017d4a:	6532                	ld	a0,264(sp)
    80017d4c:	00451593          	slli	a1,a0,0x4
    80017d50:	6652                	ld	a2,272(sp)
    80017d52:	95b2                	add	a1,a1,a2
    80017d54:	4685                	li	a3,1
    80017d56:	c594                	sw	a3,8(a1)
    80017d58:	1d28                	addi	a0,sp,696
        guard.desc[idx[2]].flags = VRING_DESC_F_WRITE;
    80017d5a:	fffec097          	auipc	ra,0xfffec
    80017d5e:	d20080e7          	jalr	-736(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017d62:	e22a                	sd	a0,256(sp)
    80017d64:	a009                	j	80017d66 <.LBB5_125+0x112>
    80017d66:	2d013503          	ld	a0,720(sp)
    80017d6a:	459d                	li	a1,7
    80017d6c:	fdaa                	sd	a0,248(sp)
    80017d6e:	4ca5e863          	bltu	a1,a0,8001823e <.LBB5_150>
    80017d72:	a009                	j	80017d74 <.LBB5_125+0x120>
    80017d74:	756e                	ld	a0,248(sp)
    80017d76:	00451593          	slli	a1,a0,0x4
    80017d7a:	6612                	ld	a2,256(sp)
    80017d7c:	95b2                	add	a1,a1,a2
    80017d7e:	4689                	li	a3,2
    80017d80:	00d59623          	sh	a3,12(a1)
    80017d84:	1d28                	addi	a0,sp,696
        guard.desc[idx[2]].next = 0;
    80017d86:	fffec097          	auipc	ra,0xfffec
    80017d8a:	cf4080e7          	jalr	-780(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017d8e:	f9aa                	sd	a0,240(sp)
    80017d90:	a009                	j	80017d92 <.LBB5_125+0x13e>
    80017d92:	2d013503          	ld	a0,720(sp)
    80017d96:	459d                	li	a1,7
    80017d98:	f5aa                	sd	a0,232(sp)
    80017d9a:	4aa5ed63          	bltu	a1,a0,80018254 <.LBB5_151>
    80017d9e:	a009                	j	80017da0 <.LBB5_125+0x14c>
    80017da0:	752e                	ld	a0,232(sp)
    80017da2:	00451593          	slli	a1,a0,0x4
    80017da6:	764e                	ld	a2,240(sp)
    80017da8:	95b2                	add	a1,a1,a2
    80017daa:	4681                	li	a3,0
    80017dac:	00d59723          	sh	a3,14(a1)
    80017db0:	1d28                	addi	a0,sp,696
        guard.info[idx[0]].disk = true;
    80017db2:	fffec097          	auipc	ra,0xfffec
    80017db6:	cc8080e7          	jalr	-824(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017dba:	f1aa                	sd	a0,224(sp)
    80017dbc:	a009                	j	80017dbe <.LBB5_125+0x16a>
    80017dbe:	2c013503          	ld	a0,704(sp)
    80017dc2:	459d                	li	a1,7
    80017dc4:	edaa                	sd	a0,216(sp)
    80017dc6:	4aa5e263          	bltu	a1,a0,8001826a <.LBB5_152>
    80017dca:	a009                	j	80017dcc <.LBB5_125+0x178>
    80017dcc:	4561                	li	a0,24
    80017dce:	65ee                	ld	a1,216(sp)
    80017dd0:	02a58533          	mul	a0,a1,a0
    80017dd4:	760e                	ld	a2,224(sp)
    80017dd6:	9532                	add	a0,a0,a2
    80017dd8:	6689                	lui	a3,0x2
    80017dda:	0216869b          	addiw	a3,a3,33
    80017dde:	9536                	add	a0,a0,a3
    80017de0:	4685                	li	a3,1
    80017de2:	00d50023          	sb	a3,0(a0)
        guard.info[idx[0]].buf_channel = Some(buf_raw_data as usize);
    80017de6:	29813503          	ld	a0,664(sp)
    80017dea:	2ea13423          	sd	a0,744(sp)
    80017dee:	2ed13023          	sd	a3,736(sp)
    80017df2:	1d28                	addi	a0,sp,696
    80017df4:	fffec097          	auipc	ra,0xfffec
    80017df8:	c86080e7          	jalr	-890(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017dfc:	e9aa                	sd	a0,208(sp)
    80017dfe:	a009                	j	80017e00 <.LBB5_125+0x1ac>
    80017e00:	2c013503          	ld	a0,704(sp)
    80017e04:	459d                	li	a1,7
    80017e06:	e5aa                	sd	a0,200(sp)
    80017e08:	46a5ec63          	bltu	a1,a0,80018280 <.LBB5_153>
    80017e0c:	a009                	j	80017e0e <.LBB5_125+0x1ba>
    80017e0e:	4561                	li	a0,24
    80017e10:	65ae                	ld	a1,200(sp)
    80017e12:	02a58533          	mul	a0,a1,a0
    80017e16:	664e                	ld	a2,208(sp)
    80017e18:	9532                	add	a0,a0,a2
    80017e1a:	6689                	lui	a3,0x2
    80017e1c:	26c1                	addiw	a3,a3,16
    80017e1e:	9536                	add	a0,a0,a3
    80017e20:	2e013683          	ld	a3,736(sp)
    80017e24:	2e813703          	ld	a4,744(sp)
    80017e28:	e114                	sd	a3,0(a0)
    80017e2a:	e518                	sd	a4,8(a0)
    80017e2c:	1d28                	addi	a0,sp,696
            let i = guard.avail.idx as usize % NUM;
    80017e2e:	fffec097          	auipc	ra,0xfffec
    80017e32:	a8e080e7          	jalr	-1394(ra) # 800038bc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7da9d3aa29c3e8d2E>
    80017e36:	e1aa                	sd	a0,192(sp)
    80017e38:	a009                	j	80017e3a <.LBB5_125+0x1e6>
    80017e3a:	650e                	ld	a0,192(sp)
    80017e3c:	08255583          	lhu	a1,130(a0)
    80017e40:	899d                	andi	a1,a1,7
    80017e42:	3ab13823          	sd	a1,944(sp)
            guard.avail.ring[i] = idx[0].try_into().unwrap();
    80017e46:	2c013503          	ld	a0,704(sp)
    80017e4a:	fd2e                	sd	a1,184(sp)
    80017e4c:	00001097          	auipc	ra,0x1
    80017e50:	3de080e7          	jalr	990(ra) # 8001922a <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h25067841c822c84bE>
    80017e54:	f92a                	sd	a0,176(sp)
    80017e56:	f52e                	sd	a1,168(sp)
    80017e58:	a009                	j	80017e5a <.LBB5_126>

0000000080017e5a <.LBB5_126>:
    80017e5a:	00010617          	auipc	a2,0x10
    80017e5e:	4de60613          	addi	a2,a2,1246 # 80028338 <.L__unnamed_30>
    80017e62:	754a                	ld	a0,176(sp)
    80017e64:	75aa                	ld	a1,168(sp)
    80017e66:	ffff5097          	auipc	ra,0xffff5
    80017e6a:	f06080e7          	jalr	-250(ra) # 8000cd6c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbdb77aaba0d52dc4E>
    80017e6e:	f12a                	sd	a0,160(sp)
    80017e70:	a009                	j	80017e72 <.LBB5_126+0x18>
    80017e72:	1d28                	addi	a0,sp,696
    80017e74:	fffec097          	auipc	ra,0xfffec
    80017e78:	c06080e7          	jalr	-1018(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017e7c:	ed2a                	sd	a0,152(sp)
    80017e7e:	a009                	j	80017e80 <.LBB5_126+0x26>
    80017e80:	451d                	li	a0,7
    80017e82:	75ea                	ld	a1,184(sp)
    80017e84:	40b56963          	bltu	a0,a1,80018296 <.LBB5_154>
    80017e88:	a009                	j	80017e8a <.LBB5_126+0x30>
    80017e8a:	756a                	ld	a0,184(sp)
    80017e8c:	00151593          	slli	a1,a0,0x1
    80017e90:	666a                	ld	a2,152(sp)
    80017e92:	95b2                	add	a1,a1,a2
    80017e94:	768a                	ld	a3,160(sp)
    80017e96:	08d59223          	sh	a3,132(a1)
    80017e9a:	4591                	li	a1,4
        fence(Ordering::SeqCst);
    80017e9c:	2eb10b23          	sb	a1,758(sp)
    80017ea0:	852e                	mv	a0,a1
    80017ea2:	ffff5097          	auipc	ra,0xffff5
    80017ea6:	1dc080e7          	jalr	476(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80017eaa:	a009                	j	80017eac <.LBB5_126+0x52>
    80017eac:	1d28                	addi	a0,sp,696
        guard.avail.idx += 1;
    80017eae:	fffec097          	auipc	ra,0xfffec
    80017eb2:	bcc080e7          	jalr	-1076(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017eb6:	e92a                	sd	a0,144(sp)
    80017eb8:	a009                	j	80017eba <.LBB5_126+0x60>
    80017eba:	654a                	ld	a0,144(sp)
    80017ebc:	08255583          	lhu	a1,130(a0)
    80017ec0:	0585                	addi	a1,a1,1
    80017ec2:	6641                	lui	a2,0x10
    80017ec4:	367d                	addiw	a2,a2,-1
    80017ec6:	8e6d                	and	a2,a2,a1
    80017ec8:	e52e                	sd	a1,136(sp)
    80017eca:	3eb61163          	bne	a2,a1,800182ac <.LBB5_155>
    80017ece:	a009                	j	80017ed0 <.LBB5_126+0x76>
    80017ed0:	652a                	ld	a0,136(sp)
    80017ed2:	65ca                	ld	a1,144(sp)
    80017ed4:	08a59123          	sh	a0,130(a1)
    80017ed8:	4611                	li	a2,4
        fence(Ordering::SeqCst);
    80017eda:	2ec10ba3          	sb	a2,759(sp)
    80017ede:	8532                	mv	a0,a2
    80017ee0:	ffff5097          	auipc	ra,0xffff5
    80017ee4:	19e080e7          	jalr	414(ra) # 8000d07e <_ZN4core4sync6atomic5fence17h0ebfb6bf819e864eE>
    80017ee8:	a009                	j	80017eea <.LBB5_126+0x90>
    80017eea:	05000513          	li	a0,80
    80017eee:	4581                	li	a1,0
        unsafe { write(VIRTIO_MMIO_QUEUE_NOTIFY, 0); }
    80017ef0:	ffff7097          	auipc	ra,0xffff7
    80017ef4:	b1c080e7          	jalr	-1252(ra) # 8000ea0c <_ZN6kernel6driver11virtio_disk5write17hfa9bd9b63df859c9E>
    80017ef8:	a009                	j	80017efa <.LBB5_126+0xa0>
        while guard.info[idx[0]].disk {
    80017efa:	a009                	j	80017efc <.LBB5_126+0xa2>
    80017efc:	1d28                	addi	a0,sp,696
    80017efe:	fffec097          	auipc	ra,0xfffec
    80017f02:	9be080e7          	jalr	-1602(ra) # 800038bc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7da9d3aa29c3e8d2E>
    80017f06:	e12a                	sd	a0,128(sp)
    80017f08:	a009                	j	80017f0a <.LBB5_126+0xb0>
    80017f0a:	2c013503          	ld	a0,704(sp)
    80017f0e:	459d                	li	a1,7
    80017f10:	fcaa                	sd	a0,120(sp)
    80017f12:	3aa5eb63          	bltu	a1,a0,800182c8 <.LBB5_157>
    80017f16:	a009                	j	80017f18 <.LBB5_126+0xbe>
    80017f18:	4561                	li	a0,24
    80017f1a:	75e6                	ld	a1,120(sp)
    80017f1c:	02a58533          	mul	a0,a1,a0
    80017f20:	660a                	ld	a2,128(sp)
    80017f22:	9532                	add	a0,a0,a2
    80017f24:	6689                	lui	a3,0x2
    80017f26:	0216869b          	addiw	a3,a3,33
    80017f2a:	9536                	add	a0,a0,a3
    80017f2c:	00054503          	lbu	a0,0(a0)
    80017f30:	8905                	andi	a0,a0,1
    80017f32:	e909                	bnez	a0,80017f44 <.LBB5_127>
    80017f34:	a009                	j	80017f36 <.LBB5_126+0xdc>
    80017f36:	1d28                	addi	a0,sp,696
        let buf_channel = guard.info[idx[0]].buf_channel.take();
    80017f38:	fffec097          	auipc	ra,0xfffec
    80017f3c:	b42080e7          	jalr	-1214(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    80017f40:	f8aa                	sd	a0,112(sp)
    80017f42:	a8a1                	j	80017f9a <.LBB5_128+0x42>

0000000080017f44 <.LBB5_127>:
            unsafe { CPU_MANAGER.myproc().unwrap().sleep(buf_raw_data as usize, guard); }
    80017f44:	00057517          	auipc	a0,0x57
    80017f48:	0bc50513          	addi	a0,a0,188 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    80017f4c:	00005097          	auipc	ra,0x5
    80017f50:	7ec080e7          	jalr	2028(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    80017f54:	f4aa                	sd	a0,104(sp)
    80017f56:	a009                	j	80017f58 <.LBB5_128>

0000000080017f58 <.LBB5_128>:
    80017f58:	00010597          	auipc	a1,0x10
    80017f5c:	44058593          	addi	a1,a1,1088 # 80028398 <.L__unnamed_31>
    80017f60:	7526                	ld	a0,104(sp)
    80017f62:	00001097          	auipc	ra,0x1
    80017f66:	c06080e7          	jalr	-1018(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    80017f6a:	f0aa                	sd	a0,96(sp)
    80017f6c:	a009                	j	80017f6e <.LBB5_128+0x16>
    80017f6e:	2b813603          	ld	a2,696(sp)
    80017f72:	7506                	ld	a0,96(sp)
    80017f74:	29813583          	ld	a1,664(sp)
    80017f78:	fffee097          	auipc	ra,0xfffee
    80017f7c:	0c0080e7          	jalr	192(ra) # 80006038 <_ZN6kernel7process7process7Process5sleep17ha58964a638b57238E>
    80017f80:	a009                	j	80017f82 <.LBB5_128+0x2a>
            guard = self.acquire();
    80017f82:	2b013503          	ld	a0,688(sp)
    80017f86:	fffea097          	auipc	ra,0xfffea
    80017f8a:	6a0080e7          	jalr	1696(ra) # 80002626 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h8389d69ab210972bE>
    80017f8e:	ecaa                	sd	a0,88(sp)
    80017f90:	a009                	j	80017f92 <.LBB5_128+0x3a>
    80017f92:	6566                	ld	a0,88(sp)
    80017f94:	2aa13c23          	sd	a0,696(sp)
        while guard.info[idx[0]].disk {
    80017f98:	b795                	j	80017efc <.LBB5_126+0xa2>
        let buf_channel = guard.info[idx[0]].buf_channel.take();
    80017f9a:	2c013503          	ld	a0,704(sp)
    80017f9e:	459d                	li	a1,7
    80017fa0:	e8aa                	sd	a0,80(sp)
    80017fa2:	32a5ee63          	bltu	a1,a0,800182de <.LBB5_158>
    80017fa6:	a009                	j	80017fa8 <.LBB5_128+0x50>
    80017fa8:	4561                	li	a0,24
    80017faa:	65c6                	ld	a1,80(sp)
    80017fac:	02a58533          	mul	a0,a1,a0
    80017fb0:	7646                	ld	a2,112(sp)
    80017fb2:	9532                	add	a0,a0,a2
    80017fb4:	6689                	lui	a3,0x2
    80017fb6:	26c1                	addiw	a3,a3,16
    80017fb8:	9536                	add	a0,a0,a3
    80017fba:	00000097          	auipc	ra,0x0
    80017fbe:	5f6080e7          	jalr	1526(ra) # 800185b0 <_ZN4core6option15Option$LT$T$GT$4take17he7814b4d71b2ffb7E>
    80017fc2:	862a                	mv	a2,a0
    80017fc4:	86ae                	mv	a3,a1
    80017fc6:	3aa13c23          	sd	a0,952(sp)
    80017fca:	3cb13023          	sd	a1,960(sp)
    80017fce:	e4b2                	sd	a2,72(sp)
    80017fd0:	e0b6                	sd	a3,64(sp)
    80017fd2:	a009                	j	80017fd4 <.LBB5_129>

0000000080017fd4 <.LBB5_129>:
        debug_assert_eq!(buf_channel.unwrap(), buf_raw_data as usize);
    80017fd4:	00010617          	auipc	a2,0x10
    80017fd8:	3f460613          	addi	a2,a2,1012 # 800283c8 <.L__unnamed_32>
    80017fdc:	6526                	ld	a0,72(sp)
    80017fde:	6586                	ld	a1,64(sp)
    80017fe0:	00001097          	auipc	ra,0x1
    80017fe4:	bbe080e7          	jalr	-1090(ra) # 80018b9e <_ZN4core6option15Option$LT$T$GT$6unwrap17h4427757f093457b9E>
    80017fe8:	30a13423          	sd	a0,776(sp)
    80017fec:	a009                	j	80017fee <.LBB5_129+0x1a>
    80017fee:	29813503          	ld	a0,664(sp)
    80017ff2:	30a13823          	sd	a0,784(sp)
    80017ff6:	062c                	addi	a1,sp,776
    80017ff8:	2eb13c23          	sd	a1,760(sp)
    80017ffc:	0e10                	addi	a2,sp,784
    80017ffe:	30c13023          	sd	a2,768(sp)
    80018002:	3cb13423          	sd	a1,968(sp)
    80018006:	3cc13823          	sd	a2,976(sp)
    8001800a:	30813683          	ld	a3,776(sp)
    8001800e:	fc2e                	sd	a1,56(sp)
    80018010:	f832                	sd	a2,48(sp)
    80018012:	04a68063          	beq	a3,a0,80018052 <.LBB5_130+0x1a>
    80018016:	a009                	j	80018018 <.LBB5_129+0x44>
    80018018:	7562                	ld	a0,56(sp)
    8001801a:	36a13c23          	sd	a0,888(sp)
    8001801e:	75c2                	ld	a1,48(sp)
    80018020:	38b13023          	sd	a1,896(sp)
    80018024:	1eb0                	addi	a2,sp,888
    80018026:	36c13423          	sd	a2,872(sp)
    8001802a:	0714                	addi	a3,sp,896
    8001802c:	36d13823          	sd	a3,880(sp)
    80018030:	3cc13c23          	sd	a2,984(sp)
    80018034:	3ed13023          	sd	a3,992(sp)

0000000080018038 <.LBB5_130>:
    80018038:	00008597          	auipc	a1,0x8
    8001803c:	98058593          	addi	a1,a1,-1664 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    80018040:	8532                	mv	a0,a2
    80018042:	f436                	sd	a3,40(sp)
    80018044:	00008097          	auipc	ra,0x8
    80018048:	992080e7          	jalr	-1646(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8001804c:	f02a                	sd	a0,32(sp)
    8001804e:	ec2e                	sd	a1,24(sp)
    80018050:	a801                	j	80018060 <.LBB5_131>
    80018052:	1d28                	addi	a0,sp,696
        guard.free_chain(idx[0]);
    80018054:	fffec097          	auipc	ra,0xfffec
    80018058:	a26080e7          	jalr	-1498(ra) # 80003a7a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17heb13de75ad243851E>
    8001805c:	e82a                	sd	a0,16(sp)
    8001805e:	a085                	j	800180be <.LBB5_133+0x14>

0000000080018060 <.LBB5_131>:
        debug_assert_eq!(buf_channel.unwrap(), buf_raw_data as usize);
    80018060:	00008597          	auipc	a1,0x8
    80018064:	95858593          	addi	a1,a1,-1704 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    80018068:	7522                	ld	a0,40(sp)
    8001806a:	00008097          	auipc	ra,0x8
    8001806e:	96c080e7          	jalr	-1684(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    80018072:	e42a                	sd	a0,8(sp)
    80018074:	e02e                	sd	a1,0(sp)
    80018076:	a009                	j	80018078 <.LBB5_131+0x18>
    80018078:	7502                	ld	a0,32(sp)
    8001807a:	34a13423          	sd	a0,840(sp)
    8001807e:	65e2                	ld	a1,24(sp)
    80018080:	34b13823          	sd	a1,848(sp)
    80018084:	6622                	ld	a2,8(sp)
    80018086:	34c13c23          	sd	a2,856(sp)
    8001808a:	6682                	ld	a3,0(sp)
    8001808c:	36d13023          	sd	a3,864(sp)

0000000080018090 <.LBB5_132>:
    80018090:	00010597          	auipc	a1,0x10
    80018094:	39058593          	addi	a1,a1,912 # 80028420 <.L__unnamed_33>
    80018098:	0e28                	addi	a0,sp,792
    8001809a:	460d                	li	a2,3
    8001809c:	06b4                	addi	a3,sp,840
    8001809e:	4709                	li	a4,2
    800180a0:	fffed097          	auipc	ra,0xfffed
    800180a4:	684080e7          	jalr	1668(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    800180a8:	a009                	j	800180aa <.LBB5_133>

00000000800180aa <.LBB5_133>:
    800180aa:	00010597          	auipc	a1,0x10
    800180ae:	3a658593          	addi	a1,a1,934 # 80028450 <.L__unnamed_34>
    800180b2:	0e28                	addi	a0,sp,792
    800180b4:	00009097          	auipc	ra,0x9
    800180b8:	c82080e7          	jalr	-894(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    800180bc:	0000                	unimp
        guard.free_chain(idx[0]);
    800180be:	2c013583          	ld	a1,704(sp)
    800180c2:	6542                	ld	a0,16(sp)
    800180c4:	ffff6097          	auipc	ra,0xffff6
    800180c8:	634080e7          	jalr	1588(ra) # 8000e6f8 <_ZN6kernel6driver11virtio_disk4Disk10free_chain17h3f8f98a01bf1329eE>
    800180cc:	a009                	j	800180ce <.LBB5_133+0x24>
        drop(guard);
    800180ce:	2b813503          	ld	a0,696(sp)
    800180d2:	ffff6097          	auipc	ra,0xffff6
    800180d6:	8a8080e7          	jalr	-1880(ra) # 8000d97a <_ZN4core3mem4drop17h8799ff770ebf2dd0E>
    800180da:	a009                	j	800180dc <.LBB5_133+0x32>
    }
    800180dc:	3e813083          	ld	ra,1000(sp)
    800180e0:	3f010113          	addi	sp,sp,1008
    800180e4:	8082                	ret

00000000800180e6 <.LBB5_134>:
        let buf0 = &mut guard.ops[idx[0]];
    800180e6:	00010617          	auipc	a2,0x10
    800180ea:	02a60613          	addi	a2,a2,42 # 80028110 <.L__unnamed_35>
    800180ee:	45a1                	li	a1,8
    800180f0:	25813503          	ld	a0,600(sp)
    800180f4:	00009097          	auipc	ra,0x9
    800180f8:	c02080e7          	jalr	-1022(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800180fe <.LBB5_135>:
        buf0.sector = (buf.read_blockno() as usize * (BSIZE / 512)) as u64;
    800180fe:	00010517          	auipc	a0,0x10
    80018102:	d8250513          	addi	a0,a0,-638 # 80027e80 <str.1>

0000000080018106 <.LBB5_136>:
    80018106:	00010617          	auipc	a2,0x10
    8001810a:	02260613          	addi	a2,a2,34 # 80028128 <.L__unnamed_36>
    8001810e:	02100593          	li	a1,33
    80018112:	00009097          	auipc	ra,0x9
    80018116:	bb8080e7          	jalr	-1096(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001811c <.LBB5_137>:
        guard.desc[idx[0]].addr = buf0 as *mut _ as u64;
    8001811c:	00010617          	auipc	a2,0x10
    80018120:	02460613          	addi	a2,a2,36 # 80028140 <.L__unnamed_37>
    80018124:	45a1                	li	a1,8
    80018126:	23013503          	ld	a0,560(sp)
    8001812a:	00009097          	auipc	ra,0x9
    8001812e:	bcc080e7          	jalr	-1076(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018134 <.LBB5_138>:
        guard.desc[idx[0]].len = core::mem::size_of::<VirtIOBlkReq>().try_into().unwrap();
    80018134:	00010617          	auipc	a2,0x10
    80018138:	03c60613          	addi	a2,a2,60 # 80028170 <.L__unnamed_38>
    8001813c:	45a1                	li	a1,8
    8001813e:	20813503          	ld	a0,520(sp)
    80018142:	00009097          	auipc	ra,0x9
    80018146:	bb4080e7          	jalr	-1100(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001814c <.LBB5_139>:
        guard.desc[idx[0]].flags = VRING_DESC_F_NEXT;
    8001814c:	00010617          	auipc	a2,0x10
    80018150:	03c60613          	addi	a2,a2,60 # 80028188 <.L__unnamed_39>
    80018154:	45a1                	li	a1,8
    80018156:	757e                	ld	a0,504(sp)
    80018158:	00009097          	auipc	ra,0x9
    8001815c:	b9e080e7          	jalr	-1122(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018162 <.LBB5_140>:
        guard.desc[idx[0]].next = idx[1].try_into().unwrap();
    80018162:	00010617          	auipc	a2,0x10
    80018166:	05660613          	addi	a2,a2,86 # 800281b8 <.L__unnamed_40>
    8001816a:	45a1                	li	a1,8
    8001816c:	655e                	ld	a0,464(sp)
    8001816e:	00009097          	auipc	ra,0x9
    80018172:	b88080e7          	jalr	-1144(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018178 <.LBB5_141>:
        guard.desc[idx[1]].addr = buf_raw_data as u64;
    80018178:	00010617          	auipc	a2,0x10
    8001817c:	05860613          	addi	a2,a2,88 # 800281d0 <.L__unnamed_41>
    80018180:	45a1                	li	a1,8
    80018182:	651e                	ld	a0,448(sp)
    80018184:	00009097          	auipc	ra,0x9
    80018188:	b72080e7          	jalr	-1166(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001818e <.LBB5_142>:
        guard.desc[idx[1]].len = BSIZE.try_into().unwrap();
    8001818e:	00010617          	auipc	a2,0x10
    80018192:	07260613          	addi	a2,a2,114 # 80028200 <.L__unnamed_42>
    80018196:	45a1                	li	a1,8
    80018198:	657a                	ld	a0,408(sp)
    8001819a:	00009097          	auipc	ra,0x9
    8001819e:	b5c080e7          	jalr	-1188(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800181a4 <.LBB5_143>:
        guard.desc[idx[1]].flags = if writing { 0 } else { VRING_DESC_F_WRITE };
    800181a4:	00010617          	auipc	a2,0x10
    800181a8:	07460613          	addi	a2,a2,116 # 80028218 <.L__unnamed_43>
    800181ac:	45a1                	li	a1,8
    800181ae:	653a                	ld	a0,392(sp)
    800181b0:	00009097          	auipc	ra,0x9
    800181b4:	b46080e7          	jalr	-1210(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800181ba <.LBB5_144>:
        guard.desc[idx[1]].flags |= VRING_DESC_F_NEXT;
    800181ba:	00010617          	auipc	a2,0x10
    800181be:	07660613          	addi	a2,a2,118 # 80028230 <.L__unnamed_44>
    800181c2:	45a1                	li	a1,8
    800181c4:	7576                	ld	a0,376(sp)
    800181c6:	00009097          	auipc	ra,0x9
    800181ca:	b30080e7          	jalr	-1232(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800181d0 <.LBB5_145>:
        guard.desc[idx[1]].next = idx[2].try_into().unwrap();
    800181d0:	00010617          	auipc	a2,0x10
    800181d4:	09060613          	addi	a2,a2,144 # 80028260 <.L__unnamed_45>
    800181d8:	45a1                	li	a1,8
    800181da:	6556                	ld	a0,336(sp)
    800181dc:	00009097          	auipc	ra,0x9
    800181e0:	b1a080e7          	jalr	-1254(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800181e6 <.LBB5_146>:
        guard.info[idx[0]].status = 0xff;
    800181e6:	00010617          	auipc	a2,0x10
    800181ea:	09260613          	addi	a2,a2,146 # 80028278 <.L__unnamed_46>
    800181ee:	45a1                	li	a1,8
    800181f0:	6516                	ld	a0,320(sp)
    800181f2:	00009097          	auipc	ra,0x9
    800181f6:	b04080e7          	jalr	-1276(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800181fc <.LBB5_147>:
        guard.desc[idx[2]].addr = &mut guard.info[idx[0]].status as *mut _ as u64;
    800181fc:	00010617          	auipc	a2,0x10
    80018200:	09460613          	addi	a2,a2,148 # 80028290 <.L__unnamed_47>
    80018204:	45a1                	li	a1,8
    80018206:	7552                	ld	a0,304(sp)
    80018208:	00009097          	auipc	ra,0x9
    8001820c:	aee080e7          	jalr	-1298(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018212 <.LBB5_148>:
    80018212:	00010617          	auipc	a2,0x10
    80018216:	09660613          	addi	a2,a2,150 # 800282a8 <.L__unnamed_48>
    8001821a:	45a1                	li	a1,8
    8001821c:	6572                	ld	a0,280(sp)
    8001821e:	00009097          	auipc	ra,0x9
    80018222:	ad8080e7          	jalr	-1320(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018228 <.LBB5_149>:
        guard.desc[idx[2]].len = 1;
    80018228:	00010617          	auipc	a2,0x10
    8001822c:	09860613          	addi	a2,a2,152 # 800282c0 <.L__unnamed_49>
    80018230:	45a1                	li	a1,8
    80018232:	6532                	ld	a0,264(sp)
    80018234:	00009097          	auipc	ra,0x9
    80018238:	ac2080e7          	jalr	-1342(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001823e <.LBB5_150>:
        guard.desc[idx[2]].flags = VRING_DESC_F_WRITE;
    8001823e:	00010617          	auipc	a2,0x10
    80018242:	09a60613          	addi	a2,a2,154 # 800282d8 <.L__unnamed_50>
    80018246:	45a1                	li	a1,8
    80018248:	756e                	ld	a0,248(sp)
    8001824a:	00009097          	auipc	ra,0x9
    8001824e:	aac080e7          	jalr	-1364(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018254 <.LBB5_151>:
        guard.desc[idx[2]].next = 0;
    80018254:	00010617          	auipc	a2,0x10
    80018258:	09c60613          	addi	a2,a2,156 # 800282f0 <.L__unnamed_51>
    8001825c:	45a1                	li	a1,8
    8001825e:	752e                	ld	a0,232(sp)
    80018260:	00009097          	auipc	ra,0x9
    80018264:	a96080e7          	jalr	-1386(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001826a <.LBB5_152>:
        guard.info[idx[0]].disk = true;
    8001826a:	00010617          	auipc	a2,0x10
    8001826e:	09e60613          	addi	a2,a2,158 # 80028308 <.L__unnamed_52>
    80018272:	45a1                	li	a1,8
    80018274:	656e                	ld	a0,216(sp)
    80018276:	00009097          	auipc	ra,0x9
    8001827a:	a80080e7          	jalr	-1408(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018280 <.LBB5_153>:
        guard.info[idx[0]].buf_channel = Some(buf_raw_data as usize);
    80018280:	00010617          	auipc	a2,0x10
    80018284:	0a060613          	addi	a2,a2,160 # 80028320 <.L__unnamed_53>
    80018288:	45a1                	li	a1,8
    8001828a:	652e                	ld	a0,200(sp)
    8001828c:	00009097          	auipc	ra,0x9
    80018290:	a6a080e7          	jalr	-1430(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080018296 <.LBB5_154>:
            guard.avail.ring[i] = idx[0].try_into().unwrap();
    80018296:	00010617          	auipc	a2,0x10
    8001829a:	0ba60613          	addi	a2,a2,186 # 80028350 <.L__unnamed_54>
    8001829e:	45a1                	li	a1,8
    800182a0:	756a                	ld	a0,184(sp)
    800182a2:	00009097          	auipc	ra,0x9
    800182a6:	a54080e7          	jalr	-1452(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800182ac <.LBB5_155>:
        guard.avail.idx += 1;
    800182ac:	00010517          	auipc	a0,0x10
    800182b0:	b9450513          	addi	a0,a0,-1132 # 80027e40 <str.0>

00000000800182b4 <.LBB5_156>:
    800182b4:	00010617          	auipc	a2,0x10
    800182b8:	0b460613          	addi	a2,a2,180 # 80028368 <.L__unnamed_55>
    800182bc:	45f1                	li	a1,28
    800182be:	00009097          	auipc	ra,0x9
    800182c2:	a0c080e7          	jalr	-1524(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800182c8 <.LBB5_157>:
        while guard.info[idx[0]].disk {
    800182c8:	00010617          	auipc	a2,0x10
    800182cc:	0b860613          	addi	a2,a2,184 # 80028380 <.L__unnamed_56>
    800182d0:	45a1                	li	a1,8
    800182d2:	7566                	ld	a0,120(sp)
    800182d4:	00009097          	auipc	ra,0x9
    800182d8:	a22080e7          	jalr	-1502(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800182de <.LBB5_158>:
        let buf_channel = guard.info[idx[0]].buf_channel.take();
    800182de:	00010617          	auipc	a2,0x10
    800182e2:	0d260613          	addi	a2,a2,210 # 800283b0 <.L__unnamed_57>
    800182e6:	45a1                	li	a1,8
    800182e8:	6546                	ld	a0,80(sp)
    800182ea:	00009097          	auipc	ra,0x9
    800182ee:	a0c080e7          	jalr	-1524(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h8f571597377f70efE:

00000000800182f4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h8f571597377f70efE>:
    pub const unsafe fn add(self, count: usize) -> Self
    800182f4:	1101                	addi	sp,sp,-32
    800182f6:	ec06                	sd	ra,24(sp)
    800182f8:	e42a                	sd	a0,8(sp)
    800182fa:	e82e                	sd	a1,16(sp)
        unsafe { self.offset(count as isize) }
    800182fc:	00000097          	auipc	ra,0x0
    80018300:	014080e7          	jalr	20(ra) # 80018310 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h33ea320c421eb7e4E>
    80018304:	e02a                	sd	a0,0(sp)
    80018306:	a009                	j	80018308 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h8f571597377f70efE+0x14>
    }
    80018308:	6502                	ld	a0,0(sp)
    8001830a:	60e2                	ld	ra,24(sp)
    8001830c:	6105                	addi	sp,sp,32
    8001830e:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h33ea320c421eb7e4E:

0000000080018310 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h33ea320c421eb7e4E>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    80018310:	1101                	addi	sp,sp,-32
    80018312:	e42a                	sd	a0,8(sp)
    80018314:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) as *mut T }
    80018316:	058e                	slli	a1,a1,0x3
    80018318:	952e                	add	a0,a0,a1
    8001831a:	ec2a                	sd	a0,24(sp)
    8001831c:	e02a                	sd	a0,0(sp)
    8001831e:	a009                	j	80018320 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h33ea320c421eb7e4E+0x10>
    }
    80018320:	6502                	ld	a0,0(sp)
    80018322:	6105                	addi	sp,sp,32
    80018324:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha1549d9608753995E:

0000000080018326 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha1549d9608753995E>:
    pub const fn is_null(self) -> bool {
    80018326:	7179                	addi	sp,sp,-48
    80018328:	f406                	sd	ra,40(sp)
    8001832a:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    8001832c:	ec2a                	sd	a0,24(sp)
    8001832e:	a009                	j	80018330 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha1549d9608753995E+0xa>
    80018330:	4501                	li	a0,0
    80018332:	65e2                	ld	a1,24(sp)
    80018334:	e82a                	sd	a0,16(sp)
    80018336:	852e                	mv	a0,a1
    80018338:	65c2                	ld	a1,16(sp)
    8001833a:	00008097          	auipc	ra,0x8
    8001833e:	674080e7          	jalr	1652(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    80018342:	e42a                	sd	a0,8(sp)
    80018344:	a009                	j	80018346 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha1549d9608753995E+0x20>
    }
    80018346:	6522                	ld	a0,8(sp)
    80018348:	70a2                	ld	ra,40(sp)
    8001834a:	6145                	addi	sp,sp,48
    8001834c:	8082                	ret

Disassembly of section .text._ZN4core5clone5Clone10clone_from17h366b01f84fe96d57E:

000000008001834e <_ZN4core5clone5Clone10clone_from17h366b01f84fe96d57E>:
    fn clone_from(&mut self, source: &Self) {
    8001834e:	cc010113          	addi	sp,sp,-832
    80018352:	32113c23          	sd	ra,824(sp)
    80018356:	32a13423          	sd	a0,808(sp)
    8001835a:	32b13823          	sd	a1,816(sp)
    8001835e:	0030                	addi	a2,sp,8
        *self = source.clone()
    80018360:	e02a                	sd	a0,0(sp)
    80018362:	8532                	mv	a0,a2
    80018364:	fffee097          	auipc	ra,0xfffee
    80018368:	734080e7          	jalr	1844(ra) # 80006a98 <_ZN4core5clone5Clone5clone17h5fa0b182cc6723dfE>
    8001836c:	a009                	j	8001836e <_ZN4core5clone5Clone10clone_from17h366b01f84fe96d57E+0x20>
    8001836e:	6502                	ld	a0,0(sp)
    80018370:	fffee097          	auipc	ra,0xfffee
    80018374:	3f8080e7          	jalr	1016(ra) # 80006768 <_ZN4core3ptr119drop_in_place$LT$$u5b$core..option..Option$LT$alloc..sync..Arc$LT$kernel..fs..file..VFile$GT$$GT$$u3b$$u20$100$u5d$$GT$17hc9298ab7d5070b72E>
    80018378:	a009                	j	8001837a <_ZN4core5clone5Clone10clone_from17h366b01f84fe96d57E+0x2c>
    8001837a:	002c                	addi	a1,sp,8
    8001837c:	32000613          	li	a2,800
    80018380:	6502                	ld	a0,0(sp)
    80018382:	0000b097          	auipc	ra,0xb
    80018386:	4de080e7          	jalr	1246(ra) # 80023860 <memcpy>
    }
    8001838a:	33813083          	ld	ra,824(sp)
    8001838e:	34010113          	addi	sp,sp,832
    80018392:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h965ad0afe4b3ee72E:

0000000080018394 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h965ad0afe4b3ee72E>:
    pub const fn as_mut_ptr(&mut self) -> *mut T {
    80018394:	1141                	addi	sp,sp,-16
    80018396:	e02a                	sd	a0,0(sp)
    80018398:	e42e                	sd	a1,8(sp)
    }
    8001839a:	0141                	addi	sp,sp,16
    8001839c:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9e2712dfd09e8f4dE:

000000008001839e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9e2712dfd09e8f4dE>:
    pub const fn len(&self) -> usize {
    8001839e:	1101                	addi	sp,sp,-32
    800183a0:	e82a                	sd	a0,16(sp)
    800183a2:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    800183a4:	e02a                	sd	a0,0(sp)
    800183a6:	e42e                	sd	a1,8(sp)
    }
    800183a8:	852e                	mv	a0,a1
    800183aa:	6105                	addi	sp,sp,32
    800183ac:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h4e5a65e1bb540f22E:

00000000800183ae <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h4e5a65e1bb540f22E>:
    pub fn iter_mut(&mut self) -> IterMut<'_, T> {
    800183ae:	7179                	addi	sp,sp,-48
    800183b0:	f406                	sd	ra,40(sp)
    800183b2:	ec2a                	sd	a0,24(sp)
    800183b4:	f02e                	sd	a1,32(sp)
        IterMut::new(self)
    800183b6:	ffffb097          	auipc	ra,0xffffb
    800183ba:	bde080e7          	jalr	-1058(ra) # 80012f94 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h5245e160acf10386E>
    800183be:	e82a                	sd	a0,16(sp)
    800183c0:	e42e                	sd	a1,8(sp)
    800183c2:	a009                	j	800183c4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h4e5a65e1bb540f22E+0x16>
    }
    800183c4:	6542                	ld	a0,16(sp)
    800183c6:	65a2                	ld	a1,8(sp)
    800183c8:	70a2                	ld	ra,40(sp)
    800183ca:	6145                	addi	sp,sp,48
    800183cc:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE:

00000000800183ce <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE>:
    ///
    /// assert_eq!(maybe_some_len, Some(13));
    /// ```
    #[inline]
    #[stable(feature = "rust1", since = "1.0.0")]
    pub fn map<U, F: FnOnce(T) -> U>(self, f: F) -> Option<U> {
    800183ce:	715d                	addi	sp,sp,-80
    800183d0:	e486                	sd	ra,72(sp)
    800183d2:	ec2a                	sd	a0,24(sp)
    800183d4:	fc2e                	sd	a1,56(sp)
    800183d6:	4605                	li	a2,1
        match self {
            Some(x) => Some(f(x)),
    800183d8:	02c10ba3          	sb	a2,55(sp)
    800183dc:	00a03633          	snez	a2,a0
    800183e0:	4681                	li	a3,0
    800183e2:	e82e                	sd	a1,16(sp)
    800183e4:	00d50463          	beq	a0,a3,800183ec <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x1e>
    800183e8:	a009                	j	800183ea <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x1c>
    800183ea:	a031                	j	800183f6 <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x28>
    800183ec:	4501                	li	a0,0
            None => None,
    800183ee:	02a103a3          	sb	a0,39(sp)
        match self {
    800183f2:	a81d                	j	80018428 <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x5a>
    800183f4:	0000                	unimp
            Some(x) => Some(f(x)),
    800183f6:	6562                	ld	a0,24(sp)
    800183f8:	e0aa                	sd	a0,64(sp)
    800183fa:	4581                	li	a1,0
    800183fc:	02b10ba3          	sb	a1,55(sp)
    80018400:	f42a                	sd	a0,40(sp)
    80018402:	65c2                	ld	a1,16(sp)
    80018404:	e42a                	sd	a0,8(sp)
    80018406:	852e                	mv	a0,a1
    80018408:	65a2                	ld	a1,8(sp)
    8001840a:	ffffe097          	auipc	ra,0xffffe
    8001840e:	6d2080e7          	jalr	1746(ra) # 80016adc <_ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17h247c31d0e2bc1fe4E>
    80018412:	a009                	j	80018414 <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x46>
    80018414:	4505                	li	a0,1
    80018416:	02a103a3          	sb	a0,39(sp)
        }
    }
    8001841a:	a039                	j	80018428 <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x5a>
    8001841c:	02714503          	lbu	a0,39(sp)
    80018420:	60a6                	ld	ra,72(sp)
    80018422:	6161                	addi	sp,sp,80
    80018424:	8082                	ret
    80018426:	bfdd                	j	8001841c <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x4e>
    80018428:	03714503          	lbu	a0,55(sp)
    8001842c:	8905                	andi	a0,a0,1
    8001842e:	fd65                	bnez	a0,80018426 <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x58>
    80018430:	b7f5                	j	8001841c <_ZN4core6option15Option$LT$T$GT$3map17h750fb81835416bcdE+0x4e>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E:

0000000080018432 <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E>:
    pub fn map<U, F: FnOnce(T) -> U>(self, f: F) -> Option<U> {
    80018432:	715d                	addi	sp,sp,-80
    80018434:	e486                	sd	ra,72(sp)
    80018436:	ec2a                	sd	a0,24(sp)
    80018438:	fc2e                	sd	a1,56(sp)
    8001843a:	4605                	li	a2,1
            Some(x) => Some(f(x)),
    8001843c:	02c10ba3          	sb	a2,55(sp)
    80018440:	00a03633          	snez	a2,a0
    80018444:	4681                	li	a3,0
    80018446:	e82e                	sd	a1,16(sp)
    80018448:	00d50463          	beq	a0,a3,80018450 <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x1e>
    8001844c:	a009                	j	8001844e <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x1c>
    8001844e:	a031                	j	8001845a <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x28>
    80018450:	4501                	li	a0,0
            None => None,
    80018452:	02a103a3          	sb	a0,39(sp)
        match self {
    80018456:	a81d                	j	8001848c <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x5a>
    80018458:	0000                	unimp
            Some(x) => Some(f(x)),
    8001845a:	6562                	ld	a0,24(sp)
    8001845c:	e0aa                	sd	a0,64(sp)
    8001845e:	4581                	li	a1,0
    80018460:	02b10ba3          	sb	a1,55(sp)
    80018464:	f42a                	sd	a0,40(sp)
    80018466:	65c2                	ld	a1,16(sp)
    80018468:	e42a                	sd	a0,8(sp)
    8001846a:	852e                	mv	a0,a1
    8001846c:	65a2                	ld	a1,8(sp)
    8001846e:	ffffe097          	auipc	ra,0xffffe
    80018472:	68e080e7          	jalr	1678(ra) # 80016afc <_ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17h9d7725745ff4b8c8E>
    80018476:	a009                	j	80018478 <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x46>
    80018478:	4505                	li	a0,1
    8001847a:	02a103a3          	sb	a0,39(sp)
    }
    8001847e:	a039                	j	8001848c <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x5a>
    80018480:	02714503          	lbu	a0,39(sp)
    80018484:	60a6                	ld	ra,72(sp)
    80018486:	6161                	addi	sp,sp,80
    80018488:	8082                	ret
    8001848a:	bfdd                	j	80018480 <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x4e>
    8001848c:	03714503          	lbu	a0,55(sp)
    80018490:	8905                	andi	a0,a0,1
    80018492:	fd65                	bnez	a0,8001848a <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x58>
    80018494:	b7f5                	j	80018480 <_ZN4core6option15Option$LT$T$GT$3map17ha64c8aa9ffc1cdb4E+0x4e>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE:

0000000080018496 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE>:
    pub fn map<U, F: FnOnce(T) -> U>(self, f: F) -> Option<U> {
    80018496:	715d                	addi	sp,sp,-80
    80018498:	e486                	sd	ra,72(sp)
    8001849a:	ec2a                	sd	a0,24(sp)
    8001849c:	fc2e                	sd	a1,56(sp)
    8001849e:	4605                	li	a2,1
            Some(x) => Some(f(x)),
    800184a0:	02c10ba3          	sb	a2,55(sp)
    800184a4:	00a03633          	snez	a2,a0
    800184a8:	4681                	li	a3,0
    800184aa:	e82e                	sd	a1,16(sp)
    800184ac:	00d50463          	beq	a0,a3,800184b4 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x1e>
    800184b0:	a009                	j	800184b2 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x1c>
    800184b2:	a031                	j	800184be <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x28>
    800184b4:	4501                	li	a0,0
            None => None,
    800184b6:	02a103a3          	sb	a0,39(sp)
        match self {
    800184ba:	a81d                	j	800184f0 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x5a>
    800184bc:	0000                	unimp
            Some(x) => Some(f(x)),
    800184be:	6562                	ld	a0,24(sp)
    800184c0:	e0aa                	sd	a0,64(sp)
    800184c2:	4581                	li	a1,0
    800184c4:	02b10ba3          	sb	a1,55(sp)
    800184c8:	f42a                	sd	a0,40(sp)
    800184ca:	65c2                	ld	a1,16(sp)
    800184cc:	e42a                	sd	a0,8(sp)
    800184ce:	852e                	mv	a0,a1
    800184d0:	65a2                	ld	a1,8(sp)
    800184d2:	ffffe097          	auipc	ra,0xffffe
    800184d6:	61a080e7          	jalr	1562(ra) # 80016aec <_ZN6kernel2fs3bio6BufLru14move_if_no_ref28_$u7b$$u7b$closure$u7d$$u7d$17hdb0f9bb26d135180E>
    800184da:	a009                	j	800184dc <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x46>
    800184dc:	4505                	li	a0,1
    800184de:	02a103a3          	sb	a0,39(sp)
    }
    800184e2:	a039                	j	800184f0 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x5a>
    800184e4:	02714503          	lbu	a0,39(sp)
    800184e8:	60a6                	ld	ra,72(sp)
    800184ea:	6161                	addi	sp,sp,80
    800184ec:	8082                	ret
    800184ee:	bfdd                	j	800184e4 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x4e>
    800184f0:	03714503          	lbu	a0,55(sp)
    800184f4:	8905                	andi	a0,a0,1
    800184f6:	fd65                	bnez	a0,800184ee <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x58>
    800184f8:	b7f5                	j	800184e4 <_ZN4core6option15Option$LT$T$GT$3map17hb7324357cabf3abeE+0x4e>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE:

00000000800184fa <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE>:
    pub fn map<U, F: FnOnce(T) -> U>(self, f: F) -> Option<U> {
    800184fa:	7139                	addi	sp,sp,-64
    800184fc:	fc06                	sd	ra,56(sp)
    800184fe:	e42a                	sd	a0,8(sp)
    80018500:	4585                	li	a1,1
            Some(x) => Some(f(x)),
    80018502:	02b103a3          	sb	a1,39(sp)
    80018506:	00a035b3          	snez	a1,a0
    8001850a:	4601                	li	a2,0
    8001850c:	00c50463          	beq	a0,a2,80018514 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x1a>
    80018510:	a009                	j	80018512 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x18>
    80018512:	a031                	j	8001851e <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x24>
    80018514:	4501                	li	a0,0
            None => None,
    80018516:	00a10823          	sb	a0,16(sp)
        match self {
    8001851a:	a82d                	j	80018554 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x5a>
    8001851c:	0000                	unimp
            Some(x) => Some(f(x)),
    8001851e:	6522                	ld	a0,8(sp)
    80018520:	f82a                	sd	a0,48(sp)
    80018522:	4581                	li	a1,0
    80018524:	02b103a3          	sb	a1,39(sp)
    80018528:	ec2a                	sd	a0,24(sp)
    8001852a:	00001097          	auipc	ra,0x1
    8001852e:	ab6080e7          	jalr	-1354(ra) # 80018fe0 <_ZN4core6option19Option$LT$$RF$T$GT$6copied28_$u7b$$u7b$closure$u7d$$u7d$17ha8ee017899d7c467E>
    80018532:	e02a                	sd	a0,0(sp)
    80018534:	a009                	j	80018536 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x3c>
    80018536:	6502                	ld	a0,0(sp)
    80018538:	00a108a3          	sb	a0,17(sp)
    8001853c:	4585                	li	a1,1
    8001853e:	00b10823          	sb	a1,16(sp)
    }
    80018542:	a809                	j	80018554 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x5a>
    80018544:	01014503          	lbu	a0,16(sp)
    80018548:	01110583          	lb	a1,17(sp)
    8001854c:	70e2                	ld	ra,56(sp)
    8001854e:	6121                	addi	sp,sp,64
    80018550:	8082                	ret
    80018552:	bfcd                	j	80018544 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x4a>
    80018554:	02714503          	lbu	a0,39(sp)
    80018558:	8905                	andi	a0,a0,1
    8001855a:	fd65                	bnez	a0,80018552 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x58>
    8001855c:	b7e5                	j	80018544 <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE+0x4a>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$4take17h3f9802c777712151E:

000000008001855e <_ZN4core6option15Option$LT$T$GT$4take17h3f9802c777712151E>:
    /// assert_eq!(x, None);
    /// assert_eq!(y, None);
    /// ```
    #[inline]
    #[stable(feature = "rust1", since = "1.0.0")]
    pub fn take(&mut self) -> Option<T> {
    8001855e:	1101                	addi	sp,sp,-32
    80018560:	ec06                	sd	ra,24(sp)
    80018562:	e82a                	sd	a0,16(sp)
        mem::take(self)
    80018564:	ffff5097          	auipc	ra,0xffff5
    80018568:	5ec080e7          	jalr	1516(ra) # 8000db50 <_ZN4core3mem4take17h7d5e32bf5625c888E>
    8001856c:	e42a                	sd	a0,8(sp)
    8001856e:	e02e                	sd	a1,0(sp)
    80018570:	a009                	j	80018572 <_ZN4core6option15Option$LT$T$GT$4take17h3f9802c777712151E+0x14>
    }
    80018572:	6522                	ld	a0,8(sp)
    80018574:	6582                	ld	a1,0(sp)
    80018576:	60e2                	ld	ra,24(sp)
    80018578:	6105                	addi	sp,sp,32
    8001857a:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$4take17h4afdde0659ee1cbbE:

000000008001857c <_ZN4core6option15Option$LT$T$GT$4take17h4afdde0659ee1cbbE>:
    pub fn take(&mut self) -> Option<T> {
    8001857c:	1101                	addi	sp,sp,-32
    8001857e:	ec06                	sd	ra,24(sp)
    80018580:	e82a                	sd	a0,16(sp)
        mem::take(self)
    80018582:	ffff5097          	auipc	ra,0xffff5
    80018586:	62e080e7          	jalr	1582(ra) # 8000dbb0 <_ZN4core3mem4take17h8bc11710c5a0520dE>
    8001858a:	e42a                	sd	a0,8(sp)
    8001858c:	a009                	j	8001858e <_ZN4core6option15Option$LT$T$GT$4take17h4afdde0659ee1cbbE+0x12>
    }
    8001858e:	6522                	ld	a0,8(sp)
    80018590:	60e2                	ld	ra,24(sp)
    80018592:	6105                	addi	sp,sp,32
    80018594:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$4take17ha270ce5844af4e09E:

0000000080018596 <_ZN4core6option15Option$LT$T$GT$4take17ha270ce5844af4e09E>:
    pub fn take(&mut self) -> Option<T> {
    80018596:	1101                	addi	sp,sp,-32
    80018598:	ec06                	sd	ra,24(sp)
    8001859a:	e82a                	sd	a0,16(sp)
        mem::take(self)
    8001859c:	ffff5097          	auipc	ra,0xffff5
    800185a0:	5e8080e7          	jalr	1512(ra) # 8000db84 <_ZN4core3mem4take17h8581457864dc1a1fE>
    800185a4:	e42a                	sd	a0,8(sp)
    800185a6:	a009                	j	800185a8 <_ZN4core6option15Option$LT$T$GT$4take17ha270ce5844af4e09E+0x12>
    }
    800185a8:	6522                	ld	a0,8(sp)
    800185aa:	60e2                	ld	ra,24(sp)
    800185ac:	6105                	addi	sp,sp,32
    800185ae:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$4take17he7814b4d71b2ffb7E:

00000000800185b0 <_ZN4core6option15Option$LT$T$GT$4take17he7814b4d71b2ffb7E>:
    pub fn take(&mut self) -> Option<T> {
    800185b0:	1101                	addi	sp,sp,-32
    800185b2:	ec06                	sd	ra,24(sp)
    800185b4:	e82a                	sd	a0,16(sp)
        mem::take(self)
    800185b6:	ffff5097          	auipc	ra,0xffff5
    800185ba:	566080e7          	jalr	1382(ra) # 8000db1c <_ZN4core3mem4take17h07b2f8b5844819d3E>
    800185be:	e42a                	sd	a0,8(sp)
    800185c0:	e02e                	sd	a1,0(sp)
    800185c2:	a009                	j	800185c4 <_ZN4core6option15Option$LT$T$GT$4take17he7814b4d71b2ffb7E+0x14>
    }
    800185c4:	6522                	ld	a0,8(sp)
    800185c6:	6582                	ld	a1,0(sp)
    800185c8:	60e2                	ld	ra,24(sp)
    800185ca:	6105                	addi	sp,sp,32
    800185cc:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE:

00000000800185ce <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE>:
    pub fn ok_or<E>(self, err: E) -> Result<T, E> {
    800185ce:	715d                	addi	sp,sp,-80
    800185d0:	f02e                	sd	a1,32(sp)
    800185d2:	f432                	sd	a2,40(sp)
    800185d4:	fc36                	sd	a3,56(sp)
    800185d6:	e0ba                	sd	a4,64(sp)
    800185d8:	4605                	li	a2,1
            Some(v) => Ok(v),
    800185da:	02c10ba3          	sb	a2,55(sp)
    800185de:	862e                	mv	a2,a1
    800185e0:	4781                	li	a5,0
    800185e2:	ec3a                	sd	a4,24(sp)
    800185e4:	e836                	sd	a3,16(sp)
    800185e6:	e42a                	sd	a0,8(sp)
    800185e8:	00f58463          	beq	a1,a5,800185f0 <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x22>
    800185ec:	a009                	j	800185ee <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x20>
    800185ee:	a829                	j	80018608 <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x3a>
    800185f0:	4501                	li	a0,0
            None => Err(err),
    800185f2:	02a10ba3          	sb	a0,55(sp)
    800185f6:	6542                	ld	a0,16(sp)
    800185f8:	65a2                	ld	a1,8(sp)
    800185fa:	e588                	sd	a0,8(a1)
    800185fc:	6662                	ld	a2,24(sp)
    800185fe:	e990                	sd	a2,16(a1)
    80018600:	4685                	li	a3,1
    80018602:	e194                	sd	a3,0(a1)
        match self {
    80018604:	a821                	j	8001861c <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x4e>
    80018606:	0000                	unimp
            Some(v) => Ok(v),
    80018608:	7522                	ld	a0,40(sp)
    8001860a:	e4aa                	sd	a0,72(sp)
    8001860c:	65a2                	ld	a1,8(sp)
    8001860e:	e588                	sd	a0,8(a1)
    80018610:	4501                	li	a0,0
    80018612:	e188                	sd	a0,0(a1)
    }
    80018614:	a021                	j	8001861c <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x4e>
    80018616:	6161                	addi	sp,sp,80
    80018618:	8082                	ret
    8001861a:	bff5                	j	80018616 <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x48>
    8001861c:	03714503          	lbu	a0,55(sp)
    80018620:	8905                	andi	a0,a0,1
    80018622:	fd65                	bnez	a0,8001861a <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x4c>
    80018624:	bfcd                	j	80018616 <_ZN4core6option15Option$LT$T$GT$5ok_or17h3ec557110a482f7cE+0x48>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE:

0000000080018626 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE>:
    pub fn ok_or<E>(self, err: E) -> Result<T, E> {
    80018626:	7139                	addi	sp,sp,-64
    80018628:	ec2e                	sd	a1,24(sp)
    8001862a:	f432                	sd	a2,40(sp)
    8001862c:	f836                	sd	a3,48(sp)
    8001862e:	4705                	li	a4,1
            Some(v) => Ok(v),
    80018630:	02e103a3          	sb	a4,39(sp)
    80018634:	00b03733          	snez	a4,a1
    80018638:	4781                	li	a5,0
    8001863a:	e836                	sd	a3,16(sp)
    8001863c:	e432                	sd	a2,8(sp)
    8001863e:	e02a                	sd	a0,0(sp)
    80018640:	00f58463          	beq	a1,a5,80018648 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x22>
    80018644:	a009                	j	80018646 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x20>
    80018646:	a829                	j	80018660 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x3a>
    80018648:	4501                	li	a0,0
            None => Err(err),
    8001864a:	02a103a3          	sb	a0,39(sp)
    8001864e:	6522                	ld	a0,8(sp)
    80018650:	6582                	ld	a1,0(sp)
    80018652:	e588                	sd	a0,8(a1)
    80018654:	6642                	ld	a2,16(sp)
    80018656:	e990                	sd	a2,16(a1)
    80018658:	4685                	li	a3,1
    8001865a:	e194                	sd	a3,0(a1)
        match self {
    8001865c:	a821                	j	80018674 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x4e>
    8001865e:	0000                	unimp
            Some(v) => Ok(v),
    80018660:	6562                	ld	a0,24(sp)
    80018662:	fc2a                	sd	a0,56(sp)
    80018664:	6582                	ld	a1,0(sp)
    80018666:	e588                	sd	a0,8(a1)
    80018668:	4501                	li	a0,0
    8001866a:	e188                	sd	a0,0(a1)
    }
    8001866c:	a021                	j	80018674 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x4e>
    8001866e:	6121                	addi	sp,sp,64
    80018670:	8082                	ret
    80018672:	bff5                	j	8001866e <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x48>
    80018674:	02714503          	lbu	a0,39(sp)
    80018678:	8905                	andi	a0,a0,1
    8001867a:	fd65                	bnez	a0,80018672 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x4c>
    8001867c:	bfcd                	j	8001866e <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE+0x48>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E:

000000008001867e <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E>:
    pub fn ok_or<E>(self, err: E) -> Result<T, E> {
    8001867e:	7139                	addi	sp,sp,-64
    80018680:	e42a                	sd	a0,8(sp)
    80018682:	e82e                	sd	a1,16(sp)
    80018684:	4585                	li	a1,1
            Some(v) => Ok(v),
    80018686:	02b107a3          	sb	a1,47(sp)
    8001868a:	85aa                	mv	a1,a0
    8001868c:	4601                	li	a2,0
    8001868e:	00c50463          	beq	a0,a2,80018696 <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x18>
    80018692:	a009                	j	80018694 <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x16>
    80018694:	a801                	j	800186a4 <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x26>
    80018696:	4501                	li	a0,0
            None => Err(err),
    80018698:	02a107a3          	sb	a0,47(sp)
    8001869c:	4505                	li	a0,1
    8001869e:	ec2a                	sd	a0,24(sp)
        match self {
    800186a0:	a829                	j	800186ba <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x3c>
    800186a2:	0000                	unimp
            Some(v) => Ok(v),
    800186a4:	6542                	ld	a0,16(sp)
    800186a6:	fc2a                	sd	a0,56(sp)
    800186a8:	f02a                	sd	a0,32(sp)
    800186aa:	4501                	li	a0,0
    800186ac:	ec2a                	sd	a0,24(sp)
    }
    800186ae:	a031                	j	800186ba <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x3c>
    800186b0:	6562                	ld	a0,24(sp)
    800186b2:	7582                	ld	a1,32(sp)
    800186b4:	6121                	addi	sp,sp,64
    800186b6:	8082                	ret
    800186b8:	bfe5                	j	800186b0 <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x32>
    800186ba:	02f14503          	lbu	a0,47(sp)
    800186be:	8905                	andi	a0,a0,1
    800186c0:	fd65                	bnez	a0,800186b8 <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x3a>
    800186c2:	b7fd                	j	800186b0 <_ZN4core6option15Option$LT$T$GT$5ok_or17h9d09e62ebc7f9416E+0x32>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E:

00000000800186c4 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E>:
    pub fn ok_or<E>(self, err: E) -> Result<T, E> {
    800186c4:	7179                	addi	sp,sp,-48
    800186c6:	e42a                	sd	a0,8(sp)
    800186c8:	4585                	li	a1,1
            Some(v) => Ok(v),
    800186ca:	00b10fa3          	sb	a1,31(sp)
    800186ce:	00a035b3          	snez	a1,a0
    800186d2:	4601                	li	a2,0
    800186d4:	00c50463          	beq	a0,a2,800186dc <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x18>
    800186d8:	a009                	j	800186da <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x16>
    800186da:	a039                	j	800186e8 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x24>
    800186dc:	4501                	li	a0,0
            None => Err(err),
    800186de:	00a10fa3          	sb	a0,31(sp)
    800186e2:	e82a                	sd	a0,16(sp)
        match self {
    800186e4:	a811                	j	800186f8 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x34>
    800186e6:	0000                	unimp
            Some(v) => Ok(v),
    800186e8:	6522                	ld	a0,8(sp)
    800186ea:	f42a                	sd	a0,40(sp)
    800186ec:	e82a                	sd	a0,16(sp)
    }
    800186ee:	a029                	j	800186f8 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x34>
    800186f0:	6542                	ld	a0,16(sp)
    800186f2:	6145                	addi	sp,sp,48
    800186f4:	8082                	ret
    800186f6:	bfed                	j	800186f0 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x2c>
    800186f8:	01f14503          	lbu	a0,31(sp)
    800186fc:	8905                	andi	a0,a0,1
    800186fe:	fd65                	bnez	a0,800186f6 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x32>
    80018700:	bfc5                	j	800186f0 <_ZN4core6option15Option$LT$T$GT$5ok_or17hb99ca74dbe62dcd2E+0x2c>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E:

0000000080018702 <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E>:
    pub fn ok_or<E>(self, err: E) -> Result<T, E> {
    80018702:	7179                	addi	sp,sp,-48
    80018704:	e42a                	sd	a0,8(sp)
    80018706:	4585                	li	a1,1
            Some(v) => Ok(v),
    80018708:	00b10fa3          	sb	a1,31(sp)
    8001870c:	00a035b3          	snez	a1,a0
    80018710:	4601                	li	a2,0
    80018712:	00c50463          	beq	a0,a2,8001871a <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x18>
    80018716:	a009                	j	80018718 <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x16>
    80018718:	a039                	j	80018726 <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x24>
    8001871a:	4501                	li	a0,0
            None => Err(err),
    8001871c:	00a10fa3          	sb	a0,31(sp)
    80018720:	e82a                	sd	a0,16(sp)
        match self {
    80018722:	a811                	j	80018736 <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x34>
    80018724:	0000                	unimp
            Some(v) => Ok(v),
    80018726:	6522                	ld	a0,8(sp)
    80018728:	f42a                	sd	a0,40(sp)
    8001872a:	e82a                	sd	a0,16(sp)
    }
    8001872c:	a029                	j	80018736 <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x34>
    8001872e:	6542                	ld	a0,16(sp)
    80018730:	6145                	addi	sp,sp,48
    80018732:	8082                	ret
    80018734:	bfed                	j	8001872e <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x2c>
    80018736:	01f14503          	lbu	a0,31(sp)
    8001873a:	8905                	andi	a0,a0,1
    8001873c:	fd65                	bnez	a0,80018734 <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x32>
    8001873e:	bfc5                	j	8001872e <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E+0x2c>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E:

0000000080018740 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E>:
    pub fn ok_or<E>(self, err: E) -> Result<T, E> {
    80018740:	7179                	addi	sp,sp,-48
    80018742:	e42a                	sd	a0,8(sp)
    80018744:	4585                	li	a1,1
            Some(v) => Ok(v),
    80018746:	00b10fa3          	sb	a1,31(sp)
    8001874a:	00a035b3          	snez	a1,a0
    8001874e:	4601                	li	a2,0
    80018750:	00c50463          	beq	a0,a2,80018758 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x18>
    80018754:	a009                	j	80018756 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x16>
    80018756:	a039                	j	80018764 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x24>
    80018758:	4501                	li	a0,0
            None => Err(err),
    8001875a:	00a10fa3          	sb	a0,31(sp)
    8001875e:	e82a                	sd	a0,16(sp)
        match self {
    80018760:	a811                	j	80018774 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x34>
    80018762:	0000                	unimp
            Some(v) => Ok(v),
    80018764:	6522                	ld	a0,8(sp)
    80018766:	f42a                	sd	a0,40(sp)
    80018768:	e82a                	sd	a0,16(sp)
    }
    8001876a:	a029                	j	80018774 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x34>
    8001876c:	6542                	ld	a0,16(sp)
    8001876e:	6145                	addi	sp,sp,48
    80018770:	8082                	ret
    80018772:	bfed                	j	8001876c <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x2c>
    80018774:	01f14503          	lbu	a0,31(sp)
    80018778:	8905                	andi	a0,a0,1
    8001877a:	fd65                	bnez	a0,80018772 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x32>
    8001877c:	bfc5                	j	8001876c <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E+0x2c>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E:

000000008001877e <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E>:
    pub fn ok_or<E>(self, err: E) -> Result<T, E> {
    8001877e:	7139                	addi	sp,sp,-64
    80018780:	87b2                	mv	a5,a2
    80018782:	882e                	mv	a6,a1
    80018784:	cc2e                	sw	a1,24(sp)
    80018786:	ce32                	sw	a2,28(sp)
    80018788:	f436                	sd	a3,40(sp)
    8001878a:	f83a                	sd	a4,48(sp)
    8001878c:	4605                	li	a2,1
            Some(v) => Ok(v),
    8001878e:	02c103a3          	sb	a2,39(sp)
    80018792:	1582                	slli	a1,a1,0x20
    80018794:	9181                	srli	a1,a1,0x20
    80018796:	4601                	li	a2,0
    80018798:	e83a                	sd	a4,16(sp)
    8001879a:	e436                	sd	a3,8(sp)
    8001879c:	e02a                	sd	a0,0(sp)
    8001879e:	00c58463          	beq	a1,a2,800187a6 <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x28>
    800187a2:	a009                	j	800187a4 <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x26>
    800187a4:	a829                	j	800187be <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x40>
    800187a6:	4501                	li	a0,0
            None => Err(err),
    800187a8:	02a103a3          	sb	a0,39(sp)
    800187ac:	6522                	ld	a0,8(sp)
    800187ae:	6582                	ld	a1,0(sp)
    800187b0:	e588                	sd	a0,8(a1)
    800187b2:	6642                	ld	a2,16(sp)
    800187b4:	e990                	sd	a2,16(a1)
    800187b6:	4685                	li	a3,1
    800187b8:	c194                	sw	a3,0(a1)
        match self {
    800187ba:	a821                	j	800187d2 <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x54>
    800187bc:	0000                	unimp
            Some(v) => Ok(v),
    800187be:	4572                	lw	a0,28(sp)
    800187c0:	de2a                	sw	a0,60(sp)
    800187c2:	6582                	ld	a1,0(sp)
    800187c4:	c1c8                	sw	a0,4(a1)
    800187c6:	4501                	li	a0,0
    800187c8:	c188                	sw	a0,0(a1)
    }
    800187ca:	a021                	j	800187d2 <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x54>
    800187cc:	6121                	addi	sp,sp,64
    800187ce:	8082                	ret
    800187d0:	bff5                	j	800187cc <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x4e>
    800187d2:	02714503          	lbu	a0,39(sp)
    800187d6:	8905                	andi	a0,a0,1
    800187d8:	fd65                	bnez	a0,800187d0 <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x52>
    800187da:	bfcd                	j	800187cc <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E+0x4e>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E:

00000000800187dc <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E>:
    pub fn as_mut(&mut self) -> Option<&mut T> {
    800187dc:	1101                	addi	sp,sp,-32
    800187de:	e82a                	sd	a0,16(sp)
            Some(ref mut x) => Some(x),
    800187e0:	610c                	ld	a1,0(a0)
    800187e2:	4601                	li	a2,0
    800187e4:	e02a                	sd	a0,0(sp)
    800187e6:	00c58463          	beq	a1,a2,800187ee <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E+0x12>
    800187ea:	a009                	j	800187ec <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E+0x10>
    800187ec:	a029                	j	800187f6 <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E+0x1a>
    800187ee:	4501                	li	a0,0
            None => None,
    800187f0:	e42a                	sd	a0,8(sp)
        match *self {
    800187f2:	a801                	j	80018802 <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E+0x26>
    800187f4:	0000                	unimp
            Some(ref mut x) => Some(x),
    800187f6:	6502                	ld	a0,0(sp)
    800187f8:	00850593          	addi	a1,a0,8
    800187fc:	ec2e                	sd	a1,24(sp)
    800187fe:	e42e                	sd	a1,8(sp)
        match *self {
    80018800:	a009                	j	80018802 <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E+0x26>
    }
    80018802:	6522                	ld	a0,8(sp)
    80018804:	6105                	addi	sp,sp,32
    80018806:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E:

0000000080018808 <_ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E>:
    pub fn as_mut(&mut self) -> Option<&mut T> {
    80018808:	1101                	addi	sp,sp,-32
    8001880a:	e82a                	sd	a0,16(sp)
            Some(ref mut x) => Some(x),
    8001880c:	610c                	ld	a1,0(a0)
    8001880e:	00b03633          	snez	a2,a1
    80018812:	4681                	li	a3,0
    80018814:	e02a                	sd	a0,0(sp)
    80018816:	00d58463          	beq	a1,a3,8001881e <_ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E+0x16>
    8001881a:	a009                	j	8001881c <_ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E+0x14>
    8001881c:	a029                	j	80018826 <_ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E+0x1e>
    8001881e:	4501                	li	a0,0
            None => None,
    80018820:	e42a                	sd	a0,8(sp)
        match *self {
    80018822:	a031                	j	8001882e <_ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E+0x26>
    80018824:	0000                	unimp
            Some(ref mut x) => Some(x),
    80018826:	6502                	ld	a0,0(sp)
    80018828:	ec2a                	sd	a0,24(sp)
    8001882a:	e42a                	sd	a0,8(sp)
        match *self {
    8001882c:	a009                	j	8001882e <_ZN4core6option15Option$LT$T$GT$6as_mut17hd821ca3c2937cf56E+0x26>
    }
    8001882e:	6522                	ld	a0,8(sp)
    80018830:	6105                	addi	sp,sp,32
    80018832:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE:

0000000080018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>:
    pub fn as_mut(&mut self) -> Option<&mut T> {
    80018834:	1101                	addi	sp,sp,-32
    80018836:	e82a                	sd	a0,16(sp)
            Some(ref mut x) => Some(x),
    80018838:	610c                	ld	a1,0(a0)
    8001883a:	00b03633          	snez	a2,a1
    8001883e:	4681                	li	a3,0
    80018840:	e02a                	sd	a0,0(sp)
    80018842:	00d58463          	beq	a1,a3,8001884a <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE+0x16>
    80018846:	a009                	j	80018848 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE+0x14>
    80018848:	a029                	j	80018852 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE+0x1e>
    8001884a:	4501                	li	a0,0
            None => None,
    8001884c:	e42a                	sd	a0,8(sp)
        match *self {
    8001884e:	a031                	j	8001885a <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE+0x26>
    80018850:	0000                	unimp
            Some(ref mut x) => Some(x),
    80018852:	6502                	ld	a0,0(sp)
    80018854:	ec2a                	sd	a0,24(sp)
    80018856:	e42a                	sd	a0,8(sp)
        match *self {
    80018858:	a009                	j	8001885a <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE+0x26>
    }
    8001885a:	6522                	ld	a0,8(sp)
    8001885c:	6105                	addi	sp,sp,32
    8001885e:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE:

0000000080018860 <_ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE>:
    pub const fn as_ref(&self) -> Option<&T> {
    80018860:	1101                	addi	sp,sp,-32
    80018862:	e82a                	sd	a0,16(sp)
            Some(ref x) => Some(x),
    80018864:	610c                	ld	a1,0(a0)
    80018866:	00b03633          	snez	a2,a1
    8001886a:	4681                	li	a3,0
    8001886c:	e02a                	sd	a0,0(sp)
    8001886e:	00d58463          	beq	a1,a3,80018876 <_ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE+0x16>
    80018872:	a009                	j	80018874 <_ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE+0x14>
    80018874:	a029                	j	8001887e <_ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE+0x1e>
    80018876:	4501                	li	a0,0
            None => None,
    80018878:	e42a                	sd	a0,8(sp)
        match *self {
    8001887a:	a031                	j	80018886 <_ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE+0x26>
    8001887c:	0000                	unimp
            Some(ref x) => Some(x),
    8001887e:	6502                	ld	a0,0(sp)
    80018880:	ec2a                	sd	a0,24(sp)
    80018882:	e42a                	sd	a0,8(sp)
        match *self {
    80018884:	a009                	j	80018886 <_ZN4core6option15Option$LT$T$GT$6as_ref17h34ab4018664588fcE+0x26>
    }
    80018886:	6522                	ld	a0,8(sp)
    80018888:	6105                	addi	sp,sp,32
    8001888a:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E:

000000008001888c <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E>:
    pub const fn as_ref(&self) -> Option<&T> {
    8001888c:	1101                	addi	sp,sp,-32
    8001888e:	e82a                	sd	a0,16(sp)
            Some(ref x) => Some(x),
    80018890:	610c                	ld	a1,0(a0)
    80018892:	00b03633          	snez	a2,a1
    80018896:	4681                	li	a3,0
    80018898:	e02a                	sd	a0,0(sp)
    8001889a:	00d58463          	beq	a1,a3,800188a2 <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E+0x16>
    8001889e:	a009                	j	800188a0 <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E+0x14>
    800188a0:	a029                	j	800188aa <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E+0x1e>
    800188a2:	4501                	li	a0,0
            None => None,
    800188a4:	e42a                	sd	a0,8(sp)
        match *self {
    800188a6:	a031                	j	800188b2 <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E+0x26>
    800188a8:	0000                	unimp
            Some(ref x) => Some(x),
    800188aa:	6502                	ld	a0,0(sp)
    800188ac:	ec2a                	sd	a0,24(sp)
    800188ae:	e42a                	sd	a0,8(sp)
        match *self {
    800188b0:	a009                	j	800188b2 <_ZN4core6option15Option$LT$T$GT$6as_ref17h36a7b53c63218e32E+0x26>
    }
    800188b2:	6522                	ld	a0,8(sp)
    800188b4:	6105                	addi	sp,sp,32
    800188b6:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E:

00000000800188b8 <_ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E>:
    pub const fn as_ref(&self) -> Option<&T> {
    800188b8:	1101                	addi	sp,sp,-32
    800188ba:	e82a                	sd	a0,16(sp)
            Some(ref x) => Some(x),
    800188bc:	610c                	ld	a1,0(a0)
    800188be:	4601                	li	a2,0
    800188c0:	e02a                	sd	a0,0(sp)
    800188c2:	00c58463          	beq	a1,a2,800188ca <_ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E+0x12>
    800188c6:	a009                	j	800188c8 <_ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E+0x10>
    800188c8:	a029                	j	800188d2 <_ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E+0x1a>
    800188ca:	4501                	li	a0,0
            None => None,
    800188cc:	e42a                	sd	a0,8(sp)
        match *self {
    800188ce:	a801                	j	800188de <_ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E+0x26>
    800188d0:	0000                	unimp
            Some(ref x) => Some(x),
    800188d2:	6502                	ld	a0,0(sp)
    800188d4:	00850593          	addi	a1,a0,8
    800188d8:	ec2e                	sd	a1,24(sp)
    800188da:	e42e                	sd	a1,8(sp)
        match *self {
    800188dc:	a009                	j	800188de <_ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E+0x26>
    }
    800188de:	6522                	ld	a0,8(sp)
    800188e0:	6105                	addi	sp,sp,32
    800188e2:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE:

00000000800188e4 <_ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE>:
    pub const fn as_ref(&self) -> Option<&T> {
    800188e4:	1101                	addi	sp,sp,-32
    800188e6:	e82a                	sd	a0,16(sp)
            Some(ref x) => Some(x),
    800188e8:	610c                	ld	a1,0(a0)
    800188ea:	00b03633          	snez	a2,a1
    800188ee:	4681                	li	a3,0
    800188f0:	e02a                	sd	a0,0(sp)
    800188f2:	00d58463          	beq	a1,a3,800188fa <_ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE+0x16>
    800188f6:	a009                	j	800188f8 <_ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE+0x14>
    800188f8:	a029                	j	80018902 <_ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE+0x1e>
    800188fa:	4501                	li	a0,0
            None => None,
    800188fc:	e42a                	sd	a0,8(sp)
        match *self {
    800188fe:	a031                	j	8001890a <_ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE+0x26>
    80018900:	0000                	unimp
            Some(ref x) => Some(x),
    80018902:	6502                	ld	a0,0(sp)
    80018904:	ec2a                	sd	a0,24(sp)
    80018906:	e42a                	sd	a0,8(sp)
        match *self {
    80018908:	a009                	j	8001890a <_ZN4core6option15Option$LT$T$GT$6as_ref17h830d3b27dc38f66cE+0x26>
    }
    8001890a:	6522                	ld	a0,8(sp)
    8001890c:	6105                	addi	sp,sp,32
    8001890e:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6expect17h079c333e627a1d46E:

0000000080018910 <_ZN4core6option15Option$LT$T$GT$6expect17h079c333e627a1d46E>:
    pub fn expect(self, msg: &str) -> T {
    80018910:	7139                	addi	sp,sp,-64
    80018912:	f02a                	sd	a0,32(sp)
    80018914:	f42e                	sd	a1,40(sp)
    80018916:	f832                	sd	a2,48(sp)
            Some(val) => val,
    80018918:	00a03733          	snez	a4,a0
    8001891c:	4781                	li	a5,0
    8001891e:	ec36                	sd	a3,24(sp)
    80018920:	e832                	sd	a2,16(sp)
    80018922:	e42e                	sd	a1,8(sp)
    80018924:	00f50463          	beq	a0,a5,8001892c <_ZN4core6option15Option$LT$T$GT$6expect17h079c333e627a1d46E+0x1c>
    80018928:	a009                	j	8001892a <_ZN4core6option15Option$LT$T$GT$6expect17h079c333e627a1d46E+0x1a>
    8001892a:	a811                	j	8001893e <_ZN4core6option15Option$LT$T$GT$6expect17h079c333e627a1d46E+0x2e>
            None => expect_failed(msg),
    8001892c:	6522                	ld	a0,8(sp)
    8001892e:	65c2                	ld	a1,16(sp)
    80018930:	6662                	ld	a2,24(sp)
    80018932:	00008097          	auipc	ra,0x8
    80018936:	216080e7          	jalr	534(ra) # 80020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>
    8001893a:	0000                	unimp
        match self {
    8001893c:	0000                	unimp
            Some(val) => val,
    8001893e:	7502                	ld	a0,32(sp)
    80018940:	fc2a                	sd	a0,56(sp)
    }
    80018942:	6121                	addi	sp,sp,64
    80018944:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6expect17h676c969740df3110E:

0000000080018946 <_ZN4core6option15Option$LT$T$GT$6expect17h676c969740df3110E>:
    pub fn expect(self, msg: &str) -> T {
    80018946:	7139                	addi	sp,sp,-64
    80018948:	f02a                	sd	a0,32(sp)
    8001894a:	f42e                	sd	a1,40(sp)
    8001894c:	f832                	sd	a2,48(sp)
            Some(val) => val,
    8001894e:	00a03733          	snez	a4,a0
    80018952:	4781                	li	a5,0
    80018954:	ec36                	sd	a3,24(sp)
    80018956:	e832                	sd	a2,16(sp)
    80018958:	e42e                	sd	a1,8(sp)
    8001895a:	00f50463          	beq	a0,a5,80018962 <_ZN4core6option15Option$LT$T$GT$6expect17h676c969740df3110E+0x1c>
    8001895e:	a009                	j	80018960 <_ZN4core6option15Option$LT$T$GT$6expect17h676c969740df3110E+0x1a>
    80018960:	a811                	j	80018974 <_ZN4core6option15Option$LT$T$GT$6expect17h676c969740df3110E+0x2e>
            None => expect_failed(msg),
    80018962:	6522                	ld	a0,8(sp)
    80018964:	65c2                	ld	a1,16(sp)
    80018966:	6662                	ld	a2,24(sp)
    80018968:	00008097          	auipc	ra,0x8
    8001896c:	1e0080e7          	jalr	480(ra) # 80020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>
    80018970:	0000                	unimp
        match self {
    80018972:	0000                	unimp
            Some(val) => val,
    80018974:	7502                	ld	a0,32(sp)
    80018976:	fc2a                	sd	a0,56(sp)
    }
    80018978:	6121                	addi	sp,sp,64
    8001897a:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6expect17h69fb57eecd79a791E:

000000008001897c <_ZN4core6option15Option$LT$T$GT$6expect17h69fb57eecd79a791E>:
    pub fn expect(self, msg: &str) -> T {
    8001897c:	7139                	addi	sp,sp,-64
    8001897e:	f82e                	sd	a1,48(sp)
    80018980:	fc32                	sd	a2,56(sp)
            Some(val) => val,
    80018982:	6118                	ld	a4,0(a0)
    80018984:	4781                	li	a5,0
    80018986:	ec36                	sd	a3,24(sp)
    80018988:	e832                	sd	a2,16(sp)
    8001898a:	e42e                	sd	a1,8(sp)
    8001898c:	e02a                	sd	a0,0(sp)
    8001898e:	00f70463          	beq	a4,a5,80018996 <_ZN4core6option15Option$LT$T$GT$6expect17h69fb57eecd79a791E+0x1a>
    80018992:	a009                	j	80018994 <_ZN4core6option15Option$LT$T$GT$6expect17h69fb57eecd79a791E+0x18>
    80018994:	a811                	j	800189a8 <_ZN4core6option15Option$LT$T$GT$6expect17h69fb57eecd79a791E+0x2c>
            None => expect_failed(msg),
    80018996:	6522                	ld	a0,8(sp)
    80018998:	65c2                	ld	a1,16(sp)
    8001899a:	6662                	ld	a2,24(sp)
    8001899c:	00008097          	auipc	ra,0x8
    800189a0:	1ac080e7          	jalr	428(ra) # 80020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>
    800189a4:	0000                	unimp
        match self {
    800189a6:	0000                	unimp
            Some(val) => val,
    800189a8:	6502                	ld	a0,0(sp)
    800189aa:	690c                	ld	a1,16(a0)
    800189ac:	f42e                	sd	a1,40(sp)
    800189ae:	6510                	ld	a2,8(a0)
    800189b0:	f032                	sd	a2,32(sp)
    }
    800189b2:	8532                	mv	a0,a2
    800189b4:	6121                	addi	sp,sp,64
    800189b6:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6expect17h8b2dcfd440535df6E:

00000000800189b8 <_ZN4core6option15Option$LT$T$GT$6expect17h8b2dcfd440535df6E>:
    pub fn expect(self, msg: &str) -> T {
    800189b8:	7139                	addi	sp,sp,-64
    800189ba:	ec2a                	sd	a0,24(sp)
    800189bc:	f02e                	sd	a1,32(sp)
    800189be:	f432                	sd	a2,40(sp)
    800189c0:	f836                	sd	a3,48(sp)
            Some(val) => val,
    800189c2:	85aa                	mv	a1,a0
    800189c4:	4781                	li	a5,0
    800189c6:	e83a                	sd	a4,16(sp)
    800189c8:	e436                	sd	a3,8(sp)
    800189ca:	e032                	sd	a2,0(sp)
    800189cc:	00f50463          	beq	a0,a5,800189d4 <_ZN4core6option15Option$LT$T$GT$6expect17h8b2dcfd440535df6E+0x1c>
    800189d0:	a009                	j	800189d2 <_ZN4core6option15Option$LT$T$GT$6expect17h8b2dcfd440535df6E+0x1a>
    800189d2:	a811                	j	800189e6 <_ZN4core6option15Option$LT$T$GT$6expect17h8b2dcfd440535df6E+0x2e>
            None => expect_failed(msg),
    800189d4:	6502                	ld	a0,0(sp)
    800189d6:	65a2                	ld	a1,8(sp)
    800189d8:	6642                	ld	a2,16(sp)
    800189da:	00008097          	auipc	ra,0x8
    800189de:	16e080e7          	jalr	366(ra) # 80020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>
    800189e2:	0000                	unimp
        match self {
    800189e4:	0000                	unimp
            Some(val) => val,
    800189e6:	7502                	ld	a0,32(sp)
    800189e8:	fc2a                	sd	a0,56(sp)
    }
    800189ea:	6121                	addi	sp,sp,64
    800189ec:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6expect17ha380aa9e3ff77169E:

00000000800189ee <_ZN4core6option15Option$LT$T$GT$6expect17ha380aa9e3ff77169E>:
    pub fn expect(self, msg: &str) -> T {
    800189ee:	7139                	addi	sp,sp,-64
    800189f0:	f02a                	sd	a0,32(sp)
    800189f2:	f42e                	sd	a1,40(sp)
    800189f4:	f832                	sd	a2,48(sp)
            Some(val) => val,
    800189f6:	00a03733          	snez	a4,a0
    800189fa:	4781                	li	a5,0
    800189fc:	ec36                	sd	a3,24(sp)
    800189fe:	e832                	sd	a2,16(sp)
    80018a00:	e42e                	sd	a1,8(sp)
    80018a02:	00f50463          	beq	a0,a5,80018a0a <_ZN4core6option15Option$LT$T$GT$6expect17ha380aa9e3ff77169E+0x1c>
    80018a06:	a009                	j	80018a08 <_ZN4core6option15Option$LT$T$GT$6expect17ha380aa9e3ff77169E+0x1a>
    80018a08:	a811                	j	80018a1c <_ZN4core6option15Option$LT$T$GT$6expect17ha380aa9e3ff77169E+0x2e>
            None => expect_failed(msg),
    80018a0a:	6522                	ld	a0,8(sp)
    80018a0c:	65c2                	ld	a1,16(sp)
    80018a0e:	6662                	ld	a2,24(sp)
    80018a10:	00008097          	auipc	ra,0x8
    80018a14:	138080e7          	jalr	312(ra) # 80020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>
    80018a18:	0000                	unimp
        match self {
    80018a1a:	0000                	unimp
            Some(val) => val,
    80018a1c:	7502                	ld	a0,32(sp)
    80018a1e:	fc2a                	sd	a0,56(sp)
    }
    80018a20:	6121                	addi	sp,sp,64
    80018a22:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6expect17ha6d9a97cb631f11cE:

0000000080018a24 <_ZN4core6option15Option$LT$T$GT$6expect17ha6d9a97cb631f11cE>:
    pub fn expect(self, msg: &str) -> T {
    80018a24:	7139                	addi	sp,sp,-64
    80018a26:	ec2a                	sd	a0,24(sp)
    80018a28:	f02e                	sd	a1,32(sp)
    80018a2a:	f432                	sd	a2,40(sp)
    80018a2c:	f836                	sd	a3,48(sp)
            Some(val) => val,
    80018a2e:	85aa                	mv	a1,a0
    80018a30:	4781                	li	a5,0
    80018a32:	e83a                	sd	a4,16(sp)
    80018a34:	e436                	sd	a3,8(sp)
    80018a36:	e032                	sd	a2,0(sp)
    80018a38:	00f50463          	beq	a0,a5,80018a40 <_ZN4core6option15Option$LT$T$GT$6expect17ha6d9a97cb631f11cE+0x1c>
    80018a3c:	a009                	j	80018a3e <_ZN4core6option15Option$LT$T$GT$6expect17ha6d9a97cb631f11cE+0x1a>
    80018a3e:	a811                	j	80018a52 <_ZN4core6option15Option$LT$T$GT$6expect17ha6d9a97cb631f11cE+0x2e>
            None => expect_failed(msg),
    80018a40:	6502                	ld	a0,0(sp)
    80018a42:	65a2                	ld	a1,8(sp)
    80018a44:	6642                	ld	a2,16(sp)
    80018a46:	00008097          	auipc	ra,0x8
    80018a4a:	102080e7          	jalr	258(ra) # 80020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>
    80018a4e:	0000                	unimp
        match self {
    80018a50:	0000                	unimp
            Some(val) => val,
    80018a52:	7502                	ld	a0,32(sp)
    80018a54:	fc2a                	sd	a0,56(sp)
    }
    80018a56:	6121                	addi	sp,sp,64
    80018a58:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E:

0000000080018a5a <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E>:
    pub fn expect(self, msg: &str) -> T {
    80018a5a:	7139                	addi	sp,sp,-64
    80018a5c:	f02a                	sd	a0,32(sp)
    80018a5e:	f42e                	sd	a1,40(sp)
    80018a60:	f832                	sd	a2,48(sp)
            Some(val) => val,
    80018a62:	00a03733          	snez	a4,a0
    80018a66:	4781                	li	a5,0
    80018a68:	ec36                	sd	a3,24(sp)
    80018a6a:	e832                	sd	a2,16(sp)
    80018a6c:	e42e                	sd	a1,8(sp)
    80018a6e:	00f50463          	beq	a0,a5,80018a76 <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E+0x1c>
    80018a72:	a009                	j	80018a74 <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E+0x1a>
    80018a74:	a811                	j	80018a88 <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E+0x2e>
            None => expect_failed(msg),
    80018a76:	6522                	ld	a0,8(sp)
    80018a78:	65c2                	ld	a1,16(sp)
    80018a7a:	6662                	ld	a2,24(sp)
    80018a7c:	00008097          	auipc	ra,0x8
    80018a80:	0cc080e7          	jalr	204(ra) # 80020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>
    80018a84:	0000                	unimp
        match self {
    80018a86:	0000                	unimp
            Some(val) => val,
    80018a88:	7502                	ld	a0,32(sp)
    80018a8a:	fc2a                	sd	a0,56(sp)
    }
    80018a8c:	6121                	addi	sp,sp,64
    80018a8e:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h0825b24fc19d61e6E:

0000000080018a90 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0825b24fc19d61e6E>:
    pub const fn unwrap(self) -> T {
    80018a90:	1101                	addi	sp,sp,-32
    80018a92:	e42a                	sd	a0,8(sp)
    80018a94:	e82e                	sd	a1,16(sp)
            Some(val) => val,
    80018a96:	85aa                	mv	a1,a0
    80018a98:	4681                	li	a3,0
    80018a9a:	e032                	sd	a2,0(sp)
    80018a9c:	00d50463          	beq	a0,a3,80018aa4 <.LBB36_5>
    80018aa0:	a009                	j	80018aa2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0825b24fc19d61e6E+0x12>
    80018aa2:	a831                	j	80018abe <.LBB36_5+0x1a>

0000000080018aa4 <.LBB36_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018aa4:	00010517          	auipc	a0,0x10
    80018aa8:	9dc50513          	addi	a0,a0,-1572 # 80028480 <.L__unnamed_1>
    80018aac:	02b00593          	li	a1,43
    80018ab0:	6602                	ld	a2,0(sp)
    80018ab2:	00008097          	auipc	ra,0x8
    80018ab6:	218080e7          	jalr	536(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018aba:	0000                	unimp
        match self {
    80018abc:	0000                	unimp
            Some(val) => val,
    80018abe:	6542                	ld	a0,16(sp)
    80018ac0:	ec2a                	sd	a0,24(sp)
    }
    80018ac2:	6105                	addi	sp,sp,32
    80018ac4:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h0872d29ee4f7c5ceE:

0000000080018ac6 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0872d29ee4f7c5ceE>:
    pub const fn unwrap(self) -> T {
    80018ac6:	1101                	addi	sp,sp,-32
    80018ac8:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018aca:	00a03633          	snez	a2,a0
    80018ace:	4681                	li	a3,0
    80018ad0:	e42e                	sd	a1,8(sp)
    80018ad2:	00d50463          	beq	a0,a3,80018ada <.LBB37_5>
    80018ad6:	a009                	j	80018ad8 <_ZN4core6option15Option$LT$T$GT$6unwrap17h0872d29ee4f7c5ceE+0x12>
    80018ad8:	a831                	j	80018af4 <.LBB37_5+0x1a>

0000000080018ada <.LBB37_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018ada:	00010517          	auipc	a0,0x10
    80018ade:	9a650513          	addi	a0,a0,-1626 # 80028480 <.L__unnamed_1>
    80018ae2:	02b00593          	li	a1,43
    80018ae6:	6622                	ld	a2,8(sp)
    80018ae8:	00008097          	auipc	ra,0x8
    80018aec:	1e2080e7          	jalr	482(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018af0:	0000                	unimp
        match self {
    80018af2:	0000                	unimp
            Some(val) => val,
    80018af4:	6542                	ld	a0,16(sp)
    80018af6:	ec2a                	sd	a0,24(sp)
    }
    80018af8:	6105                	addi	sp,sp,32
    80018afa:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h133781e0ae165066E:

0000000080018afc <_ZN4core6option15Option$LT$T$GT$6unwrap17h133781e0ae165066E>:
    pub const fn unwrap(self) -> T {
    80018afc:	1101                	addi	sp,sp,-32
    80018afe:	e42a                	sd	a0,8(sp)
    80018b00:	e82e                	sd	a1,16(sp)
            Some(val) => val,
    80018b02:	85aa                	mv	a1,a0
    80018b04:	4681                	li	a3,0
    80018b06:	e032                	sd	a2,0(sp)
    80018b08:	00d50463          	beq	a0,a3,80018b10 <.LBB38_5>
    80018b0c:	a009                	j	80018b0e <_ZN4core6option15Option$LT$T$GT$6unwrap17h133781e0ae165066E+0x12>
    80018b0e:	a831                	j	80018b2a <.LBB38_5+0x1a>

0000000080018b10 <.LBB38_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018b10:	00010517          	auipc	a0,0x10
    80018b14:	97050513          	addi	a0,a0,-1680 # 80028480 <.L__unnamed_1>
    80018b18:	02b00593          	li	a1,43
    80018b1c:	6602                	ld	a2,0(sp)
    80018b1e:	00008097          	auipc	ra,0x8
    80018b22:	1ac080e7          	jalr	428(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018b26:	0000                	unimp
        match self {
    80018b28:	0000                	unimp
            Some(val) => val,
    80018b2a:	6542                	ld	a0,16(sp)
    80018b2c:	ec2a                	sd	a0,24(sp)
    }
    80018b2e:	6105                	addi	sp,sp,32
    80018b30:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h227f9c5c00f6b91eE:

0000000080018b32 <_ZN4core6option15Option$LT$T$GT$6unwrap17h227f9c5c00f6b91eE>:
    pub const fn unwrap(self) -> T {
    80018b32:	1101                	addi	sp,sp,-32
    80018b34:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018b36:	00a03633          	snez	a2,a0
    80018b3a:	4681                	li	a3,0
    80018b3c:	e42e                	sd	a1,8(sp)
    80018b3e:	00d50463          	beq	a0,a3,80018b46 <.LBB39_5>
    80018b42:	a009                	j	80018b44 <_ZN4core6option15Option$LT$T$GT$6unwrap17h227f9c5c00f6b91eE+0x12>
    80018b44:	a831                	j	80018b60 <.LBB39_5+0x1a>

0000000080018b46 <.LBB39_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018b46:	00010517          	auipc	a0,0x10
    80018b4a:	93a50513          	addi	a0,a0,-1734 # 80028480 <.L__unnamed_1>
    80018b4e:	02b00593          	li	a1,43
    80018b52:	6622                	ld	a2,8(sp)
    80018b54:	00008097          	auipc	ra,0x8
    80018b58:	176080e7          	jalr	374(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018b5c:	0000                	unimp
        match self {
    80018b5e:	0000                	unimp
            Some(val) => val,
    80018b60:	6542                	ld	a0,16(sp)
    80018b62:	ec2a                	sd	a0,24(sp)
    }
    80018b64:	6105                	addi	sp,sp,32
    80018b66:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E:

0000000080018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>:
    pub const fn unwrap(self) -> T {
    80018b68:	1101                	addi	sp,sp,-32
    80018b6a:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018b6c:	00a03633          	snez	a2,a0
    80018b70:	4681                	li	a3,0
    80018b72:	e42e                	sd	a1,8(sp)
    80018b74:	00d50463          	beq	a0,a3,80018b7c <.LBB40_5>
    80018b78:	a009                	j	80018b7a <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E+0x12>
    80018b7a:	a831                	j	80018b96 <.LBB40_5+0x1a>

0000000080018b7c <.LBB40_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018b7c:	00010517          	auipc	a0,0x10
    80018b80:	90450513          	addi	a0,a0,-1788 # 80028480 <.L__unnamed_1>
    80018b84:	02b00593          	li	a1,43
    80018b88:	6622                	ld	a2,8(sp)
    80018b8a:	00008097          	auipc	ra,0x8
    80018b8e:	140080e7          	jalr	320(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018b92:	0000                	unimp
        match self {
    80018b94:	0000                	unimp
            Some(val) => val,
    80018b96:	6542                	ld	a0,16(sp)
    80018b98:	ec2a                	sd	a0,24(sp)
    }
    80018b9a:	6105                	addi	sp,sp,32
    80018b9c:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h4427757f093457b9E:

0000000080018b9e <_ZN4core6option15Option$LT$T$GT$6unwrap17h4427757f093457b9E>:
    pub const fn unwrap(self) -> T {
    80018b9e:	1101                	addi	sp,sp,-32
    80018ba0:	e42a                	sd	a0,8(sp)
    80018ba2:	e82e                	sd	a1,16(sp)
            Some(val) => val,
    80018ba4:	85aa                	mv	a1,a0
    80018ba6:	4681                	li	a3,0
    80018ba8:	e032                	sd	a2,0(sp)
    80018baa:	00d50463          	beq	a0,a3,80018bb2 <.LBB41_5>
    80018bae:	a009                	j	80018bb0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h4427757f093457b9E+0x12>
    80018bb0:	a831                	j	80018bcc <.LBB41_5+0x1a>

0000000080018bb2 <.LBB41_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018bb2:	00010517          	auipc	a0,0x10
    80018bb6:	8ce50513          	addi	a0,a0,-1842 # 80028480 <.L__unnamed_1>
    80018bba:	02b00593          	li	a1,43
    80018bbe:	6602                	ld	a2,0(sp)
    80018bc0:	00008097          	auipc	ra,0x8
    80018bc4:	10a080e7          	jalr	266(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018bc8:	0000                	unimp
        match self {
    80018bca:	0000                	unimp
            Some(val) => val,
    80018bcc:	6542                	ld	a0,16(sp)
    80018bce:	ec2a                	sd	a0,24(sp)
    }
    80018bd0:	6105                	addi	sp,sp,32
    80018bd2:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h5333c331f0942639E:

0000000080018bd4 <_ZN4core6option15Option$LT$T$GT$6unwrap17h5333c331f0942639E>:
    pub const fn unwrap(self) -> T {
    80018bd4:	1101                	addi	sp,sp,-32
    80018bd6:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018bd8:	00a03633          	snez	a2,a0
    80018bdc:	4681                	li	a3,0
    80018bde:	e42e                	sd	a1,8(sp)
    80018be0:	00d50463          	beq	a0,a3,80018be8 <.LBB42_5>
    80018be4:	a009                	j	80018be6 <_ZN4core6option15Option$LT$T$GT$6unwrap17h5333c331f0942639E+0x12>
    80018be6:	a831                	j	80018c02 <.LBB42_5+0x1a>

0000000080018be8 <.LBB42_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018be8:	00010517          	auipc	a0,0x10
    80018bec:	89850513          	addi	a0,a0,-1896 # 80028480 <.L__unnamed_1>
    80018bf0:	02b00593          	li	a1,43
    80018bf4:	6622                	ld	a2,8(sp)
    80018bf6:	00008097          	auipc	ra,0x8
    80018bfa:	0d4080e7          	jalr	212(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018bfe:	0000                	unimp
        match self {
    80018c00:	0000                	unimp
            Some(val) => val,
    80018c02:	6542                	ld	a0,16(sp)
    80018c04:	ec2a                	sd	a0,24(sp)
    }
    80018c06:	6105                	addi	sp,sp,32
    80018c08:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h55d7f659cfd007f1E:

0000000080018c0a <_ZN4core6option15Option$LT$T$GT$6unwrap17h55d7f659cfd007f1E>:
    pub const fn unwrap(self) -> T {
    80018c0a:	1101                	addi	sp,sp,-32
    80018c0c:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018c0e:	00a03633          	snez	a2,a0
    80018c12:	4681                	li	a3,0
    80018c14:	e42e                	sd	a1,8(sp)
    80018c16:	00d50463          	beq	a0,a3,80018c1e <.LBB43_5>
    80018c1a:	a009                	j	80018c1c <_ZN4core6option15Option$LT$T$GT$6unwrap17h55d7f659cfd007f1E+0x12>
    80018c1c:	a831                	j	80018c38 <.LBB43_5+0x1a>

0000000080018c1e <.LBB43_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018c1e:	00010517          	auipc	a0,0x10
    80018c22:	86250513          	addi	a0,a0,-1950 # 80028480 <.L__unnamed_1>
    80018c26:	02b00593          	li	a1,43
    80018c2a:	6622                	ld	a2,8(sp)
    80018c2c:	00008097          	auipc	ra,0x8
    80018c30:	09e080e7          	jalr	158(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018c34:	0000                	unimp
        match self {
    80018c36:	0000                	unimp
            Some(val) => val,
    80018c38:	6542                	ld	a0,16(sp)
    80018c3a:	ec2a                	sd	a0,24(sp)
    }
    80018c3c:	6105                	addi	sp,sp,32
    80018c3e:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h5dd6082ce602d81dE:

0000000080018c40 <_ZN4core6option15Option$LT$T$GT$6unwrap17h5dd6082ce602d81dE>:
    pub const fn unwrap(self) -> T {
    80018c40:	1101                	addi	sp,sp,-32
    80018c42:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018c44:	00a03633          	snez	a2,a0
    80018c48:	4681                	li	a3,0
    80018c4a:	e42e                	sd	a1,8(sp)
    80018c4c:	00d50463          	beq	a0,a3,80018c54 <.LBB44_5>
    80018c50:	a009                	j	80018c52 <_ZN4core6option15Option$LT$T$GT$6unwrap17h5dd6082ce602d81dE+0x12>
    80018c52:	a831                	j	80018c6e <.LBB44_5+0x1a>

0000000080018c54 <.LBB44_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018c54:	00010517          	auipc	a0,0x10
    80018c58:	82c50513          	addi	a0,a0,-2004 # 80028480 <.L__unnamed_1>
    80018c5c:	02b00593          	li	a1,43
    80018c60:	6622                	ld	a2,8(sp)
    80018c62:	00008097          	auipc	ra,0x8
    80018c66:	068080e7          	jalr	104(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018c6a:	0000                	unimp
        match self {
    80018c6c:	0000                	unimp
            Some(val) => val,
    80018c6e:	6542                	ld	a0,16(sp)
    80018c70:	ec2a                	sd	a0,24(sp)
    }
    80018c72:	6105                	addi	sp,sp,32
    80018c74:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E:

0000000080018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>:
    pub const fn unwrap(self) -> T {
    80018c76:	1101                	addi	sp,sp,-32
    80018c78:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018c7a:	00a03633          	snez	a2,a0
    80018c7e:	4681                	li	a3,0
    80018c80:	e42e                	sd	a1,8(sp)
    80018c82:	00d50463          	beq	a0,a3,80018c8a <.LBB45_5>
    80018c86:	a009                	j	80018c88 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E+0x12>
    80018c88:	a831                	j	80018ca4 <.LBB45_5+0x1a>

0000000080018c8a <.LBB45_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018c8a:	0000f517          	auipc	a0,0xf
    80018c8e:	7f650513          	addi	a0,a0,2038 # 80028480 <.L__unnamed_1>
    80018c92:	02b00593          	li	a1,43
    80018c96:	6622                	ld	a2,8(sp)
    80018c98:	00008097          	auipc	ra,0x8
    80018c9c:	032080e7          	jalr	50(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018ca0:	0000                	unimp
        match self {
    80018ca2:	0000                	unimp
            Some(val) => val,
    80018ca4:	6542                	ld	a0,16(sp)
    80018ca6:	ec2a                	sd	a0,24(sp)
    }
    80018ca8:	6105                	addi	sp,sp,32
    80018caa:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h7d0483f37b144d32E:

0000000080018cac <_ZN4core6option15Option$LT$T$GT$6unwrap17h7d0483f37b144d32E>:
    pub const fn unwrap(self) -> T {
    80018cac:	1101                	addi	sp,sp,-32
    80018cae:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018cb0:	00a03633          	snez	a2,a0
    80018cb4:	4681                	li	a3,0
    80018cb6:	e42e                	sd	a1,8(sp)
    80018cb8:	00d50463          	beq	a0,a3,80018cc0 <.LBB46_5>
    80018cbc:	a009                	j	80018cbe <_ZN4core6option15Option$LT$T$GT$6unwrap17h7d0483f37b144d32E+0x12>
    80018cbe:	a831                	j	80018cda <.LBB46_5+0x1a>

0000000080018cc0 <.LBB46_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018cc0:	0000f517          	auipc	a0,0xf
    80018cc4:	7c050513          	addi	a0,a0,1984 # 80028480 <.L__unnamed_1>
    80018cc8:	02b00593          	li	a1,43
    80018ccc:	6622                	ld	a2,8(sp)
    80018cce:	00008097          	auipc	ra,0x8
    80018cd2:	ffc080e7          	jalr	-4(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018cd6:	0000                	unimp
        match self {
    80018cd8:	0000                	unimp
            Some(val) => val,
    80018cda:	6542                	ld	a0,16(sp)
    80018cdc:	ec2a                	sd	a0,24(sp)
    }
    80018cde:	6105                	addi	sp,sp,32
    80018ce0:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h902cf92567a41400E:

0000000080018ce2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h902cf92567a41400E>:
    pub const fn unwrap(self) -> T {
    80018ce2:	1101                	addi	sp,sp,-32
            Some(val) => val,
    80018ce4:	6110                	ld	a2,0(a0)
    80018ce6:	4681                	li	a3,0
    80018ce8:	e42e                	sd	a1,8(sp)
    80018cea:	e02a                	sd	a0,0(sp)
    80018cec:	00d60463          	beq	a2,a3,80018cf4 <.LBB47_5>
    80018cf0:	a009                	j	80018cf2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h902cf92567a41400E+0x10>
    80018cf2:	a831                	j	80018d0e <.LBB47_5+0x1a>

0000000080018cf4 <.LBB47_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018cf4:	0000f517          	auipc	a0,0xf
    80018cf8:	78c50513          	addi	a0,a0,1932 # 80028480 <.L__unnamed_1>
    80018cfc:	02b00593          	li	a1,43
    80018d00:	6622                	ld	a2,8(sp)
    80018d02:	00008097          	auipc	ra,0x8
    80018d06:	fc8080e7          	jalr	-56(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018d0a:	0000                	unimp
        match self {
    80018d0c:	0000                	unimp
            Some(val) => val,
    80018d0e:	6502                	ld	a0,0(sp)
    80018d10:	690c                	ld	a1,16(a0)
    80018d12:	ec2e                	sd	a1,24(sp)
    80018d14:	6510                	ld	a2,8(a0)
    80018d16:	e832                	sd	a2,16(sp)
    }
    80018d18:	8532                	mv	a0,a2
    80018d1a:	6105                	addi	sp,sp,32
    80018d1c:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h9f4699fa5dbf890aE:

0000000080018d1e <_ZN4core6option15Option$LT$T$GT$6unwrap17h9f4699fa5dbf890aE>:
    pub const fn unwrap(self) -> T {
    80018d1e:	1101                	addi	sp,sp,-32
    80018d20:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018d22:	00a03633          	snez	a2,a0
    80018d26:	4681                	li	a3,0
    80018d28:	e42e                	sd	a1,8(sp)
    80018d2a:	00d50463          	beq	a0,a3,80018d32 <.LBB48_5>
    80018d2e:	a009                	j	80018d30 <_ZN4core6option15Option$LT$T$GT$6unwrap17h9f4699fa5dbf890aE+0x12>
    80018d30:	a831                	j	80018d4c <.LBB48_5+0x1a>

0000000080018d32 <.LBB48_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018d32:	0000f517          	auipc	a0,0xf
    80018d36:	74e50513          	addi	a0,a0,1870 # 80028480 <.L__unnamed_1>
    80018d3a:	02b00593          	li	a1,43
    80018d3e:	6622                	ld	a2,8(sp)
    80018d40:	00008097          	auipc	ra,0x8
    80018d44:	f8a080e7          	jalr	-118(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018d48:	0000                	unimp
        match self {
    80018d4a:	0000                	unimp
            Some(val) => val,
    80018d4c:	6542                	ld	a0,16(sp)
    80018d4e:	ec2a                	sd	a0,24(sp)
    }
    80018d50:	6105                	addi	sp,sp,32
    80018d52:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h9f48a2bf9204f63bE:

0000000080018d54 <_ZN4core6option15Option$LT$T$GT$6unwrap17h9f48a2bf9204f63bE>:
    pub const fn unwrap(self) -> T {
    80018d54:	1101                	addi	sp,sp,-32
    80018d56:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018d58:	00a03633          	snez	a2,a0
    80018d5c:	4681                	li	a3,0
    80018d5e:	e42e                	sd	a1,8(sp)
    80018d60:	00d50463          	beq	a0,a3,80018d68 <.LBB49_5>
    80018d64:	a009                	j	80018d66 <_ZN4core6option15Option$LT$T$GT$6unwrap17h9f48a2bf9204f63bE+0x12>
    80018d66:	a831                	j	80018d82 <.LBB49_5+0x1a>

0000000080018d68 <.LBB49_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018d68:	0000f517          	auipc	a0,0xf
    80018d6c:	71850513          	addi	a0,a0,1816 # 80028480 <.L__unnamed_1>
    80018d70:	02b00593          	li	a1,43
    80018d74:	6622                	ld	a2,8(sp)
    80018d76:	00008097          	auipc	ra,0x8
    80018d7a:	f54080e7          	jalr	-172(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018d7e:	0000                	unimp
        match self {
    80018d80:	0000                	unimp
            Some(val) => val,
    80018d82:	6542                	ld	a0,16(sp)
    80018d84:	ec2a                	sd	a0,24(sp)
    }
    80018d86:	6105                	addi	sp,sp,32
    80018d88:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17hb3349c0825af7d66E:

0000000080018d8a <_ZN4core6option15Option$LT$T$GT$6unwrap17hb3349c0825af7d66E>:
    pub const fn unwrap(self) -> T {
    80018d8a:	1101                	addi	sp,sp,-32
    80018d8c:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018d8e:	00a03633          	snez	a2,a0
    80018d92:	4681                	li	a3,0
    80018d94:	e42e                	sd	a1,8(sp)
    80018d96:	00d50463          	beq	a0,a3,80018d9e <.LBB50_5>
    80018d9a:	a009                	j	80018d9c <_ZN4core6option15Option$LT$T$GT$6unwrap17hb3349c0825af7d66E+0x12>
    80018d9c:	a831                	j	80018db8 <.LBB50_5+0x1a>

0000000080018d9e <.LBB50_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018d9e:	0000f517          	auipc	a0,0xf
    80018da2:	6e250513          	addi	a0,a0,1762 # 80028480 <.L__unnamed_1>
    80018da6:	02b00593          	li	a1,43
    80018daa:	6622                	ld	a2,8(sp)
    80018dac:	00008097          	auipc	ra,0x8
    80018db0:	f1e080e7          	jalr	-226(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018db4:	0000                	unimp
        match self {
    80018db6:	0000                	unimp
            Some(val) => val,
    80018db8:	6542                	ld	a0,16(sp)
    80018dba:	ec2a                	sd	a0,24(sp)
    }
    80018dbc:	6105                	addi	sp,sp,32
    80018dbe:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17hc712b9fcf71d0a07E:

0000000080018dc0 <_ZN4core6option15Option$LT$T$GT$6unwrap17hc712b9fcf71d0a07E>:
    pub const fn unwrap(self) -> T {
    80018dc0:	1101                	addi	sp,sp,-32
    80018dc2:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018dc4:	00a03633          	snez	a2,a0
    80018dc8:	4681                	li	a3,0
    80018dca:	e42e                	sd	a1,8(sp)
    80018dcc:	00d50463          	beq	a0,a3,80018dd4 <.LBB51_5>
    80018dd0:	a009                	j	80018dd2 <_ZN4core6option15Option$LT$T$GT$6unwrap17hc712b9fcf71d0a07E+0x12>
    80018dd2:	a831                	j	80018dee <.LBB51_5+0x1a>

0000000080018dd4 <.LBB51_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018dd4:	0000f517          	auipc	a0,0xf
    80018dd8:	6ac50513          	addi	a0,a0,1708 # 80028480 <.L__unnamed_1>
    80018ddc:	02b00593          	li	a1,43
    80018de0:	6622                	ld	a2,8(sp)
    80018de2:	00008097          	auipc	ra,0x8
    80018de6:	ee8080e7          	jalr	-280(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018dea:	0000                	unimp
        match self {
    80018dec:	0000                	unimp
            Some(val) => val,
    80018dee:	6542                	ld	a0,16(sp)
    80018df0:	ec2a                	sd	a0,24(sp)
    }
    80018df2:	6105                	addi	sp,sp,32
    80018df4:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17hcae1c9af8f45f2c8E:

0000000080018df6 <_ZN4core6option15Option$LT$T$GT$6unwrap17hcae1c9af8f45f2c8E>:
    pub const fn unwrap(self) -> T {
    80018df6:	1101                	addi	sp,sp,-32
    80018df8:	e42a                	sd	a0,8(sp)
    80018dfa:	e82e                	sd	a1,16(sp)
            Some(val) => val,
    80018dfc:	85aa                	mv	a1,a0
    80018dfe:	4681                	li	a3,0
    80018e00:	e032                	sd	a2,0(sp)
    80018e02:	00d50463          	beq	a0,a3,80018e0a <.LBB52_5>
    80018e06:	a009                	j	80018e08 <_ZN4core6option15Option$LT$T$GT$6unwrap17hcae1c9af8f45f2c8E+0x12>
    80018e08:	a831                	j	80018e24 <.LBB52_5+0x1a>

0000000080018e0a <.LBB52_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018e0a:	0000f517          	auipc	a0,0xf
    80018e0e:	67650513          	addi	a0,a0,1654 # 80028480 <.L__unnamed_1>
    80018e12:	02b00593          	li	a1,43
    80018e16:	6602                	ld	a2,0(sp)
    80018e18:	00008097          	auipc	ra,0x8
    80018e1c:	eb2080e7          	jalr	-334(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018e20:	0000                	unimp
        match self {
    80018e22:	0000                	unimp
            Some(val) => val,
    80018e24:	6542                	ld	a0,16(sp)
    80018e26:	ec2a                	sd	a0,24(sp)
    }
    80018e28:	6105                	addi	sp,sp,32
    80018e2a:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17hcee992c451ddfa70E:

0000000080018e2c <_ZN4core6option15Option$LT$T$GT$6unwrap17hcee992c451ddfa70E>:
    pub const fn unwrap(self) -> T {
    80018e2c:	1101                	addi	sp,sp,-32
    80018e2e:	e42a                	sd	a0,8(sp)
    80018e30:	e82e                	sd	a1,16(sp)
            Some(val) => val,
    80018e32:	85aa                	mv	a1,a0
    80018e34:	4681                	li	a3,0
    80018e36:	e032                	sd	a2,0(sp)
    80018e38:	00d50463          	beq	a0,a3,80018e40 <.LBB53_5>
    80018e3c:	a009                	j	80018e3e <_ZN4core6option15Option$LT$T$GT$6unwrap17hcee992c451ddfa70E+0x12>
    80018e3e:	a831                	j	80018e5a <.LBB53_5+0x1a>

0000000080018e40 <.LBB53_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018e40:	0000f517          	auipc	a0,0xf
    80018e44:	64050513          	addi	a0,a0,1600 # 80028480 <.L__unnamed_1>
    80018e48:	02b00593          	li	a1,43
    80018e4c:	6602                	ld	a2,0(sp)
    80018e4e:	00008097          	auipc	ra,0x8
    80018e52:	e7c080e7          	jalr	-388(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018e56:	0000                	unimp
        match self {
    80018e58:	0000                	unimp
            Some(val) => val,
    80018e5a:	6542                	ld	a0,16(sp)
    80018e5c:	ec2a                	sd	a0,24(sp)
    }
    80018e5e:	6105                	addi	sp,sp,32
    80018e60:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17hdad3629ea4723373E:

0000000080018e62 <_ZN4core6option15Option$LT$T$GT$6unwrap17hdad3629ea4723373E>:
    pub const fn unwrap(self) -> T {
    80018e62:	1101                	addi	sp,sp,-32
    80018e64:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018e66:	00a03633          	snez	a2,a0
    80018e6a:	4681                	li	a3,0
    80018e6c:	e42e                	sd	a1,8(sp)
    80018e6e:	00d50463          	beq	a0,a3,80018e76 <.LBB54_5>
    80018e72:	a009                	j	80018e74 <_ZN4core6option15Option$LT$T$GT$6unwrap17hdad3629ea4723373E+0x12>
    80018e74:	a831                	j	80018e90 <.LBB54_5+0x1a>

0000000080018e76 <.LBB54_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018e76:	0000f517          	auipc	a0,0xf
    80018e7a:	60a50513          	addi	a0,a0,1546 # 80028480 <.L__unnamed_1>
    80018e7e:	02b00593          	li	a1,43
    80018e82:	6622                	ld	a2,8(sp)
    80018e84:	00008097          	auipc	ra,0x8
    80018e88:	e46080e7          	jalr	-442(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018e8c:	0000                	unimp
        match self {
    80018e8e:	0000                	unimp
            Some(val) => val,
    80018e90:	6542                	ld	a0,16(sp)
    80018e92:	ec2a                	sd	a0,24(sp)
    }
    80018e94:	6105                	addi	sp,sp,32
    80018e96:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17hf05086444e17f716E:

0000000080018e98 <_ZN4core6option15Option$LT$T$GT$6unwrap17hf05086444e17f716E>:
    pub const fn unwrap(self) -> T {
    80018e98:	1101                	addi	sp,sp,-32
    80018e9a:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80018e9c:	00a03633          	snez	a2,a0
    80018ea0:	4681                	li	a3,0
    80018ea2:	e42e                	sd	a1,8(sp)
    80018ea4:	00d50463          	beq	a0,a3,80018eac <.LBB55_5>
    80018ea8:	a009                	j	80018eaa <_ZN4core6option15Option$LT$T$GT$6unwrap17hf05086444e17f716E+0x12>
    80018eaa:	a831                	j	80018ec6 <.LBB55_5+0x1a>

0000000080018eac <.LBB55_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80018eac:	0000f517          	auipc	a0,0xf
    80018eb0:	5d450513          	addi	a0,a0,1492 # 80028480 <.L__unnamed_1>
    80018eb4:	02b00593          	li	a1,43
    80018eb8:	6622                	ld	a2,8(sp)
    80018eba:	00008097          	auipc	ra,0x8
    80018ebe:	e10080e7          	jalr	-496(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80018ec2:	0000                	unimp
        match self {
    80018ec4:	0000                	unimp
            Some(val) => val,
    80018ec6:	6542                	ld	a0,16(sp)
    80018ec8:	ec2a                	sd	a0,24(sp)
    }
    80018eca:	6105                	addi	sp,sp,32
    80018ecc:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$7is_none17h95f7ce3dc6edabf9E:

0000000080018ece <_ZN4core6option15Option$LT$T$GT$7is_none17h95f7ce3dc6edabf9E>:
    pub const fn is_none(&self) -> bool {
    80018ece:	1101                	addi	sp,sp,-32
    80018ed0:	ec06                	sd	ra,24(sp)
    80018ed2:	e82a                	sd	a0,16(sp)
        !self.is_some()
    80018ed4:	00000097          	auipc	ra,0x0
    80018ed8:	054080e7          	jalr	84(ra) # 80018f28 <_ZN4core6option15Option$LT$T$GT$7is_some17h0dea72281c9a7d32E>
    80018edc:	e42a                	sd	a0,8(sp)
    80018ede:	a009                	j	80018ee0 <_ZN4core6option15Option$LT$T$GT$7is_none17h95f7ce3dc6edabf9E+0x12>
    80018ee0:	6522                	ld	a0,8(sp)
    80018ee2:	00154513          	xori	a0,a0,1
    }
    80018ee6:	60e2                	ld	ra,24(sp)
    80018ee8:	6105                	addi	sp,sp,32
    80018eea:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$7is_none17he6d1c63a8978b41dE:

0000000080018eec <_ZN4core6option15Option$LT$T$GT$7is_none17he6d1c63a8978b41dE>:
    pub const fn is_none(&self) -> bool {
    80018eec:	1101                	addi	sp,sp,-32
    80018eee:	ec06                	sd	ra,24(sp)
    80018ef0:	e82a                	sd	a0,16(sp)
        !self.is_some()
    80018ef2:	00000097          	auipc	ra,0x0
    80018ef6:	05c080e7          	jalr	92(ra) # 80018f4e <_ZN4core6option15Option$LT$T$GT$7is_some17h19b0d0389752ad57E>
    80018efa:	e42a                	sd	a0,8(sp)
    80018efc:	a009                	j	80018efe <_ZN4core6option15Option$LT$T$GT$7is_none17he6d1c63a8978b41dE+0x12>
    80018efe:	6522                	ld	a0,8(sp)
    80018f00:	00154513          	xori	a0,a0,1
    }
    80018f04:	60e2                	ld	ra,24(sp)
    80018f06:	6105                	addi	sp,sp,32
    80018f08:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$7is_none17hfadf21d940dbe4f4E:

0000000080018f0a <_ZN4core6option15Option$LT$T$GT$7is_none17hfadf21d940dbe4f4E>:
    pub const fn is_none(&self) -> bool {
    80018f0a:	1101                	addi	sp,sp,-32
    80018f0c:	ec06                	sd	ra,24(sp)
    80018f0e:	e82a                	sd	a0,16(sp)
        !self.is_some()
    80018f10:	00000097          	auipc	ra,0x0
    80018f14:	064080e7          	jalr	100(ra) # 80018f74 <_ZN4core6option15Option$LT$T$GT$7is_some17h50a8db603de0065dE>
    80018f18:	e42a                	sd	a0,8(sp)
    80018f1a:	a009                	j	80018f1c <_ZN4core6option15Option$LT$T$GT$7is_none17hfadf21d940dbe4f4E+0x12>
    80018f1c:	6522                	ld	a0,8(sp)
    80018f1e:	00154513          	xori	a0,a0,1
    }
    80018f22:	60e2                	ld	ra,24(sp)
    80018f24:	6105                	addi	sp,sp,32
    80018f26:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$7is_some17h0dea72281c9a7d32E:

0000000080018f28 <_ZN4core6option15Option$LT$T$GT$7is_some17h0dea72281c9a7d32E>:
    pub const fn is_some(&self) -> bool {
    80018f28:	1141                	addi	sp,sp,-16
    80018f2a:	e42a                	sd	a0,8(sp)
        matches!(*self, Some(_))
    80018f2c:	6108                	ld	a0,0(a0)
    80018f2e:	4585                	li	a1,1
    80018f30:	00b50763          	beq	a0,a1,80018f3e <_ZN4core6option15Option$LT$T$GT$7is_some17h0dea72281c9a7d32E+0x16>
    80018f34:	a009                	j	80018f36 <_ZN4core6option15Option$LT$T$GT$7is_some17h0dea72281c9a7d32E+0xe>
    80018f36:	4501                	li	a0,0
    80018f38:	00a103a3          	sb	a0,7(sp)
    80018f3c:	a029                	j	80018f46 <_ZN4core6option15Option$LT$T$GT$7is_some17h0dea72281c9a7d32E+0x1e>
    80018f3e:	4505                	li	a0,1
    80018f40:	00a103a3          	sb	a0,7(sp)
    80018f44:	a009                	j	80018f46 <_ZN4core6option15Option$LT$T$GT$7is_some17h0dea72281c9a7d32E+0x1e>
    }
    80018f46:	00714503          	lbu	a0,7(sp)
    80018f4a:	0141                	addi	sp,sp,16
    80018f4c:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$7is_some17h19b0d0389752ad57E:

0000000080018f4e <_ZN4core6option15Option$LT$T$GT$7is_some17h19b0d0389752ad57E>:
    pub const fn is_some(&self) -> bool {
    80018f4e:	1141                	addi	sp,sp,-16
    80018f50:	e42a                	sd	a0,8(sp)
        matches!(*self, Some(_))
    80018f52:	6108                	ld	a0,0(a0)
    80018f54:	4581                	li	a1,0
    80018f56:	00b51763          	bne	a0,a1,80018f64 <_ZN4core6option15Option$LT$T$GT$7is_some17h19b0d0389752ad57E+0x16>
    80018f5a:	a009                	j	80018f5c <_ZN4core6option15Option$LT$T$GT$7is_some17h19b0d0389752ad57E+0xe>
    80018f5c:	4501                	li	a0,0
    80018f5e:	00a103a3          	sb	a0,7(sp)
    80018f62:	a029                	j	80018f6c <_ZN4core6option15Option$LT$T$GT$7is_some17h19b0d0389752ad57E+0x1e>
    80018f64:	4505                	li	a0,1
    80018f66:	00a103a3          	sb	a0,7(sp)
    80018f6a:	a009                	j	80018f6c <_ZN4core6option15Option$LT$T$GT$7is_some17h19b0d0389752ad57E+0x1e>
    }
    80018f6c:	00714503          	lbu	a0,7(sp)
    80018f70:	0141                	addi	sp,sp,16
    80018f72:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$7is_some17h50a8db603de0065dE:

0000000080018f74 <_ZN4core6option15Option$LT$T$GT$7is_some17h50a8db603de0065dE>:
    pub const fn is_some(&self) -> bool {
    80018f74:	1141                	addi	sp,sp,-16
    80018f76:	e42a                	sd	a0,8(sp)
        matches!(*self, Some(_))
    80018f78:	6108                	ld	a0,0(a0)
    80018f7a:	4581                	li	a1,0
    80018f7c:	00b51763          	bne	a0,a1,80018f8a <_ZN4core6option15Option$LT$T$GT$7is_some17h50a8db603de0065dE+0x16>
    80018f80:	a009                	j	80018f82 <_ZN4core6option15Option$LT$T$GT$7is_some17h50a8db603de0065dE+0xe>
    80018f82:	4501                	li	a0,0
    80018f84:	00a103a3          	sb	a0,7(sp)
    80018f88:	a029                	j	80018f92 <_ZN4core6option15Option$LT$T$GT$7is_some17h50a8db603de0065dE+0x1e>
    80018f8a:	4505                	li	a0,1
    80018f8c:	00a103a3          	sb	a0,7(sp)
    80018f90:	a009                	j	80018f92 <_ZN4core6option15Option$LT$T$GT$7is_some17h50a8db603de0065dE+0x1e>
    }
    80018f92:	00714503          	lbu	a0,7(sp)
    80018f96:	0141                	addi	sp,sp,16
    80018f98:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$7is_some17haa99f50637e2e18dE:

0000000080018f9a <_ZN4core6option15Option$LT$T$GT$7is_some17haa99f50637e2e18dE>:
    pub const fn is_some(&self) -> bool {
    80018f9a:	1141                	addi	sp,sp,-16
    80018f9c:	e42a                	sd	a0,8(sp)
        matches!(*self, Some(_))
    80018f9e:	6108                	ld	a0,0(a0)
    80018fa0:	4585                	li	a1,1
    80018fa2:	00b50763          	beq	a0,a1,80018fb0 <_ZN4core6option15Option$LT$T$GT$7is_some17haa99f50637e2e18dE+0x16>
    80018fa6:	a009                	j	80018fa8 <_ZN4core6option15Option$LT$T$GT$7is_some17haa99f50637e2e18dE+0xe>
    80018fa8:	4501                	li	a0,0
    80018faa:	00a103a3          	sb	a0,7(sp)
    80018fae:	a029                	j	80018fb8 <_ZN4core6option15Option$LT$T$GT$7is_some17haa99f50637e2e18dE+0x1e>
    80018fb0:	4505                	li	a0,1
    80018fb2:	00a103a3          	sb	a0,7(sp)
    80018fb6:	a009                	j	80018fb8 <_ZN4core6option15Option$LT$T$GT$7is_some17haa99f50637e2e18dE+0x1e>
    }
    80018fb8:	00714503          	lbu	a0,7(sp)
    80018fbc:	0141                	addi	sp,sp,16
    80018fbe:	8082                	ret

Disassembly of section .text._ZN4core6option19Option$LT$$RF$T$GT$6copied17h2b1512b25771a537E:

0000000080018fc0 <_ZN4core6option19Option$LT$$RF$T$GT$6copied17h2b1512b25771a537E>:
    /// assert_eq!(opt_x, Some(&12));
    /// let copied = opt_x.copied();
    /// assert_eq!(copied, Some(12));
    /// ```
    #[stable(feature = "copied", since = "1.35.0")]
    pub fn copied(self) -> Option<T> {
    80018fc0:	7179                	addi	sp,sp,-48
    80018fc2:	f406                	sd	ra,40(sp)
    80018fc4:	f02a                	sd	a0,32(sp)
        self.map(|&t| t)
    80018fc6:	fffff097          	auipc	ra,0xfffff
    80018fca:	534080e7          	jalr	1332(ra) # 800184fa <_ZN4core6option15Option$LT$T$GT$3map17hef2c6810877f9a4bE>
    80018fce:	e82a                	sd	a0,16(sp)
    80018fd0:	e42e                	sd	a1,8(sp)
    80018fd2:	a009                	j	80018fd4 <_ZN4core6option19Option$LT$$RF$T$GT$6copied17h2b1512b25771a537E+0x14>
    }
    80018fd4:	6542                	ld	a0,16(sp)
    80018fd6:	8905                	andi	a0,a0,1
    80018fd8:	65a2                	ld	a1,8(sp)
    80018fda:	70a2                	ld	ra,40(sp)
    80018fdc:	6145                	addi	sp,sp,48
    80018fde:	8082                	ret

Disassembly of section .text._ZN4core6option19Option$LT$$RF$T$GT$6copied28_$u7b$$u7b$closure$u7d$$u7d$17ha8ee017899d7c467E:

0000000080018fe0 <_ZN4core6option19Option$LT$$RF$T$GT$6copied28_$u7b$$u7b$closure$u7d$$u7d$17ha8ee017899d7c467E>:
        self.map(|&t| t)
    80018fe0:	1101                	addi	sp,sp,-32
    80018fe2:	e82a                	sd	a0,16(sp)
    80018fe4:	00050503          	lb	a0,0(a0)
    80018fe8:	00a10fa3          	sb	a0,31(sp)
    80018fec:	6105                	addi	sp,sp,32
    80018fee:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hac07f7df93d28f54E:

0000000080018ff0 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hac07f7df93d28f54E>:
    fn from(t: T) -> T {
    80018ff0:	1141                	addi	sp,sp,-16
    }
    80018ff2:	0141                	addi	sp,sp,16
    80018ff4:	8082                	ret

Disassembly of section .text._ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E:

0000000080018ff6 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E>:
            None => None,
        }
    }

    #[inline]
    fn clone_from(&mut self, source: &Self) {
    80018ff6:	7159                	addi	sp,sp,-112
    80018ff8:	f486                	sd	ra,104(sp)
    80018ffa:	fc2a                	sd	a0,56(sp)
    80018ffc:	e0ae                	sd	a1,64(sp)
        match (self, source) {
    80018ffe:	e82a                	sd	a0,16(sp)
    80019000:	ec2e                	sd	a1,24(sp)
            (Some(to), Some(from)) => to.clone_from(from),
    80019002:	6108                	ld	a0,0(a0)
    80019004:	4585                	li	a1,1
    80019006:	00b50f63          	beq	a0,a1,80019024 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x2e>
    8001900a:	a009                	j	8001900c <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x16>
            (to, from) => *to = from.clone(),
    8001900c:	6542                	ld	a0,16(sp)
    8001900e:	e4aa                	sd	a0,72(sp)
    80019010:	65e2                	ld	a1,24(sp)
    80019012:	e8ae                	sd	a1,80(sp)
    80019014:	1010                	addi	a2,sp,32
    80019016:	e02a                	sd	a0,0(sp)
    80019018:	8532                	mv	a0,a2
    8001901a:	00000097          	auipc	ra,0x0
    8001901e:	08e080e7          	jalr	142(ra) # 800190a8 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE>
    80019022:	a01d                	j	80019048 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x52>
            (Some(to), Some(from)) => to.clone_from(from),
    80019024:	6562                	ld	a0,24(sp)
    80019026:	6108                	ld	a0,0(a0)
    80019028:	4585                	li	a1,1
    8001902a:	feb511e3          	bne	a0,a1,8001900c <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x16>
    8001902e:	a009                	j	80019030 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x3a>
    80019030:	6542                	ld	a0,16(sp)
    80019032:	0521                	addi	a0,a0,8
    80019034:	ecaa                	sd	a0,88(sp)
    80019036:	65e2                	ld	a1,24(sp)
    80019038:	05a1                	addi	a1,a1,8
    8001903a:	f0ae                	sd	a1,96(sp)
    8001903c:	fffef097          	auipc	ra,0xfffef
    80019040:	984080e7          	jalr	-1660(ra) # 800079c0 <_ZN4core5clone5Clone10clone_from17hdab277ae1ce4c01cE>
    80019044:	a009                	j	80019046 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x50>
        match (self, source) {
    80019046:	a039                	j	80019054 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x5e>
            (to, from) => *to = from.clone(),
    80019048:	6502                	ld	a0,0(sp)
    8001904a:	fffee097          	auipc	ra,0xfffee
    8001904e:	8ce080e7          	jalr	-1842(ra) # 80006918 <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E>
    80019052:	a021                	j	8001905a <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x64>
        }
    }
    80019054:	70a6                	ld	ra,104(sp)
    80019056:	6165                	addi	sp,sp,112
    80019058:	8082                	ret
            (to, from) => *to = from.clone(),
    8001905a:	7542                	ld	a0,48(sp)
    8001905c:	6582                	ld	a1,0(sp)
    8001905e:	e988                	sd	a0,16(a1)
    80019060:	7522                	ld	a0,40(sp)
    80019062:	e588                	sd	a0,8(a1)
    80019064:	7502                	ld	a0,32(sp)
    80019066:	e188                	sd	a0,0(a1)
        match (self, source) {
    80019068:	b7f5                	j	80019054 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h63d46f0bc394f265E+0x5e>

Disassembly of section .text._ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E:

000000008001906a <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E>:
    fn clone(&self) -> Self {
    8001906a:	7179                	addi	sp,sp,-48
    8001906c:	f406                	sd	ra,40(sp)
    8001906e:	ec2a                	sd	a0,24(sp)
            Some(x) => Some(x.clone()),
    80019070:	610c                	ld	a1,0(a0)
    80019072:	00b03633          	snez	a2,a1
    80019076:	4681                	li	a3,0
    80019078:	e42a                	sd	a0,8(sp)
    8001907a:	00d58463          	beq	a1,a3,80019082 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E+0x18>
    8001907e:	a009                	j	80019080 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E+0x16>
    80019080:	a029                	j	8001908a <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E+0x20>
    80019082:	4501                	li	a0,0
            None => None,
    80019084:	e82a                	sd	a0,16(sp)
        match self {
    80019086:	a829                	j	800190a0 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E+0x36>
    80019088:	0000                	unimp
            Some(x) => Some(x.clone()),
    8001908a:	6522                	ld	a0,8(sp)
    8001908c:	f02a                	sd	a0,32(sp)
    8001908e:	fffee097          	auipc	ra,0xfffee
    80019092:	0bc080e7          	jalr	188(ra) # 8000714a <_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h9660c4ae0b21e573E>
    80019096:	e02a                	sd	a0,0(sp)
    80019098:	a009                	j	8001909a <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E+0x30>
    8001909a:	6502                	ld	a0,0(sp)
    8001909c:	e82a                	sd	a0,16(sp)
        match self {
    8001909e:	a009                	j	800190a0 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6f9caf02a0a1b512E+0x36>
    }
    800190a0:	6542                	ld	a0,16(sp)
    800190a2:	70a2                	ld	ra,40(sp)
    800190a4:	6145                	addi	sp,sp,48
    800190a6:	8082                	ret

Disassembly of section .text._ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE:

00000000800190a8 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE>:
    fn clone(&self) -> Self {
    800190a8:	715d                	addi	sp,sp,-80
    800190aa:	e486                	sd	ra,72(sp)
    800190ac:	f02e                	sd	a1,32(sp)
            Some(x) => Some(x.clone()),
    800190ae:	6190                	ld	a2,0(a1)
    800190b0:	4681                	li	a3,0
    800190b2:	e42e                	sd	a1,8(sp)
    800190b4:	e02a                	sd	a0,0(sp)
    800190b6:	00d60463          	beq	a2,a3,800190be <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE+0x16>
    800190ba:	a009                	j	800190bc <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE+0x14>
    800190bc:	a031                	j	800190c8 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE+0x20>
    800190be:	4501                	li	a0,0
            None => None,
    800190c0:	6582                	ld	a1,0(sp)
    800190c2:	e188                	sd	a0,0(a1)
        match self {
    800190c4:	a805                	j	800190f4 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE+0x4c>
    800190c6:	0000                	unimp
            Some(x) => Some(x.clone()),
    800190c8:	6522                	ld	a0,8(sp)
    800190ca:	00850593          	addi	a1,a0,8
    800190ce:	f42e                	sd	a1,40(sp)
    800190d0:	852e                	mv	a0,a1
    800190d2:	00003097          	auipc	ra,0x3
    800190d6:	13a080e7          	jalr	314(ra) # 8001c20c <_ZN63_$LT$kernel..fs..inode..Inode$u20$as$u20$core..clone..Clone$GT$5clone17h9e8c77d0c705e5bdE>
    800190da:	f82a                	sd	a0,48(sp)
    800190dc:	fc2e                	sd	a1,56(sp)
    800190de:	e82a                	sd	a0,16(sp)
    800190e0:	ec2e                	sd	a1,24(sp)
    800190e2:	a009                	j	800190e4 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE+0x3c>
    800190e4:	6562                	ld	a0,24(sp)
    800190e6:	6582                	ld	a1,0(sp)
    800190e8:	e988                	sd	a0,16(a1)
    800190ea:	6542                	ld	a0,16(sp)
    800190ec:	e588                	sd	a0,8(a1)
    800190ee:	4505                	li	a0,1
    800190f0:	e188                	sd	a0,0(a1)
        match self {
    800190f2:	a009                	j	800190f4 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha31fd96499fc30acE+0x4c>
    }
    800190f4:	60a6                	ld	ra,72(sp)
    800190f6:	6161                	addi	sp,sp,80
    800190f8:	8082                	ret

Disassembly of section .text._ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E:

00000000800190fa <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E>:
    fn clone(&self) -> Self {
    800190fa:	7139                	addi	sp,sp,-64
    800190fc:	fc06                	sd	ra,56(sp)
    800190fe:	f42a                	sd	a0,40(sp)
            Some(x) => Some(x.clone()),
    80019100:	610c                	ld	a1,0(a0)
    80019102:	4601                	li	a2,0
    80019104:	e82a                	sd	a0,16(sp)
    80019106:	00c58463          	beq	a1,a2,8001910e <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E+0x14>
    8001910a:	a009                	j	8001910c <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E+0x12>
    8001910c:	a029                	j	80019116 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E+0x1c>
    8001910e:	4501                	li	a0,0
            None => None,
    80019110:	ec2a                	sd	a0,24(sp)
        match self {
    80019112:	a015                	j	80019136 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E+0x3c>
    80019114:	0000                	unimp
            Some(x) => Some(x.clone()),
    80019116:	6542                	ld	a0,16(sp)
    80019118:	00850593          	addi	a1,a0,8
    8001911c:	f82e                	sd	a1,48(sp)
    8001911e:	852e                	mv	a0,a1
    80019120:	ffffe097          	auipc	ra,0xffffe
    80019124:	8c8080e7          	jalr	-1848(ra) # 800169e8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h7d37e79c1fcfea8eE>
    80019128:	e42a                	sd	a0,8(sp)
    8001912a:	a009                	j	8001912c <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E+0x32>
    8001912c:	6522                	ld	a0,8(sp)
    8001912e:	f02a                	sd	a0,32(sp)
    80019130:	4585                	li	a1,1
    80019132:	ec2e                	sd	a1,24(sp)
        match self {
    80019134:	a009                	j	80019136 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hed25bfd32f659929E+0x3c>
    }
    80019136:	6562                	ld	a0,24(sp)
    80019138:	7582                	ld	a1,32(sp)
    8001913a:	70e2                	ld	ra,56(sp)
    8001913c:	6121                	addi	sp,sp,64
    8001913e:	8082                	ret

Disassembly of section .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hb35ce1158bd24b79E:

0000000080019140 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hb35ce1158bd24b79E>:
    fn from_ok(v: T) -> Self {
        Some(v)
    }

    #[inline]
    fn from_error(_: NoneError) -> Self {
    80019140:	1101                	addi	sp,sp,-32
    80019142:	4501                	li	a0,0
        None
    80019144:	e82a                	sd	a0,16(sp)
    }
    80019146:	65a2                	ld	a1,8(sp)
    80019148:	e02a                	sd	a0,0(sp)
    8001914a:	852e                	mv	a0,a1
    8001914c:	6582                	ld	a1,0(sp)
    8001914e:	6105                	addi	sp,sp,32
    80019150:	8082                	ret

Disassembly of section .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hfc3b6dff1230c341E:

0000000080019152 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hfc3b6dff1230c341E>:
    fn from_error(_: NoneError) -> Self {
    80019152:	1101                	addi	sp,sp,-32
    80019154:	4501                	li	a0,0
        None
    80019156:	e82a                	sd	a0,16(sp)
    }
    80019158:	65a2                	ld	a1,8(sp)
    8001915a:	e02a                	sd	a0,0(sp)
    8001915c:	852e                	mv	a0,a1
    8001915e:	6582                	ld	a1,0(sp)
    80019160:	6105                	addi	sp,sp,32
    80019162:	8082                	ret

Disassembly of section .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3e352ee0b81a1776E:

0000000080019164 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3e352ee0b81a1776E>:
    fn into_result(self) -> Result<T, NoneError> {
    80019164:	1101                	addi	sp,sp,-32
    80019166:	ec06                	sd	ra,24(sp)
    80019168:	e82a                	sd	a0,16(sp)
        self.ok_or(NoneError)
    8001916a:	fffff097          	auipc	ra,0xfffff
    8001916e:	598080e7          	jalr	1432(ra) # 80018702 <_ZN4core6option15Option$LT$T$GT$5ok_or17hcd0e2682f79db104E>
    80019172:	e02a                	sd	a0,0(sp)
    80019174:	a009                	j	80019176 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3e352ee0b81a1776E+0x12>
    }
    80019176:	6502                	ld	a0,0(sp)
    80019178:	60e2                	ld	ra,24(sp)
    8001917a:	6105                	addi	sp,sp,32
    8001917c:	8082                	ret

Disassembly of section .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h7178c6563938a1aaE:

000000008001917e <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h7178c6563938a1aaE>:
    fn into_result(self) -> Result<T, NoneError> {
    8001917e:	1101                	addi	sp,sp,-32
    80019180:	ec06                	sd	ra,24(sp)
    80019182:	e82a                	sd	a0,16(sp)
        self.ok_or(NoneError)
    80019184:	fffff097          	auipc	ra,0xfffff
    80019188:	5bc080e7          	jalr	1468(ra) # 80018740 <_ZN4core6option15Option$LT$T$GT$5ok_or17he0cf4db6accb2358E>
    8001918c:	e02a                	sd	a0,0(sp)
    8001918e:	a009                	j	80019190 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h7178c6563938a1aaE+0x12>
    }
    80019190:	6502                	ld	a0,0(sp)
    80019192:	60e2                	ld	ra,24(sp)
    80019194:	6105                	addi	sp,sp,32
    80019196:	8082                	ret

Disassembly of section .text._ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h23f8fe0f572e54f2E:

0000000080019198 <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h23f8fe0f572e54f2E>:
    fn default() -> Option<T> {
    80019198:	1141                	addi	sp,sp,-16
    8001919a:	4501                	li	a0,0
        None
    8001919c:	e02a                	sd	a0,0(sp)
    }
    8001919e:	65a2                	ld	a1,8(sp)
    800191a0:	0141                	addi	sp,sp,16
    800191a2:	8082                	ret

Disassembly of section .text._ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8313e1b7f74efdc5E:

00000000800191a4 <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8313e1b7f74efdc5E>:
    fn default() -> Option<T> {
    800191a4:	1141                	addi	sp,sp,-16
    800191a6:	4501                	li	a0,0
        None
    800191a8:	e42a                	sd	a0,8(sp)
    }
    800191aa:	0141                	addi	sp,sp,16
    800191ac:	8082                	ret

Disassembly of section .text._ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8e6c6b37091cfda1E:

00000000800191ae <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8e6c6b37091cfda1E>:
    fn default() -> Option<T> {
    800191ae:	1141                	addi	sp,sp,-16
    800191b0:	4501                	li	a0,0
        None
    800191b2:	e42a                	sd	a0,8(sp)
    }
    800191b4:	0141                	addi	sp,sp,16
    800191b6:	8082                	ret

Disassembly of section .text._ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17hc57f2b0f29821ce4E:

00000000800191b8 <_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17hc57f2b0f29821ce4E>:
    fn default() -> Option<T> {
    800191b8:	1141                	addi	sp,sp,-16
    800191ba:	4501                	li	a0,0
        None
    800191bc:	e02a                	sd	a0,0(sp)
    }
    800191be:	65a2                	ld	a1,8(sp)
    800191c0:	0141                	addi	sp,sp,16
    800191c2:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E:

00000000800191c4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc1af1c3cdbbcd2f6E>:
    fn from(t: T) -> T {
    800191c4:	1141                	addi	sp,sp,-16
    }
    800191c6:	0141                	addi	sp,sp,16
    800191c8:	8082                	ret

Disassembly of section .text._ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h19dfbc6cd5553891E:

00000000800191ca <_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h19dfbc6cd5553891E>:
                ///
                /// The value must not be zero.
                #[$stability]
                #[rustc_const_stable(feature = "nonzero", since = "1.34.0")]
                #[inline]
                pub const unsafe fn new_unchecked(n: $Int) -> Self {
    800191ca:	1141                	addi	sp,sp,-16
    800191cc:	e42a                	sd	a0,8(sp)
                    // SAFETY: this is guaranteed to be safe by the caller.
                    unsafe { Self(n) }
    800191ce:	e02a                	sd	a0,0(sp)
                }
    800191d0:	0141                	addi	sp,sp,16
    800191d2:	8082                	ret

Disassembly of section .text._ZN4core3num7nonzero12NonZeroUsize3get17h0472924fe1637b3cE:

00000000800191d4 <_ZN4core3num7nonzero12NonZeroUsize3get17h0472924fe1637b3cE>:

                /// Returns the value as a primitive type.
                #[$stability]
                #[inline]
                #[rustc_const_stable(feature = "nonzero", since = "1.34.0")]
                pub const fn get(self) -> $Int {
    800191d4:	1141                	addi	sp,sp,-16
    800191d6:	e42a                	sd	a0,8(sp)
                    self.0
                }
    800191d8:	0141                	addi	sp,sp,16
    800191da:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7cdbaecccaee50daE:

00000000800191dc <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7cdbaecccaee50daE>:
    fn from(t: T) -> T {
    800191dc:	1141                	addi	sp,sp,-16
    800191de:	e42a                	sd	a0,8(sp)
    }
    800191e0:	0141                	addi	sp,sp,16
    800191e2:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE:

00000000800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>:
    fn from(t: T) -> T {
    800191e4:	1141                	addi	sp,sp,-16
    800191e6:	e02a                	sd	a0,0(sp)
    800191e8:	e42e                	sd	a1,8(sp)
    }
    800191ea:	0141                	addi	sp,sp,16
    800191ec:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hed5e8d0c876c28a1E:

00000000800191ee <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hed5e8d0c876c28a1E>:
    fn from(t: T) -> T {
    800191ee:	1141                	addi	sp,sp,-16
    }
    800191f0:	0141                	addi	sp,sp,16
    800191f2:	8082                	ret

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE:

00000000800191f4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE>:
    fn into(self) -> U {
    800191f4:	1101                	addi	sp,sp,-32
    800191f6:	ec06                	sd	ra,24(sp)
    800191f8:	e82a                	sd	a0,16(sp)
        U::from(self)
    800191fa:	00000097          	auipc	ra,0x0
    800191fe:	fe2080e7          	jalr	-30(ra) # 800191dc <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7cdbaecccaee50daE>
    80019202:	e42a                	sd	a0,8(sp)
    80019204:	a009                	j	80019206 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE+0x12>
    }
    80019206:	6522                	ld	a0,8(sp)
    80019208:	60e2                	ld	ra,24(sp)
    8001920a:	6105                	addi	sp,sp,32
    8001920c:	8082                	ret

Disassembly of section .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h9f537fdaca5aa0cfE:

000000008001920e <_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h9f537fdaca5aa0cfE>:
where
    U: Into<T>,
{
    type Error = Infallible;

    fn try_from(value: U) -> Result<Self, Self::Error> {
    8001920e:	1101                	addi	sp,sp,-32
    80019210:	ec06                	sd	ra,24(sp)
    80019212:	e82a                	sd	a0,16(sp)
        Ok(U::into(value))
    80019214:	00000097          	auipc	ra,0x0
    80019218:	fe0080e7          	jalr	-32(ra) # 800191f4 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hab17d2989366a09cE>
    8001921c:	e02a                	sd	a0,0(sp)
    8001921e:	a009                	j	80019220 <_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h9f537fdaca5aa0cfE+0x12>
    80019220:	6502                	ld	a0,0(sp)
    80019222:	e42a                	sd	a0,8(sp)
    }
    80019224:	60e2                	ld	ra,24(sp)
    80019226:	6105                	addi	sp,sp,32
    80019228:	8082                	ret

Disassembly of section .text._ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h25067841c822c84bE:

000000008001922a <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h25067841c822c84bE>:
    fn try_into(self) -> Result<U, U::Error> {
    8001922a:	1101                	addi	sp,sp,-32
    8001922c:	ec06                	sd	ra,24(sp)
    8001922e:	e82a                	sd	a0,16(sp)
        U::try_from(self)
    80019230:	ffffe097          	auipc	ra,0xffffe
    80019234:	8da080e7          	jalr	-1830(ra) # 80016b0a <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u16$GT$8try_from17h2fa0acdecb2a4bc0E>
    80019238:	e42a                	sd	a0,8(sp)
    8001923a:	e02e                	sd	a1,0(sp)
    8001923c:	a009                	j	8001923e <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h25067841c822c84bE+0x14>
    }
    8001923e:	6522                	ld	a0,8(sp)
    80019240:	6582                	ld	a1,0(sp)
    80019242:	60e2                	ld	ra,24(sp)
    80019244:	6105                	addi	sp,sp,32
    80019246:	8082                	ret

Disassembly of section .text._ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h4c0c019cde2d6c30E:

0000000080019248 <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h4c0c019cde2d6c30E>:
    fn try_into(self) -> Result<U, U::Error> {
    80019248:	1101                	addi	sp,sp,-32
    8001924a:	ec06                	sd	ra,24(sp)
    8001924c:	e82a                	sd	a0,16(sp)
        U::try_from(self)
    8001924e:	ffffe097          	auipc	ra,0xffffe
    80019252:	8f0080e7          	jalr	-1808(ra) # 80016b3e <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E>
    80019256:	e42a                	sd	a0,8(sp)
    80019258:	e02e                	sd	a1,0(sp)
    8001925a:	a009                	j	8001925c <_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h4c0c019cde2d6c30E+0x14>
    }
    8001925c:	6522                	ld	a0,8(sp)
    8001925e:	6582                	ld	a1,0(sp)
    80019260:	60e2                	ld	ra,24(sp)
    80019262:	6105                	addi	sp,sp,32
    80019264:	8082                	ret

Disassembly of section .text._ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h8723651b9003c498E:

0000000080019266 <_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h8723651b9003c498E>:
    ///
    /// assert_eq!(None, bytes.next());
    /// ```
    #[stable(feature = "rust1", since = "1.0.0")]
    #[inline]
    pub fn bytes(&self) -> Bytes<'_> {
    80019266:	7119                	addi	sp,sp,-128
    80019268:	fc86                	sd	ra,120(sp)
    8001926a:	e4aa                	sd	a0,72(sp)
    8001926c:	e8ae                	sd	a1,80(sp)
    8001926e:	ecaa                	sd	a0,88(sp)
    80019270:	f0ae                	sd	a1,96(sp)
        unsafe { mem::transmute(self) }
    80019272:	f4aa                	sd	a0,104(sp)
    80019274:	f8ae                	sd	a1,112(sp)
        Bytes(self.as_bytes().iter().copied())
    80019276:	f82a                	sd	a0,48(sp)
    80019278:	f42e                	sd	a1,40(sp)
    8001927a:	a009                	j	8001927c <_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h8723651b9003c498E+0x16>
    8001927c:	7542                	ld	a0,48(sp)
    8001927e:	75a2                	ld	a1,40(sp)
    80019280:	ffffa097          	auipc	ra,0xffffa
    80019284:	a24080e7          	jalr	-1500(ra) # 80012ca4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3f952cb34e297d39E>
    80019288:	f02a                	sd	a0,32(sp)
    8001928a:	ec2e                	sd	a1,24(sp)
    8001928c:	a009                	j	8001928e <_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h8723651b9003c498E+0x28>
    8001928e:	7502                	ld	a0,32(sp)
    80019290:	65e2                	ld	a1,24(sp)
    80019292:	ffffa097          	auipc	ra,0xffffa
    80019296:	aba080e7          	jalr	-1350(ra) # 80012d4c <_ZN4core4iter6traits8iterator8Iterator6copied17h545b20a808d68198E>
    8001929a:	e82a                	sd	a0,16(sp)
    8001929c:	e42e                	sd	a1,8(sp)
    8001929e:	a009                	j	800192a0 <_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h8723651b9003c498E+0x3a>
    800192a0:	6542                	ld	a0,16(sp)
    800192a2:	fc2a                	sd	a0,56(sp)
    800192a4:	65a2                	ld	a1,8(sp)
    800192a6:	e0ae                	sd	a1,64(sp)
    }
    800192a8:	70e6                	ld	ra,120(sp)
    800192aa:	6109                	addi	sp,sp,128
    800192ac:	8082                	ret

Disassembly of section .text._ZN6kernel8register5mtvec5write17hbc83898ca99b55d5E:

00000000800192ae <_ZN6kernel8register5mtvec5write17hbc83898ca99b55d5E>:
    llvm_asm!("csrr $0, mtvec":"=r"(ret):::"volatile");
    ret
}

#[inline]
pub unsafe fn write(x:usize){
    800192ae:	1141                	addi	sp,sp,-16
    800192b0:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw mtvec, $0"::"r"(x)::"volatile");
    800192b2:	30551073          	csrw	mtvec,a0
    800192b6:	0141                	addi	sp,sp,16
    800192b8:	8082                	ret

Disassembly of section .text._ZN6kernel8register5stvec5write17hf101ca0070f95693E:

00000000800192ba <_ZN6kernel8register5stvec5write17hf101ca0070f95693E>:
    llvm_asm!("csrr $0, stvec":"=r"(ret):::"volatile");
    ret
}

#[inline]
pub unsafe fn write(x:usize){
    800192ba:	1141                	addi	sp,sp,-16
    800192bc:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw stvec, $0"::"r"(x)::"volatile");
    800192be:	10551073          	csrw	stvec,a0
    800192c2:	0141                	addi	sp,sp,16
    800192c4:	8082                	ret

Disassembly of section .text._ZN6kernel8register4satp4read17h5c27215ce38b89a3E:

00000000800192c6 <_ZN6kernel8register4satp4read17h5c27215ce38b89a3E>:
// }

// supervisor address translation and protection;
// holds the address of the page table.
#[inline]
pub unsafe fn read() -> usize {
    800192c6:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, satp":"=r"(ret):::"volatile");
    800192c8:	18002573          	csrr	a0,satp
    800192cc:	e42a                	sd	a0,8(sp)
    ret
}
    800192ce:	0141                	addi	sp,sp,16
    800192d0:	8082                	ret

Disassembly of section .text._ZN6kernel8register4satp5write17h27829d6ed3c6c873E:

00000000800192d2 <_ZN6kernel8register4satp5write17h27829d6ed3c6c873E>:

pub unsafe fn write(x: usize){
    800192d2:	1141                	addi	sp,sp,-16
    800192d4:	e42a                	sd	a0,8(sp)
    // println!("write satp");
    llvm_asm!("csrw satp, $0"::"r"(x)::"volatile");
    800192d6:	18051073          	csrw	satp,a0
    800192da:	0141                	addi	sp,sp,16
    800192dc:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E:

00000000800192de <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E>:
    /// ```
    #[stable(feature = "pointer_methods", since = "1.26.0")]
    #[must_use = "returns a new pointer rather than modifying its argument"]
    #[rustc_const_unstable(feature = "const_ptr_offset", issue = "71499")]
    #[inline]
    pub const fn wrapping_add(self, count: usize) -> Self
    800192de:	1101                	addi	sp,sp,-32
    800192e0:	ec06                	sd	ra,24(sp)
    800192e2:	e42a                	sd	a0,8(sp)
    800192e4:	e82e                	sd	a1,16(sp)
    where
        T: Sized,
    {
        self.wrapping_offset(count as isize)
    800192e6:	00000097          	auipc	ra,0x0
    800192ea:	04c080e7          	jalr	76(ra) # 80019332 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17hf520cb502b2ca127E>
    800192ee:	e02a                	sd	a0,0(sp)
    800192f0:	a009                	j	800192f2 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_add17h303e9450318cf672E+0x14>
    }
    800192f2:	6502                	ld	a0,0(sp)
    800192f4:	60e2                	ld	ra,24(sp)
    800192f6:	6105                	addi	sp,sp,32
    800192f8:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13read_volatile17hd63925ff966884cbE:

00000000800192fa <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13read_volatile17hd63925ff966884cbE>:
    /// See [`ptr::read_volatile`] for safety concerns and examples.
    ///
    /// [`ptr::read_volatile`]: crate::ptr::read_volatile()
    #[stable(feature = "pointer_methods", since = "1.26.0")]
    #[inline]
    pub unsafe fn read_volatile(self) -> T
    800192fa:	1101                	addi	sp,sp,-32
    800192fc:	ec06                	sd	ra,24(sp)
    800192fe:	e82a                	sd	a0,16(sp)
    where
        T: Sized,
    {
        // SAFETY: the caller must uphold the safety contract for `read_volatile`.
        unsafe { read_volatile(self) }
    80019300:	ffff7097          	auipc	ra,0xffff7
    80019304:	12a080e7          	jalr	298(ra) # 8001042a <_ZN4core3ptr13read_volatile17hd7c38935cb748b8fE>
    80019308:	e42a                	sd	a0,8(sp)
    8001930a:	a009                	j	8001930c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13read_volatile17hd63925ff966884cbE+0x12>
    }
    8001930c:	6522                	ld	a0,8(sp)
    8001930e:	60e2                	ld	ra,24(sp)
    80019310:	6105                	addi	sp,sp,32
    80019312:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$14write_volatile17h3883c3cc56e2bf85E:

0000000080019314 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$14write_volatile17h3883c3cc56e2bf85E>:
    /// See [`ptr::write_volatile`] for safety concerns and examples.
    ///
    /// [`ptr::write_volatile`]: crate::ptr::write_volatile()
    #[stable(feature = "pointer_methods", since = "1.26.0")]
    #[inline]
    pub unsafe fn write_volatile(self, val: T)
    80019314:	1101                	addi	sp,sp,-32
    80019316:	ec06                	sd	ra,24(sp)
    80019318:	862e                	mv	a2,a1
    8001931a:	e42a                	sd	a0,8(sp)
    8001931c:	00b10ba3          	sb	a1,23(sp)
    where
        T: Sized,
    {
        // SAFETY: the caller must uphold the safety contract for `write_volatile`.
        unsafe { write_volatile(self, val) }
    80019320:	e032                	sd	a2,0(sp)
    80019322:	ffff7097          	auipc	ra,0xffff7
    80019326:	12e080e7          	jalr	302(ra) # 80010450 <_ZN4core3ptr14write_volatile17h6fbe3a30bb1b3c3fE>
    8001932a:	a009                	j	8001932c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$14write_volatile17h3883c3cc56e2bf85E+0x18>
    }
    8001932c:	60e2                	ld	ra,24(sp)
    8001932e:	6105                	addi	sp,sp,32
    80019330:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17hf520cb502b2ca127E:

0000000080019332 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17hf520cb502b2ca127E>:
    pub const fn wrapping_offset(self, count: isize) -> *mut T
    80019332:	1101                	addi	sp,sp,-32
    80019334:	e42a                	sd	a0,8(sp)
    80019336:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::arith_offset(self, count) as *mut T }
    80019338:	952e                	add	a0,a0,a1
    8001933a:	ec2a                	sd	a0,24(sp)
    8001933c:	e02a                	sd	a0,0(sp)
    8001933e:	a009                	j	80019340 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17hf520cb502b2ca127E+0xe>
    }
    80019340:	6502                	ld	a0,0(sp)
    80019342:	6105                	addi	sp,sp,32
    80019344:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb1254e3ac86edc40E:

0000000080019346 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb1254e3ac86edc40E>:
    pub const unsafe fn add(self, count: usize) -> Self
    80019346:	1101                	addi	sp,sp,-32
    80019348:	ec06                	sd	ra,24(sp)
    8001934a:	e42a                	sd	a0,8(sp)
    8001934c:	e82e                	sd	a1,16(sp)
        unsafe { self.offset(count as isize) }
    8001934e:	00000097          	auipc	ra,0x0
    80019352:	02a080e7          	jalr	42(ra) # 80019378 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfd9153fb0c019b16E>
    80019356:	e02a                	sd	a0,0(sp)
    80019358:	a009                	j	8001935a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb1254e3ac86edc40E+0x14>
    }
    8001935a:	6502                	ld	a0,0(sp)
    8001935c:	60e2                	ld	ra,24(sp)
    8001935e:	6105                	addi	sp,sp,32
    80019360:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb70c71e0950c12e5E:

0000000080019362 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb70c71e0950c12e5E>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    80019362:	1101                	addi	sp,sp,-32
    80019364:	e42a                	sd	a0,8(sp)
    80019366:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) as *mut T }
    80019368:	058a                	slli	a1,a1,0x2
    8001936a:	952e                	add	a0,a0,a1
    8001936c:	ec2a                	sd	a0,24(sp)
    8001936e:	e02a                	sd	a0,0(sp)
    80019370:	a009                	j	80019372 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb70c71e0950c12e5E+0x10>
    }
    80019372:	6502                	ld	a0,0(sp)
    80019374:	6105                	addi	sp,sp,32
    80019376:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfd9153fb0c019b16E:

0000000080019378 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfd9153fb0c019b16E>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    80019378:	1101                	addi	sp,sp,-32
    8001937a:	e42a                	sd	a0,8(sp)
    8001937c:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) as *mut T }
    8001937e:	952e                	add	a0,a0,a1
    80019380:	ec2a                	sd	a0,24(sp)
    80019382:	e02a                	sd	a0,0(sp)
    80019384:	a009                	j	80019386 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfd9153fb0c019b16E+0xe>
    }
    80019386:	6502                	ld	a0,0(sp)
    80019388:	6105                	addi	sp,sp,32
    8001938a:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf3a1e7d9f77d17abE:

000000008001938c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf3a1e7d9f77d17abE>:
    pub const fn is_null(self) -> bool {
    8001938c:	7179                	addi	sp,sp,-48
    8001938e:	f406                	sd	ra,40(sp)
    80019390:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    80019392:	ec2a                	sd	a0,24(sp)
    80019394:	a009                	j	80019396 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf3a1e7d9f77d17abE+0xa>
    80019396:	4501                	li	a0,0
    80019398:	65e2                	ld	a1,24(sp)
    8001939a:	e82a                	sd	a0,16(sp)
    8001939c:	852e                	mv	a0,a1
    8001939e:	65c2                	ld	a1,16(sp)
    800193a0:	00007097          	auipc	ra,0x7
    800193a4:	60e080e7          	jalr	1550(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    800193a8:	e42a                	sd	a0,8(sp)
    800193aa:	a009                	j	800193ac <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf3a1e7d9f77d17abE+0x20>
    }
    800193ac:	6522                	ld	a0,8(sp)
    800193ae:	70a2                	ld	ra,40(sp)
    800193b0:	6145                	addi	sp,sp,48
    800193b2:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h9b4abd808b57f7f6E:

00000000800193b4 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h9b4abd808b57f7f6E>:
    /// assert_eq!(slice.len(), 3);
    /// ```
    #[inline]
    #[unstable(feature = "slice_ptr_len", issue = "71146")]
    #[rustc_const_unstable(feature = "const_slice_ptr_len", issue = "71146")]
    pub const fn len(self) -> usize {
    800193b4:	1101                	addi	sp,sp,-32
    800193b6:	e82a                	sd	a0,16(sp)
    800193b8:	ec2e                	sd	a1,24(sp)
        // SAFETY: this is safe because `*const [T]` and `FatPtr<T>` have the same layout.
        // Only `std` can make this guarantee.
        unsafe { Repr { rust_mut: self }.raw }.len
    800193ba:	e02a                	sd	a0,0(sp)
    800193bc:	e42e                	sd	a1,8(sp)
    }
    800193be:	852e                	mv	a0,a1
    800193c0:	6105                	addi	sp,sp,32
    800193c2:	8082                	ret

Disassembly of section .text._ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E:

00000000800193c4 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E>:
    I: Iterator,
{
    type Item = I::Item;

    #[inline]
    fn next(&mut self) -> Option<Self::Item> {
    800193c4:	1101                	addi	sp,sp,-32
    800193c6:	ec06                	sd	ra,24(sp)
    800193c8:	e82a                	sd	a0,16(sp)
        if self.first_take {
    800193ca:	01054583          	lbu	a1,16(a0)
    800193ce:	8985                	andi	a1,a1,1
    800193d0:	4601                	li	a2,0
    800193d2:	e02a                	sd	a0,0(sp)
    800193d4:	02c58063          	beq	a1,a2,800193f4 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E+0x30>
    800193d8:	a009                	j	800193da <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E+0x16>
    800193da:	4501                	li	a0,0
            self.first_take = false;
    800193dc:	6582                	ld	a1,0(sp)
    800193de:	00a58823          	sb	a0,16(a1)
            self.iter.next()
    800193e2:	00858513          	addi	a0,a1,8
    800193e6:	fffec097          	auipc	ra,0xfffec
    800193ea:	dea080e7          	jalr	-534(ra) # 800051d0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE>
    800193ee:	c42a                	sw	a0,8(sp)
    800193f0:	c62e                	sw	a1,12(sp)
    800193f2:	a821                	j	8001940a <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E+0x46>
        } else {
            self.iter.nth(self.step)
    800193f4:	6502                	ld	a0,0(sp)
    800193f6:	0521                	addi	a0,a0,8
    800193f8:	6582                	ld	a1,0(sp)
    800193fa:	618c                	ld	a1,0(a1)
    800193fc:	fffec097          	auipc	ra,0xfffec
    80019400:	b82080e7          	jalr	-1150(ra) # 80004f7e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h106b6eb91d4c0567E>
    80019404:	c42a                	sw	a0,8(sp)
    80019406:	c62e                	sw	a1,12(sp)
    80019408:	a011                	j	8001940c <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E+0x48>
        if self.first_take {
    8001940a:	a011                	j	8001940e <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E+0x4a>
    8001940c:	a009                	j	8001940e <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E+0x4a>
        }
    }
    8001940e:	4522                	lw	a0,8(sp)
    80019410:	45b2                	lw	a1,12(sp)
    80019412:	60e2                	ld	ra,24(sp)
    80019414:	6105                	addi	sp,sp,32
    80019416:	8082                	ret

Disassembly of section .text._ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E:

0000000080019418 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E>:
    fn next(&mut self) -> Option<Self::Item> {
    80019418:	7179                	addi	sp,sp,-48
    8001941a:	f406                	sd	ra,40(sp)
    8001941c:	f02a                	sd	a0,32(sp)
        if self.first_take {
    8001941e:	01854583          	lbu	a1,24(a0)
    80019422:	8985                	andi	a1,a1,1
    80019424:	4601                	li	a2,0
    80019426:	e42a                	sd	a0,8(sp)
    80019428:	00c58f63          	beq	a1,a2,80019446 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E+0x2e>
    8001942c:	a009                	j	8001942e <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E+0x16>
    8001942e:	4501                	li	a0,0
            self.first_take = false;
    80019430:	65a2                	ld	a1,8(sp)
    80019432:	00a58c23          	sb	a0,24(a1)
            self.iter.next()
    80019436:	852e                	mv	a0,a1
    80019438:	00006097          	auipc	ra,0x6
    8001943c:	604080e7          	jalr	1540(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    80019440:	e82a                	sd	a0,16(sp)
    80019442:	ec2e                	sd	a1,24(sp)
    80019444:	a811                	j	80019458 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E+0x40>
            self.iter.nth(self.step)
    80019446:	6522                	ld	a0,8(sp)
    80019448:	690c                	ld	a1,16(a0)
    8001944a:	fffec097          	auipc	ra,0xfffec
    8001944e:	c20080e7          	jalr	-992(ra) # 8000506a <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h746355bbdc826e18E>
    80019452:	e82a                	sd	a0,16(sp)
    80019454:	ec2e                	sd	a1,24(sp)
    80019456:	a011                	j	8001945a <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E+0x42>
        if self.first_take {
    80019458:	a011                	j	8001945c <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E+0x44>
    8001945a:	a009                	j	8001945c <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haaca6b77ed2a9c31E+0x44>
    }
    8001945c:	6542                	ld	a0,16(sp)
    8001945e:	65e2                	ld	a1,24(sp)
    80019460:	70a2                	ld	ra,40(sp)
    80019462:	6145                	addi	sp,sp,48
    80019464:	8082                	ret

Disassembly of section .text._ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17hb71d5648258dbefbE:

0000000080019466 <_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17hb71d5648258dbefbE>:
    pub(in crate::iter) fn new(iter: I, step: usize) -> StepBy<I> {
    80019466:	7179                	addi	sp,sp,-48
    80019468:	8732                	mv	a4,a2
    8001946a:	87ae                	mv	a5,a1
    8001946c:	d02e                	sw	a1,32(sp)
    8001946e:	d232                	sw	a2,36(sp)
    80019470:	f436                	sd	a3,40(sp)
    80019472:	4581                	li	a1,0
        assert!(step != 0);
    80019474:	ec36                	sd	a3,24(sp)
    80019476:	e82a                	sd	a0,16(sp)
    80019478:	e43a                	sd	a4,8(sp)
    8001947a:	e03e                	sd	a5,0(sp)
    8001947c:	02b69163          	bne	a3,a1,8001949e <.LBB2_4+0x14>
    80019480:	a009                	j	80019482 <.LBB2_3>

0000000080019482 <.LBB2_3>:
    80019482:	0000f517          	auipc	a0,0xf
    80019486:	02950513          	addi	a0,a0,41 # 800284ab <.L__unnamed_1>

000000008001948a <.LBB2_4>:
    8001948a:	0000f617          	auipc	a2,0xf
    8001948e:	0be60613          	addi	a2,a2,190 # 80028548 <.L__unnamed_2>
    80019492:	45ed                	li	a1,27
    80019494:	00008097          	auipc	ra,0x8
    80019498:	836080e7          	jalr	-1994(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001949c:	0000                	unimp
        StepBy { iter, step: step - 1, first_take: true }
    8001949e:	6562                	ld	a0,24(sp)
    800194a0:	fff50593          	addi	a1,a0,-1
    800194a4:	6602                	ld	a2,0(sp)
    800194a6:	66c2                	ld	a3,16(sp)
    800194a8:	c690                	sw	a2,8(a3)
    800194aa:	6722                	ld	a4,8(sp)
    800194ac:	c6d8                	sw	a4,12(a3)
    800194ae:	e28c                	sd	a1,0(a3)
    800194b0:	4585                	li	a1,1
    800194b2:	00b68823          	sb	a1,16(a3) # 2010 <.Lline_table_start0+0x2b>
    }
    800194b6:	6145                	addi	sp,sp,48
    800194b8:	8082                	ret

Disassembly of section .text._ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17hd06ad15fe774cd44E:

00000000800194ba <_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17hd06ad15fe774cd44E>:
    pub(in crate::iter) fn new(iter: I, step: usize) -> StepBy<I> {
    800194ba:	7139                	addi	sp,sp,-64
    800194bc:	f42e                	sd	a1,40(sp)
    800194be:	f832                	sd	a2,48(sp)
    800194c0:	fc36                	sd	a3,56(sp)
    800194c2:	4701                	li	a4,0
        assert!(step != 0);
    800194c4:	f036                	sd	a3,32(sp)
    800194c6:	ec32                	sd	a2,24(sp)
    800194c8:	e82e                	sd	a1,16(sp)
    800194ca:	e42a                	sd	a0,8(sp)
    800194cc:	02e69163          	bne	a3,a4,800194ee <.LBB3_4+0x14>
    800194d0:	a009                	j	800194d2 <.LBB3_3>

00000000800194d2 <.LBB3_3>:
    800194d2:	0000f517          	auipc	a0,0xf
    800194d6:	fd950513          	addi	a0,a0,-39 # 800284ab <.L__unnamed_1>

00000000800194da <.LBB3_4>:
    800194da:	0000f617          	auipc	a2,0xf
    800194de:	06e60613          	addi	a2,a2,110 # 80028548 <.L__unnamed_2>
    800194e2:	45ed                	li	a1,27
    800194e4:	00007097          	auipc	ra,0x7
    800194e8:	7e6080e7          	jalr	2022(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800194ec:	0000                	unimp
        StepBy { iter, step: step - 1, first_take: true }
    800194ee:	7502                	ld	a0,32(sp)
    800194f0:	fff50593          	addi	a1,a0,-1
    800194f4:	6642                	ld	a2,16(sp)
    800194f6:	66a2                	ld	a3,8(sp)
    800194f8:	e290                	sd	a2,0(a3)
    800194fa:	6762                	ld	a4,24(sp)
    800194fc:	e698                	sd	a4,8(a3)
    800194fe:	ea8c                	sd	a1,16(a3)
    80019500:	4585                	li	a1,1
    80019502:	00b68c23          	sb	a1,24(a3)
    }
    80019506:	6121                	addi	sp,sp,64
    80019508:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hee817cfc8d040c74E:

000000008001950a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hee817cfc8d040c74E>:
        self
    8001950a:	6990                	ld	a2,16(a1)
    8001950c:	e910                	sd	a2,16(a0)
    8001950e:	6590                	ld	a2,8(a1)
    80019510:	e510                	sd	a2,8(a0)
    80019512:	618c                	ld	a1,0(a1)
    80019514:	e10c                	sd	a1,0(a0)
    }
    80019516:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf8d4f5e5427a4edeE:

0000000080019518 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf8d4f5e5427a4edeE>:
        self
    80019518:	6d90                	ld	a2,24(a1)
    8001951a:	ed10                	sd	a2,24(a0)
    8001951c:	6990                	ld	a2,16(a1)
    8001951e:	e910                	sd	a2,16(a0)
    80019520:	6590                	ld	a2,8(a1)
    80019522:	e510                	sd	a2,8(a0)
    80019524:	618c                	ld	a1,0(a1)
    80019526:	e10c                	sd	a1,0(a0)
    }
    80019528:	8082                	ret

Disassembly of section .text._ZN6kernel2fs6bitmap19locate_inode_offset17h33ad889bb53120d7E:

000000008001952a <_ZN6kernel2fs6bitmap19locate_inode_offset17h33ad889bb53120d7E>:
// }

/// Given an inode number. 
/// Calculate the offset index of this inode inside the block. 
#[inline]
fn locate_inode_offset(inum: u32) -> usize {
    8001952a:	1141                	addi	sp,sp,-16
    8001952c:	85aa                	mv	a1,a0
    8001952e:	c62a                	sw	a0,12(sp)
    inum as usize % IPB
    80019530:	893d                	andi	a0,a0,15
}
    80019532:	0141                	addi	sp,sp,16
    80019534:	8082                	ret

Disassembly of section .text._ZN6kernel2fs6bitmap5bfree17h4cfdf54c3e01916cE:

0000000080019536 <_ZN6kernel2fs6bitmap5bfree17h4cfdf54c3e01916cE>:

/// Free a block in the disk by setting the relevant bit in bitmap to 0.
pub fn bfree(dev: u32, blockno: u32) {
    80019536:	7115                	addi	sp,sp,-224
    80019538:	ed86                	sd	ra,216(sp)
    8001953a:	862e                	mv	a2,a1
    8001953c:	86aa                	mv	a3,a0
    8001953e:	d92a                	sw	a0,176(sp)
    80019540:	db2e                	sw	a1,180(sp)

0000000080019542 <.LBB1_12>:
    let bm_blockno = unsafe { SUPER_BLOCK.bitmap_blockno(blockno) };
    80019542:	00054517          	auipc	a0,0x54
    80019546:	c9e50513          	addi	a0,a0,-866 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    8001954a:	ecb2                	sd	a2,88(sp)
    8001954c:	e8b6                	sd	a3,80(sp)
    8001954e:	ffff4097          	auipc	ra,0xffff4
    80019552:	f9e080e7          	jalr	-98(ra) # 8000d4ec <_ZN6kernel2fs10superblock10SuperBlock14bitmap_blockno17h68c147da5f258aa0E>
    80019556:	85aa                	mv	a1,a0
    80019558:	dd2a                	sw	a0,184(sp)
    8001955a:	e4ae                	sd	a1,72(sp)
    8001955c:	a009                	j	8001955e <.LBB1_12+0x1c>
    8001955e:	6509                	lui	a0,0x2
    80019560:	357d                	addiw	a0,a0,-1
    let bm_offset = blockno % BPB;
    80019562:	65e6                	ld	a1,88(sp)
    80019564:	8d6d                	and	a0,a0,a1
    80019566:	df2a                	sw	a0,188(sp)
    let index = (bm_offset / 8) as isize;
    80019568:	0035d513          	srli	a0,a1,0x3
    8001956c:	3ff57513          	andi	a0,a0,1023
    80019570:	e1aa                	sd	a0,192(sp)
    let bit = (bm_offset % 8) as usize;
    80019572:	0075f613          	andi	a2,a1,7
    80019576:	e5b2                	sd	a2,200(sp)

0000000080019578 <.LBB1_13>:
    let mut buf = BCACHE.bread(dev, bm_blockno);
    80019578:	00013597          	auipc	a1,0x13
    8001957c:	a8858593          	addi	a1,a1,-1400 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    80019580:	1094                	addi	a3,sp,96
    80019582:	e0aa                	sd	a0,64(sp)
    80019584:	8536                	mv	a0,a3
    80019586:	66c6                	ld	a3,80(sp)
    80019588:	fc32                	sd	a2,56(sp)
    8001958a:	8636                	mv	a2,a3
    8001958c:	66a6                	ld	a3,72(sp)
    8001958e:	fffe8097          	auipc	ra,0xfffe8
    80019592:	270080e7          	jalr	624(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    80019596:	a009                	j	80019598 <.LBB1_13+0x20>
    80019598:	1088                	addi	a0,sp,96
    
    let byte = unsafe { (buf.raw_data_mut() as *mut u8).offset(index).as_mut().unwrap() };
    8001959a:	fffe8097          	auipc	ra,0xfffe8
    8001959e:	404080e7          	jalr	1028(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    800195a2:	f82a                	sd	a0,48(sp)
    800195a4:	a009                	j	800195a6 <.LBB1_13+0x2e>
    800195a6:	7542                	ld	a0,48(sp)
    800195a8:	6586                	ld	a1,64(sp)
    800195aa:	00007097          	auipc	ra,0x7
    800195ae:	1ae080e7          	jalr	430(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    800195b2:	f42a                	sd	a0,40(sp)
    800195b4:	a009                	j	800195b6 <.LBB1_13+0x3e>
    800195b6:	7522                	ld	a0,40(sp)
    800195b8:	00007097          	auipc	ra,0x7
    800195bc:	16e080e7          	jalr	366(ra) # 80020726 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E>
    800195c0:	f02a                	sd	a0,32(sp)
    800195c2:	a009                	j	800195c4 <.LBB1_14>

00000000800195c4 <.LBB1_14>:
    800195c4:	0000f597          	auipc	a1,0xf
    800195c8:	f9c58593          	addi	a1,a1,-100 # 80028560 <.L__unnamed_1>
    800195cc:	7502                	ld	a0,32(sp)
    800195ce:	00007097          	auipc	ra,0x7
    800195d2:	d7e080e7          	jalr	-642(ra) # 8002034c <_ZN4core6option15Option$LT$T$GT$6unwrap17h5a4b65bf576d7407E>
    800195d6:	ec2a                	sd	a0,24(sp)
    800195d8:	a009                	j	800195da <.LBB1_14+0x16>
    800195da:	6562                	ld	a0,24(sp)
    800195dc:	e9aa                	sd	a0,208(sp)
    if !byte.get_bit(bit) {
    800195de:	75e2                	ld	a1,56(sp)
    800195e0:	fffec097          	auipc	ra,0xfffec
    800195e4:	166080e7          	jalr	358(ra) # 80005746 <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7get_bit17h99ad8dfcddb9a62bE>
    800195e8:	e82a                	sd	a0,16(sp)
    800195ea:	a009                	j	800195ec <.LBB1_14+0x28>
    800195ec:	6542                	ld	a0,16(sp)
    800195ee:	e105                	bnez	a0,8001960e <.LBB1_16+0x14>
    800195f0:	a009                	j	800195f2 <.LBB1_15>

00000000800195f2 <.LBB1_15>:
        panic!("bitmap: double freeing a block");
    800195f2:	0000f517          	auipc	a0,0xf
    800195f6:	f8650513          	addi	a0,a0,-122 # 80028578 <.L__unnamed_2>

00000000800195fa <.LBB1_16>:
    800195fa:	0000f617          	auipc	a2,0xf
    800195fe:	f9e60613          	addi	a2,a2,-98 # 80028598 <.L__unnamed_3>
    80019602:	45f9                	li	a1,30
    80019604:	00007097          	auipc	ra,0x7
    80019608:	6c6080e7          	jalr	1734(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001960c:	0000                	unimp
    8001960e:	4501                	li	a0,0
    }
    byte.set_bit(bit, false);
    80019610:	65e2                	ld	a1,24(sp)
    80019612:	e42a                	sd	a0,8(sp)
    80019614:	852e                	mv	a0,a1
    80019616:	75e2                	ld	a1,56(sp)
    80019618:	6622                	ld	a2,8(sp)
    8001961a:	fffec097          	auipc	ra,0xfffec
    8001961e:	1ac080e7          	jalr	428(ra) # 800057c6 <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7set_bit17hef1828122bb9e00cE>
    80019622:	a009                	j	80019624 <.LBB1_16+0x2a>
    LOG.write(buf);
    80019624:	650a                	ld	a0,128(sp)
    80019626:	f52a                	sd	a0,168(sp)
    80019628:	7566                	ld	a0,120(sp)
    8001962a:	f12a                	sd	a0,160(sp)
    8001962c:	7546                	ld	a0,112(sp)
    8001962e:	ed2a                	sd	a0,152(sp)
    80019630:	7526                	ld	a0,104(sp)
    80019632:	e92a                	sd	a0,144(sp)
    80019634:	7506                	ld	a0,96(sp)
    80019636:	e52a                	sd	a0,136(sp)

0000000080019638 <.LBB1_17>:
    80019638:	00041517          	auipc	a0,0x41
    8001963c:	a2850513          	addi	a0,a0,-1496 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80019640:	012c                	addi	a1,sp,136
    80019642:	ffffe097          	auipc	ra,0xffffe
    80019646:	c92080e7          	jalr	-878(ra) # 800172d4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E>
    8001964a:	a009                	j	8001964c <.LBB1_17+0x14>
}
    8001964c:	60ee                	ld	ra,216(sp)
    8001964e:	612d                	addi	sp,sp,224
    80019650:	8082                	ret

Disassembly of section .text._ZN6kernel2fs6bitmap6balloc17h3999eb2b44e551cbE:

0000000080019652 <_ZN6kernel2fs6bitmap6balloc17h3999eb2b44e551cbE>:


/// Allocate a zeroed disk block 
pub fn balloc(dev: u32) -> u32 {
    80019652:	712d                	addi	sp,sp,-288
    80019654:	ee06                	sd	ra,280(sp)
    80019656:	85aa                	mv	a1,a0
    80019658:	ddaa                	sw	a0,248(sp)
    8001965a:	4501                	li	a0,0
    let mut b = 0;
    8001965c:	daaa                	sw	a0,116(sp)

000000008001965e <.LBB2_34>:
    let sb_size = unsafe{ SUPER_BLOCK.size() };
    8001965e:	00054517          	auipc	a0,0x54
    80019662:	b8250513          	addi	a0,a0,-1150 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    80019666:	f4ae                	sd	a1,104(sp)
    80019668:	ffff4097          	auipc	ra,0xffff4
    8001966c:	d5c080e7          	jalr	-676(ra) # 8000d3c4 <_ZN6kernel2fs10superblock10SuperBlock4size17hb786cb7ba705fe16E>
    80019670:	85aa                	mv	a1,a0
    80019672:	dfaa                	sw	a0,252(sp)
    80019674:	f0ae                	sd	a1,96(sp)
    80019676:	a009                	j	80019678 <.LBB2_34+0x1a>
    while b < sb_size {
    80019678:	a009                	j	8001967a <.LBB2_34+0x1c>
    8001967a:	5556                	lw	a0,116(sp)
    8001967c:	7586                	ld	a1,96(sp)
    8001967e:	0005861b          	sext.w	a2,a1
    80019682:	02c56263          	bltu	a0,a2,800196a6 <.LBB2_36+0x16>
    80019686:	a009                	j	80019688 <.LBB2_35>

0000000080019688 <.LBB2_35>:
            }
        }
        drop(buf);
        b += BPB;
    }
    panic!("balloc: out of the block ranges.")
    80019688:	0000c517          	auipc	a0,0xc
    8001968c:	b3e50513          	addi	a0,a0,-1218 # 800251c6 <.L__unnamed_11+0xfe>

0000000080019690 <.LBB2_36>:
    80019690:	0000f617          	auipc	a2,0xf
    80019694:	00060613          	mv	a2,a2
    80019698:	02000593          	li	a1,32
    8001969c:	00007097          	auipc	ra,0x7
    800196a0:	62e080e7          	jalr	1582(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800196a4:	0000                	unimp
        let bm_blockno = unsafe{ SUPER_BLOCK.bitmap_blockno(b) };
    800196a6:	55d6                	lw	a1,116(sp)

00000000800196a8 <.LBB2_37>:
    800196a8:	00054517          	auipc	a0,0x54
    800196ac:	b3850513          	addi	a0,a0,-1224 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    800196b0:	ffff4097          	auipc	ra,0xffff4
    800196b4:	e3c080e7          	jalr	-452(ra) # 8000d4ec <_ZN6kernel2fs10superblock10SuperBlock14bitmap_blockno17h68c147da5f258aa0E>
    800196b8:	85aa                	mv	a1,a0
    800196ba:	10a12023          	sw	a0,256(sp)
    800196be:	ecae                	sd	a1,88(sp)
    800196c0:	a009                	j	800196c2 <.LBB2_38>

00000000800196c2 <.LBB2_38>:
        let mut buf = BCACHE.bread(dev, bm_blockno);
    800196c2:	00013597          	auipc	a1,0x13
    800196c6:	93e58593          	addi	a1,a1,-1730 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    800196ca:	18a8                	addi	a0,sp,120
    800196cc:	7626                	ld	a2,104(sp)
    800196ce:	66e6                	ld	a3,88(sp)
    800196d0:	fffe8097          	auipc	ra,0xfffe8
    800196d4:	12e080e7          	jalr	302(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    800196d8:	a009                	j	800196da <.LBB2_38+0x18>
    800196da:	4501                	li	a0,0
        let mut bi = 0;
    800196dc:	d12a                	sw	a0,160(sp)
        while bi < BPB && b + bi < sb_size {
    800196de:	a009                	j	800196e0 <.LBB2_38+0x1e>
    800196e0:	0a016503          	lwu	a0,160(sp)
    800196e4:	8135                	srli	a0,a0,0xd
    800196e6:	4581                	li	a1,0
    800196e8:	00b50b63          	beq	a0,a1,800196fe <.LBB2_38+0x3c>
    800196ec:	a029                	j	800196f6 <.LBB2_38+0x34>
    800196ee:	4505                	li	a0,1
    800196f0:	0aa103a3          	sb	a0,167(sp)
    800196f4:	a00d                	j	80019716 <.LBB2_38+0x54>
    800196f6:	4501                	li	a0,0
    800196f8:	0aa103a3          	sb	a0,167(sp)
    800196fc:	a829                	j	80019716 <.LBB2_38+0x54>
    800196fe:	07416503          	lwu	a0,116(sp)
    80019702:	0a016583          	lwu	a1,160(sp)
    80019706:	952e                	add	a0,a0,a1
    80019708:	02051593          	slli	a1,a0,0x20
    8001970c:	9181                	srli	a1,a1,0x20
    8001970e:	e8aa                	sd	a0,80(sp)
    80019710:	14a59a63          	bne	a1,a0,80019864 <.LBB2_41>
    80019714:	a031                	j	80019720 <.LBB2_38+0x5e>
    80019716:	0a714503          	lbu	a0,167(sp)
    8001971a:	8905                	andi	a0,a0,1
    8001971c:	e91d                	bnez	a0,80019752 <.LBB2_38+0x90>
    8001971e:	a811                	j	80019732 <.LBB2_38+0x70>
    80019720:	7506                	ld	a0,96(sp)
    80019722:	0005059b          	sext.w	a1,a0
    80019726:	6646                	ld	a2,80(sp)
    80019728:	0006069b          	sext.w	a3,a2
    8001972c:	fcb6e1e3          	bltu	a3,a1,800196ee <.LBB2_38+0x2c>
    80019730:	b7d9                	j	800196f6 <.LBB2_38+0x34>
        drop(buf);
    80019732:	656a                	ld	a0,152(sp)
    80019734:	f9aa                	sd	a0,240(sp)
    80019736:	654a                	ld	a0,144(sp)
    80019738:	f5aa                	sd	a0,232(sp)
    8001973a:	652a                	ld	a0,136(sp)
    8001973c:	f1aa                	sd	a0,224(sp)
    8001973e:	650a                	ld	a0,128(sp)
    80019740:	edaa                	sd	a0,216(sp)
    80019742:	7566                	ld	a0,120(sp)
    80019744:	e9aa                	sd	a0,208(sp)
    80019746:	0988                	addi	a0,sp,208
    80019748:	ffff4097          	auipc	ra,0xffff4
    8001974c:	24a080e7          	jalr	586(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    80019750:	a8e5                	j	80019848 <.LBB2_40+0x34>
            bi += 1;
    80019752:	0a016503          	lwu	a0,160(sp)
    80019756:	0505                	addi	a0,a0,1
    80019758:	02051593          	slli	a1,a0,0x20
    8001975c:	9181                	srli	a1,a1,0x20
    8001975e:	e4aa                	sd	a0,72(sp)
    80019760:	12a59063          	bne	a1,a0,80019880 <.LBB2_43>
    80019764:	a009                	j	80019766 <.LBB2_38+0xa4>
    80019766:	6526                	ld	a0,72(sp)
    80019768:	d12a                	sw	a0,160(sp)
            let m = 1 << (bi % 8);
    8001976a:	00757593          	andi	a1,a0,7
    8001976e:	4605                	li	a2,1
    80019770:	00b615b3          	sll	a1,a2,a1
    80019774:	4601                	li	a2,0
    80019776:	e0ae                	sd	a1,64(sp)
    80019778:	12061263          	bnez	a2,8001989c <.LBB2_45>
    8001977c:	a009                	j	8001977e <.LBB2_38+0xbc>
    8001977e:	6506                	ld	a0,64(sp)
    80019780:	10a103a3          	sb	a0,263(sp)
    80019784:	18a8                	addi	a0,sp,120
            let buf_ptr = unsafe{ (buf.raw_data_mut() as *mut u8).offset((bi / 8) as isize).as_mut().unwrap() };
    80019786:	fffe8097          	auipc	ra,0xfffe8
    8001978a:	218080e7          	jalr	536(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    8001978e:	fc2a                	sd	a0,56(sp)
    80019790:	a009                	j	80019792 <.LBB2_38+0xd0>
    80019792:	0a016503          	lwu	a0,160(sp)
    80019796:	00355593          	srli	a1,a0,0x3
    8001979a:	7562                	ld	a0,56(sp)
    8001979c:	00007097          	auipc	ra,0x7
    800197a0:	fbc080e7          	jalr	-68(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    800197a4:	f82a                	sd	a0,48(sp)
    800197a6:	a009                	j	800197a8 <.LBB2_38+0xe6>
    800197a8:	7542                	ld	a0,48(sp)
    800197aa:	00007097          	auipc	ra,0x7
    800197ae:	f7c080e7          	jalr	-132(ra) # 80020726 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E>
    800197b2:	f42a                	sd	a0,40(sp)
    800197b4:	a009                	j	800197b6 <.LBB2_39>

00000000800197b6 <.LBB2_39>:
    800197b6:	0000f597          	auipc	a1,0xf
    800197ba:	e9258593          	addi	a1,a1,-366 # 80028648 <.L__unnamed_6>
    800197be:	7522                	ld	a0,40(sp)
    800197c0:	00007097          	auipc	ra,0x7
    800197c4:	b8c080e7          	jalr	-1140(ra) # 8002034c <_ZN4core6option15Option$LT$T$GT$6unwrap17h5a4b65bf576d7407E>
    800197c8:	f02a                	sd	a0,32(sp)
    800197ca:	a009                	j	800197cc <.LBB2_39+0x16>
    800197cc:	7502                	ld	a0,32(sp)
    800197ce:	e62a                	sd	a0,264(sp)
            let buf_val = unsafe{ ptr::read(buf_ptr) };
    800197d0:	ffff7097          	auipc	ra,0xffff7
    800197d4:	250080e7          	jalr	592(ra) # 80010a20 <_ZN4core3ptr4read17h89a5fabfdcdd4445E>
    800197d8:	85aa                	mv	a1,a0
    800197da:	10a10ba3          	sb	a0,279(sp)
    800197de:	ec2e                	sd	a1,24(sp)
    800197e0:	a009                	j	800197e2 <.LBB2_39+0x2c>
            if buf_val == 0 { // Is block free?
    800197e2:	6562                	ld	a0,24(sp)
    800197e4:	0ff57593          	zext.b	a1,a0
    800197e8:	4601                	li	a2,0
    800197ea:	00c59a63          	bne	a1,a2,800197fe <.LBB2_39+0x48>
    800197ee:	a009                	j	800197f0 <.LBB2_39+0x3a>
                unsafe{ ptr::write(buf_ptr, m) };
    800197f0:	7502                	ld	a0,32(sp)
    800197f2:	6586                	ld	a1,64(sp)
    800197f4:	ffff7097          	auipc	ra,0xffff7
    800197f8:	492080e7          	jalr	1170(ra) # 80010c86 <_ZN4core3ptr5write17h7121962e424d368bE>
    800197fc:	a011                	j	80019800 <.LBB2_39+0x4a>
        while bi < BPB && b + bi < sb_size {
    800197fe:	b5cd                	j	800196e0 <.LBB2_38+0x1e>
                LOG.write(buf);
    80019800:	656a                	ld	a0,152(sp)
    80019802:	e5aa                	sd	a0,200(sp)
    80019804:	654a                	ld	a0,144(sp)
    80019806:	e1aa                	sd	a0,192(sp)
    80019808:	652a                	ld	a0,136(sp)
    8001980a:	fd2a                	sd	a0,184(sp)
    8001980c:	650a                	ld	a0,128(sp)
    8001980e:	f92a                	sd	a0,176(sp)
    80019810:	7566                	ld	a0,120(sp)
    80019812:	f52a                	sd	a0,168(sp)

0000000080019814 <.LBB2_40>:
    80019814:	00041517          	auipc	a0,0x41
    80019818:	84c50513          	addi	a0,a0,-1972 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8001981c:	112c                	addi	a1,sp,168
    8001981e:	ffffe097          	auipc	ra,0xffffe
    80019822:	ab6080e7          	jalr	-1354(ra) # 800172d4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E>
    80019826:	a009                	j	80019828 <.LBB2_40+0x14>
                return b + bi
    80019828:	07416503          	lwu	a0,116(sp)
    8001982c:	0a016583          	lwu	a1,160(sp)
    80019830:	952e                	add	a0,a0,a1
    80019832:	02051593          	slli	a1,a0,0x20
    80019836:	9181                	srli	a1,a1,0x20
    80019838:	e82a                	sd	a0,16(sp)
    8001983a:	08a59063          	bne	a1,a0,800198ba <.LBB2_47>
    8001983e:	a009                	j	80019840 <.LBB2_40+0x2c>
}
    80019840:	6542                	ld	a0,16(sp)
    80019842:	60f2                	ld	ra,280(sp)
    80019844:	6115                	addi	sp,sp,288
    80019846:	8082                	ret
        b += BPB;
    80019848:	07416503          	lwu	a0,116(sp)
    8001984c:	6589                	lui	a1,0x2
    8001984e:	952e                	add	a0,a0,a1
    80019850:	02051593          	slli	a1,a0,0x20
    80019854:	9181                	srli	a1,a1,0x20
    80019856:	e42a                	sd	a0,8(sp)
    80019858:	06a59f63          	bne	a1,a0,800198d6 <.LBB2_49>
    8001985c:	a009                	j	8001985e <.LBB2_40+0x4a>
    8001985e:	6522                	ld	a0,8(sp)
    80019860:	daaa                	sw	a0,116(sp)
    while b < sb_size {
    80019862:	bd21                	j	8001967a <.LBB2_34+0x1c>

0000000080019864 <.LBB2_41>:
        while bi < BPB && b + bi < sb_size {
    80019864:	0000f517          	auipc	a0,0xf
    80019868:	d6c50513          	addi	a0,a0,-660 # 800285d0 <str.0>

000000008001986c <.LBB2_42>:
    8001986c:	0000f617          	auipc	a2,0xf
    80019870:	d4460613          	addi	a2,a2,-700 # 800285b0 <.L__unnamed_7>
    80019874:	45f1                	li	a1,28
    80019876:	00007097          	auipc	ra,0x7
    8001987a:	454080e7          	jalr	1108(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080019880 <.LBB2_43>:
            bi += 1;
    80019880:	0000f517          	auipc	a0,0xf
    80019884:	d5050513          	addi	a0,a0,-688 # 800285d0 <str.0>

0000000080019888 <.LBB2_44>:
    80019888:	0000f617          	auipc	a2,0xf
    8001988c:	d6860613          	addi	a2,a2,-664 # 800285f0 <.L__unnamed_8>
    80019890:	45f1                	li	a1,28
    80019892:	00007097          	auipc	ra,0x7
    80019896:	438080e7          	jalr	1080(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001989c <.LBB2_45>:
            let m = 1 << (bi % 8);
    8001989c:	0000f517          	auipc	a0,0xf
    800198a0:	d8450513          	addi	a0,a0,-636 # 80028620 <str.1>

00000000800198a4 <.LBB2_46>:
    800198a4:	0000f617          	auipc	a2,0xf
    800198a8:	d6460613          	addi	a2,a2,-668 # 80028608 <.L__unnamed_9>
    800198ac:	02300593          	li	a1,35
    800198b0:	00007097          	auipc	ra,0x7
    800198b4:	41a080e7          	jalr	1050(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800198ba <.LBB2_47>:
                return b + bi
    800198ba:	0000f517          	auipc	a0,0xf
    800198be:	d1650513          	addi	a0,a0,-746 # 800285d0 <str.0>

00000000800198c2 <.LBB2_48>:
    800198c2:	0000f617          	auipc	a2,0xf
    800198c6:	d9e60613          	addi	a2,a2,-610 # 80028660 <.L__unnamed_10>
    800198ca:	45f1                	li	a1,28
    800198cc:	00007097          	auipc	ra,0x7
    800198d0:	3fe080e7          	jalr	1022(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

00000000800198d6 <.LBB2_49>:
        b += BPB;
    800198d6:	0000f517          	auipc	a0,0xf
    800198da:	cfa50513          	addi	a0,a0,-774 # 800285d0 <str.0>

00000000800198de <.LBB2_50>:
    800198de:	0000f617          	auipc	a2,0xf
    800198e2:	d9a60613          	addi	a2,a2,-614 # 80028678 <.L__unnamed_11>
    800198e6:	45f1                	li	a1,28
    800198e8:	00007097          	auipc	ra,0x7
    800198ec:	3e2080e7          	jalr	994(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs6bitmap11inode_alloc17h795ccd5e252a2ae8E:

00000000800198f2 <_ZN6kernel2fs6bitmap11inode_alloc17h795ccd5e252a2ae8E>:

pub fn inode_alloc(dev: u32, itype: InodeType) -> u32 {
    800198f2:	716d                	addi	sp,sp,-272
    800198f4:	e606                	sd	ra,264(sp)
    800198f6:	862e                	mv	a2,a1
    800198f8:	86aa                	mv	a3,a0
    800198fa:	cbaa                	sw	a0,212(sp)
    800198fc:	0cb11d23          	sh	a1,218(sp)

0000000080019900 <.LBB3_20>:
    let size = unsafe { SUPER_BLOCK.ninodes() };
    80019900:	00054517          	auipc	a0,0x54
    80019904:	8e050513          	addi	a0,a0,-1824 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    80019908:	ecb2                	sd	a2,88(sp)
    8001990a:	e8b6                	sd	a3,80(sp)
    8001990c:	ffff4097          	auipc	ra,0xffff4
    80019910:	ad8080e7          	jalr	-1320(ra) # 8000d3e4 <_ZN6kernel2fs10superblock10SuperBlock7ninodes17h023c9cafc4b11648E>
    80019914:	85aa                	mv	a1,a0
    80019916:	cfaa                	sw	a0,220(sp)
    80019918:	e4ae                	sd	a1,72(sp)
    8001991a:	a009                	j	8001991c <.LBB3_20+0x1c>
    8001991c:	4505                	li	a0,1
    for inum in 1..size {
    8001991e:	d0aa                	sw	a0,96(sp)
    80019920:	65a6                	ld	a1,72(sp)
    80019922:	d2ae                	sw	a1,100(sp)
    80019924:	fffec097          	auipc	ra,0xfffec
    80019928:	a24080e7          	jalr	-1500(ra) # 80005348 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb3f70b8b942a274cE>
    8001992c:	e0aa                	sd	a0,64(sp)
    8001992e:	fc2e                	sd	a1,56(sp)
    80019930:	a009                	j	80019932 <.LBB3_20+0x32>
    80019932:	6506                	ld	a0,64(sp)
    80019934:	d4aa                	sw	a0,104(sp)
    80019936:	75e2                	ld	a1,56(sp)
    80019938:	d6ae                	sw	a1,108(sp)
    8001993a:	a009                	j	8001993c <.LBB3_20+0x3c>
    8001993c:	10a8                	addi	a0,sp,104
    8001993e:	fffec097          	auipc	ra,0xfffec
    80019942:	892080e7          	jalr	-1902(ra) # 800051d0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc3ac7934027fecbfE>
    80019946:	d8aa                	sw	a0,112(sp)
    80019948:	daae                	sw	a1,116(sp)
    8001994a:	a009                	j	8001994c <.LBB3_20+0x4c>
    8001994c:	07016503          	lwu	a0,112(sp)
    80019950:	4581                	li	a1,0
    80019952:	00b50463          	beq	a0,a1,8001995a <.LBB3_21>
    80019956:	a009                	j	80019958 <.LBB3_20+0x58>
    80019958:	a005                	j	80019978 <.LBB3_22+0x16>

000000008001995a <.LBB3_21>:
            LOG.write(buf);
            return inum
        }
    }

    panic!("not enough inode to alloc");
    8001995a:	0000f517          	auipc	a0,0xf
    8001995e:	d4e50513          	addi	a0,a0,-690 # 800286a8 <.L__unnamed_12>

0000000080019962 <.LBB3_22>:
    80019962:	0000f617          	auipc	a2,0xf
    80019966:	d6660613          	addi	a2,a2,-666 # 800286c8 <.L__unnamed_13>
    8001996a:	45e5                	li	a1,25
    8001996c:	00007097          	auipc	ra,0x7
    80019970:	35e080e7          	jalr	862(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80019974:	0000                	unimp
    for inum in 1..size {
    80019976:	0000                	unimp
    80019978:	07416503          	lwu	a0,116(sp)
    8001997c:	d1aa                	sw	a0,224(sp)
    8001997e:	d3aa                	sw	a0,228(sp)
    80019980:	d5aa                	sw	a0,232(sp)

0000000080019982 <.LBB3_23>:
        let blockno = unsafe { SUPER_BLOCK.locate_inode(inum) };
    80019982:	00054597          	auipc	a1,0x54
    80019986:	85e58593          	addi	a1,a1,-1954 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    8001998a:	f82a                	sd	a0,48(sp)
    8001998c:	852e                	mv	a0,a1
    8001998e:	75c2                	ld	a1,48(sp)
    80019990:	ffff4097          	auipc	ra,0xffff4
    80019994:	a70080e7          	jalr	-1424(ra) # 8000d400 <_ZN6kernel2fs10superblock10SuperBlock12locate_inode17h7c732a61e5f44353E>
    80019998:	85aa                	mv	a1,a0
    8001999a:	d7aa                	sw	a0,236(sp)
    8001999c:	f42e                	sd	a1,40(sp)
    8001999e:	a009                	j	800199a0 <.LBB3_23+0x1e>
        let offset = locate_inode_offset(inum) as isize;
    800199a0:	7542                	ld	a0,48(sp)
    800199a2:	00000097          	auipc	ra,0x0
    800199a6:	b88080e7          	jalr	-1144(ra) # 8001952a <_ZN6kernel2fs6bitmap19locate_inode_offset17h33ad889bb53120d7E>
    800199aa:	f02a                	sd	a0,32(sp)
    800199ac:	a009                	j	800199ae <.LBB3_23+0x2c>
    800199ae:	7502                	ld	a0,32(sp)
    800199b0:	f9aa                	sd	a0,240(sp)

00000000800199b2 <.LBB3_24>:
        let mut buf = BCACHE.bread(dev, blockno);
    800199b2:	00012597          	auipc	a1,0x12
    800199b6:	64e58593          	addi	a1,a1,1614 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    800199ba:	18a8                	addi	a0,sp,120
    800199bc:	6646                	ld	a2,80(sp)
    800199be:	76a2                	ld	a3,40(sp)
    800199c0:	fffe8097          	auipc	ra,0xfffe8
    800199c4:	e3e080e7          	jalr	-450(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    800199c8:	a009                	j	800199ca <.LBB3_24+0x18>
    800199ca:	18a8                	addi	a0,sp,120
        let dinode = unsafe { (buf.raw_data_mut() as *mut DiskInode).offset(offset) };
    800199cc:	fffe8097          	auipc	ra,0xfffe8
    800199d0:	fd2080e7          	jalr	-46(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    800199d4:	ec2a                	sd	a0,24(sp)
    800199d6:	a009                	j	800199d8 <.LBB3_24+0x26>
    800199d8:	6562                	ld	a0,24(sp)
    800199da:	7582                	ld	a1,32(sp)
    800199dc:	fffef097          	auipc	ra,0xfffef
    800199e0:	ce4080e7          	jalr	-796(ra) # 800086c0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h02ff9762c1abd856E>
    800199e4:	85aa                	mv	a1,a0
    800199e6:	fdaa                	sd	a0,248(sp)
    800199e8:	e82e                	sd	a1,16(sp)
    800199ea:	a009                	j	800199ec <.LBB3_24+0x3a>
        let dinode = unsafe { &mut *dinode };
    800199ec:	6542                	ld	a0,16(sp)
    800199ee:	e22a                	sd	a0,256(sp)
        if dinode.try_alloc(itype).is_ok() {
    800199f0:	65e6                	ld	a1,88(sp)
    800199f2:	00003097          	auipc	ra,0x3
    800199f6:	aa8080e7          	jalr	-1368(ra) # 8001c49a <_ZN6kernel2fs6dinode9DiskInode9try_alloc17hc33eb371bcbcce34E>
    800199fa:	0aa103a3          	sb	a0,167(sp)
    800199fe:	a009                	j	80019a00 <.LBB3_24+0x4e>
    80019a00:	0a710513          	addi	a0,sp,167
    80019a04:	ffff3097          	auipc	ra,0xffff3
    80019a08:	19c080e7          	jalr	412(ra) # 8000cba0 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h49a128428b9b802bE>
    80019a0c:	e42a                	sd	a0,8(sp)
    80019a0e:	a009                	j	80019a10 <.LBB3_24+0x5e>
    80019a10:	4501                	li	a0,0
    80019a12:	65a2                	ld	a1,8(sp)
    80019a14:	02a58763          	beq	a1,a0,80019a42 <.LBB3_25+0x14>
    80019a18:	a009                	j	80019a1a <.LBB3_24+0x68>
            LOG.write(buf);
    80019a1a:	656a                	ld	a0,152(sp)
    80019a1c:	e5aa                	sd	a0,200(sp)
    80019a1e:	654a                	ld	a0,144(sp)
    80019a20:	e1aa                	sd	a0,192(sp)
    80019a22:	652a                	ld	a0,136(sp)
    80019a24:	fd2a                	sd	a0,184(sp)
    80019a26:	650a                	ld	a0,128(sp)
    80019a28:	f92a                	sd	a0,176(sp)
    80019a2a:	7566                	ld	a0,120(sp)
    80019a2c:	f52a                	sd	a0,168(sp)

0000000080019a2e <.LBB3_25>:
    80019a2e:	00040517          	auipc	a0,0x40
    80019a32:	63250513          	addi	a0,a0,1586 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    80019a36:	112c                	addi	a1,sp,168
    80019a38:	ffffe097          	auipc	ra,0xffffe
    80019a3c:	89c080e7          	jalr	-1892(ra) # 800172d4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E>
    80019a40:	a039                	j	80019a4e <.LBB3_25+0x20>
    80019a42:	18a8                	addi	a0,sp,120
    }
    80019a44:	fffed097          	auipc	ra,0xfffed
    80019a48:	dec080e7          	jalr	-532(ra) # 80006830 <_ZN4core3ptr41drop_in_place$LT$kernel..fs..bio..Buf$GT$17h1d3a39863b90b2abE>
    80019a4c:	a029                	j	80019a56 <.LBB3_25+0x28>
    80019a4e:	7542                	ld	a0,48(sp)
    80019a50:	60b2                	ld	ra,264(sp)
    80019a52:	6151                	addi	sp,sp,272
    80019a54:	8082                	ret
    for inum in 1..size {
    80019a56:	b5dd                	j	8001993c <.LBB3_20+0x3c>

Disassembly of section .text._ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E:

0000000080019a58 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E>:
    pub fn as_mut_ptr(&mut self) -> *mut T {
    80019a58:	1101                	addi	sp,sp,-32
    80019a5a:	ec06                	sd	ra,24(sp)
    80019a5c:	e42a                	sd	a0,8(sp)
        let ptr = self.buf.ptr();
    80019a5e:	ffff4097          	auipc	ra,0xffff4
    80019a62:	d5a080e7          	jalr	-678(ra) # 8000d7b8 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h350ff0af36b6e646E>
    80019a66:	85aa                	mv	a1,a0
    80019a68:	e82a                	sd	a0,16(sp)
    80019a6a:	e02e                	sd	a1,0(sp)
    80019a6c:	a009                	j	80019a6e <_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E+0x16>
            assume(!ptr.is_null());
    80019a6e:	6502                	ld	a0,0(sp)
    80019a70:	00007097          	auipc	ra,0x7
    80019a74:	cfc080e7          	jalr	-772(ra) # 8002076c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE>
    80019a78:	a009                	j	80019a7a <_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E+0x22>
    80019a7a:	a009                	j	80019a7c <_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h82d0273d4dd229a4E+0x24>
    }
    80019a7c:	6502                	ld	a0,0(sp)
    80019a7e:	60e2                	ld	ra,24(sp)
    80019a80:	6105                	addi	sp,sp,32
    80019a82:	8082                	ret

Disassembly of section .text._ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hd6d03542f97696e2E:

0000000080019a84 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hd6d03542f97696e2E>:
    pub fn with_capacity_in(capacity: usize, alloc: A) -> Self {
    80019a84:	7179                	addi	sp,sp,-48
    80019a86:	f406                	sd	ra,40(sp)
    80019a88:	ec2e                	sd	a1,24(sp)
        Vec { buf: RawVec::with_capacity_in(capacity, alloc), len: 0 }
    80019a8a:	e82a                	sd	a0,16(sp)
    80019a8c:	852e                	mv	a0,a1
    80019a8e:	ffff4097          	auipc	ra,0xffff4
    80019a92:	cb2080e7          	jalr	-846(ra) # 8000d740 <_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h84bebe009e8aacedE>
    80019a96:	e42a                	sd	a0,8(sp)
    80019a98:	e02e                	sd	a1,0(sp)
    80019a9a:	a009                	j	80019a9c <_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hd6d03542f97696e2E+0x18>
    80019a9c:	6522                	ld	a0,8(sp)
    80019a9e:	65c2                	ld	a1,16(sp)
    80019aa0:	e188                	sd	a0,0(a1)
    80019aa2:	6602                	ld	a2,0(sp)
    80019aa4:	e590                	sd	a2,8(a1)
    80019aa6:	4681                	li	a3,0
    80019aa8:	e994                	sd	a3,16(a1)
    }
    80019aaa:	70a2                	ld	ra,40(sp)
    80019aac:	6145                	addi	sp,sp,48
    80019aae:	8082                	ret

Disassembly of section .text._ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hcb0594eecaa6aefcE:

0000000080019ab0 <_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hcb0594eecaa6aefcE>:
    pub unsafe fn set_len(&mut self, new_len: usize) {
    80019ab0:	1141                	addi	sp,sp,-16
    80019ab2:	e02a                	sd	a0,0(sp)
    80019ab4:	e42e                	sd	a1,8(sp)
        self.len = new_len;
    80019ab6:	e90c                	sd	a1,16(a0)
    }
    80019ab8:	0141                	addi	sp,sp,16
    80019aba:	8082                	ret

Disassembly of section .text._ZN5alloc3vec9from_elem17hcd18068e6cc62c44E:

0000000080019abc <_ZN5alloc3vec9from_elem17hcd18068e6cc62c44E>:
pub fn from_elem<T: Clone>(elem: T, n: usize) -> Vec<T> {
    80019abc:	1101                	addi	sp,sp,-32
    80019abe:	ec06                	sd	ra,24(sp)
    80019ac0:	86ae                	mv	a3,a1
    80019ac2:	00b107a3          	sb	a1,15(sp)
    80019ac6:	e832                	sd	a2,16(sp)
    <T as SpecFromElem>::from_elem(elem, n, Global)
    80019ac8:	e036                	sd	a3,0(sp)
    80019aca:	ffff4097          	auipc	ra,0xffff4
    80019ace:	212080e7          	jalr	530(ra) # 8000dcdc <_ZN63_$LT$u8$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h368e8cd88c9cd35cE>
    80019ad2:	a009                	j	80019ad4 <_ZN5alloc3vec9from_elem17hcd18068e6cc62c44E+0x18>
}
    80019ad4:	60e2                	ld	ra,24(sp)
    80019ad6:	6105                	addi	sp,sp,32
    80019ad8:	8082                	ret

Disassembly of section .text._ZN6kernel7console12console_init17h178de4f50e682d4dE:

0000000080019ada <_ZN6kernel7console12console_init17h178de4f50e682d4dE>:
use crate::define::devices::CONSOLE;

pub(crate) static PANICKED: AtomicBool = AtomicBool::new(false);

/// must be called only once in rmain.rs:rust_main
pub unsafe fn console_init() {
    80019ada:	1141                	addi	sp,sp,-16
    uart::uart_init();
    80019adc:	e406                	sd	ra,8(sp)
    80019ade:	fffef097          	auipc	ra,0xfffef
    80019ae2:	832080e7          	jalr	-1998(ra) # 80008310 <_ZN6kernel7console4uart9uart_init17h6e37cb9c514b3f69E>
    80019ae6:	a009                	j	80019ae8 <.LBB0_2>

0000000080019ae8 <.LBB0_2>:
    // DEVICE_LIST.table[CONSOLE].read = console::console_read as *const u8;
    DEVICE_LIST.table[CONSOLE].write = console::console_write as *const u8;
    80019ae8:	fffec517          	auipc	a0,0xfffec
    80019aec:	75850513          	addi	a0,a0,1880 # 80006240 <_ZN6kernel7console7console13console_write17h16dde0bf731c8a28E>

0000000080019af0 <.LBB0_3>:
    80019af0:	00053597          	auipc	a1,0x53
    80019af4:	51058593          	addi	a1,a1,1296 # 8006d000 <_ZN6kernel2fs7devices11DEVICE_LIST17h17dd10e781df8d62E>
    80019af8:	ed88                	sd	a0,24(a1)
}
    80019afa:	60a2                	ld	ra,8(sp)
    80019afc:	0141                	addi	sp,sp,16
    80019afe:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h91194fc24d72d77dE:

0000000080019b00 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h91194fc24d72d77dE>:
    fn into_iter(self) -> I {
    80019b00:	1141                	addi	sp,sp,-16
    80019b02:	e02a                	sd	a0,0(sp)
    80019b04:	e42e                	sd	a1,8(sp)
    }
    80019b06:	0141                	addi	sp,sp,16
    80019b08:	8082                	ret

Disassembly of section .text._ZN47_$LT$u16$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h6c2d3ed3bee26cdfE:

0000000080019b0a <_ZN47_$LT$u16$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h6c2d3ed3bee26cdfE>:
        unsafe fn forward_unchecked(start: Self, n: usize) -> Self {
    80019b0a:	7179                	addi	sp,sp,-48
    80019b0c:	f406                	sd	ra,40(sp)
    80019b0e:	862a                	mv	a2,a0
    80019b10:	00a11f23          	sh	a0,30(sp)
    80019b14:	f02e                	sd	a1,32(sp)
            unsafe { start.unchecked_add(n as Self) }
    80019b16:	e832                	sd	a2,16(sp)
    80019b18:	ffffc097          	auipc	ra,0xffffc
    80019b1c:	736080e7          	jalr	1846(ra) # 8001624e <_ZN4core3num21_$LT$impl$u20$u16$GT$13unchecked_add17h77849cfea045d66cE>
    80019b20:	e42a                	sd	a0,8(sp)
    80019b22:	a009                	j	80019b24 <_ZN47_$LT$u16$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h6c2d3ed3bee26cdfE+0x1a>
        }
    80019b24:	6522                	ld	a0,8(sp)
    80019b26:	70a2                	ld	ra,40(sp)
    80019b28:	6145                	addi	sp,sp,48
    80019b2a:	8082                	ret

Disassembly of section .text._ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E:

0000000080019b2c <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E>:
                fn forward_checked(start: Self, n: usize) -> Option<Self> {
    80019b2c:	7139                	addi	sp,sp,-64
    80019b2e:	fc06                	sd	ra,56(sp)
    80019b30:	862a                	mv	a2,a0
    80019b32:	d22a                	sw	a0,36(sp)
    80019b34:	f42e                	sd	a1,40(sp)
                    match Self::try_from(n) {
    80019b36:	852e                	mv	a0,a1
    80019b38:	e432                	sd	a2,8(sp)
    80019b3a:	ffffd097          	auipc	ra,0xffffd
    80019b3e:	004080e7          	jalr	4(ra) # 80016b3e <_ZN4core7convert3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17hb255d60235d519f0E>
    80019b42:	cc2a                	sw	a0,24(sp)
    80019b44:	ce2e                	sw	a1,28(sp)
    80019b46:	a009                	j	80019b48 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E+0x1c>
                        Ok(n) => start.checked_add(n),
    80019b48:	01816503          	lwu	a0,24(sp)
    80019b4c:	4581                	li	a1,0
    80019b4e:	00b50763          	beq	a0,a1,80019b5c <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E+0x30>
    80019b52:	a009                	j	80019b54 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E+0x28>
    80019b54:	4501                	li	a0,0
                        Err(_) => None, // if n is out of range, `unsigned_start + n` is too
    80019b56:	c82a                	sw	a0,16(sp)
                    match Self::try_from(n) {
    80019b58:	a005                	j	80019b78 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E+0x4c>
    80019b5a:	0000                	unimp
                        Ok(n) => start.checked_add(n),
    80019b5c:	4572                	lw	a0,28(sp)
    80019b5e:	da2a                	sw	a0,52(sp)
    80019b60:	65a2                	ld	a1,8(sp)
    80019b62:	e02a                	sd	a0,0(sp)
    80019b64:	852e                	mv	a0,a1
    80019b66:	6582                	ld	a1,0(sp)
    80019b68:	ffffc097          	auipc	ra,0xffffc
    80019b6c:	70a080e7          	jalr	1802(ra) # 80016272 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E>
    80019b70:	c82a                	sw	a0,16(sp)
    80019b72:	ca2e                	sw	a1,20(sp)
    80019b74:	a009                	j	80019b76 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E+0x4a>
                    match Self::try_from(n) {
    80019b76:	a009                	j	80019b78 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$15forward_checked17he4636346128f1b80E+0x4c>
                }
    80019b78:	4542                	lw	a0,16(sp)
    80019b7a:	45d2                	lw	a1,20(sp)
    80019b7c:	70e2                	ld	ra,56(sp)
    80019b7e:	6121                	addi	sp,sp,64
    80019b80:	8082                	ret

Disassembly of section .text._ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h8acd1cf05a7e6fdfE:

0000000080019b82 <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h8acd1cf05a7e6fdfE>:
        unsafe fn forward_unchecked(start: Self, n: usize) -> Self {
    80019b82:	7179                	addi	sp,sp,-48
    80019b84:	f406                	sd	ra,40(sp)
    80019b86:	862a                	mv	a2,a0
    80019b88:	ce2a                	sw	a0,28(sp)
    80019b8a:	f02e                	sd	a1,32(sp)
            unsafe { start.unchecked_add(n as Self) }
    80019b8c:	e832                	sd	a2,16(sp)
    80019b8e:	ffffc097          	auipc	ra,0xffffc
    80019b92:	73c080e7          	jalr	1852(ra) # 800162ca <_ZN4core3num21_$LT$impl$u20$u32$GT$13unchecked_add17hb130835cf0cc9f4fE>
    80019b96:	e42a                	sd	a0,8(sp)
    80019b98:	a009                	j	80019b9a <_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h8acd1cf05a7e6fdfE+0x18>
        }
    80019b9a:	6522                	ld	a0,8(sp)
    80019b9c:	70a2                	ld	ra,40(sp)
    80019b9e:	6145                	addi	sp,sp,48
    80019ba0:	8082                	ret

Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$15forward_checked17hea59e799b9f5a348E:

0000000080019ba2 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$15forward_checked17hea59e799b9f5a348E>:
                fn forward_checked(start: Self, n: usize) -> Option<Self> {
    80019ba2:	715d                	addi	sp,sp,-80
    80019ba4:	e486                	sd	ra,72(sp)
    80019ba6:	f82a                	sd	a0,48(sp)
    80019ba8:	fc2e                	sd	a1,56(sp)
                    match Self::try_from(n) {
    80019baa:	f02a                	sd	a0,32(sp)
    80019bac:	852e                	mv	a0,a1
    80019bae:	fffff097          	auipc	ra,0xfffff
    80019bb2:	660080e7          	jalr	1632(ra) # 8001920e <_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h9f537fdaca5aa0cfE>
    80019bb6:	f42a                	sd	a0,40(sp)
    80019bb8:	a009                	j	80019bba <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$15forward_checked17hea59e799b9f5a348E+0x18>
                        Ok(n) => start.checked_add(n),
    80019bba:	7522                	ld	a0,40(sp)
    80019bbc:	e0aa                	sd	a0,64(sp)
    80019bbe:	7582                	ld	a1,32(sp)
    80019bc0:	ec2a                	sd	a0,24(sp)
    80019bc2:	852e                	mv	a0,a1
    80019bc4:	65e2                	ld	a1,24(sp)
    80019bc6:	ffffc097          	auipc	ra,0xffffc
    80019bca:	7fa080e7          	jalr	2042(ra) # 800163c0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3b3c5205352571fE>
    80019bce:	e82a                	sd	a0,16(sp)
    80019bd0:	e42e                	sd	a1,8(sp)
    80019bd2:	a009                	j	80019bd4 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$15forward_checked17hea59e799b9f5a348E+0x32>
                }
    80019bd4:	6542                	ld	a0,16(sp)
    80019bd6:	65a2                	ld	a1,8(sp)
    80019bd8:	60a6                	ld	ra,72(sp)
    80019bda:	6161                	addi	sp,sp,80
    80019bdc:	8082                	ret

Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h1996eb6577f0eccfE:

0000000080019bde <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h1996eb6577f0eccfE>:
        unsafe fn forward_unchecked(start: Self, n: usize) -> Self {
    80019bde:	1101                	addi	sp,sp,-32
    80019be0:	ec06                	sd	ra,24(sp)
    80019be2:	e42a                	sd	a0,8(sp)
    80019be4:	e82e                	sd	a1,16(sp)
            unsafe { start.unchecked_add(n as Self) }
    80019be6:	ffffd097          	auipc	ra,0xffffd
    80019bea:	922080e7          	jalr	-1758(ra) # 80016508 <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h5e607d2949000324E>
    80019bee:	e02a                	sd	a0,0(sp)
    80019bf0:	a009                	j	80019bf2 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h1996eb6577f0eccfE+0x14>
        }
    80019bf2:	6502                	ld	a0,0(sp)
    80019bf4:	60e2                	ld	ra,24(sp)
    80019bf6:	6105                	addi	sp,sp,32
    80019bf8:	8082                	ret

Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hff4addd6504b2501E:

0000000080019bfa <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hff4addd6504b2501E>:
        unsafe fn backward_unchecked(start: Self, n: usize) -> Self {
    80019bfa:	1101                	addi	sp,sp,-32
    80019bfc:	ec06                	sd	ra,24(sp)
    80019bfe:	e42a                	sd	a0,8(sp)
    80019c00:	e82e                	sd	a1,16(sp)
            unsafe { start.unchecked_sub(n as Self) }
    80019c02:	ffffd097          	auipc	ra,0xffffd
    80019c06:	91a080e7          	jalr	-1766(ra) # 8001651c <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub17h9b0c642caf21362dE>
    80019c0a:	e02a                	sd	a0,0(sp)
    80019c0c:	a009                	j	80019c0e <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hff4addd6504b2501E+0x14>
        }
    80019c0e:	6502                	ld	a0,0(sp)
    80019c10:	60e2                	ld	ra,24(sp)
    80019c12:	6105                	addi	sp,sp,32
    80019c14:	8082                	ret

Disassembly of section .text._ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE:

0000000080019c16 <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE>:
    fn dup(&self, inode: &Inode) -> Inode {
    80019c16:	715d                	addi	sp,sp,-80
    80019c18:	e486                	sd	ra,72(sp)
    80019c1a:	fc2a                	sd	a0,56(sp)
    80019c1c:	e0ae                	sd	a1,64(sp)
        let mut guard = self.meta.acquire();
    80019c1e:	ec2e                	sd	a1,24(sp)
    80019c20:	fffe8097          	auipc	ra,0xfffe8
    80019c24:	754080e7          	jalr	1876(ra) # 80002374 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE>
    80019c28:	f82a                	sd	a0,48(sp)
    80019c2a:	a009                	j	80019c2c <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE+0x16>
    80019c2c:	1808                	addi	a0,sp,48
        guard[inode.index].refs += 1;
    80019c2e:	fffea097          	auipc	ra,0xfffea
    80019c32:	e2c080e7          	jalr	-468(ra) # 80003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>
    80019c36:	e82a                	sd	a0,16(sp)
    80019c38:	a009                	j	80019c3a <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE+0x24>
    80019c3a:	6562                	ld	a0,24(sp)
    80019c3c:	610c                	ld	a1,0(a0)
    80019c3e:	03100613          	li	a2,49
    80019c42:	e42e                	sd	a1,8(sp)
    80019c44:	04b66863          	bltu	a2,a1,80019c94 <.LBB0_8>
    80019c48:	a009                	j	80019c4a <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE+0x34>
    80019c4a:	4561                	li	a0,24
    80019c4c:	65a2                	ld	a1,8(sp)
    80019c4e:	02a58533          	mul	a0,a1,a0
    80019c52:	6642                	ld	a2,16(sp)
    80019c54:	9532                	add	a0,a0,a2
    80019c56:	6108                	ld	a0,0(a0)
    80019c58:	00150693          	addi	a3,a0,1
    80019c5c:	e036                	sd	a3,0(sp)
    80019c5e:	04a6e763          	bltu	a3,a0,80019cac <.LBB0_9>
    80019c62:	a009                	j	80019c64 <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE+0x4e>
    80019c64:	4561                	li	a0,24
    80019c66:	65a2                	ld	a1,8(sp)
    80019c68:	02a58533          	mul	a0,a1,a0
    80019c6c:	6642                	ld	a2,16(sp)
    80019c6e:	9532                	add	a0,a0,a2
    80019c70:	6682                	ld	a3,0(sp)
    80019c72:	e114                	sd	a3,0(a0)
            dev: inode.dev,
    80019c74:	6562                	ld	a0,24(sp)
    80019c76:	6518                	ld	a4,8(a0)
            index: inode.index
    80019c78:	611c                	ld	a5,0(a0)
        Inode {
    80019c7a:	f43a                	sd	a4,40(sp)
    80019c7c:	f03e                	sd	a5,32(sp)
    80019c7e:	1808                	addi	a0,sp,48
    }
    80019c80:	fffed097          	auipc	ra,0xfffed
    80019c84:	ad2080e7          	jalr	-1326(ra) # 80006752 <_ZN4core3ptr116drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$u5b$kernel..fs..inode..InodeMeta$u3b$$u20$50$u5d$$GT$$GT$17hfc695816f935467aE>
    80019c88:	a009                	j	80019c8a <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE+0x74>
    80019c8a:	7502                	ld	a0,32(sp)
    80019c8c:	75a2                	ld	a1,40(sp)
    80019c8e:	60a6                	ld	ra,72(sp)
    80019c90:	6161                	addi	sp,sp,80
    80019c92:	8082                	ret

0000000080019c94 <.LBB0_8>:
        guard[inode.index].refs += 1;
    80019c94:	0000f617          	auipc	a2,0xf
    80019c98:	a7c60613          	addi	a2,a2,-1412 # 80028710 <.L__unnamed_1>
    80019c9c:	03200593          	li	a1,50
    80019ca0:	6522                	ld	a0,8(sp)
    80019ca2:	00007097          	auipc	ra,0x7
    80019ca6:	054080e7          	jalr	84(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080019cac <.LBB0_9>:
    80019cac:	0000f517          	auipc	a0,0xf
    80019cb0:	a8450513          	addi	a0,a0,-1404 # 80028730 <str.0>

0000000080019cb4 <.LBB0_10>:
    80019cb4:	0000f617          	auipc	a2,0xf
    80019cb8:	a5c60613          	addi	a2,a2,-1444 # 80028710 <.L__unnamed_1>
    80019cbc:	45f1                	li	a1,28
    80019cbe:	00007097          	auipc	ra,0x7
    80019cc2:	00c080e7          	jalr	12(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E:

0000000080019cc8 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E>:
    fn put(&self, inode: &mut Inode) {
    80019cc8:	7161                	addi	sp,sp,-432
    80019cca:	f706                	sd	ra,424(sp)
    80019ccc:	f6aa                	sd	a0,360(sp)
    80019cce:	faae                	sd	a1,368(sp)
        let mut guard = self.meta.acquire();
    80019cd0:	f92a                	sd	a0,176(sp)
    80019cd2:	f52e                	sd	a1,168(sp)
    80019cd4:	fffe8097          	auipc	ra,0xfffe8
    80019cd8:	6a0080e7          	jalr	1696(ra) # 80002374 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE>
    80019cdc:	e1aa                	sd	a0,192(sp)
    80019cde:	a009                	j	80019ce0 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x18>
        let i = inode.index;
    80019ce0:	752a                	ld	a0,168(sp)
    80019ce2:	610c                	ld	a1,0(a0)
    80019ce4:	feae                	sd	a1,376(sp)
    80019ce6:	0188                	addi	a0,sp,192
        let imeta = &mut guard[i];
    80019ce8:	f12e                	sd	a1,160(sp)
    80019cea:	fffea097          	auipc	ra,0xfffea
    80019cee:	d70080e7          	jalr	-656(ra) # 80003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>
    80019cf2:	ed2a                	sd	a0,152(sp)
    80019cf4:	a009                	j	80019cf6 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x2e>
    80019cf6:	03100513          	li	a0,49
    80019cfa:	758a                	ld	a1,160(sp)
    80019cfc:	2ab56163          	bltu	a0,a1,80019f9e <.LBB1_54>
    80019d00:	a009                	j	80019d02 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x3a>
    80019d02:	4561                	li	a0,24
    80019d04:	758a                	ld	a1,160(sp)
    80019d06:	02a58533          	mul	a0,a1,a0
    80019d0a:	666a                	ld	a2,152(sp)
    80019d0c:	9532                	add	a0,a0,a2
    80019d0e:	e32a                	sd	a0,384(sp)
        if imeta.refs == 1 {
    80019d10:	6114                	ld	a3,0(a0)
    80019d12:	4705                	li	a4,1
    80019d14:	e92a                	sd	a0,144(sp)
    80019d16:	00e69963          	bne	a3,a4,80019d28 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x60>
    80019d1a:	a009                	j	80019d1c <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x54>
    80019d1c:	03200513          	li	a0,50
            let mut idata = self.data[i].lock();
    80019d20:	758a                	ld	a1,160(sp)
    80019d22:	00a5eb63          	bltu	a1,a0,80019d38 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x70>
    80019d26:	a47d                	j	80019fd4 <.LBB1_57>
            imeta.refs -= 1;
    80019d28:	654a                	ld	a0,144(sp)
    80019d2a:	610c                	ld	a1,0(a0)
    80019d2c:	fff58613          	addi	a2,a1,-1
    80019d30:	e532                	sd	a2,136(sp)
    80019d32:	28c5e263          	bltu	a1,a2,80019fb6 <.LBB1_55>
    80019d36:	a4b9                	j	80019f84 <.LBB1_53+0x18>
            let mut idata = self.data[i].lock();
    80019d38:	750a                	ld	a0,160(sp)
    80019d3a:	00751593          	slli	a1,a0,0x7
    80019d3e:	764a                	ld	a2,176(sp)
    80019d40:	95b2                	add	a1,a1,a2
    80019d42:	4d058513          	addi	a0,a1,1232
    80019d46:	fffed097          	auipc	ra,0xfffed
    80019d4a:	484080e7          	jalr	1156(ra) # 800071ca <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE>
    80019d4e:	e5aa                	sd	a0,200(sp)
    80019d50:	e9ae                	sd	a1,208(sp)
    80019d52:	a009                	j	80019d54 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x8c>
    80019d54:	01a8                	addi	a0,sp,200
            if !idata.valid || idata.dinode.nlink > 0 {
    80019d56:	fffed097          	auipc	ra,0xfffed
    80019d5a:	70a080e7          	jalr	1802(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    80019d5e:	e12a                	sd	a0,128(sp)
    80019d60:	a02d                	j	80019d8a <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xc2>
    80019d62:	4505                	li	a0,1
    80019d64:	0ca10ea3          	sb	a0,221(sp)
    80019d68:	a821                	j	80019d80 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xb8>
    80019d6a:	4501                	li	a0,0
    80019d6c:	0ca10ea3          	sb	a0,221(sp)
    80019d70:	a801                	j	80019d80 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xb8>
    80019d72:	01a8                	addi	a0,sp,200
    80019d74:	fffed097          	auipc	ra,0xfffed
    80019d78:	6ec080e7          	jalr	1772(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    80019d7c:	fcaa                	sd	a0,120(sp)
    80019d7e:	a831                	j	80019d9a <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xd2>
    80019d80:	0dd14503          	lbu	a0,221(sp)
    80019d84:	8905                	andi	a0,a0,1
    80019d86:	e10d                	bnez	a0,80019da8 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xe0>
    80019d88:	a03d                	j	80019db6 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xee>
    80019d8a:	650a                	ld	a0,128(sp)
    80019d8c:	04854583          	lbu	a1,72(a0)
    80019d90:	8985                	andi	a1,a1,1
    80019d92:	4601                	li	a2,0
    80019d94:	fcc587e3          	beq	a1,a2,80019d62 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x9a>
    80019d98:	bfe9                	j	80019d72 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xaa>
    80019d9a:	7566                	ld	a0,120(sp)
    80019d9c:	00e51583          	lh	a1,14(a0)
    80019da0:	4601                	li	a2,0
    80019da2:	fcb640e3          	blt	a2,a1,80019d62 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x9a>
    80019da6:	b7d1                	j	80019d6a <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xa2>
    80019da8:	01a8                	addi	a0,sp,200
                idata.valid = false;
    80019daa:	fffed097          	auipc	ra,0xfffed
    80019dae:	6c0080e7          	jalr	1728(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    80019db2:	f8aa                	sd	a0,112(sp)
    80019db4:	a039                	j	80019dc2 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0xfa>
                drop(guard);
    80019db6:	650e                	ld	a0,192(sp)
    80019db8:	ffff4097          	auipc	ra,0xffff4
    80019dbc:	c74080e7          	jalr	-908(ra) # 8000da2c <_ZN4core3mem4drop17hd75cbe4ca3ddce07E>
    80019dc0:	a835                	j	80019dfc <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x134>
    80019dc2:	4501                	li	a0,0
                idata.valid = false;
    80019dc4:	75c6                	ld	a1,112(sp)
    80019dc6:	04a58423          	sb	a0,72(a1)
                drop(idata);
    80019dca:	652e                	ld	a0,200(sp)
    80019dcc:	65ce                	ld	a1,208(sp)
    80019dce:	ffff4097          	auipc	ra,0xffff4
    80019dd2:	bf2080e7          	jalr	-1038(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    80019dd6:	a009                	j	80019dd8 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x110>
                imeta.refs -= 1;
    80019dd8:	654a                	ld	a0,144(sp)
    80019dda:	610c                	ld	a1,0(a0)
    80019ddc:	fff58613          	addi	a2,a1,-1
    80019de0:	f4b2                	sd	a2,104(sp)
    80019de2:	20c5e563          	bltu	a1,a2,80019fec <.LBB1_58>
    80019de6:	a009                	j	80019de8 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x120>
    80019de8:	7526                	ld	a0,104(sp)
    80019dea:	65ca                	ld	a1,144(sp)
    80019dec:	e188                	sd	a0,0(a1)
                drop(guard);
    80019dee:	650e                	ld	a0,192(sp)
    80019df0:	ffff4097          	auipc	ra,0xffff4
    80019df4:	c3c080e7          	jalr	-964(ra) # 8000da2c <_ZN4core3mem4drop17hd75cbe4ca3ddce07E>
    80019df8:	a009                	j	80019dfa <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x132>
            if !idata.valid || idata.dinode.nlink > 0 {
    80019dfa:	a261                	j	80019f82 <.LBB1_53+0x16>
    80019dfc:	4501                	li	a0,0
                idata.dinode.itype = InodeType::Empty;
    80019dfe:	0ca11f23          	sh	a0,222(sp)
    80019e02:	01a8                	addi	a0,sp,200
    80019e04:	fffed097          	auipc	ra,0xfffed
    80019e08:	666080e7          	jalr	1638(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    80019e0c:	f0aa                	sd	a0,96(sp)
    80019e0e:	a009                	j	80019e10 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x148>
    80019e10:	0de11503          	lh	a0,222(sp)
    80019e14:	7586                	ld	a1,96(sp)
    80019e16:	00a59423          	sh	a0,8(a1)
    80019e1a:	01a8                	addi	a0,sp,200
                idata.truncate(inode);
    80019e1c:	fffed097          	auipc	ra,0xfffed
    80019e20:	64e080e7          	jalr	1614(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    80019e24:	ecaa                	sd	a0,88(sp)
    80019e26:	a009                	j	80019e28 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x160>
    80019e28:	6566                	ld	a0,88(sp)
    80019e2a:	75aa                	ld	a1,168(sp)
    80019e2c:	00001097          	auipc	ra,0x1
    80019e30:	2d8080e7          	jalr	728(ra) # 8001b104 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E>
    80019e34:	a009                	j	80019e36 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x16e>
    80019e36:	01a8                	addi	a0,sp,200
                idata.valid = false;
    80019e38:	fffed097          	auipc	ra,0xfffed
    80019e3c:	632080e7          	jalr	1586(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    80019e40:	e8aa                	sd	a0,80(sp)
    80019e42:	a009                	j	80019e44 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x17c>
    80019e44:	4501                	li	a0,0
    80019e46:	65c6                	ld	a1,80(sp)
    80019e48:	04a58423          	sb	a0,72(a1)
                drop(idata);
    80019e4c:	652e                	ld	a0,200(sp)
    80019e4e:	65ce                	ld	a1,208(sp)
    80019e50:	ffff4097          	auipc	ra,0xffff4
    80019e54:	b70080e7          	jalr	-1168(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    80019e58:	a009                	j	80019e5a <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x192>
                let mut guard = self.meta.acquire();
    80019e5a:	754a                	ld	a0,176(sp)
    80019e5c:	fffe8097          	auipc	ra,0xfffe8
    80019e60:	518080e7          	jalr	1304(ra) # 80002374 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE>
    80019e64:	f1aa                	sd	a0,224(sp)
    80019e66:	a009                	j	80019e68 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x1a0>
    80019e68:	1188                	addi	a0,sp,224
                guard[i].refs -= 1;
    80019e6a:	fffea097          	auipc	ra,0xfffea
    80019e6e:	bf0080e7          	jalr	-1040(ra) # 80003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>
    80019e72:	e4aa                	sd	a0,72(sp)
    80019e74:	a009                	j	80019e76 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x1ae>
    80019e76:	03100513          	li	a0,49
    80019e7a:	758a                	ld	a1,160(sp)
    80019e7c:	18b56763          	bltu	a0,a1,8001a00a <.LBB1_60>
    80019e80:	a009                	j	80019e82 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x1ba>
    80019e82:	4561                	li	a0,24
    80019e84:	758a                	ld	a1,160(sp)
    80019e86:	02a58533          	mul	a0,a1,a0
    80019e8a:	6626                	ld	a2,72(sp)
    80019e8c:	9532                	add	a0,a0,a2
    80019e8e:	6108                	ld	a0,0(a0)
    80019e90:	fff50693          	addi	a3,a0,-1
    80019e94:	e0b6                	sd	a3,64(sp)
    80019e96:	18d56663          	bltu	a0,a3,8001a022 <.LBB1_61>
    80019e9a:	a009                	j	80019e9c <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x1d4>
    80019e9c:	4561                	li	a0,24
    80019e9e:	758a                	ld	a1,160(sp)
    80019ea0:	02a58533          	mul	a0,a1,a0
    80019ea4:	6626                	ld	a2,72(sp)
    80019ea6:	9532                	add	a0,a0,a2
    80019ea8:	6686                	ld	a3,64(sp)
    80019eaa:	e114                	sd	a3,0(a0)
    80019eac:	1188                	addi	a0,sp,224
                debug_assert_eq!(guard[i].refs, 0);
    80019eae:	fffea097          	auipc	ra,0xfffea
    80019eb2:	a4e080e7          	jalr	-1458(ra) # 800038fc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E>
    80019eb6:	fc2a                	sd	a0,56(sp)
    80019eb8:	a009                	j	80019eba <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x1f2>
    80019eba:	03100513          	li	a0,49
    80019ebe:	758a                	ld	a1,160(sp)
    80019ec0:	18b56063          	bltu	a0,a1,8001a040 <.LBB1_63>
    80019ec4:	a009                	j	80019ec6 <_ZN6kernel2fs5inode10InodeCache3put17heb04943bc1c5bfe5E+0x1fe>
    80019ec6:	4561                	li	a0,24
    80019ec8:	758a                	ld	a1,160(sp)
    80019eca:	02a58533          	mul	a0,a1,a0
    80019ece:	7662                	ld	a2,56(sp)
    80019ed0:	9532                	add	a0,a0,a2
    80019ed2:	f5aa                	sd	a0,232(sp)

0000000080019ed4 <.LBB1_49>:
    80019ed4:	0000a697          	auipc	a3,0xa
    80019ed8:	ecc68693          	addi	a3,a3,-308 # 80023da0 <.L__unnamed_5+0xa0>
    80019edc:	f9b6                	sd	a3,240(sp)
    80019ede:	e72a                	sd	a0,392(sp)
    80019ee0:	eb36                	sd	a3,400(sp)
    80019ee2:	6118                	ld	a4,0(a0)
    80019ee4:	4781                	li	a5,0
    80019ee6:	f82a                	sd	a0,48(sp)
    80019ee8:	f436                	sd	a3,40(sp)
    80019eea:	02f70a63          	beq	a4,a5,80019f1e <.LBB1_50+0x1a>
    80019eee:	a009                	j	80019ef0 <.LBB1_49+0x1c>
    80019ef0:	7542                	ld	a0,48(sp)
    80019ef2:	eeaa                	sd	a0,344(sp)
    80019ef4:	75a2                	ld	a1,40(sp)
    80019ef6:	f2ae                	sd	a1,352(sp)
    80019ef8:	0ab0                	addi	a2,sp,344
    80019efa:	e6b2                	sd	a2,328(sp)
    80019efc:	1294                	addi	a3,sp,352
    80019efe:	eab6                	sd	a3,336(sp)
    80019f00:	ef32                	sd	a2,408(sp)
    80019f02:	f336                	sd	a3,416(sp)

0000000080019f04 <.LBB1_50>:
    80019f04:	00006597          	auipc	a1,0x6
    80019f08:	ab458593          	addi	a1,a1,-1356 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    80019f0c:	8532                	mv	a0,a2
    80019f0e:	f036                	sd	a3,32(sp)
    80019f10:	00006097          	auipc	ra,0x6
    80019f14:	ac6080e7          	jalr	-1338(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    80019f18:	ec2a                	sd	a0,24(sp)
    80019f1a:	e82e                	sd	a1,16(sp)
    80019f1c:	a039                	j	80019f2a <.LBB1_51>
                drop(guard);
    80019f1e:	750e                	ld	a0,224(sp)
    80019f20:	ffff4097          	auipc	ra,0xffff4
    80019f24:	b0c080e7          	jalr	-1268(ra) # 8000da2c <_ZN4core3mem4drop17hd75cbe4ca3ddce07E>
    80019f28:	a8a1                	j	80019f80 <.LBB1_53+0x14>

0000000080019f2a <.LBB1_51>:
                debug_assert_eq!(guard[i].refs, 0);
    80019f2a:	00006597          	auipc	a1,0x6
    80019f2e:	a8e58593          	addi	a1,a1,-1394 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    80019f32:	7502                	ld	a0,32(sp)
    80019f34:	00006097          	auipc	ra,0x6
    80019f38:	aa2080e7          	jalr	-1374(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    80019f3c:	e42a                	sd	a0,8(sp)
    80019f3e:	e02e                	sd	a1,0(sp)
    80019f40:	a009                	j	80019f42 <.LBB1_51+0x18>
    80019f42:	6562                	ld	a0,24(sp)
    80019f44:	f62a                	sd	a0,296(sp)
    80019f46:	65c2                	ld	a1,16(sp)
    80019f48:	fa2e                	sd	a1,304(sp)
    80019f4a:	6622                	ld	a2,8(sp)
    80019f4c:	fe32                	sd	a2,312(sp)
    80019f4e:	6682                	ld	a3,0(sp)
    80019f50:	e2b6                	sd	a3,320(sp)

0000000080019f52 <.LBB1_52>:
    80019f52:	0000f597          	auipc	a1,0xf
    80019f56:	8f658593          	addi	a1,a1,-1802 # 80028848 <.L__unnamed_3>
    80019f5a:	19a8                	addi	a0,sp,248
    80019f5c:	460d                	li	a2,3
    80019f5e:	1234                	addi	a3,sp,296
    80019f60:	4709                	li	a4,2
    80019f62:	fffeb097          	auipc	ra,0xfffeb
    80019f66:	7c2080e7          	jalr	1986(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    80019f6a:	a009                	j	80019f6c <.LBB1_53>

0000000080019f6c <.LBB1_53>:
    80019f6c:	0000f597          	auipc	a1,0xf
    80019f70:	90c58593          	addi	a1,a1,-1780 # 80028878 <.L__unnamed_4>
    80019f74:	19a8                	addi	a0,sp,248
    80019f76:	00007097          	auipc	ra,0x7
    80019f7a:	dc0080e7          	jalr	-576(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    80019f7e:	0000                	unimp
            if !idata.valid || idata.dinode.nlink > 0 {
    80019f80:	a009                	j	80019f82 <.LBB1_53+0x16>
        if imeta.refs == 1 {
    80019f82:	a819                	j	80019f98 <.LBB1_53+0x2c>
            imeta.refs -= 1;
    80019f84:	652a                	ld	a0,136(sp)
    80019f86:	65ca                	ld	a1,144(sp)
    80019f88:	e188                	sd	a0,0(a1)
            drop(guard);
    80019f8a:	650e                	ld	a0,192(sp)
    80019f8c:	ffff4097          	auipc	ra,0xffff4
    80019f90:	aa0080e7          	jalr	-1376(ra) # 8000da2c <_ZN4core3mem4drop17hd75cbe4ca3ddce07E>
    80019f94:	a009                	j	80019f96 <.LBB1_53+0x2a>
        if imeta.refs == 1 {
    80019f96:	a009                	j	80019f98 <.LBB1_53+0x2c>
    }
    80019f98:	70ba                	ld	ra,424(sp)
    80019f9a:	615d                	addi	sp,sp,432
    80019f9c:	8082                	ret

0000000080019f9e <.LBB1_54>:
        let imeta = &mut guard[i];
    80019f9e:	0000e617          	auipc	a2,0xe
    80019fa2:	7b260613          	addi	a2,a2,1970 # 80028750 <.L__unnamed_5>
    80019fa6:	03200593          	li	a1,50
    80019faa:	750a                	ld	a0,160(sp)
    80019fac:	00007097          	auipc	ra,0x7
    80019fb0:	d4a080e7          	jalr	-694(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080019fb6 <.LBB1_55>:
            imeta.refs -= 1;
    80019fb6:	0000e517          	auipc	a0,0xe
    80019fba:	7ca50513          	addi	a0,a0,1994 # 80028780 <str.1>

0000000080019fbe <.LBB1_56>:
    80019fbe:	0000e617          	auipc	a2,0xe
    80019fc2:	7aa60613          	addi	a2,a2,1962 # 80028768 <.L__unnamed_6>
    80019fc6:	02100593          	li	a1,33
    80019fca:	00007097          	auipc	ra,0x7
    80019fce:	d00080e7          	jalr	-768(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

0000000080019fd4 <.LBB1_57>:
            let mut idata = self.data[i].lock();
    80019fd4:	0000e617          	auipc	a2,0xe
    80019fd8:	7d460613          	addi	a2,a2,2004 # 800287a8 <.L__unnamed_7>
    80019fdc:	03200593          	li	a1,50
    80019fe0:	750a                	ld	a0,160(sp)
    80019fe2:	00007097          	auipc	ra,0x7
    80019fe6:	d14080e7          	jalr	-748(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080019fec <.LBB1_58>:
                imeta.refs -= 1;
    80019fec:	0000e517          	auipc	a0,0xe
    80019ff0:	79450513          	addi	a0,a0,1940 # 80028780 <str.1>

0000000080019ff4 <.LBB1_59>:
    80019ff4:	0000e617          	auipc	a2,0xe
    80019ff8:	7cc60613          	addi	a2,a2,1996 # 800287c0 <.L__unnamed_8>
    80019ffc:	02100593          	li	a1,33
    8001a000:	00007097          	auipc	ra,0x7
    8001a004:	cca080e7          	jalr	-822(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001a00a <.LBB1_60>:
                guard[i].refs -= 1;
    8001a00a:	0000e617          	auipc	a2,0xe
    8001a00e:	7ce60613          	addi	a2,a2,1998 # 800287d8 <.L__unnamed_9>
    8001a012:	03200593          	li	a1,50
    8001a016:	750a                	ld	a0,160(sp)
    8001a018:	00007097          	auipc	ra,0x7
    8001a01c:	cde080e7          	jalr	-802(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a022 <.LBB1_61>:
    8001a022:	0000e517          	auipc	a0,0xe
    8001a026:	75e50513          	addi	a0,a0,1886 # 80028780 <str.1>

000000008001a02a <.LBB1_62>:
    8001a02a:	0000e617          	auipc	a2,0xe
    8001a02e:	7ae60613          	addi	a2,a2,1966 # 800287d8 <.L__unnamed_9>
    8001a032:	02100593          	li	a1,33
    8001a036:	00007097          	auipc	ra,0x7
    8001a03a:	c94080e7          	jalr	-876(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001a040 <.LBB1_63>:
                debug_assert_eq!(guard[i].refs, 0);
    8001a040:	0000e617          	auipc	a2,0xe
    8001a044:	7b060613          	addi	a2,a2,1968 # 800287f0 <.L__unnamed_10>
    8001a048:	03200593          	li	a1,50
    8001a04c:	750a                	ld	a0,160(sp)
    8001a04e:	00007097          	auipc	ra,0x7
    8001a052:	ca8080e7          	jalr	-856(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE:

000000008001a058 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE>:
    fn get(&self, dev: u32, inum: u32) -> Inode {
    8001a058:	714d                	addi	sp,sp,-336
    8001a05a:	e686                	sd	ra,328(sp)
    8001a05c:	86b2                	mv	a3,a2
    8001a05e:	872e                	mv	a4,a1
    8001a060:	ea2a                	sd	a0,272(sp)
    8001a062:	10b12c23          	sw	a1,280(sp)
    8001a066:	10c12e23          	sw	a2,284(sp)
        let mut guard = self.meta.acquire();
    8001a06a:	e52a                	sd	a0,136(sp)
    8001a06c:	e136                	sd	a3,128(sp)
    8001a06e:	fcba                	sd	a4,120(sp)
    8001a070:	fffe8097          	auipc	ra,0xfffe8
    8001a074:	304080e7          	jalr	772(ra) # 80002374 <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h78d3db676a864a1bE>
    8001a078:	f12a                	sd	a0,160(sp)
    8001a07a:	a009                	j	8001a07c <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x24>
    8001a07c:	4501                	li	a0,0
        let mut empty_i: Option<usize> = None;
    8001a07e:	f52a                	sd	a0,168(sp)
        for i in 0..NINODE {
    8001a080:	fd2a                	sd	a0,184(sp)
    8001a082:	03200593          	li	a1,50
    8001a086:	e1ae                	sd	a1,192(sp)
    8001a088:	00006097          	auipc	ra,0x6
    8001a08c:	a22080e7          	jalr	-1502(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001a090:	f8aa                	sd	a0,112(sp)
    8001a092:	f4ae                	sd	a1,104(sp)
    8001a094:	a009                	j	8001a096 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x3e>
    8001a096:	7546                	ld	a0,112(sp)
    8001a098:	e5aa                	sd	a0,200(sp)
    8001a09a:	75a6                	ld	a1,104(sp)
    8001a09c:	e9ae                	sd	a1,208(sp)
    8001a09e:	a009                	j	8001a0a0 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x48>
    8001a0a0:	01a8                	addi	a0,sp,200
    8001a0a2:	00006097          	auipc	ra,0x6
    8001a0a6:	99a080e7          	jalr	-1638(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001a0aa:	edaa                	sd	a0,216(sp)
    8001a0ac:	f1ae                	sd	a1,224(sp)
    8001a0ae:	a009                	j	8001a0b0 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x58>
    8001a0b0:	656e                	ld	a0,216(sp)
    8001a0b2:	4581                	li	a1,0
    8001a0b4:	00b50463          	beq	a0,a1,8001a0bc <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x64>
    8001a0b8:	a009                	j	8001a0ba <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x62>
    8001a0ba:	a801                	j	8001a0ca <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x72>
            Some(i) => i,
    8001a0bc:	752a                	ld	a0,168(sp)
    8001a0be:	4581                	li	a1,0
    8001a0c0:	1ab50663          	beq	a0,a1,8001a26c <.LBB2_67>
    8001a0c4:	a009                	j	8001a0c6 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x6e>
    8001a0c6:	a2d1                	j	8001a28a <.LBB2_68+0x16>
        for i in 0..NINODE {
    8001a0c8:	0000                	unimp
    8001a0ca:	750e                	ld	a0,224(sp)
    8001a0cc:	f22a                	sd	a0,288(sp)
    8001a0ce:	f62a                	sd	a0,296(sp)
    8001a0d0:	fa2a                	sd	a0,304(sp)
    8001a0d2:	110c                	addi	a1,sp,160
            if guard[i].inum == inum && guard[i].refs > 0 && guard[i].dev == dev {
    8001a0d4:	f0aa                	sd	a0,96(sp)
    8001a0d6:	852e                	mv	a0,a1
    8001a0d8:	fffea097          	auipc	ra,0xfffea
    8001a0dc:	824080e7          	jalr	-2012(ra) # 800038fc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E>
    8001a0e0:	ecaa                	sd	a0,88(sp)
    8001a0e2:	a889                	j	8001a134 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xdc>
    8001a0e4:	4505                	li	a0,1
    8001a0e6:	0ea106a3          	sb	a0,237(sp)
    8001a0ea:	a821                	j	8001a102 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xaa>
    8001a0ec:	4501                	li	a0,0
    8001a0ee:	0ea106a3          	sb	a0,237(sp)
    8001a0f2:	a801                	j	8001a102 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xaa>
    8001a0f4:	1108                	addi	a0,sp,160
    8001a0f6:	fffea097          	auipc	ra,0xfffea
    8001a0fa:	806080e7          	jalr	-2042(ra) # 800038fc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E>
    8001a0fe:	e8aa                	sd	a0,80(sp)
    8001a100:	a8b5                	j	8001a17c <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x124>
    8001a102:	0ed14503          	lbu	a0,237(sp)
    8001a106:	8905                	andi	a0,a0,1
    8001a108:	ed49                	bnez	a0,8001a1a2 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x14a>
    8001a10a:	a05d                	j	8001a1b0 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x158>
    8001a10c:	4505                	li	a0,1
    8001a10e:	0ea10723          	sb	a0,238(sp)
    8001a112:	a821                	j	8001a12a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xd2>
    8001a114:	4501                	li	a0,0
    8001a116:	0ea10723          	sb	a0,238(sp)
    8001a11a:	a801                	j	8001a12a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xd2>
    8001a11c:	1108                	addi	a0,sp,160
    8001a11e:	fffe9097          	auipc	ra,0xfffe9
    8001a122:	7de080e7          	jalr	2014(ra) # 800038fc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E>
    8001a126:	e4aa                	sd	a0,72(sp)
    8001a128:	a80d                	j	8001a15a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x102>
    8001a12a:	0ee14503          	lbu	a0,238(sp)
    8001a12e:	8905                	andi	a0,a0,1
    8001a130:	f171                	bnez	a0,8001a0f4 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x9c>
    8001a132:	bf6d                	j	8001a0ec <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x94>
    8001a134:	03100513          	li	a0,49
    8001a138:	7586                	ld	a1,96(sp)
    8001a13a:	26b56563          	bltu	a0,a1,8001a3a4 <.LBB2_71>
    8001a13e:	a009                	j	8001a140 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xe8>
    8001a140:	4561                	li	a0,24
    8001a142:	7586                	ld	a1,96(sp)
    8001a144:	02a58533          	mul	a0,a1,a0
    8001a148:	6666                	ld	a2,88(sp)
    8001a14a:	9532                	add	a0,a0,a2
    8001a14c:	4908                	lw	a0,16(a0)
    8001a14e:	668a                	ld	a3,128(sp)
    8001a150:	0006871b          	sext.w	a4,a3
    8001a154:	fce504e3          	beq	a0,a4,8001a11c <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xc4>
    8001a158:	bf75                	j	8001a114 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xbc>
    8001a15a:	03100513          	li	a0,49
    8001a15e:	7586                	ld	a1,96(sp)
    8001a160:	24b56e63          	bltu	a0,a1,8001a3bc <.LBB2_72>
    8001a164:	a009                	j	8001a166 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x10e>
    8001a166:	4561                	li	a0,24
    8001a168:	7586                	ld	a1,96(sp)
    8001a16a:	02a58533          	mul	a0,a1,a0
    8001a16e:	6626                	ld	a2,72(sp)
    8001a170:	9532                	add	a0,a0,a2
    8001a172:	6108                	ld	a0,0(a0)
    8001a174:	4681                	li	a3,0
    8001a176:	f8d51be3          	bne	a0,a3,8001a10c <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xb4>
    8001a17a:	bf69                	j	8001a114 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0xbc>
    8001a17c:	03100513          	li	a0,49
    8001a180:	7586                	ld	a1,96(sp)
    8001a182:	24b56963          	bltu	a0,a1,8001a3d4 <.LBB2_73>
    8001a186:	a009                	j	8001a188 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x130>
    8001a188:	4561                	li	a0,24
    8001a18a:	7586                	ld	a1,96(sp)
    8001a18c:	02a58533          	mul	a0,a1,a0
    8001a190:	6646                	ld	a2,80(sp)
    8001a192:	9532                	add	a0,a0,a2
    8001a194:	4508                	lw	a0,8(a0)
    8001a196:	76e6                	ld	a3,120(sp)
    8001a198:	0006871b          	sext.w	a4,a3
    8001a19c:	f4e504e3          	beq	a0,a4,8001a0e4 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x8c>
    8001a1a0:	b7b1                	j	8001a0ec <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x94>
    8001a1a2:	1108                	addi	a0,sp,160
                guard[i].refs += 1;
    8001a1a4:	fffea097          	auipc	ra,0xfffea
    8001a1a8:	8b6080e7          	jalr	-1866(ra) # 80003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>
    8001a1ac:	e0aa                	sd	a0,64(sp)
    8001a1ae:	a801                	j	8001a1be <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x166>
    8001a1b0:	1128                	addi	a0,sp,168
            if empty_i.is_none() && guard[i].refs == 0 {
    8001a1b2:	fffff097          	auipc	ra,0xfffff
    8001a1b6:	d1c080e7          	jalr	-740(ra) # 80018ece <_ZN4core6option15Option$LT$T$GT$7is_none17h95f7ce3dc6edabf9E>
    8001a1ba:	fc2a                	sd	a0,56(sp)
    8001a1bc:	a89d                	j	8001a232 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1da>
    8001a1be:	03100513          	li	a0,49
                guard[i].refs += 1;
    8001a1c2:	7586                	ld	a1,96(sp)
    8001a1c4:	22b56463          	bltu	a0,a1,8001a3ec <.LBB2_74>
    8001a1c8:	a009                	j	8001a1ca <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x172>
    8001a1ca:	4561                	li	a0,24
    8001a1cc:	7586                	ld	a1,96(sp)
    8001a1ce:	02a58533          	mul	a0,a1,a0
    8001a1d2:	6606                	ld	a2,64(sp)
    8001a1d4:	9532                	add	a0,a0,a2
    8001a1d6:	6108                	ld	a0,0(a0)
    8001a1d8:	00150693          	addi	a3,a0,1
    8001a1dc:	f836                	sd	a3,48(sp)
    8001a1de:	22a6e363          	bltu	a3,a0,8001a404 <.LBB2_75>
    8001a1e2:	a009                	j	8001a1e4 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x18c>
    8001a1e4:	4561                	li	a0,24
    8001a1e6:	7586                	ld	a1,96(sp)
    8001a1e8:	02a58533          	mul	a0,a1,a0
    8001a1ec:	6606                	ld	a2,64(sp)
    8001a1ee:	9532                	add	a0,a0,a2
    8001a1f0:	76c2                	ld	a3,48(sp)
    8001a1f2:	e114                	sd	a3,0(a0)
                return Inode {
    8001a1f4:	7566                	ld	a0,120(sp)
    8001a1f6:	cd2a                	sw	a0,152(sp)
    8001a1f8:	670a                	ld	a4,128(sp)
    8001a1fa:	cf3a                	sw	a4,156(sp)
    8001a1fc:	e92e                	sd	a1,144(sp)
    8001a1fe:	1108                	addi	a0,sp,160
    }
    8001a200:	fffec097          	auipc	ra,0xfffec
    8001a204:	552080e7          	jalr	1362(ra) # 80006752 <_ZN4core3ptr116drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$u5b$kernel..fs..inode..InodeMeta$u3b$$u20$50$u5d$$GT$$GT$17hfc695816f935467aE>
    8001a208:	aa41                	j	8001a398 <.LBB2_70+0x3a>
    8001a20a:	4505                	li	a0,1
            if empty_i.is_none() && guard[i].refs == 0 {
    8001a20c:	0ea107a3          	sb	a0,239(sp)
    8001a210:	a821                	j	8001a228 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1d0>
    8001a212:	4501                	li	a0,0
    8001a214:	0ea107a3          	sb	a0,239(sp)
    8001a218:	a801                	j	8001a228 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1d0>
    8001a21a:	1108                	addi	a0,sp,160
    8001a21c:	fffe9097          	auipc	ra,0xfffe9
    8001a220:	6e0080e7          	jalr	1760(ra) # 800038fc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h90605d3caad8e6f7E>
    8001a224:	f42a                	sd	a0,40(sp)
    8001a226:	a809                	j	8001a238 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1e0>
    8001a228:	0ef14503          	lbu	a0,239(sp)
    8001a22c:	8905                	andi	a0,a0,1
    8001a22e:	e515                	bnez	a0,8001a25a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x202>
    8001a230:	a825                	j	8001a268 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x210>
    8001a232:	7562                	ld	a0,56(sp)
    8001a234:	f17d                	bnez	a0,8001a21a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1c2>
    8001a236:	bff1                	j	8001a212 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1ba>
    8001a238:	03100513          	li	a0,49
    8001a23c:	7586                	ld	a1,96(sp)
    8001a23e:	1eb56163          	bltu	a0,a1,8001a420 <.LBB2_77>
    8001a242:	a009                	j	8001a244 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1ec>
    8001a244:	4561                	li	a0,24
    8001a246:	7586                	ld	a1,96(sp)
    8001a248:	02a58533          	mul	a0,a1,a0
    8001a24c:	7622                	ld	a2,40(sp)
    8001a24e:	9532                	add	a0,a0,a2
    8001a250:	6108                	ld	a0,0(a0)
    8001a252:	4681                	li	a3,0
    8001a254:	fad50be3          	beq	a0,a3,8001a20a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1b2>
    8001a258:	bf6d                	j	8001a212 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x1ba>
                empty_i = Some(i);
    8001a25a:	7506                	ld	a0,96(sp)
    8001a25c:	fdaa                	sd	a0,248(sp)
    8001a25e:	4585                	li	a1,1
    8001a260:	f9ae                	sd	a1,240(sp)
    8001a262:	f52e                	sd	a1,168(sp)
    8001a264:	f92a                	sd	a0,176(sp)
            if empty_i.is_none() && guard[i].refs == 0 {
    8001a266:	a011                	j	8001a26a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x212>
    8001a268:	a009                	j	8001a26a <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x212>
        for i in 0..NINODE {
    8001a26a:	bd1d                	j	8001a0a0 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE+0x48>

000000008001a26c <.LBB2_67>:
            None => panic!("inode: not enough"),
    8001a26c:	0000e517          	auipc	a0,0xe
    8001a270:	73450513          	addi	a0,a0,1844 # 800289a0 <.L__unnamed_11>

000000008001a274 <.LBB2_68>:
    8001a274:	0000e617          	auipc	a2,0xe
    8001a278:	74460613          	addi	a2,a2,1860 # 800289b8 <.L__unnamed_12>
    8001a27c:	45c5                	li	a1,17
    8001a27e:	00007097          	auipc	ra,0x7
    8001a282:	a4c080e7          	jalr	-1460(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001a286:	0000                	unimp
        let empty_i = match empty_i {
    8001a288:	0000                	unimp
            Some(i) => i,
    8001a28a:	754a                	ld	a0,176(sp)
    8001a28c:	fe2a                	sd	a0,312(sp)
    8001a28e:	e2aa                	sd	a0,320(sp)
    8001a290:	110c                	addi	a1,sp,160
        guard[empty_i].dev = dev;
    8001a292:	f02a                	sd	a0,32(sp)
    8001a294:	852e                	mv	a0,a1
    8001a296:	fffe9097          	auipc	ra,0xfffe9
    8001a29a:	7c4080e7          	jalr	1988(ra) # 80003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>
    8001a29e:	ec2a                	sd	a0,24(sp)
    8001a2a0:	a009                	j	8001a2a2 <.LBB2_68+0x2e>
    8001a2a2:	03100513          	li	a0,49
    8001a2a6:	7582                	ld	a1,32(sp)
    8001a2a8:	18b56863          	bltu	a0,a1,8001a438 <.LBB2_78>
    8001a2ac:	a009                	j	8001a2ae <.LBB2_68+0x3a>
    8001a2ae:	4561                	li	a0,24
    8001a2b0:	7582                	ld	a1,32(sp)
    8001a2b2:	02a58533          	mul	a0,a1,a0
    8001a2b6:	6662                	ld	a2,24(sp)
    8001a2b8:	9532                	add	a0,a0,a2
    8001a2ba:	76e6                	ld	a3,120(sp)
    8001a2bc:	c514                	sw	a3,8(a0)
    8001a2be:	1108                	addi	a0,sp,160
        guard[empty_i].inum = inum;
    8001a2c0:	fffe9097          	auipc	ra,0xfffe9
    8001a2c4:	79a080e7          	jalr	1946(ra) # 80003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>
    8001a2c8:	e82a                	sd	a0,16(sp)
    8001a2ca:	a009                	j	8001a2cc <.LBB2_68+0x58>
    8001a2cc:	03100513          	li	a0,49
    8001a2d0:	7582                	ld	a1,32(sp)
    8001a2d2:	16b56f63          	bltu	a0,a1,8001a450 <.LBB2_79>
    8001a2d6:	a009                	j	8001a2d8 <.LBB2_68+0x64>
    8001a2d8:	4561                	li	a0,24
    8001a2da:	7582                	ld	a1,32(sp)
    8001a2dc:	02a58533          	mul	a0,a1,a0
    8001a2e0:	6642                	ld	a2,16(sp)
    8001a2e2:	9532                	add	a0,a0,a2
    8001a2e4:	668a                	ld	a3,128(sp)
    8001a2e6:	c914                	sw	a3,16(a0)
    8001a2e8:	1108                	addi	a0,sp,160
        guard[empty_i].refs = 1;
    8001a2ea:	fffe9097          	auipc	ra,0xfffe9
    8001a2ee:	770080e7          	jalr	1904(ra) # 80003a5a <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc439b8fb28dec88aE>
    8001a2f2:	e42a                	sd	a0,8(sp)
    8001a2f4:	a009                	j	8001a2f6 <.LBB2_68+0x82>
    8001a2f6:	03100513          	li	a0,49
    8001a2fa:	7582                	ld	a1,32(sp)
    8001a2fc:	16b56663          	bltu	a0,a1,8001a468 <.LBB2_80>
    8001a300:	a009                	j	8001a302 <.LBB2_68+0x8e>
    8001a302:	4561                	li	a0,24
    8001a304:	7582                	ld	a1,32(sp)
    8001a306:	02a58533          	mul	a0,a1,a0
    8001a30a:	6622                	ld	a2,8(sp)
    8001a30c:	9532                	add	a0,a0,a2
    8001a30e:	4685                	li	a3,1
    8001a310:	e114                	sd	a3,0(a0)
    8001a312:	03100513          	li	a0,49
        let idata = self.data[empty_i].lock();
    8001a316:	16b56563          	bltu	a0,a1,8001a480 <.LBB2_81>
    8001a31a:	a009                	j	8001a31c <.LBB2_68+0xa8>
    8001a31c:	7502                	ld	a0,32(sp)
    8001a31e:	00751593          	slli	a1,a0,0x7
    8001a322:	662a                	ld	a2,136(sp)
    8001a324:	95b2                	add	a1,a1,a2
    8001a326:	4d058513          	addi	a0,a1,1232
    8001a32a:	fffed097          	auipc	ra,0xfffed
    8001a32e:	ea0080e7          	jalr	-352(ra) # 800071ca <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE>
    8001a332:	e22a                	sd	a0,256(sp)
    8001a334:	e62e                	sd	a1,264(sp)
    8001a336:	a009                	j	8001a338 <.LBB2_68+0xc4>
    8001a338:	0208                	addi	a0,sp,256
        assert!(idata.valid == false, "此时 idata 应当无效");
    8001a33a:	fffed097          	auipc	ra,0xfffed
    8001a33e:	126080e7          	jalr	294(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001a342:	e02a                	sd	a0,0(sp)
    8001a344:	a009                	j	8001a346 <.LBB2_68+0xd2>
    8001a346:	6502                	ld	a0,0(sp)
    8001a348:	04854583          	lbu	a1,72(a0)
    8001a34c:	8985                	andi	a1,a1,1
    8001a34e:	4601                	li	a2,0
    8001a350:	02c58163          	beq	a1,a2,8001a372 <.LBB2_70+0x14>
    8001a354:	a009                	j	8001a356 <.LBB2_69>

000000008001a356 <.LBB2_69>:
    8001a356:	0000e517          	auipc	a0,0xe
    8001a35a:	61250513          	addi	a0,a0,1554 # 80028968 <.L__unnamed_13>

000000008001a35e <.LBB2_70>:
    8001a35e:	0000e617          	auipc	a2,0xe
    8001a362:	62a60613          	addi	a2,a2,1578 # 80028988 <.L__unnamed_14>
    8001a366:	45e5                	li	a1,25
    8001a368:	00007097          	auipc	ra,0x7
    8001a36c:	962080e7          	jalr	-1694(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001a370:	0000                	unimp
        Inode {
    8001a372:	7566                	ld	a0,120(sp)
    8001a374:	cd2a                	sw	a0,152(sp)
    8001a376:	658a                	ld	a1,128(sp)
    8001a378:	cf2e                	sw	a1,156(sp)
    8001a37a:	7602                	ld	a2,32(sp)
    8001a37c:	e932                	sd	a2,144(sp)
    8001a37e:	0208                	addi	a0,sp,256
    }
    8001a380:	fffec097          	auipc	ra,0xfffec
    8001a384:	6d6080e7          	jalr	1750(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    8001a388:	a009                	j	8001a38a <.LBB2_70+0x2c>
    8001a38a:	1108                	addi	a0,sp,160
    8001a38c:	fffec097          	auipc	ra,0xfffec
    8001a390:	3c6080e7          	jalr	966(ra) # 80006752 <_ZN4core3ptr116drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$$u5b$kernel..fs..inode..InodeMeta$u3b$$u20$50$u5d$$GT$$GT$17hfc695816f935467aE>
    8001a394:	a009                	j	8001a396 <.LBB2_70+0x38>
    8001a396:	a011                	j	8001a39a <.LBB2_70+0x3c>
    8001a398:	a009                	j	8001a39a <.LBB2_70+0x3c>
    8001a39a:	654a                	ld	a0,144(sp)
    8001a39c:	65ea                	ld	a1,152(sp)
    8001a39e:	60b6                	ld	ra,328(sp)
    8001a3a0:	6171                	addi	sp,sp,336
    8001a3a2:	8082                	ret

000000008001a3a4 <.LBB2_71>:
            if guard[i].inum == inum && guard[i].refs > 0 && guard[i].dev == dev {
    8001a3a4:	0000e617          	auipc	a2,0xe
    8001a3a8:	4ec60613          	addi	a2,a2,1260 # 80028890 <.L__unnamed_15>
    8001a3ac:	03200593          	li	a1,50
    8001a3b0:	7506                	ld	a0,96(sp)
    8001a3b2:	00007097          	auipc	ra,0x7
    8001a3b6:	944080e7          	jalr	-1724(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a3bc <.LBB2_72>:
    8001a3bc:	0000e617          	auipc	a2,0xe
    8001a3c0:	4ec60613          	addi	a2,a2,1260 # 800288a8 <.L__unnamed_16>
    8001a3c4:	03200593          	li	a1,50
    8001a3c8:	7506                	ld	a0,96(sp)
    8001a3ca:	00007097          	auipc	ra,0x7
    8001a3ce:	92c080e7          	jalr	-1748(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a3d4 <.LBB2_73>:
    8001a3d4:	0000e617          	auipc	a2,0xe
    8001a3d8:	4ec60613          	addi	a2,a2,1260 # 800288c0 <.L__unnamed_17>
    8001a3dc:	03200593          	li	a1,50
    8001a3e0:	7506                	ld	a0,96(sp)
    8001a3e2:	00007097          	auipc	ra,0x7
    8001a3e6:	914080e7          	jalr	-1772(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a3ec <.LBB2_74>:
                guard[i].refs += 1;
    8001a3ec:	0000e617          	auipc	a2,0xe
    8001a3f0:	4ec60613          	addi	a2,a2,1260 # 800288d8 <.L__unnamed_18>
    8001a3f4:	03200593          	li	a1,50
    8001a3f8:	7506                	ld	a0,96(sp)
    8001a3fa:	00007097          	auipc	ra,0x7
    8001a3fe:	8fc080e7          	jalr	-1796(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a404 <.LBB2_75>:
    8001a404:	0000e517          	auipc	a0,0xe
    8001a408:	32c50513          	addi	a0,a0,812 # 80028730 <str.0>

000000008001a40c <.LBB2_76>:
    8001a40c:	0000e617          	auipc	a2,0xe
    8001a410:	4cc60613          	addi	a2,a2,1228 # 800288d8 <.L__unnamed_18>
    8001a414:	45f1                	li	a1,28
    8001a416:	00007097          	auipc	ra,0x7
    8001a41a:	8b4080e7          	jalr	-1868(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001a420 <.LBB2_77>:
            if empty_i.is_none() && guard[i].refs == 0 {
    8001a420:	0000e617          	auipc	a2,0xe
    8001a424:	4d060613          	addi	a2,a2,1232 # 800288f0 <.L__unnamed_19>
    8001a428:	03200593          	li	a1,50
    8001a42c:	7506                	ld	a0,96(sp)
    8001a42e:	00007097          	auipc	ra,0x7
    8001a432:	8c8080e7          	jalr	-1848(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a438 <.LBB2_78>:
        guard[empty_i].dev = dev;
    8001a438:	0000e617          	auipc	a2,0xe
    8001a43c:	4d060613          	addi	a2,a2,1232 # 80028908 <.L__unnamed_20>
    8001a440:	03200593          	li	a1,50
    8001a444:	7502                	ld	a0,32(sp)
    8001a446:	00007097          	auipc	ra,0x7
    8001a44a:	8b0080e7          	jalr	-1872(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a450 <.LBB2_79>:
        guard[empty_i].inum = inum;
    8001a450:	0000e617          	auipc	a2,0xe
    8001a454:	4d060613          	addi	a2,a2,1232 # 80028920 <.L__unnamed_21>
    8001a458:	03200593          	li	a1,50
    8001a45c:	7502                	ld	a0,32(sp)
    8001a45e:	00007097          	auipc	ra,0x7
    8001a462:	898080e7          	jalr	-1896(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a468 <.LBB2_80>:
        guard[empty_i].refs = 1;
    8001a468:	0000e617          	auipc	a2,0xe
    8001a46c:	4d060613          	addi	a2,a2,1232 # 80028938 <.L__unnamed_22>
    8001a470:	03200593          	li	a1,50
    8001a474:	7502                	ld	a0,32(sp)
    8001a476:	00007097          	auipc	ra,0x7
    8001a47a:	880080e7          	jalr	-1920(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a480 <.LBB2_81>:
        let idata = self.data[empty_i].lock();
    8001a480:	0000e617          	auipc	a2,0xe
    8001a484:	4d060613          	addi	a2,a2,1232 # 80028950 <.L__unnamed_23>
    8001a488:	03200593          	li	a1,50
    8001a48c:	7502                	ld	a0,32(sp)
    8001a48e:	00007097          	auipc	ra,0x7
    8001a492:	868080e7          	jalr	-1944(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs5inode10InodeCache5namex17hf78427f11476fc26E:

000000008001a498 <_ZN6kernel2fs5inode10InodeCache5namex17hf78427f11476fc26E>:
    fn namex(
    8001a498:	7145                	addi	sp,sp,-464
    8001a49a:	e786                	sd	ra,456(sp)
    8001a49c:	883e                	mv	a6,a5
    8001a49e:	faae                	sd	a1,368(sp)
    8001a4a0:	feb2                	sd	a2,376(sp)
    8001a4a2:	e336                	sd	a3,384(sp)
    8001a4a4:	e73a                	sd	a4,392(sp)
    8001a4a6:	18f10ba3          	sb	a5,407(sp)
    8001a4aa:	4781                	li	a5,0
        let mut inode: Inode;
    8001a4ac:	16f107a3          	sb	a5,367(sp)
        if path[0] == b'/' {
    8001a4b0:	e53a                	sd	a4,136(sp)
    8001a4b2:	e136                	sd	a3,128(sp)
    8001a4b4:	fcb2                	sd	a2,120(sp)
    8001a4b6:	f8ae                	sd	a1,112(sp)
    8001a4b8:	f4aa                	sd	a0,104(sp)
    8001a4ba:	f0c2                	sd	a6,96(sp)
    8001a4bc:	2cf68563          	beq	a3,a5,8001a786 <.LBB3_59>
    8001a4c0:	a009                	j	8001a4c2 <_ZN6kernel2fs5inode10InodeCache5namex17hf78427f11476fc26E+0x2a>
    8001a4c2:	7566                	ld	a0,120(sp)
    8001a4c4:	00054583          	lbu	a1,0(a0)
    8001a4c8:	02f00613          	li	a2,47
    8001a4cc:	02c59263          	bne	a1,a2,8001a4f0 <.LBB3_53>
    8001a4d0:	a009                	j	8001a4d2 <_ZN6kernel2fs5inode10InodeCache5namex17hf78427f11476fc26E+0x3a>
    8001a4d2:	4505                	li	a0,1
            inode = self.get(ROOTDEV, ROOTINUM);
    8001a4d4:	75c6                	ld	a1,112(sp)
    8001a4d6:	ecaa                	sd	a0,88(sp)
    8001a4d8:	852e                	mv	a0,a1
    8001a4da:	65e6                	ld	a1,88(sp)
    8001a4dc:	6666                	ld	a2,88(sp)
    8001a4de:	00000097          	auipc	ra,0x0
    8001a4e2:	b7a080e7          	jalr	-1158(ra) # 8001a058 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE>
    8001a4e6:	fb2a                	sd	a0,432(sp)
    8001a4e8:	ff2e                	sd	a1,440(sp)
    8001a4ea:	f12a                	sd	a0,160(sp)
    8001a4ec:	f52e                	sd	a1,168(sp)
    8001a4ee:	a819                	j	8001a504 <.LBB3_53+0x14>

000000008001a4f0 <.LBB3_53>:
            let p = unsafe { CPU_MANAGER.myproc().unwrap() };
    8001a4f0:	00055517          	auipc	a0,0x55
    8001a4f4:	b1050513          	addi	a0,a0,-1264 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001a4f8:	00003097          	auipc	ra,0x3
    8001a4fc:	240080e7          	jalr	576(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8001a500:	e8aa                	sd	a0,80(sp)
    8001a502:	a809                	j	8001a514 <.LBB3_54>
    8001a504:	4505                	li	a0,1
            inode = self.get(ROOTDEV, ROOTINUM);
    8001a506:	16a107a3          	sb	a0,367(sp)
    8001a50a:	750a                	ld	a0,160(sp)
    8001a50c:	e92a                	sd	a0,144(sp)
    8001a50e:	752a                	ld	a0,168(sp)
    8001a510:	ed2a                	sd	a0,152(sp)
        if path[0] == b'/' {
    8001a512:	a8ad                	j	8001a58c <.LBB3_55+0x3c>

000000008001a514 <.LBB3_54>:
            let p = unsafe { CPU_MANAGER.myproc().unwrap() };
    8001a514:	0000e597          	auipc	a1,0xe
    8001a518:	4d458593          	addi	a1,a1,1236 # 800289e8 <.L__unnamed_24>
    8001a51c:	6546                	ld	a0,80(sp)
    8001a51e:	ffffe097          	auipc	ra,0xffffe
    8001a522:	64a080e7          	jalr	1610(ra) # 80018b68 <_ZN4core6option15Option$LT$T$GT$6unwrap17h378163d99beaa982E>
    8001a526:	e4aa                	sd	a0,72(sp)
    8001a528:	a009                	j	8001a52a <.LBB3_54+0x16>
    8001a52a:	6526                	ld	a0,72(sp)
    8001a52c:	ef2a                	sd	a0,408(sp)
            inode = self.dup(p.data.get_mut().cwd.as_ref().unwrap());
    8001a52e:	04050513          	addi	a0,a0,64
    8001a532:	ffffc097          	auipc	ra,0xffffc
    8001a536:	498080e7          	jalr	1176(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    8001a53a:	e0aa                	sd	a0,64(sp)
    8001a53c:	a009                	j	8001a53e <.LBB3_54+0x2a>
    8001a53e:	6506                	ld	a0,64(sp)
    8001a540:	3c050513          	addi	a0,a0,960
    8001a544:	ffffe097          	auipc	ra,0xffffe
    8001a548:	374080e7          	jalr	884(ra) # 800188b8 <_ZN4core6option15Option$LT$T$GT$6as_ref17h80a85b28fb2307b0E>
    8001a54c:	fc2a                	sd	a0,56(sp)
    8001a54e:	a009                	j	8001a550 <.LBB3_55>

000000008001a550 <.LBB3_55>:
    8001a550:	0000e597          	auipc	a1,0xe
    8001a554:	4b058593          	addi	a1,a1,1200 # 80028a00 <.L__unnamed_25>
    8001a558:	7562                	ld	a0,56(sp)
    8001a55a:	ffffe097          	auipc	ra,0xffffe
    8001a55e:	7c4080e7          	jalr	1988(ra) # 80018d1e <_ZN4core6option15Option$LT$T$GT$6unwrap17h9f4699fa5dbf890aE>
    8001a562:	f82a                	sd	a0,48(sp)
    8001a564:	a009                	j	8001a566 <.LBB3_55+0x16>
    8001a566:	7546                	ld	a0,112(sp)
    8001a568:	75c2                	ld	a1,48(sp)
    8001a56a:	fffff097          	auipc	ra,0xfffff
    8001a56e:	6ac080e7          	jalr	1708(ra) # 80019c16 <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE>
    8001a572:	f32a                	sd	a0,416(sp)
    8001a574:	f72e                	sd	a1,424(sp)
    8001a576:	f92a                	sd	a0,176(sp)
    8001a578:	fd2e                	sd	a1,184(sp)
    8001a57a:	a009                	j	8001a57c <.LBB3_55+0x2c>
    8001a57c:	4505                	li	a0,1
    8001a57e:	16a107a3          	sb	a0,367(sp)
    8001a582:	754a                	ld	a0,176(sp)
    8001a584:	e92a                	sd	a0,144(sp)
    8001a586:	756a                	ld	a0,184(sp)
    8001a588:	ed2a                	sd	a0,152(sp)
        if path[0] == b'/' {
    8001a58a:	a009                	j	8001a58c <.LBB3_55+0x3c>
    8001a58c:	4501                	li	a0,0
        let mut cur: usize = 0;
    8001a58e:	e1aa                	sd	a0,192(sp)
        loop {
    8001a590:	a009                	j	8001a592 <.LBB3_55+0x42>
            cur = skip_path(path, cur, name);
    8001a592:	660e                	ld	a2,192(sp)
    8001a594:	7566                	ld	a0,120(sp)
    8001a596:	658a                	ld	a1,128(sp)
    8001a598:	66aa                	ld	a3,136(sp)
    8001a59a:	00001097          	auipc	ra,0x1
    8001a59e:	8a4080e7          	jalr	-1884(ra) # 8001ae3e <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE>
    8001a5a2:	f42a                	sd	a0,40(sp)
    8001a5a4:	a009                	j	8001a5a6 <.LBB3_55+0x56>
    8001a5a6:	7522                	ld	a0,40(sp)
    8001a5a8:	e1aa                	sd	a0,192(sp)
    8001a5aa:	4581                	li	a1,0
            if cur == 0 { break; }
    8001a5ac:	00b51763          	bne	a0,a1,8001a5ba <.LBB3_55+0x6a>
    8001a5b0:	a009                	j	8001a5b2 <.LBB3_55+0x62>
        if is_parent {
    8001a5b2:	7506                	ld	a0,96(sp)
    8001a5b4:	12051863          	bnez	a0,8001a6e4 <.LBB3_57>
    8001a5b8:	a2b1                	j	8001a704 <.LBB3_58+0x18>
    8001a5ba:	0908                	addi	a0,sp,144
            let mut data_guard = inode.lock();
    8001a5bc:	00002097          	auipc	ra,0x2
    8001a5c0:	c80080e7          	jalr	-896(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    8001a5c4:	e5aa                	sd	a0,200(sp)
    8001a5c6:	e9ae                	sd	a1,208(sp)
    8001a5c8:	a009                	j	8001a5ca <.LBB3_55+0x7a>
    8001a5ca:	01a8                	addi	a0,sp,200
            if data_guard.dinode.itype != InodeType::Directory {
    8001a5cc:	fffed097          	auipc	ra,0xfffed
    8001a5d0:	e94080e7          	jalr	-364(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001a5d4:	f02a                	sd	a0,32(sp)
    8001a5d6:	a009                	j	8001a5d8 <.LBB3_55+0x88>
    8001a5d8:	7502                	ld	a0,32(sp)
    8001a5da:	0521                	addi	a0,a0,8

000000008001a5dc <.LBB3_56>:
    8001a5dc:	0000e597          	auipc	a1,0xe
    8001a5e0:	43c58593          	addi	a1,a1,1084 # 80028a18 <.L__unnamed_26>
    8001a5e4:	fffee097          	auipc	ra,0xfffee
    8001a5e8:	0bc080e7          	jalr	188(ra) # 800086a0 <_ZN4core3cmp9PartialEq2ne17h06a962108928ca16E>
    8001a5ec:	ec2a                	sd	a0,24(sp)
    8001a5ee:	a009                	j	8001a5f0 <.LBB3_56+0x14>
    8001a5f0:	4501                	li	a0,0
    8001a5f2:	65e2                	ld	a1,24(sp)
    8001a5f4:	00a58a63          	beq	a1,a0,8001a608 <.LBB3_56+0x2c>
    8001a5f8:	a009                	j	8001a5fa <.LBB3_56+0x1e>
                drop(data_guard);
    8001a5fa:	652e                	ld	a0,200(sp)
    8001a5fc:	65ce                	ld	a1,208(sp)
    8001a5fe:	ffff3097          	auipc	ra,0xffff3
    8001a602:	3c2080e7          	jalr	962(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001a606:	a021                	j	8001a60e <.LBB3_56+0x32>
            if is_parent && path[cur] == 0 {
    8001a608:	7506                	ld	a0,96(sp)
    8001a60a:	ed11                	bnez	a0,8001a626 <.LBB3_56+0x4a>
    8001a60c:	a809                	j	8001a61e <.LBB3_56+0x42>
    8001a60e:	4501                	li	a0,0
                return None
    8001a610:	75a6                	ld	a1,104(sp)
    8001a612:	e188                	sd	a0,0(a1)
    8001a614:	aa05                	j	8001a744 <.LBB3_58+0x58>
    8001a616:	4505                	li	a0,1
            if is_parent && path[cur] == 0 {
    8001a618:	0ca10fa3          	sb	a0,223(sp)
    8001a61c:	a819                	j	8001a632 <.LBB3_56+0x56>
    8001a61e:	4501                	li	a0,0
    8001a620:	0ca10fa3          	sb	a0,223(sp)
    8001a624:	a039                	j	8001a632 <.LBB3_56+0x56>
    8001a626:	650e                	ld	a0,192(sp)
    8001a628:	658a                	ld	a1,128(sp)
    8001a62a:	e82a                	sd	a0,16(sp)
    8001a62c:	00b56863          	bltu	a0,a1,8001a63c <.LBB3_56+0x60>
    8001a630:	a2b5                	j	8001a79c <.LBB3_60>
    8001a632:	0df14503          	lbu	a0,223(sp)
    8001a636:	8905                	andi	a0,a0,1
    8001a638:	ed01                	bnez	a0,8001a650 <.LBB3_56+0x74>
    8001a63a:	a015                	j	8001a65e <.LBB3_56+0x82>
    8001a63c:	7566                	ld	a0,120(sp)
    8001a63e:	65c2                	ld	a1,16(sp)
    8001a640:	00b50633          	add	a2,a0,a1
    8001a644:	00064603          	lbu	a2,0(a2)
    8001a648:	4681                	li	a3,0
    8001a64a:	fcd606e3          	beq	a2,a3,8001a616 <.LBB3_56+0x3a>
    8001a64e:	bfc1                	j	8001a61e <.LBB3_56+0x42>
                drop(data_guard);
    8001a650:	652e                	ld	a0,200(sp)
    8001a652:	65ce                	ld	a1,208(sp)
    8001a654:	ffff3097          	auipc	ra,0xffff3
    8001a658:	36c080e7          	jalr	876(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001a65c:	a801                	j	8001a66c <.LBB3_56+0x90>
    8001a65e:	01a8                	addi	a0,sp,200
            match data_guard.dir_lookup(name) {
    8001a660:	fffed097          	auipc	ra,0xfffed
    8001a664:	e0a080e7          	jalr	-502(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001a668:	e42a                	sd	a0,8(sp)
    8001a66a:	a831                	j	8001a686 <.LBB3_56+0xaa>
    8001a66c:	4501                	li	a0,0
                return Some(inode)
    8001a66e:	16a107a3          	sb	a0,367(sp)
    8001a672:	656a                	ld	a0,152(sp)
    8001a674:	f5aa                	sd	a0,232(sp)
    8001a676:	65ca                	ld	a1,144(sp)
    8001a678:	f1ae                	sd	a1,224(sp)
    8001a67a:	7626                	ld	a2,104(sp)
    8001a67c:	ea08                	sd	a0,16(a2)
    8001a67e:	e60c                	sd	a1,8(a2)
    8001a680:	4505                	li	a0,1
    8001a682:	e208                	sd	a0,0(a2)
    8001a684:	a0c1                	j	8001a744 <.LBB3_58+0x58>
    8001a686:	1988                	addi	a0,sp,240
    8001a688:	46b9                	li	a3,14
            match data_guard.dir_lookup(name) {
    8001a68a:	65a2                	ld	a1,8(sp)
    8001a68c:	662a                	ld	a2,136(sp)
    8001a68e:	00001097          	auipc	ra,0x1
    8001a692:	6ba080e7          	jalr	1722(ra) # 8001bd48 <_ZN6kernel2fs5inode9InodeData10dir_lookup17h6c68d88e3619362cE>
    8001a696:	a009                	j	8001a698 <.LBB3_56+0xbc>
                None => {
    8001a698:	754e                	ld	a0,240(sp)
    8001a69a:	4581                	li	a1,0
    8001a69c:	00b50f63          	beq	a0,a1,8001a6ba <.LBB3_56+0xde>
    8001a6a0:	a009                	j	8001a6a2 <.LBB3_56+0xc6>
                Some(last_inode) => {
    8001a6a2:	6512                	ld	a0,256(sp)
    8001a6a4:	ea2a                	sd	a0,272(sp)
    8001a6a6:	756e                	ld	a0,248(sp)
    8001a6a8:	e62a                	sd	a0,264(sp)
                    drop(data_guard);
    8001a6aa:	652e                	ld	a0,200(sp)
    8001a6ac:	65ce                	ld	a1,208(sp)
    8001a6ae:	ffff3097          	auipc	ra,0xffff3
    8001a6b2:	312080e7          	jalr	786(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001a6b6:	a829                	j	8001a6d0 <.LBB3_56+0xf4>
            match data_guard.dir_lookup(name) {
    8001a6b8:	0000                	unimp
                    drop(data_guard);
    8001a6ba:	652e                	ld	a0,200(sp)
    8001a6bc:	65ce                	ld	a1,208(sp)
    8001a6be:	ffff3097          	auipc	ra,0xffff3
    8001a6c2:	302080e7          	jalr	770(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001a6c6:	a009                	j	8001a6c8 <.LBB3_56+0xec>
    8001a6c8:	4501                	li	a0,0
                    return None
    8001a6ca:	75a6                	ld	a1,104(sp)
    8001a6cc:	e188                	sd	a0,0(a1)
    8001a6ce:	a8a5                	j	8001a746 <.LBB3_58+0x5a>
                    inode = last_inode;
    8001a6d0:	6552                	ld	a0,272(sp)
    8001a6d2:	f22a                	sd	a0,288(sp)
    8001a6d4:	6532                	ld	a0,264(sp)
    8001a6d6:	ee2a                	sd	a0,280(sp)
    8001a6d8:	0908                	addi	a0,sp,144
    8001a6da:	fffec097          	auipc	ra,0xfffec
    8001a6de:	17c080e7          	jalr	380(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8001a6e2:	a8b5                	j	8001a75e <.LBB3_58+0x72>

000000008001a6e4 <.LBB3_57>:
            println!("Kernel warning: namex querying root inode's parent");
    8001a6e4:	0000e597          	auipc	a1,0xe
    8001a6e8:	38c58593          	addi	a1,a1,908 # 80028a70 <.L__unnamed_27>

000000008001a6ec <.LBB3_58>:
    8001a6ec:	0000e697          	auipc	a3,0xe
    8001a6f0:	39468693          	addi	a3,a3,916 # 80028a80 <.L__unnamed_31>
    8001a6f4:	1228                	addi	a0,sp,296
    8001a6f6:	4605                	li	a2,1
    8001a6f8:	4701                	li	a4,0
    8001a6fa:	fffeb097          	auipc	ra,0xfffeb
    8001a6fe:	02a080e7          	jalr	42(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001a702:	a831                	j	8001a71e <.LBB3_58+0x32>
    8001a704:	4501                	li	a0,0
            Some(inode)
    8001a706:	16a107a3          	sb	a0,367(sp)
    8001a70a:	656a                	ld	a0,152(sp)
    8001a70c:	f2aa                	sd	a0,352(sp)
    8001a70e:	65ca                	ld	a1,144(sp)
    8001a710:	eeae                	sd	a1,344(sp)
    8001a712:	7626                	ld	a2,104(sp)
    8001a714:	ea08                	sd	a0,16(a2)
    8001a716:	e60c                	sd	a1,8(a2)
    8001a718:	4505                	li	a0,1
    8001a71a:	e208                	sd	a0,0(a2)
        if is_parent {
    8001a71c:	a819                	j	8001a732 <.LBB3_58+0x46>
    8001a71e:	1228                	addi	a0,sp,296
            println!("Kernel warning: namex querying root inode's parent");
    8001a720:	ffff6097          	auipc	ra,0xffff6
    8001a724:	5d0080e7          	jalr	1488(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8001a728:	a009                	j	8001a72a <.LBB3_58+0x3e>
    8001a72a:	4501                	li	a0,0
            None 
    8001a72c:	75a6                	ld	a1,104(sp)
    8001a72e:	e188                	sd	a0,0(a1)
        if is_parent {
    8001a730:	a009                	j	8001a732 <.LBB3_58+0x46>
    }
    8001a732:	16f14503          	lbu	a0,367(sp)
    8001a736:	8905                	andi	a0,a0,1
    8001a738:	e91d                	bnez	a0,8001a76e <.LBB3_58+0x82>
    8001a73a:	a009                	j	8001a73c <.LBB3_58+0x50>
    8001a73c:	4501                	li	a0,0
    8001a73e:	16a107a3          	sb	a0,367(sp)
    8001a742:	a819                	j	8001a758 <.LBB3_58+0x6c>
    8001a744:	a009                	j	8001a746 <.LBB3_58+0x5a>
    8001a746:	16f14503          	lbu	a0,367(sp)
    8001a74a:	8905                	andi	a0,a0,1
    8001a74c:	e51d                	bnez	a0,8001a77a <.LBB3_58+0x8e>
    8001a74e:	a009                	j	8001a750 <.LBB3_58+0x64>
    8001a750:	4501                	li	a0,0
    8001a752:	16a107a3          	sb	a0,367(sp)
    8001a756:	a009                	j	8001a758 <.LBB3_58+0x6c>
    8001a758:	60be                	ld	ra,456(sp)
    8001a75a:	6179                	addi	sp,sp,464
    8001a75c:	8082                	ret
    8001a75e:	4505                	li	a0,1
                    inode = last_inode;
    8001a760:	16a107a3          	sb	a0,367(sp)
    8001a764:	6572                	ld	a0,280(sp)
    8001a766:	e92a                	sd	a0,144(sp)
    8001a768:	7512                	ld	a0,288(sp)
    8001a76a:	ed2a                	sd	a0,152(sp)
        loop {
    8001a76c:	b51d                	j	8001a592 <.LBB3_55+0x42>
    8001a76e:	0908                	addi	a0,sp,144
    }
    8001a770:	fffec097          	auipc	ra,0xfffec
    8001a774:	0e6080e7          	jalr	230(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8001a778:	b7d1                	j	8001a73c <.LBB3_58+0x50>
    8001a77a:	0908                	addi	a0,sp,144
    8001a77c:	fffec097          	auipc	ra,0xfffec
    8001a780:	0da080e7          	jalr	218(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8001a784:	b7f1                	j	8001a750 <.LBB3_58+0x64>

000000008001a786 <.LBB3_59>:
        if path[0] == b'/' {
    8001a786:	0000e617          	auipc	a2,0xe
    8001a78a:	24a60613          	addi	a2,a2,586 # 800289d0 <.L__unnamed_29>
    8001a78e:	4501                	li	a0,0
    8001a790:	658a                	ld	a1,128(sp)
    8001a792:	00006097          	auipc	ra,0x6
    8001a796:	564080e7          	jalr	1380(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001a79c <.LBB3_60>:
            if is_parent && path[cur] == 0 {
    8001a79c:	0000e617          	auipc	a2,0xe
    8001a7a0:	28460613          	addi	a2,a2,644 # 80028a20 <.L__unnamed_30>
    8001a7a4:	6542                	ld	a0,16(sp)
    8001a7a6:	658a                	ld	a1,128(sp)
    8001a7a8:	00006097          	auipc	ra,0x6
    8001a7ac:	54e080e7          	jalr	1358(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs5inode10InodeCache5namei17h40291e200b605147E:

000000008001a7b2 <_ZN6kernel2fs5inode10InodeCache5namei17h40291e200b605147E>:
    pub fn namei(&self, path: &[u8]) -> Option<Inode> {
    8001a7b2:	7139                	addi	sp,sp,-64
    8001a7b4:	fc06                	sd	ra,56(sp)
    8001a7b6:	f02e                	sd	a1,32(sp)
    8001a7b8:	f432                	sd	a2,40(sp)
    8001a7ba:	f836                	sd	a3,48(sp)
    8001a7bc:	4701                	li	a4,0
        let mut name: [u8;DIRSIZ] = [0;DIRSIZ];
    8001a7be:	e83a                	sd	a4,16(sp)
    8001a7c0:	cc3a                	sw	a4,24(sp)
    8001a7c2:	00e11e23          	sh	a4,28(sp)
    8001a7c6:	081c                	addi	a5,sp,16
        self.namex(path, &mut name, false)
    8001a7c8:	e43a                	sd	a4,8(sp)
    8001a7ca:	873e                	mv	a4,a5
    8001a7cc:	67a2                	ld	a5,8(sp)
    8001a7ce:	00000097          	auipc	ra,0x0
    8001a7d2:	cca080e7          	jalr	-822(ra) # 8001a498 <_ZN6kernel2fs5inode10InodeCache5namex17hf78427f11476fc26E>
    8001a7d6:	a009                	j	8001a7d8 <_ZN6kernel2fs5inode10InodeCache5namei17h40291e200b605147E+0x26>
    }
    8001a7d8:	70e2                	ld	ra,56(sp)
    8001a7da:	6121                	addi	sp,sp,64
    8001a7dc:	8082                	ret

Disassembly of section .text._ZN6kernel2fs5inode10InodeCache12namei_parent17h2d8337e982c2dd0aE:

000000008001a7de <_ZN6kernel2fs5inode10InodeCache12namei_parent17h2d8337e982c2dd0aE>:
    pub fn namei_parent(&self, path: &[u8], name: &mut [u8;DIRSIZ]) -> Option<Inode> {
    8001a7de:	7179                	addi	sp,sp,-48
    8001a7e0:	f406                	sd	ra,40(sp)
    8001a7e2:	e42e                	sd	a1,8(sp)
    8001a7e4:	e832                	sd	a2,16(sp)
    8001a7e6:	ec36                	sd	a3,24(sp)
    8001a7e8:	f03a                	sd	a4,32(sp)
    8001a7ea:	4785                	li	a5,1
        self.namex(path, name, true)
    8001a7ec:	00000097          	auipc	ra,0x0
    8001a7f0:	cac080e7          	jalr	-852(ra) # 8001a498 <_ZN6kernel2fs5inode10InodeCache5namex17hf78427f11476fc26E>
    8001a7f4:	a009                	j	8001a7f6 <_ZN6kernel2fs5inode10InodeCache12namei_parent17h2d8337e982c2dd0aE+0x18>
    }
    8001a7f6:	70a2                	ld	ra,40(sp)
    8001a7f8:	6145                	addi	sp,sp,48
    8001a7fa:	8082                	ret

Disassembly of section .text._ZN6kernel2fs5inode10InodeCache6create17h39b1ee7d5591cbfaE:

000000008001a7fc <_ZN6kernel2fs5inode10InodeCache6create17h39b1ee7d5591cbfaE>:
    pub fn create(
    8001a7fc:	c2010113          	addi	sp,sp,-992
    8001a800:	3c113c23          	sd	ra,984(sp)
    8001a804:	88c2                	mv	a7,a6
    8001a806:	82be                	mv	t0,a5
    8001a808:	833a                	mv	t1,a4
    8001a80a:	18e11323          	sh	a4,390(sp)
    8001a80e:	2eb13823          	sd	a1,752(sp)
    8001a812:	2ec13c23          	sd	a2,760(sp)
    8001a816:	30d13023          	sd	a3,768(sp)
    8001a81a:	30f11623          	sh	a5,780(sp)
    8001a81e:	31011723          	sh	a6,782(sp)
    8001a822:	4701                	li	a4,0
        let mut name: [u8; DIRSIZ] = [0; DIRSIZ];
    8001a824:	2ee10723          	sb	a4,750(sp)
    8001a828:	2ee107a3          	sb	a4,751(sp)
    8001a82c:	2ee106a3          	sb	a4,749(sp)
    8001a830:	e73a                	sd	a4,392(sp)
    8001a832:	18e12823          	sw	a4,400(sp)
    8001a836:	18e11a23          	sh	a4,404(sp)
    8001a83a:	1338                	addi	a4,sp,424
    8001a83c:	033c                	addi	a5,sp,392
        let dirinode = self.namei_parent(path, &mut name).unwrap();
    8001a83e:	feaa                	sd	a0,376(sp)
    8001a840:	853a                	mv	a0,a4
    8001a842:	faae                	sd	a1,368(sp)
    8001a844:	873e                	mv	a4,a5
    8001a846:	f6c6                	sd	a7,360(sp)
    8001a848:	f296                	sd	t0,352(sp)
    8001a84a:	ee9a                	sd	t1,344(sp)
    8001a84c:	00000097          	auipc	ra,0x0
    8001a850:	f92080e7          	jalr	-110(ra) # 8001a7de <_ZN6kernel2fs5inode10InodeCache12namei_parent17h2d8337e982c2dd0aE>
    8001a854:	a009                	j	8001a856 <.LBB6_85>

000000008001a856 <.LBB6_85>:
    8001a856:	0000e597          	auipc	a1,0xe
    8001a85a:	22a58593          	addi	a1,a1,554 # 80028a80 <.L__unnamed_31>
    8001a85e:	1328                	addi	a0,sp,424
    8001a860:	ffffe097          	auipc	ra,0xffffe
    8001a864:	482080e7          	jalr	1154(ra) # 80018ce2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h902cf92567a41400E>
    8001a868:	32a13023          	sd	a0,800(sp)
    8001a86c:	32b13423          	sd	a1,808(sp)
    8001a870:	ef2a                	sd	a0,408(sp)
    8001a872:	f32e                	sd	a1,416(sp)
    8001a874:	a009                	j	8001a876 <.LBB6_85+0x20>
    8001a876:	4505                	li	a0,1
        let mut dirinode_guard = dirinode.lock();
    8001a878:	2ea107a3          	sb	a0,751(sp)
    8001a87c:	0b28                	addi	a0,sp,408
    8001a87e:	00002097          	auipc	ra,0x2
    8001a882:	9be080e7          	jalr	-1602(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    8001a886:	e3aa                	sd	a0,448(sp)
    8001a888:	e7ae                	sd	a1,456(sp)
    8001a88a:	a009                	j	8001a88c <.LBB6_85+0x36>
    8001a88c:	0388                	addi	a0,sp,448
        match dirinode_guard.dir_lookup(&name) {
    8001a88e:	fffed097          	auipc	ra,0xfffed
    8001a892:	bdc080e7          	jalr	-1060(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001a896:	eaaa                	sd	a0,336(sp)
    8001a898:	a009                	j	8001a89a <.LBB6_85+0x44>
    8001a89a:	0b88                	addi	a0,sp,464
    8001a89c:	0330                	addi	a2,sp,392
    8001a89e:	46b9                	li	a3,14
    8001a8a0:	65d6                	ld	a1,336(sp)
    8001a8a2:	00001097          	auipc	ra,0x1
    8001a8a6:	4a6080e7          	jalr	1190(ra) # 8001bd48 <_ZN6kernel2fs5inode9InodeData10dir_lookup17h6c68d88e3619362cE>
    8001a8aa:	a009                	j	8001a8ac <.LBB6_85+0x56>
            Some(inode) => {
    8001a8ac:	655e                	ld	a0,464(sp)
    8001a8ae:	4581                	li	a1,0
    8001a8b0:	00b50463          	beq	a0,a1,8001a8b8 <.LBB6_85+0x62>
    8001a8b4:	a009                	j	8001a8b6 <.LBB6_85+0x60>
    8001a8b6:	a809                	j	8001a8c8 <.LBB6_85+0x72>
    8001a8b8:	0388                	addi	a0,sp,448
        let dev = dirinode_guard.dev;
    8001a8ba:	fffed097          	auipc	ra,0xfffed
    8001a8be:	ba6080e7          	jalr	-1114(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001a8c2:	e6aa                	sd	a0,328(sp)
    8001a8c4:	a0cd                	j	8001a9a6 <.LBB6_88+0x32>
        match dirinode_guard.dir_lookup(&name) {
    8001a8c6:	0000                	unimp
    8001a8c8:	4505                	li	a0,1
            Some(inode) => {
    8001a8ca:	2ea10723          	sb	a0,750(sp)
    8001a8ce:	657e                	ld	a0,472(sp)
    8001a8d0:	f7aa                	sd	a0,488(sp)
    8001a8d2:	751e                	ld	a0,480(sp)
    8001a8d4:	fbaa                	sd	a0,496(sp)
    8001a8d6:	4501                	li	a0,0
                drop(dirinode_guard);
    8001a8d8:	2ea107a3          	sb	a0,751(sp)
    8001a8dc:	651e                	ld	a0,448(sp)
    8001a8de:	65be                	ld	a1,456(sp)
    8001a8e0:	ffff3097          	auipc	ra,0xffff3
    8001a8e4:	0e0080e7          	jalr	224(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001a8e8:	a009                	j	8001a8ea <.LBB6_85+0x94>
    8001a8ea:	4505                	li	a0,1
                let inode_guard = inode.lock();
    8001a8ec:	2ea106a3          	sb	a0,749(sp)
    8001a8f0:	13a8                	addi	a0,sp,488
    8001a8f2:	00002097          	auipc	ra,0x2
    8001a8f6:	94a080e7          	jalr	-1718(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    8001a8fa:	ffaa                	sd	a0,504(sp)
    8001a8fc:	20b13023          	sd	a1,512(sp)
    8001a900:	a009                	j	8001a902 <.LBB6_85+0xac>
    8001a902:	1ba8                	addi	a0,sp,504
                match inode_guard.dinode.itype {
    8001a904:	fffed097          	auipc	ra,0xfffed
    8001a908:	b5c080e7          	jalr	-1188(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001a90c:	e2aa                	sd	a0,320(sp)
    8001a90e:	a009                	j	8001a910 <.LBB6_85+0xba>
                    InodeType::Device | InodeType::File => {
    8001a910:	6516                	ld	a0,320(sp)
    8001a912:	00851583          	lh	a1,8(a0)
    8001a916:	15f9                	addi	a1,a1,-2
    8001a918:	6641                	lui	a2,0x10
    8001a91a:	367d                	addiw	a2,a2,-1
    8001a91c:	8df1                	and	a1,a1,a2
    8001a91e:	4609                	li	a2,2
    8001a920:	00c5ee63          	bltu	a1,a2,8001a93c <.LBB6_87>
    8001a924:	a009                	j	8001a926 <.LBB6_86>

000000008001a926 <.LBB6_86>:
                        return Err("create: unmatched type.")
    8001a926:	0000e517          	auipc	a0,0xe
    8001a92a:	17250513          	addi	a0,a0,370 # 80028a98 <.L__unnamed_32>
    8001a92e:	75f6                	ld	a1,376(sp)
    8001a930:	e588                	sd	a0,8(a1)
    8001a932:	455d                	li	a0,23
    8001a934:	e988                	sd	a0,16(a1)
    8001a936:	4505                	li	a0,1
    8001a938:	e188                	sd	a0,0(a1)
    8001a93a:	a975                	j	8001adf6 <.LBB6_97+0xc6>

000000008001a93c <.LBB6_87>:
                        if itype == InodeType::File {
    8001a93c:	0000e597          	auipc	a1,0xe
    8001a940:	17458593          	addi	a1,a1,372 # 80028ab0 <.L__unnamed_33>
    8001a944:	18610513          	addi	a0,sp,390
    8001a948:	00002097          	auipc	ra,0x2
    8001a94c:	cce080e7          	jalr	-818(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    8001a950:	fe2a                	sd	a0,312(sp)
    8001a952:	a009                	j	8001a954 <.LBB6_87+0x18>
    8001a954:	4501                	li	a0,0
    8001a956:	75f2                	ld	a1,312(sp)
    8001a958:	00a58e63          	beq	a1,a0,8001a974 <.LBB6_88>
    8001a95c:	a009                	j	8001a95e <.LBB6_87+0x22>
    8001a95e:	4501                	li	a0,0
                            drop(inode_guard);
    8001a960:	2ea106a3          	sb	a0,749(sp)
    8001a964:	757e                	ld	a0,504(sp)
    8001a966:	20013583          	ld	a1,512(sp)
    8001a96a:	ffff3097          	auipc	ra,0xffff3
    8001a96e:	056080e7          	jalr	86(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001a972:	a821                	j	8001a98a <.LBB6_88+0x16>

000000008001a974 <.LBB6_88>:
                        return Err("create: unmatched type.");
    8001a974:	0000e517          	auipc	a0,0xe
    8001a978:	12450513          	addi	a0,a0,292 # 80028a98 <.L__unnamed_32>
    8001a97c:	75f6                	ld	a1,376(sp)
    8001a97e:	e588                	sd	a0,8(a1)
    8001a980:	455d                	li	a0,23
    8001a982:	e988                	sd	a0,16(a1)
    8001a984:	4505                	li	a0,1
    8001a986:	e188                	sd	a0,0(a1)
    8001a988:	a1bd                	j	8001adf6 <.LBB6_97+0xc6>
    8001a98a:	4501                	li	a0,0
                            return Ok(inode)
    8001a98c:	2ea10723          	sb	a0,750(sp)
    8001a990:	75de                	ld	a1,496(sp)
    8001a992:	20b13823          	sd	a1,528(sp)
    8001a996:	763e                	ld	a2,488(sp)
    8001a998:	20c13423          	sd	a2,520(sp)
    8001a99c:	76f6                	ld	a3,376(sp)
    8001a99e:	ea8c                	sd	a1,16(a3)
    8001a9a0:	e690                	sd	a2,8(a3)
    8001a9a2:	e288                	sd	a0,0(a3)
    8001a9a4:	a989                	j	8001adf6 <.LBB6_97+0xc6>
        let dev = dirinode_guard.dev;
    8001a9a6:	6536                	ld	a0,328(sp)
    8001a9a8:	00056583          	lwu	a1,0(a0)
    8001a9ac:	32b12c23          	sw	a1,824(sp)
        let inum = inode_alloc(dev, itype);
    8001a9b0:	18611603          	lh	a2,390(sp)
    8001a9b4:	852e                	mv	a0,a1
    8001a9b6:	fa2e                	sd	a1,304(sp)
    8001a9b8:	85b2                	mv	a1,a2
    8001a9ba:	fffff097          	auipc	ra,0xfffff
    8001a9be:	f38080e7          	jalr	-200(ra) # 800198f2 <_ZN6kernel2fs6bitmap11inode_alloc17h795ccd5e252a2ae8E>
    8001a9c2:	85aa                	mv	a1,a0
    8001a9c4:	32a12e23          	sw	a0,828(sp)
    8001a9c8:	f62e                	sd	a1,296(sp)
    8001a9ca:	a009                	j	8001a9cc <.LBB6_88+0x58>
        let inode = self.get(dev, inum);
    8001a9cc:	7556                	ld	a0,368(sp)
    8001a9ce:	75d2                	ld	a1,304(sp)
    8001a9d0:	7632                	ld	a2,296(sp)
    8001a9d2:	fffff097          	auipc	ra,0xfffff
    8001a9d6:	686080e7          	jalr	1670(ra) # 8001a058 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE>
    8001a9da:	34a13023          	sd	a0,832(sp)
    8001a9de:	34b13423          	sd	a1,840(sp)
    8001a9e2:	20a13c23          	sd	a0,536(sp)
    8001a9e6:	22b13023          	sd	a1,544(sp)
    8001a9ea:	a009                	j	8001a9ec <.LBB6_88+0x78>
    8001a9ec:	0c28                	addi	a0,sp,536
        let mut inode_guard = inode.lock();
    8001a9ee:	00002097          	auipc	ra,0x2
    8001a9f2:	84e080e7          	jalr	-1970(ra) # 8001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>
    8001a9f6:	22a13423          	sd	a0,552(sp)
    8001a9fa:	22b13823          	sd	a1,560(sp)
    8001a9fe:	a009                	j	8001aa00 <.LBB6_88+0x8c>
    8001aa00:	1428                	addi	a0,sp,552
        inode_guard.dinode.major = major;
    8001aa02:	fffed097          	auipc	ra,0xfffed
    8001aa06:	a68080e7          	jalr	-1432(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001aa0a:	f22a                	sd	a0,288(sp)
    8001aa0c:	a009                	j	8001aa0e <.LBB6_88+0x9a>
    8001aa0e:	7516                	ld	a0,352(sp)
    8001aa10:	7592                	ld	a1,288(sp)
    8001aa12:	00a59523          	sh	a0,10(a1)
    8001aa16:	1428                	addi	a0,sp,552
        inode_guard.dinode.minor = minor;
    8001aa18:	fffed097          	auipc	ra,0xfffed
    8001aa1c:	a52080e7          	jalr	-1454(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001aa20:	ee2a                	sd	a0,280(sp)
    8001aa22:	a009                	j	8001aa24 <.LBB6_88+0xb0>
    8001aa24:	7536                	ld	a0,360(sp)
    8001aa26:	65f2                	ld	a1,280(sp)
    8001aa28:	00a59623          	sh	a0,12(a1)
    8001aa2c:	1428                	addi	a0,sp,552
        inode_guard.dinode.nlink = 1;
    8001aa2e:	fffed097          	auipc	ra,0xfffed
    8001aa32:	a3c080e7          	jalr	-1476(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001aa36:	ea2a                	sd	a0,272(sp)
    8001aa38:	a009                	j	8001aa3a <.LBB6_88+0xc6>
    8001aa3a:	4505                	li	a0,1
    8001aa3c:	65d2                	ld	a1,272(sp)
    8001aa3e:	00a59723          	sh	a0,14(a1)
    8001aa42:	1428                	addi	a0,sp,552
        inode_guard.update();
    8001aa44:	fffed097          	auipc	ra,0xfffed
    8001aa48:	a26080e7          	jalr	-1498(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001aa4c:	e62a                	sd	a0,264(sp)
    8001aa4e:	a009                	j	8001aa50 <.LBB6_88+0xdc>
    8001aa50:	6532                	ld	a0,264(sp)
    8001aa52:	00001097          	auipc	ra,0x1
    8001aa56:	8dc080e7          	jalr	-1828(ra) # 8001b32e <_ZN6kernel2fs5inode9InodeData6update17h3258e235afe18890E>
    8001aa5a:	a009                	j	8001aa5c <.LBB6_88+0xe8>
    8001aa5c:	1428                	addi	a0,sp,552
        debug_assert_eq!(inode_guard.dinode.itype, itype);
    8001aa5e:	fffed097          	auipc	ra,0xfffed
    8001aa62:	a02080e7          	jalr	-1534(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001aa66:	e22a                	sd	a0,256(sp)
    8001aa68:	a009                	j	8001aa6a <.LBB6_88+0xf6>
    8001aa6a:	6512                	ld	a0,256(sp)
    8001aa6c:	00850593          	addi	a1,a0,8
    8001aa70:	22b13c23          	sd	a1,568(sp)
    8001aa74:	18610613          	addi	a2,sp,390
    8001aa78:	24c13023          	sd	a2,576(sp)
    8001aa7c:	34b13c23          	sd	a1,856(sp)
    8001aa80:	36c13023          	sd	a2,864(sp)
    8001aa84:	852e                	mv	a0,a1
    8001aa86:	fdae                	sd	a1,248(sp)
    8001aa88:	85b2                	mv	a1,a2
    8001aa8a:	f9b2                	sd	a2,240(sp)
    8001aa8c:	00002097          	auipc	ra,0x2
    8001aa90:	b8a080e7          	jalr	-1142(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    8001aa94:	f5aa                	sd	a0,232(sp)
    8001aa96:	a009                	j	8001aa98 <.LBB6_88+0x124>
    8001aa98:	752e                	ld	a0,232(sp)
    8001aa9a:	ed1d                	bnez	a0,8001aad8 <.LBB6_90>
    8001aa9c:	a009                	j	8001aa9e <.LBB6_88+0x12a>
    8001aa9e:	756e                	ld	a0,248(sp)
    8001aaa0:	2aa13423          	sd	a0,680(sp)
    8001aaa4:	75ce                	ld	a1,240(sp)
    8001aaa6:	2ab13823          	sd	a1,688(sp)
    8001aaaa:	1530                	addi	a2,sp,680
    8001aaac:	28c13c23          	sd	a2,664(sp)
    8001aab0:	1d14                	addi	a3,sp,688
    8001aab2:	2ad13023          	sd	a3,672(sp)
    8001aab6:	36c13423          	sd	a2,872(sp)
    8001aaba:	36d13823          	sd	a3,880(sp)

000000008001aabe <.LBB6_89>:
    8001aabe:	fffee597          	auipc	a1,0xfffee
    8001aac2:	bc458593          	addi	a1,a1,-1084 # 80008682 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf22be01dc57540f7E>
    8001aac6:	8532                	mv	a0,a2
    8001aac8:	f1b6                	sd	a3,224(sp)
    8001aaca:	fffed097          	auipc	ra,0xfffed
    8001aace:	306080e7          	jalr	774(ra) # 80007dd0 <_ZN4core3fmt10ArgumentV13new17h7abf13edf5284605E>
    8001aad2:	edaa                	sd	a0,216(sp)
    8001aad4:	e9ae                	sd	a1,208(sp)
    8001aad6:	a829                	j	8001aaf0 <.LBB6_91>

000000008001aad8 <.LBB6_90>:
        if itype == InodeType::Directory {
    8001aad8:	0000e597          	auipc	a1,0xe
    8001aadc:	f4058593          	addi	a1,a1,-192 # 80028a18 <.L__unnamed_26>
    8001aae0:	18610513          	addi	a0,sp,390
    8001aae4:	00002097          	auipc	ra,0x2
    8001aae8:	b32080e7          	jalr	-1230(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    8001aaec:	e5aa                	sd	a0,200(sp)
    8001aaee:	a085                	j	8001ab4e <.LBB6_93+0x14>

000000008001aaf0 <.LBB6_91>:
        debug_assert_eq!(inode_guard.dinode.itype, itype);
    8001aaf0:	fffee597          	auipc	a1,0xfffee
    8001aaf4:	b9258593          	addi	a1,a1,-1134 # 80008682 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf22be01dc57540f7E>
    8001aaf8:	750e                	ld	a0,224(sp)
    8001aafa:	fffed097          	auipc	ra,0xfffed
    8001aafe:	2d6080e7          	jalr	726(ra) # 80007dd0 <_ZN4core3fmt10ArgumentV13new17h7abf13edf5284605E>
    8001ab02:	e1aa                	sd	a0,192(sp)
    8001ab04:	fd2e                	sd	a1,184(sp)
    8001ab06:	a009                	j	8001ab08 <.LBB6_91+0x18>
    8001ab08:	656e                	ld	a0,216(sp)
    8001ab0a:	26a13c23          	sd	a0,632(sp)
    8001ab0e:	65ce                	ld	a1,208(sp)
    8001ab10:	28b13023          	sd	a1,640(sp)
    8001ab14:	660e                	ld	a2,192(sp)
    8001ab16:	28c13423          	sd	a2,648(sp)
    8001ab1a:	76ea                	ld	a3,184(sp)
    8001ab1c:	28d13823          	sd	a3,656(sp)

000000008001ab20 <.LBB6_92>:
    8001ab20:	0000e597          	auipc	a1,0xe
    8001ab24:	d2858593          	addi	a1,a1,-728 # 80028848 <.L__unnamed_3>
    8001ab28:	04a8                	addi	a0,sp,584
    8001ab2a:	460d                	li	a2,3
    8001ab2c:	1cb4                	addi	a3,sp,632
    8001ab2e:	4709                	li	a4,2
    8001ab30:	fffeb097          	auipc	ra,0xfffeb
    8001ab34:	bf4080e7          	jalr	-1036(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001ab38:	a009                	j	8001ab3a <.LBB6_93>

000000008001ab3a <.LBB6_93>:
    8001ab3a:	0000e597          	auipc	a1,0xe
    8001ab3e:	f7e58593          	addi	a1,a1,-130 # 80028ab8 <.L__unnamed_34>
    8001ab42:	04a8                	addi	a0,sp,584
    8001ab44:	00006097          	auipc	ra,0x6
    8001ab48:	1f2080e7          	jalr	498(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8001ab4c:	0000                	unimp
    8001ab4e:	4501                	li	a0,0
        if itype == InodeType::Directory {
    8001ab50:	65ae                	ld	a1,200(sp)
    8001ab52:	00a58a63          	beq	a1,a0,8001ab66 <.LBB6_93+0x2c>
    8001ab56:	a009                	j	8001ab58 <.LBB6_93+0x1e>
    8001ab58:	1428                	addi	a0,sp,552
            inode_guard.dinode.nlink += 1;
    8001ab5a:	fffed097          	auipc	ra,0xfffed
    8001ab5e:	910080e7          	jalr	-1776(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001ab62:	f92a                	sd	a0,176(sp)
    8001ab64:	a011                	j	8001ab68 <.LBB6_93+0x2e>
        if itype == InodeType::Directory {
    8001ab66:	a269                	j	8001acf0 <.LBB6_95+0xa2>
            inode_guard.dinode.nlink += 1;
    8001ab68:	754a                	ld	a0,176(sp)
    8001ab6a:	00e51583          	lh	a1,14(a0)
    8001ab6e:	0585                	addi	a1,a1,1
    8001ab70:	03059613          	slli	a2,a1,0x30
    8001ab74:	9641                	srai	a2,a2,0x30
    8001ab76:	f52e                	sd	a1,168(sp)
    8001ab78:	2ab61563          	bne	a2,a1,8001ae22 <.LBB6_98>
    8001ab7c:	a009                	j	8001ab7e <.LBB6_93+0x44>
    8001ab7e:	752a                	ld	a0,168(sp)
    8001ab80:	75ca                	ld	a1,176(sp)
    8001ab82:	00a59723          	sh	a0,14(a1)
    8001ab86:	1428                	addi	a0,sp,552
            inode_guard.update();
    8001ab88:	fffed097          	auipc	ra,0xfffed
    8001ab8c:	8e2080e7          	jalr	-1822(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001ab90:	f12a                	sd	a0,160(sp)
    8001ab92:	a009                	j	8001ab94 <.LBB6_93+0x5a>
    8001ab94:	750a                	ld	a0,160(sp)
    8001ab96:	00000097          	auipc	ra,0x0
    8001ab9a:	798080e7          	jalr	1944(ra) # 8001b32e <_ZN6kernel2fs5inode9InodeData6update17h3258e235afe18890E>
    8001ab9e:	a009                	j	8001aba0 <.LBB6_93+0x66>
    8001aba0:	1428                	addi	a0,sp,552
            inode_guard.dir_link(".".as_bytes(), inode.inum)?;
    8001aba2:	fffed097          	auipc	ra,0xfffed
    8001aba6:	8c8080e7          	jalr	-1848(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001abaa:	ed2a                	sd	a0,152(sp)
    8001abac:	a009                	j	8001abae <.LBB6_94>

000000008001abae <.LBB6_94>:
    8001abae:	0000e517          	auipc	a0,0xe
    8001abb2:	f3a50513          	addi	a0,a0,-198 # 80028ae8 <.L__unnamed_35>
    8001abb6:	38a13c23          	sd	a0,920(sp)
    8001abba:	4585                	li	a1,1
    8001abbc:	3ab13023          	sd	a1,928(sp)
        unsafe { mem::transmute(self) }
    8001abc0:	3aa13423          	sd	a0,936(sp)
    8001abc4:	3ab13823          	sd	a1,944(sp)
    8001abc8:	e92a                	sd	a0,144(sp)
    8001abca:	e52e                	sd	a1,136(sp)
    8001abcc:	a009                	j	8001abce <.LBB6_94+0x20>
    8001abce:	22412683          	lw	a3,548(sp)
    8001abd2:	656a                	ld	a0,152(sp)
    8001abd4:	65ca                	ld	a1,144(sp)
    8001abd6:	662a                	ld	a2,136(sp)
    8001abd8:	00001097          	auipc	ra,0x1
    8001abdc:	3e6080e7          	jalr	998(ra) # 8001bfbe <_ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE>
    8001abe0:	e12a                	sd	a0,128(sp)
    8001abe2:	fcae                	sd	a1,120(sp)
    8001abe4:	a009                	j	8001abe6 <.LBB6_94+0x38>
    8001abe6:	650a                	ld	a0,128(sp)
    8001abe8:	75e6                	ld	a1,120(sp)
    8001abea:	ffff2097          	auipc	ra,0xffff2
    8001abee:	2fe080e7          	jalr	766(ra) # 8000cee8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h489706ecba0771b6E>
    8001abf2:	2aa13c23          	sd	a0,696(sp)
    8001abf6:	2cb13023          	sd	a1,704(sp)
    8001abfa:	a009                	j	8001abfc <.LBB6_94+0x4e>
    8001abfc:	2b813503          	ld	a0,696(sp)
    8001ac00:	00a035b3          	snez	a1,a0
    8001ac04:	4601                	li	a2,0
    8001ac06:	00c50463          	beq	a0,a2,8001ac0e <.LBB6_94+0x60>
    8001ac0a:	a009                	j	8001ac0c <.LBB6_94+0x5e>
    8001ac0c:	a809                	j	8001ac1e <.LBB6_94+0x70>
    8001ac0e:	1428                	addi	a0,sp,552
            inode_guard.dir_link("..".as_bytes(), dirinode_guard.inum)?;
    8001ac10:	fffed097          	auipc	ra,0xfffed
    8001ac14:	85a080e7          	jalr	-1958(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001ac18:	f8aa                	sd	a0,112(sp)
    8001ac1a:	a815                	j	8001ac4e <.LBB6_95>
            inode_guard.dir_link(".".as_bytes(), inode.inum)?;
    8001ac1c:	0000                	unimp
    8001ac1e:	2b813503          	ld	a0,696(sp)
    8001ac22:	2c013583          	ld	a1,704(sp)
    8001ac26:	36a13c23          	sd	a0,888(sp)
    8001ac2a:	38b13023          	sd	a1,896(sp)
    8001ac2e:	ffffe097          	auipc	ra,0xffffe
    8001ac32:	5b6080e7          	jalr	1462(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001ac36:	f4aa                	sd	a0,104(sp)
    8001ac38:	f0ae                	sd	a1,96(sp)
    8001ac3a:	a009                	j	8001ac3c <.LBB6_94+0x8e>
    8001ac3c:	7576                	ld	a0,376(sp)
    8001ac3e:	75a6                	ld	a1,104(sp)
    8001ac40:	7606                	ld	a2,96(sp)
    8001ac42:	ffff2097          	auipc	ra,0xffff2
    8001ac46:	248080e7          	jalr	584(ra) # 8000ce8a <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h4efc9d3ad4b2ad00E>
    8001ac4a:	a009                	j	8001ac4c <.LBB6_94+0x9e>
    8001ac4c:	a2b9                	j	8001ad9a <.LBB6_97+0x6a>

000000008001ac4e <.LBB6_95>:
    8001ac4e:	0000e517          	auipc	a0,0xe
    8001ac52:	e9b50513          	addi	a0,a0,-357 # 80028ae9 <.L__unnamed_36>
    8001ac56:	3aa13c23          	sd	a0,952(sp)
    8001ac5a:	4589                	li	a1,2
    8001ac5c:	3cb13023          	sd	a1,960(sp)
    8001ac60:	3ca13423          	sd	a0,968(sp)
    8001ac64:	3cb13823          	sd	a1,976(sp)
            inode_guard.dir_link("..".as_bytes(), dirinode_guard.inum)?;
    8001ac68:	ecaa                	sd	a0,88(sp)
    8001ac6a:	e8ae                	sd	a1,80(sp)
    8001ac6c:	a009                	j	8001ac6e <.LBB6_95+0x20>
    8001ac6e:	0388                	addi	a0,sp,448
    8001ac70:	fffec097          	auipc	ra,0xfffec
    8001ac74:	7f0080e7          	jalr	2032(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001ac78:	e4aa                	sd	a0,72(sp)
    8001ac7a:	a009                	j	8001ac7c <.LBB6_95+0x2e>
    8001ac7c:	6526                	ld	a0,72(sp)
    8001ac7e:	4154                	lw	a3,4(a0)
    8001ac80:	7546                	ld	a0,112(sp)
    8001ac82:	65e6                	ld	a1,88(sp)
    8001ac84:	6646                	ld	a2,80(sp)
    8001ac86:	00001097          	auipc	ra,0x1
    8001ac8a:	338080e7          	jalr	824(ra) # 8001bfbe <_ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE>
    8001ac8e:	e0aa                	sd	a0,64(sp)
    8001ac90:	fc2e                	sd	a1,56(sp)
    8001ac92:	a009                	j	8001ac94 <.LBB6_95+0x46>
    8001ac94:	6506                	ld	a0,64(sp)
    8001ac96:	75e2                	ld	a1,56(sp)
    8001ac98:	ffff2097          	auipc	ra,0xffff2
    8001ac9c:	250080e7          	jalr	592(ra) # 8000cee8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h489706ecba0771b6E>
    8001aca0:	2ca13423          	sd	a0,712(sp)
    8001aca4:	2cb13823          	sd	a1,720(sp)
    8001aca8:	a009                	j	8001acaa <.LBB6_95+0x5c>
    8001acaa:	2c813503          	ld	a0,712(sp)
    8001acae:	00a035b3          	snez	a1,a0
    8001acb2:	4601                	li	a2,0
    8001acb4:	00c50463          	beq	a0,a2,8001acbc <.LBB6_95+0x6e>
    8001acb8:	a009                	j	8001acba <.LBB6_95+0x6c>
    8001acba:	a019                	j	8001acc0 <.LBB6_95+0x72>
        if itype == InodeType::Directory {
    8001acbc:	a815                	j	8001acf0 <.LBB6_95+0xa2>
            inode_guard.dir_link("..".as_bytes(), dirinode_guard.inum)?;
    8001acbe:	0000                	unimp
    8001acc0:	2c813503          	ld	a0,712(sp)
    8001acc4:	2d013583          	ld	a1,720(sp)
    8001acc8:	38a13423          	sd	a0,904(sp)
    8001accc:	38b13823          	sd	a1,912(sp)
    8001acd0:	ffffe097          	auipc	ra,0xffffe
    8001acd4:	514080e7          	jalr	1300(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001acd8:	f82a                	sd	a0,48(sp)
    8001acda:	f42e                	sd	a1,40(sp)
    8001acdc:	a009                	j	8001acde <.LBB6_95+0x90>
    8001acde:	7576                	ld	a0,376(sp)
    8001ace0:	75c2                	ld	a1,48(sp)
    8001ace2:	7622                	ld	a2,40(sp)
    8001ace4:	ffff2097          	auipc	ra,0xffff2
    8001ace8:	1a6080e7          	jalr	422(ra) # 8000ce8a <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h4efc9d3ad4b2ad00E>
    8001acec:	a009                	j	8001acee <.LBB6_95+0xa0>
    8001acee:	a075                	j	8001ad9a <.LBB6_97+0x6a>
    8001acf0:	0388                	addi	a0,sp,448
        dirinode_guard
    8001acf2:	fffec097          	auipc	ra,0xfffec
    8001acf6:	778080e7          	jalr	1912(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001acfa:	f02a                	sd	a0,32(sp)
    8001acfc:	a009                	j	8001acfe <.LBB6_95+0xb0>
    8001acfe:	032c                	addi	a1,sp,392
    8001ad00:	1428                	addi	a0,sp,552
            .dir_link(&name, inode_guard.inum)
    8001ad02:	ec2e                	sd	a1,24(sp)
    8001ad04:	fffec097          	auipc	ra,0xfffec
    8001ad08:	75c080e7          	jalr	1884(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001ad0c:	e82a                	sd	a0,16(sp)
    8001ad0e:	a009                	j	8001ad10 <.LBB6_95+0xc2>
        dirinode_guard
    8001ad10:	6542                	ld	a0,16(sp)
    8001ad12:	4154                	lw	a3,4(a0)
    8001ad14:	4639                	li	a2,14
    8001ad16:	7502                	ld	a0,32(sp)
    8001ad18:	65e2                	ld	a1,24(sp)
    8001ad1a:	00001097          	auipc	ra,0x1
    8001ad1e:	2a4080e7          	jalr	676(ra) # 8001bfbe <_ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE>
    8001ad22:	e42a                	sd	a0,8(sp)
    8001ad24:	e02e                	sd	a1,0(sp)
    8001ad26:	a009                	j	8001ad28 <.LBB6_96>

000000008001ad28 <.LBB6_96>:
    8001ad28:	0000e617          	auipc	a2,0xe
    8001ad2c:	dc360613          	addi	a2,a2,-573 # 80028aeb <.L__unnamed_37>

000000008001ad30 <.LBB6_97>:
    8001ad30:	0000e717          	auipc	a4,0xe
    8001ad34:	dd870713          	addi	a4,a4,-552 # 80028b08 <.L__unnamed_38>
    8001ad38:	46e5                	li	a3,25
    8001ad3a:	6522                	ld	a0,8(sp)
    8001ad3c:	6582                	ld	a1,0(sp)
    8001ad3e:	ffff2097          	auipc	ra,0xffff2
    8001ad42:	efc080e7          	jalr	-260(ra) # 8000cc3a <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76fa70209070b620E>
    8001ad46:	a009                	j	8001ad48 <.LBB6_97+0x18>
        drop(inode_guard);
    8001ad48:	22813503          	ld	a0,552(sp)
    8001ad4c:	23013583          	ld	a1,560(sp)
    8001ad50:	ffff3097          	auipc	ra,0xffff3
    8001ad54:	c70080e7          	jalr	-912(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001ad58:	a009                	j	8001ad5a <.LBB6_97+0x2a>
    8001ad5a:	4501                	li	a0,0
        drop(dirinode_guard);
    8001ad5c:	2ea107a3          	sb	a0,751(sp)
    8001ad60:	651e                	ld	a0,448(sp)
    8001ad62:	65be                	ld	a1,456(sp)
    8001ad64:	ffff3097          	auipc	ra,0xffff3
    8001ad68:	c5c080e7          	jalr	-932(ra) # 8000d9c0 <_ZN4core3mem4drop17had97cca8cfd828beE>
    8001ad6c:	a009                	j	8001ad6e <.LBB6_97+0x3e>
        Ok(inode)
    8001ad6e:	22013503          	ld	a0,544(sp)
    8001ad72:	2ea13023          	sd	a0,736(sp)
    8001ad76:	21813583          	ld	a1,536(sp)
    8001ad7a:	2cb13c23          	sd	a1,728(sp)
    8001ad7e:	7676                	ld	a2,376(sp)
    8001ad80:	ea08                	sd	a0,16(a2)
    8001ad82:	e60c                	sd	a1,8(a2)
    8001ad84:	4501                	li	a0,0
    8001ad86:	e208                	sd	a0,0(a2)
    }
    8001ad88:	2ea107a3          	sb	a0,751(sp)
    8001ad8c:	0b28                	addi	a0,sp,408
    8001ad8e:	fffec097          	auipc	ra,0xfffec
    8001ad92:	ac8080e7          	jalr	-1336(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8001ad96:	a009                	j	8001ad98 <.LBB6_97+0x68>
    8001ad98:	a0a1                	j	8001ade0 <.LBB6_97+0xb0>
    8001ad9a:	1428                	addi	a0,sp,552
    8001ad9c:	fffec097          	auipc	ra,0xfffec
    8001ada0:	cba080e7          	jalr	-838(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    8001ada4:	a009                	j	8001ada6 <.LBB6_97+0x76>
    8001ada6:	0c28                	addi	a0,sp,536
    8001ada8:	fffec097          	auipc	ra,0xfffec
    8001adac:	aae080e7          	jalr	-1362(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8001adb0:	a009                	j	8001adb2 <.LBB6_97+0x82>
    8001adb2:	a09d                	j	8001ae18 <.LBB6_97+0xe8>
    8001adb4:	4501                	li	a0,0
            },
    8001adb6:	2ea106a3          	sb	a0,749(sp)
    8001adba:	2ee14503          	lbu	a0,750(sp)
    8001adbe:	8905                	andi	a0,a0,1
    8001adc0:	e121                	bnez	a0,8001ae00 <.LBB6_97+0xd0>
    8001adc2:	a009                	j	8001adc4 <.LBB6_97+0x94>
    8001adc4:	4501                	li	a0,0
    8001adc6:	2ea10723          	sb	a0,750(sp)
    8001adca:	a0b9                	j	8001ae18 <.LBB6_97+0xe8>
    8001adcc:	4501                	li	a0,0
    }
    8001adce:	2ea107a3          	sb	a0,751(sp)
    8001add2:	0b28                	addi	a0,sp,408
    8001add4:	fffec097          	auipc	ra,0xfffec
    8001add8:	a82080e7          	jalr	-1406(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8001addc:	a009                	j	8001adde <.LBB6_97+0xae>
    8001adde:	a009                	j	8001ade0 <.LBB6_97+0xb0>
    8001ade0:	3d813083          	ld	ra,984(sp)
    8001ade4:	3e010113          	addi	sp,sp,992
    8001ade8:	8082                	ret
    8001adea:	1ba8                	addi	a0,sp,504
            },
    8001adec:	fffec097          	auipc	ra,0xfffec
    8001adf0:	c6a080e7          	jalr	-918(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    8001adf4:	b7c1                	j	8001adb4 <.LBB6_97+0x84>
    8001adf6:	2ed14503          	lbu	a0,749(sp)
    8001adfa:	8905                	andi	a0,a0,1
    8001adfc:	f57d                	bnez	a0,8001adea <.LBB6_97+0xba>
    8001adfe:	bf5d                	j	8001adb4 <.LBB6_97+0x84>
    8001ae00:	13a8                	addi	a0,sp,488
    8001ae02:	fffec097          	auipc	ra,0xfffec
    8001ae06:	a54080e7          	jalr	-1452(ra) # 80006856 <_ZN4core3ptr45drop_in_place$LT$kernel..fs..inode..Inode$GT$17hbbcdeb19c8b7cb44E>
    8001ae0a:	bf6d                	j	8001adc4 <.LBB6_97+0x94>
    8001ae0c:	0388                	addi	a0,sp,448
    }
    8001ae0e:	fffec097          	auipc	ra,0xfffec
    8001ae12:	c48080e7          	jalr	-952(ra) # 80006a56 <_ZN4core3ptr96drop_in_place$LT$kernel..lock..sleeplock..SleepLockGuard$LT$kernel..fs..inode..InodeData$GT$$GT$17he6ff741e5aa50c6eE>
    8001ae16:	bf5d                	j	8001adcc <.LBB6_97+0x9c>
    8001ae18:	2ef14503          	lbu	a0,751(sp)
    8001ae1c:	8905                	andi	a0,a0,1
    8001ae1e:	f57d                	bnez	a0,8001ae0c <.LBB6_97+0xdc>
    8001ae20:	b775                	j	8001adcc <.LBB6_97+0x9c>

000000008001ae22 <.LBB6_98>:
            inode_guard.dinode.nlink += 1;
    8001ae22:	0000e517          	auipc	a0,0xe
    8001ae26:	90e50513          	addi	a0,a0,-1778 # 80028730 <str.0>

000000008001ae2a <.LBB6_99>:
    8001ae2a:	0000e617          	auipc	a2,0xe
    8001ae2e:	ca660613          	addi	a2,a2,-858 # 80028ad0 <.L__unnamed_39>
    8001ae32:	45f1                	li	a1,28
    8001ae34:	00006097          	auipc	ra,0x6
    8001ae38:	e96080e7          	jalr	-362(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE:

000000008001ae3e <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE>:
fn skip_path(
    8001ae3e:	7155                	addi	sp,sp,-208
    8001ae40:	e586                	sd	ra,200(sp)
    8001ae42:	e532                	sd	a2,136(sp)
    8001ae44:	f12a                	sd	a0,160(sp)
    8001ae46:	f52e                	sd	a1,168(sp)
    8001ae48:	f936                	sd	a3,176(sp)
    while path[cur] == b'/' {
    8001ae4a:	e136                	sd	a3,128(sp)
    8001ae4c:	fcae                	sd	a1,120(sp)
    8001ae4e:	f8aa                	sd	a0,112(sp)
    8001ae50:	a009                	j	8001ae52 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x14>
    8001ae52:	652a                	ld	a0,136(sp)
    8001ae54:	75e6                	ld	a1,120(sp)
    8001ae56:	f4aa                	sd	a0,104(sp)
    8001ae58:	1ab57b63          	bgeu	a0,a1,8001b00e <.LBB7_46>
    8001ae5c:	a009                	j	8001ae5e <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x20>
    8001ae5e:	7546                	ld	a0,112(sp)
    8001ae60:	75a6                	ld	a1,104(sp)
    8001ae62:	00b50633          	add	a2,a0,a1
    8001ae66:	00064603          	lbu	a2,0(a2)
    8001ae6a:	02f00693          	li	a3,47
    8001ae6e:	00d60963          	beq	a2,a3,8001ae80 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x42>
    8001ae72:	a009                	j	8001ae74 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x36>
    if path[cur] == 0 {
    8001ae74:	652a                	ld	a0,136(sp)
    8001ae76:	75e6                	ld	a1,120(sp)
    8001ae78:	f0aa                	sd	a0,96(sp)
    8001ae7a:	00b56d63          	bltu	a0,a1,8001ae94 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x56>
    8001ae7e:	a25d                	j	8001b024 <.LBB7_47>
        cur += 1;
    8001ae80:	652a                	ld	a0,136(sp)
    8001ae82:	00150593          	addi	a1,a0,1
    8001ae86:	ecae                	sd	a1,88(sp)
    8001ae88:	26a5e063          	bltu	a1,a0,8001b0e8 <.LBB7_58>
    8001ae8c:	a009                	j	8001ae8e <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x50>
    8001ae8e:	6566                	ld	a0,88(sp)
    8001ae90:	e52a                	sd	a0,136(sp)
    while path[cur] == b'/' {
    8001ae92:	b7c1                	j	8001ae52 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x14>
    if path[cur] == 0 {
    8001ae94:	7546                	ld	a0,112(sp)
    8001ae96:	7586                	ld	a1,96(sp)
    8001ae98:	00b50633          	add	a2,a0,a1
    8001ae9c:	00064603          	lbu	a2,0(a2)
    8001aea0:	4681                	li	a3,0
    8001aea2:	00d61663          	bne	a2,a3,8001aeae <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x70>
    8001aea6:	a009                	j	8001aea8 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x6a>
    8001aea8:	4501                	li	a0,0
        return 0
    8001aeaa:	e92a                	sd	a0,144(sp)
}
    8001aeac:	aaa9                	j	8001b006 <.LBB7_45+0xaa>
    let start = cur;
    8001aeae:	652a                	ld	a0,136(sp)
    8001aeb0:	fd2a                	sd	a0,184(sp)
    while path[cur] != b'/' && path[cur] != 0 {
    8001aeb2:	e8aa                	sd	a0,80(sp)
    8001aeb4:	a009                	j	8001aeb6 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x78>
    8001aeb6:	652a                	ld	a0,136(sp)
    8001aeb8:	75e6                	ld	a1,120(sp)
    8001aeba:	e4aa                	sd	a0,72(sp)
    8001aebc:	02b56663          	bltu	a0,a1,8001aee8 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xaa>
    8001aec0:	aaad                	j	8001b03a <.LBB7_48>
    8001aec2:	4505                	li	a0,1
    8001aec4:	08a10fa3          	sb	a0,159(sp)
    8001aec8:	a819                	j	8001aede <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xa0>
    8001aeca:	4501                	li	a0,0
    8001aecc:	08a10fa3          	sb	a0,159(sp)
    8001aed0:	a039                	j	8001aede <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xa0>
    8001aed2:	652a                	ld	a0,136(sp)
    8001aed4:	75e6                	ld	a1,120(sp)
    8001aed6:	e0aa                	sd	a0,64(sp)
    8001aed8:	02b56363          	bltu	a0,a1,8001aefe <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xc0>
    8001aedc:	aa95                	j	8001b050 <.LBB7_49>
    8001aede:	09f14503          	lbu	a0,159(sp)
    8001aee2:	8905                	andi	a0,a0,1
    8001aee4:	ed1d                	bnez	a0,8001af22 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xe4>
    8001aee6:	a035                	j	8001af12 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xd4>
    8001aee8:	7546                	ld	a0,112(sp)
    8001aeea:	65a6                	ld	a1,72(sp)
    8001aeec:	00b50633          	add	a2,a0,a1
    8001aef0:	00064603          	lbu	a2,0(a2)
    8001aef4:	02f00693          	li	a3,47
    8001aef8:	fcd609e3          	beq	a2,a3,8001aeca <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x8c>
    8001aefc:	bfd9                	j	8001aed2 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x94>
    8001aefe:	7546                	ld	a0,112(sp)
    8001af00:	6586                	ld	a1,64(sp)
    8001af02:	00b50633          	add	a2,a0,a1
    8001af06:	00064603          	lbu	a2,0(a2)
    8001af0a:	4681                	li	a3,0
    8001af0c:	fad60fe3          	beq	a2,a3,8001aeca <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x8c>
    8001af10:	bf4d                	j	8001aec2 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x84>
    let mut count = cur - start; 
    8001af12:	652a                	ld	a0,136(sp)
    8001af14:	65c6                	ld	a1,80(sp)
    8001af16:	40b50633          	sub	a2,a0,a1
    8001af1a:	fc32                	sd	a2,56(sp)
    8001af1c:	16c56363          	bltu	a0,a2,8001b082 <.LBB7_52>
    8001af20:	a819                	j	8001af36 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xf8>
        cur += 1;
    8001af22:	652a                	ld	a0,136(sp)
    8001af24:	00150593          	addi	a1,a0,1
    8001af28:	f82e                	sd	a1,48(sp)
    8001af2a:	12a5ee63          	bltu	a1,a0,8001b066 <.LBB7_50>
    8001af2e:	a009                	j	8001af30 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0xf2>
    8001af30:	7542                	ld	a0,48(sp)
    8001af32:	e52a                	sd	a0,136(sp)
    while path[cur] != b'/' && path[cur] != 0 {
    8001af34:	b749                	j	8001aeb6 <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x78>
    let mut count = cur - start; 
    8001af36:	7562                	ld	a0,56(sp)
    8001af38:	e1aa                	sd	a0,192(sp)
    8001af3a:	45b9                	li	a1,14
    if count >= name.len() {
    8001af3c:	650a                	ld	a0,128(sp)
    8001af3e:	ffff8097          	auipc	ra,0xffff8
    8001af42:	d26080e7          	jalr	-730(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    8001af46:	f42a                	sd	a0,40(sp)
    8001af48:	a009                	j	8001af4a <_ZN6kernel2fs5inode9skip_path17hdf571b2debc4d2bdE+0x10c>
    8001af4a:	7562                	ld	a0,56(sp)
    8001af4c:	75a2                	ld	a1,40(sp)
    8001af4e:	02b56163          	bltu	a0,a1,8001af70 <.LBB7_45+0x14>
    8001af52:	a009                	j	8001af54 <.LBB7_44>

000000008001af54 <.LBB7_44>:
        debug_assert!(false);
    8001af54:	0000e517          	auipc	a0,0xe
    8001af58:	c5c50513          	addi	a0,a0,-932 # 80028bb0 <.L__unnamed_40>

000000008001af5c <.LBB7_45>:
    8001af5c:	0000e617          	auipc	a2,0xe
    8001af60:	c6c60613          	addi	a2,a2,-916 # 80028bc8 <.L__unnamed_41>
    8001af64:	45dd                	li	a1,23
    8001af66:	00006097          	auipc	ra,0x6
    8001af6a:	d64080e7          	jalr	-668(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001af6e:	0000                	unimp
        ptr::copy(path.as_ptr().offset(start as isize), name.as_mut_ptr(), count);
    8001af70:	7546                	ld	a0,112(sp)
    8001af72:	75e6                	ld	a1,120(sp)
    8001af74:	ffff8097          	auipc	ra,0xffff8
    8001af78:	d50080e7          	jalr	-688(ra) # 80012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>
    8001af7c:	f02a                	sd	a0,32(sp)
    8001af7e:	a009                	j	8001af80 <.LBB7_45+0x24>
    8001af80:	7502                	ld	a0,32(sp)
    8001af82:	65c6                	ld	a1,80(sp)
    8001af84:	00005097          	auipc	ra,0x5
    8001af88:	21a080e7          	jalr	538(ra) # 8002019e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE>
    8001af8c:	ec2a                	sd	a0,24(sp)
    8001af8e:	a009                	j	8001af90 <.LBB7_45+0x34>
    8001af90:	45b9                	li	a1,14
    8001af92:	650a                	ld	a0,128(sp)
    8001af94:	ffff8097          	auipc	ra,0xffff8
    8001af98:	cc6080e7          	jalr	-826(ra) # 80012c5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfacde4f5753eccfcE>
    8001af9c:	e82a                	sd	a0,16(sp)
    8001af9e:	a009                	j	8001afa0 <.LBB7_45+0x44>
    8001afa0:	6562                	ld	a0,24(sp)
    8001afa2:	65c2                	ld	a1,16(sp)
    8001afa4:	7662                	ld	a2,56(sp)
    8001afa6:	fffeb097          	auipc	ra,0xfffeb
    8001afaa:	c4e080e7          	jalr	-946(ra) # 80005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>
    8001afae:	a009                	j	8001afb0 <.LBB7_45+0x54>
    8001afb0:	4535                	li	a0,13
    name[count] = 0;
    8001afb2:	75e2                	ld	a1,56(sp)
    8001afb4:	0eb56663          	bltu	a0,a1,8001b0a0 <.LBB7_54>
    8001afb8:	a009                	j	8001afba <.LBB7_45+0x5e>
    8001afba:	650a                	ld	a0,128(sp)
    8001afbc:	75e2                	ld	a1,56(sp)
    8001afbe:	00b50633          	add	a2,a0,a1
    8001afc2:	4681                	li	a3,0
    8001afc4:	00d60023          	sb	a3,0(a2)
    while path[cur] == b'/' {
    8001afc8:	a009                	j	8001afca <.LBB7_45+0x6e>
    8001afca:	652a                	ld	a0,136(sp)
    8001afcc:	75e6                	ld	a1,120(sp)
    8001afce:	e42a                	sd	a0,8(sp)
    8001afd0:	0eb57363          	bgeu	a0,a1,8001b0b6 <.LBB7_55>
    8001afd4:	a009                	j	8001afd6 <.LBB7_45+0x7a>
    8001afd6:	7546                	ld	a0,112(sp)
    8001afd8:	65a2                	ld	a1,8(sp)
    8001afda:	00b50633          	add	a2,a0,a1
    8001afde:	00064603          	lbu	a2,0(a2)
    8001afe2:	02f00693          	li	a3,47
    8001afe6:	00d60663          	beq	a2,a3,8001aff2 <.LBB7_45+0x96>
    8001afea:	a009                	j	8001afec <.LBB7_45+0x90>
    cur
    8001afec:	652a                	ld	a0,136(sp)
    8001afee:	e92a                	sd	a0,144(sp)
}
    8001aff0:	a819                	j	8001b006 <.LBB7_45+0xaa>
        cur += 1;
    8001aff2:	652a                	ld	a0,136(sp)
    8001aff4:	00150593          	addi	a1,a0,1
    8001aff8:	e02e                	sd	a1,0(sp)
    8001affa:	0ca5e963          	bltu	a1,a0,8001b0cc <.LBB7_56>
    8001affe:	a009                	j	8001b000 <.LBB7_45+0xa4>
    8001b000:	6502                	ld	a0,0(sp)
    8001b002:	e52a                	sd	a0,136(sp)
    while path[cur] == b'/' {
    8001b004:	b7d9                	j	8001afca <.LBB7_45+0x6e>
}
    8001b006:	654a                	ld	a0,144(sp)
    8001b008:	60ae                	ld	ra,200(sp)
    8001b00a:	6169                	addi	sp,sp,208
    8001b00c:	8082                	ret

000000008001b00e <.LBB7_46>:
    while path[cur] == b'/' {
    8001b00e:	0000e617          	auipc	a2,0xe
    8001b012:	b1260613          	addi	a2,a2,-1262 # 80028b20 <.L__unnamed_42>
    8001b016:	7526                	ld	a0,104(sp)
    8001b018:	75e6                	ld	a1,120(sp)
    8001b01a:	00006097          	auipc	ra,0x6
    8001b01e:	cdc080e7          	jalr	-804(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b024 <.LBB7_47>:
    if path[cur] == 0 {
    8001b024:	0000e617          	auipc	a2,0xe
    8001b028:	b1460613          	addi	a2,a2,-1260 # 80028b38 <.L__unnamed_43>
    8001b02c:	7506                	ld	a0,96(sp)
    8001b02e:	75e6                	ld	a1,120(sp)
    8001b030:	00006097          	auipc	ra,0x6
    8001b034:	cc6080e7          	jalr	-826(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b03a <.LBB7_48>:
    while path[cur] != b'/' && path[cur] != 0 {
    8001b03a:	0000e617          	auipc	a2,0xe
    8001b03e:	b1660613          	addi	a2,a2,-1258 # 80028b50 <.L__unnamed_44>
    8001b042:	6526                	ld	a0,72(sp)
    8001b044:	75e6                	ld	a1,120(sp)
    8001b046:	00006097          	auipc	ra,0x6
    8001b04a:	cb0080e7          	jalr	-848(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b050 <.LBB7_49>:
    8001b050:	0000e617          	auipc	a2,0xe
    8001b054:	b1860613          	addi	a2,a2,-1256 # 80028b68 <.L__unnamed_45>
    8001b058:	6506                	ld	a0,64(sp)
    8001b05a:	75e6                	ld	a1,120(sp)
    8001b05c:	00006097          	auipc	ra,0x6
    8001b060:	c9a080e7          	jalr	-870(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b066 <.LBB7_50>:
        cur += 1;
    8001b066:	0000d517          	auipc	a0,0xd
    8001b06a:	6ca50513          	addi	a0,a0,1738 # 80028730 <str.0>

000000008001b06e <.LBB7_51>:
    8001b06e:	0000e617          	auipc	a2,0xe
    8001b072:	b1260613          	addi	a2,a2,-1262 # 80028b80 <.L__unnamed_46>
    8001b076:	45f1                	li	a1,28
    8001b078:	00006097          	auipc	ra,0x6
    8001b07c:	c52080e7          	jalr	-942(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001b082 <.LBB7_52>:
    let mut count = cur - start; 
    8001b082:	0000d517          	auipc	a0,0xd
    8001b086:	6fe50513          	addi	a0,a0,1790 # 80028780 <str.1>

000000008001b08a <.LBB7_53>:
    8001b08a:	0000e617          	auipc	a2,0xe
    8001b08e:	b0e60613          	addi	a2,a2,-1266 # 80028b98 <.L__unnamed_47>
    8001b092:	02100593          	li	a1,33
    8001b096:	00006097          	auipc	ra,0x6
    8001b09a:	c34080e7          	jalr	-972(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001b0a0 <.LBB7_54>:
    name[count] = 0;
    8001b0a0:	0000e617          	auipc	a2,0xe
    8001b0a4:	b4060613          	addi	a2,a2,-1216 # 80028be0 <.L__unnamed_48>
    8001b0a8:	45b9                	li	a1,14
    8001b0aa:	7562                	ld	a0,56(sp)
    8001b0ac:	00006097          	auipc	ra,0x6
    8001b0b0:	c4a080e7          	jalr	-950(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b0b6 <.LBB7_55>:
    while path[cur] == b'/' {
    8001b0b6:	0000e617          	auipc	a2,0xe
    8001b0ba:	b4260613          	addi	a2,a2,-1214 # 80028bf8 <.L__unnamed_49>
    8001b0be:	6522                	ld	a0,8(sp)
    8001b0c0:	75e6                	ld	a1,120(sp)
    8001b0c2:	00006097          	auipc	ra,0x6
    8001b0c6:	c34080e7          	jalr	-972(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b0cc <.LBB7_56>:
        cur += 1;
    8001b0cc:	0000d517          	auipc	a0,0xd
    8001b0d0:	66450513          	addi	a0,a0,1636 # 80028730 <str.0>

000000008001b0d4 <.LBB7_57>:
    8001b0d4:	0000e617          	auipc	a2,0xe
    8001b0d8:	b3c60613          	addi	a2,a2,-1220 # 80028c10 <.L__unnamed_50>
    8001b0dc:	45f1                	li	a1,28
    8001b0de:	00006097          	auipc	ra,0x6
    8001b0e2:	bec080e7          	jalr	-1044(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001b0e8 <.LBB7_58>:
        cur += 1;
    8001b0e8:	0000d517          	auipc	a0,0xd
    8001b0ec:	64850513          	addi	a0,a0,1608 # 80028730 <str.0>

000000008001b0f0 <.LBB7_59>:
    8001b0f0:	0000e617          	auipc	a2,0xe
    8001b0f4:	b3860613          	addi	a2,a2,-1224 # 80028c28 <.L__unnamed_51>
    8001b0f8:	45f1                	li	a1,28
    8001b0fa:	00006097          	auipc	ra,0x6
    8001b0fe:	bd0080e7          	jalr	-1072(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E:

000000008001b104 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E>:
    pub fn truncate(&mut self, inode: &Inode) {
    8001b104:	7149                	addi	sp,sp,-368
    8001b106:	f686                	sd	ra,360(sp)
    8001b108:	ee2a                	sd	a0,280(sp)
    8001b10a:	f22e                	sd	a1,288(sp)
    8001b10c:	4601                	li	a2,0
        for i in 0..NDIRECT {
    8001b10e:	f4b2                	sd	a2,104(sp)
    8001b110:	46b1                	li	a3,12
    8001b112:	f8b6                	sd	a3,112(sp)
    8001b114:	f0aa                	sd	a0,96(sp)
    8001b116:	8532                	mv	a0,a2
    8001b118:	ecae                	sd	a1,88(sp)
    8001b11a:	85b6                	mv	a1,a3
    8001b11c:	00005097          	auipc	ra,0x5
    8001b120:	98e080e7          	jalr	-1650(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001b124:	e8aa                	sd	a0,80(sp)
    8001b126:	e4ae                	sd	a1,72(sp)
    8001b128:	a009                	j	8001b12a <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x26>
    8001b12a:	6546                	ld	a0,80(sp)
    8001b12c:	fcaa                	sd	a0,120(sp)
    8001b12e:	65a6                	ld	a1,72(sp)
    8001b130:	e12e                	sd	a1,128(sp)
    8001b132:	a009                	j	8001b134 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x30>
    8001b134:	18a8                	addi	a0,sp,120
    8001b136:	00005097          	auipc	ra,0x5
    8001b13a:	906080e7          	jalr	-1786(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001b13e:	e52a                	sd	a0,136(sp)
    8001b140:	e92e                	sd	a1,144(sp)
    8001b142:	a009                	j	8001b144 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x40>
    8001b144:	652a                	ld	a0,136(sp)
    8001b146:	4581                	li	a1,0
    8001b148:	00b50463          	beq	a0,a1,8001b150 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x4c>
    8001b14c:	a009                	j	8001b14e <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x4a>
    8001b14e:	a801                	j	8001b15e <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x5a>
        if self.dinode.addrs[NDIRECT] > 0 {
    8001b150:	7506                	ld	a0,96(sp)
    8001b152:	416c                	lw	a1,68(a0)
    8001b154:	4601                	li	a2,0
    8001b156:	06c59b63          	bne	a1,a2,8001b1cc <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0xc8>
    8001b15a:	a079                	j	8001b1e8 <.LBB8_39+0x14>
        for i in 0..NDIRECT {
    8001b15c:	0000                	unimp
    8001b15e:	654a                	ld	a0,144(sp)
    8001b160:	f62a                	sd	a0,296(sp)
    8001b162:	fa2a                	sd	a0,304(sp)
    8001b164:	fe2a                	sd	a0,312(sp)
    8001b166:	45b1                	li	a1,12
            if self.dinode.addrs[i] > 0 {
    8001b168:	e0aa                	sd	a0,64(sp)
    8001b16a:	18a5e163          	bltu	a1,a0,8001b2ec <.LBB8_40>
    8001b16e:	a009                	j	8001b170 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x6c>
    8001b170:	6506                	ld	a0,64(sp)
    8001b172:	00251593          	slli	a1,a0,0x2
    8001b176:	7606                	ld	a2,96(sp)
    8001b178:	95b2                	add	a1,a1,a2
    8001b17a:	49cc                	lw	a1,20(a1)
    8001b17c:	4681                	li	a3,0
    8001b17e:	00d58c63          	beq	a1,a3,8001b196 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x92>
    8001b182:	a009                	j	8001b184 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x80>
                bfree(inode.dev, self.dinode.addrs[i]);
    8001b184:	6566                	ld	a0,88(sp)
    8001b186:	00856503          	lwu	a0,8(a0)
    8001b18a:	45b5                	li	a1,13
    8001b18c:	6606                	ld	a2,64(sp)
    8001b18e:	fc2a                	sd	a0,56(sp)
    8001b190:	00b66463          	bltu	a2,a1,8001b198 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x94>
    8001b194:	a2bd                	j	8001b302 <.LBB8_41>
            if self.dinode.addrs[i] > 0 {
    8001b196:	a815                	j	8001b1ca <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0xc6>
                bfree(inode.dev, self.dinode.addrs[i]);
    8001b198:	6506                	ld	a0,64(sp)
    8001b19a:	00251593          	slli	a1,a0,0x2
    8001b19e:	7606                	ld	a2,96(sp)
    8001b1a0:	95b2                	add	a1,a1,a2
    8001b1a2:	49cc                	lw	a1,20(a1)
    8001b1a4:	7562                	ld	a0,56(sp)
    8001b1a6:	ffffe097          	auipc	ra,0xffffe
    8001b1aa:	390080e7          	jalr	912(ra) # 80019536 <_ZN6kernel2fs6bitmap5bfree17h4cfdf54c3e01916cE>
    8001b1ae:	a009                	j	8001b1b0 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0xac>
    8001b1b0:	4531                	li	a0,12
                self.dinode.addrs[i] = 0;
    8001b1b2:	6586                	ld	a1,64(sp)
    8001b1b4:	16b56263          	bltu	a0,a1,8001b318 <.LBB8_42>
    8001b1b8:	a009                	j	8001b1ba <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0xb6>
    8001b1ba:	6506                	ld	a0,64(sp)
    8001b1bc:	00251593          	slli	a1,a0,0x2
    8001b1c0:	7606                	ld	a2,96(sp)
    8001b1c2:	95b2                	add	a1,a1,a2
    8001b1c4:	4681                	li	a3,0
    8001b1c6:	c9d4                	sw	a3,20(a1)
            if self.dinode.addrs[i] > 0 {
    8001b1c8:	a009                	j	8001b1ca <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0xc6>
        for i in 0..NDIRECT {
    8001b1ca:	b7ad                	j	8001b134 <_ZN6kernel2fs5inode9InodeData8truncate17hb91b8a32c1e46039E+0x30>
            let buf = BCACHE.bread(inode.dev, self.dinode.addrs[NDIRECT]);
    8001b1cc:	7506                	ld	a0,96(sp)
    8001b1ce:	4174                	lw	a3,68(a0)
    8001b1d0:	65e6                	ld	a1,88(sp)
    8001b1d2:	4590                	lw	a2,8(a1)

000000008001b1d4 <.LBB8_39>:
    8001b1d4:	00011597          	auipc	a1,0x11
    8001b1d8:	e2c58593          	addi	a1,a1,-468 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8001b1dc:	0928                	addi	a0,sp,152
    8001b1de:	fffe6097          	auipc	ra,0xfffe6
    8001b1e2:	620080e7          	jalr	1568(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8001b1e6:	a011                	j	8001b1ea <.LBB8_39+0x16>
        if self.dinode.addrs[NDIRECT] > 0 {
    8001b1e8:	a0f5                	j	8001b2d4 <.LBB8_39+0x100>
    8001b1ea:	0928                	addi	a0,sp,152
            let buf_ptr = buf.raw_data() as *const BlockNo;
    8001b1ec:	fffe6097          	auipc	ra,0xfffe6
    8001b1f0:	76e080e7          	jalr	1902(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    8001b1f4:	f82a                	sd	a0,48(sp)
    8001b1f6:	a009                	j	8001b1f8 <.LBB8_39+0x24>
    8001b1f8:	7542                	ld	a0,48(sp)
    8001b1fa:	75c2                	ld	a1,48(sp)
    8001b1fc:	e2ae                	sd	a1,320(sp)
    8001b1fe:	4601                	li	a2,0
            for i in 0..NINDIRECT {
    8001b200:	e1b2                	sd	a2,192(sp)
    8001b202:	08000693          	li	a3,128
    8001b206:	e5b6                	sd	a3,200(sp)
    8001b208:	f42a                	sd	a0,40(sp)
    8001b20a:	8532                	mv	a0,a2
    8001b20c:	85b6                	mv	a1,a3
    8001b20e:	00005097          	auipc	ra,0x5
    8001b212:	89c080e7          	jalr	-1892(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001b216:	f02a                	sd	a0,32(sp)
    8001b218:	ec2e                	sd	a1,24(sp)
    8001b21a:	a009                	j	8001b21c <.LBB8_39+0x48>
    8001b21c:	7502                	ld	a0,32(sp)
    8001b21e:	e9aa                	sd	a0,208(sp)
    8001b220:	65e2                	ld	a1,24(sp)
    8001b222:	edae                	sd	a1,216(sp)
    8001b224:	a009                	j	8001b226 <.LBB8_39+0x52>
    8001b226:	0988                	addi	a0,sp,208
    8001b228:	00005097          	auipc	ra,0x5
    8001b22c:	814080e7          	jalr	-2028(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001b230:	f1aa                	sd	a0,224(sp)
    8001b232:	f5ae                	sd	a1,232(sp)
    8001b234:	a009                	j	8001b236 <.LBB8_39+0x62>
    8001b236:	750e                	ld	a0,224(sp)
    8001b238:	4581                	li	a1,0
    8001b23a:	00b50463          	beq	a0,a1,8001b242 <.LBB8_39+0x6e>
    8001b23e:	a009                	j	8001b240 <.LBB8_39+0x6c>
    8001b240:	a015                	j	8001b264 <.LBB8_39+0x90>
            drop(buf);
    8001b242:	756a                	ld	a0,184(sp)
    8001b244:	ea2a                	sd	a0,272(sp)
    8001b246:	754a                	ld	a0,176(sp)
    8001b248:	e62a                	sd	a0,264(sp)
    8001b24a:	752a                	ld	a0,168(sp)
    8001b24c:	e22a                	sd	a0,256(sp)
    8001b24e:	750a                	ld	a0,160(sp)
    8001b250:	fdaa                	sd	a0,248(sp)
    8001b252:	656a                	ld	a0,152(sp)
    8001b254:	f9aa                	sd	a0,240(sp)
    8001b256:	1988                	addi	a0,sp,240
    8001b258:	ffff2097          	auipc	ra,0xffff2
    8001b25c:	73a080e7          	jalr	1850(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001b260:	a8a9                	j	8001b2ba <.LBB8_39+0xe6>
            for i in 0..NINDIRECT {
    8001b262:	0000                	unimp
    8001b264:	752e                	ld	a0,232(sp)
    8001b266:	e6aa                	sd	a0,328(sp)
    8001b268:	eaaa                	sd	a0,336(sp)
    8001b26a:	eeaa                	sd	a0,344(sp)
                let bn = unsafe{ read(buf_ptr.offset(i as isize)) };
    8001b26c:	75a2                	ld	a1,40(sp)
    8001b26e:	e82a                	sd	a0,16(sp)
    8001b270:	852e                	mv	a0,a1
    8001b272:	65c2                	ld	a1,16(sp)
    8001b274:	ffff8097          	auipc	ra,0xffff8
    8001b278:	53a080e7          	jalr	1338(ra) # 800137ae <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hbc396b08ae82cfd4E>
    8001b27c:	e42a                	sd	a0,8(sp)
    8001b27e:	a009                	j	8001b280 <.LBB8_39+0xac>
    8001b280:	6522                	ld	a0,8(sp)
    8001b282:	ffff6097          	auipc	ra,0xffff6
    8001b286:	870080e7          	jalr	-1936(ra) # 80010af2 <_ZN4core3ptr4read17h9c28f54bc51d0888E>
    8001b28a:	85aa                	mv	a1,a0
    8001b28c:	16a12223          	sw	a0,356(sp)
    8001b290:	e02e                	sd	a1,0(sp)
    8001b292:	a009                	j	8001b294 <.LBB8_39+0xc0>
                if bn > 0 {
    8001b294:	6502                	ld	a0,0(sp)
    8001b296:	02051593          	slli	a1,a0,0x20
    8001b29a:	9181                	srli	a1,a1,0x20
    8001b29c:	4601                	li	a2,0
    8001b29e:	00c58b63          	beq	a1,a2,8001b2b4 <.LBB8_39+0xe0>
    8001b2a2:	a009                	j	8001b2a4 <.LBB8_39+0xd0>
                    bfree(inode.dev, bn);
    8001b2a4:	6566                	ld	a0,88(sp)
    8001b2a6:	4508                	lw	a0,8(a0)
    8001b2a8:	6582                	ld	a1,0(sp)
    8001b2aa:	ffffe097          	auipc	ra,0xffffe
    8001b2ae:	28c080e7          	jalr	652(ra) # 80019536 <_ZN6kernel2fs6bitmap5bfree17h4cfdf54c3e01916cE>
    8001b2b2:	a011                	j	8001b2b6 <.LBB8_39+0xe2>
                if bn > 0 {
    8001b2b4:	a011                	j	8001b2b8 <.LBB8_39+0xe4>
    8001b2b6:	a009                	j	8001b2b8 <.LBB8_39+0xe4>
            for i in 0..NINDIRECT {
    8001b2b8:	b7bd                	j	8001b226 <.LBB8_39+0x52>
            bfree(inode.dev, self.dinode.addrs[NDIRECT]);
    8001b2ba:	7506                	ld	a0,96(sp)
    8001b2bc:	416c                	lw	a1,68(a0)
    8001b2be:	6666                	ld	a2,88(sp)
    8001b2c0:	4608                	lw	a0,8(a2)
    8001b2c2:	ffffe097          	auipc	ra,0xffffe
    8001b2c6:	274080e7          	jalr	628(ra) # 80019536 <_ZN6kernel2fs6bitmap5bfree17h4cfdf54c3e01916cE>
    8001b2ca:	a009                	j	8001b2cc <.LBB8_39+0xf8>
    8001b2cc:	4501                	li	a0,0
            self.dinode.addrs[NDIRECT] = 0;
    8001b2ce:	7586                	ld	a1,96(sp)
    8001b2d0:	c1e8                	sw	a0,68(a1)
        if self.dinode.addrs[NDIRECT] > 0 {
    8001b2d2:	a009                	j	8001b2d4 <.LBB8_39+0x100>
    8001b2d4:	4501                	li	a0,0
        self.dinode.size = 0;
    8001b2d6:	7586                	ld	a1,96(sp)
    8001b2d8:	c988                	sw	a0,16(a1)
        self.update();
    8001b2da:	852e                	mv	a0,a1
    8001b2dc:	00000097          	auipc	ra,0x0
    8001b2e0:	052080e7          	jalr	82(ra) # 8001b32e <_ZN6kernel2fs5inode9InodeData6update17h3258e235afe18890E>
    8001b2e4:	a009                	j	8001b2e6 <.LBB8_39+0x112>
    }
    8001b2e6:	70b6                	ld	ra,360(sp)
    8001b2e8:	6175                	addi	sp,sp,368
    8001b2ea:	8082                	ret

000000008001b2ec <.LBB8_40>:
            if self.dinode.addrs[i] > 0 {
    8001b2ec:	0000e617          	auipc	a2,0xe
    8001b2f0:	95460613          	addi	a2,a2,-1708 # 80028c40 <.L__unnamed_52>
    8001b2f4:	45b5                	li	a1,13
    8001b2f6:	6506                	ld	a0,64(sp)
    8001b2f8:	00006097          	auipc	ra,0x6
    8001b2fc:	9fe080e7          	jalr	-1538(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b302 <.LBB8_41>:
                bfree(inode.dev, self.dinode.addrs[i]);
    8001b302:	0000e617          	auipc	a2,0xe
    8001b306:	95660613          	addi	a2,a2,-1706 # 80028c58 <.L__unnamed_53>
    8001b30a:	45b5                	li	a1,13
    8001b30c:	6506                	ld	a0,64(sp)
    8001b30e:	00006097          	auipc	ra,0x6
    8001b312:	9e8080e7          	jalr	-1560(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b318 <.LBB8_42>:
                self.dinode.addrs[i] = 0;
    8001b318:	0000e617          	auipc	a2,0xe
    8001b31c:	95860613          	addi	a2,a2,-1704 # 80028c70 <.L__unnamed_54>
    8001b320:	45b5                	li	a1,13
    8001b322:	6506                	ld	a0,64(sp)
    8001b324:	00006097          	auipc	ra,0x6
    8001b328:	9d2080e7          	jalr	-1582(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs5inode9InodeData6update17h3258e235afe18890E:

000000008001b32e <_ZN6kernel2fs5inode9InodeData6update17h3258e235afe18890E>:
    pub fn update(&mut self) {
    8001b32e:	7115                	addi	sp,sp,-224
    8001b330:	ed86                	sd	ra,216(sp)
    8001b332:	e1aa                	sd	a0,192(sp)
            self.dev, 
    8001b334:	00056603          	lwu	a2,0(a0)
            unsafe { SUPER_BLOCK.locate_inode(self.inum)}
    8001b338:	414c                	lw	a1,4(a0)

000000008001b33a <.LBB9_8>:
    8001b33a:	00052697          	auipc	a3,0x52
    8001b33e:	ea668693          	addi	a3,a3,-346 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    8001b342:	f42a                	sd	a0,40(sp)
    8001b344:	8536                	mv	a0,a3
    8001b346:	f032                	sd	a2,32(sp)
    8001b348:	ffff2097          	auipc	ra,0xffff2
    8001b34c:	0b8080e7          	jalr	184(ra) # 8000d400 <_ZN6kernel2fs10superblock10SuperBlock12locate_inode17h7c732a61e5f44353E>
    8001b350:	ec2a                	sd	a0,24(sp)
    8001b352:	a009                	j	8001b354 <.LBB9_9>

000000008001b354 <.LBB9_9>:
        let mut buf = BCACHE.bread(
    8001b354:	00011597          	auipc	a1,0x11
    8001b358:	cac58593          	addi	a1,a1,-852 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8001b35c:	1808                	addi	a0,sp,48
    8001b35e:	7602                	ld	a2,32(sp)
    8001b360:	66e2                	ld	a3,24(sp)
    8001b362:	fffe6097          	auipc	ra,0xfffe6
    8001b366:	49c080e7          	jalr	1180(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8001b36a:	a009                	j	8001b36c <.LBB9_9+0x18>
        let offset = locate_inode_offset(self.inum) as isize;
    8001b36c:	7522                	ld	a0,40(sp)
    8001b36e:	4148                	lw	a0,4(a0)
    8001b370:	00001097          	auipc	ra,0x1
    8001b374:	0a0080e7          	jalr	160(ra) # 8001c410 <_ZN6kernel2fs5inode19locate_inode_offset17he097828cfd4cb659E>
    8001b378:	e82a                	sd	a0,16(sp)
    8001b37a:	a009                	j	8001b37c <.LBB9_9+0x28>
    8001b37c:	6542                	ld	a0,16(sp)
    8001b37e:	e5aa                	sd	a0,200(sp)
    8001b380:	1808                	addi	a0,sp,48
        let dinode = unsafe{ (buf.raw_data_mut() as *mut DiskInode).offset(offset) };
    8001b382:	fffe6097          	auipc	ra,0xfffe6
    8001b386:	61c080e7          	jalr	1564(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    8001b38a:	e42a                	sd	a0,8(sp)
    8001b38c:	a009                	j	8001b38e <.LBB9_9+0x3a>
    8001b38e:	6522                	ld	a0,8(sp)
    8001b390:	65c2                	ld	a1,16(sp)
    8001b392:	fffed097          	auipc	ra,0xfffed
    8001b396:	32e080e7          	jalr	814(ra) # 800086c0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h02ff9762c1abd856E>
    8001b39a:	85aa                	mv	a1,a0
    8001b39c:	e9aa                	sd	a0,208(sp)
    8001b39e:	e02e                	sd	a1,0(sp)
    8001b3a0:	a009                	j	8001b3a2 <.LBB9_9+0x4e>
        unsafe{ write(dinode, self.dinode) };
    8001b3a2:	7522                	ld	a0,40(sp)
    8001b3a4:	04056583          	lwu	a1,64(a0)
    8001b3a8:	04456603          	lwu	a2,68(a0)
    8001b3ac:	1602                	slli	a2,a2,0x20
    8001b3ae:	8dd1                	or	a1,a1,a2
    8001b3b0:	e92e                	sd	a1,144(sp)
    8001b3b2:	03856583          	lwu	a1,56(a0)
    8001b3b6:	03c56603          	lwu	a2,60(a0)
    8001b3ba:	1602                	slli	a2,a2,0x20
    8001b3bc:	8dd1                	or	a1,a1,a2
    8001b3be:	e52e                	sd	a1,136(sp)
    8001b3c0:	03056583          	lwu	a1,48(a0)
    8001b3c4:	03456603          	lwu	a2,52(a0)
    8001b3c8:	1602                	slli	a2,a2,0x20
    8001b3ca:	8dd1                	or	a1,a1,a2
    8001b3cc:	e12e                	sd	a1,128(sp)
    8001b3ce:	02856583          	lwu	a1,40(a0)
    8001b3d2:	02c56603          	lwu	a2,44(a0)
    8001b3d6:	1602                	slli	a2,a2,0x20
    8001b3d8:	8dd1                	or	a1,a1,a2
    8001b3da:	fcae                	sd	a1,120(sp)
    8001b3dc:	02056583          	lwu	a1,32(a0)
    8001b3e0:	02456603          	lwu	a2,36(a0)
    8001b3e4:	1602                	slli	a2,a2,0x20
    8001b3e6:	8dd1                	or	a1,a1,a2
    8001b3e8:	f8ae                	sd	a1,112(sp)
    8001b3ea:	01856583          	lwu	a1,24(a0)
    8001b3ee:	01c56603          	lwu	a2,28(a0)
    8001b3f2:	1602                	slli	a2,a2,0x20
    8001b3f4:	8dd1                	or	a1,a1,a2
    8001b3f6:	f4ae                	sd	a1,104(sp)
    8001b3f8:	01056583          	lwu	a1,16(a0)
    8001b3fc:	01456603          	lwu	a2,20(a0)
    8001b400:	1602                	slli	a2,a2,0x20
    8001b402:	8dd1                	or	a1,a1,a2
    8001b404:	f0ae                	sd	a1,96(sp)
    8001b406:	00856583          	lwu	a1,8(a0)
    8001b40a:	00c56603          	lwu	a2,12(a0)
    8001b40e:	1602                	slli	a2,a2,0x20
    8001b410:	8dd1                	or	a1,a1,a2
    8001b412:	ecae                	sd	a1,88(sp)
    8001b414:	08ac                	addi	a1,sp,88
    8001b416:	6502                	ld	a0,0(sp)
    8001b418:	ffff6097          	auipc	ra,0xffff6
    8001b41c:	846080e7          	jalr	-1978(ra) # 80010c5e <_ZN4core3ptr5write17h3030b73b862e26f1E>
    8001b420:	a009                	j	8001b422 <.LBB9_9+0xce>
        LOG.write(buf);
    8001b422:	6546                	ld	a0,80(sp)
    8001b424:	fd2a                	sd	a0,184(sp)
    8001b426:	6526                	ld	a0,72(sp)
    8001b428:	f92a                	sd	a0,176(sp)
    8001b42a:	6506                	ld	a0,64(sp)
    8001b42c:	f52a                	sd	a0,168(sp)
    8001b42e:	7562                	ld	a0,56(sp)
    8001b430:	f12a                	sd	a0,160(sp)
    8001b432:	7542                	ld	a0,48(sp)
    8001b434:	ed2a                	sd	a0,152(sp)

000000008001b436 <.LBB9_10>:
    8001b436:	0003f517          	auipc	a0,0x3f
    8001b43a:	c2a50513          	addi	a0,a0,-982 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8001b43e:	092c                	addi	a1,sp,152
    8001b440:	ffffc097          	auipc	ra,0xffffc
    8001b444:	e94080e7          	jalr	-364(ra) # 800172d4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E>
    8001b448:	a009                	j	8001b44a <.LBB9_10+0x14>
    }
    8001b44a:	60ee                	ld	ra,216(sp)
    8001b44c:	612d                	addi	sp,sp,224
    8001b44e:	8082                	ret

Disassembly of section .text._ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE:

000000008001b450 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE>:
    pub fn bmap(&mut self, offset_bn: u32) -> Result<u32, &'static str> {
    8001b450:	7111                	addi	sp,sp,-256
    8001b452:	fd86                	sd	ra,248(sp)
    8001b454:	0006069b          	sext.w	a3,a2
    8001b458:	8732                	mv	a4,a2
    8001b45a:	e9ae                	sd	a1,208(sp)
    8001b45c:	cfb2                	sw	a2,220(sp)
    8001b45e:	4781                	li	a5,0
        let mut addr;
    8001b460:	0cf107a3          	sb	a5,207(sp)
        let offset_bn = offset_bn as usize;
    8001b464:	1602                	slli	a2,a2,0x20
    8001b466:	9201                	srli	a2,a2,0x20
    8001b468:	f1b2                	sd	a2,224(sp)
    8001b46a:	47ad                	li	a5,11
        if offset_bn < NDIRECT {
    8001b46c:	f4ae                	sd	a1,104(sp)
    8001b46e:	f0aa                	sd	a0,96(sp)
    8001b470:	ecb2                	sd	a2,88(sp)
    8001b472:	00d7e863          	bltu	a5,a3,8001b482 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x32>
    8001b476:	a009                	j	8001b478 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x28>
    8001b478:	4535                	li	a0,13
            if self.dinode.addrs[offset_bn] == 0 {
    8001b47a:	65e6                	ld	a1,88(sp)
    8001b47c:	00a5e963          	bltu	a1,a0,8001b48e <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x3e>
    8001b480:	aae1                	j	8001b658 <.LBB10_39>
    8001b482:	08c00513          	li	a0,140
        if offset_bn < NINDIRECT + NDIRECT {
    8001b486:	65e6                	ld	a1,88(sp)
    8001b488:	06a5ed63          	bltu	a1,a0,8001b502 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0xb2>
    8001b48c:	a051                	j	8001b510 <.LBB10_35>
            if self.dinode.addrs[offset_bn] == 0 {
    8001b48e:	6566                	ld	a0,88(sp)
    8001b490:	00251593          	slli	a1,a0,0x2
    8001b494:	7626                	ld	a2,104(sp)
    8001b496:	95b2                	add	a1,a1,a2
    8001b498:	49cc                	lw	a1,20(a1)
    8001b49a:	4681                	li	a3,0
    8001b49c:	00d59b63          	bne	a1,a3,8001b4b2 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x62>
    8001b4a0:	a009                	j	8001b4a2 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x52>
                addr = balloc(self.dev);
    8001b4a2:	7526                	ld	a0,104(sp)
    8001b4a4:	4108                	lw	a0,0(a0)
    8001b4a6:	ffffe097          	auipc	ra,0xffffe
    8001b4aa:	1ac080e7          	jalr	428(ra) # 80019652 <_ZN6kernel2fs6bitmap6balloc17h3999eb2b44e551cbE>
    8001b4ae:	e8aa                	sd	a0,80(sp)
    8001b4b0:	a031                	j	8001b4bc <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x6c>
    8001b4b2:	4535                	li	a0,13
                return Ok(self.dinode.addrs[offset_bn])
    8001b4b4:	65e6                	ld	a1,88(sp)
    8001b4b6:	02a5eb63          	bltu	a1,a0,8001b4ec <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x9c>
    8001b4ba:	aa55                	j	8001b66e <.LBB10_40>
                addr = balloc(self.dev);
    8001b4bc:	6546                	ld	a0,80(sp)
    8001b4be:	daaa                	sw	a0,116(sp)
                self.dinode.addrs[offset_bn] = addr;
    8001b4c0:	02051593          	slli	a1,a0,0x20
    8001b4c4:	9181                	srli	a1,a1,0x20
    8001b4c6:	4631                	li	a2,12
    8001b4c8:	66e6                	ld	a3,88(sp)
    8001b4ca:	e4ae                	sd	a1,72(sp)
    8001b4cc:	1ad66c63          	bltu	a2,a3,8001b684 <.LBB10_41>
    8001b4d0:	a009                	j	8001b4d2 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE+0x82>
    8001b4d2:	6566                	ld	a0,88(sp)
    8001b4d4:	00251593          	slli	a1,a0,0x2
    8001b4d8:	7626                	ld	a2,104(sp)
    8001b4da:	95b2                	add	a1,a1,a2
    8001b4dc:	66a6                	ld	a3,72(sp)
    8001b4de:	c9d4                	sw	a3,20(a1)
                return Ok(addr)
    8001b4e0:	55d6                	lw	a1,116(sp)
    8001b4e2:	7706                	ld	a4,96(sp)
    8001b4e4:	c34c                	sw	a1,4(a4)
    8001b4e6:	4581                	li	a1,0
    8001b4e8:	c30c                	sw	a1,0(a4)
    8001b4ea:	aaa9                	j	8001b644 <.LBB10_38+0x32>
                return Ok(self.dinode.addrs[offset_bn])
    8001b4ec:	6566                	ld	a0,88(sp)
    8001b4ee:	00251593          	slli	a1,a0,0x2
    8001b4f2:	7626                	ld	a2,104(sp)
    8001b4f4:	95b2                	add	a1,a1,a2
    8001b4f6:	49cc                	lw	a1,20(a1)
    8001b4f8:	7686                	ld	a3,96(sp)
    8001b4fa:	c2cc                	sw	a1,4(a3)
    8001b4fc:	4581                	li	a1,0
    8001b4fe:	c28c                	sw	a1,0(a3)
    8001b500:	a291                	j	8001b644 <.LBB10_38+0x32>
            let count = offset_bn - NDIRECT;
    8001b502:	6566                	ld	a0,88(sp)
    8001b504:	ff450593          	addi	a1,a0,-12
    8001b508:	e0ae                	sd	a1,64(sp)
    8001b50a:	18b56863          	bltu	a0,a1,8001b69a <.LBB10_42>
    8001b50e:	a839                	j	8001b52c <.LBB10_36+0x14>

000000008001b510 <.LBB10_35>:
        panic!("inode bmap: out of range.");
    8001b510:	0000d517          	auipc	a0,0xd
    8001b514:	7d850513          	addi	a0,a0,2008 # 80028ce8 <.L__unnamed_55>

000000008001b518 <.LBB10_36>:
    8001b518:	0000d617          	auipc	a2,0xd
    8001b51c:	7f060613          	addi	a2,a2,2032 # 80028d08 <.L__unnamed_56>
    8001b520:	45e5                	li	a1,25
    8001b522:	00005097          	auipc	ra,0x5
    8001b526:	7a8080e7          	jalr	1960(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001b52a:	0000                	unimp
            let count = offset_bn - NDIRECT;
    8001b52c:	6506                	ld	a0,64(sp)
    8001b52e:	f5aa                	sd	a0,232(sp)
            if self.dinode.addrs[NDIRECT] == 0 {
    8001b530:	75a6                	ld	a1,104(sp)
    8001b532:	41f0                	lw	a2,68(a1)
    8001b534:	4681                	li	a3,0
    8001b536:	00d61b63          	bne	a2,a3,8001b54c <.LBB10_36+0x34>
    8001b53a:	a009                	j	8001b53c <.LBB10_36+0x24>
                addr = balloc(self.dev);
    8001b53c:	7526                	ld	a0,104(sp)
    8001b53e:	4108                	lw	a0,0(a0)
    8001b540:	ffffe097          	auipc	ra,0xffffe
    8001b544:	112080e7          	jalr	274(ra) # 80019652 <_ZN6kernel2fs6bitmap6balloc17h3999eb2b44e551cbE>
    8001b548:	fc2a                	sd	a0,56(sp)
    8001b54a:	a029                	j	8001b554 <.LBB10_36+0x3c>
                addr = self.dinode.addrs[NDIRECT]
    8001b54c:	7526                	ld	a0,104(sp)
    8001b54e:	416c                	lw	a1,68(a0)
    8001b550:	daae                	sw	a1,116(sp)
            if self.dinode.addrs[NDIRECT] == 0 {
    8001b552:	a031                	j	8001b55e <.LBB10_36+0x46>
                addr = balloc(self.dev);
    8001b554:	7562                	ld	a0,56(sp)
    8001b556:	daaa                	sw	a0,116(sp)
                self.dinode.addrs[NDIRECT] = addr;
    8001b558:	75a6                	ld	a1,104(sp)
    8001b55a:	c1e8                	sw	a0,68(a1)
            if self.dinode.addrs[NDIRECT] == 0 {
    8001b55c:	a009                	j	8001b55e <.LBB10_36+0x46>
            let buf = BCACHE.bread(self.dev, addr);
    8001b55e:	7526                	ld	a0,104(sp)
    8001b560:	4110                	lw	a2,0(a0)
    8001b562:	4585                	li	a1,1
    8001b564:	0cb107a3          	sb	a1,207(sp)
    8001b568:	56d6                	lw	a3,116(sp)

000000008001b56a <.LBB10_37>:
    8001b56a:	00011597          	auipc	a1,0x11
    8001b56e:	a9658593          	addi	a1,a1,-1386 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8001b572:	18a8                	addi	a0,sp,120
    8001b574:	fffe6097          	auipc	ra,0xfffe6
    8001b578:	28a080e7          	jalr	650(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8001b57c:	a009                	j	8001b57e <.LBB10_37+0x14>
    8001b57e:	18a8                	addi	a0,sp,120
            let buf_data = buf.raw_data() as *mut u32;
    8001b580:	fffe6097          	auipc	ra,0xfffe6
    8001b584:	3da080e7          	jalr	986(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    8001b588:	f82a                	sd	a0,48(sp)
    8001b58a:	a009                	j	8001b58c <.LBB10_37+0x22>
    8001b58c:	7542                	ld	a0,48(sp)
    8001b58e:	75c2                	ld	a1,48(sp)
    8001b590:	f9ae                	sd	a1,240(sp)
            addr = unsafe{ read(buf_data.offset(count as isize)) };
    8001b592:	f42a                	sd	a0,40(sp)
    8001b594:	852e                	mv	a0,a1
    8001b596:	6586                	ld	a1,64(sp)
    8001b598:	ffffe097          	auipc	ra,0xffffe
    8001b59c:	dca080e7          	jalr	-566(ra) # 80019362 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb70c71e0950c12e5E>
    8001b5a0:	f02a                	sd	a0,32(sp)
    8001b5a2:	a009                	j	8001b5a4 <.LBB10_37+0x3a>
    8001b5a4:	7502                	ld	a0,32(sp)
    8001b5a6:	ffff5097          	auipc	ra,0xffff5
    8001b5aa:	54c080e7          	jalr	1356(ra) # 80010af2 <_ZN4core3ptr4read17h9c28f54bc51d0888E>
    8001b5ae:	ec2a                	sd	a0,24(sp)
    8001b5b0:	a009                	j	8001b5b2 <.LBB10_37+0x48>
    8001b5b2:	6562                	ld	a0,24(sp)
    8001b5b4:	daaa                	sw	a0,116(sp)
            if addr == 0 {
    8001b5b6:	02051593          	slli	a1,a0,0x20
    8001b5ba:	9181                	srli	a1,a1,0x20
    8001b5bc:	4601                	li	a2,0
    8001b5be:	00c59b63          	bne	a1,a2,8001b5d4 <.LBB10_37+0x6a>
    8001b5c2:	a009                	j	8001b5c4 <.LBB10_37+0x5a>
                    addr = balloc(self.dev);
    8001b5c4:	7526                	ld	a0,104(sp)
    8001b5c6:	4108                	lw	a0,0(a0)
    8001b5c8:	ffffe097          	auipc	ra,0xffffe
    8001b5cc:	08a080e7          	jalr	138(ra) # 80019652 <_ZN6kernel2fs6bitmap6balloc17h3999eb2b44e551cbE>
    8001b5d0:	e82a                	sd	a0,16(sp)
    8001b5d2:	a011                	j	8001b5d6 <.LBB10_37+0x6c>
            if addr == 0 {
    8001b5d4:	a891                	j	8001b628 <.LBB10_38+0x16>
                    addr = balloc(self.dev);
    8001b5d6:	6542                	ld	a0,16(sp)
    8001b5d8:	daaa                	sw	a0,116(sp)
                    write(buf_data.offset(count as isize), addr);
    8001b5da:	7522                	ld	a0,40(sp)
    8001b5dc:	6586                	ld	a1,64(sp)
    8001b5de:	ffffe097          	auipc	ra,0xffffe
    8001b5e2:	d84080e7          	jalr	-636(ra) # 80019362 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb70c71e0950c12e5E>
    8001b5e6:	e42a                	sd	a0,8(sp)
    8001b5e8:	a009                	j	8001b5ea <.LBB10_37+0x80>
    8001b5ea:	55d6                	lw	a1,116(sp)
    8001b5ec:	6522                	ld	a0,8(sp)
    8001b5ee:	ffff5097          	auipc	ra,0xffff5
    8001b5f2:	6be080e7          	jalr	1726(ra) # 80010cac <_ZN4core3ptr5write17h9ef81f9492ed6dceE>
    8001b5f6:	a009                	j	8001b5f8 <.LBB10_37+0x8e>
    8001b5f8:	4501                	li	a0,0
                LOG.write(buf);
    8001b5fa:	0ca107a3          	sb	a0,207(sp)
    8001b5fe:	7566                	ld	a0,120(sp)
    8001b600:	f12a                	sd	a0,160(sp)
    8001b602:	650a                	ld	a0,128(sp)
    8001b604:	f52a                	sd	a0,168(sp)
    8001b606:	652a                	ld	a0,136(sp)
    8001b608:	f92a                	sd	a0,176(sp)
    8001b60a:	654a                	ld	a0,144(sp)
    8001b60c:	fd2a                	sd	a0,184(sp)
    8001b60e:	656a                	ld	a0,152(sp)
    8001b610:	e1aa                	sd	a0,192(sp)

000000008001b612 <.LBB10_38>:
    8001b612:	0003f517          	auipc	a0,0x3f
    8001b616:	a4e50513          	addi	a0,a0,-1458 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8001b61a:	110c                	addi	a1,sp,160
    8001b61c:	ffffc097          	auipc	ra,0xffffc
    8001b620:	cb8080e7          	jalr	-840(ra) # 800172d4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E>
    8001b624:	a009                	j	8001b626 <.LBB10_38+0x14>
            if addr == 0 {
    8001b626:	a009                	j	8001b628 <.LBB10_38+0x16>
            return Ok(addr)
    8001b628:	5556                	lw	a0,116(sp)
    8001b62a:	7586                	ld	a1,96(sp)
    8001b62c:	c1c8                	sw	a0,4(a1)
    8001b62e:	4501                	li	a0,0
    8001b630:	c188                	sw	a0,0(a1)
        }
    8001b632:	0cf14503          	lbu	a0,207(sp)
    8001b636:	8905                	andi	a0,a0,1
    8001b638:	e911                	bnez	a0,8001b64c <.LBB10_38+0x3a>
    8001b63a:	a009                	j	8001b63c <.LBB10_38+0x2a>
    8001b63c:	4501                	li	a0,0
    8001b63e:	0ca107a3          	sb	a0,207(sp)
    8001b642:	a011                	j	8001b646 <.LBB10_38+0x34>
    8001b644:	a009                	j	8001b646 <.LBB10_38+0x34>
    }
    8001b646:	70ee                	ld	ra,248(sp)
    8001b648:	6111                	addi	sp,sp,256
    8001b64a:	8082                	ret
    8001b64c:	18a8                	addi	a0,sp,120
        }
    8001b64e:	fffeb097          	auipc	ra,0xfffeb
    8001b652:	1e2080e7          	jalr	482(ra) # 80006830 <_ZN4core3ptr41drop_in_place$LT$kernel..fs..bio..Buf$GT$17h1d3a39863b90b2abE>
    8001b656:	b7dd                	j	8001b63c <.LBB10_38+0x2a>

000000008001b658 <.LBB10_39>:
            if self.dinode.addrs[offset_bn] == 0 {
    8001b658:	0000d617          	auipc	a2,0xd
    8001b65c:	63060613          	addi	a2,a2,1584 # 80028c88 <.L__unnamed_57>
    8001b660:	45b5                	li	a1,13
    8001b662:	6566                	ld	a0,88(sp)
    8001b664:	00005097          	auipc	ra,0x5
    8001b668:	692080e7          	jalr	1682(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b66e <.LBB10_40>:
                return Ok(self.dinode.addrs[offset_bn])
    8001b66e:	0000d617          	auipc	a2,0xd
    8001b672:	63260613          	addi	a2,a2,1586 # 80028ca0 <.L__unnamed_58>
    8001b676:	45b5                	li	a1,13
    8001b678:	6566                	ld	a0,88(sp)
    8001b67a:	00005097          	auipc	ra,0x5
    8001b67e:	67c080e7          	jalr	1660(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b684 <.LBB10_41>:
                self.dinode.addrs[offset_bn] = addr;
    8001b684:	0000d617          	auipc	a2,0xd
    8001b688:	63460613          	addi	a2,a2,1588 # 80028cb8 <.L__unnamed_59>
    8001b68c:	45b5                	li	a1,13
    8001b68e:	6566                	ld	a0,88(sp)
    8001b690:	00005097          	auipc	ra,0x5
    8001b694:	666080e7          	jalr	1638(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001b69a <.LBB10_42>:
            let count = offset_bn - NDIRECT;
    8001b69a:	0000d517          	auipc	a0,0xd
    8001b69e:	0e650513          	addi	a0,a0,230 # 80028780 <str.1>

000000008001b6a2 <.LBB10_43>:
    8001b6a2:	0000d617          	auipc	a2,0xd
    8001b6a6:	62e60613          	addi	a2,a2,1582 # 80028cd0 <.L__unnamed_60>
    8001b6aa:	02100593          	li	a1,33
    8001b6ae:	00005097          	auipc	ra,0x5
    8001b6b2:	61c080e7          	jalr	1564(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE:

000000008001b6b8 <_ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE>:
    pub fn read(
    8001b6b8:	dc010113          	addi	sp,sp,-576
    8001b6bc:	22113c23          	sd	ra,568(sp)
    8001b6c0:	87ba                	mv	a5,a4
    8001b6c2:	8836                	mv	a6,a3
    8001b6c4:	88ae                	mv	a7,a1
    8001b6c6:	fd32                	sd	a2,184(sp)
    8001b6c8:	efaa                	sd	a0,472(sp)
    8001b6ca:	1eb103a3          	sb	a1,487(sp)
    8001b6ce:	1ed12423          	sw	a3,488(sp)
    8001b6d2:	1ee12623          	sw	a4,492(sp)
        let end = offset.checked_add(count).ok_or("Fail to add count.")?;
    8001b6d6:	f92a                	sd	a0,176(sp)
    8001b6d8:	8536                	mv	a0,a3
    8001b6da:	85ba                	mv	a1,a4
    8001b6dc:	f53e                	sd	a5,168(sp)
    8001b6de:	f142                	sd	a6,160(sp)
    8001b6e0:	ed46                	sd	a7,152(sp)
    8001b6e2:	ffffb097          	auipc	ra,0xffffb
    8001b6e6:	b90080e7          	jalr	-1136(ra) # 80016272 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E>
    8001b6ea:	e92a                	sd	a0,144(sp)
    8001b6ec:	e52e                	sd	a1,136(sp)
    8001b6ee:	a009                	j	8001b6f0 <.LBB11_46>

000000008001b6f0 <.LBB11_46>:
    8001b6f0:	0000d697          	auipc	a3,0xd
    8001b6f4:	63068693          	addi	a3,a3,1584 # 80028d20 <.L__unnamed_61>
    8001b6f8:	11a8                	addi	a0,sp,232
    8001b6fa:	4749                	li	a4,18
    8001b6fc:	65ca                	ld	a1,144(sp)
    8001b6fe:	662a                	ld	a2,136(sp)
    8001b700:	ffffd097          	auipc	ra,0xffffd
    8001b704:	07e080e7          	jalr	126(ra) # 8001877e <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E>
    8001b708:	a009                	j	8001b70a <.LBB11_46+0x1a>
    8001b70a:	0988                	addi	a0,sp,208
    8001b70c:	11ac                	addi	a1,sp,232
    8001b70e:	ffff1097          	auipc	ra,0xffff1
    8001b712:	7e4080e7          	jalr	2020(ra) # 8000cef2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h6b76bcf48ebcbb89E>
    8001b716:	a009                	j	8001b718 <.LBB11_46+0x28>
    8001b718:	0d016503          	lwu	a0,208(sp)
    8001b71c:	4581                	li	a1,0
    8001b71e:	00b50463          	beq	a0,a1,8001b726 <.LBB11_46+0x36>
    8001b722:	a009                	j	8001b724 <.LBB11_46+0x34>
    8001b724:	a821                	j	8001b73c <.LBB11_46+0x4c>
    8001b726:	455e                	lw	a0,212(sp)
    8001b728:	20a12023          	sw	a0,512(sp)
    8001b72c:	20a12223          	sw	a0,516(sp)
        if end > self.dinode.size {
    8001b730:	75ca                	ld	a1,176(sp)
    8001b732:	4990                	lw	a2,16(a1)
    8001b734:	02a66963          	bltu	a2,a0,8001b766 <.LBB11_47>
    8001b738:	a081                	j	8001b778 <.LBB11_47+0x12>
        let end = offset.checked_add(count).ok_or("Fail to add count.")?;
    8001b73a:	0000                	unimp
    8001b73c:	656e                	ld	a0,216(sp)
    8001b73e:	758e                	ld	a1,224(sp)
    8001b740:	fbaa                	sd	a0,496(sp)
    8001b742:	ffae                	sd	a1,504(sp)
    8001b744:	ffffe097          	auipc	ra,0xffffe
    8001b748:	aa0080e7          	jalr	-1376(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001b74c:	e12a                	sd	a0,128(sp)
    8001b74e:	fcae                	sd	a1,120(sp)
    8001b750:	a009                	j	8001b752 <.LBB11_46+0x62>
    8001b752:	650a                	ld	a0,128(sp)
    8001b754:	75e6                	ld	a1,120(sp)
    8001b756:	ffff1097          	auipc	ra,0xffff1
    8001b75a:	746080e7          	jalr	1862(ra) # 8000ce9c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E>
    8001b75e:	e1aa                	sd	a0,192(sp)
    8001b760:	e5ae                	sd	a1,200(sp)
    8001b762:	a009                	j	8001b764 <.LBB11_46+0x74>
    8001b764:	a419                	j	8001b96a <.LBB11_49+0x60>

000000008001b766 <.LBB11_47>:
            return Err("inode read: end is more than diskinode's size.")
    8001b766:	0000d517          	auipc	a0,0xd
    8001b76a:	5cc50513          	addi	a0,a0,1484 # 80028d32 <.L__unnamed_62>
    8001b76e:	e1aa                	sd	a0,192(sp)
    8001b770:	02e00513          	li	a0,46
    8001b774:	e5aa                	sd	a0,200(sp)
    8001b776:	aad5                	j	8001b96a <.LBB11_49+0x60>
    8001b778:	4501                	li	a0,0
        let mut total: usize = 0;
    8001b77a:	e22a                	sd	a0,256(sp)
        let mut offset = offset as usize;
    8001b77c:	750a                	ld	a0,160(sp)
    8001b77e:	02051593          	slli	a1,a0,0x20
    8001b782:	9181                	srli	a1,a1,0x20
    8001b784:	e62e                	sd	a1,264(sp)
        let count = count as usize;
    8001b786:	75aa                	ld	a1,168(sp)
    8001b788:	02059613          	slli	a2,a1,0x20
    8001b78c:	9201                	srli	a2,a2,0x20
    8001b78e:	20c13423          	sd	a2,520(sp)
        let mut block_basic = offset / BSIZE;
    8001b792:	00a5569b          	srliw	a3,a0,0xa
    8001b796:	ea36                	sd	a3,272(sp)
        let mut block_offset = offset % BSIZE;
    8001b798:	3ff57693          	andi	a3,a0,1023
    8001b79c:	ee36                	sd	a3,280(sp)
        while total < count as usize {
    8001b79e:	f8b2                	sd	a2,112(sp)
    8001b7a0:	a009                	j	8001b7a2 <.LBB11_47+0x3c>
    8001b7a2:	6512                	ld	a0,256(sp)
    8001b7a4:	75c6                	ld	a1,112(sp)
    8001b7a6:	00b56663          	bltu	a0,a1,8001b7b2 <.LBB11_47+0x4c>
    8001b7aa:	a009                	j	8001b7ac <.LBB11_47+0x46>
    8001b7ac:	4501                	li	a0,0
        Ok(())
    8001b7ae:	e1aa                	sd	a0,192(sp)
    }
    8001b7b0:	aa75                	j	8001b96c <.LBB11_49+0x62>
            let surplus_len = count - total;
    8001b7b2:	6512                	ld	a0,256(sp)
    8001b7b4:	75c6                	ld	a1,112(sp)
    8001b7b6:	40a58533          	sub	a0,a1,a0
    8001b7ba:	f4aa                	sd	a0,104(sp)
    8001b7bc:	1aa5ef63          	bltu	a1,a0,8001b97a <.LBB11_50>
    8001b7c0:	a009                	j	8001b7c2 <.LBB11_47+0x5c>
    8001b7c2:	7526                	ld	a0,104(sp)
    8001b7c4:	20a13823          	sd	a0,528(sp)
            let block_no = self.bmap(block_basic as u32)?;
    8001b7c8:	6652                	ld	a2,272(sp)
    8001b7ca:	1a28                	addi	a0,sp,312
    8001b7cc:	75ca                	ld	a1,176(sp)
    8001b7ce:	00000097          	auipc	ra,0x0
    8001b7d2:	c82080e7          	jalr	-894(ra) # 8001b450 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE>
    8001b7d6:	a009                	j	8001b7d8 <.LBB11_47+0x72>
    8001b7d8:	1208                	addi	a0,sp,288
    8001b7da:	1a2c                	addi	a1,sp,312
    8001b7dc:	ffff1097          	auipc	ra,0xffff1
    8001b7e0:	716080e7          	jalr	1814(ra) # 8000cef2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h6b76bcf48ebcbb89E>
    8001b7e4:	a009                	j	8001b7e6 <.LBB11_47+0x80>
    8001b7e6:	12016503          	lwu	a0,288(sp)
    8001b7ea:	4581                	li	a1,0
    8001b7ec:	00b50463          	beq	a0,a1,8001b7f4 <.LBB11_47+0x8e>
    8001b7f0:	a009                	j	8001b7f2 <.LBB11_47+0x8c>
    8001b7f2:	a03d                	j	8001b820 <.LBB11_48+0x1c>
    8001b7f4:	12412503          	lw	a0,292(sp)
    8001b7f8:	22a12423          	sw	a0,552(sp)
    8001b7fc:	22a12623          	sw	a0,556(sp)
            let buf = BCACHE.bread(self.dev, block_no);
    8001b800:	75ca                	ld	a1,176(sp)
    8001b802:	4190                	lw	a2,0(a1)

000000008001b804 <.LBB11_48>:
    8001b804:	00010597          	auipc	a1,0x10
    8001b808:	7fc58593          	addi	a1,a1,2044 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8001b80c:	0a94                	addi	a3,sp,336
    8001b80e:	f0aa                	sd	a0,96(sp)
    8001b810:	8536                	mv	a0,a3
    8001b812:	7686                	ld	a3,96(sp)
    8001b814:	fffe6097          	auipc	ra,0xfffe6
    8001b818:	fea080e7          	jalr	-22(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8001b81c:	a80d                	j	8001b84e <.LBB11_48+0x4a>
            let block_no = self.bmap(block_basic as u32)?;
    8001b81e:	0000                	unimp
    8001b820:	7532                	ld	a0,296(sp)
    8001b822:	75d2                	ld	a1,304(sp)
    8001b824:	20a13c23          	sd	a0,536(sp)
    8001b828:	22b13023          	sd	a1,544(sp)
    8001b82c:	ffffe097          	auipc	ra,0xffffe
    8001b830:	9b8080e7          	jalr	-1608(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001b834:	ecaa                	sd	a0,88(sp)
    8001b836:	e8ae                	sd	a1,80(sp)
    8001b838:	a009                	j	8001b83a <.LBB11_48+0x36>
    8001b83a:	6566                	ld	a0,88(sp)
    8001b83c:	65c6                	ld	a1,80(sp)
    8001b83e:	ffff1097          	auipc	ra,0xffff1
    8001b842:	65e080e7          	jalr	1630(ra) # 8000ce9c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E>
    8001b846:	e1aa                	sd	a0,192(sp)
    8001b848:	e5ae                	sd	a1,200(sp)
    8001b84a:	a009                	j	8001b84c <.LBB11_48+0x48>
    8001b84c:	aa31                	j	8001b968 <.LBB11_49+0x5e>
            let write_len = min(surplus_len, BSIZE - block_offset);
    8001b84e:	6572                	ld	a0,280(sp)
    8001b850:	40000593          	li	a1,1024
    8001b854:	40a58533          	sub	a0,a1,a0
    8001b858:	e4aa                	sd	a0,72(sp)
    8001b85a:	12a5ef63          	bltu	a1,a0,8001b998 <.LBB11_52>
    8001b85e:	a009                	j	8001b860 <.LBB11_48+0x5c>
    8001b860:	7526                	ld	a0,104(sp)
    8001b862:	65a6                	ld	a1,72(sp)
    8001b864:	fffec097          	auipc	ra,0xfffec
    8001b868:	126080e7          	jalr	294(ra) # 8000798a <_ZN6kernel4misc3min17h54b90595eef0e281E>
    8001b86c:	85aa                	mv	a1,a0
    8001b86e:	22a13823          	sd	a0,560(sp)
    8001b872:	e0ae                	sd	a1,64(sp)
    8001b874:	a009                	j	8001b876 <.LBB11_48+0x72>
                dst, 
    8001b876:	75ea                	ld	a1,184(sp)
    8001b878:	0a88                	addi	a0,sp,336
                unsafe{ (buf.raw_data() as *mut u8).offset((offset % BSIZE) as isize) },
    8001b87a:	fc2e                	sd	a1,56(sp)
    8001b87c:	fffe6097          	auipc	ra,0xfffe6
    8001b880:	0de080e7          	jalr	222(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    8001b884:	f82a                	sd	a0,48(sp)
    8001b886:	a009                	j	8001b888 <.LBB11_48+0x84>
    8001b888:	6532                	ld	a0,264(sp)
    8001b88a:	3ff57593          	andi	a1,a0,1023
    8001b88e:	7542                	ld	a0,48(sp)
    8001b890:	00005097          	auipc	ra,0x5
    8001b894:	ec8080e7          	jalr	-312(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    8001b898:	f42a                	sd	a0,40(sp)
    8001b89a:	a009                	j	8001b89c <.LBB11_48+0x98>
            if copy_from_kernel(
    8001b89c:	656a                	ld	a0,152(sp)
    8001b89e:	75e2                	ld	a1,56(sp)
    8001b8a0:	7622                	ld	a2,40(sp)
    8001b8a2:	6686                	ld	a3,64(sp)
    8001b8a4:	ffff3097          	auipc	ra,0xffff3
    8001b8a8:	2e2080e7          	jalr	738(ra) # 8000eb86 <_ZN6kernel6memory16copy_from_kernel17hacd3d459320e9105E>
    8001b8ac:	feaa                	sd	a0,376(sp)
    8001b8ae:	e32e                	sd	a1,384(sp)
    8001b8b0:	a009                	j	8001b8b2 <.LBB11_48+0xae>
    8001b8b2:	1aa8                	addi	a0,sp,376
    8001b8b4:	ffff1097          	auipc	ra,0xffff1
    8001b8b8:	3ca080e7          	jalr	970(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8001b8bc:	f02a                	sd	a0,32(sp)
    8001b8be:	a009                	j	8001b8c0 <.LBB11_48+0xbc>
    8001b8c0:	4501                	li	a0,0
    8001b8c2:	7582                	ld	a1,32(sp)
    8001b8c4:	02a58363          	beq	a1,a0,8001b8ea <.LBB11_48+0xe6>
    8001b8c8:	a009                	j	8001b8ca <.LBB11_48+0xc6>
                drop(buf);
    8001b8ca:	7556                	ld	a0,368(sp)
    8001b8cc:	f72a                	sd	a0,424(sp)
    8001b8ce:	7536                	ld	a0,360(sp)
    8001b8d0:	f32a                	sd	a0,416(sp)
    8001b8d2:	7516                	ld	a0,352(sp)
    8001b8d4:	ef2a                	sd	a0,408(sp)
    8001b8d6:	6576                	ld	a0,344(sp)
    8001b8d8:	eb2a                	sd	a0,400(sp)
    8001b8da:	6556                	ld	a0,336(sp)
    8001b8dc:	e72a                	sd	a0,392(sp)
    8001b8de:	0328                	addi	a0,sp,392
    8001b8e0:	ffff2097          	auipc	ra,0xffff2
    8001b8e4:	0b2080e7          	jalr	178(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001b8e8:	a00d                	j	8001b90a <.LBB11_49>
            drop(buf);
    8001b8ea:	7556                	ld	a0,368(sp)
    8001b8ec:	ebaa                	sd	a0,464(sp)
    8001b8ee:	7536                	ld	a0,360(sp)
    8001b8f0:	e7aa                	sd	a0,456(sp)
    8001b8f2:	7516                	ld	a0,352(sp)
    8001b8f4:	e3aa                	sd	a0,448(sp)
    8001b8f6:	6576                	ld	a0,344(sp)
    8001b8f8:	ff2a                	sd	a0,440(sp)
    8001b8fa:	6556                	ld	a0,336(sp)
    8001b8fc:	fb2a                	sd	a0,432(sp)
    8001b8fe:	1b08                	addi	a0,sp,432
    8001b900:	ffff2097          	auipc	ra,0xffff2
    8001b904:	092080e7          	jalr	146(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001b908:	a811                	j	8001b91c <.LBB11_49+0x12>

000000008001b90a <.LBB11_49>:
                return Err("inode read: Fail to either copy out.")
    8001b90a:	0000d517          	auipc	a0,0xd
    8001b90e:	48650513          	addi	a0,a0,1158 # 80028d90 <.L__unnamed_63>
    8001b912:	e1aa                	sd	a0,192(sp)
    8001b914:	02400513          	li	a0,36
    8001b918:	e5aa                	sd	a0,200(sp)
    8001b91a:	a0b9                	j	8001b968 <.LBB11_49+0x5e>
            total += write_len as usize;
    8001b91c:	6512                	ld	a0,256(sp)
    8001b91e:	6586                	ld	a1,64(sp)
    8001b920:	00b50633          	add	a2,a0,a1
    8001b924:	ec32                	sd	a2,24(sp)
    8001b926:	08a66863          	bltu	a2,a0,8001b9b6 <.LBB11_54>
    8001b92a:	a009                	j	8001b92c <.LBB11_49+0x22>
    8001b92c:	6562                	ld	a0,24(sp)
    8001b92e:	e22a                	sd	a0,256(sp)
            offset += write_len as usize;
    8001b930:	65b2                	ld	a1,264(sp)
    8001b932:	6606                	ld	a2,64(sp)
    8001b934:	00c586b3          	add	a3,a1,a2
    8001b938:	e836                	sd	a3,16(sp)
    8001b93a:	08b6ec63          	bltu	a3,a1,8001b9d2 <.LBB11_56>
    8001b93e:	a009                	j	8001b940 <.LBB11_49+0x36>
    8001b940:	6542                	ld	a0,16(sp)
    8001b942:	e62a                	sd	a0,264(sp)
            dst += write_len as usize;
    8001b944:	75ea                	ld	a1,184(sp)
    8001b946:	6606                	ld	a2,64(sp)
    8001b948:	00c586b3          	add	a3,a1,a2
    8001b94c:	e436                	sd	a3,8(sp)
    8001b94e:	0ab6e063          	bltu	a3,a1,8001b9ee <.LBB11_58>
    8001b952:	a009                	j	8001b954 <.LBB11_49+0x4a>
    8001b954:	6522                	ld	a0,8(sp)
    8001b956:	fd2a                	sd	a0,184(sp)
            block_basic = offset / BSIZE;
    8001b958:	65b2                	ld	a1,264(sp)
    8001b95a:	00a5d613          	srli	a2,a1,0xa
    8001b95e:	ea32                	sd	a2,272(sp)
            block_offset = offset % BSIZE;
    8001b960:	3ff5f593          	andi	a1,a1,1023
    8001b964:	ee2e                	sd	a1,280(sp)
        while total < count as usize {
    8001b966:	bd35                	j	8001b7a2 <.LBB11_47+0x3c>
    8001b968:	a009                	j	8001b96a <.LBB11_49+0x60>
    }
    8001b96a:	a009                	j	8001b96c <.LBB11_49+0x62>
    8001b96c:	650e                	ld	a0,192(sp)
    8001b96e:	65ae                	ld	a1,200(sp)
    8001b970:	23813083          	ld	ra,568(sp)
    8001b974:	24010113          	addi	sp,sp,576
    8001b978:	8082                	ret

000000008001b97a <.LBB11_50>:
            let surplus_len = count - total;
    8001b97a:	0000d517          	auipc	a0,0xd
    8001b97e:	e0650513          	addi	a0,a0,-506 # 80028780 <str.1>

000000008001b982 <.LBB11_51>:
    8001b982:	0000d617          	auipc	a2,0xd
    8001b986:	3de60613          	addi	a2,a2,990 # 80028d60 <.L__unnamed_64>
    8001b98a:	02100593          	li	a1,33
    8001b98e:	00005097          	auipc	ra,0x5
    8001b992:	33c080e7          	jalr	828(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001b998 <.LBB11_52>:
            let write_len = min(surplus_len, BSIZE - block_offset);
    8001b998:	0000d517          	auipc	a0,0xd
    8001b99c:	de850513          	addi	a0,a0,-536 # 80028780 <str.1>

000000008001b9a0 <.LBB11_53>:
    8001b9a0:	0000d617          	auipc	a2,0xd
    8001b9a4:	3d860613          	addi	a2,a2,984 # 80028d78 <.L__unnamed_65>
    8001b9a8:	02100593          	li	a1,33
    8001b9ac:	00005097          	auipc	ra,0x5
    8001b9b0:	31e080e7          	jalr	798(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001b9b6 <.LBB11_54>:
            total += write_len as usize;
    8001b9b6:	0000d517          	auipc	a0,0xd
    8001b9ba:	d7a50513          	addi	a0,a0,-646 # 80028730 <str.0>

000000008001b9be <.LBB11_55>:
    8001b9be:	0000d617          	auipc	a2,0xd
    8001b9c2:	3fa60613          	addi	a2,a2,1018 # 80028db8 <.L__unnamed_66>
    8001b9c6:	45f1                	li	a1,28
    8001b9c8:	00005097          	auipc	ra,0x5
    8001b9cc:	302080e7          	jalr	770(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001b9d2 <.LBB11_56>:
            offset += write_len as usize;
    8001b9d2:	0000d517          	auipc	a0,0xd
    8001b9d6:	d5e50513          	addi	a0,a0,-674 # 80028730 <str.0>

000000008001b9da <.LBB11_57>:
    8001b9da:	0000d617          	auipc	a2,0xd
    8001b9de:	3f660613          	addi	a2,a2,1014 # 80028dd0 <.L__unnamed_67>
    8001b9e2:	45f1                	li	a1,28
    8001b9e4:	00005097          	auipc	ra,0x5
    8001b9e8:	2e6080e7          	jalr	742(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001b9ee <.LBB11_58>:
            dst += write_len as usize;
    8001b9ee:	0000d517          	auipc	a0,0xd
    8001b9f2:	d4250513          	addi	a0,a0,-702 # 80028730 <str.0>

000000008001b9f6 <.LBB11_59>:
    8001b9f6:	0000d617          	auipc	a2,0xd
    8001b9fa:	3f260613          	addi	a2,a2,1010 # 80028de8 <.L__unnamed_68>
    8001b9fe:	45f1                	li	a1,28
    8001ba00:	00005097          	auipc	ra,0x5
    8001ba04:	2ca080e7          	jalr	714(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs5inode9InodeData5write17h032930266959c2cbE:

000000008001ba0a <_ZN6kernel2fs5inode9InodeData5write17h032930266959c2cbE>:
    pub fn write(
    8001ba0a:	dd010113          	addi	sp,sp,-560
    8001ba0e:	22113423          	sd	ra,552(sp)
    8001ba12:	87ba                	mv	a5,a4
    8001ba14:	8836                	mv	a6,a3
    8001ba16:	88ae                	mv	a7,a1
    8001ba18:	f532                	sd	a2,168(sp)
    8001ba1a:	e7aa                	sd	a0,456(sp)
    8001ba1c:	1cb10ba3          	sb	a1,471(sp)
    8001ba20:	1cd12c23          	sw	a3,472(sp)
    8001ba24:	1ce12e23          	sw	a4,476(sp)
        let end = offset.checked_add(count).ok_or("Fail to add count.")?;
    8001ba28:	f12a                	sd	a0,160(sp)
    8001ba2a:	8536                	mv	a0,a3
    8001ba2c:	85ba                	mv	a1,a4
    8001ba2e:	ed3e                	sd	a5,152(sp)
    8001ba30:	e942                	sd	a6,144(sp)
    8001ba32:	e546                	sd	a7,136(sp)
    8001ba34:	ffffb097          	auipc	ra,0xffffb
    8001ba38:	83e080e7          	jalr	-1986(ra) # 80016272 <_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h0f032ae7a15ab2c5E>
    8001ba3c:	e12a                	sd	a0,128(sp)
    8001ba3e:	fcae                	sd	a1,120(sp)
    8001ba40:	a009                	j	8001ba42 <.LBB12_47>

000000008001ba42 <.LBB12_47>:
    8001ba42:	0000d697          	auipc	a3,0xd
    8001ba46:	2de68693          	addi	a3,a3,734 # 80028d20 <.L__unnamed_61>
    8001ba4a:	09a8                	addi	a0,sp,216
    8001ba4c:	4749                	li	a4,18
    8001ba4e:	658a                	ld	a1,128(sp)
    8001ba50:	7666                	ld	a2,120(sp)
    8001ba52:	ffffd097          	auipc	ra,0xffffd
    8001ba56:	d2c080e7          	jalr	-724(ra) # 8001877e <_ZN4core6option15Option$LT$T$GT$5ok_or17he16a4df336938752E>
    8001ba5a:	a009                	j	8001ba5c <.LBB12_47+0x1a>
    8001ba5c:	0188                	addi	a0,sp,192
    8001ba5e:	09ac                	addi	a1,sp,216
    8001ba60:	ffff1097          	auipc	ra,0xffff1
    8001ba64:	492080e7          	jalr	1170(ra) # 8000cef2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h6b76bcf48ebcbb89E>
    8001ba68:	a009                	j	8001ba6a <.LBB12_47+0x28>
    8001ba6a:	0c016503          	lwu	a0,192(sp)
    8001ba6e:	4581                	li	a1,0
    8001ba70:	00b50463          	beq	a0,a1,8001ba78 <.LBB12_47+0x36>
    8001ba74:	a009                	j	8001ba76 <.LBB12_47+0x34>
    8001ba76:	a821                	j	8001ba8e <.LBB12_47+0x4c>
    8001ba78:	451e                	lw	a0,196(sp)
    8001ba7a:	1ea12823          	sw	a0,496(sp)
    8001ba7e:	1ea12a23          	sw	a0,500(sp)
        if end > self.dinode.size {
    8001ba82:	758a                	ld	a1,160(sp)
    8001ba84:	4990                	lw	a2,16(a1)
    8001ba86:	02a66963          	bltu	a2,a0,8001bab8 <.LBB12_48>
    8001ba8a:	a081                	j	8001baca <.LBB12_48+0x12>
        let end = offset.checked_add(count).ok_or("Fail to add count.")?;
    8001ba8c:	0000                	unimp
    8001ba8e:	652e                	ld	a0,200(sp)
    8001ba90:	65ce                	ld	a1,208(sp)
    8001ba92:	f3aa                	sd	a0,480(sp)
    8001ba94:	f7ae                	sd	a1,488(sp)
    8001ba96:	ffffd097          	auipc	ra,0xffffd
    8001ba9a:	74e080e7          	jalr	1870(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001ba9e:	f8aa                	sd	a0,112(sp)
    8001baa0:	f4ae                	sd	a1,104(sp)
    8001baa2:	a009                	j	8001baa4 <.LBB12_47+0x62>
    8001baa4:	7546                	ld	a0,112(sp)
    8001baa6:	75a6                	ld	a1,104(sp)
    8001baa8:	ffff1097          	auipc	ra,0xffff1
    8001baac:	3f4080e7          	jalr	1012(ra) # 8000ce9c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E>
    8001bab0:	f92a                	sd	a0,176(sp)
    8001bab2:	fd2e                	sd	a1,184(sp)
    8001bab4:	a009                	j	8001bab6 <.LBB12_47+0x74>
    8001bab6:	ac01                	j	8001bcc6 <.LBB12_51+0x28>

000000008001bab8 <.LBB12_48>:
            return Err("inode read: end is more than diskinode's size.")
    8001bab8:	0000d517          	auipc	a0,0xd
    8001babc:	27a50513          	addi	a0,a0,634 # 80028d32 <.L__unnamed_62>
    8001bac0:	f92a                	sd	a0,176(sp)
    8001bac2:	02e00513          	li	a0,46
    8001bac6:	fd2a                	sd	a0,184(sp)
    8001bac8:	aafd                	j	8001bcc6 <.LBB12_51+0x28>
        let mut offset = offset as usize;
    8001baca:	654a                	ld	a0,144(sp)
    8001bacc:	02051593          	slli	a1,a0,0x20
    8001bad0:	9181                	srli	a1,a1,0x20
    8001bad2:	f9ae                	sd	a1,240(sp)
        let count = count as usize;
    8001bad4:	65ea                	ld	a1,152(sp)
    8001bad6:	02059613          	slli	a2,a1,0x20
    8001bada:	9201                	srli	a2,a2,0x20
    8001badc:	ffb2                	sd	a2,504(sp)
    8001bade:	4681                	li	a3,0
        let mut total = 0;
    8001bae0:	fdb6                	sd	a3,248(sp)
        let mut block_basic = offset / BSIZE;
    8001bae2:	00a5569b          	srliw	a3,a0,0xa
    8001bae6:	e236                	sd	a3,256(sp)
        let mut block_offset = offset % BSIZE;
    8001bae8:	3ff57693          	andi	a3,a0,1023
    8001baec:	e636                	sd	a3,264(sp)
        while total < count {
    8001baee:	f0b2                	sd	a2,96(sp)
    8001baf0:	a009                	j	8001baf2 <.LBB12_48+0x3a>
    8001baf2:	756e                	ld	a0,248(sp)
    8001baf4:	7586                	ld	a1,96(sp)
    8001baf6:	00b56963          	bltu	a0,a1,8001bb08 <.LBB12_48+0x50>
    8001bafa:	a009                	j	8001bafc <.LBB12_48+0x44>
        if self.dinode.size < offset as u32 {
    8001bafc:	750a                	ld	a0,160(sp)
    8001bafe:	490c                	lw	a1,16(a0)
    8001bb00:	564e                	lw	a2,240(sp)
    8001bb02:	1ac5e963          	bltu	a1,a2,8001bcb4 <.LBB12_51+0x16>
    8001bb06:	aa5d                	j	8001bcbc <.LBB12_51+0x1e>
            let surplus_len = count - total;
    8001bb08:	756e                	ld	a0,248(sp)
    8001bb0a:	7586                	ld	a1,96(sp)
    8001bb0c:	40a58533          	sub	a0,a1,a0
    8001bb10:	ecaa                	sd	a0,88(sp)
    8001bb12:	1ca5e263          	bltu	a1,a0,8001bcd6 <.LBB12_52>
    8001bb16:	a009                	j	8001bb18 <.LBB12_48+0x60>
    8001bb18:	6566                	ld	a0,88(sp)
    8001bb1a:	20a13023          	sd	a0,512(sp)
            let block_no = self.bmap(block_basic as u32)?;
    8001bb1e:	6612                	ld	a2,256(sp)
    8001bb20:	1228                	addi	a0,sp,296
    8001bb22:	758a                	ld	a1,160(sp)
    8001bb24:	00000097          	auipc	ra,0x0
    8001bb28:	92c080e7          	jalr	-1748(ra) # 8001b450 <_ZN6kernel2fs5inode9InodeData4bmap17hfb604c8a19fe794fE>
    8001bb2c:	a009                	j	8001bb2e <.LBB12_48+0x76>
    8001bb2e:	0a08                	addi	a0,sp,272
    8001bb30:	122c                	addi	a1,sp,296
    8001bb32:	ffff1097          	auipc	ra,0xffff1
    8001bb36:	3c0080e7          	jalr	960(ra) # 8000cef2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h6b76bcf48ebcbb89E>
    8001bb3a:	a009                	j	8001bb3c <.LBB12_48+0x84>
    8001bb3c:	11016503          	lwu	a0,272(sp)
    8001bb40:	4581                	li	a1,0
    8001bb42:	00b50463          	beq	a0,a1,8001bb4a <.LBB12_48+0x92>
    8001bb46:	a009                	j	8001bb48 <.LBB12_48+0x90>
    8001bb48:	a03d                	j	8001bb76 <.LBB12_49+0x1c>
    8001bb4a:	11412503          	lw	a0,276(sp)
    8001bb4e:	20a12c23          	sw	a0,536(sp)
    8001bb52:	20a12e23          	sw	a0,540(sp)
            let mut buf = BCACHE.bread(self.dev, block_no);
    8001bb56:	758a                	ld	a1,160(sp)
    8001bb58:	4190                	lw	a2,0(a1)

000000008001bb5a <.LBB12_49>:
    8001bb5a:	00010597          	auipc	a1,0x10
    8001bb5e:	4a658593          	addi	a1,a1,1190 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8001bb62:	0294                	addi	a3,sp,320
    8001bb64:	e8aa                	sd	a0,80(sp)
    8001bb66:	8536                	mv	a0,a3
    8001bb68:	66c6                	ld	a3,80(sp)
    8001bb6a:	fffe6097          	auipc	ra,0xfffe6
    8001bb6e:	c94080e7          	jalr	-876(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8001bb72:	a80d                	j	8001bba4 <.LBB12_49+0x4a>
            let block_no = self.bmap(block_basic as u32)?;
    8001bb74:	0000                	unimp
    8001bb76:	6572                	ld	a0,280(sp)
    8001bb78:	7592                	ld	a1,288(sp)
    8001bb7a:	20a13423          	sd	a0,520(sp)
    8001bb7e:	20b13823          	sd	a1,528(sp)
    8001bb82:	ffffd097          	auipc	ra,0xffffd
    8001bb86:	662080e7          	jalr	1634(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001bb8a:	e4aa                	sd	a0,72(sp)
    8001bb8c:	e0ae                	sd	a1,64(sp)
    8001bb8e:	a009                	j	8001bb90 <.LBB12_49+0x36>
    8001bb90:	6526                	ld	a0,72(sp)
    8001bb92:	6586                	ld	a1,64(sp)
    8001bb94:	ffff1097          	auipc	ra,0xffff1
    8001bb98:	308080e7          	jalr	776(ra) # 8000ce9c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E>
    8001bb9c:	f92a                	sd	a0,176(sp)
    8001bb9e:	fd2e                	sd	a1,184(sp)
    8001bba0:	a009                	j	8001bba2 <.LBB12_49+0x48>
    8001bba2:	a20d                	j	8001bcc4 <.LBB12_51+0x26>
            let write_len = min(surplus_len, block_offset % BSIZE);
    8001bba4:	6532                	ld	a0,264(sp)
    8001bba6:	3ff57593          	andi	a1,a0,1023
    8001bbaa:	6566                	ld	a0,88(sp)
    8001bbac:	fffec097          	auipc	ra,0xfffec
    8001bbb0:	dde080e7          	jalr	-546(ra) # 8000798a <_ZN6kernel4misc3min17h54b90595eef0e281E>
    8001bbb4:	85aa                	mv	a1,a0
    8001bbb6:	22a13023          	sd	a0,544(sp)
    8001bbba:	fc2e                	sd	a1,56(sp)
    8001bbbc:	a009                	j	8001bbbe <.LBB12_49+0x64>
    8001bbbe:	0288                	addi	a0,sp,320
                unsafe{ (buf.raw_data_mut() as *mut u8).offset((offset % BSIZE) as isize ) }, 
    8001bbc0:	fffe6097          	auipc	ra,0xfffe6
    8001bbc4:	dde080e7          	jalr	-546(ra) # 8000199e <_ZN6kernel2fs3bio3Buf12raw_data_mut17h64f90e2f5e52aeddE>
    8001bbc8:	f82a                	sd	a0,48(sp)
    8001bbca:	a009                	j	8001bbcc <.LBB12_49+0x72>
    8001bbcc:	754e                	ld	a0,240(sp)
    8001bbce:	3ff57593          	andi	a1,a0,1023
    8001bbd2:	7542                	ld	a0,48(sp)
    8001bbd4:	00005097          	auipc	ra,0x5
    8001bbd8:	b84080e7          	jalr	-1148(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    8001bbdc:	f42a                	sd	a0,40(sp)
    8001bbde:	a009                	j	8001bbe0 <.LBB12_49+0x86>
                src, 
    8001bbe0:	762a                	ld	a2,168(sp)
            if copy_to_kernel(
    8001bbe2:	7522                	ld	a0,40(sp)
    8001bbe4:	65aa                	ld	a1,136(sp)
    8001bbe6:	76e2                	ld	a3,56(sp)
    8001bbe8:	ffff3097          	auipc	ra,0xffff3
    8001bbec:	ed4080e7          	jalr	-300(ra) # 8000eabc <_ZN6kernel6memory14copy_to_kernel17hdbaa2aea54d3530eE>
    8001bbf0:	f6aa                	sd	a0,360(sp)
    8001bbf2:	faae                	sd	a1,368(sp)
    8001bbf4:	a009                	j	8001bbf6 <.LBB12_49+0x9c>
    8001bbf6:	12a8                	addi	a0,sp,360
    8001bbf8:	ffff1097          	auipc	ra,0xffff1
    8001bbfc:	086080e7          	jalr	134(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8001bc00:	f02a                	sd	a0,32(sp)
    8001bc02:	a009                	j	8001bc04 <.LBB12_49+0xaa>
    8001bc04:	4501                	li	a0,0
    8001bc06:	7582                	ld	a1,32(sp)
    8001bc08:	02a58363          	beq	a1,a0,8001bc2e <.LBB12_49+0xd4>
    8001bc0c:	a009                	j	8001bc0e <.LBB12_49+0xb4>
                drop(buf);
    8001bc0e:	7516                	ld	a0,352(sp)
    8001bc10:	ef2a                	sd	a0,408(sp)
    8001bc12:	6576                	ld	a0,344(sp)
    8001bc14:	eb2a                	sd	a0,400(sp)
    8001bc16:	6556                	ld	a0,336(sp)
    8001bc18:	e72a                	sd	a0,392(sp)
    8001bc1a:	6536                	ld	a0,328(sp)
    8001bc1c:	e32a                	sd	a0,384(sp)
    8001bc1e:	6516                	ld	a0,320(sp)
    8001bc20:	feaa                	sd	a0,376(sp)
    8001bc22:	1aa8                	addi	a0,sp,376
    8001bc24:	ffff2097          	auipc	ra,0xffff2
    8001bc28:	d6e080e7          	jalr	-658(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001bc2c:	a809                	j	8001bc3e <.LBB12_50>
            offset += write_len;
    8001bc2e:	754e                	ld	a0,240(sp)
    8001bc30:	75e2                	ld	a1,56(sp)
    8001bc32:	00b50633          	add	a2,a0,a1
    8001bc36:	ec32                	sd	a2,24(sp)
    8001bc38:	0aa66e63          	bltu	a2,a0,8001bcf4 <.LBB12_54>
    8001bc3c:	a811                	j	8001bc50 <.LBB12_50+0x12>

000000008001bc3e <.LBB12_50>:
                return Err("inode write: Fail to either copy in")
    8001bc3e:	0000d517          	auipc	a0,0xd
    8001bc42:	1da50513          	addi	a0,a0,474 # 80028e18 <.L__unnamed_69>
    8001bc46:	f92a                	sd	a0,176(sp)
    8001bc48:	02300513          	li	a0,35
    8001bc4c:	fd2a                	sd	a0,184(sp)
    8001bc4e:	a89d                	j	8001bcc4 <.LBB12_51+0x26>
            offset += write_len;
    8001bc50:	6562                	ld	a0,24(sp)
    8001bc52:	f9aa                	sd	a0,240(sp)
            src += write_len;
    8001bc54:	75aa                	ld	a1,168(sp)
    8001bc56:	7662                	ld	a2,56(sp)
    8001bc58:	00c586b3          	add	a3,a1,a2
    8001bc5c:	e836                	sd	a3,16(sp)
    8001bc5e:	0ab6e963          	bltu	a3,a1,8001bd10 <.LBB12_56>
    8001bc62:	a009                	j	8001bc64 <.LBB12_50+0x26>
    8001bc64:	6542                	ld	a0,16(sp)
    8001bc66:	f52a                	sd	a0,168(sp)
            total += write_len;
    8001bc68:	75ee                	ld	a1,248(sp)
    8001bc6a:	7662                	ld	a2,56(sp)
    8001bc6c:	00c586b3          	add	a3,a1,a2
    8001bc70:	e436                	sd	a3,8(sp)
    8001bc72:	0ab6ed63          	bltu	a3,a1,8001bd2c <.LBB12_58>
    8001bc76:	a009                	j	8001bc78 <.LBB12_50+0x3a>
    8001bc78:	6522                	ld	a0,8(sp)
    8001bc7a:	fdaa                	sd	a0,248(sp)
            block_basic = offset / BSIZE;
    8001bc7c:	75ce                	ld	a1,240(sp)
    8001bc7e:	00a5d613          	srli	a2,a1,0xa
    8001bc82:	e232                	sd	a2,256(sp)
            block_offset = offset % BSIZE;
    8001bc84:	3ff5f593          	andi	a1,a1,1023
    8001bc88:	e62e                	sd	a1,264(sp)
            LOG.write(buf);
    8001bc8a:	6596                	ld	a1,320(sp)
    8001bc8c:	f32e                	sd	a1,416(sp)
    8001bc8e:	65b6                	ld	a1,328(sp)
    8001bc90:	f72e                	sd	a1,424(sp)
    8001bc92:	65d6                	ld	a1,336(sp)
    8001bc94:	fb2e                	sd	a1,432(sp)
    8001bc96:	65f6                	ld	a1,344(sp)
    8001bc98:	ff2e                	sd	a1,440(sp)
    8001bc9a:	7596                	ld	a1,352(sp)
    8001bc9c:	e3ae                	sd	a1,448(sp)

000000008001bc9e <.LBB12_51>:
    8001bc9e:	0003e517          	auipc	a0,0x3e
    8001bca2:	3c250513          	addi	a0,a0,962 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8001bca6:	130c                	addi	a1,sp,416
    8001bca8:	ffffb097          	auipc	ra,0xffffb
    8001bcac:	62c080e7          	jalr	1580(ra) # 800172d4 <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$5write17h41f3b26c7ee52330E>
    8001bcb0:	a009                	j	8001bcb2 <.LBB12_51+0x14>
        while total < count {
    8001bcb2:	b581                	j	8001baf2 <.LBB12_48+0x3a>
            self.dinode.size = offset as u32;
    8001bcb4:	754e                	ld	a0,240(sp)
    8001bcb6:	758a                	ld	a1,160(sp)
    8001bcb8:	c988                	sw	a0,16(a1)
        if self.dinode.size < offset as u32 {
    8001bcba:	a011                	j	8001bcbe <.LBB12_51+0x20>
    8001bcbc:	a009                	j	8001bcbe <.LBB12_51+0x20>
    8001bcbe:	4501                	li	a0,0
        Ok(())
    8001bcc0:	f92a                	sd	a0,176(sp)
    }
    8001bcc2:	a019                	j	8001bcc8 <.LBB12_51+0x2a>
    8001bcc4:	a009                	j	8001bcc6 <.LBB12_51+0x28>
    8001bcc6:	a009                	j	8001bcc8 <.LBB12_51+0x2a>
    8001bcc8:	754a                	ld	a0,176(sp)
    8001bcca:	75ea                	ld	a1,184(sp)
    8001bccc:	22813083          	ld	ra,552(sp)
    8001bcd0:	23010113          	addi	sp,sp,560
    8001bcd4:	8082                	ret

000000008001bcd6 <.LBB12_52>:
            let surplus_len = count - total;
    8001bcd6:	0000d517          	auipc	a0,0xd
    8001bcda:	aaa50513          	addi	a0,a0,-1366 # 80028780 <str.1>

000000008001bcde <.LBB12_53>:
    8001bcde:	0000d617          	auipc	a2,0xd
    8001bce2:	12260613          	addi	a2,a2,290 # 80028e00 <.L__unnamed_70>
    8001bce6:	02100593          	li	a1,33
    8001bcea:	00005097          	auipc	ra,0x5
    8001bcee:	fe0080e7          	jalr	-32(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001bcf4 <.LBB12_54>:
            offset += write_len;
    8001bcf4:	0000d517          	auipc	a0,0xd
    8001bcf8:	a3c50513          	addi	a0,a0,-1476 # 80028730 <str.0>

000000008001bcfc <.LBB12_55>:
    8001bcfc:	0000d617          	auipc	a2,0xd
    8001bd00:	14460613          	addi	a2,a2,324 # 80028e40 <.L__unnamed_71>
    8001bd04:	45f1                	li	a1,28
    8001bd06:	00005097          	auipc	ra,0x5
    8001bd0a:	fc4080e7          	jalr	-60(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001bd10 <.LBB12_56>:
            src += write_len;
    8001bd10:	0000d517          	auipc	a0,0xd
    8001bd14:	a2050513          	addi	a0,a0,-1504 # 80028730 <str.0>

000000008001bd18 <.LBB12_57>:
    8001bd18:	0000d617          	auipc	a2,0xd
    8001bd1c:	14060613          	addi	a2,a2,320 # 80028e58 <.L__unnamed_72>
    8001bd20:	45f1                	li	a1,28
    8001bd22:	00005097          	auipc	ra,0x5
    8001bd26:	fa8080e7          	jalr	-88(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001bd2c <.LBB12_58>:
            total += write_len;
    8001bd2c:	0000d517          	auipc	a0,0xd
    8001bd30:	a0450513          	addi	a0,a0,-1532 # 80028730 <str.0>

000000008001bd34 <.LBB12_59>:
    8001bd34:	0000d617          	auipc	a2,0xd
    8001bd38:	13c60613          	addi	a2,a2,316 # 80028e70 <.L__unnamed_73>
    8001bd3c:	45f1                	li	a1,28
    8001bd3e:	00005097          	auipc	ra,0x5
    8001bd42:	f8c080e7          	jalr	-116(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel2fs5inode9InodeData10dir_lookup17h6c68d88e3619362cE:

000000008001bd48 <_ZN6kernel2fs5inode9InodeData10dir_lookup17h6c68d88e3619362cE>:
    pub fn dir_lookup(&mut self, name: &[u8]) -> Option<Inode> {
    8001bd48:	7125                	addi	sp,sp,-416
    8001bd4a:	ef06                	sd	ra,408(sp)
    8001bd4c:	f22e                	sd	a1,288(sp)
    8001bd4e:	f632                	sd	a2,296(sp)
    8001bd50:	fa36                	sd	a3,304(sp)
        assert!(name.len() == DIRSIZ);
    8001bd52:	f8aa                	sd	a0,112(sp)
    8001bd54:	8532                	mv	a0,a2
    8001bd56:	f4ae                	sd	a1,104(sp)
    8001bd58:	85b6                	mv	a1,a3
    8001bd5a:	f0b6                	sd	a3,96(sp)
    8001bd5c:	ecb2                	sd	a2,88(sp)
    8001bd5e:	ffff7097          	auipc	ra,0xffff7
    8001bd62:	f06080e7          	jalr	-250(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    8001bd66:	e8aa                	sd	a0,80(sp)
    8001bd68:	a009                	j	8001bd6a <_ZN6kernel2fs5inode9InodeData10dir_lookup17h6c68d88e3619362cE+0x22>
    8001bd6a:	4539                	li	a0,14
    8001bd6c:	65c6                	ld	a1,80(sp)
    8001bd6e:	02a58263          	beq	a1,a0,8001bd92 <.LBB13_42+0x16>
    8001bd72:	a009                	j	8001bd74 <.LBB13_41>

000000008001bd74 <.LBB13_41>:
    8001bd74:	0000d517          	auipc	a0,0xd
    8001bd78:	11450513          	addi	a0,a0,276 # 80028e88 <.L__unnamed_74>

000000008001bd7c <.LBB13_42>:
    8001bd7c:	0000d617          	auipc	a2,0xd
    8001bd80:	13460613          	addi	a2,a2,308 # 80028eb0 <.L__unnamed_75>
    8001bd84:	02600593          	li	a1,38
    8001bd88:	00005097          	auipc	ra,0x5
    8001bd8c:	f42080e7          	jalr	-190(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001bd90:	0000                	unimp
        if self.dinode.itype != InodeType::Directory {
    8001bd92:	7526                	ld	a0,104(sp)
    8001bd94:	0521                	addi	a0,a0,8

000000008001bd96 <.LBB13_43>:
    8001bd96:	0000d597          	auipc	a1,0xd
    8001bd9a:	c8258593          	addi	a1,a1,-894 # 80028a18 <.L__unnamed_26>
    8001bd9e:	fffed097          	auipc	ra,0xfffed
    8001bda2:	902080e7          	jalr	-1790(ra) # 800086a0 <_ZN4core3cmp9PartialEq2ne17h06a962108928ca16E>
    8001bda6:	e4aa                	sd	a0,72(sp)
    8001bda8:	a009                	j	8001bdaa <.LBB13_43+0x14>
    8001bdaa:	4501                	li	a0,0
    8001bdac:	65a6                	ld	a1,72(sp)
    8001bdae:	02a58163          	beq	a1,a0,8001bdd0 <.LBB13_45+0x14>
    8001bdb2:	a009                	j	8001bdb4 <.LBB13_44>

000000008001bdb4 <.LBB13_44>:
            panic!("inode type is not directory");
    8001bdb4:	0000d517          	auipc	a0,0xd
    8001bdb8:	11450513          	addi	a0,a0,276 # 80028ec8 <.L__unnamed_76>

000000008001bdbc <.LBB13_45>:
    8001bdbc:	0000d617          	auipc	a2,0xd
    8001bdc0:	12c60613          	addi	a2,a2,300 # 80028ee8 <.L__unnamed_77>
    8001bdc4:	45ed                	li	a1,27
    8001bdc6:	00005097          	auipc	ra,0x5
    8001bdca:	f04080e7          	jalr	-252(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001bdce:	0000                	unimp
    8001bdd0:	4541                	li	a0,16
        let de_size = size_of::<DirEntry>();
    8001bdd2:	fe2a                	sd	a0,312(sp)
    8001bdd4:	a009                	j	8001bdd6 <.LBB13_45+0x1a>
        let mut dir_entry = DirEntry::new();
    8001bdd6:	00000097          	auipc	ra,0x0
    8001bdda:	72a080e7          	jalr	1834(ra) # 8001c500 <_ZN6kernel2fs6dinode8DirEntry3new17hcd512c4d9b1c2df4E>
    8001bdde:	e2aa                	sd	a0,320(sp)
    8001bde0:	e6ae                	sd	a1,328(sp)
    8001bde2:	fcaa                	sd	a0,120(sp)
    8001bde4:	e12e                	sd	a1,128(sp)
    8001bde6:	a009                	j	8001bde8 <.LBB13_45+0x2c>
    8001bde8:	18a8                	addi	a0,sp,120
        let dir_entry_ptr = &mut dir_entry as *mut _ as *mut u8;
    8001bdea:	eaaa                	sd	a0,336(sp)
        for offset in (0..self.dinode.size).step_by(de_size) {
    8001bdec:	75a6                	ld	a1,104(sp)
    8001bdee:	4990                	lw	a2,16(a1)
    8001bdf0:	4681                	li	a3,0
    8001bdf2:	dd36                	sw	a3,184(sp)
    8001bdf4:	df32                	sw	a2,188(sp)
    8001bdf6:	1118                	addi	a4,sp,160
    8001bdf8:	47c1                	li	a5,16
    8001bdfa:	e0aa                	sd	a0,64(sp)
    8001bdfc:	853a                	mv	a0,a4
    8001bdfe:	85b6                	mv	a1,a3
    8001be00:	86be                	mv	a3,a5
    8001be02:	fffe9097          	auipc	ra,0xfffe9
    8001be06:	524080e7          	jalr	1316(ra) # 80005326 <_ZN4core4iter6traits8iterator8Iterator7step_by17h6545e1d52944f994E>
    8001be0a:	a009                	j	8001be0c <.LBB13_45+0x50>
    8001be0c:	0128                	addi	a0,sp,136
    8001be0e:	110c                	addi	a1,sp,160
    8001be10:	ffffd097          	auipc	ra,0xffffd
    8001be14:	6fa080e7          	jalr	1786(ra) # 8001950a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hee817cfc8d040c74E>
    8001be18:	a009                	j	8001be1a <.LBB13_45+0x5e>
    8001be1a:	656a                	ld	a0,152(sp)
    8001be1c:	e9aa                	sd	a0,208(sp)
    8001be1e:	654a                	ld	a0,144(sp)
    8001be20:	e5aa                	sd	a0,200(sp)
    8001be22:	652a                	ld	a0,136(sp)
    8001be24:	e1aa                	sd	a0,192(sp)
    8001be26:	a009                	j	8001be28 <.LBB13_45+0x6c>
    8001be28:	0188                	addi	a0,sp,192
    8001be2a:	ffffd097          	auipc	ra,0xffffd
    8001be2e:	59a080e7          	jalr	1434(ra) # 800193c4 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E>
    8001be32:	cdaa                	sw	a0,216(sp)
    8001be34:	cfae                	sw	a1,220(sp)
    8001be36:	a009                	j	8001be38 <.LBB13_45+0x7c>
    8001be38:	0d816503          	lwu	a0,216(sp)
    8001be3c:	4581                	li	a1,0
    8001be3e:	00b50463          	beq	a0,a1,8001be46 <.LBB13_45+0x8a>
    8001be42:	a009                	j	8001be44 <.LBB13_45+0x88>
    8001be44:	a031                	j	8001be50 <.LBB13_45+0x94>
    8001be46:	4501                	li	a0,0
        None
    8001be48:	75c6                	ld	a1,112(sp)
    8001be4a:	e188                	sd	a0,0(a1)
    }
    8001be4c:	a22d                	j	8001bf76 <.LBB13_48+0x30>
        for offset in (0..self.dinode.size).step_by(de_size) {
    8001be4e:	0000                	unimp
    8001be50:	457e                	lw	a0,220(sp)
    8001be52:	14a12e23          	sw	a0,348(sp)
    8001be56:	16a12023          	sw	a0,352(sp)
    8001be5a:	16a12223          	sw	a0,356(sp)
    8001be5e:	4581                	li	a1,0
    8001be60:	4741                	li	a4,16
            self.read(
    8001be62:	7626                	ld	a2,104(sp)
    8001be64:	fc2a                	sd	a0,56(sp)
    8001be66:	8532                	mv	a0,a2
    8001be68:	6606                	ld	a2,64(sp)
    8001be6a:	76e2                	ld	a3,56(sp)
    8001be6c:	00000097          	auipc	ra,0x0
    8001be70:	84c080e7          	jalr	-1972(ra) # 8001b6b8 <_ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE>
    8001be74:	f82a                	sd	a0,48(sp)
    8001be76:	f42e                	sd	a1,40(sp)
    8001be78:	a009                	j	8001be7a <.LBB13_46>

000000008001be7a <.LBB13_46>:
    8001be7a:	0000d617          	auipc	a2,0xd
    8001be7e:	08660613          	addi	a2,a2,134 # 80028f00 <.L__unnamed_78>

000000008001be82 <.LBB13_47>:
    8001be82:	0000d717          	auipc	a4,0xd
    8001be86:	09e70713          	addi	a4,a4,158 # 80028f20 <.L__unnamed_79>
    8001be8a:	46f5                	li	a3,29
    8001be8c:	7542                	ld	a0,48(sp)
    8001be8e:	75a2                	ld	a1,40(sp)
    8001be90:	ffff1097          	auipc	ra,0xffff1
    8001be94:	daa080e7          	jalr	-598(ra) # 8000cc3a <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76fa70209070b620E>
    8001be98:	a009                	j	8001be9a <.LBB13_47+0x18>
            if dir_entry.inum == 0 {
    8001be9a:	07815503          	lhu	a0,120(sp)
    8001be9e:	4581                	li	a1,0
    8001bea0:	0cb50a63          	beq	a0,a1,8001bf74 <.LBB13_48+0x2e>
    8001bea4:	a009                	j	8001bea6 <.LBB13_47+0x24>
    8001bea6:	4501                	li	a0,0
            for i in 0..DIRSIZ {
    8001bea8:	f1aa                	sd	a0,224(sp)
    8001beaa:	45b9                	li	a1,14
    8001beac:	f5ae                	sd	a1,232(sp)
    8001beae:	00004097          	auipc	ra,0x4
    8001beb2:	bfc080e7          	jalr	-1028(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001beb6:	f02a                	sd	a0,32(sp)
    8001beb8:	ec2e                	sd	a1,24(sp)
    8001beba:	a009                	j	8001bebc <.LBB13_47+0x3a>
    8001bebc:	7502                	ld	a0,32(sp)
    8001bebe:	f9aa                	sd	a0,240(sp)
    8001bec0:	65e2                	ld	a1,24(sp)
    8001bec2:	fdae                	sd	a1,248(sp)
    8001bec4:	a009                	j	8001bec6 <.LBB13_47+0x44>
    8001bec6:	1988                	addi	a0,sp,240
    8001bec8:	00004097          	auipc	ra,0x4
    8001becc:	b74080e7          	jalr	-1164(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001bed0:	e22a                	sd	a0,256(sp)
    8001bed2:	e62e                	sd	a1,264(sp)
    8001bed4:	a009                	j	8001bed6 <.LBB13_47+0x54>
    8001bed6:	6512                	ld	a0,256(sp)
    8001bed8:	4581                	li	a1,0
    8001beda:	00b50463          	beq	a0,a1,8001bee2 <.LBB13_47+0x60>
    8001bede:	a009                	j	8001bee0 <.LBB13_47+0x5e>
    8001bee0:	a019                	j	8001bee6 <.LBB13_47+0x64>
    8001bee2:	a841                	j	8001bf72 <.LBB13_48+0x2c>
    8001bee4:	0000                	unimp
    8001bee6:	6532                	ld	a0,264(sp)
    8001bee8:	f6aa                	sd	a0,360(sp)
    8001beea:	faaa                	sd	a0,368(sp)
    8001beec:	feaa                	sd	a0,376(sp)
    8001beee:	45b5                	li	a1,13
                if dir_entry.name[i] != name[i] {
    8001bef0:	e82a                	sd	a0,16(sp)
    8001bef2:	08a5e563          	bltu	a1,a0,8001bf7c <.LBB13_49>
    8001bef6:	a009                	j	8001bef8 <.LBB13_47+0x76>
    8001bef8:	18a8                	addi	a0,sp,120
    8001befa:	65c2                	ld	a1,16(sp)
    8001befc:	952e                	add	a0,a0,a1
    8001befe:	00254503          	lbu	a0,2(a0)
    8001bf02:	7606                	ld	a2,96(sp)
    8001bf04:	e42a                	sd	a0,8(sp)
    8001bf06:	08c5f663          	bgeu	a1,a2,8001bf92 <.LBB13_50>
    8001bf0a:	a009                	j	8001bf0c <.LBB13_47+0x8a>
    8001bf0c:	6566                	ld	a0,88(sp)
    8001bf0e:	65c2                	ld	a1,16(sp)
    8001bf10:	00b50633          	add	a2,a0,a1
    8001bf14:	00064603          	lbu	a2,0(a2)
    8001bf18:	66a2                	ld	a3,8(sp)
    8001bf1a:	00c68463          	beq	a3,a2,8001bf22 <.LBB13_47+0xa0>
    8001bf1e:	a009                	j	8001bf20 <.LBB13_47+0x9e>
    8001bf20:	a889                	j	8001bf72 <.LBB13_48+0x2c>
    8001bf22:	4535                	li	a0,13
                if dir_entry.name[i] == 0 {
    8001bf24:	65c2                	ld	a1,16(sp)
    8001bf26:	08b56163          	bltu	a0,a1,8001bfa8 <.LBB13_51>
    8001bf2a:	a009                	j	8001bf2c <.LBB13_47+0xaa>
    8001bf2c:	18a8                	addi	a0,sp,120
    8001bf2e:	65c2                	ld	a1,16(sp)
    8001bf30:	952e                	add	a0,a0,a1
    8001bf32:	00254503          	lbu	a0,2(a0)
    8001bf36:	4601                	li	a2,0
    8001bf38:	02c51463          	bne	a0,a2,8001bf60 <.LBB13_48+0x1a>
    8001bf3c:	a009                	j	8001bf3e <.LBB13_47+0xbc>
                    return Some(ICACHE.get(self.dev, dir_entry.inum as u32))
    8001bf3e:	07815603          	lhu	a2,120(sp)
    8001bf42:	7526                	ld	a0,104(sp)
    8001bf44:	410c                	lw	a1,0(a0)

000000008001bf46 <.LBB13_48>:
    8001bf46:	0003e517          	auipc	a0,0x3e
    8001bf4a:	1ea50513          	addi	a0,a0,490 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    8001bf4e:	ffffe097          	auipc	ra,0xffffe
    8001bf52:	10a080e7          	jalr	266(ra) # 8001a058 <_ZN6kernel2fs5inode10InodeCache3get17ha88173fb332fca8aE>
    8001bf56:	e32a                	sd	a0,384(sp)
    8001bf58:	e72e                	sd	a1,392(sp)
    8001bf5a:	ea2a                	sd	a0,272(sp)
    8001bf5c:	ee2e                	sd	a1,280(sp)
    8001bf5e:	a011                	j	8001bf62 <.LBB13_48+0x1c>
            for i in 0..DIRSIZ {
    8001bf60:	b79d                	j	8001bec6 <.LBB13_47+0x44>
                    return Some(ICACHE.get(self.dev, dir_entry.inum as u32))
    8001bf62:	6572                	ld	a0,280(sp)
    8001bf64:	75c6                	ld	a1,112(sp)
    8001bf66:	e988                	sd	a0,16(a1)
    8001bf68:	6552                	ld	a0,272(sp)
    8001bf6a:	e588                	sd	a0,8(a1)
    8001bf6c:	4505                	li	a0,1
    8001bf6e:	e188                	sd	a0,0(a1)
    }
    8001bf70:	a019                	j	8001bf76 <.LBB13_48+0x30>
        for offset in (0..self.dinode.size).step_by(de_size) {
    8001bf72:	bd5d                	j	8001be28 <.LBB13_45+0x6c>
    8001bf74:	bd55                	j	8001be28 <.LBB13_45+0x6c>
    }
    8001bf76:	60fa                	ld	ra,408(sp)
    8001bf78:	611d                	addi	sp,sp,416
    8001bf7a:	8082                	ret

000000008001bf7c <.LBB13_49>:
                if dir_entry.name[i] != name[i] {
    8001bf7c:	0000d617          	auipc	a2,0xd
    8001bf80:	fbc60613          	addi	a2,a2,-68 # 80028f38 <.L__unnamed_80>
    8001bf84:	45b9                	li	a1,14
    8001bf86:	6542                	ld	a0,16(sp)
    8001bf88:	00005097          	auipc	ra,0x5
    8001bf8c:	d6e080e7          	jalr	-658(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001bf92 <.LBB13_50>:
    8001bf92:	0000d617          	auipc	a2,0xd
    8001bf96:	fbe60613          	addi	a2,a2,-66 # 80028f50 <.L__unnamed_81>
    8001bf9a:	6542                	ld	a0,16(sp)
    8001bf9c:	7586                	ld	a1,96(sp)
    8001bf9e:	00005097          	auipc	ra,0x5
    8001bfa2:	d58080e7          	jalr	-680(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

000000008001bfa8 <.LBB13_51>:
                if dir_entry.name[i] == 0 {
    8001bfa8:	0000d617          	auipc	a2,0xd
    8001bfac:	fc060613          	addi	a2,a2,-64 # 80028f68 <.L__unnamed_82>
    8001bfb0:	45b9                	li	a1,14
    8001bfb2:	6542                	ld	a0,16(sp)
    8001bfb4:	00005097          	auipc	ra,0x5
    8001bfb8:	d42080e7          	jalr	-702(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE:

000000008001bfbe <_ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE>:
    pub fn dir_link(&mut self, name: &[u8], inum: u32) -> Result<(), &'static str>{
    8001bfbe:	7141                	addi	sp,sp,-496
    8001bfc0:	f786                	sd	ra,488(sp)
    8001bfc2:	8736                	mv	a4,a3
    8001bfc4:	faaa                	sd	a0,368(sp)
    8001bfc6:	feae                	sd	a1,376(sp)
    8001bfc8:	e332                	sd	a2,384(sp)
    8001bfca:	18d12623          	sw	a3,396(sp)
    8001bfce:	01b4                	addi	a3,sp,200
        if self.dir_lookup(name).is_some() {
    8001bfd0:	f92a                	sd	a0,176(sp)
    8001bfd2:	8536                	mv	a0,a3
    8001bfd4:	76ca                	ld	a3,176(sp)
    8001bfd6:	f52e                	sd	a1,168(sp)
    8001bfd8:	85b6                	mv	a1,a3
    8001bfda:	77aa                	ld	a5,168(sp)
    8001bfdc:	f132                	sd	a2,160(sp)
    8001bfde:	863e                	mv	a2,a5
    8001bfe0:	768a                	ld	a3,160(sp)
    8001bfe2:	ed3a                	sd	a4,152(sp)
    8001bfe4:	00000097          	auipc	ra,0x0
    8001bfe8:	d64080e7          	jalr	-668(ra) # 8001bd48 <_ZN6kernel2fs5inode9InodeData10dir_lookup17h6c68d88e3619362cE>
    8001bfec:	a009                	j	8001bfee <_ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE+0x30>
    8001bfee:	01a8                	addi	a0,sp,200
    8001bff0:	ffffd097          	auipc	ra,0xffffd
    8001bff4:	faa080e7          	jalr	-86(ra) # 80018f9a <_ZN4core6option15Option$LT$T$GT$7is_some17haa99f50637e2e18dE>
    8001bff8:	e92a                	sd	a0,144(sp)
    8001bffa:	a009                	j	8001bffc <_ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE+0x3e>
    8001bffc:	01a8                	addi	a0,sp,200
    8001bffe:	fffeb097          	auipc	ra,0xfffeb
    8001c002:	91a080e7          	jalr	-1766(ra) # 80006918 <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E>
    8001c006:	a009                	j	8001c008 <_ZN6kernel2fs5inode9InodeData8dir_link17h06bd64935a39f1cfE+0x4a>
    8001c008:	4501                	li	a0,0
    8001c00a:	65ca                	ld	a1,144(sp)
    8001c00c:	00a58c63          	beq	a1,a0,8001c024 <.LBB14_43+0x12>
    8001c010:	a009                	j	8001c012 <.LBB14_43>

000000008001c012 <.LBB14_43>:
            return Err("It's incorrect to find entry in disk")
    8001c012:	0000d517          	auipc	a0,0xd
    8001c016:	f6e50513          	addi	a0,a0,-146 # 80028f80 <.L__unnamed_83>
    8001c01a:	fd2a                	sd	a0,184(sp)
    8001c01c:	02400513          	li	a0,36
    8001c020:	e1aa                	sd	a0,192(sp)
    8001c022:	a2c5                	j	8001c202 <.LBB14_43+0x1f0>
        let mut dir_entry = DirEntry::new();
    8001c024:	00000097          	auipc	ra,0x0
    8001c028:	4dc080e7          	jalr	1244(ra) # 8001c500 <_ZN6kernel2fs6dinode8DirEntry3new17hcd512c4d9b1c2df4E>
    8001c02c:	f32a                	sd	a0,416(sp)
    8001c02e:	f72e                	sd	a1,424(sp)
    8001c030:	f1aa                	sd	a0,224(sp)
    8001c032:	f5ae                	sd	a1,232(sp)
    8001c034:	a009                	j	8001c036 <.LBB14_43+0x24>
    8001c036:	4501                	li	a0,0
        let mut entry_offset = 0;
    8001c038:	dbaa                	sw	a0,244(sp)
        for offset in (0..self.dinode.size).step_by(size_of::<DirEntry>()) {
    8001c03a:	75ca                	ld	a1,176(sp)
    8001c03c:	4990                	lw	a2,16(a1)
    8001c03e:	12a12423          	sw	a0,296(sp)
    8001c042:	12c12623          	sw	a2,300(sp)
    8001c046:	a009                	j	8001c048 <.LBB14_43+0x36>
    8001c048:	12c12603          	lw	a2,300(sp)
    8001c04c:	12812583          	lw	a1,296(sp)
    8001c050:	0a08                	addi	a0,sp,272
    8001c052:	46c1                	li	a3,16
    8001c054:	fffe9097          	auipc	ra,0xfffe9
    8001c058:	2d2080e7          	jalr	722(ra) # 80005326 <_ZN4core4iter6traits8iterator8Iterator7step_by17h6545e1d52944f994E>
    8001c05c:	a009                	j	8001c05e <.LBB14_43+0x4c>
    8001c05e:	19a8                	addi	a0,sp,248
    8001c060:	0a0c                	addi	a1,sp,272
    8001c062:	ffffd097          	auipc	ra,0xffffd
    8001c066:	4a8080e7          	jalr	1192(ra) # 8001950a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hee817cfc8d040c74E>
    8001c06a:	a009                	j	8001c06c <.LBB14_43+0x5a>
    8001c06c:	6532                	ld	a0,264(sp)
    8001c06e:	e2aa                	sd	a0,320(sp)
    8001c070:	6512                	ld	a0,256(sp)
    8001c072:	fe2a                	sd	a0,312(sp)
    8001c074:	756e                	ld	a0,248(sp)
    8001c076:	fa2a                	sd	a0,304(sp)
    8001c078:	a009                	j	8001c07a <.LBB14_43+0x68>
    8001c07a:	1a08                	addi	a0,sp,304
    8001c07c:	ffffd097          	auipc	ra,0xffffd
    8001c080:	348080e7          	jalr	840(ra) # 800193c4 <_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c1f038f8ca4b2f1E>
    8001c084:	14a12423          	sw	a0,328(sp)
    8001c088:	14b12623          	sw	a1,332(sp)
    8001c08c:	a009                	j	8001c08e <.LBB14_43+0x7c>
    8001c08e:	14816503          	lwu	a0,328(sp)
    8001c092:	4581                	li	a1,0
    8001c094:	00b50463          	beq	a0,a1,8001c09c <.LBB14_43+0x8a>
    8001c098:	a009                	j	8001c09a <.LBB14_43+0x88>
    8001c09a:	a019                	j	8001c0a0 <.LBB14_43+0x8e>
    8001c09c:	a871                	j	8001c138 <.LBB14_43+0x126>
    8001c09e:	0000                	unimp
    8001c0a0:	14c16503          	lwu	a0,332(sp)
    8001c0a4:	1aa12e23          	sw	a0,444(sp)
    8001c0a8:	1ca12023          	sw	a0,448(sp)
    8001c0ac:	1ca12223          	sw	a0,452(sp)
    8001c0b0:	1190                	addi	a2,sp,224
                size_of::<DirEntry>() as u32
    8001c0b2:	e52a                	sd	a0,136(sp)
    8001c0b4:	e132                	sd	a2,128(sp)
    8001c0b6:	a009                	j	8001c0b8 <.LBB14_43+0xa6>
    8001c0b8:	4501                	li	a0,0
    8001c0ba:	4741                	li	a4,16
            self.read(
    8001c0bc:	75ca                	ld	a1,176(sp)
    8001c0be:	fcaa                	sd	a0,120(sp)
    8001c0c0:	852e                	mv	a0,a1
    8001c0c2:	75e6                	ld	a1,120(sp)
    8001c0c4:	660a                	ld	a2,128(sp)
    8001c0c6:	66aa                	ld	a3,136(sp)
    8001c0c8:	fffff097          	auipc	ra,0xfffff
    8001c0cc:	5f0080e7          	jalr	1520(ra) # 8001b6b8 <_ZN6kernel2fs5inode9InodeData4read17h5f606d6155ea696fE>
    8001c0d0:	f8aa                	sd	a0,112(sp)
    8001c0d2:	f4ae                	sd	a1,104(sp)
    8001c0d4:	a009                	j	8001c0d6 <.LBB14_43+0xc4>
    8001c0d6:	7546                	ld	a0,112(sp)
    8001c0d8:	75a6                	ld	a1,104(sp)
    8001c0da:	ffff1097          	auipc	ra,0xffff1
    8001c0de:	e0e080e7          	jalr	-498(ra) # 8000cee8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h489706ecba0771b6E>
    8001c0e2:	eaaa                	sd	a0,336(sp)
    8001c0e4:	eeae                	sd	a1,344(sp)
    8001c0e6:	a009                	j	8001c0e8 <.LBB14_43+0xd6>
            )?;
    8001c0e8:	6556                	ld	a0,336(sp)
    8001c0ea:	00a035b3          	snez	a1,a0
    8001c0ee:	4601                	li	a2,0
    8001c0f0:	00c50463          	beq	a0,a2,8001c0f8 <.LBB14_43+0xe6>
    8001c0f4:	a009                	j	8001c0f6 <.LBB14_43+0xe4>
    8001c0f6:	a801                	j	8001c106 <.LBB14_43+0xf4>
            if dir_entry.inum == 0 {
    8001c0f8:	0e015503          	lhu	a0,224(sp)
    8001c0fc:	4581                	li	a1,0
    8001c0fe:	02b50963          	beq	a0,a1,8001c130 <.LBB14_43+0x11e>
    8001c102:	a815                	j	8001c136 <.LBB14_43+0x124>
            self.read(
    8001c104:	0000                	unimp
            )?;
    8001c106:	6556                	ld	a0,336(sp)
    8001c108:	65f6                	ld	a1,344(sp)
    8001c10a:	e7aa                	sd	a0,456(sp)
    8001c10c:	ebae                	sd	a1,464(sp)
    8001c10e:	ffffd097          	auipc	ra,0xffffd
    8001c112:	0d6080e7          	jalr	214(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001c116:	f0aa                	sd	a0,96(sp)
    8001c118:	ecae                	sd	a1,88(sp)
    8001c11a:	a009                	j	8001c11c <.LBB14_43+0x10a>
            self.read(
    8001c11c:	7506                	ld	a0,96(sp)
    8001c11e:	65e6                	ld	a1,88(sp)
    8001c120:	ffff1097          	auipc	ra,0xffff1
    8001c124:	d7c080e7          	jalr	-644(ra) # 8000ce9c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E>
    8001c128:	fd2a                	sd	a0,184(sp)
    8001c12a:	e1ae                	sd	a1,192(sp)
    8001c12c:	a009                	j	8001c12e <.LBB14_43+0x11c>
    8001c12e:	a8c9                	j	8001c200 <.LBB14_43+0x1ee>
                entry_offset = offset;
    8001c130:	652a                	ld	a0,136(sp)
    8001c132:	dbaa                	sw	a0,244(sp)
    8001c134:	a011                	j	8001c138 <.LBB14_43+0x126>
        for offset in (0..self.dinode.size).step_by(size_of::<DirEntry>()) {
    8001c136:	b791                	j	8001c07a <.LBB14_43+0x68>
            ptr::copy(name.as_ptr(), dir_entry.name.as_mut_ptr(), name.len());
    8001c138:	752a                	ld	a0,168(sp)
    8001c13a:	758a                	ld	a1,160(sp)
    8001c13c:	ffff7097          	auipc	ra,0xffff7
    8001c140:	b88080e7          	jalr	-1144(ra) # 80012cc4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0ea91ea08db3e267E>
    8001c144:	e8aa                	sd	a0,80(sp)
    8001c146:	a009                	j	8001c148 <.LBB14_43+0x136>
    8001c148:	1188                	addi	a0,sp,224
    8001c14a:	00256513          	ori	a0,a0,2
    8001c14e:	45b9                	li	a1,14
    8001c150:	ffff7097          	auipc	ra,0xffff7
    8001c154:	b0a080e7          	jalr	-1270(ra) # 80012c5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfacde4f5753eccfcE>
    8001c158:	e4aa                	sd	a0,72(sp)
    8001c15a:	a009                	j	8001c15c <.LBB14_43+0x14a>
    8001c15c:	752a                	ld	a0,168(sp)
    8001c15e:	758a                	ld	a1,160(sp)
    8001c160:	ffff7097          	auipc	ra,0xffff7
    8001c164:	b04080e7          	jalr	-1276(ra) # 80012c64 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6293136fac8723eeE>
    8001c168:	e0aa                	sd	a0,64(sp)
    8001c16a:	a009                	j	8001c16c <.LBB14_43+0x15a>
    8001c16c:	6546                	ld	a0,80(sp)
    8001c16e:	65a6                	ld	a1,72(sp)
    8001c170:	6606                	ld	a2,64(sp)
    8001c172:	fffea097          	auipc	ra,0xfffea
    8001c176:	a82080e7          	jalr	-1406(ra) # 80005bf4 <_ZN4core10intrinsics4copy17ha63a18373ccfe4abE>
    8001c17a:	a009                	j	8001c17c <.LBB14_43+0x16a>
        dir_entry.inum = inum as u16;
    8001c17c:	656a                	ld	a0,152(sp)
    8001c17e:	0ea11023          	sh	a0,224(sp)
    8001c182:	1190                	addi	a2,sp,224
            entry_offset, 
    8001c184:	0f416683          	lwu	a3,244(sp)
            size_of::<DirEntry>() as u32
    8001c188:	fc32                	sd	a2,56(sp)
    8001c18a:	f836                	sd	a3,48(sp)
    8001c18c:	a009                	j	8001c18e <.LBB14_43+0x17c>
    8001c18e:	4501                	li	a0,0
    8001c190:	4741                	li	a4,16
        self.write(
    8001c192:	75ca                	ld	a1,176(sp)
    8001c194:	f42a                	sd	a0,40(sp)
    8001c196:	852e                	mv	a0,a1
    8001c198:	75a2                	ld	a1,40(sp)
    8001c19a:	7662                	ld	a2,56(sp)
    8001c19c:	76c2                	ld	a3,48(sp)
    8001c19e:	00000097          	auipc	ra,0x0
    8001c1a2:	86c080e7          	jalr	-1940(ra) # 8001ba0a <_ZN6kernel2fs5inode9InodeData5write17h032930266959c2cbE>
    8001c1a6:	f02a                	sd	a0,32(sp)
    8001c1a8:	ec2e                	sd	a1,24(sp)
    8001c1aa:	a009                	j	8001c1ac <.LBB14_43+0x19a>
    8001c1ac:	7502                	ld	a0,32(sp)
    8001c1ae:	65e2                	ld	a1,24(sp)
    8001c1b0:	ffff1097          	auipc	ra,0xffff1
    8001c1b4:	d38080e7          	jalr	-712(ra) # 8000cee8 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h489706ecba0771b6E>
    8001c1b8:	f2aa                	sd	a0,352(sp)
    8001c1ba:	f6ae                	sd	a1,360(sp)
    8001c1bc:	a009                	j	8001c1be <.LBB14_43+0x1ac>
        )?;
    8001c1be:	7516                	ld	a0,352(sp)
    8001c1c0:	00a035b3          	snez	a1,a0
    8001c1c4:	4601                	li	a2,0
    8001c1c6:	00c50463          	beq	a0,a2,8001c1ce <.LBB14_43+0x1bc>
    8001c1ca:	a009                	j	8001c1cc <.LBB14_43+0x1ba>
    8001c1cc:	a029                	j	8001c1d6 <.LBB14_43+0x1c4>
    8001c1ce:	4501                	li	a0,0
        Ok(())
    8001c1d0:	fd2a                	sd	a0,184(sp)
    }
    8001c1d2:	a805                	j	8001c202 <.LBB14_43+0x1f0>
        self.write(
    8001c1d4:	0000                	unimp
        )?;
    8001c1d6:	7516                	ld	a0,352(sp)
    8001c1d8:	75b6                	ld	a1,360(sp)
    8001c1da:	efaa                	sd	a0,472(sp)
    8001c1dc:	f3ae                	sd	a1,480(sp)
    8001c1de:	ffffd097          	auipc	ra,0xffffd
    8001c1e2:	006080e7          	jalr	6(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001c1e6:	e82a                	sd	a0,16(sp)
    8001c1e8:	e42e                	sd	a1,8(sp)
    8001c1ea:	a009                	j	8001c1ec <.LBB14_43+0x1da>
        self.write(
    8001c1ec:	6542                	ld	a0,16(sp)
    8001c1ee:	65a2                	ld	a1,8(sp)
    8001c1f0:	ffff1097          	auipc	ra,0xffff1
    8001c1f4:	cac080e7          	jalr	-852(ra) # 8000ce9c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h5ed998e0ab476839E>
    8001c1f8:	fd2a                	sd	a0,184(sp)
    8001c1fa:	e1ae                	sd	a1,192(sp)
    8001c1fc:	a009                	j	8001c1fe <.LBB14_43+0x1ec>
    8001c1fe:	a009                	j	8001c200 <.LBB14_43+0x1ee>
    8001c200:	a009                	j	8001c202 <.LBB14_43+0x1f0>
    }
    8001c202:	756a                	ld	a0,184(sp)
    8001c204:	658e                	ld	a1,192(sp)
    8001c206:	70be                	ld	ra,488(sp)
    8001c208:	617d                	addi	sp,sp,496
    8001c20a:	8082                	ret

Disassembly of section .text._ZN63_$LT$kernel..fs..inode..Inode$u20$as$u20$core..clone..Clone$GT$5clone17h9e8c77d0c705e5bdE:

000000008001c20c <_ZN63_$LT$kernel..fs..inode..Inode$u20$as$u20$core..clone..Clone$GT$5clone17h9e8c77d0c705e5bdE>:
    fn clone(&self) -> Self {
    8001c20c:	7139                	addi	sp,sp,-64
    8001c20e:	fc06                	sd	ra,56(sp)
    8001c210:	ec2a                	sd	a0,24(sp)

000000008001c212 <.LBB15_2>:
        ICACHE.dup(self)
    8001c212:	0003e597          	auipc	a1,0x3e
    8001c216:	f1e58593          	addi	a1,a1,-226 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    8001c21a:	e02a                	sd	a0,0(sp)
    8001c21c:	852e                	mv	a0,a1
    8001c21e:	6582                	ld	a1,0(sp)
    8001c220:	ffffe097          	auipc	ra,0xffffe
    8001c224:	9f6080e7          	jalr	-1546(ra) # 80019c16 <_ZN6kernel2fs5inode10InodeCache3dup17h3ed1d4e9bb68999cE>
    8001c228:	f02a                	sd	a0,32(sp)
    8001c22a:	f42e                	sd	a1,40(sp)
    8001c22c:	e42a                	sd	a0,8(sp)
    8001c22e:	e82e                	sd	a1,16(sp)
    8001c230:	a009                	j	8001c232 <.LBB15_2+0x20>
    }
    8001c232:	6522                	ld	a0,8(sp)
    8001c234:	65c2                	ld	a1,16(sp)
    8001c236:	70e2                	ld	ra,56(sp)
    8001c238:	6121                	addi	sp,sp,64
    8001c23a:	8082                	ret

Disassembly of section .text._ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E:

000000008001c23c <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E>:
    pub fn lock<'a>(&'a self) -> SleepLockGuard<'a, InodeData> {
    8001c23c:	714d                	addi	sp,sp,-336
    8001c23e:	e686                	sd	ra,328(sp)
    8001c240:	f62a                	sd	a0,296(sp)
        let mut guard = ICACHE.data[self.index].lock();
    8001c242:	610c                	ld	a1,0(a0)
    8001c244:	03100613          	li	a2,49
    8001c248:	e12a                	sd	a0,128(sp)
    8001c24a:	fcae                	sd	a1,120(sp)
    8001c24c:	1ab66663          	bltu	a2,a1,8001c3f8 <.LBB16_29>
    8001c250:	a009                	j	8001c252 <_ZN6kernel2fs5inode5Inode4lock17h90e30fad2fdb70a2E+0x16>
    8001c252:	7566                	ld	a0,120(sp)
    8001c254:	00751593          	slli	a1,a0,0x7

000000008001c258 <.LBB16_23>:
    8001c258:	0003e617          	auipc	a2,0x3e
    8001c25c:	ed860613          	addi	a2,a2,-296 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>
    8001c260:	95b2                	add	a1,a1,a2
    8001c262:	4d058513          	addi	a0,a1,1232
    8001c266:	fffeb097          	auipc	ra,0xfffeb
    8001c26a:	f64080e7          	jalr	-156(ra) # 800071ca <_ZN6kernel4lock9sleeplock18SleepLock$LT$T$GT$4lock17ha08c692bd4cb09baE>
    8001c26e:	e52a                	sd	a0,136(sp)
    8001c270:	e92e                	sd	a1,144(sp)
    8001c272:	a009                	j	8001c274 <.LBB16_23+0x1c>
    8001c274:	0128                	addi	a0,sp,136
        if !guard.valid {
    8001c276:	fffeb097          	auipc	ra,0xfffeb
    8001c27a:	1ea080e7          	jalr	490(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001c27e:	f8aa                	sd	a0,112(sp)
    8001c280:	a009                	j	8001c282 <.LBB16_23+0x2a>
    8001c282:	7546                	ld	a0,112(sp)
    8001c284:	04854583          	lbu	a1,72(a0)
    8001c288:	8985                	andi	a1,a1,1
    8001c28a:	e18d                	bnez	a1,8001c2ac <.LBB16_24+0x1a>
    8001c28c:	a009                	j	8001c28e <.LBB16_23+0x36>
            let blockno = unsafe{ SUPER_BLOCK.locate_inode(self.inum) };
    8001c28e:	650a                	ld	a0,128(sp)
    8001c290:	454c                	lw	a1,12(a0)

000000008001c292 <.LBB16_24>:
    8001c292:	00051517          	auipc	a0,0x51
    8001c296:	f4e50513          	addi	a0,a0,-178 # 8006d1e0 <_ZN6kernel2fs10superblock11SUPER_BLOCK17h3df2a3e15fe1b04eE>
    8001c29a:	ffff1097          	auipc	ra,0xffff1
    8001c29e:	166080e7          	jalr	358(ra) # 8000d400 <_ZN6kernel2fs10superblock10SuperBlock12locate_inode17h7c732a61e5f44353E>
    8001c2a2:	85aa                	mv	a1,a0
    8001c2a4:	12a12a23          	sw	a0,308(sp)
    8001c2a8:	f4ae                	sd	a1,104(sp)
    8001c2aa:	a011                	j	8001c2ae <.LBB16_24+0x1c>
        if !guard.valid {
    8001c2ac:	a289                	j	8001c3ee <.LBB16_28+0x18>
            let buf = BCACHE.bread(self.dev, blockno);
    8001c2ae:	650a                	ld	a0,128(sp)
    8001c2b0:	4510                	lw	a2,8(a0)

000000008001c2b2 <.LBB16_25>:
    8001c2b2:	00010597          	auipc	a1,0x10
    8001c2b6:	d4e58593          	addi	a1,a1,-690 # 8002c000 <_ZN6kernel2fs3bio6BCACHE17hb1303eb3fddcd707E>
    8001c2ba:	0928                	addi	a0,sp,152
    8001c2bc:	76a6                	ld	a3,104(sp)
    8001c2be:	fffe5097          	auipc	ra,0xfffe5
    8001c2c2:	540080e7          	jalr	1344(ra) # 800017fe <_ZN6kernel2fs3bio6Bcache5bread17hdec40b9b354b37baE>
    8001c2c6:	a009                	j	8001c2c8 <.LBB16_25+0x16>
            let offset = locate_inode_offset(self.inum) as isize;
    8001c2c8:	650a                	ld	a0,128(sp)
    8001c2ca:	4548                	lw	a0,12(a0)
    8001c2cc:	00000097          	auipc	ra,0x0
    8001c2d0:	144080e7          	jalr	324(ra) # 8001c410 <_ZN6kernel2fs5inode19locate_inode_offset17he097828cfd4cb659E>
    8001c2d4:	f0aa                	sd	a0,96(sp)
    8001c2d6:	a009                	j	8001c2d8 <.LBB16_25+0x26>
    8001c2d8:	7506                	ld	a0,96(sp)
    8001c2da:	fe2a                	sd	a0,312(sp)
    8001c2dc:	0928                	addi	a0,sp,152
            let dinode = unsafe{ (buf.raw_data() as *const DiskInode).offset(offset) };
    8001c2de:	fffe5097          	auipc	ra,0xfffe5
    8001c2e2:	67c080e7          	jalr	1660(ra) # 8000195a <_ZN6kernel2fs3bio3Buf8raw_data17h93ab240d3554e1e5E>
    8001c2e6:	ecaa                	sd	a0,88(sp)
    8001c2e8:	a009                	j	8001c2ea <.LBB16_25+0x38>
    8001c2ea:	6566                	ld	a0,88(sp)
    8001c2ec:	7586                	ld	a1,96(sp)
    8001c2ee:	fffec097          	auipc	ra,0xfffec
    8001c2f2:	3e8080e7          	jalr	1000(ra) # 800086d6 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0f5427eddf4fb954E>
    8001c2f6:	85aa                	mv	a1,a0
    8001c2f8:	e2aa                	sd	a0,320(sp)
    8001c2fa:	e8ae                	sd	a1,80(sp)
    8001c2fc:	a009                	j	8001c2fe <.LBB16_25+0x4c>
    8001c2fe:	0188                	addi	a0,sp,192
            guard.dinode = unsafe{ core::ptr::read(dinode) };
    8001c300:	65c6                	ld	a1,80(sp)
    8001c302:	ffff5097          	auipc	ra,0xffff5
    8001c306:	852080e7          	jalr	-1966(ra) # 80010b54 <_ZN4core3ptr4read17hc9a1ca5f3f1dda2cE>
    8001c30a:	a009                	j	8001c30c <.LBB16_25+0x5a>
    8001c30c:	0128                	addi	a0,sp,136
    8001c30e:	fffeb097          	auipc	ra,0xfffeb
    8001c312:	15c080e7          	jalr	348(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001c316:	e4aa                	sd	a0,72(sp)
    8001c318:	a009                	j	8001c31a <.LBB16_25+0x68>
    8001c31a:	6526                	ld	a0,72(sp)
    8001c31c:	0521                	addi	a0,a0,8
    8001c31e:	018c                	addi	a1,sp,192
    8001c320:	04000613          	li	a2,64
    8001c324:	00007097          	auipc	ra,0x7
    8001c328:	53c080e7          	jalr	1340(ra) # 80023860 <memcpy>
            drop(buf);
    8001c32c:	65ea                	ld	a1,152(sp)
    8001c32e:	e22e                	sd	a1,256(sp)
    8001c330:	758a                	ld	a1,160(sp)
    8001c332:	e62e                	sd	a1,264(sp)
    8001c334:	75aa                	ld	a1,168(sp)
    8001c336:	ea2e                	sd	a1,272(sp)
    8001c338:	75ca                	ld	a1,176(sp)
    8001c33a:	ee2e                	sd	a1,280(sp)
    8001c33c:	75ea                	ld	a1,184(sp)
    8001c33e:	f22e                	sd	a1,288(sp)
    8001c340:	020c                	addi	a1,sp,256
    8001c342:	e0aa                	sd	a0,64(sp)
    8001c344:	852e                	mv	a0,a1
    8001c346:	ffff1097          	auipc	ra,0xffff1
    8001c34a:	64c080e7          	jalr	1612(ra) # 8000d992 <_ZN4core3mem4drop17h990170634f1eb794E>
    8001c34e:	a009                	j	8001c350 <.LBB16_25+0x9e>
    8001c350:	0128                	addi	a0,sp,136
            guard.valid = true;
    8001c352:	fffeb097          	auipc	ra,0xfffeb
    8001c356:	118080e7          	jalr	280(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001c35a:	fc2a                	sd	a0,56(sp)
    8001c35c:	a009                	j	8001c35e <.LBB16_25+0xac>
    8001c35e:	4505                	li	a0,1
    8001c360:	75e2                	ld	a1,56(sp)
    8001c362:	04a58423          	sb	a0,72(a1)
            guard.dev = self.dev;
    8001c366:	650a                	ld	a0,128(sp)
    8001c368:	00856603          	lwu	a2,8(a0)
    8001c36c:	0128                	addi	a0,sp,136
    8001c36e:	f832                	sd	a2,48(sp)
    8001c370:	fffeb097          	auipc	ra,0xfffeb
    8001c374:	0fa080e7          	jalr	250(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001c378:	f42a                	sd	a0,40(sp)
    8001c37a:	a009                	j	8001c37c <.LBB16_25+0xca>
    8001c37c:	7542                	ld	a0,48(sp)
    8001c37e:	75a2                	ld	a1,40(sp)
    8001c380:	c188                	sw	a0,0(a1)
            guard.inum = self.inum;
    8001c382:	660a                	ld	a2,128(sp)
    8001c384:	00c66683          	lwu	a3,12(a2)
    8001c388:	0128                	addi	a0,sp,136
    8001c38a:	f036                	sd	a3,32(sp)
    8001c38c:	fffeb097          	auipc	ra,0xfffeb
    8001c390:	0de080e7          	jalr	222(ra) # 8000746a <_ZN95_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hc2409d72e70bd65fE>
    8001c394:	ec2a                	sd	a0,24(sp)
    8001c396:	a009                	j	8001c398 <.LBB16_25+0xe6>
    8001c398:	7502                	ld	a0,32(sp)
    8001c39a:	65e2                	ld	a1,24(sp)
    8001c39c:	c1c8                	sw	a0,4(a1)
    8001c39e:	0128                	addi	a0,sp,136
            if guard.dinode.itype == InodeType::Empty {
    8001c3a0:	fffeb097          	auipc	ra,0xfffeb
    8001c3a4:	0c0080e7          	jalr	192(ra) # 80007460 <_ZN92_$LT$kernel..lock..sleeplock..SleepLockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hccf471c9a757d426E>
    8001c3a8:	e82a                	sd	a0,16(sp)
    8001c3aa:	a009                	j	8001c3ac <.LBB16_25+0xfa>
    8001c3ac:	6542                	ld	a0,16(sp)
    8001c3ae:	0521                	addi	a0,a0,8

000000008001c3b0 <.LBB16_26>:
    8001c3b0:	0000d597          	auipc	a1,0xd
    8001c3b4:	c1058593          	addi	a1,a1,-1008 # 80028fc0 <.L__unnamed_84>
    8001c3b8:	00000097          	auipc	ra,0x0
    8001c3bc:	25e080e7          	jalr	606(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    8001c3c0:	e42a                	sd	a0,8(sp)
    8001c3c2:	a009                	j	8001c3c4 <.LBB16_26+0x14>
    8001c3c4:	4501                	li	a0,0
    8001c3c6:	65a2                	ld	a1,8(sp)
    8001c3c8:	02a58263          	beq	a1,a0,8001c3ec <.LBB16_28+0x16>
    8001c3cc:	a009                	j	8001c3ce <.LBB16_27>

000000008001c3ce <.LBB16_27>:
                panic!("inode lock: trying to lock an inode whose type is empty.")
    8001c3ce:	0000d517          	auipc	a0,0xd
    8001c3d2:	bf450513          	addi	a0,a0,-1036 # 80028fc2 <.L__unnamed_85>

000000008001c3d6 <.LBB16_28>:
    8001c3d6:	0000d617          	auipc	a2,0xd
    8001c3da:	c2a60613          	addi	a2,a2,-982 # 80029000 <.L__unnamed_86>
    8001c3de:	03800593          	li	a1,56
    8001c3e2:	00005097          	auipc	ra,0x5
    8001c3e6:	8e8080e7          	jalr	-1816(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001c3ea:	0000                	unimp
        if !guard.valid {
    8001c3ec:	a009                	j	8001c3ee <.LBB16_28+0x18>
    }
    8001c3ee:	652a                	ld	a0,136(sp)
    8001c3f0:	65ca                	ld	a1,144(sp)
    8001c3f2:	60b6                	ld	ra,328(sp)
    8001c3f4:	6171                	addi	sp,sp,336
    8001c3f6:	8082                	ret

000000008001c3f8 <.LBB16_29>:
        let mut guard = ICACHE.data[self.index].lock();
    8001c3f8:	0000d617          	auipc	a2,0xd
    8001c3fc:	bb060613          	addi	a2,a2,-1104 # 80028fa8 <.L__unnamed_87>
    8001c400:	03200593          	li	a1,50
    8001c404:	7566                	ld	a0,120(sp)
    8001c406:	00005097          	auipc	ra,0x5
    8001c40a:	8f0080e7          	jalr	-1808(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel2fs5inode19locate_inode_offset17he097828cfd4cb659E:

000000008001c410 <_ZN6kernel2fs5inode19locate_inode_offset17he097828cfd4cb659E>:


/// Given an inode number. 
/// Calculate the offset index of this inode inside the block. 
#[inline]
fn locate_inode_offset(inum: u32) -> usize {
    8001c410:	1141                	addi	sp,sp,-16
    8001c412:	85aa                	mv	a1,a0
    8001c414:	c62a                	sw	a0,12(sp)
    inum as usize % IPB
    8001c416:	893d                	andi	a0,a0,15
}
    8001c418:	0141                	addi	sp,sp,16
    8001c41a:	8082                	ret

Disassembly of section .text._ZN6kernel8register7mstatus4read17h1c11f047e9dd2f6eE:

000000008001c41c <_ZN6kernel8register7mstatus4read17h1c11f047e9dd2f6eE>:
use bit_field::BitField;


// read register from M mode
#[inline]
unsafe fn read() -> usize {
    8001c41c:	1141                	addi	sp,sp,-16
    let ret:usize;
    llvm_asm!("csrr $0, mstatus":"=r"(ret):::"volatile");
    8001c41e:	30002573          	csrr	a0,mstatus
    8001c422:	e42a                	sd	a0,8(sp)
    ret
}
    8001c424:	0141                	addi	sp,sp,16
    8001c426:	8082                	ret

Disassembly of section .text._ZN6kernel8register7mstatus5write17h19e1065dec3581a3E:

000000008001c428 <_ZN6kernel8register7mstatus5write17h19e1065dec3581a3E>:

// Write into register in M mode
#[inline]
unsafe fn write(x: usize) {
    8001c428:	1141                	addi	sp,sp,-16
    8001c42a:	e42a                	sd	a0,8(sp)
    llvm_asm!("csrw mstatus, $0"::"r"(x)::"volatile");
    8001c42c:	30051073          	csrw	mstatus,a0
}
    8001c430:	0141                	addi	sp,sp,16
    8001c432:	8082                	ret

Disassembly of section .text._ZN6kernel8register7mstatus7set_mpp17hcfadb1e5ecf7ede7E:

000000008001c434 <_ZN6kernel8register7mstatus7set_mpp17hcfadb1e5ecf7ede7E>:

// set M Previous Privilege mode to Supervisor, for mret.
pub unsafe fn set_mpp(){
    8001c434:	1141                	addi	sp,sp,-16
    let mut x = read();
    8001c436:	e406                	sd	ra,8(sp)
    8001c438:	00000097          	auipc	ra,0x0
    8001c43c:	fe4080e7          	jalr	-28(ra) # 8001c41c <_ZN6kernel8register7mstatus4read17h1c11f047e9dd2f6eE>
    8001c440:	e02a                	sd	a0,0(sp)
    8001c442:	a009                	j	8001c444 <_ZN6kernel8register7mstatus7set_mpp17hcfadb1e5ecf7ede7E+0x10>
    x &= !MSTATUS_MPP_MASK;
    8001c444:	6502                	ld	a0,0(sp)
    8001c446:	75f9                	lui	a1,0xffffe
    8001c448:	7ff5859b          	addiw	a1,a1,2047
    8001c44c:	8d6d                	and	a0,a0,a1
    8001c44e:	6585                	lui	a1,0x1
    8001c450:	8005859b          	addiw	a1,a1,-2048
    x |= MSTATUS_MPP_S;
    8001c454:	8d4d                	or	a0,a0,a1
    8001c456:	e02a                	sd	a0,0(sp)
    write(x);
    8001c458:	00000097          	auipc	ra,0x0
    8001c45c:	fd0080e7          	jalr	-48(ra) # 8001c428 <_ZN6kernel8register7mstatus5write17h19e1065dec3581a3E>
    8001c460:	a009                	j	8001c462 <_ZN6kernel8register7mstatus7set_mpp17hcfadb1e5ecf7ede7E+0x2e>
}
    8001c462:	60a2                	ld	ra,8(sp)
    8001c464:	0141                	addi	sp,sp,16
    8001c466:	8082                	ret

Disassembly of section .text._ZN6kernel8register7mstatus16enable_interrupt17he6d92f55d4695a01E:

000000008001c468 <_ZN6kernel8register7mstatus16enable_interrupt17he6d92f55d4695a01E>:

// enable machine-mode interrupts.
pub unsafe fn enable_interrupt(){
    8001c468:	1141                	addi	sp,sp,-16
    let mut mstatus = read();
    8001c46a:	e406                	sd	ra,8(sp)
    8001c46c:	00000097          	auipc	ra,0x0
    8001c470:	fb0080e7          	jalr	-80(ra) # 8001c41c <_ZN6kernel8register7mstatus4read17h1c11f047e9dd2f6eE>
    8001c474:	e02a                	sd	a0,0(sp)
    8001c476:	a009                	j	8001c478 <_ZN6kernel8register7mstatus16enable_interrupt17he6d92f55d4695a01E+0x10>
    8001c478:	850a                	mv	a0,sp
    8001c47a:	458d                	li	a1,3
    8001c47c:	4605                	li	a2,1
    mstatus.set_bit(3, true);
    8001c47e:	fffe9097          	auipc	ra,0xfffe9
    8001c482:	4a0080e7          	jalr	1184(ra) # 8000591e <_ZN45_$LT$usize$u20$as$u20$bit_field..BitField$GT$7set_bit17h7ad29ded6ce22ce0E>
    8001c486:	a009                	j	8001c488 <_ZN6kernel8register7mstatus16enable_interrupt17he6d92f55d4695a01E+0x20>
    write(mstatus);
    8001c488:	6502                	ld	a0,0(sp)
    8001c48a:	00000097          	auipc	ra,0x0
    8001c48e:	f9e080e7          	jalr	-98(ra) # 8001c428 <_ZN6kernel8register7mstatus5write17h19e1065dec3581a3E>
    8001c492:	a009                	j	8001c494 <_ZN6kernel8register7mstatus16enable_interrupt17he6d92f55d4695a01E+0x2c>
}
    8001c494:	60a2                	ld	ra,8(sp)
    8001c496:	0141                	addi	sp,sp,16
    8001c498:	8082                	ret

Disassembly of section .text._ZN6kernel2fs6dinode9DiskInode9try_alloc17hc33eb371bcbcce34E:

000000008001c49a <_ZN6kernel2fs6dinode9DiskInode9try_alloc17hc33eb371bcbcce34E>:
            size: 0,
            addrs: [0; NDIRECT+1]
        }
    }

    pub fn try_alloc(&mut self, itype: InodeType) -> Result<(), ()> {
    8001c49a:	7139                	addi	sp,sp,-64
    8001c49c:	fc06                	sd	ra,56(sp)
    8001c49e:	862e                	mv	a2,a1
    8001c4a0:	f42a                	sd	a0,40(sp)
    8001c4a2:	02b11b23          	sh	a1,54(sp)

000000008001c4a6 <.LBB0_6>:
        if self.itype == InodeType::Empty {
    8001c4a6:	0000d597          	auipc	a1,0xd
    8001c4aa:	b7258593          	addi	a1,a1,-1166 # 80029018 <.L__unnamed_1>
    8001c4ae:	ec2a                	sd	a0,24(sp)
    8001c4b0:	e832                	sd	a2,16(sp)
    8001c4b2:	00000097          	auipc	ra,0x0
    8001c4b6:	164080e7          	jalr	356(ra) # 8001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>
    8001c4ba:	e42a                	sd	a0,8(sp)
    8001c4bc:	a009                	j	8001c4be <.LBB0_6+0x18>
    8001c4be:	4501                	li	a0,0
    8001c4c0:	65a2                	ld	a1,8(sp)
    8001c4c2:	00a58e63          	beq	a1,a0,8001c4de <.LBB0_6+0x38>
    8001c4c6:	a009                	j	8001c4c8 <.LBB0_6+0x22>
    8001c4c8:	4501                	li	a0,0
    8001c4ca:	4605                	li	a2,1
            unsafe { ptr::write_bytes(self, 0, 1); }
    8001c4cc:	65e2                	ld	a1,24(sp)
    8001c4ce:	e02a                	sd	a0,0(sp)
    8001c4d0:	852e                	mv	a0,a1
    8001c4d2:	6582                	ld	a1,0(sp)
    8001c4d4:	fffe9097          	auipc	ra,0xfffe9
    8001c4d8:	518080e7          	jalr	1304(ra) # 800059ec <_ZN4core10intrinsics11write_bytes17h2c81542382cc4d54E>
    8001c4dc:	a029                	j	8001c4e6 <.LBB0_6+0x40>
    8001c4de:	4505                	li	a0,1
            self.itype = itype;
            Ok(())
        } else {
            Err(())
    8001c4e0:	02a103a3          	sb	a0,39(sp)
        if self.itype == InodeType::Empty {
    8001c4e4:	a809                	j	8001c4f6 <.LBB0_6+0x50>
            self.itype = itype;
    8001c4e6:	6542                	ld	a0,16(sp)
    8001c4e8:	65e2                	ld	a1,24(sp)
    8001c4ea:	00a59023          	sh	a0,0(a1)
    8001c4ee:	4601                	li	a2,0
            Ok(())
    8001c4f0:	02c103a3          	sb	a2,39(sp)
        if self.itype == InodeType::Empty {
    8001c4f4:	a009                	j	8001c4f6 <.LBB0_6+0x50>
        }
    }
    8001c4f6:	02714503          	lbu	a0,39(sp)
    8001c4fa:	70e2                	ld	ra,56(sp)
    8001c4fc:	6121                	addi	sp,sp,64
    8001c4fe:	8082                	ret

Disassembly of section .text._ZN6kernel2fs6dinode8DirEntry3new17hcd512c4d9b1c2df4E:

000000008001c500 <_ZN6kernel2fs6dinode8DirEntry3new17hcd512c4d9b1c2df4E>:
}

impl DirEntry {
    pub const fn new() -> Self {
    8001c500:	7179                	addi	sp,sp,-48
    8001c502:	f406                	sd	ra,40(sp)
    8001c504:	4501                	li	a0,0
        Self {
            inum: 0,
            name: [0;DIRSIZ]
    8001c506:	02a11223          	sh	a0,36(sp)
    8001c50a:	d02a                	sw	a0,32(sp)
    8001c50c:	ec2a                	sd	a0,24(sp)
        Self {
    8001c50e:	00a11423          	sh	a0,8(sp)
    8001c512:	0028                	addi	a0,sp,8
    8001c514:	00256513          	ori	a0,a0,2
    8001c518:	082c                	addi	a1,sp,24
    8001c51a:	4639                	li	a2,14
    8001c51c:	00007097          	auipc	ra,0x7
    8001c520:	344080e7          	jalr	836(ra) # 80023860 <memcpy>
        }
    }
    8001c524:	65a2                	ld	a1,8(sp)
    8001c526:	6642                	ld	a2,16(sp)
    8001c528:	e02a                	sd	a0,0(sp)
    8001c52a:	852e                	mv	a0,a1
    8001c52c:	85b2                	mv	a1,a2
    8001c52e:	70a2                	ld	ra,40(sp)
    8001c530:	6145                	addi	sp,sp,48
    8001c532:	8082                	ret

Disassembly of section .text._ZN66_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..fmt..Debug$GT$3fmt17h5876def64c023f07E:

000000008001c534 <_ZN66_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..fmt..Debug$GT$3fmt17h5876def64c023f07E>:
#[derive(Clone, Copy, PartialEq, Eq, Debug)]
    8001c534:	7135                	addi	sp,sp,-160
    8001c536:	ed06                	sd	ra,152(sp)
    8001c538:	e52a                	sd	a0,136(sp)
    8001c53a:	e92e                	sd	a1,144(sp)
    8001c53c:	f02a                	sd	a0,32(sp)
    8001c53e:	00055503          	lhu	a0,0(a0)
    8001c542:	4601                	li	a2,0
    8001c544:	e82e                	sd	a1,16(sp)
    8001c546:	e42a                	sd	a0,8(sp)
    8001c548:	02c50a63          	beq	a0,a2,8001c57c <.LBB2_19>
    8001c54c:	a009                	j	8001c54e <_ZN66_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..fmt..Debug$GT$3fmt17h5876def64c023f07E+0x1a>
    8001c54e:	4505                	li	a0,1
    8001c550:	65a2                	ld	a1,8(sp)
    8001c552:	04a58a63          	beq	a1,a0,8001c5a6 <.LBB2_20>
    8001c556:	a009                	j	8001c558 <_ZN66_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..fmt..Debug$GT$3fmt17h5876def64c023f07E+0x24>
    8001c558:	4509                	li	a0,2
    8001c55a:	65a2                	ld	a1,8(sp)
    8001c55c:	06a58a63          	beq	a1,a0,8001c5d0 <.LBB2_21>
    8001c560:	a009                	j	8001c562 <.LBB2_18>

000000008001c562 <.LBB2_18>:
    8001c562:	0000d617          	auipc	a2,0xd
    8001c566:	ab860613          	addi	a2,a2,-1352 # 8002901a <.L__unnamed_2>
    8001c56a:	1888                	addi	a0,sp,112
    8001c56c:	4699                	li	a3,6
    8001c56e:	65c2                	ld	a1,16(sp)
    8001c570:	00005097          	auipc	ra,0x5
    8001c574:	530080e7          	jalr	1328(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001c578:	a049                	j	8001c5fa <.LBB2_21+0x2a>
	...

000000008001c57c <.LBB2_19>:
    8001c57c:	0000d617          	auipc	a2,0xd
    8001c580:	aad60613          	addi	a2,a2,-1363 # 80029029 <.L__unnamed_3>
    8001c584:	1028                	addi	a0,sp,40
    8001c586:	4695                	li	a3,5
    8001c588:	65c2                	ld	a1,16(sp)
    8001c58a:	00005097          	auipc	ra,0x5
    8001c58e:	516080e7          	jalr	1302(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001c592:	a009                	j	8001c594 <.LBB2_19+0x18>
    8001c594:	1028                	addi	a0,sp,40
    8001c596:	00005097          	auipc	ra,0x5
    8001c59a:	b5c080e7          	jalr	-1188(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001c59e:	00a10fa3          	sb	a0,31(sp)
    8001c5a2:	a009                	j	8001c5a4 <.LBB2_19+0x28>
    8001c5a4:	a0a5                	j	8001c60c <.LBB2_21+0x3c>

000000008001c5a6 <.LBB2_20>:
    8001c5a6:	0000d617          	auipc	a2,0xd
    8001c5aa:	a7a60613          	addi	a2,a2,-1414 # 80029020 <.L__unnamed_4>
    8001c5ae:	0088                	addi	a0,sp,64
    8001c5b0:	46a5                	li	a3,9
    8001c5b2:	65c2                	ld	a1,16(sp)
    8001c5b4:	00005097          	auipc	ra,0x5
    8001c5b8:	4ec080e7          	jalr	1260(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001c5bc:	a009                	j	8001c5be <.LBB2_20+0x18>
    8001c5be:	0088                	addi	a0,sp,64
    8001c5c0:	00005097          	auipc	ra,0x5
    8001c5c4:	b32080e7          	jalr	-1230(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001c5c8:	00a10fa3          	sb	a0,31(sp)
    8001c5cc:	a009                	j	8001c5ce <.LBB2_20+0x28>
    8001c5ce:	a83d                	j	8001c60c <.LBB2_21+0x3c>

000000008001c5d0 <.LBB2_21>:
    8001c5d0:	00008617          	auipc	a2,0x8
    8001c5d4:	24860613          	addi	a2,a2,584 # 80024818 <.L__unnamed_4+0x30>
    8001c5d8:	08a8                	addi	a0,sp,88
    8001c5da:	4691                	li	a3,4
    8001c5dc:	65c2                	ld	a1,16(sp)
    8001c5de:	00005097          	auipc	ra,0x5
    8001c5e2:	4c2080e7          	jalr	1218(ra) # 80021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>
    8001c5e6:	a009                	j	8001c5e8 <.LBB2_21+0x18>
    8001c5e8:	08a8                	addi	a0,sp,88
    8001c5ea:	00005097          	auipc	ra,0x5
    8001c5ee:	b08080e7          	jalr	-1272(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001c5f2:	00a10fa3          	sb	a0,31(sp)
    8001c5f6:	a009                	j	8001c5f8 <.LBB2_21+0x28>
    8001c5f8:	a811                	j	8001c60c <.LBB2_21+0x3c>
    8001c5fa:	1888                	addi	a0,sp,112
    8001c5fc:	00005097          	auipc	ra,0x5
    8001c600:	af6080e7          	jalr	-1290(ra) # 800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>
    8001c604:	00a10fa3          	sb	a0,31(sp)
    8001c608:	a009                	j	8001c60a <.LBB2_21+0x3a>
    8001c60a:	a009                	j	8001c60c <.LBB2_21+0x3c>
    8001c60c:	01f14503          	lbu	a0,31(sp)
    8001c610:	60ea                	ld	ra,152(sp)
    8001c612:	610d                	addi	sp,sp,160
    8001c614:	8082                	ret

Disassembly of section .text._ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE:

000000008001c616 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE>:
    8001c616:	1101                	addi	sp,sp,-32
    8001c618:	e42a                	sd	a0,8(sp)
    8001c61a:	e82e                	sd	a1,16(sp)
    8001c61c:	00055503          	lhu	a0,0(a0)
    8001c620:	00a11e23          	sh	a0,28(sp)
    8001c624:	0005d583          	lhu	a1,0(a1)
    8001c628:	00b11f23          	sh	a1,30(sp)
    8001c62c:	00b51763          	bne	a0,a1,8001c63a <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x24>
    8001c630:	a009                	j	8001c632 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x1c>
    8001c632:	4505                	li	a0,1
    8001c634:	00a103a3          	sb	a0,7(sp)
    8001c638:	a029                	j	8001c642 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x2c>
    8001c63a:	4501                	li	a0,0
    8001c63c:	00a103a3          	sb	a0,7(sp)
    8001c640:	a009                	j	8001c642 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x2c>
    8001c642:	00714503          	lbu	a0,7(sp)
    8001c646:	8905                	andi	a0,a0,1
    8001c648:	4581                	li	a1,0
    8001c64a:	00b50763          	beq	a0,a1,8001c658 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x42>
    8001c64e:	a009                	j	8001c650 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x3a>
    8001c650:	4505                	li	a0,1
    8001c652:	00a10323          	sb	a0,6(sp)
    8001c656:	a029                	j	8001c660 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x4a>
    8001c658:	4501                	li	a0,0
    8001c65a:	00a10323          	sb	a0,6(sp)
    8001c65e:	a009                	j	8001c660 <_ZN70_$LT$kernel..fs..dinode..InodeType$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc87978da7059973bE+0x4a>
    8001c660:	00614503          	lbu	a0,6(sp)
    8001c664:	6105                	addi	sp,sp,32
    8001c666:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h24efafb9972ab448E:

000000008001c668 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h24efafb9972ab448E>:
    pub const unsafe fn add(self, count: usize) -> Self
    8001c668:	1101                	addi	sp,sp,-32
    8001c66a:	ec06                	sd	ra,24(sp)
    8001c66c:	e42a                	sd	a0,8(sp)
    8001c66e:	e82e                	sd	a1,16(sp)
        unsafe { self.offset(count as isize) }
    8001c670:	00000097          	auipc	ra,0x0
    8001c674:	046080e7          	jalr	70(ra) # 8001c6b6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he43ab1f6e6d36455E>
    8001c678:	e02a                	sd	a0,0(sp)
    8001c67a:	a009                	j	8001c67c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h24efafb9972ab448E+0x14>
    }
    8001c67c:	6502                	ld	a0,0(sp)
    8001c67e:	60e2                	ld	ra,24(sp)
    8001c680:	6105                	addi	sp,sp,32
    8001c682:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E:

000000008001c684 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    8001c684:	7179                	addi	sp,sp,-48
    8001c686:	f406                	sd	ra,40(sp)
    8001c688:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    8001c68a:	e82a                	sd	a0,16(sp)
    8001c68c:	00000097          	auipc	ra,0x0
    8001c690:	068080e7          	jalr	104(ra) # 8001c6f4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb22997d0da6b1bb5E>
    8001c694:	e42a                	sd	a0,8(sp)
    8001c696:	a009                	j	8001c698 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E+0x14>
    8001c698:	4501                	li	a0,0
    8001c69a:	65a2                	ld	a1,8(sp)
    8001c69c:	00a58663          	beq	a1,a0,8001c6a8 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E+0x24>
    8001c6a0:	a009                	j	8001c6a2 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E+0x1e>
    8001c6a2:	4501                	li	a0,0
    8001c6a4:	ec2a                	sd	a0,24(sp)
    8001c6a6:	a021                	j	8001c6ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E+0x2a>
    8001c6a8:	6542                	ld	a0,16(sp)
    8001c6aa:	ec2a                	sd	a0,24(sp)
    8001c6ac:	a009                	j	8001c6ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h1d95bcc536957113E+0x2a>
    }
    8001c6ae:	6562                	ld	a0,24(sp)
    8001c6b0:	70a2                	ld	ra,40(sp)
    8001c6b2:	6145                	addi	sp,sp,48
    8001c6b4:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he43ab1f6e6d36455E:

000000008001c6b6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he43ab1f6e6d36455E>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    8001c6b6:	1101                	addi	sp,sp,-32
    8001c6b8:	e42a                	sd	a0,8(sp)
    8001c6ba:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) as *mut T }
    8001c6bc:	059a                	slli	a1,a1,0x6
    8001c6be:	952e                	add	a0,a0,a1
    8001c6c0:	ec2a                	sd	a0,24(sp)
    8001c6c2:	e02a                	sd	a0,0(sp)
    8001c6c4:	a009                	j	8001c6c6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17he43ab1f6e6d36455E+0x10>
    }
    8001c6c6:	6502                	ld	a0,0(sp)
    8001c6c8:	6105                	addi	sp,sp,32
    8001c6ca:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1293cd13a0b60abaE:

000000008001c6cc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1293cd13a0b60abaE>:
    pub const fn is_null(self) -> bool {
    8001c6cc:	7179                	addi	sp,sp,-48
    8001c6ce:	f406                	sd	ra,40(sp)
    8001c6d0:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    8001c6d2:	ec2a                	sd	a0,24(sp)
    8001c6d4:	a009                	j	8001c6d6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1293cd13a0b60abaE+0xa>
    8001c6d6:	4501                	li	a0,0
    8001c6d8:	65e2                	ld	a1,24(sp)
    8001c6da:	e82a                	sd	a0,16(sp)
    8001c6dc:	852e                	mv	a0,a1
    8001c6de:	65c2                	ld	a1,16(sp)
    8001c6e0:	00004097          	auipc	ra,0x4
    8001c6e4:	2ce080e7          	jalr	718(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    8001c6e8:	e42a                	sd	a0,8(sp)
    8001c6ea:	a009                	j	8001c6ec <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1293cd13a0b60abaE+0x20>
    }
    8001c6ec:	6522                	ld	a0,8(sp)
    8001c6ee:	70a2                	ld	ra,40(sp)
    8001c6f0:	6145                	addi	sp,sp,48
    8001c6f2:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb22997d0da6b1bb5E:

000000008001c6f4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb22997d0da6b1bb5E>:
    pub const fn is_null(self) -> bool {
    8001c6f4:	7179                	addi	sp,sp,-48
    8001c6f6:	f406                	sd	ra,40(sp)
    8001c6f8:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    8001c6fa:	ec2a                	sd	a0,24(sp)
    8001c6fc:	a009                	j	8001c6fe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb22997d0da6b1bb5E+0xa>
    8001c6fe:	4501                	li	a0,0
    8001c700:	65e2                	ld	a1,24(sp)
    8001c702:	e82a                	sd	a0,16(sp)
    8001c704:	852e                	mv	a0,a1
    8001c706:	65c2                	ld	a1,16(sp)
    8001c708:	00004097          	auipc	ra,0x4
    8001c70c:	2a6080e7          	jalr	678(ra) # 800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>
    8001c710:	e42a                	sd	a0,8(sp)
    8001c712:	a009                	j	8001c714 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb22997d0da6b1bb5E+0x20>
    }
    8001c714:	6522                	ld	a0,8(sp)
    8001c716:	70a2                	ld	ra,40(sp)
    8001c718:	6145                	addi	sp,sp,48
    8001c71a:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7d432c62e5d13a28E:

000000008001c71c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7d432c62e5d13a28E>:
    pub const fn as_mut_ptr(&mut self) -> *mut T {
    8001c71c:	1141                	addi	sp,sp,-16
    8001c71e:	e02a                	sd	a0,0(sp)
    8001c720:	e42e                	sd	a1,8(sp)
    }
    8001c722:	0141                	addi	sp,sp,16
    8001c724:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc45360ff381e0a5dE:

000000008001c726 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc45360ff381e0a5dE>:
    pub const fn len(&self) -> usize {
    8001c726:	1101                	addi	sp,sp,-32
    8001c728:	e82a                	sd	a0,16(sp)
    8001c72a:	ec2e                	sd	a1,24(sp)
        unsafe { crate::ptr::Repr { rust: self }.raw.len }
    8001c72c:	e02a                	sd	a0,0(sp)
    8001c72e:	e42e                	sd	a1,8(sp)
    }
    8001c730:	852e                	mv	a0,a1
    8001c732:	6105                	addi	sp,sp,32
    8001c734:	8082                	ret

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17heb568913a42125a3E:

000000008001c736 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17heb568913a42125a3E>:
    pub fn iter_mut(&mut self) -> IterMut<'_, T> {
    8001c736:	7179                	addi	sp,sp,-48
    8001c738:	f406                	sd	ra,40(sp)
    8001c73a:	ec2a                	sd	a0,24(sp)
    8001c73c:	f02e                	sd	a1,32(sp)
        IterMut::new(self)
    8001c73e:	ffff6097          	auipc	ra,0xffff6
    8001c742:	7b4080e7          	jalr	1972(ra) # 80012ef2 <_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h0b96573e6f91bc7cE>
    8001c746:	e82a                	sd	a0,16(sp)
    8001c748:	e42e                	sd	a1,8(sp)
    8001c74a:	a009                	j	8001c74c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17heb568913a42125a3E+0x16>
    }
    8001c74c:	6542                	ld	a0,16(sp)
    8001c74e:	65a2                	ld	a1,8(sp)
    8001c750:	70a2                	ld	ra,40(sp)
    8001c752:	6145                	addi	sp,sp,48
    8001c754:	8082                	ret

Disassembly of section .text._ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E:

000000008001c756 <_ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E>:
    
    pub fn get_table_mut(&mut self) -> &mut [Process; NPROC] {
        &mut self.proc
    }

    pub fn alloc_pid(&mut self) -> usize {
    8001c756:	7139                	addi	sp,sp,-64
    8001c758:	fc06                	sd	ra,56(sp)
    8001c75a:	f42a                	sd	a0,40(sp)
    8001c75c:	65c5                	lui	a1,0x11
    8001c75e:	a085859b          	addiw	a1,a1,-1528
        let mut guard = self.pid_lock.acquire();
    8001c762:	952e                	add	a0,a0,a1
    8001c764:	fffe6097          	auipc	ra,0xfffe6
    8001c768:	b2a080e7          	jalr	-1238(ra) # 8000228e <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h40045d76933e66b9E>
    8001c76c:	f02a                	sd	a0,32(sp)
    8001c76e:	a009                	j	8001c770 <_ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E+0x1a>
    8001c770:	1008                	addi	a0,sp,32
        let pid;       
        *guard += 1;
    8001c772:	fffe7097          	auipc	ra,0xfffe7
    8001c776:	22a080e7          	jalr	554(ra) # 8000399c <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6ba8d8739836030bE>
    8001c77a:	ec2a                	sd	a0,24(sp)
    8001c77c:	a009                	j	8001c77e <_ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E+0x28>
    8001c77e:	6562                	ld	a0,24(sp)
    8001c780:	610c                	ld	a1,0(a0)
    8001c782:	00158613          	addi	a2,a1,1 # 11001 <.Lline_table_start0+0x1f0>
    8001c786:	e832                	sd	a2,16(sp)
    8001c788:	02b66b63          	bltu	a2,a1,8001c7be <.LBB0_7>
    8001c78c:	a009                	j	8001c78e <_ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E+0x38>
    8001c78e:	6542                	ld	a0,16(sp)
    8001c790:	65e2                	ld	a1,24(sp)
    8001c792:	e188                	sd	a0,0(a1)
    8001c794:	1008                	addi	a0,sp,32
        pid = *guard;        
    8001c796:	fffe7097          	auipc	ra,0xfffe7
    8001c79a:	0c8080e7          	jalr	200(ra) # 8000385e <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h52b5113a9e8a7318E>
    8001c79e:	e42a                	sd	a0,8(sp)
    8001c7a0:	a009                	j	8001c7a2 <_ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E+0x4c>
    8001c7a2:	6522                	ld	a0,8(sp)
    8001c7a4:	610c                	ld	a1,0(a0)
    8001c7a6:	f82e                	sd	a1,48(sp)
        drop(guard);
    8001c7a8:	7502                	ld	a0,32(sp)
    8001c7aa:	e02e                	sd	a1,0(sp)
    8001c7ac:	ffff1097          	auipc	ra,0xffff1
    8001c7b0:	22e080e7          	jalr	558(ra) # 8000d9da <_ZN4core3mem4drop17hb46a08cef9bf9f0dE>
    8001c7b4:	a009                	j	8001c7b6 <_ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E+0x60>
        pid
    }
    8001c7b6:	6502                	ld	a0,0(sp)
    8001c7b8:	70e2                	ld	ra,56(sp)
    8001c7ba:	6121                	addi	sp,sp,64
    8001c7bc:	8082                	ret

000000008001c7be <.LBB0_7>:
        *guard += 1;
    8001c7be:	0000d517          	auipc	a0,0xd
    8001c7c2:	8b250513          	addi	a0,a0,-1870 # 80029070 <str.0>

000000008001c7c6 <.LBB0_8>:
    8001c7c6:	0000d617          	auipc	a2,0xd
    8001c7ca:	89260613          	addi	a2,a2,-1902 # 80029058 <.L__unnamed_1>
    8001c7ce:	45f1                	li	a1,28
    8001c7d0:	00004097          	auipc	ra,0x4
    8001c7d4:	4fa080e7          	jalr	1274(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process7manager11ProcManager4init17h494f3524acf9e139E:

000000008001c7da <_ZN6kernel7process7manager11ProcManager4init17h494f3524acf9e139E>:

    /// initialize the proc table at boot time.
    /// Only used in boot.
    pub unsafe fn init(&mut self){
    8001c7da:	7151                	addi	sp,sp,-240
    8001c7dc:	f586                	sd	ra,232(sp)
    8001c7de:	f92a                	sd	a0,176(sp)

000000008001c7e0 <.LBB1_14>:
        println!("process init......");
    8001c7e0:	0000d597          	auipc	a1,0xd
    8001c7e4:	8c058593          	addi	a1,a1,-1856 # 800290a0 <.L__unnamed_2>

000000008001c7e8 <.LBB1_15>:
    8001c7e8:	0000d697          	auipc	a3,0xd
    8001c7ec:	8c868693          	addi	a3,a3,-1848 # 800290b0 <.L__unnamed_39>
    8001c7f0:	1030                	addi	a2,sp,40
    8001c7f2:	4705                	li	a4,1
    8001c7f4:	4781                	li	a5,0
    8001c7f6:	f02a                	sd	a0,32(sp)
    8001c7f8:	8532                	mv	a0,a2
    8001c7fa:	863a                	mv	a2,a4
    8001c7fc:	873e                	mv	a4,a5
    8001c7fe:	fffe9097          	auipc	ra,0xfffe9
    8001c802:	f26080e7          	jalr	-218(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001c806:	a009                	j	8001c808 <.LBB1_15+0x20>
    8001c808:	1028                	addi	a0,sp,40
    8001c80a:	ffff4097          	auipc	ra,0xffff4
    8001c80e:	4e6080e7          	jalr	1254(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8001c812:	a009                	j	8001c814 <.LBB1_15+0x2c>
    8001c814:	04000593          	li	a1,64
        for (pos, proc) in self.proc.iter_mut().enumerate() {
    8001c818:	7502                	ld	a0,32(sp)
    8001c81a:	fffe9097          	auipc	ra,0xfffe9
    8001c81e:	570080e7          	jalr	1392(ra) # 80005d8a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h9b081b90140a954cE>
    8001c822:	ec2a                	sd	a0,24(sp)
    8001c824:	e82e                	sd	a1,16(sp)
    8001c826:	a009                	j	8001c828 <.LBB1_15+0x40>
    8001c828:	1888                	addi	a0,sp,112
    8001c82a:	65e2                	ld	a1,24(sp)
    8001c82c:	6642                	ld	a2,16(sp)
    8001c82e:	ffff6097          	auipc	ra,0xffff6
    8001c832:	53e080e7          	jalr	1342(ra) # 80012d6c <_ZN4core4iter6traits8iterator8Iterator9enumerate17ha616abde0bf88ed2E>
    8001c836:	a009                	j	8001c838 <.LBB1_15+0x50>
    8001c838:	08a8                	addi	a0,sp,88
    8001c83a:	188c                	addi	a1,sp,112
    8001c83c:	ffffa097          	auipc	ra,0xffffa
    8001c840:	978080e7          	jalr	-1672(ra) # 800161b4 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h829219028a2b95f9E>
    8001c844:	a009                	j	8001c846 <.LBB1_15+0x5e>
    8001c846:	7526                	ld	a0,104(sp)
    8001c848:	ed2a                	sd	a0,152(sp)
    8001c84a:	7506                	ld	a0,96(sp)
    8001c84c:	e92a                	sd	a0,144(sp)
    8001c84e:	6566                	ld	a0,88(sp)
    8001c850:	e52a                	sd	a0,136(sp)
    8001c852:	a009                	j	8001c854 <.LBB1_15+0x6c>
    8001c854:	0128                	addi	a0,sp,136
    8001c856:	ffffa097          	auipc	ra,0xffffa
    8001c85a:	866080e7          	jalr	-1946(ra) # 800160bc <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E>
    8001c85e:	f12a                	sd	a0,160(sp)
    8001c860:	f52e                	sd	a1,168(sp)
    8001c862:	a009                	j	8001c864 <.LBB1_15+0x7c>
    8001c864:	752a                	ld	a0,168(sp)
    8001c866:	00a035b3          	snez	a1,a0
    8001c86a:	4601                	li	a2,0
    8001c86c:	00c50463          	beq	a0,a2,8001c874 <.LBB1_15+0x8c>
    8001c870:	a009                	j	8001c872 <.LBB1_15+0x8a>
    8001c872:	a029                	j	8001c87c <.LBB1_15+0x94>
            proc.init(kernel_stack(pos));
        }
    }
    8001c874:	70ae                	ld	ra,232(sp)
    8001c876:	616d                	addi	sp,sp,240
    8001c878:	8082                	ret
        for (pos, proc) in self.proc.iter_mut().enumerate() {
    8001c87a:	0000                	unimp
    8001c87c:	750a                	ld	a0,160(sp)
    8001c87e:	75aa                	ld	a1,168(sp)
    8001c880:	fd2a                	sd	a0,184(sp)
    8001c882:	e1ae                	sd	a1,192(sp)
    8001c884:	e5aa                	sd	a0,200(sp)
    8001c886:	e9ae                	sd	a1,208(sp)
    8001c888:	edaa                	sd	a0,216(sp)
    8001c88a:	f1ae                	sd	a1,224(sp)
            proc.init(kernel_stack(pos));
    8001c88c:	e42e                	sd	a1,8(sp)
    8001c88e:	00001097          	auipc	ra,0x1
    8001c892:	d72080e7          	jalr	-654(ra) # 8001d600 <_ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E>
    8001c896:	e02a                	sd	a0,0(sp)
    8001c898:	a009                	j	8001c89a <.LBB1_15+0xb2>
    8001c89a:	6522                	ld	a0,8(sp)
    8001c89c:	6582                	ld	a1,0(sp)
    8001c89e:	ffff5097          	auipc	ra,0xffff5
    8001c8a2:	602080e7          	jalr	1538(ra) # 80011ea0 <_ZN6kernel7process7process7Process4init17h940368e51372f2eaE>
    8001c8a6:	a009                	j	8001c8a8 <.LBB1_15+0xc0>
        for (pos, proc) in self.proc.iter_mut().enumerate() {
    8001c8a8:	b775                	j	8001c854 <.LBB1_15+0x6c>

Disassembly of section .text._ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE:

000000008001c8aa <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE>:

    /// Allocate 4 page for each process's kernel stack.
    /// Map it high in memory, followed by an invalid 
    /// group page
    pub unsafe fn proc_mapstacks(&mut self) {
    8001c8aa:	7115                	addi	sp,sp,-224
    8001c8ac:	ed86                	sd	ra,216(sp)
    8001c8ae:	ed2a                	sd	a0,152(sp)
    8001c8b0:	04000593          	li	a1,64
        for (pos, _) in self.proc.iter_mut().enumerate() {
    8001c8b4:	fffe9097          	auipc	ra,0xfffe9
    8001c8b8:	4d6080e7          	jalr	1238(ra) # 80005d8a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h9b081b90140a954cE>
    8001c8bc:	fc2a                	sd	a0,56(sp)
    8001c8be:	f82e                	sd	a1,48(sp)
    8001c8c0:	a009                	j	8001c8c2 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x18>
    8001c8c2:	08a8                	addi	a0,sp,88
    8001c8c4:	75e2                	ld	a1,56(sp)
    8001c8c6:	7642                	ld	a2,48(sp)
    8001c8c8:	ffff6097          	auipc	ra,0xffff6
    8001c8cc:	4a4080e7          	jalr	1188(ra) # 80012d6c <_ZN4core4iter6traits8iterator8Iterator9enumerate17ha616abde0bf88ed2E>
    8001c8d0:	a009                	j	8001c8d2 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x28>
    8001c8d2:	0088                	addi	a0,sp,64
    8001c8d4:	08ac                	addi	a1,sp,88
    8001c8d6:	ffffa097          	auipc	ra,0xffffa
    8001c8da:	8de080e7          	jalr	-1826(ra) # 800161b4 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h829219028a2b95f9E>
    8001c8de:	a009                	j	8001c8e0 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x36>
    8001c8e0:	6546                	ld	a0,80(sp)
    8001c8e2:	e12a                	sd	a0,128(sp)
    8001c8e4:	6526                	ld	a0,72(sp)
    8001c8e6:	fcaa                	sd	a0,120(sp)
    8001c8e8:	6506                	ld	a0,64(sp)
    8001c8ea:	f8aa                	sd	a0,112(sp)
    8001c8ec:	a009                	j	8001c8ee <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x44>
    8001c8ee:	1888                	addi	a0,sp,112
    8001c8f0:	ffff9097          	auipc	ra,0xffff9
    8001c8f4:	7cc080e7          	jalr	1996(ra) # 800160bc <_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48ee44b316e18be7E>
    8001c8f8:	e52a                	sd	a0,136(sp)
    8001c8fa:	e92e                	sd	a1,144(sp)
    8001c8fc:	a009                	j	8001c8fe <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x54>
    8001c8fe:	654a                	ld	a0,144(sp)
    8001c900:	00a035b3          	snez	a1,a0
    8001c904:	4601                	li	a2,0
    8001c906:	00c50463          	beq	a0,a2,8001c90e <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x64>
    8001c90a:	a009                	j	8001c90c <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x62>
    8001c90c:	a029                	j	8001c916 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x6c>
                PGSIZE * 4,
                PteFlags::R | PteFlags::W
            );
            
        }
    }
    8001c90e:	60ee                	ld	ra,216(sp)
    8001c910:	612d                	addi	sp,sp,224
    8001c912:	8082                	ret
        for (pos, _) in self.proc.iter_mut().enumerate() {
    8001c914:	0000                	unimp
    8001c916:	652a                	ld	a0,136(sp)
    8001c918:	65ca                	ld	a1,144(sp)
    8001c91a:	f12a                	sd	a0,160(sp)
    8001c91c:	f52e                	sd	a1,168(sp)
    8001c91e:	f92a                	sd	a0,176(sp)
    8001c920:	fd2e                	sd	a1,184(sp)
    8001c922:	e1aa                	sd	a0,192(sp)
            let pa = Stack::new_zeroed();
    8001c924:	f42a                	sd	a0,40(sp)
    8001c926:	fffeb097          	auipc	ra,0xfffeb
    8001c92a:	bbc080e7          	jalr	-1092(ra) # 800074e2 <_ZN6kernel6memory13PageAllocator10new_zeroed17h2661979a9606057fE>
    8001c92e:	85aa                	mv	a1,a0
    8001c930:	e5aa                	sd	a0,200(sp)
    8001c932:	f02e                	sd	a1,32(sp)
    8001c934:	a009                	j	8001c936 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x8c>
            let va = kernel_stack(pos);
    8001c936:	7522                	ld	a0,40(sp)
    8001c938:	00001097          	auipc	ra,0x1
    8001c93c:	cc8080e7          	jalr	-824(ra) # 8001d600 <_ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E>
    8001c940:	85aa                	mv	a1,a0
    8001c942:	e9aa                	sd	a0,208(sp)
    8001c944:	ec2e                	sd	a1,24(sp)
    8001c946:	a009                	j	8001c948 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x9e>
                VirtualAddress::new(va),
    8001c948:	6562                	ld	a0,24(sp)
    8001c94a:	fffeb097          	auipc	ra,0xfffeb
    8001c94e:	1ce080e7          	jalr	462(ra) # 80007b18 <_ZN6kernel6memory7address14VirtualAddress3new17h07b5bf349eaa0dc5E>
    8001c952:	e82a                	sd	a0,16(sp)
    8001c954:	a009                	j	8001c956 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0xac>
                PhysicalAddress::new(pa),
    8001c956:	7502                	ld	a0,32(sp)
    8001c958:	fffeb097          	auipc	ra,0xfffeb
    8001c95c:	270080e7          	jalr	624(ra) # 80007bc8 <_ZN6kernel6memory7address15PhysicalAddress3new17h80fbde9b29112a38E>
    8001c960:	e42a                	sd	a0,8(sp)
    8001c962:	a009                	j	8001c964 <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0xba>
    8001c964:	4509                	li	a0,2
    8001c966:	4591                	li	a1,4
                PteFlags::R | PteFlags::W
    8001c968:	fffeb097          	auipc	ra,0xfffeb
    8001c96c:	3e0080e7          	jalr	992(ra) # 80007d48 <_ZN93_$LT$kernel..memory..mapping..page_table_entry..PteFlags$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17hd399b7a8a37b8db8E>
    8001c970:	e02a                	sd	a0,0(sp)
    8001c972:	a009                	j	8001c974 <.LBB2_16>

000000008001c974 <.LBB2_16>:
            KERNEL_PAGETABLE.kernel_map(
    8001c974:	00051517          	auipc	a0,0x51
    8001c978:	68c50513          	addi	a0,a0,1676 # 8006e000 <_ZN6kernel6memory7mapping10kernel_map16KERNEL_PAGETABLE17h4c12012bb4d8195eE>
    8001c97c:	6691                	lui	a3,0x4
    8001c97e:	65c2                	ld	a1,16(sp)
    8001c980:	6622                	ld	a2,8(sp)
    8001c982:	6702                	ld	a4,0(sp)
    8001c984:	ffff3097          	auipc	ra,0xffff3
    8001c988:	9fc080e7          	jalr	-1540(ra) # 8000f380 <_ZN6kernel6memory7mapping10page_table9PageTable10kernel_map17hc45a6fb493be8c65E>
    8001c98c:	a009                	j	8001c98e <.LBB2_16+0x1a>
        for (pos, _) in self.proc.iter_mut().enumerate() {
    8001c98e:	b785                	j	8001c8ee <_ZN6kernel7process7manager11ProcManager14proc_mapstacks17h1c2b87e59e6cee8dE+0x44>

Disassembly of section .text._ZN6kernel7process7manager11ProcManager9user_init17hda019df891142d1aE:

000000008001c990 <_ZN6kernel7process7manager11ProcManager9user_init17hda019df891142d1aE>:

    /// Set up first user programe
    pub unsafe fn user_init(&mut self) {
    8001c990:	716d                	addi	sp,sp,-272
    8001c992:	e606                	sd	ra,264(sp)
    8001c994:	e5aa                	sd	a0,200(sp)

000000008001c996 <.LBB3_17>:
        println!("first user process init......");
    8001c996:	0000c597          	auipc	a1,0xc
    8001c99a:	73a58593          	addi	a1,a1,1850 # 800290d0 <.L__unnamed_4>

000000008001c99e <.LBB3_18>:
    8001c99e:	0000c697          	auipc	a3,0xc
    8001c9a2:	71268693          	addi	a3,a3,1810 # 800290b0 <.L__unnamed_39>
    8001c9a6:	00b0                	addi	a2,sp,72
    8001c9a8:	4705                	li	a4,1
    8001c9aa:	4781                	li	a5,0
    8001c9ac:	e0aa                	sd	a0,64(sp)
    8001c9ae:	8532                	mv	a0,a2
    8001c9b0:	863a                	mv	a2,a4
    8001c9b2:	873e                	mv	a4,a5
    8001c9b4:	fffe9097          	auipc	ra,0xfffe9
    8001c9b8:	d70080e7          	jalr	-656(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001c9bc:	a009                	j	8001c9be <.LBB3_18+0x20>
    8001c9be:	00a8                	addi	a0,sp,72
    8001c9c0:	ffff4097          	auipc	ra,0xffff4
    8001c9c4:	330080e7          	jalr	816(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8001c9c8:	a009                	j	8001c9ca <.LBB3_18+0x2c>
        let p = self.alloc_proc().expect("Fail to get unused process");
    8001c9ca:	6506                	ld	a0,64(sp)
    8001c9cc:	00000097          	auipc	ra,0x0
    8001c9d0:	182080e7          	jalr	386(ra) # 8001cb4e <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E>
    8001c9d4:	fc2a                	sd	a0,56(sp)
    8001c9d6:	a009                	j	8001c9d8 <.LBB3_19>

000000008001c9d8 <.LBB3_19>:
    8001c9d8:	0000c597          	auipc	a1,0xc
    8001c9dc:	70858593          	addi	a1,a1,1800 # 800290e0 <.L__unnamed_5>

000000008001c9e0 <.LBB3_20>:
    8001c9e0:	0000c697          	auipc	a3,0xc
    8001c9e4:	72068693          	addi	a3,a3,1824 # 80029100 <.L__unnamed_6>
    8001c9e8:	4669                	li	a2,26
    8001c9ea:	7562                	ld	a0,56(sp)
    8001c9ec:	ffffc097          	auipc	ra,0xffffc
    8001c9f0:	06e080e7          	jalr	110(ra) # 80018a5a <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E>
    8001c9f4:	85aa                	mv	a1,a0
    8001c9f6:	e9aa                	sd	a0,208(sp)
    8001c9f8:	f82e                	sd	a1,48(sp)
    8001c9fa:	a009                	j	8001c9fc <.LBB3_20+0x1c>

        // allocate one user page and copy init's instructions
        // and data into it.
        let pdata = &mut *p.data.get();
    8001c9fc:	7542                	ld	a0,48(sp)
    8001c9fe:	04050513          	addi	a0,a0,64
    8001ca02:	ffffa097          	auipc	ra,0xffffa
    8001ca06:	f86080e7          	jalr	-122(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8001ca0a:	f42a                	sd	a0,40(sp)
    8001ca0c:	a009                	j	8001ca0e <.LBB3_20+0x2e>
    8001ca0e:	7522                	ld	a0,40(sp)
    8001ca10:	edaa                	sd	a0,216(sp)
        pdata.pagetable.as_mut().unwrap().uvm_init(
    8001ca12:	0541                	addi	a0,a0,16
    8001ca14:	ffffc097          	auipc	ra,0xffffc
    8001ca18:	e20080e7          	jalr	-480(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    8001ca1c:	f02a                	sd	a0,32(sp)
    8001ca1e:	a009                	j	8001ca20 <.LBB3_21>

000000008001ca20 <.LBB3_21>:
    8001ca20:	0000c597          	auipc	a1,0xc
    8001ca24:	6f858593          	addi	a1,a1,1784 # 80029118 <.L__unnamed_7>
    8001ca28:	7502                	ld	a0,32(sp)
    8001ca2a:	ffffc097          	auipc	ra,0xffffc
    8001ca2e:	24c080e7          	jalr	588(ra) # 80018c76 <_ZN4core6option15Option$LT$T$GT$6unwrap17h63107cd1886fb823E>
    8001ca32:	ec2a                	sd	a0,24(sp)
    8001ca34:	a009                	j	8001ca36 <.LBB3_21+0x16>
    8001ca36:	6562                	ld	a0,24(sp)
    8001ca38:	6108                	ld	a0,0(a0)

000000008001ca3a <.LBB3_22>:
    8001ca3a:	00007597          	auipc	a1,0x7
    8001ca3e:	40e58593          	addi	a1,a1,1038 # 80023e48 <_ZN6kernel7process8INITCODE17hbe961173312744adE>
    8001ca42:	03300613          	li	a2,51
    8001ca46:	ffff3097          	auipc	ra,0xffff3
    8001ca4a:	9a2080e7          	jalr	-1630(ra) # 8000f3e8 <_ZN6kernel6memory7mapping10page_table9PageTable8uvm_init17h062356db7c538c0bE>
    8001ca4e:	a009                	j	8001ca50 <.LBB3_22+0x16>
    8001ca50:	6505                	lui	a0,0x1
            &INITCODE,
        );

        pdata.size = PGSIZE;
    8001ca52:	75a2                	ld	a1,40(sp)
    8001ca54:	e588                	sd	a0,8(a1)

        // prepare for the very first "return" from kernel to user. 
        let tf =  &mut *pdata.trapframe;
    8001ca56:	6d88                	ld	a0,24(a1)
    8001ca58:	f1aa                	sd	a0,224(sp)
    8001ca5a:	4601                	li	a2,0
        tf.epc = 0; // user program counter
    8001ca5c:	ed10                	sd	a2,24(a0)

000000008001ca5e <.LBB3_23>:
        tf.sp = 4 * PGSIZE; // user stack pointer
    8001ca5e:	00007617          	auipc	a2,0x7
    8001ca62:	09a60613          	addi	a2,a2,154 # 80023af8 <.L__unnamed_20+0x18>
    8001ca66:	6210                	ld	a2,0(a2)
    8001ca68:	f910                	sd	a2,48(a0)

000000008001ca6a <.LBB3_24>:

        let init_name = b"initname\0";
    8001ca6a:	0000c517          	auipc	a0,0xc
    8001ca6e:	6c650513          	addi	a0,a0,1734 # 80029130 <.L__unnamed_9>
    8001ca72:	f5aa                	sd	a0,232(sp)
    8001ca74:	4625                	li	a2,9
        pdata.set_name(init_name);
    8001ca76:	e82a                	sd	a0,16(sp)
    8001ca78:	852e                	mv	a0,a1
    8001ca7a:	65c2                	ld	a1,16(sp)
    8001ca7c:	ffff5097          	auipc	ra,0xffff5
    8001ca80:	03e080e7          	jalr	62(ra) # 80011aba <_ZN6kernel7process7process8ProcData8set_name17he2cc3f4ed583a386E>
    8001ca84:	a009                	j	8001ca86 <.LBB3_25>

000000008001ca86 <.LBB3_25>:
        // Set init process's directory
        pdata.cwd = Some(ICACHE.namei(&ROOTIPATH).expect("cannot find root inode"));
    8001ca86:	0003d597          	auipc	a1,0x3d
    8001ca8a:	6aa58593          	addi	a1,a1,1706 # 8005a130 <_ZN6kernel2fs5inode6ICACHE17h2d12928788e72c02E>

000000008001ca8e <.LBB3_26>:
    8001ca8e:	0000c617          	auipc	a2,0xc
    8001ca92:	6ab60613          	addi	a2,a2,1707 # 80029139 <.L__unnamed_10>
    8001ca96:	1108                	addi	a0,sp,160
    8001ca98:	4689                	li	a3,2
    8001ca9a:	ffffe097          	auipc	ra,0xffffe
    8001ca9e:	d18080e7          	jalr	-744(ra) # 8001a7b2 <_ZN6kernel2fs5inode10InodeCache5namei17h40291e200b605147E>
    8001caa2:	a009                	j	8001caa4 <.LBB3_27>

000000008001caa4 <.LBB3_27>:
    8001caa4:	0000c597          	auipc	a1,0xc
    8001caa8:	69758593          	addi	a1,a1,1687 # 8002913b <.L__unnamed_11>

000000008001caac <.LBB3_28>:
    8001caac:	0000c697          	auipc	a3,0xc
    8001cab0:	6ac68693          	addi	a3,a3,1708 # 80029158 <.L__unnamed_12>
    8001cab4:	1108                	addi	a0,sp,160
    8001cab6:	4659                	li	a2,22
    8001cab8:	ffffc097          	auipc	ra,0xffffc
    8001cabc:	ec4080e7          	jalr	-316(ra) # 8001897c <_ZN4core6option15Option$LT$T$GT$6expect17h69fb57eecd79a791E>
    8001cac0:	f9aa                	sd	a0,240(sp)
    8001cac2:	fdae                	sd	a1,248(sp)
    8001cac4:	e92a                	sd	a0,144(sp)
    8001cac6:	ed2e                	sd	a1,152(sp)
    8001cac8:	a009                	j	8001caca <.LBB3_28+0x1e>
    8001caca:	656a                	ld	a0,152(sp)
    8001cacc:	e52a                	sd	a0,136(sp)
    8001cace:	654a                	ld	a0,144(sp)
    8001cad0:	e12a                	sd	a0,128(sp)
    8001cad2:	4505                	li	a0,1
    8001cad4:	fcaa                	sd	a0,120(sp)
    8001cad6:	7522                	ld	a0,40(sp)
    8001cad8:	3c050513          	addi	a0,a0,960
    8001cadc:	fffea097          	auipc	ra,0xfffea
    8001cae0:	e3c080e7          	jalr	-452(ra) # 80006918 <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E>
    8001cae4:	a0a1                	j	8001cb2c <.LBB3_28+0x80>
    8001cae6:	1928                	addi	a0,sp,184
        
        let mut guard = p.meta.acquire();
        guard.set_state(ProcState::RUNNABLE);
    8001cae8:	fffe7097          	auipc	ra,0xfffe7
    8001caec:	f12080e7          	jalr	-238(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001caf0:	e42a                	sd	a0,8(sp)
    8001caf2:	a009                	j	8001caf4 <.LBB3_28+0x48>
    8001caf4:	450d                	li	a0,3
    8001caf6:	0ca103a3          	sb	a0,199(sp)
    8001cafa:	65a2                	ld	a1,8(sp)
    8001cafc:	e02a                	sd	a0,0(sp)
    8001cafe:	852e                	mv	a0,a1
    8001cb00:	6582                	ld	a1,0(sp)
    8001cb02:	ffff5097          	auipc	ra,0xffff5
    8001cb06:	f9c080e7          	jalr	-100(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    8001cb0a:	a009                	j	8001cb0c <.LBB3_28+0x60>
        drop(guard);
    8001cb0c:	756a                	ld	a0,184(sp)
    8001cb0e:	ffff1097          	auipc	ra,0xffff1
    8001cb12:	d98080e7          	jalr	-616(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001cb16:	a009                	j	8001cb18 <.LBB3_28+0x6c>
    8001cb18:	6545                	lui	a0,0x11
    8001cb1a:	a005051b          	addiw	a0,a0,-1536

        // Set init process
        self.init_proc = p as *mut Process;
    8001cb1e:	6586                	ld	a1,64(sp)
    8001cb20:	952e                	add	a0,a0,a1
    8001cb22:	7642                	ld	a2,48(sp)
    8001cb24:	e110                	sd	a2,0(a0)
    }
    8001cb26:	60b2                	ld	ra,264(sp)
    8001cb28:	6151                	addi	sp,sp,272
    8001cb2a:	8082                	ret
        pdata.cwd = Some(ICACHE.namei(&ROOTIPATH).expect("cannot find root inode"));
    8001cb2c:	652a                	ld	a0,136(sp)
    8001cb2e:	75a2                	ld	a1,40(sp)
    8001cb30:	3ca5b823          	sd	a0,976(a1)
    8001cb34:	650a                	ld	a0,128(sp)
    8001cb36:	3ca5b423          	sd	a0,968(a1)
    8001cb3a:	7566                	ld	a0,120(sp)
    8001cb3c:	3ca5b023          	sd	a0,960(a1)
        let mut guard = p.meta.acquire();
    8001cb40:	7542                	ld	a0,48(sp)
    8001cb42:	fffe6097          	auipc	ra,0xfffe6
    8001cb46:	bca080e7          	jalr	-1078(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001cb4a:	fd2a                	sd	a0,184(sp)
    8001cb4c:	bf69                	j	8001cae6 <.LBB3_28+0x3a>

Disassembly of section .text._ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E:

000000008001cb4e <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E>:
    /// If found, initialize state required to run in the kernel,
    /// and return p.acquire() held.
    /// If there are a free procs, or a memory allocation fails, return 0. 

    /// WARNING: possible error occurs here.
    pub fn alloc_proc(&mut self) -> Option<&mut Process> {
    8001cb4e:	7115                	addi	sp,sp,-224
    8001cb50:	ed86                	sd	ra,216(sp)
    8001cb52:	f12a                	sd	a0,160(sp)
        let alloc_pid = self.alloc_pid();
    8001cb54:	f4aa                	sd	a0,104(sp)
    8001cb56:	00000097          	auipc	ra,0x0
    8001cb5a:	c00080e7          	jalr	-1024(ra) # 8001c756 <_ZN6kernel7process7manager11ProcManager9alloc_pid17hcd6950904a170710E>
    8001cb5e:	85aa                	mv	a1,a0
    8001cb60:	f52a                	sd	a0,168(sp)
    8001cb62:	f0ae                	sd	a1,96(sp)
    8001cb64:	a009                	j	8001cb66 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x18>
    8001cb66:	04000593          	li	a1,64
        for proc in self.proc.iter_mut() {
    8001cb6a:	7526                	ld	a0,104(sp)
    8001cb6c:	fffe9097          	auipc	ra,0xfffe9
    8001cb70:	21e080e7          	jalr	542(ra) # 80005d8a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h9b081b90140a954cE>
    8001cb74:	ecaa                	sd	a0,88(sp)
    8001cb76:	e8ae                	sd	a1,80(sp)
    8001cb78:	a009                	j	8001cb7a <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x2c>
    8001cb7a:	6566                	ld	a0,88(sp)
    8001cb7c:	65c6                	ld	a1,80(sp)
    8001cb7e:	ffff6097          	auipc	ra,0xffff6
    8001cb82:	698080e7          	jalr	1688(ra) # 80013216 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1839dc04caf82d17E>
    8001cb86:	e4aa                	sd	a0,72(sp)
    8001cb88:	e0ae                	sd	a1,64(sp)
    8001cb8a:	a009                	j	8001cb8c <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x3e>
    8001cb8c:	6526                	ld	a0,72(sp)
    8001cb8e:	fcaa                	sd	a0,120(sp)
    8001cb90:	6586                	ld	a1,64(sp)
    8001cb92:	e12e                	sd	a1,128(sp)
    8001cb94:	a009                	j	8001cb96 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x48>
    8001cb96:	18a8                	addi	a0,sp,120
    8001cb98:	ffff7097          	auipc	ra,0xffff7
    8001cb9c:	8be080e7          	jalr	-1858(ra) # 80013456 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E>
    8001cba0:	e52a                	sd	a0,136(sp)
    8001cba2:	a009                	j	8001cba4 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x56>
    8001cba4:	652a                	ld	a0,136(sp)
    8001cba6:	00a035b3          	snez	a1,a0
    8001cbaa:	4601                	li	a2,0
    8001cbac:	00c50463          	beq	a0,a2,8001cbb4 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x66>
    8001cbb0:	a009                	j	8001cbb2 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x64>
    8001cbb2:	a029                	j	8001cbbc <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x6e>
    8001cbb4:	4501                	li	a0,0
                    return Some(proc)
                }
                _ => {}
            }
        }
        None
    8001cbb6:	f8aa                	sd	a0,112(sp)
    }
    8001cbb8:	a8f1                	j	8001cc94 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x146>
        for proc in self.proc.iter_mut() {
    8001cbba:	0000                	unimp
    8001cbbc:	652a                	ld	a0,136(sp)
    8001cbbe:	f92a                	sd	a0,176(sp)
    8001cbc0:	fd2a                	sd	a0,184(sp)
    8001cbc2:	e1aa                	sd	a0,192(sp)
            let mut pmeta = proc.meta.acquire();
    8001cbc4:	fc2a                	sd	a0,56(sp)
    8001cbc6:	fffe6097          	auipc	ra,0xfffe6
    8001cbca:	b46080e7          	jalr	-1210(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001cbce:	e92a                	sd	a0,144(sp)
    8001cbd0:	a009                	j	8001cbd2 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x84>
    8001cbd2:	0908                	addi	a0,sp,144
            match pmeta.state {
    8001cbd4:	fffe7097          	auipc	ra,0xfffe7
    8001cbd8:	d08080e7          	jalr	-760(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001cbdc:	f82a                	sd	a0,48(sp)
    8001cbde:	a009                	j	8001cbe0 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x92>
                ProcState::UNUSED => {
    8001cbe0:	7542                	ld	a0,48(sp)
    8001cbe2:	01854583          	lbu	a1,24(a0) # 11018 <.Lline_table_start0+0x207>
    8001cbe6:	4601                	li	a2,0
    8001cbe8:	00c58963          	beq	a1,a2,8001cbfa <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0xac>
    8001cbec:	a009                	j	8001cbee <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0xa0>
    8001cbee:	0908                	addi	a0,sp,144
        }
    8001cbf0:	fffea097          	auipc	ra,0xfffea
    8001cbf4:	b4c080e7          	jalr	-1204(ra) # 8000673c <_ZN4core3ptr100drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..process..process..ProcMeta$GT$$GT$17h708a1d723b054e11E>
    8001cbf8:	a869                	j	8001cc92 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x144>
    8001cbfa:	0908                	addi	a0,sp,144
                    pmeta.pid = alloc_pid;
    8001cbfc:	fffe7097          	auipc	ra,0xfffe7
    8001cc00:	dfe080e7          	jalr	-514(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001cc04:	f42a                	sd	a0,40(sp)
    8001cc06:	a009                	j	8001cc08 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0xba>
    8001cc08:	7506                	ld	a0,96(sp)
    8001cc0a:	75a2                	ld	a1,40(sp)
    8001cc0c:	e988                	sd	a0,16(a1)
    8001cc0e:	0908                	addi	a0,sp,144
                    pmeta.set_state(ProcState::ALLOCATED);
    8001cc10:	fffe7097          	auipc	ra,0xfffe7
    8001cc14:	dea080e7          	jalr	-534(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001cc18:	f02a                	sd	a0,32(sp)
    8001cc1a:	a009                	j	8001cc1c <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0xce>
    8001cc1c:	4519                	li	a0,6
    8001cc1e:	08a10fa3          	sb	a0,159(sp)
    8001cc22:	7582                	ld	a1,32(sp)
    8001cc24:	ec2a                	sd	a0,24(sp)
    8001cc26:	852e                	mv	a0,a1
    8001cc28:	65e2                	ld	a1,24(sp)
    8001cc2a:	ffff5097          	auipc	ra,0xffff5
    8001cc2e:	e74080e7          	jalr	-396(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    8001cc32:	a009                	j	8001cc34 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0xe6>
                    let pdata = proc.data.get_mut();
    8001cc34:	7562                	ld	a0,56(sp)
    8001cc36:	04050513          	addi	a0,a0,64
    8001cc3a:	ffffa097          	auipc	ra,0xffffa
    8001cc3e:	d90080e7          	jalr	-624(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    8001cc42:	85aa                	mv	a1,a0
    8001cc44:	e5aa                	sd	a0,200(sp)
    8001cc46:	e82e                	sd	a1,16(sp)
    8001cc48:	a009                	j	8001cc4a <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0xfc>
                    let trapframe = unsafe{ RawPage::new_zeroed() as *mut u8 };
    8001cc4a:	fffeb097          	auipc	ra,0xfffeb
    8001cc4e:	8d2080e7          	jalr	-1838(ra) # 8000751c <_ZN6kernel6memory13PageAllocator10new_zeroed17h82392117e22df96bE>
    8001cc52:	e42a                	sd	a0,8(sp)
    8001cc54:	a009                	j	8001cc56 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x108>
    8001cc56:	6522                	ld	a0,8(sp)
    8001cc58:	e9aa                	sd	a0,208(sp)
                    pdata.set_trapframe(trapframe as *mut Trapframe);
    8001cc5a:	6542                	ld	a0,16(sp)
    8001cc5c:	65a2                	ld	a1,8(sp)
    8001cc5e:	ffff5097          	auipc	ra,0xffff5
    8001cc62:	ed2080e7          	jalr	-302(ra) # 80011b30 <_ZN6kernel7process7process8ProcData13set_trapframe17hccbafe988ea9307eE>
    8001cc66:	a009                	j	8001cc68 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x11a>
                        pdata.proc_pagetable();
    8001cc68:	6542                	ld	a0,16(sp)
    8001cc6a:	ffff5097          	auipc	ra,0xffff5
    8001cc6e:	05c080e7          	jalr	92(ra) # 80011cc6 <_ZN6kernel7process7process8ProcData14proc_pagetable17h3f21cb40a3f5ea26E>
    8001cc72:	a009                	j	8001cc74 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x126>
                    pdata.init_context();
    8001cc74:	6542                	ld	a0,16(sp)
    8001cc76:	ffff5097          	auipc	ra,0xffff5
    8001cc7a:	efa080e7          	jalr	-262(ra) # 80011b70 <_ZN6kernel7process7process8ProcData12init_context17ha8586c3e03b0b772E>
    8001cc7e:	a009                	j	8001cc80 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x132>
                    drop(pmeta);
    8001cc80:	654a                	ld	a0,144(sp)
    8001cc82:	ffff1097          	auipc	ra,0xffff1
    8001cc86:	c24080e7          	jalr	-988(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001cc8a:	a009                	j	8001cc8c <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x13e>
                    return Some(proc)
    8001cc8c:	7562                	ld	a0,56(sp)
    8001cc8e:	f8aa                	sd	a0,112(sp)
    }
    8001cc90:	a011                	j	8001cc94 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x146>
        for proc in self.proc.iter_mut() {
    8001cc92:	b711                	j	8001cb96 <_ZN6kernel7process7manager11ProcManager10alloc_proc17h89ded47fbe72aa40E+0x48>
    }
    8001cc94:	7546                	ld	a0,112(sp)
    8001cc96:	60ee                	ld	ra,216(sp)
    8001cc98:	612d                	addi	sp,sp,224
    8001cc9a:	8082                	ret

Disassembly of section .text._ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E:

000000008001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>:


    /// Wake up all processes sleeping on chan.
    /// Must be called without any p->lock.
    pub fn wake_up(&self, channel: usize) {
    8001cc9c:	7135                	addi	sp,sp,-160
    8001cc9e:	ed06                	sd	ra,152(sp)
    8001cca0:	f8aa                	sd	a0,112(sp)
    8001cca2:	fcae                	sd	a1,120(sp)
    8001cca4:	04000613          	li	a2,64
        for p in self.proc.iter() {
    8001cca8:	e0ae                	sd	a1,64(sp)
    8001ccaa:	85b2                	mv	a1,a2
    8001ccac:	fffe9097          	auipc	ra,0xfffe9
    8001ccb0:	0b4080e7          	jalr	180(ra) # 80005d60 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h65350c64fa8e0a0eE>
    8001ccb4:	fc2a                	sd	a0,56(sp)
    8001ccb6:	f82e                	sd	a1,48(sp)
    8001ccb8:	a009                	j	8001ccba <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x1e>
    8001ccba:	7562                	ld	a0,56(sp)
    8001ccbc:	75c2                	ld	a1,48(sp)
    8001ccbe:	ffff6097          	auipc	ra,0xffff6
    8001ccc2:	56c080e7          	jalr	1388(ra) # 8001322a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9820011383403f7cE>
    8001ccc6:	f42a                	sd	a0,40(sp)
    8001ccc8:	f02e                	sd	a1,32(sp)
    8001ccca:	a009                	j	8001cccc <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x30>
    8001cccc:	7522                	ld	a0,40(sp)
    8001ccce:	e4aa                	sd	a0,72(sp)
    8001ccd0:	7582                	ld	a1,32(sp)
    8001ccd2:	e8ae                	sd	a1,80(sp)
    8001ccd4:	a009                	j	8001ccd6 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x3a>
    8001ccd6:	00a8                	addi	a0,sp,72
    8001ccd8:	ffff6097          	auipc	ra,0xffff6
    8001ccdc:	55c080e7          	jalr	1372(ra) # 80013234 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE>
    8001cce0:	ecaa                	sd	a0,88(sp)
    8001cce2:	a009                	j	8001cce4 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x48>
    8001cce4:	6566                	ld	a0,88(sp)
    8001cce6:	00a035b3          	snez	a1,a0
    8001ccea:	4601                	li	a2,0
    8001ccec:	00c50463          	beq	a0,a2,8001ccf4 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x58>
    8001ccf0:	a009                	j	8001ccf2 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x56>
    8001ccf2:	a029                	j	8001ccfc <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x60>
            if guard.state == ProcState::SLEEPING && guard.channel == channel {
                guard.state = ProcState::RUNNABLE;
            }
            drop(guard);
        }
    }
    8001ccf4:	60ea                	ld	ra,152(sp)
    8001ccf6:	610d                	addi	sp,sp,160
    8001ccf8:	8082                	ret
        for p in self.proc.iter() {
    8001ccfa:	0000                	unimp
    8001ccfc:	6566                	ld	a0,88(sp)
    8001ccfe:	e12a                	sd	a0,128(sp)
    8001cd00:	e52a                	sd	a0,136(sp)
    8001cd02:	e92a                	sd	a0,144(sp)
            let mut guard = p.meta.acquire();
    8001cd04:	fffe6097          	auipc	ra,0xfffe6
    8001cd08:	a08080e7          	jalr	-1528(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001cd0c:	f0aa                	sd	a0,96(sp)
    8001cd0e:	a009                	j	8001cd10 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x74>
    8001cd10:	1088                	addi	a0,sp,96
            if guard.state == ProcState::SLEEPING && guard.channel == channel {
    8001cd12:	fffe7097          	auipc	ra,0xfffe7
    8001cd16:	bca080e7          	jalr	-1078(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001cd1a:	ec2a                	sd	a0,24(sp)
    8001cd1c:	a02d                	j	8001cd46 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0xaa>
    8001cd1e:	4505                	li	a0,1
    8001cd20:	06a10723          	sb	a0,110(sp)
    8001cd24:	a821                	j	8001cd3c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0xa0>
    8001cd26:	4501                	li	a0,0
    8001cd28:	06a10723          	sb	a0,110(sp)
    8001cd2c:	a801                	j	8001cd3c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0xa0>
    8001cd2e:	1088                	addi	a0,sp,96
    8001cd30:	fffe7097          	auipc	ra,0xfffe7
    8001cd34:	bac080e7          	jalr	-1108(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001cd38:	e82a                	sd	a0,16(sp)
    8001cd3a:	a02d                	j	8001cd64 <.LBB5_22+0x1a>
    8001cd3c:	06e14503          	lbu	a0,110(sp)
    8001cd40:	8905                	andi	a0,a0,1
    8001cd42:	e51d                	bnez	a0,8001cd70 <.LBB5_22+0x26>
    8001cd44:	a081                	j	8001cd84 <.LBB5_22+0x3a>
    8001cd46:	6562                	ld	a0,24(sp)
    8001cd48:	0561                	addi	a0,a0,24

000000008001cd4a <.LBB5_22>:
    8001cd4a:	0000c597          	auipc	a1,0xc
    8001cd4e:	42658593          	addi	a1,a1,1062 # 80029170 <.L__unnamed_13>
    8001cd52:	ffff6097          	auipc	ra,0xffff6
    8001cd56:	ea6080e7          	jalr	-346(ra) # 80012bf8 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE>
    8001cd5a:	e42a                	sd	a0,8(sp)
    8001cd5c:	a009                	j	8001cd5e <.LBB5_22+0x14>
    8001cd5e:	6522                	ld	a0,8(sp)
    8001cd60:	f579                	bnez	a0,8001cd2e <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x92>
    8001cd62:	b7d1                	j	8001cd26 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x8a>
    8001cd64:	6542                	ld	a0,16(sp)
    8001cd66:	610c                	ld	a1,0(a0)
    8001cd68:	6606                	ld	a2,64(sp)
    8001cd6a:	fac58ae3          	beq	a1,a2,8001cd1e <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x82>
    8001cd6e:	bf65                	j	8001cd26 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x8a>
    8001cd70:	450d                	li	a0,3
                guard.state = ProcState::RUNNABLE;
    8001cd72:	06a107a3          	sb	a0,111(sp)
    8001cd76:	1088                	addi	a0,sp,96
    8001cd78:	fffe7097          	auipc	ra,0xfffe7
    8001cd7c:	c82080e7          	jalr	-894(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001cd80:	e02a                	sd	a0,0(sp)
    8001cd82:	a011                	j	8001cd86 <.LBB5_22+0x3c>
            if guard.state == ProcState::SLEEPING && guard.channel == channel {
    8001cd84:	a039                	j	8001cd92 <.LBB5_22+0x48>
                guard.state = ProcState::RUNNABLE;
    8001cd86:	06f10503          	lb	a0,111(sp)
    8001cd8a:	6582                	ld	a1,0(sp)
    8001cd8c:	00a58c23          	sb	a0,24(a1)
            if guard.state == ProcState::SLEEPING && guard.channel == channel {
    8001cd90:	a009                	j	8001cd92 <.LBB5_22+0x48>
            drop(guard);
    8001cd92:	7506                	ld	a0,96(sp)
    8001cd94:	ffff1097          	auipc	ra,0xffff1
    8001cd98:	b12080e7          	jalr	-1262(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001cd9c:	a009                	j	8001cd9e <.LBB5_22+0x54>
        for p in self.proc.iter() {
    8001cd9e:	bf25                	j	8001ccd6 <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E+0x3a>

Disassembly of section .text._ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E:

000000008001cda0 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E>:

    /// Find a runnable and set status to allocated
    pub fn seek_runnable(&mut self) -> Option<&mut Process> {
    8001cda0:	7175                	addi	sp,sp,-144
    8001cda2:	e506                	sd	ra,136(sp)
    8001cda4:	f4aa                	sd	a0,104(sp)
    8001cda6:	04000593          	li	a1,64
        for p in self.proc.iter_mut() {
    8001cdaa:	fffe9097          	auipc	ra,0xfffe9
    8001cdae:	fe0080e7          	jalr	-32(ra) # 80005d8a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h9b081b90140a954cE>
    8001cdb2:	f82a                	sd	a0,48(sp)
    8001cdb4:	f42e                	sd	a1,40(sp)
    8001cdb6:	a009                	j	8001cdb8 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x18>
    8001cdb8:	7542                	ld	a0,48(sp)
    8001cdba:	75a2                	ld	a1,40(sp)
    8001cdbc:	ffff6097          	auipc	ra,0xffff6
    8001cdc0:	45a080e7          	jalr	1114(ra) # 80013216 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1839dc04caf82d17E>
    8001cdc4:	f02a                	sd	a0,32(sp)
    8001cdc6:	ec2e                	sd	a1,24(sp)
    8001cdc8:	a009                	j	8001cdca <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x2a>
    8001cdca:	7502                	ld	a0,32(sp)
    8001cdcc:	e0aa                	sd	a0,64(sp)
    8001cdce:	65e2                	ld	a1,24(sp)
    8001cdd0:	e4ae                	sd	a1,72(sp)
    8001cdd2:	a009                	j	8001cdd4 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x34>
    8001cdd4:	0088                	addi	a0,sp,64
    8001cdd6:	ffff6097          	auipc	ra,0xffff6
    8001cdda:	680080e7          	jalr	1664(ra) # 80013456 <_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a1de6f3877a8821E>
    8001cdde:	e8aa                	sd	a0,80(sp)
    8001cde0:	a009                	j	8001cde2 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x42>
    8001cde2:	6546                	ld	a0,80(sp)
    8001cde4:	00a035b3          	snez	a1,a0
    8001cde8:	4601                	li	a2,0
    8001cdea:	00c50463          	beq	a0,a2,8001cdf2 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x52>
    8001cdee:	a009                	j	8001cdf0 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x50>
    8001cdf0:	a029                	j	8001cdfa <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x5a>
    8001cdf2:	4501                	li	a0,0
                _ => {
                    drop(guard);
                },
            }
        }
        None
    8001cdf4:	fc2a                	sd	a0,56(sp)
    }
    8001cdf6:	a895                	j	8001ce6a <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0xca>
        for p in self.proc.iter_mut() {
    8001cdf8:	0000                	unimp
    8001cdfa:	6546                	ld	a0,80(sp)
    8001cdfc:	f8aa                	sd	a0,112(sp)
    8001cdfe:	fcaa                	sd	a0,120(sp)
    8001ce00:	e12a                	sd	a0,128(sp)
            let mut guard = p.meta.acquire();
    8001ce02:	e82a                	sd	a0,16(sp)
    8001ce04:	fffe6097          	auipc	ra,0xfffe6
    8001ce08:	908080e7          	jalr	-1784(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001ce0c:	ecaa                	sd	a0,88(sp)
    8001ce0e:	a009                	j	8001ce10 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x70>
    8001ce10:	08a8                	addi	a0,sp,88
            match guard.state {
    8001ce12:	fffe7097          	auipc	ra,0xfffe7
    8001ce16:	aca080e7          	jalr	-1334(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001ce1a:	e42a                	sd	a0,8(sp)
    8001ce1c:	a009                	j	8001ce1e <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x7e>
                ProcState::RUNNABLE => {
    8001ce1e:	6522                	ld	a0,8(sp)
    8001ce20:	01854583          	lbu	a1,24(a0)
    8001ce24:	460d                	li	a2,3
    8001ce26:	00c58963          	beq	a1,a2,8001ce38 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x98>
    8001ce2a:	a009                	j	8001ce2c <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x8c>
                    drop(guard);
    8001ce2c:	6566                	ld	a0,88(sp)
    8001ce2e:	ffff1097          	auipc	ra,0xffff1
    8001ce32:	a78080e7          	jalr	-1416(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001ce36:	a80d                	j	8001ce68 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0xc8>
    8001ce38:	4519                	li	a0,6
                    guard.state = ProcState::ALLOCATED;
    8001ce3a:	06a103a3          	sb	a0,103(sp)
    8001ce3e:	08a8                	addi	a0,sp,88
    8001ce40:	fffe7097          	auipc	ra,0xfffe7
    8001ce44:	bba080e7          	jalr	-1094(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001ce48:	e02a                	sd	a0,0(sp)
    8001ce4a:	a009                	j	8001ce4c <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0xac>
    8001ce4c:	06710503          	lb	a0,103(sp)
    8001ce50:	6582                	ld	a1,0(sp)
    8001ce52:	00a58c23          	sb	a0,24(a1)
                    drop(guard);
    8001ce56:	6566                	ld	a0,88(sp)
    8001ce58:	ffff1097          	auipc	ra,0xffff1
    8001ce5c:	a4e080e7          	jalr	-1458(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001ce60:	a009                	j	8001ce62 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0xc2>
                    return Some(p)
    8001ce62:	6542                	ld	a0,16(sp)
    8001ce64:	fc2a                	sd	a0,56(sp)
    }
    8001ce66:	a011                	j	8001ce6a <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0xca>
        for p in self.proc.iter_mut() {
    8001ce68:	b7b5                	j	8001cdd4 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E+0x34>
    }
    8001ce6a:	7562                	ld	a0,56(sp)
    8001ce6c:	60aa                	ld	ra,136(sp)
    8001ce6e:	6149                	addi	sp,sp,144
    8001ce70:	8082                	ret

Disassembly of section .text._ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E:

000000008001ce72 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E>:

    /// Pass p's abandonded children to init. 
    /// Caller must hold wait lock. 
    pub fn reparent(&self, proc: &mut Process) {
    8001ce72:	7131                	addi	sp,sp,-192
    8001ce74:	fd06                	sd	ra,184(sp)
    8001ce76:	fcaa                	sd	a0,120(sp)
    8001ce78:	e12e                	sd	a1,128(sp)
    8001ce7a:	04000613          	li	a2,64
        for index in 0..self.proc.len() {
    8001ce7e:	f82a                	sd	a0,48(sp)
    8001ce80:	f42e                	sd	a1,40(sp)
    8001ce82:	85b2                	mv	a1,a2
    8001ce84:	fffe9097          	auipc	ra,0xfffe9
    8001ce88:	ecc080e7          	jalr	-308(ra) # 80005d50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE>
    8001ce8c:	f02a                	sd	a0,32(sp)
    8001ce8e:	a009                	j	8001ce90 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x1e>
    8001ce90:	4501                	li	a0,0
    8001ce92:	fc2a                	sd	a0,56(sp)
    8001ce94:	7582                	ld	a1,32(sp)
    8001ce96:	e0ae                	sd	a1,64(sp)
    8001ce98:	00003097          	auipc	ra,0x3
    8001ce9c:	c12080e7          	jalr	-1006(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001cea0:	ec2a                	sd	a0,24(sp)
    8001cea2:	e82e                	sd	a1,16(sp)
    8001cea4:	a009                	j	8001cea6 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x34>
    8001cea6:	6562                	ld	a0,24(sp)
    8001cea8:	e4aa                	sd	a0,72(sp)
    8001ceaa:	65c2                	ld	a1,16(sp)
    8001ceac:	e8ae                	sd	a1,80(sp)
    8001ceae:	a009                	j	8001ceb0 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x3e>
    8001ceb0:	00a8                	addi	a0,sp,72
    8001ceb2:	00003097          	auipc	ra,0x3
    8001ceb6:	b8a080e7          	jalr	-1142(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001ceba:	ecaa                	sd	a0,88(sp)
    8001cebc:	f0ae                	sd	a1,96(sp)
    8001cebe:	a009                	j	8001cec0 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x4e>
    8001cec0:	6566                	ld	a0,88(sp)
    8001cec2:	4581                	li	a1,0
    8001cec4:	00b50463          	beq	a0,a1,8001cecc <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x5a>
    8001cec8:	a009                	j	8001ceca <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x58>
    8001ceca:	a029                	j	8001ced4 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x62>
                        pdata.parent = Some(self.init_proc);
                        self.wake_up(self.init_proc as usize);
                    }
                }
        }
    }
    8001cecc:	70ea                	ld	ra,184(sp)
    8001cece:	6129                	addi	sp,sp,192
    8001ced0:	8082                	ret
        for index in 0..self.proc.len() {
    8001ced2:	0000                	unimp
    8001ced4:	7506                	ld	a0,96(sp)
    8001ced6:	e52a                	sd	a0,136(sp)
    8001ced8:	e92a                	sd	a0,144(sp)
    8001ceda:	ed2a                	sd	a0,152(sp)
    8001cedc:	03f00593          	li	a1,63
            let p = &self.proc[index];
    8001cee0:	e42a                	sd	a0,8(sp)
    8001cee2:	06a5e963          	bltu	a1,a0,8001cf54 <.LBB7_19>
    8001cee6:	a009                	j	8001cee8 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x76>
    8001cee8:	42800513          	li	a0,1064
    8001ceec:	65a2                	ld	a1,8(sp)
    8001ceee:	02a58533          	mul	a0,a1,a0
    8001cef2:	7642                	ld	a2,48(sp)
    8001cef4:	9532                	add	a0,a0,a2
    8001cef6:	f12a                	sd	a0,160(sp)
                let pdata = unsafe{ &mut *p.data.get() };
    8001cef8:	04050513          	addi	a0,a0,64
    8001cefc:	ffffa097          	auipc	ra,0xffffa
    8001cf00:	a8c080e7          	jalr	-1396(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8001cf04:	e02a                	sd	a0,0(sp)
    8001cf06:	a009                	j	8001cf08 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x96>
    8001cf08:	6502                	ld	a0,0(sp)
    8001cf0a:	f52a                	sd	a0,168(sp)
                if let Some(parent) = pdata.parent {
    8001cf0c:	694c                	ld	a1,144(a0)
    8001cf0e:	4605                	li	a2,1
    8001cf10:	00c58463          	beq	a1,a2,8001cf18 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xa6>
    8001cf14:	a009                	j	8001cf16 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xa4>
    8001cf16:	a835                	j	8001cf52 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xe0>
    8001cf18:	6502                	ld	a0,0(sp)
    8001cf1a:	6d4c                	ld	a1,152(a0)
    8001cf1c:	f92e                	sd	a1,176(sp)
                    if parent as *const _ == proc as *const _ {
    8001cf1e:	7622                	ld	a2,40(sp)
    8001cf20:	02c59663          	bne	a1,a2,8001cf4c <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xda>
    8001cf24:	a009                	j	8001cf26 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xb4>
    8001cf26:	6545                	lui	a0,0x11
    8001cf28:	a005051b          	addiw	a0,a0,-1536
                        pdata.parent = Some(self.init_proc);
    8001cf2c:	75c2                	ld	a1,48(sp)
    8001cf2e:	952e                	add	a0,a0,a1
    8001cf30:	6110                	ld	a2,0(a0)
    8001cf32:	f8b2                	sd	a2,112(sp)
    8001cf34:	4685                	li	a3,1
    8001cf36:	f4b6                	sd	a3,104(sp)
    8001cf38:	6702                	ld	a4,0(sp)
    8001cf3a:	eb54                	sd	a3,144(a4)
    8001cf3c:	ef50                	sd	a2,152(a4)
                        self.wake_up(self.init_proc as usize);
    8001cf3e:	610c                	ld	a1,0(a0)
    8001cf40:	7542                	ld	a0,48(sp)
    8001cf42:	00000097          	auipc	ra,0x0
    8001cf46:	d5a080e7          	jalr	-678(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8001cf4a:	a011                	j	8001cf4e <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xdc>
                    if parent as *const _ == proc as *const _ {
    8001cf4c:	a011                	j	8001cf50 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xde>
    8001cf4e:	a009                	j	8001cf50 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xde>
                if let Some(parent) = pdata.parent {
    8001cf50:	a009                	j	8001cf52 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0xe0>
        for index in 0..self.proc.len() {
    8001cf52:	bfb9                	j	8001ceb0 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E+0x3e>

000000008001cf54 <.LBB7_19>:
            let p = &self.proc[index];
    8001cf54:	0000c617          	auipc	a2,0xc
    8001cf58:	22460613          	addi	a2,a2,548 # 80029178 <.L__unnamed_14>
    8001cf5c:	04000593          	li	a1,64
    8001cf60:	6522                	ld	a0,8(sp)
    8001cf62:	00004097          	auipc	ra,0x4
    8001cf66:	d94080e7          	jalr	-620(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7process7manager11ProcManager4exit17hb5e0aafd7c1c6fa4E:

000000008001cf6c <_ZN6kernel7process7manager11ProcManager4exit17hb5e0aafd7c1c6fa4E>:
    
    /// Exit the current process. Does not return. 
    /// An exited process remains in the zombie state 
    /// until its parent calls wait. 
    pub fn exit(&mut self, status : usize) -> ! {
    8001cf6c:	7155                	addi	sp,sp,-208
    8001cf6e:	e586                	sd	ra,200(sp)
    8001cf70:	ed2a                	sd	a0,152(sp)
    8001cf72:	f12e                	sd	a1,160(sp)

000000008001cf74 <.LBB8_22>:
        let my_proc = unsafe {
            CPU_MANAGER.myproc().expect("Current cpu's process is none.")
    8001cf74:	00052617          	auipc	a2,0x52
    8001cf78:	08c60613          	addi	a2,a2,140 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001cf7c:	ecaa                	sd	a0,88(sp)
    8001cf7e:	8532                	mv	a0,a2
    8001cf80:	e8ae                	sd	a1,80(sp)
    8001cf82:	00000097          	auipc	ra,0x0
    8001cf86:	7b6080e7          	jalr	1974(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8001cf8a:	e4aa                	sd	a0,72(sp)
    8001cf8c:	a009                	j	8001cf8e <.LBB8_23>

000000008001cf8e <.LBB8_23>:
    8001cf8e:	0000c597          	auipc	a1,0xc
    8001cf92:	20258593          	addi	a1,a1,514 # 80029190 <.L__unnamed_15>

000000008001cf96 <.LBB8_24>:
    8001cf96:	0000c697          	auipc	a3,0xc
    8001cf9a:	21a68693          	addi	a3,a3,538 # 800291b0 <.L__unnamed_16>
    8001cf9e:	4679                	li	a2,30
    8001cfa0:	6526                	ld	a0,72(sp)
    8001cfa2:	ffffc097          	auipc	ra,0xffffc
    8001cfa6:	ab8080e7          	jalr	-1352(ra) # 80018a5a <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E>
    8001cfaa:	e0aa                	sd	a0,64(sp)
    8001cfac:	a009                	j	8001cfae <.LBB8_24+0x18>
    8001cfae:	6506                	ld	a0,64(sp)
    8001cfb0:	f52a                	sd	a0,168(sp)
        };
        // close all open files. 
        let pdata = unsafe{ &mut *my_proc.data.get() };
    8001cfb2:	04050513          	addi	a0,a0,64 # 11040 <.Lline_table_start0+0x22f>
    8001cfb6:	ffffa097          	auipc	ra,0xffffa
    8001cfba:	9d2080e7          	jalr	-1582(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8001cfbe:	fc2a                	sd	a0,56(sp)
    8001cfc0:	a009                	j	8001cfc2 <.LBB8_24+0x2c>
    8001cfc2:	7562                	ld	a0,56(sp)
    8001cfc4:	f92a                	sd	a0,176(sp)

000000008001cfc6 <.LBB8_25>:
        //     );
        //     file.close();
        //     open_files[index].take()
        // }

        LOG.begin_op();
    8001cfc6:	0003d517          	auipc	a0,0x3d
    8001cfca:	09a50513          	addi	a0,a0,154 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8001cfce:	ffffa097          	auipc	ra,0xffffa
    8001cfd2:	110080e7          	jalr	272(ra) # 800170de <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$8begin_op17hcbd1fd3839106609E>
    8001cfd6:	a009                	j	8001cfd8 <.LBB8_25+0x12>
        let cwd = pdata.cwd.as_mut().expect("Fail to get inode");
    8001cfd8:	7562                	ld	a0,56(sp)
    8001cfda:	3c050513          	addi	a0,a0,960
    8001cfde:	ffffb097          	auipc	ra,0xffffb
    8001cfe2:	7fe080e7          	jalr	2046(ra) # 800187dc <_ZN4core6option15Option$LT$T$GT$6as_mut17h3a3902d5a31b85d0E>
    8001cfe6:	f82a                	sd	a0,48(sp)
    8001cfe8:	a009                	j	8001cfea <.LBB8_26>

000000008001cfea <.LBB8_26>:
    8001cfea:	0000c597          	auipc	a1,0xc
    8001cfee:	1de58593          	addi	a1,a1,478 # 800291c8 <.L__unnamed_17>

000000008001cff2 <.LBB8_27>:
    8001cff2:	0000c697          	auipc	a3,0xc
    8001cff6:	1ee68693          	addi	a3,a3,494 # 800291e0 <.L__unnamed_18>
    8001cffa:	4645                	li	a2,17
    8001cffc:	7542                	ld	a0,48(sp)
    8001cffe:	ffffc097          	auipc	ra,0xffffc
    8001d002:	948080e7          	jalr	-1720(ra) # 80018946 <_ZN4core6option15Option$LT$T$GT$6expect17h676c969740df3110E>
    8001d006:	85aa                	mv	a1,a0
    8001d008:	fd2a                	sd	a0,184(sp)
    8001d00a:	f42e                	sd	a1,40(sp)
    8001d00c:	a009                	j	8001d00e <.LBB8_27+0x1c>
        drop(cwd);
    8001d00e:	7522                	ld	a0,40(sp)
    8001d010:	ffff1097          	auipc	ra,0xffff1
    8001d014:	8d4080e7          	jalr	-1836(ra) # 8000d8e4 <_ZN4core3mem4drop17h2dcac54f95a3a8e1E>
    8001d018:	a009                	j	8001d01a <.LBB8_28>

000000008001d01a <.LBB8_28>:
        LOG.end_op();
    8001d01a:	0003d517          	auipc	a0,0x3d
    8001d01e:	04650513          	addi	a0,a0,70 # 8005a060 <_ZN6kernel2fs3log3LOG17hbcf33ddece7b70fbE>
    8001d022:	ffffa097          	auipc	ra,0xffffa
    8001d026:	6ac080e7          	jalr	1708(ra) # 800176ce <_ZN6kernel2fs3log78_$LT$impl$u20$kernel..lock..spinlock..Spinlock$LT$kernel..fs..log..Log$GT$$GT$6end_op17h345acfc877b20e63E>
    8001d02a:	a009                	j	8001d02c <.LBB8_28+0x12>
    8001d02c:	4501                	li	a0,0
        pdata.cwd = None;
    8001d02e:	f0aa                	sd	a0,96(sp)
    8001d030:	7562                	ld	a0,56(sp)
    8001d032:	3c050513          	addi	a0,a0,960
    8001d036:	fffea097          	auipc	ra,0xfffea
    8001d03a:	8e2080e7          	jalr	-1822(ra) # 80006918 <_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$kernel..fs..inode..Inode$GT$$GT$17h94a8bbbd84f63e88E>
    8001d03e:	a0f5                	j	8001d12a <.LBB8_33+0x14>

        let wait_guard = self.wait_lock.acquire();
        // Give any children to init. 
        self.reparent(my_proc);
    8001d040:	6566                	ld	a0,88(sp)
    8001d042:	6586                	ld	a1,64(sp)
    8001d044:	00000097          	auipc	ra,0x0
    8001d048:	e2e080e7          	jalr	-466(ra) # 8001ce72 <_ZN6kernel7process7manager11ProcManager8reparent17hab43aecbfd8eafa2E>
    8001d04c:	a009                	j	8001d04e <.LBB8_28+0x34>
        // Parent might be sleeping in wait. 
        self.wake_up(pdata.parent.expect("Fail to find parent process") as usize);
    8001d04e:	7562                	ld	a0,56(sp)
    8001d050:	6948                	ld	a0,144(a0)
    8001d052:	75e2                	ld	a1,56(sp)
    8001d054:	6dcc                	ld	a1,152(a1)

000000008001d056 <.LBB8_29>:
    8001d056:	0000c617          	auipc	a2,0xc
    8001d05a:	1a260613          	addi	a2,a2,418 # 800291f8 <.L__unnamed_19>

000000008001d05e <.LBB8_30>:
    8001d05e:	0000c717          	auipc	a4,0xc
    8001d062:	1ba70713          	addi	a4,a4,442 # 80029218 <.L__unnamed_20>
    8001d066:	46ed                	li	a3,27
    8001d068:	ffffc097          	auipc	ra,0xffffc
    8001d06c:	950080e7          	jalr	-1712(ra) # 800189b8 <_ZN4core6option15Option$LT$T$GT$6expect17h8b2dcfd440535df6E>
    8001d070:	f02a                	sd	a0,32(sp)
    8001d072:	a009                	j	8001d074 <.LBB8_30+0x16>
    8001d074:	6566                	ld	a0,88(sp)
    8001d076:	7582                	ld	a1,32(sp)
    8001d078:	00000097          	auipc	ra,0x0
    8001d07c:	c24080e7          	jalr	-988(ra) # 8001cc9c <_ZN6kernel7process7manager11ProcManager7wake_up17hbe4b7f7a22f5fbf9E>
    8001d080:	a009                	j	8001d082 <.LBB8_30+0x24>

        let mut proc_data = my_proc.meta.acquire();
    8001d082:	6506                	ld	a0,64(sp)
    8001d084:	fffe5097          	auipc	ra,0xfffe5
    8001d088:	688080e7          	jalr	1672(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001d08c:	e12a                	sd	a0,128(sp)
    8001d08e:	a009                	j	8001d090 <.LBB8_30+0x32>
    8001d090:	0108                	addi	a0,sp,128
        proc_data.xstate = status;
    8001d092:	fffe7097          	auipc	ra,0xfffe7
    8001d096:	968080e7          	jalr	-1688(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001d09a:	ec2a                	sd	a0,24(sp)
    8001d09c:	a009                	j	8001d09e <.LBB8_30+0x40>
    8001d09e:	6546                	ld	a0,80(sp)
    8001d0a0:	65e2                	ld	a1,24(sp)
    8001d0a2:	e588                	sd	a0,8(a1)
    8001d0a4:	0108                	addi	a0,sp,128
        proc_data.set_state(ProcState::ZOMBIE);
    8001d0a6:	fffe7097          	auipc	ra,0xfffe7
    8001d0aa:	954080e7          	jalr	-1708(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001d0ae:	e82a                	sd	a0,16(sp)
    8001d0b0:	a009                	j	8001d0b2 <.LBB8_30+0x54>
    8001d0b2:	4515                	li	a0,5
    8001d0b4:	08a107a3          	sb	a0,143(sp)
    8001d0b8:	65c2                	ld	a1,16(sp)
    8001d0ba:	e42a                	sd	a0,8(sp)
    8001d0bc:	852e                	mv	a0,a1
    8001d0be:	65a2                	ld	a1,8(sp)
    8001d0c0:	ffff5097          	auipc	ra,0xffff5
    8001d0c4:	9de080e7          	jalr	-1570(ra) # 80011a9e <_ZN6kernel7process7process8ProcMeta9set_state17h0b1fc45612fcb6d1E>
    8001d0c8:	a009                	j	8001d0ca <.LBB8_30+0x6c>

        drop(wait_guard);
    8001d0ca:	7566                	ld	a0,120(sp)
    8001d0cc:	ffff1097          	auipc	ra,0xffff1
    8001d0d0:	822080e7          	jalr	-2014(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    8001d0d4:	a009                	j	8001d0d6 <.LBB8_31>

000000008001d0d6 <.LBB8_31>:

        let my_cpu = unsafe {
            CPU_MANAGER.mycpu()
    8001d0d6:	00052517          	auipc	a0,0x52
    8001d0da:	f2a50513          	addi	a0,a0,-214 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001d0de:	00000097          	auipc	ra,0x0
    8001d0e2:	60e080e7          	jalr	1550(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    8001d0e6:	e02a                	sd	a0,0(sp)
    8001d0e8:	a009                	j	8001d0ea <.LBB8_31+0x14>
    8001d0ea:	6502                	ld	a0,0(sp)
    8001d0ec:	e1aa                	sd	a0,192(sp)
        };
        unsafe {
            my_cpu.sched(proc_data, &mut pdata.context as *mut Context);
    8001d0ee:	658a                	ld	a1,128(sp)
    8001d0f0:	7662                	ld	a2,56(sp)
    8001d0f2:	02060613          	addi	a2,a2,32
    8001d0f6:	00001097          	auipc	ra,0x1
    8001d0fa:	888080e7          	jalr	-1912(ra) # 8001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>
    8001d0fe:	e92a                	sd	a0,144(sp)
    8001d100:	a009                	j	8001d102 <.LBB8_31+0x2c>
    8001d102:	0908                	addi	a0,sp,144
    8001d104:	fffe9097          	auipc	ra,0xfffe9
    8001d108:	638080e7          	jalr	1592(ra) # 8000673c <_ZN4core3ptr100drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..process..process..ProcMeta$GT$$GT$17h708a1d723b054e11E>
    8001d10c:	a009                	j	8001d10e <.LBB8_32>

000000008001d10e <.LBB8_32>:
        }

        panic!("zombie exit!");
    8001d10e:	0000c517          	auipc	a0,0xc
    8001d112:	12250513          	addi	a0,a0,290 # 80029230 <.L__unnamed_21>

000000008001d116 <.LBB8_33>:
    8001d116:	0000c617          	auipc	a2,0xc
    8001d11a:	12a60613          	addi	a2,a2,298 # 80029240 <.L__unnamed_22>
    8001d11e:	45b1                	li	a1,12
    8001d120:	00004097          	auipc	ra,0x4
    8001d124:	baa080e7          	jalr	-1110(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001d128:	0000                	unimp
        pdata.cwd = None;
    8001d12a:	7546                	ld	a0,112(sp)
    8001d12c:	75e2                	ld	a1,56(sp)
    8001d12e:	3ca5b823          	sd	a0,976(a1)
    8001d132:	7526                	ld	a0,104(sp)
    8001d134:	3ca5b423          	sd	a0,968(a1)
    8001d138:	7506                	ld	a0,96(sp)
    8001d13a:	3ca5b023          	sd	a0,960(a1)
    8001d13e:	6545                	lui	a0,0x11
    8001d140:	a305051b          	addiw	a0,a0,-1488
        let wait_guard = self.wait_lock.acquire();
    8001d144:	6666                	ld	a2,88(sp)
    8001d146:	9532                	add	a0,a0,a2
    8001d148:	fffe5097          	auipc	ra,0xfffe5
    8001d14c:	312080e7          	jalr	786(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    8001d150:	fcaa                	sd	a0,120(sp)
    8001d152:	b5fd                	j	8001d040 <.LBB8_28+0x26>

Disassembly of section .text._ZN6kernel7process7manager11ProcManager4wait17hc89b6c8177cfd393E:

000000008001d154 <_ZN6kernel7process7manager11ProcManager4wait17hc89b6c8177cfd393E>:
    }

    /// Wait for a child process to exit and return its pid. 
    pub fn wait(&mut self, addr: usize) -> Option<usize> {
    8001d154:	7125                	addi	sp,sp,-416
    8001d156:	ef06                	sd	ra,408(sp)
    8001d158:	e6aa                	sd	a0,328(sp)
    8001d15a:	eaae                	sd	a1,336(sp)
    8001d15c:	4601                	li	a2,0
        let mut pid = 0;
    8001d15e:	edb2                	sd	a2,216(sp)

000000008001d160 <.LBB9_59>:
        let my_proc = unsafe {
            CPU_MANAGER.myproc().expect("Fail to get my process")
    8001d160:	00052617          	auipc	a2,0x52
    8001d164:	ea060613          	addi	a2,a2,-352 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001d168:	e1aa                	sd	a0,192(sp)
    8001d16a:	8532                	mv	a0,a2
    8001d16c:	fd2e                	sd	a1,184(sp)
    8001d16e:	00000097          	auipc	ra,0x0
    8001d172:	5ca080e7          	jalr	1482(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8001d176:	f92a                	sd	a0,176(sp)
    8001d178:	a009                	j	8001d17a <.LBB9_60>

000000008001d17a <.LBB9_60>:
    8001d17a:	0000c597          	auipc	a1,0xc
    8001d17e:	0de58593          	addi	a1,a1,222 # 80029258 <.L__unnamed_23>

000000008001d182 <.LBB9_61>:
    8001d182:	0000c697          	auipc	a3,0xc
    8001d186:	0ee68693          	addi	a3,a3,238 # 80029270 <.L__unnamed_24>
    8001d18a:	4659                	li	a2,22
    8001d18c:	754a                	ld	a0,176(sp)
    8001d18e:	ffffc097          	auipc	ra,0xffffc
    8001d192:	8cc080e7          	jalr	-1844(ra) # 80018a5a <_ZN4core6option15Option$LT$T$GT$6expect17hf68c8f183c480354E>
    8001d196:	f52a                	sd	a0,168(sp)
    8001d198:	a009                	j	8001d19a <.LBB9_61+0x18>
    8001d19a:	752a                	ld	a0,168(sp)
    8001d19c:	eeaa                	sd	a0,344(sp)
    8001d19e:	65c5                	lui	a1,0x11
    8001d1a0:	a305859b          	addiw	a1,a1,-1488
        };
        let mut wait_guard = self.wait_lock.acquire();
    8001d1a4:	660e                	ld	a2,192(sp)
    8001d1a6:	00b60533          	add	a0,a2,a1
    8001d1aa:	fffe5097          	auipc	ra,0xfffe5
    8001d1ae:	2b0080e7          	jalr	688(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    8001d1b2:	f1aa                	sd	a0,224(sp)
    8001d1b4:	a009                	j	8001d1b6 <.LBB9_61+0x34>
        loop {
    8001d1b6:	a009                	j	8001d1b8 <.LBB9_61+0x36>
    8001d1b8:	4501                	li	a0,0
            let mut have_kids = false;
    8001d1ba:	0ea107a3          	sb	a0,239(sp)
    8001d1be:	04000593          	li	a1,64
            // Scan through table looking for exited children. 
            for index in 0..self.proc.len() {
    8001d1c2:	650e                	ld	a0,192(sp)
    8001d1c4:	fffe9097          	auipc	ra,0xfffe9
    8001d1c8:	b8c080e7          	jalr	-1140(ra) # 80005d50 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h55d8626d35f692cfE>
    8001d1cc:	f12a                	sd	a0,160(sp)
    8001d1ce:	a009                	j	8001d1d0 <.LBB9_61+0x4e>
    8001d1d0:	4501                	li	a0,0
    8001d1d2:	f9aa                	sd	a0,240(sp)
    8001d1d4:	758a                	ld	a1,160(sp)
    8001d1d6:	fdae                	sd	a1,248(sp)
    8001d1d8:	00003097          	auipc	ra,0x3
    8001d1dc:	8d2080e7          	jalr	-1838(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001d1e0:	ed2a                	sd	a0,152(sp)
    8001d1e2:	e92e                	sd	a1,144(sp)
    8001d1e4:	a009                	j	8001d1e6 <.LBB9_61+0x64>
    8001d1e6:	656a                	ld	a0,152(sp)
    8001d1e8:	e22a                	sd	a0,256(sp)
    8001d1ea:	65ca                	ld	a1,144(sp)
    8001d1ec:	e62e                	sd	a1,264(sp)
    8001d1ee:	a009                	j	8001d1f0 <.LBB9_61+0x6e>
    8001d1f0:	0208                	addi	a0,sp,256
    8001d1f2:	00003097          	auipc	ra,0x3
    8001d1f6:	84a080e7          	jalr	-1974(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001d1fa:	ea2a                	sd	a0,272(sp)
    8001d1fc:	ee2e                	sd	a1,280(sp)
    8001d1fe:	a009                	j	8001d200 <.LBB9_61+0x7e>
    8001d200:	6552                	ld	a0,272(sp)
    8001d202:	4581                	li	a1,0
    8001d204:	00b50463          	beq	a0,a1,8001d20c <.LBB9_61+0x8a>
    8001d208:	a009                	j	8001d20a <.LBB9_61+0x88>
    8001d20a:	a809                	j	8001d21c <.LBB9_61+0x9a>
                        return Some(pid);
                    }
                    
                }
            }
            let my_proc_data = my_proc.meta.acquire();
    8001d20c:	752a                	ld	a0,168(sp)
    8001d20e:	fffe5097          	auipc	ra,0xfffe5
    8001d212:	4fe080e7          	jalr	1278(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001d216:	fe2a                	sd	a0,312(sp)
    8001d218:	a2e1                	j	8001d3e0 <.LBB9_65+0xd4>
            for index in 0..self.proc.len() {
    8001d21a:	0000                	unimp
    8001d21c:	6572                	ld	a0,280(sp)
    8001d21e:	f2aa                	sd	a0,352(sp)
    8001d220:	f6aa                	sd	a0,360(sp)
    8001d222:	faaa                	sd	a0,368(sp)
    8001d224:	03f00593          	li	a1,63
                let p = &mut self.proc[index];
    8001d228:	e52a                	sd	a0,136(sp)
    8001d22a:	24a5eb63          	bltu	a1,a0,8001d480 <.LBB9_66>
    8001d22e:	a009                	j	8001d230 <.LBB9_61+0xae>
    8001d230:	42800513          	li	a0,1064
    8001d234:	65aa                	ld	a1,136(sp)
    8001d236:	02a58533          	mul	a0,a1,a0
    8001d23a:	660e                	ld	a2,192(sp)
    8001d23c:	9532                	add	a0,a0,a2
    8001d23e:	feaa                	sd	a0,376(sp)
                    p.data.get().as_mut().unwrap()
    8001d240:	04050693          	addi	a3,a0,64 # 11040 <.Lline_table_start0+0x22f>
    8001d244:	e12a                	sd	a0,128(sp)
    8001d246:	8536                	mv	a0,a3
    8001d248:	ffff9097          	auipc	ra,0xffff9
    8001d24c:	740080e7          	jalr	1856(ra) # 80016988 <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h76950a53ad759a03E>
    8001d250:	fcaa                	sd	a0,120(sp)
    8001d252:	a009                	j	8001d254 <.LBB9_61+0xd2>
    8001d254:	7566                	ld	a0,120(sp)
    8001d256:	fffe9097          	auipc	ra,0xfffe9
    8001d25a:	9f2080e7          	jalr	-1550(ra) # 80005c48 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h6a1828621f6e41cfE>
    8001d25e:	f8aa                	sd	a0,112(sp)
    8001d260:	a009                	j	8001d262 <.LBB9_62>

000000008001d262 <.LBB9_62>:
    8001d262:	0000c597          	auipc	a1,0xc
    8001d266:	03e58593          	addi	a1,a1,62 # 800292a0 <.L__unnamed_25>
    8001d26a:	7546                	ld	a0,112(sp)
    8001d26c:	ffffc097          	auipc	ra,0xffffc
    8001d270:	b1e080e7          	jalr	-1250(ra) # 80018d8a <_ZN4core6option15Option$LT$T$GT$6unwrap17hb3349c0825af7d66E>
    8001d274:	f4aa                	sd	a0,104(sp)
    8001d276:	a009                	j	8001d278 <.LBB9_62+0x16>
    8001d278:	7526                	ld	a0,104(sp)
    8001d27a:	e32a                	sd	a0,384(sp)
                if let Some(parent) = pdata.parent {
    8001d27c:	694c                	ld	a1,144(a0)
    8001d27e:	4605                	li	a2,1
    8001d280:	00c58463          	beq	a1,a2,8001d288 <.LBB9_62+0x26>
    8001d284:	a009                	j	8001d286 <.LBB9_62+0x24>
    8001d286:	aaa1                	j	8001d3de <.LBB9_65+0xd2>
    8001d288:	7526                	ld	a0,104(sp)
    8001d28a:	6d4c                	ld	a1,152(a0)
    8001d28c:	e72e                	sd	a1,392(sp)
                    if parent as *const _ == my_proc as *const _ {
    8001d28e:	762a                	ld	a2,168(sp)
    8001d290:	00c59d63          	bne	a1,a2,8001d2aa <.LBB9_62+0x48>
    8001d294:	a009                	j	8001d296 <.LBB9_62+0x34>
    8001d296:	4505                	li	a0,1
                        have_kids = true;
    8001d298:	0ea107a3          	sb	a0,239(sp)
                        let proc_data = p.meta.acquire();
    8001d29c:	650a                	ld	a0,128(sp)
    8001d29e:	fffe5097          	auipc	ra,0xfffe5
    8001d2a2:	46e080e7          	jalr	1134(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001d2a6:	f22a                	sd	a0,288(sp)
    8001d2a8:	a011                	j	8001d2ac <.LBB9_62+0x4a>
                if let Some(parent) = pdata.parent {
    8001d2aa:	aa15                	j	8001d3de <.LBB9_65+0xd2>
    8001d2ac:	1208                	addi	a0,sp,288
                        if proc_data.state == ProcState::ZOMBIE {
    8001d2ae:	fffe6097          	auipc	ra,0xfffe6
    8001d2b2:	62e080e7          	jalr	1582(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001d2b6:	f0aa                	sd	a0,96(sp)
    8001d2b8:	a009                	j	8001d2ba <.LBB9_62+0x58>
    8001d2ba:	7506                	ld	a0,96(sp)
    8001d2bc:	0561                	addi	a0,a0,24

000000008001d2be <.LBB9_63>:
    8001d2be:	0000c597          	auipc	a1,0xc
    8001d2c2:	ffa58593          	addi	a1,a1,-6 # 800292b8 <.L__unnamed_26>
    8001d2c6:	ffff6097          	auipc	ra,0xffff6
    8001d2ca:	932080e7          	jalr	-1742(ra) # 80012bf8 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE>
    8001d2ce:	ecaa                	sd	a0,88(sp)
    8001d2d0:	a009                	j	8001d2d2 <.LBB9_63+0x14>
    8001d2d2:	4501                	li	a0,0
    8001d2d4:	65e6                	ld	a1,88(sp)
    8001d2d6:	00a58a63          	beq	a1,a0,8001d2ea <.LBB9_63+0x2c>
    8001d2da:	a009                	j	8001d2dc <.LBB9_63+0x1e>
    8001d2dc:	1208                	addi	a0,sp,288
                            pid = proc_data.pid;
    8001d2de:	fffe6097          	auipc	ra,0xfffe6
    8001d2e2:	5fe080e7          	jalr	1534(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001d2e6:	e8aa                	sd	a0,80(sp)
    8001d2e8:	a011                	j	8001d2ec <.LBB9_63+0x2e>
                        if proc_data.state == ProcState::ZOMBIE {
    8001d2ea:	a0d9                	j	8001d3b0 <.LBB9_65+0xa4>
                            pid = proc_data.pid;
    8001d2ec:	6546                	ld	a0,80(sp)
    8001d2ee:	690c                	ld	a1,16(a0)
    8001d2f0:	edae                	sd	a1,216(sp)
                            let page_table = pdata.pagetable.as_mut().expect("Fail to get pagetable");
    8001d2f2:	75a6                	ld	a1,104(sp)
    8001d2f4:	01058513          	addi	a0,a1,16
    8001d2f8:	ffffb097          	auipc	ra,0xffffb
    8001d2fc:	53c080e7          	jalr	1340(ra) # 80018834 <_ZN4core6option15Option$LT$T$GT$6as_mut17hf7c3adcd3be8dd2cE>
    8001d300:	e4aa                	sd	a0,72(sp)
    8001d302:	a009                	j	8001d304 <.LBB9_64>

000000008001d304 <.LBB9_64>:
    8001d304:	0000c597          	auipc	a1,0xc
    8001d308:	fb558593          	addi	a1,a1,-75 # 800292b9 <.L__unnamed_27>

000000008001d30c <.LBB9_65>:
    8001d30c:	0000c697          	auipc	a3,0xc
    8001d310:	fc468693          	addi	a3,a3,-60 # 800292d0 <.L__unnamed_28>
    8001d314:	4655                	li	a2,21
    8001d316:	6526                	ld	a0,72(sp)
    8001d318:	ffffb097          	auipc	ra,0xffffb
    8001d31c:	6d6080e7          	jalr	1750(ra) # 800189ee <_ZN4core6option15Option$LT$T$GT$6expect17ha380aa9e3ff77169E>
    8001d320:	85aa                	mv	a1,a0
    8001d322:	eb2a                	sd	a0,400(sp)
    8001d324:	e0ae                	sd	a1,64(sp)
    8001d326:	a009                	j	8001d328 <.LBB9_65+0x1c>
                            if page_table.copy_out(addr, proc_data.xstate as *const u8, size_of_val(&proc_data.xstate)).is_err() {
    8001d328:	6506                	ld	a0,64(sp)
    8001d32a:	6108                	ld	a0,0(a0)
    8001d32c:	120c                	addi	a1,sp,288
    8001d32e:	fc2a                	sd	a0,56(sp)
    8001d330:	852e                	mv	a0,a1
    8001d332:	fffe6097          	auipc	ra,0xfffe6
    8001d336:	5aa080e7          	jalr	1450(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001d33a:	f82a                	sd	a0,48(sp)
    8001d33c:	a009                	j	8001d33e <.LBB9_65+0x32>
    8001d33e:	7542                	ld	a0,48(sp)
    8001d340:	6510                	ld	a2,8(a0)
    8001d342:	1208                	addi	a0,sp,288
    8001d344:	f432                	sd	a2,40(sp)
    8001d346:	fffe6097          	auipc	ra,0xfffe6
    8001d34a:	596080e7          	jalr	1430(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001d34e:	f02a                	sd	a0,32(sp)
    8001d350:	a009                	j	8001d352 <.LBB9_65+0x46>
    8001d352:	7502                	ld	a0,32(sp)
    8001d354:	0521                	addi	a0,a0,8
    8001d356:	ffff0097          	auipc	ra,0xffff0
    8001d35a:	518080e7          	jalr	1304(ra) # 8000d86e <_ZN4core3mem11size_of_val17hc7b3f68ccec7efc0E>
    8001d35e:	ec2a                	sd	a0,24(sp)
    8001d360:	a009                	j	8001d362 <.LBB9_65+0x56>
    8001d362:	7562                	ld	a0,56(sp)
    8001d364:	75ea                	ld	a1,184(sp)
    8001d366:	7622                	ld	a2,40(sp)
    8001d368:	66e2                	ld	a3,24(sp)
    8001d36a:	ffff2097          	auipc	ra,0xffff2
    8001d36e:	79c080e7          	jalr	1948(ra) # 8000fb06 <_ZN6kernel6memory7mapping10page_table9PageTable8copy_out17h3ded6d964c819ccfE>
    8001d372:	f62a                	sd	a0,296(sp)
    8001d374:	fa2e                	sd	a1,304(sp)
    8001d376:	a009                	j	8001d378 <.LBB9_65+0x6c>
    8001d378:	1228                	addi	a0,sp,296
    8001d37a:	ffff0097          	auipc	ra,0xffff0
    8001d37e:	904080e7          	jalr	-1788(ra) # 8000cc7e <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hfa956382e8de771dE>
    8001d382:	e82a                	sd	a0,16(sp)
    8001d384:	a009                	j	8001d386 <.LBB9_65+0x7a>
    8001d386:	4501                	li	a0,0
    8001d388:	65c2                	ld	a1,16(sp)
    8001d38a:	00a58963          	beq	a1,a0,8001d39c <.LBB9_65+0x90>
    8001d38e:	a009                	j	8001d390 <.LBB9_65+0x84>
                                drop(proc_data);
    8001d390:	7512                	ld	a0,288(sp)
    8001d392:	ffff0097          	auipc	ra,0xffff0
    8001d396:	514080e7          	jalr	1300(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001d39a:	a011                	j	8001d39e <.LBB9_65+0x92>
                        if proc_data.state == ProcState::ZOMBIE {
    8001d39c:	a811                	j	8001d3b0 <.LBB9_65+0xa4>
                                drop(wait_guard);
    8001d39e:	750e                	ld	a0,224(sp)
    8001d3a0:	ffff0097          	auipc	ra,0xffff0
    8001d3a4:	54e080e7          	jalr	1358(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    8001d3a8:	a009                	j	8001d3aa <.LBB9_65+0x9e>
    8001d3aa:	4501                	li	a0,0
                                return None
    8001d3ac:	e5aa                	sd	a0,200(sp)
    8001d3ae:	a0d9                	j	8001d474 <.LBB9_65+0x168>
                        drop(proc_data);
    8001d3b0:	7512                	ld	a0,288(sp)
    8001d3b2:	ffff0097          	auipc	ra,0xffff0
    8001d3b6:	4f4080e7          	jalr	1268(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001d3ba:	a009                	j	8001d3bc <.LBB9_65+0xb0>
                        drop(wait_guard);
    8001d3bc:	750e                	ld	a0,224(sp)
    8001d3be:	ffff0097          	auipc	ra,0xffff0
    8001d3c2:	530080e7          	jalr	1328(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    8001d3c6:	a009                	j	8001d3c8 <.LBB9_65+0xbc>
                        p.free_proc();
    8001d3c8:	650a                	ld	a0,128(sp)
    8001d3ca:	ffff5097          	auipc	ra,0xffff5
    8001d3ce:	144080e7          	jalr	324(ra) # 8001250e <_ZN6kernel7process7process7Process9free_proc17hdc196d0dcca3fce2E>
    8001d3d2:	a009                	j	8001d3d4 <.LBB9_65+0xc8>
                        return Some(pid);
    8001d3d4:	656e                	ld	a0,216(sp)
    8001d3d6:	e9aa                	sd	a0,208(sp)
    8001d3d8:	4505                	li	a0,1
    8001d3da:	e5aa                	sd	a0,200(sp)
    8001d3dc:	a861                	j	8001d474 <.LBB9_65+0x168>
            for index in 0..self.proc.len() {
    8001d3de:	bd09                	j	8001d1f0 <.LBB9_61+0x6e>
            // No point waiting if we don't have any children. 
            if !have_kids || my_proc_data.killed {
    8001d3e0:	0ef14503          	lbu	a0,239(sp)
    8001d3e4:	8905                	andi	a0,a0,1
    8001d3e6:	e911                	bnez	a0,8001d3fa <.LBB9_65+0xee>
    8001d3e8:	a009                	j	8001d3ea <.LBB9_65+0xde>
    8001d3ea:	4505                	li	a0,1
    8001d3ec:	14a103a3          	sb	a0,327(sp)
    8001d3f0:	a821                	j	8001d408 <.LBB9_65+0xfc>
    8001d3f2:	4501                	li	a0,0
    8001d3f4:	14a103a3          	sb	a0,327(sp)
    8001d3f8:	a801                	j	8001d408 <.LBB9_65+0xfc>
    8001d3fa:	1a28                	addi	a0,sp,312
    8001d3fc:	fffe6097          	auipc	ra,0xfffe6
    8001d400:	4e0080e7          	jalr	1248(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001d404:	e42a                	sd	a0,8(sp)
    8001d406:	a031                	j	8001d412 <.LBB9_65+0x106>
    8001d408:	14714503          	lbu	a0,327(sp)
    8001d40c:	8905                	andi	a0,a0,1
    8001d40e:	e901                	bnez	a0,8001d41e <.LBB9_65+0x112>
    8001d410:	a829                	j	8001d42a <.LBB9_65+0x11e>
    8001d412:	6522                	ld	a0,8(sp)
    8001d414:	01954583          	lbu	a1,25(a0)
    8001d418:	8985                	andi	a1,a1,1
    8001d41a:	f9e1                	bnez	a1,8001d3ea <.LBB9_65+0xde>
    8001d41c:	bfd9                	j	8001d3f2 <.LBB9_65+0xe6>
                drop(wait_guard);
    8001d41e:	750e                	ld	a0,224(sp)
    8001d420:	ffff0097          	auipc	ra,0xffff0
    8001d424:	4ce080e7          	jalr	1230(ra) # 8000d8ee <_ZN4core3mem4drop17h34c68ca7c6ebe63bE>
    8001d428:	a809                	j	8001d43a <.LBB9_65+0x12e>
                // println!("[Debug] wait: 返回空");
                return None
            }

            // Wait for a child to exit.
            my_proc.sleep(&wait_guard as *const _ as usize, wait_guard);
    8001d42a:	760e                	ld	a2,224(sp)
    8001d42c:	118c                	addi	a1,sp,224
    8001d42e:	752a                	ld	a0,168(sp)
    8001d430:	fffe9097          	auipc	ra,0xfffe9
    8001d434:	b2e080e7          	jalr	-1234(ra) # 80005f5e <_ZN6kernel7process7process7Process5sleep17h9103a0b993a9faf3E>
    8001d438:	a811                	j	8001d44c <.LBB9_65+0x140>
                drop(my_proc_data);
    8001d43a:	7572                	ld	a0,312(sp)
    8001d43c:	ffff0097          	auipc	ra,0xffff0
    8001d440:	46a080e7          	jalr	1130(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001d444:	a009                	j	8001d446 <.LBB9_65+0x13a>
    8001d446:	4501                	li	a0,0
                return None
    8001d448:	e5aa                	sd	a0,200(sp)
    8001d44a:	a035                	j	8001d476 <.LBB9_65+0x16a>
    8001d44c:	6545                	lui	a0,0x11
    8001d44e:	a305051b          	addiw	a0,a0,-1488
            wait_guard = self.wait_lock.acquire();
    8001d452:	658e                	ld	a1,192(sp)
    8001d454:	952e                	add	a0,a0,a1
    8001d456:	fffe5097          	auipc	ra,0xfffe5
    8001d45a:	004080e7          	jalr	4(ra) # 8000245a <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h7f3033c38eae9d66E>
    8001d45e:	e02a                	sd	a0,0(sp)
    8001d460:	a009                	j	8001d462 <.LBB9_65+0x156>
    8001d462:	6502                	ld	a0,0(sp)
    8001d464:	f1aa                	sd	a0,224(sp)
    8001d466:	1a28                	addi	a0,sp,312
        }
    8001d468:	fffe9097          	auipc	ra,0xfffe9
    8001d46c:	2d4080e7          	jalr	724(ra) # 8000673c <_ZN4core3ptr100drop_in_place$LT$kernel..lock..spinlock..SpinlockGuard$LT$kernel..process..process..ProcMeta$GT$$GT$17h708a1d723b054e11E>
    8001d470:	a009                	j	8001d472 <.LBB9_65+0x166>
        loop {
    8001d472:	b399                	j	8001d1b8 <.LBB9_61+0x36>
    8001d474:	a009                	j	8001d476 <.LBB9_65+0x16a>
    }
    8001d476:	652e                	ld	a0,200(sp)
    8001d478:	65ce                	ld	a1,208(sp)
    8001d47a:	60fa                	ld	ra,408(sp)
    8001d47c:	611d                	addi	sp,sp,416
    8001d47e:	8082                	ret

000000008001d480 <.LBB9_66>:
                let p = &mut self.proc[index];
    8001d480:	0000c617          	auipc	a2,0xc
    8001d484:	e0860613          	addi	a2,a2,-504 # 80029288 <.L__unnamed_29>
    8001d488:	04000593          	li	a1,64
    8001d48c:	652a                	ld	a0,136(sp)
    8001d48e:	00004097          	auipc	ra,0x4
    8001d492:	868080e7          	jalr	-1944(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE:

000000008001d498 <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE>:
    }

    /// Print a process listing to console. For debugging. 
    /// Runs when user type ^P on console. 
    /// No lock to avoid wedging a stuck machine further
    pub fn proc_dump(&self) {
    8001d498:	7149                	addi	sp,sp,-368
    8001d49a:	f686                	sd	ra,360(sp)
    8001d49c:	fa2a                	sd	a0,304(sp)
    8001d49e:	04000593          	li	a1,64
        for proc in self.proc.iter() {
    8001d4a2:	fffe9097          	auipc	ra,0xfffe9
    8001d4a6:	8be080e7          	jalr	-1858(ra) # 80005d60 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h65350c64fa8e0a0eE>
    8001d4aa:	f8aa                	sd	a0,112(sp)
    8001d4ac:	f4ae                	sd	a1,104(sp)
    8001d4ae:	a009                	j	8001d4b0 <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x18>
    8001d4b0:	7546                	ld	a0,112(sp)
    8001d4b2:	75a6                	ld	a1,104(sp)
    8001d4b4:	ffff6097          	auipc	ra,0xffff6
    8001d4b8:	d76080e7          	jalr	-650(ra) # 8001322a <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9820011383403f7cE>
    8001d4bc:	f0aa                	sd	a0,96(sp)
    8001d4be:	ecae                	sd	a1,88(sp)
    8001d4c0:	a009                	j	8001d4c2 <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x2a>
    8001d4c2:	7506                	ld	a0,96(sp)
    8001d4c4:	fcaa                	sd	a0,120(sp)
    8001d4c6:	65e6                	ld	a1,88(sp)
    8001d4c8:	e12e                	sd	a1,128(sp)
    8001d4ca:	a009                	j	8001d4cc <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x34>
    8001d4cc:	18a8                	addi	a0,sp,120
    8001d4ce:	ffff6097          	auipc	ra,0xffff6
    8001d4d2:	d66080e7          	jalr	-666(ra) # 80013234 <_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1cd49fa727171bbcE>
    8001d4d6:	e52a                	sd	a0,136(sp)
    8001d4d8:	a009                	j	8001d4da <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x42>
    8001d4da:	652a                	ld	a0,136(sp)
    8001d4dc:	00a035b3          	snez	a1,a0
    8001d4e0:	4601                	li	a2,0
    8001d4e2:	00c50463          	beq	a0,a2,8001d4ea <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x52>
    8001d4e6:	a009                	j	8001d4e8 <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x50>
    8001d4e8:	a029                	j	8001d4f2 <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x5a>
            if proc.state() == ProcState::UNUSED { continue; }
            else {
                println!("pid: {} state: {:?} name: {}", proc.pid(), proc.state(), proc.name());
            }
        }
    }
    8001d4ea:	70b6                	ld	ra,360(sp)
    8001d4ec:	6175                	addi	sp,sp,368
    8001d4ee:	8082                	ret
        for proc in self.proc.iter() {
    8001d4f0:	0000                	unimp
    8001d4f2:	652a                	ld	a0,136(sp)
    8001d4f4:	fe2a                	sd	a0,312(sp)
    8001d4f6:	e2aa                	sd	a0,320(sp)
    8001d4f8:	e6aa                	sd	a0,328(sp)
            if proc.state() == ProcState::UNUSED { continue; }
    8001d4fa:	e8aa                	sd	a0,80(sp)
    8001d4fc:	ffff5097          	auipc	ra,0xffff5
    8001d500:	d96080e7          	jalr	-618(ra) # 80012292 <_ZN6kernel7process7process7Process5state17h1667f7db3e6c24ffE>
    8001d504:	0ff57513          	zext.b	a0,a0
    8001d508:	08a10ba3          	sb	a0,151(sp)
    8001d50c:	a009                	j	8001d50e <.LBB10_21>

000000008001d50e <.LBB10_21>:
    8001d50e:	0000c597          	auipc	a1,0xc
    8001d512:	dda58593          	addi	a1,a1,-550 # 800292e8 <.L__unnamed_30>
    8001d516:	09710513          	addi	a0,sp,151
    8001d51a:	ffff5097          	auipc	ra,0xffff5
    8001d51e:	6de080e7          	jalr	1758(ra) # 80012bf8 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE>
    8001d522:	e4aa                	sd	a0,72(sp)
    8001d524:	a009                	j	8001d526 <.LBB10_21+0x18>
    8001d526:	6526                	ld	a0,72(sp)
    8001d528:	e979                	bnez	a0,8001d5fe <.LBB10_25+0x28>
    8001d52a:	a009                	j	8001d52c <.LBB10_21+0x1e>
                println!("pid: {} state: {:?} name: {}", proc.pid(), proc.state(), proc.name());
    8001d52c:	6546                	ld	a0,80(sp)
    8001d52e:	ffff5097          	auipc	ra,0xffff5
    8001d532:	d28080e7          	jalr	-728(ra) # 80012256 <_ZN6kernel7process7process7Process3pid17hdf41eeabecdb1516E>
    8001d536:	ea2a                	sd	a0,272(sp)
    8001d538:	a009                	j	8001d53a <.LBB10_21+0x2c>
    8001d53a:	6546                	ld	a0,80(sp)
    8001d53c:	ffff5097          	auipc	ra,0xffff5
    8001d540:	d56080e7          	jalr	-682(ra) # 80012292 <_ZN6kernel7process7process7Process5state17h1667f7db3e6c24ffE>
    8001d544:	0ff57513          	zext.b	a0,a0
    8001d548:	10a10fa3          	sb	a0,287(sp)
    8001d54c:	a009                	j	8001d54e <.LBB10_21+0x40>
    8001d54e:	6546                	ld	a0,80(sp)
    8001d550:	ffff5097          	auipc	ra,0xffff5
    8001d554:	d82080e7          	jalr	-638(ra) # 800122d2 <_ZN6kernel7process7process7Process4name17he6ec11f693a6ee27E>
    8001d558:	f22a                	sd	a0,288(sp)
    8001d55a:	f62e                	sd	a1,296(sp)
    8001d55c:	a009                	j	8001d55e <.LBB10_21+0x50>
    8001d55e:	0a08                	addi	a0,sp,272
    8001d560:	fdaa                	sd	a0,248(sp)
    8001d562:	11f10593          	addi	a1,sp,287
    8001d566:	e22e                	sd	a1,256(sp)
    8001d568:	1210                	addi	a2,sp,288
    8001d56a:	e632                	sd	a2,264(sp)
    8001d56c:	eaaa                	sd	a0,336(sp)
    8001d56e:	eeae                	sd	a1,344(sp)
    8001d570:	f2b2                	sd	a2,352(sp)

000000008001d572 <.LBB10_22>:
    8001d572:	00006697          	auipc	a3,0x6
    8001d576:	ac068693          	addi	a3,a3,-1344 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    8001d57a:	e0ae                	sd	a1,64(sp)
    8001d57c:	85b6                	mv	a1,a3
    8001d57e:	fc32                	sd	a2,56(sp)
    8001d580:	00002097          	auipc	ra,0x2
    8001d584:	49a080e7          	jalr	1178(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8001d588:	f82a                	sd	a0,48(sp)
    8001d58a:	f42e                	sd	a1,40(sp)
    8001d58c:	a009                	j	8001d58e <.LBB10_23>

000000008001d58e <.LBB10_23>:
    8001d58e:	ffff5597          	auipc	a1,0xffff5
    8001d592:	4ec58593          	addi	a1,a1,1260 # 80012a7a <_ZN72_$LT$kernel..process..process..ProcState$u20$as$u20$core..fmt..Debug$GT$3fmt17hfb168c94b2f512daE>
    8001d596:	6506                	ld	a0,64(sp)
    8001d598:	fffeb097          	auipc	ra,0xfffeb
    8001d59c:	816080e7          	jalr	-2026(ra) # 80007dae <_ZN4core3fmt10ArgumentV13new17h11722b493b1ededaE>
    8001d5a0:	f02a                	sd	a0,32(sp)
    8001d5a2:	ec2e                	sd	a1,24(sp)
    8001d5a4:	a009                	j	8001d5a6 <.LBB10_24>

000000008001d5a6 <.LBB10_24>:
    8001d5a6:	fffea597          	auipc	a1,0xfffea
    8001d5aa:	7dc58593          	addi	a1,a1,2012 # 80007d82 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf9f75f72a35e80d1E>
    8001d5ae:	7562                	ld	a0,56(sp)
    8001d5b0:	fffeb097          	auipc	ra,0xfffeb
    8001d5b4:	886080e7          	jalr	-1914(ra) # 80007e36 <_ZN4core3fmt10ArgumentV13new17h8e1aa6c8ae6fe746E>
    8001d5b8:	e82a                	sd	a0,16(sp)
    8001d5ba:	e42e                	sd	a1,8(sp)
    8001d5bc:	a009                	j	8001d5be <.LBB10_24+0x18>
    8001d5be:	7542                	ld	a0,48(sp)
    8001d5c0:	e5aa                	sd	a0,200(sp)
    8001d5c2:	75a2                	ld	a1,40(sp)
    8001d5c4:	e9ae                	sd	a1,208(sp)
    8001d5c6:	7602                	ld	a2,32(sp)
    8001d5c8:	edb2                	sd	a2,216(sp)
    8001d5ca:	66e2                	ld	a3,24(sp)
    8001d5cc:	f1b6                	sd	a3,224(sp)
    8001d5ce:	6742                	ld	a4,16(sp)
    8001d5d0:	f5ba                	sd	a4,232(sp)
    8001d5d2:	67a2                	ld	a5,8(sp)
    8001d5d4:	f9be                	sd	a5,240(sp)

000000008001d5d6 <.LBB10_25>:
    8001d5d6:	0000c597          	auipc	a1,0xc
    8001d5da:	d2258593          	addi	a1,a1,-734 # 800292f8 <.L__unnamed_31>
    8001d5de:	0928                	addi	a0,sp,152
    8001d5e0:	4611                	li	a2,4
    8001d5e2:	01b4                	addi	a3,sp,200
    8001d5e4:	470d                	li	a4,3
    8001d5e6:	fffe8097          	auipc	ra,0xfffe8
    8001d5ea:	13e080e7          	jalr	318(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001d5ee:	a009                	j	8001d5f0 <.LBB10_25+0x1a>
    8001d5f0:	0928                	addi	a0,sp,152
    8001d5f2:	ffff3097          	auipc	ra,0xffff3
    8001d5f6:	6fe080e7          	jalr	1790(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8001d5fa:	a009                	j	8001d5fc <.LBB10_25+0x26>
        for proc in self.proc.iter() {
    8001d5fc:	bdc1                	j	8001d4cc <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x34>
    8001d5fe:	b5f9                	j	8001d4cc <_ZN6kernel7process7manager11ProcManager9proc_dump17h58041543b7a7943aE+0x34>

Disassembly of section .text._ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E:

000000008001d600 <_ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E>:
}

#[inline]
fn kernel_stack(pos: usize) -> usize {
    8001d600:	7179                	addi	sp,sp,-48
    8001d602:	f42a                	sd	a0,40(sp)
    TRAMPOLINE - (pos + 1) * 5 * PGSIZE
    8001d604:	00150593          	addi	a1,a0,1 # 11001 <.Lline_table_start0+0x1f0>
    8001d608:	f02e                	sd	a1,32(sp)
    8001d60a:	04a5e863          	bltu	a1,a0,8001d65a <.LBB11_9>
    8001d60e:	a009                	j	8001d610 <_ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E+0x10>
    8001d610:	7502                	ld	a0,32(sp)
    8001d612:	00251593          	slli	a1,a0,0x2
    8001d616:	95aa                	add	a1,a1,a0
    8001d618:	4615                	li	a2,5
    8001d61a:	02c53633          	mulhu	a2,a0,a2
    8001d61e:	4681                	li	a3,0
    8001d620:	ec2e                	sd	a1,24(sp)
    8001d622:	04d61a63          	bne	a2,a3,8001d676 <.LBB11_11>
    8001d626:	a009                	j	8001d628 <_ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E+0x28>
    8001d628:	4505                	li	a0,1
    8001d62a:	1552                	slli	a0,a0,0x34
    8001d62c:	157d                	addi	a0,a0,-1
    8001d62e:	65e2                	ld	a1,24(sp)
    8001d630:	8d6d                	and	a0,a0,a1
    8001d632:	00c59613          	slli	a2,a1,0xc
    8001d636:	e832                	sd	a2,16(sp)
    8001d638:	04b51e63          	bne	a0,a1,8001d694 <.LBB11_13>
    8001d63c:	a009                	j	8001d63e <_ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E+0x3e>
    8001d63e:	04000537          	lui	a0,0x4000
    8001d642:	357d                	addiw	a0,a0,-1
    8001d644:	0532                	slli	a0,a0,0xc
    8001d646:	65c2                	ld	a1,16(sp)
    8001d648:	40b50633          	sub	a2,a0,a1
    8001d64c:	e432                	sd	a2,8(sp)
    8001d64e:	06c56263          	bltu	a0,a2,8001d6b2 <.LBB11_15>
    8001d652:	a009                	j	8001d654 <_ZN6kernel7process7manager12kernel_stack17h7d002f80207d9aa2E+0x54>
    8001d654:	6522                	ld	a0,8(sp)
    8001d656:	6145                	addi	sp,sp,48
    8001d658:	8082                	ret

000000008001d65a <.LBB11_9>:
    TRAMPOLINE - (pos + 1) * 5 * PGSIZE
    8001d65a:	0000c517          	auipc	a0,0xc
    8001d65e:	a1650513          	addi	a0,a0,-1514 # 80029070 <str.0>

000000008001d662 <.LBB11_10>:
    8001d662:	0000c617          	auipc	a2,0xc
    8001d666:	cd660613          	addi	a2,a2,-810 # 80029338 <.L__unnamed_32>
    8001d66a:	45f1                	li	a1,28
    8001d66c:	00003097          	auipc	ra,0x3
    8001d670:	65e080e7          	jalr	1630(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001d676 <.LBB11_11>:
    8001d676:	0000c517          	auipc	a0,0xc
    8001d67a:	cda50513          	addi	a0,a0,-806 # 80029350 <str.1>

000000008001d67e <.LBB11_12>:
    8001d67e:	0000c617          	auipc	a2,0xc
    8001d682:	cba60613          	addi	a2,a2,-838 # 80029338 <.L__unnamed_32>
    8001d686:	02100593          	li	a1,33
    8001d68a:	00003097          	auipc	ra,0x3
    8001d68e:	640080e7          	jalr	1600(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001d694 <.LBB11_13>:
    8001d694:	0000c517          	auipc	a0,0xc
    8001d698:	cbc50513          	addi	a0,a0,-836 # 80029350 <str.1>

000000008001d69c <.LBB11_14>:
    8001d69c:	0000c617          	auipc	a2,0xc
    8001d6a0:	c9c60613          	addi	a2,a2,-868 # 80029338 <.L__unnamed_32>
    8001d6a4:	02100593          	li	a1,33
    8001d6a8:	00003097          	auipc	ra,0x3
    8001d6ac:	622080e7          	jalr	1570(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001d6b2 <.LBB11_15>:
    8001d6b2:	0000c517          	auipc	a0,0xc
    8001d6b6:	cde50513          	addi	a0,a0,-802 # 80029390 <str.2>

000000008001d6ba <.LBB11_16>:
    8001d6ba:	0000c617          	auipc	a2,0xc
    8001d6be:	cbe60613          	addi	a2,a2,-834 # 80029378 <.L__unnamed_33>
    8001d6c2:	02100593          	li	a1,33
    8001d6c6:	00003097          	auipc	ra,0x3
    8001d6ca:	604080e7          	jalr	1540(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E:

000000008001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>:
    cpus: [CPU; NCPU]
}

pub static mut CPU_MANAGER:CPUManager = CPUManager::new();

pub unsafe fn cpuid() -> usize {
    8001d6d0:	1101                	addi	sp,sp,-32
    let id = tp::read();
    8001d6d2:	ec06                	sd	ra,24(sp)
    8001d6d4:	fffea097          	auipc	ra,0xfffea
    8001d6d8:	296080e7          	jalr	662(ra) # 8000796a <_ZN6kernel8register2tp4read17h6b8b58c7ee01e713E>
    8001d6dc:	85aa                	mv	a1,a0
    8001d6de:	e82a                	sd	a0,16(sp)
    8001d6e0:	e42e                	sd	a1,8(sp)
    8001d6e2:	a009                	j	8001d6e4 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E+0x14>
    id
}
    8001d6e4:	6522                	ld	a0,8(sp)
    8001d6e6:	60e2                	ld	ra,24(sp)
    8001d6e8:	6105                	addi	sp,sp,32
    8001d6ea:	8082                	ret

Disassembly of section .text._ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E:

000000008001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>:
        Self{
            cpus: array![_ => CPU::new(); NCPU],
        }
    }

    pub unsafe fn mycpu(&mut self) -> &mut CPU{
    8001d6ec:	7179                	addi	sp,sp,-48
    8001d6ee:	f406                	sd	ra,40(sp)
    8001d6f0:	ec2a                	sd	a0,24(sp)
        let cpu_id = cpuid();
    8001d6f2:	e82a                	sd	a0,16(sp)
    8001d6f4:	00000097          	auipc	ra,0x0
    8001d6f8:	fdc080e7          	jalr	-36(ra) # 8001d6d0 <_ZN6kernel7process3cpu5cpuid17h5f316aa1ea26c654E>
    8001d6fc:	85aa                	mv	a1,a0
    8001d6fe:	f02a                	sd	a0,32(sp)
    8001d700:	e42e                	sd	a1,8(sp)
    8001d702:	a009                	j	8001d704 <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E+0x18>
    8001d704:	451d                	li	a0,7
        &mut self.cpus[cpu_id]
    8001d706:	65a2                	ld	a1,8(sp)
    8001d708:	00b56d63          	bltu	a0,a1,8001d722 <.LBB1_4>
    8001d70c:	a009                	j	8001d70e <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E+0x22>
    8001d70e:	08800513          	li	a0,136
    8001d712:	65a2                	ld	a1,8(sp)
    8001d714:	02a58533          	mul	a0,a1,a0
    8001d718:	6642                	ld	a2,16(sp)
    8001d71a:	9532                	add	a0,a0,a2
    }
    8001d71c:	70a2                	ld	ra,40(sp)
    8001d71e:	6145                	addi	sp,sp,48
    8001d720:	8082                	ret

000000008001d722 <.LBB1_4>:
        &mut self.cpus[cpu_id]
    8001d722:	0000c617          	auipc	a2,0xc
    8001d726:	ca660613          	addi	a2,a2,-858 # 800293c8 <.L__unnamed_1>
    8001d72a:	45a1                	li	a1,8
    8001d72c:	6522                	ld	a0,8(sp)
    8001d72e:	00003097          	auipc	ra,0x3
    8001d732:	5c8080e7          	jalr	1480(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E:

000000008001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>:

    pub unsafe fn myproc(&mut self) -> Option<&mut Process>{
    8001d738:	7139                	addi	sp,sp,-64
    8001d73a:	fc06                	sd	ra,56(sp)
    8001d73c:	f02a                	sd	a0,32(sp)
        push_off();
    8001d73e:	00000097          	auipc	ra,0x0
    8001d742:	476080e7          	jalr	1142(ra) # 8001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>
    8001d746:	a009                	j	8001d748 <.LBB2_6>

000000008001d748 <.LBB2_6>:
        let c = CPU_MANAGER.mycpu();
    8001d748:	00052517          	auipc	a0,0x52
    8001d74c:	8b850513          	addi	a0,a0,-1864 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001d750:	00000097          	auipc	ra,0x0
    8001d754:	f9c080e7          	jalr	-100(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    8001d758:	85aa                	mv	a1,a0
    8001d75a:	f42a                	sd	a0,40(sp)
    8001d75c:	e82e                	sd	a1,16(sp)
    8001d75e:	a009                	j	8001d760 <.LBB2_6+0x18>
        let p = &mut *c.process.unwrap().as_ptr();
    8001d760:	6542                	ld	a0,16(sp)
    8001d762:	6108                	ld	a0,0(a0)

000000008001d764 <.LBB2_7>:
    8001d764:	0000c597          	auipc	a1,0xc
    8001d768:	c7c58593          	addi	a1,a1,-900 # 800293e0 <.L__unnamed_2>
    8001d76c:	ffffb097          	auipc	ra,0xffffb
    8001d770:	654080e7          	jalr	1620(ra) # 80018dc0 <_ZN4core6option15Option$LT$T$GT$6unwrap17hc712b9fcf71d0a07E>
    8001d774:	e42a                	sd	a0,8(sp)
    8001d776:	a009                	j	8001d778 <.LBB2_7+0x14>
    8001d778:	6522                	ld	a0,8(sp)
    8001d77a:	fffe7097          	auipc	ra,0xfffe7
    8001d77e:	53a080e7          	jalr	1338(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    8001d782:	e02a                	sd	a0,0(sp)
    8001d784:	a009                	j	8001d786 <.LBB2_7+0x22>
    8001d786:	6502                	ld	a0,0(sp)
    8001d788:	f82a                	sd	a0,48(sp)
        pop_off();
    8001d78a:	00000097          	auipc	ra,0x0
    8001d78e:	4ae080e7          	jalr	1198(ra) # 8001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>
    8001d792:	a009                	j	8001d794 <.LBB2_7+0x30>
        Some(p)
    8001d794:	6502                	ld	a0,0(sp)
    8001d796:	ec2a                	sd	a0,24(sp)
    }
    8001d798:	70e2                	ld	ra,56(sp)
    8001d79a:	6121                	addi	sp,sp,64
    8001d79c:	8082                	ret

Disassembly of section .text._ZN6kernel7process3cpu10CPUManager9scheduler17hcbf70eaf12402349E:

000000008001d79e <_ZN6kernel7process3cpu10CPUManager9scheduler17hcbf70eaf12402349E>:
    /// Scheduler never returns.  It loops, doing:
    ///  - choose a process to run.
    ///  - switch to start running that process.
    ///  - eventually that process transfers control
    ///    via switch back to the scheduler.
    pub unsafe fn scheduler(&mut self){
    8001d79e:	7175                	addi	sp,sp,-144
    8001d7a0:	e506                	sd	ra,136(sp)
    8001d7a2:	f8aa                	sd	a0,112(sp)
        extern "C" {
            fn switch(old: *mut Context, new: *mut Context);
        }

        let c = self.mycpu();
    8001d7a4:	00000097          	auipc	ra,0x0
    8001d7a8:	f48080e7          	jalr	-184(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    8001d7ac:	85aa                	mv	a1,a0
    8001d7ae:	fcaa                	sd	a0,120(sp)
    8001d7b0:	e4ae                	sd	a1,72(sp)
    8001d7b2:	a009                	j	8001d7b4 <_ZN6kernel7process3cpu10CPUManager9scheduler17hcbf70eaf12402349E+0x16>
        loop {
    8001d7b4:	a009                	j	8001d7b6 <_ZN6kernel7process3cpu10CPUManager9scheduler17hcbf70eaf12402349E+0x18>
            // Avoid deadlock by ensuring that devices can interrupt.
            sstatus::intr_on();
    8001d7b6:	ffff8097          	auipc	ra,0xffff8
    8001d7ba:	afc080e7          	jalr	-1284(ra) # 800152b2 <_ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE>
    8001d7be:	a009                	j	8001d7c0 <.LBB3_23>

000000008001d7c0 <.LBB3_23>:
            match PROC_MANAGER.seek_runnable() {
    8001d7c0:	0003e517          	auipc	a0,0x3e
    8001d7c4:	74050513          	addi	a0,a0,1856 # 8005bf00 <_ZN6kernel7process7manager12PROC_MANAGER17heaff6e220fa5503fE>
    8001d7c8:	fffff097          	auipc	ra,0xfffff
    8001d7cc:	5d8080e7          	jalr	1496(ra) # 8001cda0 <_ZN6kernel7process7manager11ProcManager13seek_runnable17h9a8272f9525c3261E>
    8001d7d0:	e8aa                	sd	a0,80(sp)
    8001d7d2:	a009                	j	8001d7d4 <.LBB3_23+0x14>
                Some(proc) => {
    8001d7d4:	6546                	ld	a0,80(sp)
    8001d7d6:	00a035b3          	snez	a1,a0
    8001d7da:	4601                	li	a2,0
    8001d7dc:	00c50463          	beq	a0,a2,8001d7e4 <.LBB3_23+0x24>
    8001d7e0:	a009                	j	8001d7e2 <.LBB3_23+0x22>
    8001d7e2:	a019                	j	8001d7e8 <.LBB3_23+0x28>
            match PROC_MANAGER.seek_runnable() {
    8001d7e4:	a0ed                	j	8001d8ce <.LBB3_25+0x3a>
    8001d7e6:	0000                	unimp
                Some(proc) => {
    8001d7e8:	6546                	ld	a0,80(sp)
    8001d7ea:	e12a                	sd	a0,128(sp)
                    // Switch to chosen process. It is the process's job
                    // to release it's lock and then reacquire it 
                    // before jumping back to us.
                    c.set_proc(NonNull::new(proc as *mut Process));
    8001d7ec:	e0aa                	sd	a0,64(sp)
    8001d7ee:	fffe7097          	auipc	ra,0xfffe7
    8001d7f2:	2ee080e7          	jalr	750(ra) # 80004adc <_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17he80d3d097df82e66E>
    8001d7f6:	fc2a                	sd	a0,56(sp)
    8001d7f8:	a009                	j	8001d7fa <.LBB3_23+0x3a>
    8001d7fa:	6526                	ld	a0,72(sp)
    8001d7fc:	75e2                	ld	a1,56(sp)
    8001d7fe:	00000097          	auipc	ra,0x0
    8001d802:	16a080e7          	jalr	362(ra) # 8001d968 <_ZN6kernel7process3cpu3CPU8set_proc17h81f8a3d6e3dedd5bE>
    8001d806:	a009                	j	8001d808 <.LBB3_23+0x48>
                    let mut pmeta = proc.meta.acquire();
    8001d808:	6506                	ld	a0,64(sp)
    8001d80a:	fffe5097          	auipc	ra,0xfffe5
    8001d80e:	f02080e7          	jalr	-254(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001d812:	ecaa                	sd	a0,88(sp)
    8001d814:	a009                	j	8001d816 <.LBB3_23+0x56>
    8001d816:	4511                	li	a0,4
                    pmeta.state = ProcState::RUNNING;
    8001d818:	06a103a3          	sb	a0,103(sp)
    8001d81c:	08a8                	addi	a0,sp,88
    8001d81e:	fffe6097          	auipc	ra,0xfffe6
    8001d822:	1dc080e7          	jalr	476(ra) # 800039fa <_ZN93_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h878998b283dc92deE>
    8001d826:	f82a                	sd	a0,48(sp)
    8001d828:	a009                	j	8001d82a <.LBB3_23+0x6a>
    8001d82a:	06710503          	lb	a0,103(sp)
    8001d82e:	75c2                	ld	a1,48(sp)
    8001d830:	00a58c23          	sb	a0,24(a1)
                    switch(
                        c.get_context_mut(),
    8001d834:	6526                	ld	a0,72(sp)
    8001d836:	00000097          	auipc	ra,0x0
    8001d83a:	13e080e7          	jalr	318(ra) # 8001d974 <_ZN6kernel7process3cpu3CPU15get_context_mut17h045ef36f8213fdd0E>
    8001d83e:	f42a                	sd	a0,40(sp)
    8001d840:	a009                	j	8001d842 <.LBB3_23+0x82>
                        &mut proc.data.get_mut().context as *mut Context
    8001d842:	6506                	ld	a0,64(sp)
    8001d844:	04050513          	addi	a0,a0,64
    8001d848:	ffff9097          	auipc	ra,0xffff9
    8001d84c:	182080e7          	jalr	386(ra) # 800169ca <_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17h1760eeb065abe2f9E>
    8001d850:	f02a                	sd	a0,32(sp)
    8001d852:	a009                	j	8001d854 <.LBB3_23+0x94>
    8001d854:	7502                	ld	a0,32(sp)
    8001d856:	02050593          	addi	a1,a0,32
                    switch(
    8001d85a:	7522                	ld	a0,40(sp)
    8001d85c:	fffe4097          	auipc	ra,0xfffe4
    8001d860:	8c6080e7          	jalr	-1850(ra) # 80001122 <switch>
    8001d864:	a009                	j	8001d866 <.LBB3_23+0xa6>
                    );
                    if c.get_context_mut().is_null() {
    8001d866:	6526                	ld	a0,72(sp)
    8001d868:	00000097          	auipc	ra,0x0
    8001d86c:	10c080e7          	jalr	268(ra) # 8001d974 <_ZN6kernel7process3cpu3CPU15get_context_mut17h045ef36f8213fdd0E>
    8001d870:	ec2a                	sd	a0,24(sp)
    8001d872:	a009                	j	8001d874 <.LBB3_23+0xb4>
    8001d874:	6562                	ld	a0,24(sp)
    8001d876:	fffea097          	auipc	ra,0xfffea
    8001d87a:	c08080e7          	jalr	-1016(ra) # 8000747e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h778dd669df41f000E>
    8001d87e:	e82a                	sd	a0,16(sp)
    8001d880:	a009                	j	8001d882 <.LBB3_23+0xc2>
    8001d882:	4501                	li	a0,0
    8001d884:	65c2                	ld	a1,16(sp)
    8001d886:	02a58263          	beq	a1,a0,8001d8aa <.LBB3_25+0x16>
    8001d88a:	a009                	j	8001d88c <.LBB3_24>

000000008001d88c <.LBB3_24>:
                        panic!("context switch back with no process reference.");
    8001d88c:	0000c517          	auipc	a0,0xc
    8001d890:	b6c50513          	addi	a0,a0,-1172 # 800293f8 <.L__unnamed_3>

000000008001d894 <.LBB3_25>:
    8001d894:	0000c617          	auipc	a2,0xc
    8001d898:	b9460613          	addi	a2,a2,-1132 # 80029428 <.L__unnamed_4>
    8001d89c:	02e00593          	li	a1,46
    8001d8a0:	00003097          	auipc	ra,0x3
    8001d8a4:	42a080e7          	jalr	1066(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001d8a8:	0000                	unimp
    8001d8aa:	4501                	li	a0,0
                    }
                    // Process is done running for now. 
                    // It should have changed it's process state before coming back. 
                    c.set_proc(None);
    8001d8ac:	f4aa                	sd	a0,104(sp)
    8001d8ae:	65a6                	ld	a1,72(sp)
    8001d8b0:	e42a                	sd	a0,8(sp)
    8001d8b2:	852e                	mv	a0,a1
    8001d8b4:	65a2                	ld	a1,8(sp)
    8001d8b6:	00000097          	auipc	ra,0x0
    8001d8ba:	0b2080e7          	jalr	178(ra) # 8001d968 <_ZN6kernel7process3cpu3CPU8set_proc17h81f8a3d6e3dedd5bE>
    8001d8be:	a009                	j	8001d8c0 <.LBB3_25+0x2c>
                    drop(pmeta);
    8001d8c0:	6566                	ld	a0,88(sp)
    8001d8c2:	ffff0097          	auipc	ra,0xffff0
    8001d8c6:	fe4080e7          	jalr	-28(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001d8ca:	a009                	j	8001d8cc <.LBB3_25+0x38>
            match PROC_MANAGER.seek_runnable() {
    8001d8cc:	a009                	j	8001d8ce <.LBB3_25+0x3a>
        loop {
    8001d8ce:	b5e5                	j	8001d7b6 <_ZN6kernel7process3cpu10CPUManager9scheduler17hcbf70eaf12402349E+0x18>

Disassembly of section .text._ZN6kernel7process3cpu10CPUManager8alloc_fd17hbf6d48048331bdbcE:

000000008001d8d0 <_ZN6kernel7process3cpu10CPUManager8alloc_fd17hbf6d48048331bdbcE>:
                None => {}
            }
        }
    }

    pub fn alloc_fd(&mut self, file:&VFile) -> Result<usize, &'static str> {
    8001d8d0:	7135                	addi	sp,sp,-160
    8001d8d2:	ed06                	sd	ra,152(sp)
    8001d8d4:	f4ae                	sd	a1,104(sp)
    8001d8d6:	f8b2                	sd	a2,112(sp)
        let proc = unsafe{ self.myproc().ok_or("Fail to find current process")? };
    8001d8d8:	f82a                	sd	a0,48(sp)
    8001d8da:	852e                	mv	a0,a1
    8001d8dc:	f432                	sd	a2,40(sp)
    8001d8de:	00000097          	auipc	ra,0x0
    8001d8e2:	e5a080e7          	jalr	-422(ra) # 8001d738 <_ZN6kernel7process3cpu10CPUManager6myproc17hd0c5c9eb1817b805E>
    8001d8e6:	f02a                	sd	a0,32(sp)
    8001d8e8:	a009                	j	8001d8ea <.LBB4_12>

000000008001d8ea <.LBB4_12>:
    8001d8ea:	0000c617          	auipc	a2,0xc
    8001d8ee:	b5660613          	addi	a2,a2,-1194 # 80029440 <.L__unnamed_5>
    8001d8f2:	0888                	addi	a0,sp,80
    8001d8f4:	46f1                	li	a3,28
    8001d8f6:	7582                	ld	a1,32(sp)
    8001d8f8:	ffffb097          	auipc	ra,0xffffb
    8001d8fc:	d2e080e7          	jalr	-722(ra) # 80018626 <_ZN4core6option15Option$LT$T$GT$5ok_or17h421f0dfbff4254faE>
    8001d900:	a009                	j	8001d902 <.LBB4_12+0x18>
    8001d902:	1828                	addi	a0,sp,56
    8001d904:	088c                	addi	a1,sp,80
    8001d906:	fffef097          	auipc	ra,0xfffef
    8001d90a:	5cc080e7          	jalr	1484(ra) # 8000ced2 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h0a8c29044921e3c5E>
    8001d90e:	a009                	j	8001d910 <.LBB4_12+0x26>
    8001d910:	7562                	ld	a0,56(sp)
    8001d912:	4581                	li	a1,0
    8001d914:	00b50463          	beq	a0,a1,8001d91c <.LBB4_12+0x32>
    8001d918:	a009                	j	8001d91a <.LBB4_12+0x30>
    8001d91a:	a839                	j	8001d938 <.LBB4_12+0x4e>
    8001d91c:	6506                	ld	a0,64(sp)
    8001d91e:	e52a                	sd	a0,136(sp)
    8001d920:	e92a                	sd	a0,144(sp)
        proc.fd_alloc(file)
    8001d922:	75c2                	ld	a1,48(sp)
    8001d924:	ec2a                	sd	a0,24(sp)
    8001d926:	852e                	mv	a0,a1
    8001d928:	65e2                	ld	a1,24(sp)
    8001d92a:	7622                	ld	a2,40(sp)
    8001d92c:	ffff5097          	auipc	ra,0xffff5
    8001d930:	dd6080e7          	jalr	-554(ra) # 80012702 <_ZN6kernel7process7process7Process8fd_alloc17h081b64a1ef9eef32E>
    8001d934:	a035                	j	8001d960 <.LBB4_12+0x76>
        let proc = unsafe{ self.myproc().ok_or("Fail to find current process")? };
    8001d936:	0000                	unimp
    8001d938:	6506                	ld	a0,64(sp)
    8001d93a:	65a6                	ld	a1,72(sp)
    8001d93c:	fcaa                	sd	a0,120(sp)
    8001d93e:	e12e                	sd	a1,128(sp)
    8001d940:	ffffc097          	auipc	ra,0xffffc
    8001d944:	8a4080e7          	jalr	-1884(ra) # 800191e4 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd42be784b942347dE>
    8001d948:	e82a                	sd	a0,16(sp)
    8001d94a:	e42e                	sd	a1,8(sp)
    8001d94c:	a009                	j	8001d94e <.LBB4_12+0x64>
    8001d94e:	7542                	ld	a0,48(sp)
    8001d950:	65c2                	ld	a1,16(sp)
    8001d952:	6622                	ld	a2,8(sp)
    8001d954:	fffef097          	auipc	ra,0xfffef
    8001d958:	524080e7          	jalr	1316(ra) # 8000ce78 <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h422ad8f8afab3adbE>
    8001d95c:	a009                	j	8001d95e <.LBB4_12+0x74>
    }
    8001d95e:	a011                	j	8001d962 <.LBB4_12+0x78>
    8001d960:	a009                	j	8001d962 <.LBB4_12+0x78>
    8001d962:	60ea                	ld	ra,152(sp)
    8001d964:	610d                	addi	sp,sp,160
    8001d966:	8082                	ret

Disassembly of section .text._ZN6kernel7process3cpu3CPU8set_proc17h81f8a3d6e3dedd5bE:

000000008001d968 <_ZN6kernel7process3cpu3CPU8set_proc17h81f8a3d6e3dedd5bE>:
            noff:0,
            intena:0
        }
    }

    pub fn set_proc(&mut self, proc:Option<NonNull<Process>>){
    8001d968:	1141                	addi	sp,sp,-16
    8001d96a:	e02a                	sd	a0,0(sp)
    8001d96c:	e42e                	sd	a1,8(sp)
        self.process = proc;
    8001d96e:	e10c                	sd	a1,0(a0)
    }
    8001d970:	0141                	addi	sp,sp,16
    8001d972:	8082                	ret

Disassembly of section .text._ZN6kernel7process3cpu3CPU15get_context_mut17h045ef36f8213fdd0E:

000000008001d974 <_ZN6kernel7process3cpu3CPU15get_context_mut17h045ef36f8213fdd0E>:

    pub fn get_context_mut(&mut self) -> *mut Context{
    8001d974:	1141                	addi	sp,sp,-16
    8001d976:	e42a                	sd	a0,8(sp)
        &mut self.context as *mut Context
    8001d978:	0521                	addi	a0,a0,8
    }
    8001d97a:	0141                	addi	sp,sp,16
    8001d97c:	8082                	ret

Disassembly of section .text._ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E:

000000008001d97e <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E>:
    /// intena because intena is a property of this
    /// kernel thread, not this CPU. It should
    /// be proc->intena and proc->noff, but that would
    /// break in the few places where a lock is held but
    /// there's no process.
    pub unsafe fn sched<'a>
    8001d97e:	7131                	addi	sp,sp,-192
    8001d980:	fd06                	sd	ra,184(sp)
    8001d982:	e4ae                	sd	a1,72(sp)
    8001d984:	ed2a                	sd	a0,152(sp)
    8001d986:	f132                	sd	a2,160(sp)
    8001d988:	00ac                	addi	a1,sp,72
    {
        extern "C" {
            fn switch(old: *mut Context, new: *mut Context);
        }

        if !guard.holding() {
    8001d98a:	e0aa                	sd	a0,64(sp)
    8001d98c:	852e                	mv	a0,a1
    8001d98e:	fc32                	sd	a2,56(sp)
    8001d990:	fffe6097          	auipc	ra,0xfffe6
    8001d994:	e92080e7          	jalr	-366(ra) # 80003822 <_ZN6kernel4lock8spinlock22SpinlockGuard$LT$T$GT$7holding17h8b455dbe878c3579E>
    8001d998:	f82a                	sd	a0,48(sp)
    8001d99a:	a009                	j	8001d99c <_ZN6kernel7process3cpu3CPU5sched17hcc4cf2a6f4dbcff2E+0x1e>
    8001d99c:	7542                	ld	a0,48(sp)
    8001d99e:	e105                	bnez	a0,8001d9be <.LBB7_18+0x14>
    8001d9a0:	a009                	j	8001d9a2 <.LBB7_17>

000000008001d9a2 <.LBB7_17>:
            panic!("sched: not holding proc's lock");
    8001d9a2:	0000c517          	auipc	a0,0xc
    8001d9a6:	aba50513          	addi	a0,a0,-1350 # 8002945c <.L__unnamed_6>

000000008001d9aa <.LBB7_18>:
    8001d9aa:	0000c617          	auipc	a2,0xc
    8001d9ae:	ad660613          	addi	a2,a2,-1322 # 80029480 <.L__unnamed_7>
    8001d9b2:	45f9                	li	a1,30
    8001d9b4:	00003097          	auipc	ra,0x3
    8001d9b8:	316080e7          	jalr	790(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001d9bc:	0000                	unimp
        }
        // only holding self.proc.lock
        if self.noff != 1 {
    8001d9be:	6506                	ld	a0,64(sp)
    8001d9c0:	7d2c                	ld	a1,120(a0)
    8001d9c2:	4605                	li	a2,1
    8001d9c4:	02c58563          	beq	a1,a2,8001d9ee <.LBB7_19+0x1a>
    8001d9c8:	a009                	j	8001d9ca <.LBB7_18+0x20>
            println!("self noff is {}", self.noff);
    8001d9ca:	6506                	ld	a0,64(sp)
    8001d9cc:	07850593          	addi	a1,a0,120
    8001d9d0:	e92e                	sd	a1,144(sp)
    8001d9d2:	f52e                	sd	a1,168(sp)

000000008001d9d4 <.LBB7_19>:
    8001d9d4:	00005617          	auipc	a2,0x5
    8001d9d8:	65e60613          	addi	a2,a2,1630 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    8001d9dc:	852e                	mv	a0,a1
    8001d9de:	85b2                	mv	a1,a2
    8001d9e0:	00002097          	auipc	ra,0x2
    8001d9e4:	03a080e7          	jalr	58(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8001d9e8:	f42a                	sd	a0,40(sp)
    8001d9ea:	f02e                	sd	a1,32(sp)
    8001d9ec:	a801                	j	8001d9fc <.LBB7_19+0x28>
    8001d9ee:	00a8                	addi	a0,sp,72
            panic!("sched: cpu hold mutliple locks");
        }
            
        // proc is not running. 
        if guard.state == ProcState::RUNNING {
    8001d9f0:	fffe6097          	auipc	ra,0xfffe6
    8001d9f4:	eec080e7          	jalr	-276(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001d9f8:	ec2a                	sd	a0,24(sp)
    8001d9fa:	a0b1                	j	8001da46 <.LBB7_22+0x14>
            println!("self noff is {}", self.noff);
    8001d9fc:	7522                	ld	a0,40(sp)
    8001d9fe:	e12a                	sd	a0,128(sp)
    8001da00:	7582                	ld	a1,32(sp)
    8001da02:	e52e                	sd	a1,136(sp)

000000008001da04 <.LBB7_20>:
    8001da04:	0000c597          	auipc	a1,0xc
    8001da08:	aa458593          	addi	a1,a1,-1372 # 800294a8 <.L__unnamed_8>
    8001da0c:	0888                	addi	a0,sp,80
    8001da0e:	4609                	li	a2,2
    8001da10:	0114                	addi	a3,sp,128
    8001da12:	4705                	li	a4,1
    8001da14:	fffe8097          	auipc	ra,0xfffe8
    8001da18:	d10080e7          	jalr	-752(ra) # 80005724 <_ZN4core3fmt9Arguments6new_v117h32892f729fc3a992E>
    8001da1c:	a009                	j	8001da1e <.LBB7_20+0x1a>
    8001da1e:	0888                	addi	a0,sp,80
    8001da20:	ffff3097          	auipc	ra,0xffff3
    8001da24:	2d0080e7          	jalr	720(ra) # 80010cf0 <_ZN6kernel6printf6_print17hdbec08f95aaab1aaE>
    8001da28:	a009                	j	8001da2a <.LBB7_21>

000000008001da2a <.LBB7_21>:
            panic!("sched: cpu hold mutliple locks");
    8001da2a:	0000c517          	auipc	a0,0xc
    8001da2e:	a9e50513          	addi	a0,a0,-1378 # 800294c8 <.L__unnamed_9>

000000008001da32 <.LBB7_22>:
    8001da32:	0000c617          	auipc	a2,0xc
    8001da36:	ab660613          	addi	a2,a2,-1354 # 800294e8 <.L__unnamed_10>
    8001da3a:	45f9                	li	a1,30
    8001da3c:	00003097          	auipc	ra,0x3
    8001da40:	28e080e7          	jalr	654(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001da44:	0000                	unimp
        if guard.state == ProcState::RUNNING {
    8001da46:	6562                	ld	a0,24(sp)
    8001da48:	0561                	addi	a0,a0,24

000000008001da4a <.LBB7_23>:
    8001da4a:	0000c597          	auipc	a1,0xc
    8001da4e:	ab658593          	addi	a1,a1,-1354 # 80029500 <.L__unnamed_11>
    8001da52:	ffff5097          	auipc	ra,0xffff5
    8001da56:	1a6080e7          	jalr	422(ra) # 80012bf8 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE>
    8001da5a:	e82a                	sd	a0,16(sp)
    8001da5c:	a009                	j	8001da5e <.LBB7_23+0x14>
    8001da5e:	4501                	li	a0,0
    8001da60:	65c2                	ld	a1,16(sp)
    8001da62:	02a58163          	beq	a1,a0,8001da84 <.LBB7_25+0x14>
    8001da66:	a009                	j	8001da68 <.LBB7_24>

000000008001da68 <.LBB7_24>:
            panic!("sched: proc is running");
    8001da68:	0000c517          	auipc	a0,0xc
    8001da6c:	a9950513          	addi	a0,a0,-1383 # 80029501 <.L__unnamed_12>

000000008001da70 <.LBB7_25>:
    8001da70:	0000c617          	auipc	a2,0xc
    8001da74:	aa860613          	addi	a2,a2,-1368 # 80029518 <.L__unnamed_13>
    8001da78:	45d9                	li	a1,22
    8001da7a:	00003097          	auipc	ra,0x3
    8001da7e:	250080e7          	jalr	592(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001da82:	0000                	unimp
        }

        // should not be interruptible
        if sstatus::intr_get() {
    8001da84:	ffff8097          	auipc	ra,0xffff8
    8001da88:	878080e7          	jalr	-1928(ra) # 800152fc <_ZN6kernel8register7sstatus8intr_get17h3eba542b3f5f7dfdE>
    8001da8c:	e42a                	sd	a0,8(sp)
    8001da8e:	a009                	j	8001da90 <.LBB7_25+0x20>
    8001da90:	4501                	li	a0,0
    8001da92:	65a2                	ld	a1,8(sp)
    8001da94:	02a58163          	beq	a1,a0,8001dab6 <.LBB7_27+0x14>
    8001da98:	a009                	j	8001da9a <.LBB7_26>

000000008001da9a <.LBB7_26>:
            panic!("sched: interruptible");
    8001da9a:	0000c517          	auipc	a0,0xc
    8001da9e:	a9650513          	addi	a0,a0,-1386 # 80029530 <.L__unnamed_14>

000000008001daa2 <.LBB7_27>:
    8001daa2:	0000c617          	auipc	a2,0xc
    8001daa6:	aa660613          	addi	a2,a2,-1370 # 80029548 <.L__unnamed_15>
    8001daaa:	45d1                	li	a1,20
    8001daac:	00003097          	auipc	ra,0x3
    8001dab0:	21e080e7          	jalr	542(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001dab4:	0000                	unimp
        }

        let intena = self.intena;
    8001dab6:	6506                	ld	a0,64(sp)
    8001dab8:	614c                	ld	a1,128(a0)
    8001daba:	f92e                	sd	a1,176(sp)
        switch(
            ctx, 
            &mut self.context as *mut Context
    8001dabc:	00850613          	addi	a2,a0,8
        switch(
    8001dac0:	7562                	ld	a0,56(sp)
    8001dac2:	e02e                	sd	a1,0(sp)
    8001dac4:	85b2                	mv	a1,a2
    8001dac6:	fffe3097          	auipc	ra,0xfffe3
    8001daca:	65c080e7          	jalr	1628(ra) # 80001122 <switch>
    8001dace:	a009                	j	8001dad0 <.LBB7_27+0x2e>
        );
        self.intena = intena;
    8001dad0:	6502                	ld	a0,0(sp)
    8001dad2:	6586                	ld	a1,64(sp)
    8001dad4:	e1c8                	sd	a0,128(a1)

        guard
    8001dad6:	6526                	ld	a0,72(sp)
        
    }
    8001dad8:	70ea                	ld	ra,184(sp)
    8001dada:	6129                	addi	sp,sp,192
    8001dadc:	8082                	ret

Disassembly of section .text._ZN6kernel7process3cpu3CPU14try_yield_proc17hf71262baec4184d0E:

000000008001dade <_ZN6kernel7process3cpu3CPU14try_yield_proc17hf71262baec4184d0E>:

    /// Yield the holding process if any and it's RUNNING.
    /// Directly return if none.
    pub fn try_yield_proc(&mut self) {
    8001dade:	711d                	addi	sp,sp,-96
    8001dae0:	ec86                	sd	ra,88(sp)
    8001dae2:	e8aa                	sd	a0,80(sp)
        if !self.process.is_none() {
    8001dae4:	f82a                	sd	a0,48(sp)
    8001dae6:	ffffb097          	auipc	ra,0xffffb
    8001daea:	406080e7          	jalr	1030(ra) # 80018eec <_ZN4core6option15Option$LT$T$GT$7is_none17he6d1c63a8978b41dE>
    8001daee:	f42a                	sd	a0,40(sp)
    8001daf0:	a009                	j	8001daf2 <_ZN6kernel7process3cpu3CPU14try_yield_proc17hf71262baec4184d0E+0x14>
    8001daf2:	7522                	ld	a0,40(sp)
    8001daf4:	ed11                	bnez	a0,8001db10 <.LBB8_18+0x14>
    8001daf6:	a009                	j	8001daf8 <_ZN6kernel7process3cpu3CPU14try_yield_proc17hf71262baec4184d0E+0x1a>
            let guard = unsafe {
                (&mut *self.process.unwrap().as_ptr()).meta.acquire()
    8001daf8:	7542                	ld	a0,48(sp)
    8001dafa:	6108                	ld	a0,0(a0)

000000008001dafc <.LBB8_18>:
    8001dafc:	0000c597          	auipc	a1,0xc
    8001db00:	a6458593          	addi	a1,a1,-1436 # 80029560 <.L__unnamed_16>
    8001db04:	ffffb097          	auipc	ra,0xffffb
    8001db08:	2bc080e7          	jalr	700(ra) # 80018dc0 <_ZN4core6option15Option$LT$T$GT$6unwrap17hc712b9fcf71d0a07E>
    8001db0c:	f02a                	sd	a0,32(sp)
    8001db0e:	a011                	j	8001db12 <.LBB8_18+0x16>
        if !self.process.is_none() {
    8001db10:	a879                	j	8001dbae <.LBB8_20+0x34>
                (&mut *self.process.unwrap().as_ptr()).meta.acquire()
    8001db12:	7502                	ld	a0,32(sp)
    8001db14:	fffe7097          	auipc	ra,0xfffe7
    8001db18:	1a0080e7          	jalr	416(ra) # 80004cb4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f3cfa29d0daba0cE>
    8001db1c:	ec2a                	sd	a0,24(sp)
    8001db1e:	a009                	j	8001db20 <.LBB8_18+0x24>
    8001db20:	6562                	ld	a0,24(sp)
    8001db22:	fffe5097          	auipc	ra,0xfffe5
    8001db26:	bea080e7          	jalr	-1046(ra) # 8000270c <_ZN6kernel4lock8spinlock17Spinlock$LT$T$GT$7acquire17h90ae05c5a547776fE>
    8001db2a:	e0aa                	sd	a0,64(sp)
    8001db2c:	a009                	j	8001db2e <.LBB8_18+0x32>
    8001db2e:	0088                	addi	a0,sp,64
            };
            if guard.state == ProcState::RUNNING {
    8001db30:	fffe6097          	auipc	ra,0xfffe6
    8001db34:	dac080e7          	jalr	-596(ra) # 800038dc <_ZN90_$LT$kernel..lock..spinlock..SpinlockGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h811205e78003a103E>
    8001db38:	e82a                	sd	a0,16(sp)
    8001db3a:	a009                	j	8001db3c <.LBB8_18+0x40>
    8001db3c:	6542                	ld	a0,16(sp)
    8001db3e:	0561                	addi	a0,a0,24

000000008001db40 <.LBB8_19>:
    8001db40:	0000c597          	auipc	a1,0xc
    8001db44:	9c058593          	addi	a1,a1,-1600 # 80029500 <.L__unnamed_11>
    8001db48:	ffff5097          	auipc	ra,0xffff5
    8001db4c:	0b0080e7          	jalr	176(ra) # 80012bf8 <_ZN76_$LT$kernel..process..process..ProcState$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2e8c3e726f08668eE>
    8001db50:	e42a                	sd	a0,8(sp)
    8001db52:	a009                	j	8001db54 <.LBB8_19+0x14>
    8001db54:	4501                	li	a0,0
    8001db56:	65a2                	ld	a1,8(sp)
    8001db58:	00a58963          	beq	a1,a0,8001db6a <.LBB8_19+0x2a>
    8001db5c:	a009                	j	8001db5e <.LBB8_19+0x1e>
                drop(guard);
    8001db5e:	6506                	ld	a0,64(sp)
    8001db60:	ffff0097          	auipc	ra,0xffff0
    8001db64:	d46080e7          	jalr	-698(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001db68:	a039                	j	8001db76 <.LBB8_19+0x36>
                unsafe { self.process.unwrap().as_mut().yielding() }
            } else {
                drop(guard);
    8001db6a:	6506                	ld	a0,64(sp)
    8001db6c:	ffff0097          	auipc	ra,0xffff0
    8001db70:	d3a080e7          	jalr	-710(ra) # 8000d8a6 <_ZN4core3mem4drop17h0a38cba4d3d0bfd9E>
    8001db74:	a81d                	j	8001dbaa <.LBB8_20+0x30>
                unsafe { self.process.unwrap().as_mut().yielding() }
    8001db76:	7542                	ld	a0,48(sp)
    8001db78:	6108                	ld	a0,0(a0)

000000008001db7a <.LBB8_20>:
    8001db7a:	0000c597          	auipc	a1,0xc
    8001db7e:	9fe58593          	addi	a1,a1,-1538 # 80029578 <.L__unnamed_17>
    8001db82:	ffffb097          	auipc	ra,0xffffb
    8001db86:	23e080e7          	jalr	574(ra) # 80018dc0 <_ZN4core6option15Option$LT$T$GT$6unwrap17hc712b9fcf71d0a07E>
    8001db8a:	e4aa                	sd	a0,72(sp)
    8001db8c:	a009                	j	8001db8e <.LBB8_20+0x14>
    8001db8e:	00a8                	addi	a0,sp,72
    8001db90:	fffe7097          	auipc	ra,0xfffe7
    8001db94:	0e8080e7          	jalr	232(ra) # 80004c78 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h1ff4a2146a51b6c9E>
    8001db98:	e02a                	sd	a0,0(sp)
    8001db9a:	a009                	j	8001db9c <.LBB8_20+0x22>
    8001db9c:	6502                	ld	a0,0(sp)
    8001db9e:	ffff5097          	auipc	ra,0xffff5
    8001dba2:	ac8080e7          	jalr	-1336(ra) # 80012666 <_ZN6kernel7process7process7Process8yielding17h701dad1b783b9b78E>
    8001dba6:	a009                	j	8001dba8 <.LBB8_20+0x2e>
            if guard.state == ProcState::RUNNING {
    8001dba8:	a011                	j	8001dbac <.LBB8_20+0x32>
    8001dbaa:	a009                	j	8001dbac <.LBB8_20+0x32>
        if !self.process.is_none() {
    8001dbac:	a009                	j	8001dbae <.LBB8_20+0x34>
            }
        }
    }
    8001dbae:	60e6                	ld	ra,88(sp)
    8001dbb0:	6125                	addi	sp,sp,96
    8001dbb2:	8082                	ret

Disassembly of section .text._ZN6kernel7process3cpu8push_off17hfa6b48b440145057E:

000000008001dbb4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E>:

/// push_off/pop_off are like intr_off()/intr_on() except that they are matched:
/// it takes two pop_off()s to undo two push_off()s.  Also, if interrupts
/// are initially off, then push_off, pop_off leaves them off.

pub fn push_off(){
    8001dbb4:	7179                	addi	sp,sp,-48
    let old_enable;
    unsafe{
        old_enable = sstatus::intr_get();
    8001dbb6:	f406                	sd	ra,40(sp)
    8001dbb8:	ffff7097          	auipc	ra,0xffff7
    8001dbbc:	744080e7          	jalr	1860(ra) # 800152fc <_ZN6kernel8register7sstatus8intr_get17h3eba542b3f5f7dfdE>
    8001dbc0:	e82a                	sd	a0,16(sp)
    8001dbc2:	a009                	j	8001dbc4 <_ZN6kernel7process3cpu8push_off17hfa6b48b440145057E+0x10>
    8001dbc4:	6542                	ld	a0,16(sp)
    8001dbc6:	00a10fa3          	sb	a0,31(sp)
        sstatus::intr_off();
    8001dbca:	ffff7097          	auipc	ra,0xffff7
    8001dbce:	70e080e7          	jalr	1806(ra) # 800152d8 <_ZN6kernel8register7sstatus8intr_off17h9574962c04e4d2b2E>
    8001dbd2:	a009                	j	8001dbd4 <.LBB9_9>

000000008001dbd4 <.LBB9_9>:
    }
    let my_cpu = unsafe{ CPU_MANAGER.mycpu() };
    8001dbd4:	00051517          	auipc	a0,0x51
    8001dbd8:	42c50513          	addi	a0,a0,1068 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001dbdc:	00000097          	auipc	ra,0x0
    8001dbe0:	b10080e7          	jalr	-1264(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    8001dbe4:	e42a                	sd	a0,8(sp)
    8001dbe6:	a009                	j	8001dbe8 <.LBB9_9+0x14>
    8001dbe8:	6522                	ld	a0,8(sp)
    8001dbea:	f02a                	sd	a0,32(sp)
    if my_cpu.noff == 0 {
    8001dbec:	7d2c                	ld	a1,120(a0)
    8001dbee:	4601                	li	a2,0
    8001dbf0:	00c59763          	bne	a1,a2,8001dbfe <.LBB9_9+0x2a>
    8001dbf4:	a009                	j	8001dbf6 <.LBB9_9+0x22>
        my_cpu.intena = old_enable as usize;
    8001dbf6:	6542                	ld	a0,16(sp)
    8001dbf8:	65a2                	ld	a1,8(sp)
    8001dbfa:	e1c8                	sd	a0,128(a1)
    if my_cpu.noff == 0 {
    8001dbfc:	a011                	j	8001dc00 <.LBB9_9+0x2c>
    8001dbfe:	a009                	j	8001dc00 <.LBB9_9+0x2c>
    }

    my_cpu.noff += 1;
    8001dc00:	6522                	ld	a0,8(sp)
    8001dc02:	7d2c                	ld	a1,120(a0)
    8001dc04:	00158613          	addi	a2,a1,1
    8001dc08:	e032                	sd	a2,0(sp)
    8001dc0a:	00b66963          	bltu	a2,a1,8001dc1c <.LBB9_10>
    8001dc0e:	a009                	j	8001dc10 <.LBB9_9+0x3c>
    8001dc10:	6502                	ld	a0,0(sp)
    8001dc12:	65a2                	ld	a1,8(sp)
    8001dc14:	fda8                	sd	a0,120(a1)
}
    8001dc16:	70a2                	ld	ra,40(sp)
    8001dc18:	6145                	addi	sp,sp,48
    8001dc1a:	8082                	ret

000000008001dc1c <.LBB9_10>:
    my_cpu.noff += 1;
    8001dc1c:	0000c517          	auipc	a0,0xc
    8001dc20:	99450513          	addi	a0,a0,-1644 # 800295b0 <str.0>

000000008001dc24 <.LBB9_11>:
    8001dc24:	0000c617          	auipc	a2,0xc
    8001dc28:	96c60613          	addi	a2,a2,-1684 # 80029590 <.L__unnamed_18>
    8001dc2c:	45f1                	li	a1,28
    8001dc2e:	00003097          	auipc	ra,0x3
    8001dc32:	09c080e7          	jalr	156(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E:

000000008001dc38 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E>:


pub fn pop_off() {
    8001dc38:	715d                	addi	sp,sp,-80
    if unsafe{ sstatus::intr_get() } {
    8001dc3a:	e486                	sd	ra,72(sp)
    8001dc3c:	ffff7097          	auipc	ra,0xffff7
    8001dc40:	6c0080e7          	jalr	1728(ra) # 800152fc <_ZN6kernel8register7sstatus8intr_get17h3eba542b3f5f7dfdE>
    8001dc44:	ec2a                	sd	a0,24(sp)
    8001dc46:	a009                	j	8001dc48 <_ZN6kernel7process3cpu7pop_off17h557110615c80d8f5E+0x10>
    8001dc48:	4501                	li	a0,0
    8001dc4a:	65e2                	ld	a1,24(sp)
    8001dc4c:	02a58163          	beq	a1,a0,8001dc6e <.LBB10_21>
    8001dc50:	a009                	j	8001dc52 <.LBB10_19>

000000008001dc52 <.LBB10_19>:
        panic!("pop_off(): interruptable");
    8001dc52:	0000c517          	auipc	a0,0xc
    8001dc56:	97a50513          	addi	a0,a0,-1670 # 800295cc <.L__unnamed_19>

000000008001dc5a <.LBB10_20>:
    8001dc5a:	0000c617          	auipc	a2,0xc
    8001dc5e:	98e60613          	addi	a2,a2,-1650 # 800295e8 <.L__unnamed_20>
    8001dc62:	45e1                	li	a1,24
    8001dc64:	00003097          	auipc	ra,0x3
    8001dc68:	066080e7          	jalr	102(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001dc6e <.LBB10_21>:
    }
    let c = unsafe { CPU_MANAGER.mycpu() };
    8001dc6e:	00051517          	auipc	a0,0x51
    8001dc72:	39250513          	addi	a0,a0,914 # 8006f000 <_ZN6kernel7process3cpu11CPU_MANAGER17hb53a3f2d2e99ea45E>
    8001dc76:	00000097          	auipc	ra,0x0
    8001dc7a:	a76080e7          	jalr	-1418(ra) # 8001d6ec <_ZN6kernel7process3cpu10CPUManager5mycpu17he2229e8806b588c0E>
    8001dc7e:	e82a                	sd	a0,16(sp)
    8001dc80:	a009                	j	8001dc82 <.LBB10_21+0x14>
    8001dc82:	6542                	ld	a0,16(sp)
    8001dc84:	e0aa                	sd	a0,64(sp)
    if c.noff.checked_sub(1).is_none() {
    8001dc86:	7d28                	ld	a0,120(a0)
    8001dc88:	4585                	li	a1,1
    8001dc8a:	ffff8097          	auipc	ra,0xffff8
    8001dc8e:	7d6080e7          	jalr	2006(ra) # 80016460 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h6817f1d5202c44f9E>
    8001dc92:	f42a                	sd	a0,40(sp)
    8001dc94:	f82e                	sd	a1,48(sp)
    8001dc96:	a009                	j	8001dc98 <.LBB10_21+0x2a>
    8001dc98:	1028                	addi	a0,sp,40
    8001dc9a:	ffffb097          	auipc	ra,0xffffb
    8001dc9e:	234080e7          	jalr	564(ra) # 80018ece <_ZN4core6option15Option$LT$T$GT$7is_none17h95f7ce3dc6edabf9E>
    8001dca2:	e42a                	sd	a0,8(sp)
    8001dca4:	a009                	j	8001dca6 <.LBB10_21+0x38>
    8001dca6:	4501                	li	a0,0
    8001dca8:	65a2                	ld	a1,8(sp)
    8001dcaa:	02a58163          	beq	a1,a0,8001dccc <.LBB10_23+0x14>
    8001dcae:	a009                	j	8001dcb0 <.LBB10_22>

000000008001dcb0 <.LBB10_22>:
        panic!("pop_off(): count not match");
    8001dcb0:	0000c517          	auipc	a0,0xc
    8001dcb4:	95050513          	addi	a0,a0,-1712 # 80029600 <.L__unnamed_21>

000000008001dcb8 <.LBB10_23>:
    8001dcb8:	0000c617          	auipc	a2,0xc
    8001dcbc:	96860613          	addi	a2,a2,-1688 # 80029620 <.L__unnamed_22>
    8001dcc0:	45e9                	li	a1,26
    8001dcc2:	00003097          	auipc	ra,0x3
    8001dcc6:	008080e7          	jalr	8(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001dcca:	0000                	unimp
    }
    c.noff -= 1;
    8001dccc:	6542                	ld	a0,16(sp)
    8001dcce:	7d2c                	ld	a1,120(a0)
    8001dcd0:	fff58613          	addi	a2,a1,-1
    8001dcd4:	e032                	sd	a2,0(sp)
    8001dcd6:	04c5e963          	bltu	a1,a2,8001dd28 <.LBB10_24>
    8001dcda:	a009                	j	8001dcdc <.LBB10_23+0x24>
    8001dcdc:	6502                	ld	a0,0(sp)
    8001dcde:	65c2                	ld	a1,16(sp)
    8001dce0:	fda8                	sd	a0,120(a1)
    8001dce2:	4601                	li	a2,0
    if c.noff == 0 && c.intena != 0 {
    8001dce4:	00c50b63          	beq	a0,a2,8001dcfa <.LBB10_23+0x42>
    8001dce8:	a029                	j	8001dcf2 <.LBB10_23+0x3a>
    8001dcea:	4505                	li	a0,1
    8001dcec:	02a10fa3          	sb	a0,63(sp)
    8001dcf0:	a819                	j	8001dd06 <.LBB10_23+0x4e>
    8001dcf2:	4501                	li	a0,0
    8001dcf4:	02a10fa3          	sb	a0,63(sp)
    8001dcf8:	a039                	j	8001dd06 <.LBB10_23+0x4e>
    8001dcfa:	6542                	ld	a0,16(sp)
    8001dcfc:	614c                	ld	a1,128(a0)
    8001dcfe:	4601                	li	a2,0
    8001dd00:	fec589e3          	beq	a1,a2,8001dcf2 <.LBB10_23+0x3a>
    8001dd04:	b7dd                	j	8001dcea <.LBB10_23+0x32>
    8001dd06:	03f14503          	lbu	a0,63(sp)
    8001dd0a:	8905                	andi	a0,a0,1
    8001dd0c:	4581                	li	a1,0
    8001dd0e:	00b50863          	beq	a0,a1,8001dd1e <.LBB10_23+0x66>
    8001dd12:	a009                	j	8001dd14 <.LBB10_23+0x5c>
        unsafe{ sstatus::intr_on() };
    8001dd14:	ffff7097          	auipc	ra,0xffff7
    8001dd18:	59e080e7          	jalr	1438(ra) # 800152b2 <_ZN6kernel8register7sstatus7intr_on17hbba287c6b30c048fE>
    8001dd1c:	a011                	j	8001dd20 <.LBB10_23+0x68>
    if c.noff == 0 && c.intena != 0 {
    8001dd1e:	a011                	j	8001dd22 <.LBB10_23+0x6a>
    8001dd20:	a009                	j	8001dd22 <.LBB10_23+0x6a>
    }
}
    8001dd22:	60a6                	ld	ra,72(sp)
    8001dd24:	6161                	addi	sp,sp,80
    8001dd26:	8082                	ret

000000008001dd28 <.LBB10_24>:
    c.noff -= 1;
    8001dd28:	0000c517          	auipc	a0,0xc
    8001dd2c:	92850513          	addi	a0,a0,-1752 # 80029650 <str.1>

000000008001dd30 <.LBB10_25>:
    8001dd30:	0000c617          	auipc	a2,0xc
    8001dd34:	90860613          	addi	a2,a2,-1784 # 80029638 <.L__unnamed_23>
    8001dd38:	02100593          	li	a1,33
    8001dd3c:	00003097          	auipc	ra,0x3
    8001dd40:	f8e080e7          	jalr	-114(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text.__rust_alloc:

000000008001dd46 <__rust_alloc>:
    8001dd46:	ffff6317          	auipc	t1,0xffff6
    8001dd4a:	d1030067          	jr	-752(t1) # 80013a56 <__rg_alloc>

Disassembly of section .text.__rust_dealloc:

000000008001dd4e <__rust_dealloc>:
    8001dd4e:	ffff6317          	auipc	t1,0xffff6
    8001dd52:	d3e30067          	jr	-706(t1) # 80013a8c <__rg_dealloc>

Disassembly of section .text.__rust_alloc_zeroed:

000000008001dd56 <__rust_alloc_zeroed>:
    8001dd56:	ffff6317          	auipc	t1,0xffff6
    8001dd5a:	d7230067          	jr	-654(t1) # 80013ac8 <__rg_alloc_zeroed>

Disassembly of section .text.__rust_alloc_error_handler:

000000008001dd5e <__rust_alloc_error_handler>:
    8001dd5e:	00003317          	auipc	t1,0x3
    8001dd62:	d2e30067          	jr	-722(t1) # 80020a8c <__rg_oom>

Disassembly of section .text._ZN9allocator11BuddySystem4init17hb013dd73949a3bfaE:

000000008001dd66 <_ZN9allocator11BuddySystem4init17hb013dd73949a3bfaE>:

    /// Init the buddy system allocator at [start, end).
    /// `leaf_size` and `max_alignment` must be a power of 2.
    /// `max_alignment` is the biggest alignment of a [`alloc::alloc::Layout`] the user can request.
    /// SAFETY: It should only be called once and before any subsequent call to this buddy system.
    pub unsafe fn init(&mut self, start: usize, end: usize, leaf_size: usize, max_alignment: usize)
    8001dd66:	d1010113          	addi	sp,sp,-752
    8001dd6a:	2e113423          	sd	ra,744(sp)
    8001dd6e:	20a13023          	sd	a0,512(sp)
    8001dd72:	20b13423          	sd	a1,520(sp)
    8001dd76:	20c13823          	sd	a2,528(sp)
    8001dd7a:	20d13c23          	sd	a3,536(sp)
    8001dd7e:	22e13023          	sd	a4,544(sp)
        -> Result<(), &'static str>
    {
        if self.initialized {
    8001dd82:	03854783          	lbu	a5,56(a0)
    8001dd86:	8b85                	andi	a5,a5,1
    8001dd88:	4801                	li	a6,0
    8001dd8a:	feba                	sd	a4,376(sp)
    8001dd8c:	fab6                	sd	a3,368(sp)
    8001dd8e:	f6b2                	sd	a2,360(sp)
    8001dd90:	f2ae                	sd	a1,352(sp)
    8001dd92:	eeaa                	sd	a0,344(sp)
    8001dd94:	01078b63          	beq	a5,a6,8001ddaa <.LBB1_78+0x10>
    8001dd98:	a009                	j	8001dd9a <.LBB1_78>

000000008001dd9a <.LBB1_78>:
            return Err("init twice");
    8001dd9a:	0000c517          	auipc	a0,0xc
    8001dd9e:	8d750513          	addi	a0,a0,-1833 # 80029671 <.L__unnamed_1>
    8001dda2:	e32a                	sd	a0,384(sp)
    8001dda4:	4529                	li	a0,10
    8001dda6:	e72a                	sd	a0,392(sp)
//! Thread-unsafe, panic-free buddy system allocator.
    8001dda8:	a105                	j	8001e1c8 <.LBB1_81+0x20>
        }

        if end - start < leaf_size {
    8001ddaa:	7536                	ld	a0,360(sp)
    8001ddac:	7596                	ld	a1,352(sp)
    8001ddae:	40b50633          	sub	a2,a0,a1
    8001ddb2:	eab2                	sd	a2,336(sp)
    8001ddb4:	42c56163          	bltu	a0,a2,8001e1d6 <.LBB1_82>
    8001ddb8:	a009                	j	8001ddba <.LBB1_78+0x20>
    8001ddba:	6556                	ld	a0,336(sp)
    8001ddbc:	75d6                	ld	a1,368(sp)
    8001ddbe:	00b57b63          	bgeu	a0,a1,8001ddd4 <.LBB1_79+0x10>
    8001ddc2:	a009                	j	8001ddc4 <.LBB1_79>

000000008001ddc4 <.LBB1_79>:
            return Err("range too small");
    8001ddc4:	0000c517          	auipc	a0,0xc
    8001ddc8:	92d50513          	addi	a0,a0,-1747 # 800296f1 <.L__unnamed_2>
    8001ddcc:	e32a                	sd	a0,384(sp)
    8001ddce:	453d                	li	a0,15
    8001ddd0:	e72a                	sd	a0,392(sp)
//! Thread-unsafe, panic-free buddy system allocator.
    8001ddd2:	aedd                	j	8001e1c8 <.LBB1_81+0x20>
        }

        if !leaf_size.is_power_of_two() || !max_alignment.is_power_of_two() {
    8001ddd4:	7556                	ld	a0,368(sp)
    8001ddd6:	00002097          	auipc	ra,0x2
    8001ddda:	e94080e7          	jalr	-364(ra) # 8001fc6a <_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h2959b409ad428932E>
    8001ddde:	e6aa                	sd	a0,328(sp)
    8001dde0:	a02d                	j	8001de0a <.LBB1_79+0x46>
    8001dde2:	4505                	li	a0,1
    8001dde4:	18a10ba3          	sb	a0,407(sp)
    8001dde8:	a821                	j	8001de00 <.LBB1_79+0x3c>
    8001ddea:	4501                	li	a0,0
    8001ddec:	18a10ba3          	sb	a0,407(sp)
    8001ddf0:	a801                	j	8001de00 <.LBB1_79+0x3c>
    8001ddf2:	7576                	ld	a0,376(sp)
    8001ddf4:	00002097          	auipc	ra,0x2
    8001ddf8:	e76080e7          	jalr	-394(ra) # 8001fc6a <_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h2959b409ad428932E>
    8001ddfc:	e2aa                	sd	a0,320(sp)
    8001ddfe:	a819                	j	8001de14 <.LBB1_79+0x50>
    8001de00:	19714503          	lbu	a0,407(sp)
    8001de04:	8905                	andi	a0,a0,1
    8001de06:	ed01                	bnez	a0,8001de1e <.LBB1_80>
    8001de08:	a025                	j	8001de30 <.LBB1_80+0x12>
    8001de0a:	4501                	li	a0,0
    8001de0c:	65b6                	ld	a1,328(sp)
    8001de0e:	fca58ae3          	beq	a1,a0,8001dde2 <.LBB1_79+0x1e>
    8001de12:	b7c5                	j	8001ddf2 <.LBB1_79+0x2e>
    8001de14:	4501                	li	a0,0
    8001de16:	6596                	ld	a1,320(sp)
    8001de18:	fca585e3          	beq	a1,a0,8001dde2 <.LBB1_79+0x1e>
    8001de1c:	b7f9                	j	8001ddea <.LBB1_79+0x26>

000000008001de1e <.LBB1_80>:
            return Err("leaf size or max_alignment not 2^n");
    8001de1e:	0000c517          	auipc	a0,0xc
    8001de22:	8e250513          	addi	a0,a0,-1822 # 80029700 <.L__unnamed_3>
    8001de26:	e32a                	sd	a0,384(sp)
    8001de28:	02200513          	li	a0,34
    8001de2c:	e72a                	sd	a0,392(sp)
//! Thread-unsafe, panic-free buddy system allocator.
    8001de2e:	ae69                	j	8001e1c8 <.LBB1_81+0x20>
        }
        self.leaf_size = leaf_size;
    8001de30:	7556                	ld	a0,368(sp)
    8001de32:	65f6                	ld	a1,344(sp)
    8001de34:	ed88                	sd	a0,24(a1)
        self.max_alignment = max_alignment;
    8001de36:	7676                	ld	a2,376(sp)
    8001de38:	f190                	sd	a2,32(a1)

        // make sure start and end are both leaf aligned
        // and record the heap memory range: [self.base, self.end)
        let mut cur: usize = round_up(start, cmp::max(leaf_size, max_alignment));
    8001de3a:	85b2                	mv	a1,a2
    8001de3c:	00002097          	auipc	ra,0x2
    8001de40:	1be080e7          	jalr	446(ra) # 8001fffa <_ZN4core3cmp3max17h36b63c4617812e8bE>
    8001de44:	fe2a                	sd	a0,312(sp)
    8001de46:	a009                	j	8001de48 <.LBB1_80+0x2a>
    8001de48:	7516                	ld	a0,352(sp)
    8001de4a:	75f2                	ld	a1,312(sp)
    8001de4c:	00002097          	auipc	ra,0x2
    8001de50:	88a080e7          	jalr	-1910(ra) # 8001f6d6 <_ZN9allocator8round_up17hace079d84f0703acE>
    8001de54:	ef2a                	sd	a0,408(sp)
    8001de56:	a009                	j	8001de58 <.LBB1_80+0x3a>
        self.base = cur;
    8001de58:	657a                	ld	a0,408(sp)
    8001de5a:	65f6                	ld	a1,344(sp)
    8001de5c:	e188                	sd	a0,0(a1)
        self.actual_end = round_down(end, cmp::max(leaf_size, max_alignment));
    8001de5e:	7556                	ld	a0,368(sp)
    8001de60:	75f6                	ld	a1,376(sp)
    8001de62:	00002097          	auipc	ra,0x2
    8001de66:	198080e7          	jalr	408(ra) # 8001fffa <_ZN4core3cmp3max17h36b63c4617812e8bE>
    8001de6a:	fa2a                	sd	a0,304(sp)
    8001de6c:	a009                	j	8001de6e <.LBB1_80+0x50>
    8001de6e:	7536                	ld	a0,360(sp)
    8001de70:	75d2                	ld	a1,304(sp)
    8001de72:	00002097          	auipc	ra,0x2
    8001de76:	928080e7          	jalr	-1752(ra) # 8001f79a <_ZN9allocator10round_down17h96dedef5b7d39639E>
    8001de7a:	f62a                	sd	a0,296(sp)
    8001de7c:	a009                	j	8001de7e <.LBB1_80+0x60>
    8001de7e:	7532                	ld	a0,296(sp)
    8001de80:	65f6                	ld	a1,344(sp)
    8001de82:	e588                	sd	a0,8(a1)

        // compute the max pow of 2 smaller than size of [self.base, self.actual_end)
        self.nsizes = log2((self.actual_end-cur)/leaf_size) + 1;
    8001de84:	667a                	ld	a2,408(sp)
    8001de86:	40c50633          	sub	a2,a0,a2
    8001de8a:	f232                	sd	a2,288(sp)
    8001de8c:	36c56463          	bltu	a0,a2,8001e1f4 <.LBB1_84>
    8001de90:	a009                	j	8001de92 <.LBB1_80+0x74>
    8001de92:	4501                	li	a0,0
    8001de94:	75d6                	ld	a1,368(sp)
    8001de96:	36a58e63          	beq	a1,a0,8001e212 <.LBB1_86>
    8001de9a:	a009                	j	8001de9c <.LBB1_80+0x7e>
    8001de9c:	7512                	ld	a0,288(sp)
    8001de9e:	75d6                	ld	a1,368(sp)
    8001dea0:	02b55533          	divu	a0,a0,a1
    8001dea4:	00002097          	auipc	ra,0x2
    8001dea8:	962080e7          	jalr	-1694(ra) # 8001f806 <_ZN9allocator4log217h5622e82ab19455b8E>
    8001deac:	ee2a                	sd	a0,280(sp)
    8001deae:	a009                	j	8001deb0 <.LBB1_80+0x92>
    8001deb0:	6572                	ld	a0,280(sp)
    8001deb2:	00150593          	addi	a1,a0,1
    8001deb6:	ea2e                	sd	a1,272(sp)
    8001deb8:	36a5eb63          	bltu	a1,a0,8001e22e <.LBB1_88>
    8001debc:	a009                	j	8001debe <.LBB1_80+0xa0>
    8001debe:	6552                	ld	a0,272(sp)
    8001dec0:	65f6                	ld	a1,344(sp)
    8001dec2:	e988                	sd	a0,16(a1)
        if self.actual_end - cur > self.blk_size(self.max_size()) {
    8001dec4:	6590                	ld	a2,8(a1)
    8001dec6:	66fa                	ld	a3,408(sp)
    8001dec8:	40d606b3          	sub	a3,a2,a3
    8001decc:	e636                	sd	a3,264(sp)
    8001dece:	36d66e63          	bltu	a2,a3,8001e24a <.LBB1_90>
    8001ded2:	a009                	j	8001ded4 <.LBB1_80+0xb6>
    8001ded4:	6576                	ld	a0,344(sp)
    8001ded6:	00001097          	auipc	ra,0x1
    8001deda:	252080e7          	jalr	594(ra) # 8001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>
    8001dede:	e22a                	sd	a0,256(sp)
    8001dee0:	a009                	j	8001dee2 <.LBB1_80+0xc4>
    8001dee2:	6576                	ld	a0,344(sp)
    8001dee4:	6592                	ld	a1,256(sp)
    8001dee6:	00001097          	auipc	ra,0x1
    8001deea:	51a080e7          	jalr	1306(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001deee:	fdaa                	sd	a0,248(sp)
    8001def0:	a009                	j	8001def2 <.LBB1_80+0xd4>
    8001def2:	756e                	ld	a0,248(sp)
    8001def4:	65b2                	ld	a1,264(sp)
    8001def6:	00b57b63          	bgeu	a0,a1,8001df0c <.LBB1_80+0xee>
    8001defa:	a009                	j	8001defc <.LBB1_80+0xde>
            self.nsizes += 1;
    8001defc:	6576                	ld	a0,344(sp)
    8001defe:	690c                	ld	a1,16(a0)
    8001df00:	00158613          	addi	a2,a1,1
    8001df04:	f9b2                	sd	a2,240(sp)
    8001df06:	36b66163          	bltu	a2,a1,8001e268 <.LBB1_92>
    8001df0a:	a011                	j	8001df0e <.LBB1_80+0xf0>
        if self.actual_end - cur > self.blk_size(self.max_size()) {
    8001df0c:	a029                	j	8001df16 <.LBB1_80+0xf8>
            self.nsizes += 1;
    8001df0e:	754e                	ld	a0,240(sp)
    8001df10:	65f6                	ld	a1,344(sp)
    8001df12:	e988                	sd	a0,16(a1)
        if self.actual_end - cur > self.blk_size(self.max_size()) {
    8001df14:	a009                	j	8001df16 <.LBB1_80+0xf8>
        }

        // alloc buddy infos
        // SAFETY: init all of the BuddyInfo
        let info_slice_ptr = init_slice_empty(&mut cur, self.nsizes);
    8001df16:	6576                	ld	a0,344(sp)
    8001df18:	690c                	ld	a1,16(a0)
    8001df1a:	0b28                	addi	a0,sp,408
    8001df1c:	00002097          	auipc	ra,0x2
    8001df20:	016080e7          	jalr	22(ra) # 8001ff32 <_ZN9allocator16init_slice_empty17hc89cc2da11d2a006E>
    8001df24:	862a                	mv	a2,a0
    8001df26:	86ae                	mv	a3,a1
    8001df28:	22a13423          	sd	a0,552(sp)
    8001df2c:	22b13823          	sd	a1,560(sp)
    8001df30:	f5b2                	sd	a2,232(sp)
    8001df32:	f1b6                	sd	a3,224(sp)
    8001df34:	a009                	j	8001df36 <.LBB1_80+0x118>
        self.infos.as_mut_ptr().write(info_slice_ptr);
    8001df36:	6576                	ld	a0,344(sp)
    8001df38:	02850593          	addi	a1,a0,40
    8001df3c:	2cb13823          	sd	a1,720(sp)
    8001df40:	edae                	sd	a1,216(sp)
    8001df42:	a009                	j	8001df44 <.LBB1_80+0x126>
    8001df44:	656e                	ld	a0,216(sp)
    8001df46:	75ae                	ld	a1,232(sp)
    8001df48:	760e                	ld	a2,224(sp)
    8001df4a:	00002097          	auipc	ra,0x2
    8001df4e:	e86080e7          	jalr	-378(ra) # 8001fdd0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hbdd1ff4f591d1bb1E>
    8001df52:	a009                	j	8001df54 <.LBB1_80+0x136>

        // init free list and alloc space for alloc field
        for i in 0..self.nsizes {
    8001df54:	6576                	ld	a0,344(sp)
    8001df56:	690c                	ld	a1,16(a0)
    8001df58:	4601                	li	a2,0
    8001df5a:	f332                	sd	a2,416(sp)
    8001df5c:	f72e                	sd	a1,424(sp)
    8001df5e:	8532                	mv	a0,a2
    8001df60:	00002097          	auipc	ra,0x2
    8001df64:	b4a080e7          	jalr	-1206(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001df68:	e9aa                	sd	a0,208(sp)
    8001df6a:	e5ae                	sd	a1,200(sp)
    8001df6c:	a009                	j	8001df6e <.LBB1_80+0x150>
    8001df6e:	654e                	ld	a0,208(sp)
    8001df70:	fb2a                	sd	a0,432(sp)
    8001df72:	65ae                	ld	a1,200(sp)
    8001df74:	ff2e                	sd	a1,440(sp)
    8001df76:	a009                	j	8001df78 <.LBB1_80+0x15a>
    8001df78:	1b08                	addi	a0,sp,432
    8001df7a:	00002097          	auipc	ra,0x2
    8001df7e:	ac2080e7          	jalr	-1342(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001df82:	e3aa                	sd	a0,448(sp)
    8001df84:	e7ae                	sd	a1,456(sp)
    8001df86:	a009                	j	8001df88 <.LBB1_80+0x16a>
    8001df88:	651e                	ld	a0,448(sp)
    8001df8a:	4581                	li	a1,0
    8001df8c:	00b50463          	beq	a0,a1,8001df94 <.LBB1_80+0x176>
    8001df90:	a009                	j	8001df92 <.LBB1_80+0x174>
    8001df92:	a839                	j	8001dfb0 <.LBB1_80+0x192>
            info.alloc.as_mut_ptr().write(alloc_slice_ptr);
        }

        // alloc space for split field
        // blocks of size 0 no need to split
        for i in 1..self.nsizes {
    8001df94:	6576                	ld	a0,344(sp)
    8001df96:	690c                	ld	a1,16(a0)
    8001df98:	4605                	li	a2,1
    8001df9a:	ebb2                	sd	a2,464(sp)
    8001df9c:	efae                	sd	a1,472(sp)
    8001df9e:	8532                	mv	a0,a2
    8001dfa0:	00002097          	auipc	ra,0x2
    8001dfa4:	b0a080e7          	jalr	-1270(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001dfa8:	e1aa                	sd	a0,192(sp)
    8001dfaa:	fd2e                	sd	a1,184(sp)
    8001dfac:	a055                	j	8001e050 <.LBB1_80+0x232>
        for i in 0..self.nsizes {
    8001dfae:	0000                	unimp
    8001dfb0:	653e                	ld	a0,456(sp)
    8001dfb2:	22a13c23          	sd	a0,568(sp)
    8001dfb6:	24a13023          	sd	a0,576(sp)
    8001dfba:	24a13423          	sd	a0,584(sp)
            let nblk = self.n_blk(i);
    8001dfbe:	65f6                	ld	a1,344(sp)
    8001dfc0:	f92a                	sd	a0,176(sp)
    8001dfc2:	852e                	mv	a0,a1
    8001dfc4:	75ca                	ld	a1,176(sp)
    8001dfc6:	00001097          	auipc	ra,0x1
    8001dfca:	198080e7          	jalr	408(ra) # 8001f15e <_ZN9allocator11BuddySystem5n_blk17h9a6c95478cbc2d6fE>
    8001dfce:	85aa                	mv	a1,a0
    8001dfd0:	24a13823          	sd	a0,592(sp)
    8001dfd4:	f52e                	sd	a1,168(sp)
    8001dfd6:	a009                	j	8001dfd8 <.LBB1_80+0x1ba>
            let info = self.get_info_mut(i);
    8001dfd8:	6576                	ld	a0,344(sp)
    8001dfda:	75ca                	ld	a1,176(sp)
    8001dfdc:	00001097          	auipc	ra,0x1
    8001dfe0:	0f0080e7          	jalr	240(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001dfe4:	85aa                	mv	a1,a0
    8001dfe6:	24a13c23          	sd	a0,600(sp)
    8001dfea:	f12e                	sd	a1,160(sp)
    8001dfec:	a009                	j	8001dfee <.LBB1_80+0x1d0>
            info.free.init();
    8001dfee:	750a                	ld	a0,160(sp)
    8001dff0:	00002097          	auipc	ra,0x2
    8001dff4:	7e2080e7          	jalr	2018(ra) # 800207d2 <_ZN9allocator4list4List4init17h408b264d91133ff0E>
    8001dff8:	a009                	j	8001dffa <.LBB1_80+0x1dc>
    8001dffa:	45a1                	li	a1,8
            let alloc_size = round_up(nblk, 8)/8;
    8001dffc:	752a                	ld	a0,168(sp)
    8001dffe:	00001097          	auipc	ra,0x1
    8001e002:	6d8080e7          	jalr	1752(ra) # 8001f6d6 <_ZN9allocator8round_up17hace079d84f0703acE>
    8001e006:	ed2a                	sd	a0,152(sp)
    8001e008:	a009                	j	8001e00a <.LBB1_80+0x1ec>
    8001e00a:	656a                	ld	a0,152(sp)
    8001e00c:	00355593          	srli	a1,a0,0x3
    8001e010:	26b13023          	sd	a1,608(sp)
    8001e014:	0b28                	addi	a0,sp,408
            let alloc_slice_ptr = init_slice_empty(&mut cur, alloc_size);
    8001e016:	00002097          	auipc	ra,0x2
    8001e01a:	e7e080e7          	jalr	-386(ra) # 8001fe94 <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE>
    8001e01e:	862a                	mv	a2,a0
    8001e020:	86ae                	mv	a3,a1
    8001e022:	26a13423          	sd	a0,616(sp)
    8001e026:	26b13823          	sd	a1,624(sp)
    8001e02a:	e932                	sd	a2,144(sp)
    8001e02c:	e536                	sd	a3,136(sp)
    8001e02e:	a009                	j	8001e030 <.LBB1_80+0x212>
            info.alloc.as_mut_ptr().write(alloc_slice_ptr);
    8001e030:	750a                	ld	a0,160(sp)
    8001e032:	01050593          	addi	a1,a0,16
    8001e036:	2cb13c23          	sd	a1,728(sp)
    8001e03a:	e12e                	sd	a1,128(sp)
    8001e03c:	a009                	j	8001e03e <.LBB1_80+0x220>
    8001e03e:	650a                	ld	a0,128(sp)
    8001e040:	65ca                	ld	a1,144(sp)
    8001e042:	662a                	ld	a2,136(sp)
    8001e044:	00002097          	auipc	ra,0x2
    8001e048:	6c8080e7          	jalr	1736(ra) # 8002070c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc79ca54ce92155abE>
    8001e04c:	a009                	j	8001e04e <.LBB1_80+0x230>
        for i in 0..self.nsizes {
    8001e04e:	b72d                	j	8001df78 <.LBB1_80+0x15a>
        for i in 1..self.nsizes {
    8001e050:	650e                	ld	a0,192(sp)
    8001e052:	f3aa                	sd	a0,480(sp)
    8001e054:	75ea                	ld	a1,184(sp)
    8001e056:	f7ae                	sd	a1,488(sp)
    8001e058:	a009                	j	8001e05a <.LBB1_80+0x23c>
    8001e05a:	1388                	addi	a0,sp,480
    8001e05c:	00002097          	auipc	ra,0x2
    8001e060:	9e0080e7          	jalr	-1568(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001e064:	fbaa                	sd	a0,496(sp)
    8001e066:	ffae                	sd	a1,504(sp)
    8001e068:	a009                	j	8001e06a <.LBB1_80+0x24c>
    8001e06a:	755e                	ld	a0,496(sp)
    8001e06c:	4581                	li	a1,0
    8001e06e:	00b50463          	beq	a0,a1,8001e076 <.LBB1_80+0x258>
    8001e072:	a009                	j	8001e074 <.LBB1_80+0x256>
    8001e074:	a811                	j	8001e088 <.LBB1_80+0x26a>
            let split_slice_ptr = init_slice_empty(&mut cur, split_size);
            info.split.as_mut_ptr().write(split_slice_ptr);
        }

        // cur address may not be aligned now
        cur = round_up(cur, leaf_size);
    8001e076:	657a                	ld	a0,408(sp)
    8001e078:	75d6                	ld	a1,368(sp)
    8001e07a:	00001097          	auipc	ra,0x1
    8001e07e:	65c080e7          	jalr	1628(ra) # 8001f6d6 <_ZN9allocator8round_up17hace079d84f0703acE>
    8001e082:	fcaa                	sd	a0,120(sp)
    8001e084:	a861                	j	8001e11c <.LBB1_80+0x2fe>
        for i in 1..self.nsizes {
    8001e086:	0000                	unimp
    8001e088:	757e                	ld	a0,504(sp)
    8001e08a:	26a13c23          	sd	a0,632(sp)
    8001e08e:	28a13023          	sd	a0,640(sp)
    8001e092:	28a13423          	sd	a0,648(sp)
            let nblk = self.n_blk(i);
    8001e096:	65f6                	ld	a1,344(sp)
    8001e098:	f8aa                	sd	a0,112(sp)
    8001e09a:	852e                	mv	a0,a1
    8001e09c:	75c6                	ld	a1,112(sp)
    8001e09e:	00001097          	auipc	ra,0x1
    8001e0a2:	0c0080e7          	jalr	192(ra) # 8001f15e <_ZN9allocator11BuddySystem5n_blk17h9a6c95478cbc2d6fE>
    8001e0a6:	85aa                	mv	a1,a0
    8001e0a8:	28a13823          	sd	a0,656(sp)
    8001e0ac:	f4ae                	sd	a1,104(sp)
    8001e0ae:	a009                	j	8001e0b0 <.LBB1_80+0x292>
            let info = self.get_info_mut(i);
    8001e0b0:	6576                	ld	a0,344(sp)
    8001e0b2:	75c6                	ld	a1,112(sp)
    8001e0b4:	00001097          	auipc	ra,0x1
    8001e0b8:	018080e7          	jalr	24(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e0bc:	85aa                	mv	a1,a0
    8001e0be:	28a13c23          	sd	a0,664(sp)
    8001e0c2:	f0ae                	sd	a1,96(sp)
    8001e0c4:	a009                	j	8001e0c6 <.LBB1_80+0x2a8>
    8001e0c6:	45a1                	li	a1,8
            let split_size = round_up(nblk, 8)/8;
    8001e0c8:	7526                	ld	a0,104(sp)
    8001e0ca:	00001097          	auipc	ra,0x1
    8001e0ce:	60c080e7          	jalr	1548(ra) # 8001f6d6 <_ZN9allocator8round_up17hace079d84f0703acE>
    8001e0d2:	ecaa                	sd	a0,88(sp)
    8001e0d4:	a009                	j	8001e0d6 <.LBB1_80+0x2b8>
    8001e0d6:	6566                	ld	a0,88(sp)
    8001e0d8:	00355593          	srli	a1,a0,0x3
    8001e0dc:	2ab13023          	sd	a1,672(sp)
    8001e0e0:	0b28                	addi	a0,sp,408
            let split_slice_ptr = init_slice_empty(&mut cur, split_size);
    8001e0e2:	00002097          	auipc	ra,0x2
    8001e0e6:	db2080e7          	jalr	-590(ra) # 8001fe94 <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE>
    8001e0ea:	862a                	mv	a2,a0
    8001e0ec:	86ae                	mv	a3,a1
    8001e0ee:	2aa13423          	sd	a0,680(sp)
    8001e0f2:	2ab13823          	sd	a1,688(sp)
    8001e0f6:	e8b2                	sd	a2,80(sp)
    8001e0f8:	e4b6                	sd	a3,72(sp)
    8001e0fa:	a009                	j	8001e0fc <.LBB1_80+0x2de>
            info.split.as_mut_ptr().write(split_slice_ptr);
    8001e0fc:	7506                	ld	a0,96(sp)
    8001e0fe:	02050593          	addi	a1,a0,32
    8001e102:	2eb13023          	sd	a1,736(sp)
    8001e106:	e0ae                	sd	a1,64(sp)
    8001e108:	a009                	j	8001e10a <.LBB1_80+0x2ec>
    8001e10a:	6506                	ld	a0,64(sp)
    8001e10c:	65c6                	ld	a1,80(sp)
    8001e10e:	6626                	ld	a2,72(sp)
    8001e110:	00002097          	auipc	ra,0x2
    8001e114:	5fc080e7          	jalr	1532(ra) # 8002070c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc79ca54ce92155abE>
    8001e118:	a009                	j	8001e11a <.LBB1_80+0x2fc>
        for i in 1..self.nsizes {
    8001e11a:	b781                	j	8001e05a <.LBB1_80+0x23c>
        cur = round_up(cur, leaf_size);
    8001e11c:	7566                	ld	a0,120(sp)
    8001e11e:	ef2a                	sd	a0,408(sp)

        // meta data lies between [base, cur)
        let meta = self.mark_meta(cur);
    8001e120:	6576                	ld	a0,344(sp)
    8001e122:	75e6                	ld	a1,120(sp)
    8001e124:	00001097          	auipc	ra,0x1
    8001e128:	922080e7          	jalr	-1758(ra) # 8001ea46 <_ZN9allocator11BuddySystem9mark_meta17h1306dcd422db5790E>
    8001e12c:	85aa                	mv	a1,a0
    8001e12e:	2aa13c23          	sd	a0,696(sp)
    8001e132:	fc2e                	sd	a1,56(sp)
    8001e134:	a009                	j	8001e136 <.LBB1_80+0x318>

        // unavailable data lies between [self.actual_end, 2^(self.nsizes-1))
        // due to the memory size of buddy system is a power of 2
        let unavail = self.mark_unavail();
    8001e136:	6576                	ld	a0,344(sp)
    8001e138:	00001097          	auipc	ra,0x1
    8001e13c:	964080e7          	jalr	-1692(ra) # 8001ea9c <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E>
    8001e140:	85aa                	mv	a1,a0
    8001e142:	2ca13023          	sd	a0,704(sp)
    8001e146:	f82e                	sd	a1,48(sp)
    8001e148:	a009                	j	8001e14a <.LBB1_80+0x32c>
        
        // init free regions
        let free = self.init_free(cur);
    8001e14a:	65fa                	ld	a1,408(sp)
    8001e14c:	6576                	ld	a0,344(sp)
    8001e14e:	00001097          	auipc	ra,0x1
    8001e152:	d0e080e7          	jalr	-754(ra) # 8001ee5c <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E>
    8001e156:	85aa                	mv	a1,a0
    8001e158:	2ca13423          	sd	a0,712(sp)
    8001e15c:	f42e                	sd	a1,40(sp)
    8001e15e:	a009                	j	8001e160 <.LBB1_80+0x342>

        // check total memory
        if free != self.blk_size(self.max_size()) - meta - unavail {
    8001e160:	6576                	ld	a0,344(sp)
    8001e162:	00001097          	auipc	ra,0x1
    8001e166:	fc6080e7          	jalr	-58(ra) # 8001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>
    8001e16a:	f02a                	sd	a0,32(sp)
    8001e16c:	a009                	j	8001e16e <.LBB1_80+0x350>
    8001e16e:	6576                	ld	a0,344(sp)
    8001e170:	7582                	ld	a1,32(sp)
    8001e172:	00001097          	auipc	ra,0x1
    8001e176:	28e080e7          	jalr	654(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001e17a:	ec2a                	sd	a0,24(sp)
    8001e17c:	a009                	j	8001e17e <.LBB1_80+0x360>
    8001e17e:	6562                	ld	a0,24(sp)
    8001e180:	75e2                	ld	a1,56(sp)
    8001e182:	40b50633          	sub	a2,a0,a1
    8001e186:	e832                	sd	a2,16(sp)
    8001e188:	0ec56e63          	bltu	a0,a2,8001e284 <.LBB1_94>
    8001e18c:	a009                	j	8001e18e <.LBB1_80+0x370>
    8001e18e:	6542                	ld	a0,16(sp)
    8001e190:	75c2                	ld	a1,48(sp)
    8001e192:	40b50633          	sub	a2,a0,a1
    8001e196:	e432                	sd	a2,8(sp)
    8001e198:	10c56563          	bltu	a0,a2,8001e2a2 <.LBB1_96>
    8001e19c:	a009                	j	8001e19e <.LBB1_80+0x380>
    8001e19e:	7522                	ld	a0,40(sp)
    8001e1a0:	65a2                	ld	a1,8(sp)
    8001e1a2:	00b50c63          	beq	a0,a1,8001e1ba <.LBB1_81+0x12>
    8001e1a6:	a009                	j	8001e1a8 <.LBB1_81>

000000008001e1a8 <.LBB1_81>:
            return Err("allocator bug: tot != meta + free + unavail");
    8001e1a8:	0000b517          	auipc	a0,0xb
    8001e1ac:	64050513          	addi	a0,a0,1600 # 800297e8 <.L__unnamed_4>
    8001e1b0:	e32a                	sd	a0,384(sp)
    8001e1b2:	02b00513          	li	a0,43
    8001e1b6:	e72a                	sd	a0,392(sp)
//! Thread-unsafe, panic-free buddy system allocator.
    8001e1b8:	a801                	j	8001e1c8 <.LBB1_81+0x20>
    8001e1ba:	4505                	li	a0,1
        }

        self.initialized = true;
    8001e1bc:	65f6                	ld	a1,344(sp)
    8001e1be:	02a58c23          	sb	a0,56(a1)
    8001e1c2:	4501                	li	a0,0
        Ok(())
    8001e1c4:	e32a                	sd	a0,384(sp)
    }
    8001e1c6:	a009                	j	8001e1c8 <.LBB1_81+0x20>
    8001e1c8:	651a                	ld	a0,384(sp)
    8001e1ca:	65ba                	ld	a1,392(sp)
    8001e1cc:	2e813083          	ld	ra,744(sp)
    8001e1d0:	2f010113          	addi	sp,sp,752
    8001e1d4:	8082                	ret

000000008001e1d6 <.LBB1_82>:
        if end - start < leaf_size {
    8001e1d6:	0000b517          	auipc	a0,0xb
    8001e1da:	4fa50513          	addi	a0,a0,1274 # 800296d0 <str.0>

000000008001e1de <.LBB1_83>:
    8001e1de:	0000b617          	auipc	a2,0xb
    8001e1e2:	4d260613          	addi	a2,a2,1234 # 800296b0 <.L__unnamed_5>
    8001e1e6:	02100593          	li	a1,33
    8001e1ea:	00003097          	auipc	ra,0x3
    8001e1ee:	ae0080e7          	jalr	-1312(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e1f4 <.LBB1_84>:
        self.nsizes = log2((self.actual_end-cur)/leaf_size) + 1;
    8001e1f4:	0000b517          	auipc	a0,0xb
    8001e1f8:	4dc50513          	addi	a0,a0,1244 # 800296d0 <str.0>

000000008001e1fc <.LBB1_85>:
    8001e1fc:	0000b617          	auipc	a2,0xb
    8001e200:	52c60613          	addi	a2,a2,1324 # 80029728 <.L__unnamed_6>
    8001e204:	02100593          	li	a1,33
    8001e208:	00003097          	auipc	ra,0x3
    8001e20c:	ac2080e7          	jalr	-1342(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e212 <.LBB1_86>:
    8001e212:	0000b517          	auipc	a0,0xb
    8001e216:	52e50513          	addi	a0,a0,1326 # 80029740 <str.1>

000000008001e21a <.LBB1_87>:
    8001e21a:	0000b617          	auipc	a2,0xb
    8001e21e:	50e60613          	addi	a2,a2,1294 # 80029728 <.L__unnamed_6>
    8001e222:	45e5                	li	a1,25
    8001e224:	00003097          	auipc	ra,0x3
    8001e228:	aa6080e7          	jalr	-1370(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e22e <.LBB1_88>:
    8001e22e:	0000b517          	auipc	a0,0xb
    8001e232:	55250513          	addi	a0,a0,1362 # 80029780 <str.2>

000000008001e236 <.LBB1_89>:
    8001e236:	0000b617          	auipc	a2,0xb
    8001e23a:	52a60613          	addi	a2,a2,1322 # 80029760 <.L__unnamed_7>
    8001e23e:	45f1                	li	a1,28
    8001e240:	00003097          	auipc	ra,0x3
    8001e244:	a8a080e7          	jalr	-1398(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e24a <.LBB1_90>:
        if self.actual_end - cur > self.blk_size(self.max_size()) {
    8001e24a:	0000b517          	auipc	a0,0xb
    8001e24e:	48650513          	addi	a0,a0,1158 # 800296d0 <str.0>

000000008001e252 <.LBB1_91>:
    8001e252:	0000b617          	auipc	a2,0xb
    8001e256:	54e60613          	addi	a2,a2,1358 # 800297a0 <.L__unnamed_8>
    8001e25a:	02100593          	li	a1,33
    8001e25e:	00003097          	auipc	ra,0x3
    8001e262:	a6c080e7          	jalr	-1428(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e268 <.LBB1_92>:
            self.nsizes += 1;
    8001e268:	0000b517          	auipc	a0,0xb
    8001e26c:	51850513          	addi	a0,a0,1304 # 80029780 <str.2>

000000008001e270 <.LBB1_93>:
    8001e270:	0000b617          	auipc	a2,0xb
    8001e274:	54860613          	addi	a2,a2,1352 # 800297b8 <.L__unnamed_9>
    8001e278:	45f1                	li	a1,28
    8001e27a:	00003097          	auipc	ra,0x3
    8001e27e:	a50080e7          	jalr	-1456(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e284 <.LBB1_94>:
        if free != self.blk_size(self.max_size()) - meta - unavail {
    8001e284:	0000b517          	auipc	a0,0xb
    8001e288:	44c50513          	addi	a0,a0,1100 # 800296d0 <str.0>

000000008001e28c <.LBB1_95>:
    8001e28c:	0000b617          	auipc	a2,0xb
    8001e290:	54460613          	addi	a2,a2,1348 # 800297d0 <.L__unnamed_10>
    8001e294:	02100593          	li	a1,33
    8001e298:	00003097          	auipc	ra,0x3
    8001e29c:	a32080e7          	jalr	-1486(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e2a2 <.LBB1_96>:
    8001e2a2:	0000b517          	auipc	a0,0xb
    8001e2a6:	42e50513          	addi	a0,a0,1070 # 800296d0 <str.0>

000000008001e2aa <.LBB1_97>:
    8001e2aa:	0000b617          	auipc	a2,0xb
    8001e2ae:	52660613          	addi	a2,a2,1318 # 800297d0 <.L__unnamed_10>
    8001e2b2:	02100593          	li	a1,33
    8001e2b6:	00003097          	auipc	ra,0x3
    8001e2ba:	a14080e7          	jalr	-1516(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE:

000000008001e2c0 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE>:
    pub fn meta_info(&self) -> (bool, usize, usize, usize) {
        (self.initialized, self.base, self.actual_end, self.nsizes)
    }

    /// Allocate a block of memory satisifying the layout.
    pub fn alloc(&mut self, layout: Layout) -> *mut u8 {
    8001e2c0:	7149                	addi	sp,sp,-368
    8001e2c2:	f686                	sd	ra,360(sp)
    8001e2c4:	e9ae                	sd	a1,208(sp)
    8001e2c6:	edb2                	sd	a2,216(sp)
    8001e2c8:	e62a                	sd	a0,264(sp)
    8001e2ca:	098c                	addi	a1,sp,208
        if layout.size() == 0 {
    8001e2cc:	e5aa                	sd	a0,200(sp)
    8001e2ce:	852e                	mv	a0,a1
    8001e2d0:	00002097          	auipc	ra,0x2
    8001e2d4:	136080e7          	jalr	310(ra) # 80020406 <_ZN4core5alloc6layout6Layout4size17hc779d721a3cde4a5E>
    8001e2d8:	e1aa                	sd	a0,192(sp)
    8001e2da:	a009                	j	8001e2dc <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x1c>
    8001e2dc:	4501                	li	a0,0
    8001e2de:	658e                	ld	a1,192(sp)
    8001e2e0:	00a59663          	bne	a1,a0,8001e2ec <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x2c>
    8001e2e4:	a009                	j	8001e2e6 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x26>
    8001e2e6:	4501                	li	a0,0
            return ptr::null_mut();
    8001e2e8:	f1aa                	sd	a0,224(sp)
    8001e2ea:	a48d                	j	8001e54c <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x28c>
    8001e2ec:	0988                	addi	a0,sp,208
        }

        // only guarantee the alignment not bigger than max_alignment
        if layout.align() > self.max_alignment {
    8001e2ee:	00002097          	auipc	ra,0x2
    8001e2f2:	122080e7          	jalr	290(ra) # 80020410 <_ZN4core5alloc6layout6Layout5align17h8121a31f04b3a82aE>
    8001e2f6:	fd2a                	sd	a0,184(sp)
    8001e2f8:	a009                	j	8001e2fa <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x3a>
    8001e2fa:	652e                	ld	a0,200(sp)
    8001e2fc:	710c                	ld	a1,32(a0)
    8001e2fe:	766a                	ld	a2,184(sp)
    8001e300:	00c5f663          	bgeu	a1,a2,8001e30c <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x4c>
    8001e304:	a009                	j	8001e306 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x46>
    8001e306:	4501                	li	a0,0
            return ptr::null_mut();
    8001e308:	f1aa                	sd	a0,224(sp)
    8001e30a:	a481                	j	8001e54a <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x28a>
    8001e30c:	0988                	addi	a0,sp,208
        // note: the size of a value is always a multiple of its alignment
        // now we only have to consider the size
        // because base and actual_end are already align to max_alignment

        // find the smallest block can contain the size
        let smalli = if layout.size() <= self.leaf_size {
    8001e30e:	00002097          	auipc	ra,0x2
    8001e312:	0f8080e7          	jalr	248(ra) # 80020406 <_ZN4core5alloc6layout6Layout4size17hc779d721a3cde4a5E>
    8001e316:	f92a                	sd	a0,176(sp)
    8001e318:	a009                	j	8001e31a <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x5a>
    8001e31a:	652e                	ld	a0,200(sp)
    8001e31c:	6d0c                	ld	a1,24(a0)
    8001e31e:	764a                	ld	a2,176(sp)
    8001e320:	00c5e663          	bltu	a1,a2,8001e32c <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x6c>
    8001e324:	a009                	j	8001e326 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x66>
    8001e326:	4501                	li	a0,0
            0 
    8001e328:	f5aa                	sd	a0,232(sp)
        let smalli = if layout.size() <= self.leaf_size {
    8001e32a:	a0b1                	j	8001e376 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xb6>
    8001e32c:	0988                	addi	a0,sp,208
        } else {
            (layout.size().next_power_of_two() / self.leaf_size).trailing_zeros() as usize
    8001e32e:	00002097          	auipc	ra,0x2
    8001e332:	0d8080e7          	jalr	216(ra) # 80020406 <_ZN4core5alloc6layout6Layout4size17hc779d721a3cde4a5E>
    8001e336:	f52a                	sd	a0,168(sp)
    8001e338:	a009                	j	8001e33a <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x7a>
    8001e33a:	752a                	ld	a0,168(sp)
    8001e33c:	00002097          	auipc	ra,0x2
    8001e340:	954080e7          	jalr	-1708(ra) # 8001fc90 <_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h4187d82bbc7d8c92E>
    8001e344:	f12a                	sd	a0,160(sp)
    8001e346:	a009                	j	8001e348 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x88>
    8001e348:	652e                	ld	a0,200(sp)
    8001e34a:	6d0c                	ld	a1,24(a0)
    8001e34c:	4601                	li	a2,0
    8001e34e:	ed2e                	sd	a1,152(sp)
    8001e350:	20c58363          	beq	a1,a2,8001e556 <.LBB3_64>
    8001e354:	a009                	j	8001e356 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x96>
    8001e356:	750a                	ld	a0,160(sp)
    8001e358:	65ea                	ld	a1,152(sp)
    8001e35a:	02b55533          	divu	a0,a0,a1
    8001e35e:	00002097          	auipc	ra,0x2
    8001e362:	870080e7          	jalr	-1936(ra) # 8001fbce <_ZN4core3num23_$LT$impl$u20$usize$GT$14trailing_zeros17h3df19012ce238149E>
    8001e366:	e92a                	sd	a0,144(sp)
    8001e368:	a009                	j	8001e36a <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xaa>
    8001e36a:	654a                	ld	a0,144(sp)
    8001e36c:	02051593          	slli	a1,a0,0x20
    8001e370:	9181                	srli	a1,a1,0x20
    8001e372:	f5ae                	sd	a1,232(sp)
        let smalli = if layout.size() <= self.leaf_size {
    8001e374:	a009                	j	8001e376 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xb6>
        };
        let mut sizei = smalli;
    8001e376:	752e                	ld	a0,232(sp)
    8001e378:	f9aa                	sd	a0,240(sp)
        while sizei < self.nsizes {
    8001e37a:	a009                	j	8001e37c <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xbc>
    8001e37c:	754e                	ld	a0,240(sp)
    8001e37e:	65ae                	ld	a1,200(sp)
    8001e380:	6990                	ld	a2,16(a1)
    8001e382:	00c56463          	bltu	a0,a2,8001e38a <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xca>
    8001e386:	a009                	j	8001e388 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xc8>
    8001e388:	a83d                	j	8001e3c6 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x106>
            let info = unsafe { self.get_info_mut(sizei) };
    8001e38a:	75ce                	ld	a1,240(sp)
    8001e38c:	652e                	ld	a0,200(sp)
    8001e38e:	00001097          	auipc	ra,0x1
    8001e392:	d3e080e7          	jalr	-706(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e396:	e52a                	sd	a0,136(sp)
    8001e398:	a009                	j	8001e39a <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xda>
    8001e39a:	652a                	ld	a0,136(sp)
    8001e39c:	ea2a                	sd	a0,272(sp)
            if !info.free.is_empty() {
    8001e39e:	00002097          	auipc	ra,0x2
    8001e3a2:	520080e7          	jalr	1312(ra) # 800208be <_ZN9allocator4list4List8is_empty17hc365136672504482E>
    8001e3a6:	e12a                	sd	a0,128(sp)
    8001e3a8:	a009                	j	8001e3aa <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xea>
    8001e3aa:	650a                	ld	a0,128(sp)
    8001e3ac:	e119                	bnez	a0,8001e3b2 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xf2>
    8001e3ae:	a009                	j	8001e3b0 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xf0>
//! Thread-unsafe, panic-free buddy system allocator.
    8001e3b0:	a819                	j	8001e3c6 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x106>
                break;
            }
            sizei += 1;
    8001e3b2:	754e                	ld	a0,240(sp)
    8001e3b4:	00150593          	addi	a1,a0,1
    8001e3b8:	fcae                	sd	a1,120(sp)
    8001e3ba:	1aa5ec63          	bltu	a1,a0,8001e572 <.LBB3_66>
    8001e3be:	a009                	j	8001e3c0 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x100>
    8001e3c0:	7566                	ld	a0,120(sp)
    8001e3c2:	f9aa                	sd	a0,240(sp)
        while sizei < self.nsizes {
    8001e3c4:	bf65                	j	8001e37c <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0xbc>
        }
        if sizei >= self.nsizes {
    8001e3c6:	754e                	ld	a0,240(sp)
    8001e3c8:	65ae                	ld	a1,200(sp)
    8001e3ca:	6990                	ld	a2,16(a1)
    8001e3cc:	00c56663          	bltu	a0,a2,8001e3d8 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x118>
    8001e3d0:	a009                	j	8001e3d2 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x112>
    8001e3d2:	4501                	li	a0,0
            // no free memory
            return ptr::null_mut()
    8001e3d4:	f1aa                	sd	a0,224(sp)
    8001e3d6:	aa85                	j	8001e546 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x286>
        }

        // pop a block at self.infos[sizei]
        let info = unsafe { self.get_info_mut(sizei) };
    8001e3d8:	75ce                	ld	a1,240(sp)
    8001e3da:	652e                	ld	a0,200(sp)
    8001e3dc:	00001097          	auipc	ra,0x1
    8001e3e0:	cf0080e7          	jalr	-784(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e3e4:	f8aa                	sd	a0,112(sp)
    8001e3e6:	a009                	j	8001e3e8 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x128>
    8001e3e8:	7546                	ld	a0,112(sp)
    8001e3ea:	ee2a                	sd	a0,280(sp)
        let raw_addr = match unsafe { info.free.pop() } {
    8001e3ec:	00002097          	auipc	ra,0x2
    8001e3f0:	44e080e7          	jalr	1102(ra) # 8002083a <_ZN9allocator4list4List3pop17h8bc4ea807ae3c81eE>
    8001e3f4:	fdaa                	sd	a0,248(sp)
    8001e3f6:	e22e                	sd	a1,256(sp)
    8001e3f8:	a009                	j	8001e3fa <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x13a>
            Some(raw_addr) => raw_addr,
    8001e3fa:	756e                	ld	a0,248(sp)
    8001e3fc:	4581                	li	a1,0
    8001e3fe:	00b50463          	beq	a0,a1,8001e406 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x146>
    8001e402:	a009                	j	8001e404 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x144>
    8001e404:	a029                	j	8001e40e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x14e>
    8001e406:	4501                	li	a0,0
            None => return ptr::null_mut(),
    8001e408:	f1aa                	sd	a0,224(sp)
    8001e40a:	aa2d                	j	8001e544 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x284>
        let raw_addr = match unsafe { info.free.pop() } {
    8001e40c:	0000                	unimp
            Some(raw_addr) => raw_addr,
    8001e40e:	6512                	ld	a0,256(sp)
    8001e410:	f22a                	sd	a0,288(sp)
    8001e412:	f62a                	sd	a0,296(sp)
        };
        let bi = self.blk_index(sizei, raw_addr);
    8001e414:	75ce                	ld	a1,240(sp)
    8001e416:	662e                	ld	a2,200(sp)
    8001e418:	f4aa                	sd	a0,104(sp)
    8001e41a:	8532                	mv	a0,a2
    8001e41c:	7626                	ld	a2,104(sp)
    8001e41e:	00001097          	auipc	ra,0x1
    8001e422:	dc0080e7          	jalr	-576(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001e426:	85aa                	mv	a1,a0
    8001e428:	fa2a                	sd	a0,304(sp)
    8001e42a:	f0ae                	sd	a1,96(sp)
    8001e42c:	a009                	j	8001e42e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x16e>
        unsafe { self.get_info_mut(sizei).alloc_set(bi, true); }
    8001e42e:	75ce                	ld	a1,240(sp)
    8001e430:	652e                	ld	a0,200(sp)
    8001e432:	00001097          	auipc	ra,0x1
    8001e436:	c9a080e7          	jalr	-870(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e43a:	ecaa                	sd	a0,88(sp)
    8001e43c:	a009                	j	8001e43e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x17e>
    8001e43e:	4605                	li	a2,1
    8001e440:	6566                	ld	a0,88(sp)
    8001e442:	7586                	ld	a1,96(sp)
    8001e444:	00001097          	auipc	ra,0x1
    8001e448:	19e080e7          	jalr	414(ra) # 8001f5e2 <_ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E>
    8001e44c:	a009                	j	8001e44e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x18e>

        // split the block until it reach smallest block size
        while sizei > smalli {            
    8001e44e:	a009                	j	8001e450 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x190>
    8001e450:	754e                	ld	a0,240(sp)
    8001e452:	75ae                	ld	a1,232(sp)
    8001e454:	00a5e663          	bltu	a1,a0,8001e460 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x1a0>
    8001e458:	a009                	j	8001e45a <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x19a>
            unsafe { info1.free.push(buddy_addr); }

            sizei -= 1;
        }

        raw_addr as *mut u8
    8001e45a:	7526                	ld	a0,104(sp)
    8001e45c:	f1aa                	sd	a0,224(sp)
    }
    8001e45e:	a8c5                	j	8001e54e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x28e>
            let bi = self.blk_index(sizei, raw_addr);
    8001e460:	75ce                	ld	a1,240(sp)
    8001e462:	652e                	ld	a0,200(sp)
    8001e464:	7626                	ld	a2,104(sp)
    8001e466:	00001097          	auipc	ra,0x1
    8001e46a:	d78080e7          	jalr	-648(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001e46e:	85aa                	mv	a1,a0
    8001e470:	fe2a                	sd	a0,312(sp)
    8001e472:	e8ae                	sd	a1,80(sp)
    8001e474:	a009                	j	8001e476 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x1b6>
            let info = unsafe { self.get_info_mut(sizei) };
    8001e476:	75ce                	ld	a1,240(sp)
    8001e478:	652e                	ld	a0,200(sp)
    8001e47a:	00001097          	auipc	ra,0x1
    8001e47e:	c52080e7          	jalr	-942(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e482:	e4aa                	sd	a0,72(sp)
    8001e484:	a009                	j	8001e486 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x1c6>
    8001e486:	6526                	ld	a0,72(sp)
    8001e488:	e2aa                	sd	a0,320(sp)
    8001e48a:	4605                	li	a2,1
            info.split_set(bi, true);
    8001e48c:	65c6                	ld	a1,80(sp)
    8001e48e:	00001097          	auipc	ra,0x1
    8001e492:	194080e7          	jalr	404(ra) # 8001f622 <_ZN9allocator9BuddyInfo9split_set17h162917f508718dbfE>
    8001e496:	a009                	j	8001e498 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x1d8>
            let bs1 = self.blk_size(sizei-1);
    8001e498:	754e                	ld	a0,240(sp)
    8001e49a:	fff50593          	addi	a1,a0,-1
    8001e49e:	e0ae                	sd	a1,64(sp)
    8001e4a0:	0eb56763          	bltu	a0,a1,8001e58e <.LBB3_68>
    8001e4a4:	a009                	j	8001e4a6 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x1e6>
    8001e4a6:	652e                	ld	a0,200(sp)
    8001e4a8:	6586                	ld	a1,64(sp)
    8001e4aa:	00001097          	auipc	ra,0x1
    8001e4ae:	f56080e7          	jalr	-170(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001e4b2:	85aa                	mv	a1,a0
    8001e4b4:	e6aa                	sd	a0,328(sp)
    8001e4b6:	fc2e                	sd	a1,56(sp)
    8001e4b8:	a009                	j	8001e4ba <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x1fa>
            let bi1 = self.blk_index(sizei-1, raw_addr);
    8001e4ba:	754e                	ld	a0,240(sp)
    8001e4bc:	fff50593          	addi	a1,a0,-1
    8001e4c0:	f82e                	sd	a1,48(sp)
    8001e4c2:	0eb56563          	bltu	a0,a1,8001e5ac <.LBB3_70>
    8001e4c6:	a009                	j	8001e4c8 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x208>
    8001e4c8:	652e                	ld	a0,200(sp)
    8001e4ca:	75c2                	ld	a1,48(sp)
    8001e4cc:	7626                	ld	a2,104(sp)
    8001e4ce:	00001097          	auipc	ra,0x1
    8001e4d2:	d10080e7          	jalr	-752(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001e4d6:	85aa                	mv	a1,a0
    8001e4d8:	eaaa                	sd	a0,336(sp)
    8001e4da:	f42e                	sd	a1,40(sp)
    8001e4dc:	a009                	j	8001e4de <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x21e>
            let info1 = unsafe { self.get_info_mut(sizei-1) };
    8001e4de:	754e                	ld	a0,240(sp)
    8001e4e0:	fff50593          	addi	a1,a0,-1
    8001e4e4:	f02e                	sd	a1,32(sp)
    8001e4e6:	0eb56263          	bltu	a0,a1,8001e5ca <.LBB3_72>
    8001e4ea:	a009                	j	8001e4ec <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x22c>
    8001e4ec:	652e                	ld	a0,200(sp)
    8001e4ee:	7582                	ld	a1,32(sp)
    8001e4f0:	00001097          	auipc	ra,0x1
    8001e4f4:	bdc080e7          	jalr	-1060(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e4f8:	ec2a                	sd	a0,24(sp)
    8001e4fa:	a009                	j	8001e4fc <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x23c>
    8001e4fc:	6562                	ld	a0,24(sp)
    8001e4fe:	eeaa                	sd	a0,344(sp)
    8001e500:	4605                	li	a2,1
            info1.alloc_set(bi1, true);
    8001e502:	75a2                	ld	a1,40(sp)
    8001e504:	00001097          	auipc	ra,0x1
    8001e508:	0de080e7          	jalr	222(ra) # 8001f5e2 <_ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E>
    8001e50c:	a009                	j	8001e50e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x24e>
            let buddy_addr = raw_addr + bs1;
    8001e50e:	7526                	ld	a0,104(sp)
    8001e510:	75e2                	ld	a1,56(sp)
    8001e512:	00b50633          	add	a2,a0,a1
    8001e516:	e832                	sd	a2,16(sp)
    8001e518:	0ca66863          	bltu	a2,a0,8001e5e8 <.LBB3_74>
    8001e51c:	a009                	j	8001e51e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x25e>
    8001e51e:	6542                	ld	a0,16(sp)
    8001e520:	f2aa                	sd	a0,352(sp)
            unsafe { info1.free.push(buddy_addr); }
    8001e522:	6562                	ld	a0,24(sp)
    8001e524:	65c2                	ld	a1,16(sp)
    8001e526:	00002097          	auipc	ra,0x2
    8001e52a:	2b8080e7          	jalr	696(ra) # 800207de <_ZN9allocator4list4List4push17he3c20b895e5c9a81E>
    8001e52e:	a009                	j	8001e530 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x270>
            sizei -= 1;
    8001e530:	754e                	ld	a0,240(sp)
    8001e532:	fff50593          	addi	a1,a0,-1
    8001e536:	e42e                	sd	a1,8(sp)
    8001e538:	0cb56663          	bltu	a0,a1,8001e604 <.LBB3_76>
    8001e53c:	a009                	j	8001e53e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x27e>
    8001e53e:	6522                	ld	a0,8(sp)
    8001e540:	f9aa                	sd	a0,240(sp)
        while sizei > smalli {            
    8001e542:	b739                	j	8001e450 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x190>
//! Thread-unsafe, panic-free buddy system allocator.
    8001e544:	a011                	j	8001e548 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x288>
    8001e546:	a009                	j	8001e548 <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x288>
    8001e548:	a019                	j	8001e54e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x28e>
    8001e54a:	a011                	j	8001e54e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x28e>
    8001e54c:	a009                	j	8001e54e <_ZN9allocator11BuddySystem5alloc17h00ffa65f501d8c3eE+0x28e>
    }
    8001e54e:	750e                	ld	a0,224(sp)
    8001e550:	70b6                	ld	ra,360(sp)
    8001e552:	6175                	addi	sp,sp,368
    8001e554:	8082                	ret

000000008001e556 <.LBB3_64>:
            (layout.size().next_power_of_two() / self.leaf_size).trailing_zeros() as usize
    8001e556:	0000b517          	auipc	a0,0xb
    8001e55a:	1ea50513          	addi	a0,a0,490 # 80029740 <str.1>

000000008001e55e <.LBB3_65>:
    8001e55e:	0000b617          	auipc	a2,0xb
    8001e562:	2ba60613          	addi	a2,a2,698 # 80029818 <.L__unnamed_11>
    8001e566:	45e5                	li	a1,25
    8001e568:	00002097          	auipc	ra,0x2
    8001e56c:	762080e7          	jalr	1890(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e572 <.LBB3_66>:
            sizei += 1;
    8001e572:	0000b517          	auipc	a0,0xb
    8001e576:	20e50513          	addi	a0,a0,526 # 80029780 <str.2>

000000008001e57a <.LBB3_67>:
    8001e57a:	0000b617          	auipc	a2,0xb
    8001e57e:	2b660613          	addi	a2,a2,694 # 80029830 <.L__unnamed_12>
    8001e582:	45f1                	li	a1,28
    8001e584:	00002097          	auipc	ra,0x2
    8001e588:	746080e7          	jalr	1862(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e58e <.LBB3_68>:
            let bs1 = self.blk_size(sizei-1);
    8001e58e:	0000b517          	auipc	a0,0xb
    8001e592:	14250513          	addi	a0,a0,322 # 800296d0 <str.0>

000000008001e596 <.LBB3_69>:
    8001e596:	0000b617          	auipc	a2,0xb
    8001e59a:	2b260613          	addi	a2,a2,690 # 80029848 <.L__unnamed_13>
    8001e59e:	02100593          	li	a1,33
    8001e5a2:	00002097          	auipc	ra,0x2
    8001e5a6:	728080e7          	jalr	1832(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e5ac <.LBB3_70>:
            let bi1 = self.blk_index(sizei-1, raw_addr);
    8001e5ac:	0000b517          	auipc	a0,0xb
    8001e5b0:	12450513          	addi	a0,a0,292 # 800296d0 <str.0>

000000008001e5b4 <.LBB3_71>:
    8001e5b4:	0000b617          	auipc	a2,0xb
    8001e5b8:	2ac60613          	addi	a2,a2,684 # 80029860 <.L__unnamed_14>
    8001e5bc:	02100593          	li	a1,33
    8001e5c0:	00002097          	auipc	ra,0x2
    8001e5c4:	70a080e7          	jalr	1802(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e5ca <.LBB3_72>:
            let info1 = unsafe { self.get_info_mut(sizei-1) };
    8001e5ca:	0000b517          	auipc	a0,0xb
    8001e5ce:	10650513          	addi	a0,a0,262 # 800296d0 <str.0>

000000008001e5d2 <.LBB3_73>:
    8001e5d2:	0000b617          	auipc	a2,0xb
    8001e5d6:	2a660613          	addi	a2,a2,678 # 80029878 <.L__unnamed_15>
    8001e5da:	02100593          	li	a1,33
    8001e5de:	00002097          	auipc	ra,0x2
    8001e5e2:	6ec080e7          	jalr	1772(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e5e8 <.LBB3_74>:
            let buddy_addr = raw_addr + bs1;
    8001e5e8:	0000b517          	auipc	a0,0xb
    8001e5ec:	19850513          	addi	a0,a0,408 # 80029780 <str.2>

000000008001e5f0 <.LBB3_75>:
    8001e5f0:	0000b617          	auipc	a2,0xb
    8001e5f4:	2a060613          	addi	a2,a2,672 # 80029890 <.L__unnamed_16>
    8001e5f8:	45f1                	li	a1,28
    8001e5fa:	00002097          	auipc	ra,0x2
    8001e5fe:	6d0080e7          	jalr	1744(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e604 <.LBB3_76>:
            sizei -= 1;
    8001e604:	0000b517          	auipc	a0,0xb
    8001e608:	0cc50513          	addi	a0,a0,204 # 800296d0 <str.0>

000000008001e60c <.LBB3_77>:
    8001e60c:	0000b617          	auipc	a2,0xb
    8001e610:	29c60613          	addi	a2,a2,668 # 800298a8 <.L__unnamed_17>
    8001e614:	02100593          	li	a1,33
    8001e618:	00002097          	auipc	ra,0x2
    8001e61c:	6b2080e7          	jalr	1714(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE:

000000008001e622 <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE>:

    /// Deallocate the memory.
    /// SAFETY: The raw ptr passed-in should be the one handed out previously.
    pub fn dealloc(&mut self, ptr: *mut u8, layout: Layout) {
    8001e622:	db010113          	addi	sp,sp,-592
    8001e626:	24113423          	sd	ra,584(sp)
    8001e62a:	e632                	sd	a2,264(sp)
    8001e62c:	ea36                	sd	a3,272(sp)
    8001e62e:	ebaa                	sd	a0,464(sp)
    8001e630:	efae                	sd	a1,472(sp)
        // check ptr in range [self.base, self.actual_end)
        let mut raw_addr = ptr as usize;
    8001e632:	ee2e                	sd	a1,280(sp)
        #[cfg(debug_assertions)]
        if raw_addr < self.base || raw_addr >= self.actual_end {
    8001e634:	6110                	ld	a2,0(a0)
    8001e636:	e22a                	sd	a0,256(sp)
    8001e638:	00c5fb63          	bgeu	a1,a2,8001e64e <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE+0x2c>
    8001e63c:	a009                	j	8001e63e <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE+0x1c>
    8001e63e:	4505                	li	a0,1
    8001e640:	12a103a3          	sb	a0,295(sp)
    8001e644:	a819                	j	8001e65a <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE+0x38>
    8001e646:	4501                	li	a0,0
    8001e648:	12a103a3          	sb	a0,295(sp)
    8001e64c:	a039                	j	8001e65a <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE+0x38>
    8001e64e:	6572                	ld	a0,280(sp)
    8001e650:	6592                	ld	a1,256(sp)
    8001e652:	6590                	ld	a2,8(a1)
    8001e654:	fec575e3          	bgeu	a0,a2,8001e63e <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE+0x1c>
    8001e658:	b7fd                	j	8001e646 <_ZN9allocator11BuddySystem7dealloc17h0f3e8756654c03feE+0x24>
    8001e65a:	12714503          	lbu	a0,295(sp)
    8001e65e:	8905                	andi	a0,a0,1
    8001e660:	4581                	li	a1,0
    8001e662:	02b50263          	beq	a0,a1,8001e686 <.LBB4_68+0x16>
    8001e666:	a009                	j	8001e668 <.LBB4_67>

000000008001e668 <.LBB4_67>:
            panic!("allocator: dealloc ptr out of range");
    8001e668:	0000b517          	auipc	a0,0xb
    8001e66c:	25850513          	addi	a0,a0,600 # 800298c0 <.L__unnamed_18>

000000008001e670 <.LBB4_68>:
    8001e670:	0000b617          	auipc	a2,0xb
    8001e674:	27860613          	addi	a2,a2,632 # 800298e8 <.L__unnamed_19>
    8001e678:	02300593          	li	a1,35
    8001e67c:	00002097          	auipc	ra,0x2
    8001e680:	64e080e7          	jalr	1614(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001e684:	0000                	unimp
        }

        // find the size of block pointed by ptr
        // and check with the layout
        let mut sizei = self.nsizes;
    8001e686:	6512                	ld	a0,256(sp)
    8001e688:	690c                	ld	a1,16(a0)
    8001e68a:	f62e                	sd	a1,296(sp)
        for i in 0..self.max_size() {
    8001e68c:	00001097          	auipc	ra,0x1
    8001e690:	a9c080e7          	jalr	-1380(ra) # 8001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>
    8001e694:	fdaa                	sd	a0,248(sp)
    8001e696:	a009                	j	8001e698 <.LBB4_68+0x28>
    8001e698:	4501                	li	a0,0
    8001e69a:	fa2a                	sd	a0,304(sp)
    8001e69c:	75ee                	ld	a1,248(sp)
    8001e69e:	fe2e                	sd	a1,312(sp)
    8001e6a0:	00001097          	auipc	ra,0x1
    8001e6a4:	40a080e7          	jalr	1034(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001e6a8:	f9aa                	sd	a0,240(sp)
    8001e6aa:	f5ae                	sd	a1,232(sp)
    8001e6ac:	a009                	j	8001e6ae <.LBB4_68+0x3e>
    8001e6ae:	754e                	ld	a0,240(sp)
    8001e6b0:	e2aa                	sd	a0,320(sp)
    8001e6b2:	75ae                	ld	a1,232(sp)
    8001e6b4:	e6ae                	sd	a1,328(sp)
    8001e6b6:	a009                	j	8001e6b8 <.LBB4_68+0x48>
    8001e6b8:	0288                	addi	a0,sp,320
    8001e6ba:	00001097          	auipc	ra,0x1
    8001e6be:	382080e7          	jalr	898(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001e6c2:	eaaa                	sd	a0,336(sp)
    8001e6c4:	eeae                	sd	a1,344(sp)
    8001e6c6:	a009                	j	8001e6c8 <.LBB4_68+0x58>
    8001e6c8:	6556                	ld	a0,336(sp)
    8001e6ca:	4581                	li	a1,0
    8001e6cc:	00b50463          	beq	a0,a1,8001e6d4 <.LBB4_68+0x64>
    8001e6d0:	a009                	j	8001e6d2 <.LBB4_68+0x62>
    8001e6d2:	a019                	j	8001e6d8 <.LBB4_68+0x68>
//! Thread-unsafe, panic-free buddy system allocator.
    8001e6d4:	a895                	j	8001e748 <.LBB4_68+0xd8>
        for i in 0..self.max_size() {
    8001e6d6:	0000                	unimp
    8001e6d8:	6576                	ld	a0,344(sp)
    8001e6da:	f3aa                	sd	a0,480(sp)
    8001e6dc:	f7aa                	sd	a0,488(sp)
    8001e6de:	fbaa                	sd	a0,496(sp)
            let bi = self.blk_index(i+1, raw_addr);
    8001e6e0:	00150593          	addi	a1,a0,1
    8001e6e4:	f1aa                	sd	a0,224(sp)
    8001e6e6:	edae                	sd	a1,216(sp)
    8001e6e8:	2ca5e863          	bltu	a1,a0,8001e9b8 <.LBB4_76>
    8001e6ec:	a009                	j	8001e6ee <.LBB4_68+0x7e>
    8001e6ee:	6672                	ld	a2,280(sp)
    8001e6f0:	6512                	ld	a0,256(sp)
    8001e6f2:	65ee                	ld	a1,216(sp)
    8001e6f4:	00001097          	auipc	ra,0x1
    8001e6f8:	aea080e7          	jalr	-1302(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001e6fc:	85aa                	mv	a1,a0
    8001e6fe:	ffaa                	sd	a0,504(sp)
    8001e700:	e9ae                	sd	a1,208(sp)
    8001e702:	a009                	j	8001e704 <.LBB4_68+0x94>
            let info = unsafe { self.get_info_mut(i+1) };
    8001e704:	750e                	ld	a0,224(sp)
    8001e706:	00150593          	addi	a1,a0,1
    8001e70a:	e5ae                	sd	a1,200(sp)
    8001e70c:	2ca5e463          	bltu	a1,a0,8001e9d4 <.LBB4_78>
    8001e710:	a009                	j	8001e712 <.LBB4_68+0xa2>
    8001e712:	6512                	ld	a0,256(sp)
    8001e714:	65ae                	ld	a1,200(sp)
    8001e716:	00001097          	auipc	ra,0x1
    8001e71a:	9b6080e7          	jalr	-1610(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e71e:	e1aa                	sd	a0,192(sp)
    8001e720:	a009                	j	8001e722 <.LBB4_68+0xb2>
    8001e722:	650e                	ld	a0,192(sp)
    8001e724:	20a13023          	sd	a0,512(sp)
            if info.is_split_set(bi) {
    8001e728:	65ce                	ld	a1,208(sp)
    8001e72a:	00001097          	auipc	ra,0x1
    8001e72e:	f72080e7          	jalr	-142(ra) # 8001f69c <_ZN9allocator9BuddyInfo12is_split_set17hc01fa2399d2c9ea8E>
    8001e732:	fd2a                	sd	a0,184(sp)
    8001e734:	a009                	j	8001e736 <.LBB4_68+0xc6>
    8001e736:	4501                	li	a0,0
    8001e738:	75ea                	ld	a1,184(sp)
    8001e73a:	00a58663          	beq	a1,a0,8001e746 <.LBB4_68+0xd6>
    8001e73e:	a009                	j	8001e740 <.LBB4_68+0xd0>
                sizei = i;
    8001e740:	750e                	ld	a0,224(sp)
    8001e742:	f62a                	sd	a0,296(sp)
//! Thread-unsafe, panic-free buddy system allocator.
    8001e744:	a011                	j	8001e748 <.LBB4_68+0xd8>
        for i in 0..self.max_size() {
    8001e746:	bf8d                	j	8001e6b8 <.LBB4_68+0x48>
                break;
            }
        }
        #[cfg(debug_assertions)]
        if sizei == self.nsizes {
    8001e748:	7532                	ld	a0,296(sp)
    8001e74a:	6592                	ld	a1,256(sp)
    8001e74c:	6990                	ld	a2,16(a1)
    8001e74e:	02c51263          	bne	a0,a2,8001e772 <.LBB4_70+0x16>
    8001e752:	a009                	j	8001e754 <.LBB4_69>

000000008001e754 <.LBB4_69>:
            panic!("allocator: dealloc cannot recycle ptr");
    8001e754:	0000b517          	auipc	a0,0xb
    8001e758:	1dc50513          	addi	a0,a0,476 # 80029930 <.L__unnamed_20>

000000008001e75c <.LBB4_70>:
    8001e75c:	0000b617          	auipc	a2,0xb
    8001e760:	1fc60613          	addi	a2,a2,508 # 80029958 <.L__unnamed_21>
    8001e764:	02500593          	li	a1,37
    8001e768:	00002097          	auipc	ra,0x2
    8001e76c:	562080e7          	jalr	1378(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001e770:	0000                	unimp
    8001e772:	0228                	addi	a0,sp,264
        }

        // check layout
        #[cfg(debug_assertions)]
        if layout.size() > self.blk_size(sizei) {
    8001e774:	00002097          	auipc	ra,0x2
    8001e778:	c92080e7          	jalr	-878(ra) # 80020406 <_ZN4core5alloc6layout6Layout4size17hc779d721a3cde4a5E>
    8001e77c:	f92a                	sd	a0,176(sp)
    8001e77e:	a009                	j	8001e780 <.LBB4_70+0x24>
    8001e780:	75b2                	ld	a1,296(sp)
    8001e782:	6512                	ld	a0,256(sp)
    8001e784:	00001097          	auipc	ra,0x1
    8001e788:	c7c080e7          	jalr	-900(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001e78c:	f52a                	sd	a0,168(sp)
    8001e78e:	a009                	j	8001e790 <.LBB4_70+0x34>
    8001e790:	752a                	ld	a0,168(sp)
    8001e792:	75ca                	ld	a1,176(sp)
    8001e794:	00b57b63          	bgeu	a0,a1,8001e7aa <.LBB4_70+0x4e>
    8001e798:	a009                	j	8001e79a <.LBB4_70+0x3e>
            panic!("allocator: layout {:?} > blk size {}", layout, self.blk_size(sizei));
    8001e79a:	75b2                	ld	a1,296(sp)
    8001e79c:	6512                	ld	a0,256(sp)
    8001e79e:	00001097          	auipc	ra,0x1
    8001e7a2:	c62080e7          	jalr	-926(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001e7a6:	e3aa                	sd	a0,448(sp)
    8001e7a8:	a011                	j	8001e7ac <.LBB4_70+0x50>
        }

        // free and coalesce
        while sizei < self.max_size() {
    8001e7aa:	a049                	j	8001e82c <.LBB4_74+0x14>
    8001e7ac:	0228                	addi	a0,sp,264
            panic!("allocator: layout {:?} > blk size {}", layout, self.blk_size(sizei));
    8001e7ae:	fb2a                	sd	a0,432(sp)
    8001e7b0:	038c                	addi	a1,sp,448
    8001e7b2:	ff2e                	sd	a1,440(sp)
    8001e7b4:	20a13423          	sd	a0,520(sp)
    8001e7b8:	20b13823          	sd	a1,528(sp)

000000008001e7bc <.LBB4_71>:
    8001e7bc:	00005617          	auipc	a2,0x5
    8001e7c0:	f5a60613          	addi	a2,a2,-166 # 80023716 <_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17h0283edf57016c8a1E>
    8001e7c4:	f12e                	sd	a1,160(sp)
    8001e7c6:	85b2                	mv	a1,a2
    8001e7c8:	00001097          	auipc	ra,0x1
    8001e7cc:	230080e7          	jalr	560(ra) # 8001f9f8 <_ZN4core3fmt10ArgumentV13new17h75a66497ffff3272E>
    8001e7d0:	ed2a                	sd	a0,152(sp)
    8001e7d2:	e92e                	sd	a1,144(sp)
    8001e7d4:	a009                	j	8001e7d6 <.LBB4_72>

000000008001e7d6 <.LBB4_72>:
    8001e7d6:	00005597          	auipc	a1,0x5
    8001e7da:	85c58593          	addi	a1,a1,-1956 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    8001e7de:	750a                	ld	a0,160(sp)
    8001e7e0:	00001097          	auipc	ra,0x1
    8001e7e4:	23a080e7          	jalr	570(ra) # 8001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>
    8001e7e8:	e52a                	sd	a0,136(sp)
    8001e7ea:	e12e                	sd	a1,128(sp)
    8001e7ec:	a009                	j	8001e7ee <.LBB4_72+0x18>
    8001e7ee:	656a                	ld	a0,152(sp)
    8001e7f0:	eb2a                	sd	a0,400(sp)
    8001e7f2:	65ca                	ld	a1,144(sp)
    8001e7f4:	ef2e                	sd	a1,408(sp)
    8001e7f6:	662a                	ld	a2,136(sp)
    8001e7f8:	f332                	sd	a2,416(sp)
    8001e7fa:	668a                	ld	a3,128(sp)
    8001e7fc:	f736                	sd	a3,424(sp)

000000008001e7fe <.LBB4_73>:
    8001e7fe:	0000b597          	auipc	a1,0xb
    8001e802:	19258593          	addi	a1,a1,402 # 80029990 <.L__unnamed_22>
    8001e806:	1288                	addi	a0,sp,352
    8001e808:	0b14                	addi	a3,sp,400
    8001e80a:	4709                	li	a4,2
    8001e80c:	863a                	mv	a2,a4
    8001e80e:	00002097          	auipc	ra,0x2
    8001e812:	8ac080e7          	jalr	-1876(ra) # 800200ba <_ZN4core3fmt9Arguments6new_v117h98223a5c059daa0eE>
    8001e816:	a009                	j	8001e818 <.LBB4_74>

000000008001e818 <.LBB4_74>:
    8001e818:	0000b597          	auipc	a1,0xb
    8001e81c:	19858593          	addi	a1,a1,408 # 800299b0 <.L__unnamed_23>
    8001e820:	1288                	addi	a0,sp,352
    8001e822:	00002097          	auipc	ra,0x2
    8001e826:	514080e7          	jalr	1300(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8001e82a:	0000                	unimp
        while sizei < self.max_size() {
    8001e82c:	7532                	ld	a0,296(sp)
    8001e82e:	6592                	ld	a1,256(sp)
    8001e830:	fcaa                	sd	a0,120(sp)
    8001e832:	852e                	mv	a0,a1
    8001e834:	00001097          	auipc	ra,0x1
    8001e838:	8f4080e7          	jalr	-1804(ra) # 8001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>
    8001e83c:	f8aa                	sd	a0,112(sp)
    8001e83e:	a009                	j	8001e840 <.LBB4_74+0x28>
    8001e840:	7566                	ld	a0,120(sp)
    8001e842:	75c6                	ld	a1,112(sp)
    8001e844:	00b56463          	bltu	a0,a1,8001e84c <.LBB4_74+0x34>
    8001e848:	a009                	j	8001e84a <.LBB4_74+0x32>
    8001e84a:	a289                	j	8001e98c <.LBB4_75+0x8a>
            let bi = self.blk_index(sizei, raw_addr);
    8001e84c:	75b2                	ld	a1,296(sp)
    8001e84e:	6672                	ld	a2,280(sp)
    8001e850:	6512                	ld	a0,256(sp)
    8001e852:	00001097          	auipc	ra,0x1
    8001e856:	98c080e7          	jalr	-1652(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001e85a:	85aa                	mv	a1,a0
    8001e85c:	20a13c23          	sd	a0,536(sp)
    8001e860:	f4ae                	sd	a1,104(sp)
    8001e862:	a009                	j	8001e864 <.LBB4_74+0x4c>
            let buddyi = if bi % 2 == 0 { bi+1 } else { bi-1 };
    8001e864:	7526                	ld	a0,104(sp)
    8001e866:	00157593          	andi	a1,a0,1
    8001e86a:	e989                	bnez	a1,8001e87c <.LBB4_74+0x64>
    8001e86c:	a009                	j	8001e86e <.LBB4_74+0x56>
    8001e86e:	7526                	ld	a0,104(sp)
    8001e870:	00150593          	addi	a1,a0,1
    8001e874:	f0ae                	sd	a1,96(sp)
    8001e876:	18a5ec63          	bltu	a1,a0,8001ea0e <.LBB4_82>
    8001e87a:	a801                	j	8001e88a <.LBB4_74+0x72>
    8001e87c:	7526                	ld	a0,104(sp)
    8001e87e:	fff50593          	addi	a1,a0,-1
    8001e882:	ecae                	sd	a1,88(sp)
    8001e884:	16b56663          	bltu	a0,a1,8001e9f0 <.LBB4_80>
    8001e888:	a021                	j	8001e890 <.LBB4_74+0x78>
    8001e88a:	7506                	ld	a0,96(sp)
    8001e88c:	e7aa                	sd	a0,456(sp)
    8001e88e:	a021                	j	8001e896 <.LBB4_74+0x7e>
    8001e890:	6566                	ld	a0,88(sp)
    8001e892:	e7aa                	sd	a0,456(sp)
    8001e894:	a009                	j	8001e896 <.LBB4_74+0x7e>
            let info = unsafe { self.get_info_mut(sizei) };
    8001e896:	75b2                	ld	a1,296(sp)
    8001e898:	6512                	ld	a0,256(sp)
    8001e89a:	00001097          	auipc	ra,0x1
    8001e89e:	832080e7          	jalr	-1998(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e8a2:	e8aa                	sd	a0,80(sp)
    8001e8a4:	a009                	j	8001e8a6 <.LBB4_74+0x8e>
    8001e8a6:	6546                	ld	a0,80(sp)
    8001e8a8:	22a13023          	sd	a0,544(sp)
    8001e8ac:	4581                	li	a1,0
            info.alloc_set(bi, false);
    8001e8ae:	7626                	ld	a2,104(sp)
    8001e8b0:	e4ae                	sd	a1,72(sp)
    8001e8b2:	85b2                	mv	a1,a2
    8001e8b4:	6626                	ld	a2,72(sp)
    8001e8b6:	00001097          	auipc	ra,0x1
    8001e8ba:	d2c080e7          	jalr	-724(ra) # 8001f5e2 <_ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E>
    8001e8be:	a009                	j	8001e8c0 <.LBB4_74+0xa8>
            
            // test if buddy is free
            if info.is_alloc_set(buddyi) {
    8001e8c0:	65be                	ld	a1,456(sp)
    8001e8c2:	6546                	ld	a0,80(sp)
    8001e8c4:	00001097          	auipc	ra,0x1
    8001e8c8:	d9e080e7          	jalr	-610(ra) # 8001f662 <_ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E>
    8001e8cc:	e0aa                	sd	a0,64(sp)
    8001e8ce:	a009                	j	8001e8d0 <.LBB4_74+0xb8>
    8001e8d0:	4501                	li	a0,0
    8001e8d2:	6586                	ld	a1,64(sp)
    8001e8d4:	00a58463          	beq	a1,a0,8001e8dc <.LBB4_74+0xc4>
    8001e8d8:	a009                	j	8001e8da <.LBB4_74+0xc2>
//! Thread-unsafe, panic-free buddy system allocator.
    8001e8da:	a84d                	j	8001e98c <.LBB4_75+0x8a>
                break;
            }
            let buddy_addr = self.blk_addr(sizei, buddyi);
    8001e8dc:	75b2                	ld	a1,296(sp)
    8001e8de:	663e                	ld	a2,456(sp)
    8001e8e0:	6512                	ld	a0,256(sp)
    8001e8e2:	00001097          	auipc	ra,0x1
    8001e8e6:	a9a080e7          	jalr	-1382(ra) # 8001f37c <_ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E>
    8001e8ea:	85aa                	mv	a1,a0
    8001e8ec:	22a13423          	sd	a0,552(sp)
    8001e8f0:	fc2e                	sd	a1,56(sp)
    8001e8f2:	a009                	j	8001e8f4 <.LBB4_74+0xdc>
            unsafe { (buddy_addr as *mut List).as_mut().unwrap().remove(); }
    8001e8f4:	7562                	ld	a0,56(sp)
    8001e8f6:	00001097          	auipc	ra,0x1
    8001e8fa:	7e6080e7          	jalr	2022(ra) # 800200dc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE>
    8001e8fe:	f82a                	sd	a0,48(sp)
    8001e900:	a009                	j	8001e902 <.LBB4_75>

000000008001e902 <.LBB4_75>:
    8001e902:	0000b597          	auipc	a1,0xb
    8001e906:	0f658593          	addi	a1,a1,246 # 800299f8 <.L__unnamed_24>
    8001e90a:	7542                	ld	a0,48(sp)
    8001e90c:	00002097          	auipc	ra,0x2
    8001e910:	99e080e7          	jalr	-1634(ra) # 800202aa <_ZN4core6option15Option$LT$T$GT$6unwrap17h045d6fa1fc511887E>
    8001e914:	f42a                	sd	a0,40(sp)
    8001e916:	a009                	j	8001e918 <.LBB4_75+0x16>
    8001e918:	7522                	ld	a0,40(sp)
    8001e91a:	00002097          	auipc	ra,0x2
    8001e91e:	f90080e7          	jalr	-112(ra) # 800208aa <_ZN9allocator4list4List6remove17h5ea282d82a225b7bE>
    8001e922:	a009                	j	8001e924 <.LBB4_75+0x22>
            if buddyi % 2 == 0 {
    8001e924:	1c814503          	lbu	a0,456(sp)
    8001e928:	8905                	andi	a0,a0,1
    8001e92a:	e509                	bnez	a0,8001e934 <.LBB4_75+0x32>
    8001e92c:	a009                	j	8001e92e <.LBB4_75+0x2c>
                raw_addr = buddy_addr;
    8001e92e:	7562                	ld	a0,56(sp)
    8001e930:	ee2a                	sd	a0,280(sp)
            if buddyi % 2 == 0 {
    8001e932:	a011                	j	8001e936 <.LBB4_75+0x34>
    8001e934:	a009                	j	8001e936 <.LBB4_75+0x34>
            }

            // coalesce and continue
            sizei += 1;
    8001e936:	7532                	ld	a0,296(sp)
    8001e938:	00150593          	addi	a1,a0,1
    8001e93c:	f02e                	sd	a1,32(sp)
    8001e93e:	0ea5e663          	bltu	a1,a0,8001ea2a <.LBB4_84>
    8001e942:	a009                	j	8001e944 <.LBB4_75+0x42>
    8001e944:	7502                	ld	a0,32(sp)
    8001e946:	f62a                	sd	a0,296(sp)
            let spliti = self.blk_index(sizei, raw_addr);
    8001e948:	6672                	ld	a2,280(sp)
    8001e94a:	6512                	ld	a0,256(sp)
    8001e94c:	7582                	ld	a1,32(sp)
    8001e94e:	00001097          	auipc	ra,0x1
    8001e952:	890080e7          	jalr	-1904(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001e956:	85aa                	mv	a1,a0
    8001e958:	22a13823          	sd	a0,560(sp)
    8001e95c:	ec2e                	sd	a1,24(sp)
    8001e95e:	a009                	j	8001e960 <.LBB4_75+0x5e>
            let info = unsafe { self.get_info_mut(sizei) };
    8001e960:	75b2                	ld	a1,296(sp)
    8001e962:	6512                	ld	a0,256(sp)
    8001e964:	00000097          	auipc	ra,0x0
    8001e968:	768080e7          	jalr	1896(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e96c:	e82a                	sd	a0,16(sp)
    8001e96e:	a009                	j	8001e970 <.LBB4_75+0x6e>
    8001e970:	6542                	ld	a0,16(sp)
    8001e972:	22a13c23          	sd	a0,568(sp)
    8001e976:	4581                	li	a1,0
            info.split_set(spliti, false);
    8001e978:	6662                	ld	a2,24(sp)
    8001e97a:	e42e                	sd	a1,8(sp)
    8001e97c:	85b2                	mv	a1,a2
    8001e97e:	6622                	ld	a2,8(sp)
    8001e980:	00001097          	auipc	ra,0x1
    8001e984:	ca2080e7          	jalr	-862(ra) # 8001f622 <_ZN9allocator9BuddyInfo9split_set17h162917f508718dbfE>
    8001e988:	a009                	j	8001e98a <.LBB4_75+0x88>
        while sizei < self.max_size() {
    8001e98a:	b54d                	j	8001e82c <.LBB4_74+0x14>
        }

        let info = unsafe { self.get_info_mut(sizei) };
    8001e98c:	75b2                	ld	a1,296(sp)
    8001e98e:	6512                	ld	a0,256(sp)
    8001e990:	00000097          	auipc	ra,0x0
    8001e994:	73c080e7          	jalr	1852(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001e998:	e02a                	sd	a0,0(sp)
    8001e99a:	a009                	j	8001e99c <.LBB4_75+0x9a>
    8001e99c:	6502                	ld	a0,0(sp)
    8001e99e:	24a13023          	sd	a0,576(sp)
        unsafe { info.free.push(raw_addr); }
    8001e9a2:	65f2                	ld	a1,280(sp)
    8001e9a4:	00002097          	auipc	ra,0x2
    8001e9a8:	e3a080e7          	jalr	-454(ra) # 800207de <_ZN9allocator4list4List4push17he3c20b895e5c9a81E>
    8001e9ac:	a009                	j	8001e9ae <.LBB4_75+0xac>
    }
    8001e9ae:	24813083          	ld	ra,584(sp)
    8001e9b2:	25010113          	addi	sp,sp,592
    8001e9b6:	8082                	ret

000000008001e9b8 <.LBB4_76>:
            let bi = self.blk_index(i+1, raw_addr);
    8001e9b8:	0000b517          	auipc	a0,0xb
    8001e9bc:	dc850513          	addi	a0,a0,-568 # 80029780 <str.2>

000000008001e9c0 <.LBB4_77>:
    8001e9c0:	0000b617          	auipc	a2,0xb
    8001e9c4:	f4060613          	addi	a2,a2,-192 # 80029900 <.L__unnamed_25>
    8001e9c8:	45f1                	li	a1,28
    8001e9ca:	00002097          	auipc	ra,0x2
    8001e9ce:	300080e7          	jalr	768(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e9d4 <.LBB4_78>:
            let info = unsafe { self.get_info_mut(i+1) };
    8001e9d4:	0000b517          	auipc	a0,0xb
    8001e9d8:	dac50513          	addi	a0,a0,-596 # 80029780 <str.2>

000000008001e9dc <.LBB4_79>:
    8001e9dc:	0000b617          	auipc	a2,0xb
    8001e9e0:	f3c60613          	addi	a2,a2,-196 # 80029918 <.L__unnamed_26>
    8001e9e4:	45f1                	li	a1,28
    8001e9e6:	00002097          	auipc	ra,0x2
    8001e9ea:	2e4080e7          	jalr	740(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001e9f0 <.LBB4_80>:
            let buddyi = if bi % 2 == 0 { bi+1 } else { bi-1 };
    8001e9f0:	0000b517          	auipc	a0,0xb
    8001e9f4:	ce050513          	addi	a0,a0,-800 # 800296d0 <str.0>

000000008001e9f8 <.LBB4_81>:
    8001e9f8:	0000b617          	auipc	a2,0xb
    8001e9fc:	fd060613          	addi	a2,a2,-48 # 800299c8 <.L__unnamed_27>
    8001ea00:	02100593          	li	a1,33
    8001ea04:	00002097          	auipc	ra,0x2
    8001ea08:	2c6080e7          	jalr	710(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001ea0e <.LBB4_82>:
    8001ea0e:	0000b517          	auipc	a0,0xb
    8001ea12:	d7250513          	addi	a0,a0,-654 # 80029780 <str.2>

000000008001ea16 <.LBB4_83>:
    8001ea16:	0000b617          	auipc	a2,0xb
    8001ea1a:	fca60613          	addi	a2,a2,-54 # 800299e0 <.L__unnamed_28>
    8001ea1e:	45f1                	li	a1,28
    8001ea20:	00002097          	auipc	ra,0x2
    8001ea24:	2aa080e7          	jalr	682(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001ea2a <.LBB4_84>:
            sizei += 1;
    8001ea2a:	0000b517          	auipc	a0,0xb
    8001ea2e:	d5650513          	addi	a0,a0,-682 # 80029780 <str.2>

000000008001ea32 <.LBB4_85>:
    8001ea32:	0000b617          	auipc	a2,0xb
    8001ea36:	fde60613          	addi	a2,a2,-34 # 80029a10 <.L__unnamed_29>
    8001ea3a:	45f1                	li	a1,28
    8001ea3c:	00002097          	auipc	ra,0x2
    8001ea40:	28e080e7          	jalr	654(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem9mark_meta17h1306dcd422db5790E:

000000008001ea46 <_ZN9allocator11BuddySystem9mark_meta17h1306dcd422db5790E>:

    /// Mark meta data of buddy system as used.
    /// [self.base, cur)
    fn mark_meta(&mut self, cur: usize) -> usize {
    8001ea46:	7139                	addi	sp,sp,-64
    8001ea48:	fc06                	sd	ra,56(sp)
    8001ea4a:	f02a                	sd	a0,32(sp)
    8001ea4c:	f42e                	sd	a1,40(sp)
        let meta = cur - self.base;
    8001ea4e:	6110                	ld	a2,0(a0)
    8001ea50:	40c58633          	sub	a2,a1,a2
    8001ea54:	ec2e                	sd	a1,24(sp)
    8001ea56:	e82a                	sd	a0,16(sp)
    8001ea58:	e432                	sd	a2,8(sp)
    8001ea5a:	02c5e263          	bltu	a1,a2,8001ea7e <.LBB5_4>
    8001ea5e:	a009                	j	8001ea60 <_ZN9allocator11BuddySystem9mark_meta17h1306dcd422db5790E+0x1a>
    8001ea60:	6522                	ld	a0,8(sp)
    8001ea62:	f82a                	sd	a0,48(sp)
        self.mark(self.base, cur);
    8001ea64:	65c2                	ld	a1,16(sp)
    8001ea66:	618c                	ld	a1,0(a1)
    8001ea68:	6542                	ld	a0,16(sp)
    8001ea6a:	6662                	ld	a2,24(sp)
    8001ea6c:	00000097          	auipc	ra,0x0
    8001ea70:	0fc080e7          	jalr	252(ra) # 8001eb68 <_ZN9allocator11BuddySystem4mark17hca499c0ab63b982fE>
    8001ea74:	a009                	j	8001ea76 <_ZN9allocator11BuddySystem9mark_meta17h1306dcd422db5790E+0x30>
        meta
    }
    8001ea76:	6522                	ld	a0,8(sp)
    8001ea78:	70e2                	ld	ra,56(sp)
    8001ea7a:	6121                	addi	sp,sp,64
    8001ea7c:	8082                	ret

000000008001ea7e <.LBB5_4>:
        let meta = cur - self.base;
    8001ea7e:	0000b517          	auipc	a0,0xb
    8001ea82:	c5250513          	addi	a0,a0,-942 # 800296d0 <str.0>

000000008001ea86 <.LBB5_5>:
    8001ea86:	0000b617          	auipc	a2,0xb
    8001ea8a:	fa260613          	addi	a2,a2,-94 # 80029a28 <.L__unnamed_30>
    8001ea8e:	02100593          	li	a1,33
    8001ea92:	00002097          	auipc	ra,0x2
    8001ea96:	238080e7          	jalr	568(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E:

000000008001ea9c <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E>:

    /// Mark unavailable data due to the requirement,
    /// that the size of buddy system should be a power of 2.
    fn mark_unavail(&mut self) -> usize {
    8001ea9c:	715d                	addi	sp,sp,-80
    8001ea9e:	e486                	sd	ra,72(sp)
    8001eaa0:	fc2a                	sd	a0,56(sp)
        let unavail = self.blk_size(self.max_size()) - (self.actual_end - self.base);
    8001eaa2:	f82a                	sd	a0,48(sp)
    8001eaa4:	00000097          	auipc	ra,0x0
    8001eaa8:	684080e7          	jalr	1668(ra) # 8001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>
    8001eaac:	f42a                	sd	a0,40(sp)
    8001eaae:	a009                	j	8001eab0 <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E+0x14>
    8001eab0:	7542                	ld	a0,48(sp)
    8001eab2:	75a2                	ld	a1,40(sp)
    8001eab4:	00001097          	auipc	ra,0x1
    8001eab8:	94c080e7          	jalr	-1716(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001eabc:	f02a                	sd	a0,32(sp)
    8001eabe:	a009                	j	8001eac0 <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E+0x24>
    8001eac0:	7542                	ld	a0,48(sp)
    8001eac2:	650c                	ld	a1,8(a0)
    8001eac4:	6110                	ld	a2,0(a0)
    8001eac6:	40c58633          	sub	a2,a1,a2
    8001eaca:	ec32                	sd	a2,24(sp)
    8001eacc:	04c5e263          	bltu	a1,a2,8001eb10 <.LBB6_10>
    8001ead0:	a009                	j	8001ead2 <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E+0x36>
    8001ead2:	7502                	ld	a0,32(sp)
    8001ead4:	65e2                	ld	a1,24(sp)
    8001ead6:	40b50633          	sub	a2,a0,a1
    8001eada:	e832                	sd	a2,16(sp)
    8001eadc:	04c56963          	bltu	a0,a2,8001eb2e <.LBB6_12>
    8001eae0:	a009                	j	8001eae2 <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E+0x46>
    8001eae2:	6542                	ld	a0,16(sp)
    8001eae4:	e0aa                	sd	a0,64(sp)
        self.mark(self.actual_end, self.actual_end + unavail);
    8001eae6:	75c2                	ld	a1,48(sp)
    8001eae8:	6590                	ld	a2,8(a1)
    8001eaea:	00a606b3          	add	a3,a2,a0
    8001eaee:	e432                	sd	a2,8(sp)
    8001eaf0:	e036                	sd	a3,0(sp)
    8001eaf2:	04c6ed63          	bltu	a3,a2,8001eb4c <.LBB6_14>
    8001eaf6:	a009                	j	8001eaf8 <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E+0x5c>
    8001eaf8:	7542                	ld	a0,48(sp)
    8001eafa:	65a2                	ld	a1,8(sp)
    8001eafc:	6602                	ld	a2,0(sp)
    8001eafe:	00000097          	auipc	ra,0x0
    8001eb02:	06a080e7          	jalr	106(ra) # 8001eb68 <_ZN9allocator11BuddySystem4mark17hca499c0ab63b982fE>
    8001eb06:	a009                	j	8001eb08 <_ZN9allocator11BuddySystem12mark_unavail17h5879a59211ae6b57E+0x6c>
        unavail
    }
    8001eb08:	6542                	ld	a0,16(sp)
    8001eb0a:	60a6                	ld	ra,72(sp)
    8001eb0c:	6161                	addi	sp,sp,80
    8001eb0e:	8082                	ret

000000008001eb10 <.LBB6_10>:
        let unavail = self.blk_size(self.max_size()) - (self.actual_end - self.base);
    8001eb10:	0000b517          	auipc	a0,0xb
    8001eb14:	bc050513          	addi	a0,a0,-1088 # 800296d0 <str.0>

000000008001eb18 <.LBB6_11>:
    8001eb18:	0000b617          	auipc	a2,0xb
    8001eb1c:	f2860613          	addi	a2,a2,-216 # 80029a40 <.L__unnamed_31>
    8001eb20:	02100593          	li	a1,33
    8001eb24:	00002097          	auipc	ra,0x2
    8001eb28:	1a6080e7          	jalr	422(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001eb2e <.LBB6_12>:
    8001eb2e:	0000b517          	auipc	a0,0xb
    8001eb32:	ba250513          	addi	a0,a0,-1118 # 800296d0 <str.0>

000000008001eb36 <.LBB6_13>:
    8001eb36:	0000b617          	auipc	a2,0xb
    8001eb3a:	f2260613          	addi	a2,a2,-222 # 80029a58 <.L__unnamed_32>
    8001eb3e:	02100593          	li	a1,33
    8001eb42:	00002097          	auipc	ra,0x2
    8001eb46:	188080e7          	jalr	392(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001eb4c <.LBB6_14>:
        self.mark(self.actual_end, self.actual_end + unavail);
    8001eb4c:	0000b517          	auipc	a0,0xb
    8001eb50:	c3450513          	addi	a0,a0,-972 # 80029780 <str.2>

000000008001eb54 <.LBB6_15>:
    8001eb54:	0000b617          	auipc	a2,0xb
    8001eb58:	f1c60613          	addi	a2,a2,-228 # 80029a70 <.L__unnamed_33>
    8001eb5c:	45f1                	li	a1,28
    8001eb5e:	00002097          	auipc	ra,0x2
    8001eb62:	16c080e7          	jalr	364(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem4mark17hca499c0ab63b982fE:

000000008001eb68 <_ZN9allocator11BuddySystem4mark17hca499c0ab63b982fE>:

    /// Mark memory from [left, right) as allocated.
    /// Useful for meta and unavailable data.
    fn mark(&mut self, left: usize, right: usize) {
    8001eb68:	d6010113          	addi	sp,sp,-672
    8001eb6c:	28113c23          	sd	ra,664(sp)
    8001eb70:	20a13c23          	sd	a0,536(sp)
    8001eb74:	22b13023          	sd	a1,544(sp)
    8001eb78:	22c13423          	sd	a2,552(sp)
        debug_assert_eq!(left % self.leaf_size, 0);
    8001eb7c:	6d14                	ld	a3,24(a0)
    8001eb7e:	4701                	li	a4,0
    8001eb80:	e5b2                	sd	a2,200(sp)
    8001eb82:	e1ae                	sd	a1,192(sp)
    8001eb84:	fd2a                	sd	a0,184(sp)
    8001eb86:	f936                	sd	a3,176(sp)
    8001eb88:	26e68e63          	beq	a3,a4,8001ee04 <.LBB7_45>
    8001eb8c:	a009                	j	8001eb8e <_ZN9allocator11BuddySystem4mark17hca499c0ab63b982fE+0x26>
    8001eb8e:	650e                	ld	a0,192(sp)
    8001eb90:	75ca                	ld	a1,176(sp)
    8001eb92:	02b57633          	remu	a2,a0,a1
    8001eb96:	f1b2                	sd	a2,224(sp)
    8001eb98:	1194                	addi	a3,sp,224
    8001eb9a:	e9b6                	sd	a3,208(sp)

000000008001eb9c <.LBB7_35>:
    8001eb9c:	00005717          	auipc	a4,0x5
    8001eba0:	20470713          	addi	a4,a4,516 # 80023da0 <.L__unnamed_5+0xa0>
    8001eba4:	edba                	sd	a4,216(sp)
    8001eba6:	22d13823          	sd	a3,560(sp)
    8001ebaa:	22e13c23          	sd	a4,568(sp)
    8001ebae:	4781                	li	a5,0
    8001ebb0:	f536                	sd	a3,168(sp)
    8001ebb2:	f13a                	sd	a4,160(sp)
    8001ebb4:	02f60c63          	beq	a2,a5,8001ebec <.LBB7_36+0x1a>
    8001ebb8:	a009                	j	8001ebba <.LBB7_35+0x1e>
    8001ebba:	752a                	ld	a0,168(sp)
    8001ebbc:	e6aa                	sd	a0,328(sp)
    8001ebbe:	758a                	ld	a1,160(sp)
    8001ebc0:	eaae                	sd	a1,336(sp)
    8001ebc2:	02b0                	addi	a2,sp,328
    8001ebc4:	fe32                	sd	a2,312(sp)
    8001ebc6:	0a94                	addi	a3,sp,336
    8001ebc8:	e2b6                	sd	a3,320(sp)
    8001ebca:	24c13023          	sd	a2,576(sp)
    8001ebce:	24d13423          	sd	a3,584(sp)

000000008001ebd2 <.LBB7_36>:
    8001ebd2:	00001597          	auipc	a1,0x1
    8001ebd6:	de658593          	addi	a1,a1,-538 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8001ebda:	8532                	mv	a0,a2
    8001ebdc:	ed36                	sd	a3,152(sp)
    8001ebde:	00001097          	auipc	ra,0x1
    8001ebe2:	df8080e7          	jalr	-520(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8001ebe6:	e92a                	sd	a0,144(sp)
    8001ebe8:	e52e                	sd	a1,136(sp)
    8001ebea:	a801                	j	8001ebfa <.LBB7_37>
        debug_assert_eq!(right % self.leaf_size, 0);
    8001ebec:	756a                	ld	a0,184(sp)
    8001ebee:	6d0c                	ld	a1,24(a0)
    8001ebf0:	4601                	li	a2,0
    8001ebf2:	e12e                	sd	a1,128(sp)
    8001ebf4:	22c58763          	beq	a1,a2,8001ee22 <.LBB7_47>
    8001ebf8:	a8a1                	j	8001ec50 <.LBB7_39+0x14>

000000008001ebfa <.LBB7_37>:
        debug_assert_eq!(left % self.leaf_size, 0);
    8001ebfa:	00001597          	auipc	a1,0x1
    8001ebfe:	dbe58593          	addi	a1,a1,-578 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8001ec02:	656a                	ld	a0,152(sp)
    8001ec04:	00001097          	auipc	ra,0x1
    8001ec08:	dd2080e7          	jalr	-558(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8001ec0c:	fcaa                	sd	a0,120(sp)
    8001ec0e:	f8ae                	sd	a1,112(sp)
    8001ec10:	a009                	j	8001ec12 <.LBB7_37+0x18>
    8001ec12:	654a                	ld	a0,144(sp)
    8001ec14:	ee2a                	sd	a0,280(sp)
    8001ec16:	65aa                	ld	a1,136(sp)
    8001ec18:	f22e                	sd	a1,288(sp)
    8001ec1a:	7666                	ld	a2,120(sp)
    8001ec1c:	f632                	sd	a2,296(sp)
    8001ec1e:	76c6                	ld	a3,112(sp)
    8001ec20:	fa36                	sd	a3,304(sp)

000000008001ec22 <.LBB7_38>:
    8001ec22:	0000b597          	auipc	a1,0xb
    8001ec26:	ef658593          	addi	a1,a1,-266 # 80029b18 <.L__unnamed_35>
    8001ec2a:	11a8                	addi	a0,sp,232
    8001ec2c:	460d                	li	a2,3
    8001ec2e:	0a34                	addi	a3,sp,280
    8001ec30:	4709                	li	a4,2
    8001ec32:	00001097          	auipc	ra,0x1
    8001ec36:	488080e7          	jalr	1160(ra) # 800200ba <_ZN4core3fmt9Arguments6new_v117h98223a5c059daa0eE>
    8001ec3a:	a009                	j	8001ec3c <.LBB7_39>

000000008001ec3c <.LBB7_39>:
    8001ec3c:	0000b597          	auipc	a1,0xb
    8001ec40:	f0c58593          	addi	a1,a1,-244 # 80029b48 <.L__unnamed_36>
    8001ec44:	11a8                	addi	a0,sp,232
    8001ec46:	00002097          	auipc	ra,0x2
    8001ec4a:	0f0080e7          	jalr	240(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8001ec4e:	0000                	unimp
        debug_assert_eq!(right % self.leaf_size, 0);
    8001ec50:	652e                	ld	a0,200(sp)
    8001ec52:	658a                	ld	a1,128(sp)
    8001ec54:	02b57633          	remu	a2,a0,a1
    8001ec58:	f6b2                	sd	a2,360(sp)
    8001ec5a:	12b4                	addi	a3,sp,360
    8001ec5c:	eeb6                	sd	a3,344(sp)

000000008001ec5e <.LBB7_40>:
    8001ec5e:	00005717          	auipc	a4,0x5
    8001ec62:	14270713          	addi	a4,a4,322 # 80023da0 <.L__unnamed_5+0xa0>
    8001ec66:	f2ba                	sd	a4,352(sp)
    8001ec68:	24d13823          	sd	a3,592(sp)
    8001ec6c:	24e13c23          	sd	a4,600(sp)
    8001ec70:	4781                	li	a5,0
    8001ec72:	f4b6                	sd	a3,104(sp)
    8001ec74:	f0ba                	sd	a4,96(sp)
    8001ec76:	02f60c63          	beq	a2,a5,8001ecae <.LBB7_41+0x1a>
    8001ec7a:	a009                	j	8001ec7c <.LBB7_40+0x1e>
    8001ec7c:	7526                	ld	a0,104(sp)
    8001ec7e:	ebaa                	sd	a0,464(sp)
    8001ec80:	7586                	ld	a1,96(sp)
    8001ec82:	efae                	sd	a1,472(sp)
    8001ec84:	0b90                	addi	a2,sp,464
    8001ec86:	e3b2                	sd	a2,448(sp)
    8001ec88:	0bb4                	addi	a3,sp,472
    8001ec8a:	e7b6                	sd	a3,456(sp)
    8001ec8c:	26c13023          	sd	a2,608(sp)
    8001ec90:	26d13423          	sd	a3,616(sp)

000000008001ec94 <.LBB7_41>:
    8001ec94:	00001597          	auipc	a1,0x1
    8001ec98:	d2458593          	addi	a1,a1,-732 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8001ec9c:	8532                	mv	a0,a2
    8001ec9e:	ecb6                	sd	a3,88(sp)
    8001eca0:	00001097          	auipc	ra,0x1
    8001eca4:	d36080e7          	jalr	-714(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8001eca8:	e8aa                	sd	a0,80(sp)
    8001ecaa:	e4ae                	sd	a1,72(sp)
    8001ecac:	a831                	j	8001ecc8 <.LBB7_42>

        for i in 0..self.nsizes {
    8001ecae:	756a                	ld	a0,184(sp)
    8001ecb0:	690c                	ld	a1,16(a0)
    8001ecb2:	4601                	li	a2,0
    8001ecb4:	f3b2                	sd	a2,480(sp)
    8001ecb6:	f7ae                	sd	a1,488(sp)
    8001ecb8:	8532                	mv	a0,a2
    8001ecba:	00001097          	auipc	ra,0x1
    8001ecbe:	df0080e7          	jalr	-528(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001ecc2:	e0aa                	sd	a0,64(sp)
    8001ecc4:	fc2e                	sd	a1,56(sp)
    8001ecc6:	a8a1                	j	8001ed1e <.LBB7_44+0x14>

000000008001ecc8 <.LBB7_42>:
        debug_assert_eq!(right % self.leaf_size, 0);
    8001ecc8:	00001597          	auipc	a1,0x1
    8001eccc:	cf058593          	addi	a1,a1,-784 # 8001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>
    8001ecd0:	6566                	ld	a0,88(sp)
    8001ecd2:	00001097          	auipc	ra,0x1
    8001ecd6:	d04080e7          	jalr	-764(ra) # 8001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>
    8001ecda:	f82a                	sd	a0,48(sp)
    8001ecdc:	f42e                	sd	a1,40(sp)
    8001ecde:	a009                	j	8001ece0 <.LBB7_42+0x18>
    8001ece0:	6546                	ld	a0,80(sp)
    8001ece2:	f32a                	sd	a0,416(sp)
    8001ece4:	65a6                	ld	a1,72(sp)
    8001ece6:	f72e                	sd	a1,424(sp)
    8001ece8:	7642                	ld	a2,48(sp)
    8001ecea:	fb32                	sd	a2,432(sp)
    8001ecec:	76a2                	ld	a3,40(sp)
    8001ecee:	ff36                	sd	a3,440(sp)

000000008001ecf0 <.LBB7_43>:
    8001ecf0:	0000b597          	auipc	a1,0xb
    8001ecf4:	e2858593          	addi	a1,a1,-472 # 80029b18 <.L__unnamed_35>
    8001ecf8:	1a88                	addi	a0,sp,368
    8001ecfa:	460d                	li	a2,3
    8001ecfc:	1314                	addi	a3,sp,416
    8001ecfe:	4709                	li	a4,2
    8001ed00:	00001097          	auipc	ra,0x1
    8001ed04:	3ba080e7          	jalr	954(ra) # 800200ba <_ZN4core3fmt9Arguments6new_v117h98223a5c059daa0eE>
    8001ed08:	a009                	j	8001ed0a <.LBB7_44>

000000008001ed0a <.LBB7_44>:
    8001ed0a:	0000b597          	auipc	a1,0xb
    8001ed0e:	e6e58593          	addi	a1,a1,-402 # 80029b78 <.L__unnamed_37>
    8001ed12:	1a88                	addi	a0,sp,368
    8001ed14:	00002097          	auipc	ra,0x2
    8001ed18:	022080e7          	jalr	34(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
    8001ed1c:	0000                	unimp
        for i in 0..self.nsizes {
    8001ed1e:	6506                	ld	a0,64(sp)
    8001ed20:	fbaa                	sd	a0,496(sp)
    8001ed22:	75e2                	ld	a1,56(sp)
    8001ed24:	ffae                	sd	a1,504(sp)
    8001ed26:	a009                	j	8001ed28 <.LBB7_44+0x1e>
    8001ed28:	1b88                	addi	a0,sp,496
    8001ed2a:	00001097          	auipc	ra,0x1
    8001ed2e:	d12080e7          	jalr	-750(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001ed32:	20a13023          	sd	a0,512(sp)
    8001ed36:	20b13423          	sd	a1,520(sp)
    8001ed3a:	a009                	j	8001ed3c <.LBB7_44+0x32>
    8001ed3c:	20013503          	ld	a0,512(sp)
    8001ed40:	4581                	li	a1,0
    8001ed42:	00b50463          	beq	a0,a1,8001ed4a <.LBB7_44+0x40>
    8001ed46:	a009                	j	8001ed48 <.LBB7_44+0x3e>
    8001ed48:	a039                	j	8001ed56 <.LBB7_44+0x4c>
                    info.split_set(bi, true);
                }
                bi += 1;
            }
        }
    }
    8001ed4a:	29813083          	ld	ra,664(sp)
    8001ed4e:	2a010113          	addi	sp,sp,672
    8001ed52:	8082                	ret
        for i in 0..self.nsizes {
    8001ed54:	0000                	unimp
    8001ed56:	20813503          	ld	a0,520(sp)
    8001ed5a:	26a13823          	sd	a0,624(sp)
    8001ed5e:	26a13c23          	sd	a0,632(sp)
    8001ed62:	28a13023          	sd	a0,640(sp)
            let mut bi = self.blk_index(i, left);
    8001ed66:	75ea                	ld	a1,184(sp)
    8001ed68:	f02a                	sd	a0,32(sp)
    8001ed6a:	852e                	mv	a0,a1
    8001ed6c:	7582                	ld	a1,32(sp)
    8001ed6e:	660e                	ld	a2,192(sp)
    8001ed70:	00000097          	auipc	ra,0x0
    8001ed74:	46e080e7          	jalr	1134(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001ed78:	20a13823          	sd	a0,528(sp)
    8001ed7c:	a009                	j	8001ed7e <.LBB7_44+0x74>
            let bj = self.blk_index_next(i, right);
    8001ed7e:	756a                	ld	a0,184(sp)
    8001ed80:	7582                	ld	a1,32(sp)
    8001ed82:	662e                	ld	a2,200(sp)
    8001ed84:	00000097          	auipc	ra,0x0
    8001ed88:	4d8080e7          	jalr	1240(ra) # 8001f25c <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E>
    8001ed8c:	85aa                	mv	a1,a0
    8001ed8e:	28a13423          	sd	a0,648(sp)
    8001ed92:	ec2e                	sd	a1,24(sp)
    8001ed94:	a009                	j	8001ed96 <.LBB7_44+0x8c>
            while bi < bj {
    8001ed96:	a009                	j	8001ed98 <.LBB7_44+0x8e>
    8001ed98:	21013503          	ld	a0,528(sp)
    8001ed9c:	65e2                	ld	a1,24(sp)
    8001ed9e:	00b56463          	bltu	a0,a1,8001eda6 <.LBB7_44+0x9c>
    8001eda2:	a009                	j	8001eda4 <.LBB7_44+0x9a>
        for i in 0..self.nsizes {
    8001eda4:	b751                	j	8001ed28 <.LBB7_44+0x1e>
                let info = unsafe { self.get_info_mut(i) };
    8001eda6:	756a                	ld	a0,184(sp)
    8001eda8:	7582                	ld	a1,32(sp)
    8001edaa:	00000097          	auipc	ra,0x0
    8001edae:	322080e7          	jalr	802(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001edb2:	e82a                	sd	a0,16(sp)
    8001edb4:	a009                	j	8001edb6 <.LBB7_44+0xac>
    8001edb6:	6542                	ld	a0,16(sp)
    8001edb8:	28a13823          	sd	a0,656(sp)
                info.alloc_set(bi, true);
    8001edbc:	21013583          	ld	a1,528(sp)
    8001edc0:	4605                	li	a2,1
    8001edc2:	00001097          	auipc	ra,0x1
    8001edc6:	820080e7          	jalr	-2016(ra) # 8001f5e2 <_ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E>
    8001edca:	a009                	j	8001edcc <.LBB7_44+0xc2>
    8001edcc:	4501                	li	a0,0
                if i > 0 {
    8001edce:	7582                	ld	a1,32(sp)
    8001edd0:	00a58c63          	beq	a1,a0,8001ede8 <.LBB7_44+0xde>
    8001edd4:	a009                	j	8001edd6 <.LBB7_44+0xcc>
                    info.split_set(bi, true);
    8001edd6:	21013583          	ld	a1,528(sp)
    8001edda:	4605                	li	a2,1
    8001eddc:	6542                	ld	a0,16(sp)
    8001edde:	00001097          	auipc	ra,0x1
    8001ede2:	844080e7          	jalr	-1980(ra) # 8001f622 <_ZN9allocator9BuddyInfo9split_set17h162917f508718dbfE>
    8001ede6:	a011                	j	8001edea <.LBB7_44+0xe0>
                if i > 0 {
    8001ede8:	a011                	j	8001edec <.LBB7_44+0xe2>
    8001edea:	a009                	j	8001edec <.LBB7_44+0xe2>
                bi += 1;
    8001edec:	21013503          	ld	a0,528(sp)
    8001edf0:	00150593          	addi	a1,a0,1
    8001edf4:	e42e                	sd	a1,8(sp)
    8001edf6:	04a5e563          	bltu	a1,a0,8001ee40 <.LBB7_49>
    8001edfa:	a009                	j	8001edfc <.LBB7_44+0xf2>
    8001edfc:	6522                	ld	a0,8(sp)
    8001edfe:	20a13823          	sd	a0,528(sp)
            while bi < bj {
    8001ee02:	bf59                	j	8001ed98 <.LBB7_44+0x8e>

000000008001ee04 <.LBB7_45>:
        debug_assert_eq!(left % self.leaf_size, 0);
    8001ee04:	0000b517          	auipc	a0,0xb
    8001ee08:	c9c50513          	addi	a0,a0,-868 # 80029aa0 <str.3>

000000008001ee0c <.LBB7_46>:
    8001ee0c:	0000b617          	auipc	a2,0xb
    8001ee10:	c7c60613          	addi	a2,a2,-900 # 80029a88 <.L__unnamed_38>
    8001ee14:	03900593          	li	a1,57
    8001ee18:	00002097          	auipc	ra,0x2
    8001ee1c:	eb2080e7          	jalr	-334(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001ee22 <.LBB7_47>:
        debug_assert_eq!(right % self.leaf_size, 0);
    8001ee22:	0000b517          	auipc	a0,0xb
    8001ee26:	c7e50513          	addi	a0,a0,-898 # 80029aa0 <str.3>

000000008001ee2a <.LBB7_48>:
    8001ee2a:	0000b617          	auipc	a2,0xb
    8001ee2e:	d3660613          	addi	a2,a2,-714 # 80029b60 <.L__unnamed_39>
    8001ee32:	03900593          	li	a1,57
    8001ee36:	00002097          	auipc	ra,0x2
    8001ee3a:	e94080e7          	jalr	-364(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001ee40 <.LBB7_49>:
                bi += 1;
    8001ee40:	0000b517          	auipc	a0,0xb
    8001ee44:	94050513          	addi	a0,a0,-1728 # 80029780 <str.2>

000000008001ee48 <.LBB7_50>:
    8001ee48:	0000b617          	auipc	a2,0xb
    8001ee4c:	d4860613          	addi	a2,a2,-696 # 80029b90 <.L__unnamed_40>
    8001ee50:	45f1                	li	a1,28
    8001ee52:	00002097          	auipc	ra,0x2
    8001ee56:	e78080e7          	jalr	-392(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E:

000000008001ee5c <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E>:

    /// Init free regions between [left, self.actual_end).
    /// Must be called after marking meta and unavail data.
    fn init_free(&mut self, left: usize) -> usize {
    8001ee5c:	7151                	addi	sp,sp,-240
    8001ee5e:	f586                	sd	ra,232(sp)
    8001ee60:	f52a                	sd	a0,168(sp)
    8001ee62:	f92e                	sd	a1,176(sp)
        let right = self.actual_end;
    8001ee64:	6510                	ld	a2,8(a0)
    8001ee66:	fd32                	sd	a2,184(sp)
    8001ee68:	4681                	li	a3,0
        let mut free = 0;
    8001ee6a:	f8b6                	sd	a3,112(sp)
        for i in 0..self.max_size() {
    8001ee6c:	f4aa                	sd	a0,104(sp)
    8001ee6e:	f0ae                	sd	a1,96(sp)
    8001ee70:	ecb2                	sd	a2,88(sp)
    8001ee72:	00000097          	auipc	ra,0x0
    8001ee76:	2b6080e7          	jalr	694(ra) # 8001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>
    8001ee7a:	e8aa                	sd	a0,80(sp)
    8001ee7c:	a009                	j	8001ee7e <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x22>
    8001ee7e:	4501                	li	a0,0
    8001ee80:	fcaa                	sd	a0,120(sp)
    8001ee82:	65c6                	ld	a1,80(sp)
    8001ee84:	e12e                	sd	a1,128(sp)
    8001ee86:	00001097          	auipc	ra,0x1
    8001ee8a:	c24080e7          	jalr	-988(ra) # 8001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>
    8001ee8e:	e4aa                	sd	a0,72(sp)
    8001ee90:	e0ae                	sd	a1,64(sp)
    8001ee92:	a009                	j	8001ee94 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x38>
    8001ee94:	6526                	ld	a0,72(sp)
    8001ee96:	e52a                	sd	a0,136(sp)
    8001ee98:	6586                	ld	a1,64(sp)
    8001ee9a:	e92e                	sd	a1,144(sp)
    8001ee9c:	a009                	j	8001ee9e <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x42>
    8001ee9e:	0128                	addi	a0,sp,136
    8001eea0:	00001097          	auipc	ra,0x1
    8001eea4:	b9c080e7          	jalr	-1124(ra) # 8001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>
    8001eea8:	ed2a                	sd	a0,152(sp)
    8001eeaa:	f12e                	sd	a1,160(sp)
    8001eeac:	a009                	j	8001eeae <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x52>
    8001eeae:	656a                	ld	a0,152(sp)
    8001eeb0:	4581                	li	a1,0
    8001eeb2:	00b50463          	beq	a0,a1,8001eeba <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x5e>
    8001eeb6:	a009                	j	8001eeb8 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x5c>
    8001eeb8:	a031                	j	8001eec4 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x68>
            if left < right {
                free += self.init_free_pair(i, rbi);
            }
        }
        free
    }
    8001eeba:	7546                	ld	a0,112(sp)
    8001eebc:	70ae                	ld	ra,232(sp)
    8001eebe:	616d                	addi	sp,sp,240
    8001eec0:	8082                	ret
        for i in 0..self.max_size() {
    8001eec2:	0000                	unimp
    8001eec4:	750a                	ld	a0,160(sp)
    8001eec6:	e1aa                	sd	a0,192(sp)
    8001eec8:	e5aa                	sd	a0,200(sp)
    8001eeca:	e9aa                	sd	a0,208(sp)
            let lbi = self.blk_index_next(i, left);
    8001eecc:	75a6                	ld	a1,104(sp)
    8001eece:	fc2a                	sd	a0,56(sp)
    8001eed0:	852e                	mv	a0,a1
    8001eed2:	75e2                	ld	a1,56(sp)
    8001eed4:	7606                	ld	a2,96(sp)
    8001eed6:	00000097          	auipc	ra,0x0
    8001eeda:	386080e7          	jalr	902(ra) # 8001f25c <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E>
    8001eede:	85aa                	mv	a1,a0
    8001eee0:	edaa                	sd	a0,216(sp)
    8001eee2:	f82e                	sd	a1,48(sp)
    8001eee4:	a009                	j	8001eee6 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x8a>
            let rbi = self.blk_index(i, right);
    8001eee6:	7526                	ld	a0,104(sp)
    8001eee8:	75e2                	ld	a1,56(sp)
    8001eeea:	6666                	ld	a2,88(sp)
    8001eeec:	00000097          	auipc	ra,0x0
    8001eef0:	2f2080e7          	jalr	754(ra) # 8001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>
    8001eef4:	85aa                	mv	a1,a0
    8001eef6:	f1aa                	sd	a0,224(sp)
    8001eef8:	f42e                	sd	a1,40(sp)
    8001eefa:	a009                	j	8001eefc <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xa0>
            free += self.init_free_pair(i, lbi);
    8001eefc:	7526                	ld	a0,104(sp)
    8001eefe:	75e2                	ld	a1,56(sp)
    8001ef00:	7642                	ld	a2,48(sp)
    8001ef02:	00000097          	auipc	ra,0x0
    8001ef06:	08e080e7          	jalr	142(ra) # 8001ef90 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E>
    8001ef0a:	f02a                	sd	a0,32(sp)
    8001ef0c:	a009                	j	8001ef0e <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xb2>
    8001ef0e:	7546                	ld	a0,112(sp)
    8001ef10:	7582                	ld	a1,32(sp)
    8001ef12:	00b50633          	add	a2,a0,a1
    8001ef16:	ec32                	sd	a2,24(sp)
    8001ef18:	04a66063          	bltu	a2,a0,8001ef58 <.LBB8_20>
    8001ef1c:	a009                	j	8001ef1e <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xc2>
    8001ef1e:	6562                	ld	a0,24(sp)
    8001ef20:	f8aa                	sd	a0,112(sp)
            if left < right {
    8001ef22:	7586                	ld	a1,96(sp)
    8001ef24:	6666                	ld	a2,88(sp)
    8001ef26:	00c5fc63          	bgeu	a1,a2,8001ef3e <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xe2>
    8001ef2a:	a009                	j	8001ef2c <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xd0>
                free += self.init_free_pair(i, rbi);
    8001ef2c:	7526                	ld	a0,104(sp)
    8001ef2e:	75e2                	ld	a1,56(sp)
    8001ef30:	7622                	ld	a2,40(sp)
    8001ef32:	00000097          	auipc	ra,0x0
    8001ef36:	05e080e7          	jalr	94(ra) # 8001ef90 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E>
    8001ef3a:	e82a                	sd	a0,16(sp)
    8001ef3c:	a011                	j	8001ef40 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xe4>
            if left < right {
    8001ef3e:	a821                	j	8001ef56 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xfa>
                free += self.init_free_pair(i, rbi);
    8001ef40:	7546                	ld	a0,112(sp)
    8001ef42:	65c2                	ld	a1,16(sp)
    8001ef44:	00b50633          	add	a2,a0,a1
    8001ef48:	e432                	sd	a2,8(sp)
    8001ef4a:	02a66563          	bltu	a2,a0,8001ef74 <.LBB8_22>
    8001ef4e:	a009                	j	8001ef50 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xf4>
    8001ef50:	6522                	ld	a0,8(sp)
    8001ef52:	f8aa                	sd	a0,112(sp)
            if left < right {
    8001ef54:	a009                	j	8001ef56 <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0xfa>
        for i in 0..self.max_size() {
    8001ef56:	b7a1                	j	8001ee9e <_ZN9allocator11BuddySystem9init_free17h9a114144e714ac11E+0x42>

000000008001ef58 <.LBB8_20>:
            free += self.init_free_pair(i, lbi);
    8001ef58:	0000b517          	auipc	a0,0xb
    8001ef5c:	82850513          	addi	a0,a0,-2008 # 80029780 <str.2>

000000008001ef60 <.LBB8_21>:
    8001ef60:	0000b617          	auipc	a2,0xb
    8001ef64:	c4860613          	addi	a2,a2,-952 # 80029ba8 <.L__unnamed_41>
    8001ef68:	45f1                	li	a1,28
    8001ef6a:	00002097          	auipc	ra,0x2
    8001ef6e:	d60080e7          	jalr	-672(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001ef74 <.LBB8_22>:
                free += self.init_free_pair(i, rbi);
    8001ef74:	0000b517          	auipc	a0,0xb
    8001ef78:	80c50513          	addi	a0,a0,-2036 # 80029780 <str.2>

000000008001ef7c <.LBB8_23>:
    8001ef7c:	0000b617          	auipc	a2,0xb
    8001ef80:	c4460613          	addi	a2,a2,-956 # 80029bc0 <.L__unnamed_42>
    8001ef84:	45f1                	li	a1,28
    8001ef86:	00002097          	auipc	ra,0x2
    8001ef8a:	d44080e7          	jalr	-700(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E:

000000008001ef90 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E>:

    /// Push a buddy into the list if it cannot be coalesce and upgrade.
    fn init_free_pair(&mut self, sizei: usize, bi: usize) -> usize {
    8001ef90:	7135                	addi	sp,sp,-160
    8001ef92:	ed06                	sd	ra,152(sp)
    8001ef94:	f4aa                	sd	a0,104(sp)
    8001ef96:	f8ae                	sd	a1,112(sp)
    8001ef98:	fcb2                	sd	a2,120(sp)
        let buddyi = if bi % 2 == 0 { bi+1 } else { bi-1 };
    8001ef9a:	00167693          	andi	a3,a2,1
    8001ef9e:	e8b2                	sd	a2,80(sp)
    8001efa0:	e4ae                	sd	a1,72(sp)
    8001efa2:	e0aa                	sd	a0,64(sp)
    8001efa4:	ea89                	bnez	a3,8001efb6 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x26>
    8001efa6:	a009                	j	8001efa8 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x18>
    8001efa8:	6546                	ld	a0,80(sp)
    8001efaa:	00150593          	addi	a1,a0,1
    8001efae:	fc2e                	sd	a1,56(sp)
    8001efb0:	10a5e063          	bltu	a1,a0,8001f0b0 <.LBB9_25>
    8001efb4:	a801                	j	8001efc4 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x34>
    8001efb6:	6546                	ld	a0,80(sp)
    8001efb8:	fff50593          	addi	a1,a0,-1
    8001efbc:	f82e                	sd	a1,48(sp)
    8001efbe:	0cb56a63          	bltu	a0,a1,8001f092 <.LBB9_23>
    8001efc2:	a021                	j	8001efca <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x3a>
    8001efc4:	7562                	ld	a0,56(sp)
    8001efc6:	f0aa                	sd	a0,96(sp)
    8001efc8:	a021                	j	8001efd0 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x40>
    8001efca:	7542                	ld	a0,48(sp)
    8001efcc:	f0aa                	sd	a0,96(sp)
    8001efce:	a009                	j	8001efd0 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x40>
        let blk_addr_bi = self.blk_addr(sizei, bi);
    8001efd0:	6506                	ld	a0,64(sp)
    8001efd2:	65a6                	ld	a1,72(sp)
    8001efd4:	6646                	ld	a2,80(sp)
    8001efd6:	00000097          	auipc	ra,0x0
    8001efda:	3a6080e7          	jalr	934(ra) # 8001f37c <_ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E>
    8001efde:	85aa                	mv	a1,a0
    8001efe0:	e12a                	sd	a0,128(sp)
    8001efe2:	f42e                	sd	a1,40(sp)
    8001efe4:	a009                	j	8001efe6 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x56>
        let blk_addr_buddyi = self.blk_addr(sizei, buddyi);
    8001efe6:	7606                	ld	a2,96(sp)
    8001efe8:	6506                	ld	a0,64(sp)
    8001efea:	65a6                	ld	a1,72(sp)
    8001efec:	00000097          	auipc	ra,0x0
    8001eff0:	390080e7          	jalr	912(ra) # 8001f37c <_ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E>
    8001eff4:	85aa                	mv	a1,a0
    8001eff6:	e52a                	sd	a0,136(sp)
    8001eff8:	f02e                	sd	a1,32(sp)
    8001effa:	a009                	j	8001effc <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x6c>
        
        let info = unsafe { self.get_info_mut(sizei) };
    8001effc:	6506                	ld	a0,64(sp)
    8001effe:	65a6                	ld	a1,72(sp)
    8001f000:	00000097          	auipc	ra,0x0
    8001f004:	0cc080e7          	jalr	204(ra) # 8001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>
    8001f008:	ec2a                	sd	a0,24(sp)
    8001f00a:	a009                	j	8001f00c <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x7c>
    8001f00c:	6562                	ld	a0,24(sp)
    8001f00e:	e92a                	sd	a0,144(sp)
        if info.is_alloc_set(bi) != info.is_alloc_set(buddyi) {
    8001f010:	65c6                	ld	a1,80(sp)
    8001f012:	00000097          	auipc	ra,0x0
    8001f016:	650080e7          	jalr	1616(ra) # 8001f662 <_ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E>
    8001f01a:	e82a                	sd	a0,16(sp)
    8001f01c:	a009                	j	8001f01e <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x8e>
    8001f01e:	7586                	ld	a1,96(sp)
    8001f020:	6562                	ld	a0,24(sp)
    8001f022:	00000097          	auipc	ra,0x0
    8001f026:	640080e7          	jalr	1600(ra) # 8001f662 <_ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E>
    8001f02a:	e42a                	sd	a0,8(sp)
    8001f02c:	a009                	j	8001f02e <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0x9e>
    8001f02e:	6542                	ld	a0,16(sp)
    8001f030:	65a2                	ld	a1,8(sp)
    8001f032:	00b50b63          	beq	a0,a1,8001f048 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xb8>
    8001f036:	a009                	j	8001f038 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xa8>
            // one buddy is free, the other is allocated
            unsafe {
                if info.is_alloc_set(bi) {
    8001f038:	6562                	ld	a0,24(sp)
    8001f03a:	65c6                	ld	a1,80(sp)
    8001f03c:	00000097          	auipc	ra,0x0
    8001f040:	626080e7          	jalr	1574(ra) # 8001f662 <_ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E>
    8001f044:	e02a                	sd	a0,0(sp)
    8001f046:	a021                	j	8001f04e <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xbe>
    8001f048:	4501                	li	a0,0
                    info.free.push(blk_addr_bi);    
                }
            }
            self.blk_size(sizei)
        } else {
            0
    8001f04a:	ecaa                	sd	a0,88(sp)
        if info.is_alloc_set(bi) != info.is_alloc_set(buddyi) {
    8001f04c:	a83d                	j	8001f08a <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xfa>
    8001f04e:	4501                	li	a0,0
                if info.is_alloc_set(bi) {
    8001f050:	6582                	ld	a1,0(sp)
    8001f052:	00a58a63          	beq	a1,a0,8001f066 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xd6>
    8001f056:	a009                	j	8001f058 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xc8>
                    info.free.push(blk_addr_buddyi);
    8001f058:	6562                	ld	a0,24(sp)
    8001f05a:	7582                	ld	a1,32(sp)
    8001f05c:	00001097          	auipc	ra,0x1
    8001f060:	782080e7          	jalr	1922(ra) # 800207de <_ZN9allocator4list4List4push17he3c20b895e5c9a81E>
    8001f064:	a801                	j	8001f074 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xe4>
                    info.free.push(blk_addr_bi);    
    8001f066:	6562                	ld	a0,24(sp)
    8001f068:	75a2                	ld	a1,40(sp)
    8001f06a:	00001097          	auipc	ra,0x1
    8001f06e:	774080e7          	jalr	1908(ra) # 800207de <_ZN9allocator4list4List4push17he3c20b895e5c9a81E>
    8001f072:	a011                	j	8001f076 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xe6>
                if info.is_alloc_set(bi) {
    8001f074:	a011                	j	8001f078 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xe8>
    8001f076:	a009                	j	8001f078 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xe8>
            self.blk_size(sizei)
    8001f078:	6506                	ld	a0,64(sp)
    8001f07a:	65a6                	ld	a1,72(sp)
    8001f07c:	00000097          	auipc	ra,0x0
    8001f080:	384080e7          	jalr	900(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001f084:	ecaa                	sd	a0,88(sp)
    8001f086:	a009                	j	8001f088 <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xf8>
        if info.is_alloc_set(bi) != info.is_alloc_set(buddyi) {
    8001f088:	a009                	j	8001f08a <_ZN9allocator11BuddySystem14init_free_pair17h4ea13fe58e01be03E+0xfa>
        }
    }
    8001f08a:	6566                	ld	a0,88(sp)
    8001f08c:	60ea                	ld	ra,152(sp)
    8001f08e:	610d                	addi	sp,sp,160
    8001f090:	8082                	ret

000000008001f092 <.LBB9_23>:
        let buddyi = if bi % 2 == 0 { bi+1 } else { bi-1 };
    8001f092:	0000a517          	auipc	a0,0xa
    8001f096:	63e50513          	addi	a0,a0,1598 # 800296d0 <str.0>

000000008001f09a <.LBB9_24>:
    8001f09a:	0000b617          	auipc	a2,0xb
    8001f09e:	b3e60613          	addi	a2,a2,-1218 # 80029bd8 <.L__unnamed_43>
    8001f0a2:	02100593          	li	a1,33
    8001f0a6:	00002097          	auipc	ra,0x2
    8001f0aa:	c24080e7          	jalr	-988(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f0b0 <.LBB9_25>:
    8001f0b0:	0000a517          	auipc	a0,0xa
    8001f0b4:	6d050513          	addi	a0,a0,1744 # 80029780 <str.2>

000000008001f0b8 <.LBB9_26>:
    8001f0b8:	0000b617          	auipc	a2,0xb
    8001f0bc:	b3860613          	addi	a2,a2,-1224 # 80029bf0 <.L__unnamed_44>
    8001f0c0:	45f1                	li	a1,28
    8001f0c2:	00002097          	auipc	ra,0x2
    8001f0c6:	c08080e7          	jalr	-1016(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E:

000000008001f0cc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E>:

    /// Get buddy info at certain index.
    ///
    /// SAFETY: must be called after the initialization of infos field.
    unsafe fn get_info_mut(&mut self, index: usize) -> &mut BuddyInfo {
    8001f0cc:	711d                	addi	sp,sp,-96
    8001f0ce:	ec86                	sd	ra,88(sp)
    8001f0d0:	f82a                	sd	a0,48(sp)
    8001f0d2:	fc2e                	sd	a1,56(sp)
        let info_slice_ptr = *self.infos.as_ptr();
    8001f0d4:	02850513          	addi	a0,a0,40
    8001f0d8:	e8aa                	sd	a0,80(sp)
    8001f0da:	f42e                	sd	a1,40(sp)
    8001f0dc:	f02a                	sd	a0,32(sp)
    8001f0de:	a009                	j	8001f0e0 <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E+0x14>
    8001f0e0:	7502                	ld	a0,32(sp)
    8001f0e2:	610c                	ld	a1,0(a0)
    8001f0e4:	6510                	ld	a2,8(a0)
    8001f0e6:	e0ae                	sd	a1,64(sp)
    8001f0e8:	e4b2                	sd	a2,72(sp)
        info_slice_ptr.get_unchecked_mut(index).as_mut().unwrap()
    8001f0ea:	852e                	mv	a0,a1
    8001f0ec:	85b2                	mv	a1,a2
    8001f0ee:	7622                	ld	a2,40(sp)
    8001f0f0:	00001097          	auipc	ra,0x1
    8001f0f4:	d7a080e7          	jalr	-646(ra) # 8001fe6a <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h1d129342d292f0c1E>
    8001f0f8:	ec2a                	sd	a0,24(sp)
    8001f0fa:	a009                	j	8001f0fc <_ZN9allocator11BuddySystem12get_info_mut17h0e4c26a4e5f82df9E+0x30>
    8001f0fc:	6562                	ld	a0,24(sp)
    8001f0fe:	00001097          	auipc	ra,0x1
    8001f102:	cec080e7          	jalr	-788(ra) # 8001fdea <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E>
    8001f106:	e82a                	sd	a0,16(sp)
    8001f108:	a009                	j	8001f10a <.LBB10_5>

000000008001f10a <.LBB10_5>:
    8001f10a:	0000b597          	auipc	a1,0xb
    8001f10e:	afe58593          	addi	a1,a1,-1282 # 80029c08 <.L__unnamed_45>
    8001f112:	6542                	ld	a0,16(sp)
    8001f114:	00001097          	auipc	ra,0x1
    8001f118:	1cc080e7          	jalr	460(ra) # 800202e0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h190c40c36a1f3af3E>
    8001f11c:	e42a                	sd	a0,8(sp)
    8001f11e:	a009                	j	8001f120 <.LBB10_5+0x16>
    }
    8001f120:	6522                	ld	a0,8(sp)
    8001f122:	60e6                	ld	ra,88(sp)
    8001f124:	6125                	addi	sp,sp,96
    8001f126:	8082                	ret

Disassembly of section .text._ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E:

000000008001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>:

    /// The largest block size.
    /// Also the last index into the buddy info array.
    #[inline]
    fn max_size(&self) -> usize {
    8001f128:	1141                	addi	sp,sp,-16
    8001f12a:	e42a                	sd	a0,8(sp)
        self.nsizes - 1
    8001f12c:	6908                	ld	a0,16(a0)
    8001f12e:	fff50593          	addi	a1,a0,-1
    8001f132:	e02e                	sd	a1,0(sp)
    8001f134:	00b56663          	bltu	a0,a1,8001f140 <.LBB11_3>
    8001f138:	a009                	j	8001f13a <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E+0x12>
    }
    8001f13a:	6502                	ld	a0,0(sp)
    8001f13c:	0141                	addi	sp,sp,16
    8001f13e:	8082                	ret

000000008001f140 <.LBB11_3>:
        self.nsizes - 1
    8001f140:	0000a517          	auipc	a0,0xa
    8001f144:	59050513          	addi	a0,a0,1424 # 800296d0 <str.0>

000000008001f148 <.LBB11_4>:
    8001f148:	0000b617          	auipc	a2,0xb
    8001f14c:	ad860613          	addi	a2,a2,-1320 # 80029c20 <.L__unnamed_46>
    8001f150:	02100593          	li	a1,33
    8001f154:	00002097          	auipc	ra,0x2
    8001f158:	b76080e7          	jalr	-1162(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem5n_blk17h9a6c95478cbc2d6fE:

000000008001f15e <_ZN9allocator11BuddySystem5n_blk17h9a6c95478cbc2d6fE>:

    /// Number of block at size k, based on the total managed memory.
    #[inline]
    fn n_blk(&self, k: usize) -> usize {
    8001f15e:	7139                	addi	sp,sp,-64
    8001f160:	fc06                	sd	ra,56(sp)
    8001f162:	f42a                	sd	a0,40(sp)
    8001f164:	f82e                	sd	a1,48(sp)
        1 << (self.max_size() - k)
    8001f166:	f02e                	sd	a1,32(sp)
    8001f168:	00000097          	auipc	ra,0x0
    8001f16c:	fc0080e7          	jalr	-64(ra) # 8001f128 <_ZN9allocator11BuddySystem8max_size17h0cbe4633ced52a36E>
    8001f170:	ec2a                	sd	a0,24(sp)
    8001f172:	a009                	j	8001f174 <_ZN9allocator11BuddySystem5n_blk17h9a6c95478cbc2d6fE+0x16>
    8001f174:	6562                	ld	a0,24(sp)
    8001f176:	7582                	ld	a1,32(sp)
    8001f178:	40b50633          	sub	a2,a0,a1
    8001f17c:	e832                	sd	a2,16(sp)
    8001f17e:	02c56263          	bltu	a0,a2,8001f1a2 <.LBB12_6>
    8001f182:	a009                	j	8001f184 <_ZN9allocator11BuddySystem5n_blk17h9a6c95478cbc2d6fE+0x26>
    8001f184:	6542                	ld	a0,16(sp)
    8001f186:	fc057593          	andi	a1,a0,-64
    8001f18a:	4605                	li	a2,1
    8001f18c:	00a61533          	sll	a0,a2,a0
    8001f190:	4601                	li	a2,0
    8001f192:	e42a                	sd	a0,8(sp)
    8001f194:	02c59663          	bne	a1,a2,8001f1c0 <.LBB12_8>
    8001f198:	a009                	j	8001f19a <_ZN9allocator11BuddySystem5n_blk17h9a6c95478cbc2d6fE+0x3c>
    }
    8001f19a:	6522                	ld	a0,8(sp)
    8001f19c:	70e2                	ld	ra,56(sp)
    8001f19e:	6121                	addi	sp,sp,64
    8001f1a0:	8082                	ret

000000008001f1a2 <.LBB12_6>:
        1 << (self.max_size() - k)
    8001f1a2:	0000a517          	auipc	a0,0xa
    8001f1a6:	52e50513          	addi	a0,a0,1326 # 800296d0 <str.0>

000000008001f1aa <.LBB12_7>:
    8001f1aa:	0000b617          	auipc	a2,0xb
    8001f1ae:	a8e60613          	addi	a2,a2,-1394 # 80029c38 <.L__unnamed_47>
    8001f1b2:	02100593          	li	a1,33
    8001f1b6:	00002097          	auipc	ra,0x2
    8001f1ba:	b14080e7          	jalr	-1260(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f1c0 <.LBB12_8>:
    8001f1c0:	0000b517          	auipc	a0,0xb
    8001f1c4:	ab050513          	addi	a0,a0,-1360 # 80029c70 <str.4>

000000008001f1c8 <.LBB12_9>:
    8001f1c8:	0000b617          	auipc	a2,0xb
    8001f1cc:	a8860613          	addi	a2,a2,-1400 # 80029c50 <.L__unnamed_48>
    8001f1d0:	02300593          	li	a1,35
    8001f1d4:	00002097          	auipc	ra,0x2
    8001f1d8:	af6080e7          	jalr	-1290(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE:

000000008001f1de <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE>:

    fn blk_index(&self, k: usize, addr: usize) -> usize {
    8001f1de:	7139                	addi	sp,sp,-64
    8001f1e0:	fc06                	sd	ra,56(sp)
    8001f1e2:	f02a                	sd	a0,32(sp)
    8001f1e4:	f42e                	sd	a1,40(sp)
    8001f1e6:	f832                	sd	a2,48(sp)
        (addr - self.base) / self.blk_size(k)
    8001f1e8:	6114                	ld	a3,0(a0)
    8001f1ea:	40d606b3          	sub	a3,a2,a3
    8001f1ee:	ec2e                	sd	a1,24(sp)
    8001f1f0:	e82a                	sd	a0,16(sp)
    8001f1f2:	e436                	sd	a3,8(sp)
    8001f1f4:	02d66763          	bltu	a2,a3,8001f222 <.LBB13_6>
    8001f1f8:	a009                	j	8001f1fa <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE+0x1c>
    8001f1fa:	6542                	ld	a0,16(sp)
    8001f1fc:	65e2                	ld	a1,24(sp)
    8001f1fe:	00000097          	auipc	ra,0x0
    8001f202:	202080e7          	jalr	514(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001f206:	e02a                	sd	a0,0(sp)
    8001f208:	a009                	j	8001f20a <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE+0x2c>
    8001f20a:	4501                	li	a0,0
    8001f20c:	6582                	ld	a1,0(sp)
    8001f20e:	02a58963          	beq	a1,a0,8001f240 <.LBB13_8>
    8001f212:	a009                	j	8001f214 <_ZN9allocator11BuddySystem9blk_index17h615563e2e973cc5eE+0x36>
    8001f214:	6522                	ld	a0,8(sp)
    8001f216:	6582                	ld	a1,0(sp)
    8001f218:	02b55533          	divu	a0,a0,a1
    }
    8001f21c:	70e2                	ld	ra,56(sp)
    8001f21e:	6121                	addi	sp,sp,64
    8001f220:	8082                	ret

000000008001f222 <.LBB13_6>:
        (addr - self.base) / self.blk_size(k)
    8001f222:	0000a517          	auipc	a0,0xa
    8001f226:	4ae50513          	addi	a0,a0,1198 # 800296d0 <str.0>

000000008001f22a <.LBB13_7>:
    8001f22a:	0000b617          	auipc	a2,0xb
    8001f22e:	a6e60613          	addi	a2,a2,-1426 # 80029c98 <.L__unnamed_49>
    8001f232:	02100593          	li	a1,33
    8001f236:	00002097          	auipc	ra,0x2
    8001f23a:	a94080e7          	jalr	-1388(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f240 <.LBB13_8>:
    8001f240:	0000a517          	auipc	a0,0xa
    8001f244:	50050513          	addi	a0,a0,1280 # 80029740 <str.1>

000000008001f248 <.LBB13_9>:
    8001f248:	0000b617          	auipc	a2,0xb
    8001f24c:	a5060613          	addi	a2,a2,-1456 # 80029c98 <.L__unnamed_49>
    8001f250:	45e5                	li	a1,25
    8001f252:	00002097          	auipc	ra,0x2
    8001f256:	a78080e7          	jalr	-1416(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E:

000000008001f25c <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E>:

    fn blk_index_next(&self, k: usize, addr: usize) -> usize {
    8001f25c:	711d                	addi	sp,sp,-96
    8001f25e:	ec86                	sd	ra,88(sp)
    8001f260:	fc2a                	sd	a0,56(sp)
    8001f262:	e0ae                	sd	a1,64(sp)
    8001f264:	e4b2                	sd	a2,72(sp)
        let bs = self.blk_size(k);
    8001f266:	f42a                	sd	a0,40(sp)
    8001f268:	f032                	sd	a2,32(sp)
    8001f26a:	00000097          	auipc	ra,0x0
    8001f26e:	196080e7          	jalr	406(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001f272:	85aa                	mv	a1,a0
    8001f274:	e8aa                	sd	a0,80(sp)
    8001f276:	ec2e                	sd	a1,24(sp)
    8001f278:	a009                	j	8001f27a <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x1e>
        let mut i = (addr - self.base) / bs;
    8001f27a:	7522                	ld	a0,40(sp)
    8001f27c:	610c                	ld	a1,0(a0)
    8001f27e:	7602                	ld	a2,32(sp)
    8001f280:	40b605b3          	sub	a1,a2,a1
    8001f284:	e82e                	sd	a1,16(sp)
    8001f286:	06b66263          	bltu	a2,a1,8001f2ea <.LBB14_15>
    8001f28a:	a009                	j	8001f28c <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x30>
    8001f28c:	4501                	li	a0,0
    8001f28e:	65e2                	ld	a1,24(sp)
    8001f290:	06a58c63          	beq	a1,a0,8001f308 <.LBB14_17>
    8001f294:	a009                	j	8001f296 <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x3a>
    8001f296:	6542                	ld	a0,16(sp)
    8001f298:	65e2                	ld	a1,24(sp)
    8001f29a:	02b55633          	divu	a2,a0,a1
    8001f29e:	f832                	sd	a2,48(sp)
        if (addr - self.base) % bs > 0 {
    8001f2a0:	7622                	ld	a2,40(sp)
    8001f2a2:	6214                	ld	a3,0(a2)
    8001f2a4:	7702                	ld	a4,32(sp)
    8001f2a6:	40d706b3          	sub	a3,a4,a3
    8001f2aa:	e436                	sd	a3,8(sp)
    8001f2ac:	06d76c63          	bltu	a4,a3,8001f324 <.LBB14_19>
    8001f2b0:	a009                	j	8001f2b2 <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x56>
    8001f2b2:	4501                	li	a0,0
    8001f2b4:	65e2                	ld	a1,24(sp)
    8001f2b6:	08a58663          	beq	a1,a0,8001f342 <.LBB14_21>
    8001f2ba:	a009                	j	8001f2bc <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x60>
    8001f2bc:	6522                	ld	a0,8(sp)
    8001f2be:	65e2                	ld	a1,24(sp)
    8001f2c0:	02b57633          	remu	a2,a0,a1
    8001f2c4:	4681                	li	a3,0
    8001f2c6:	00d60a63          	beq	a2,a3,8001f2da <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x7e>
    8001f2ca:	a009                	j	8001f2cc <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x70>
            i += 1;
    8001f2cc:	7542                	ld	a0,48(sp)
    8001f2ce:	00150593          	addi	a1,a0,1
    8001f2d2:	e02e                	sd	a1,0(sp)
    8001f2d4:	08a5e663          	bltu	a1,a0,8001f360 <.LBB14_23>
    8001f2d8:	a011                	j	8001f2dc <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x80>
        if (addr - self.base) % bs > 0 {
    8001f2da:	a021                	j	8001f2e2 <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x86>
            i += 1;
    8001f2dc:	6502                	ld	a0,0(sp)
    8001f2de:	f82a                	sd	a0,48(sp)
        if (addr - self.base) % bs > 0 {
    8001f2e0:	a009                	j	8001f2e2 <_ZN9allocator11BuddySystem14blk_index_next17he0f401235d1e48c9E+0x86>
        }
        i
    }
    8001f2e2:	7542                	ld	a0,48(sp)
    8001f2e4:	60e6                	ld	ra,88(sp)
    8001f2e6:	6125                	addi	sp,sp,96
    8001f2e8:	8082                	ret

000000008001f2ea <.LBB14_15>:
        let mut i = (addr - self.base) / bs;
    8001f2ea:	0000a517          	auipc	a0,0xa
    8001f2ee:	3e650513          	addi	a0,a0,998 # 800296d0 <str.0>

000000008001f2f2 <.LBB14_16>:
    8001f2f2:	0000b617          	auipc	a2,0xb
    8001f2f6:	9be60613          	addi	a2,a2,-1602 # 80029cb0 <.L__unnamed_50>
    8001f2fa:	02100593          	li	a1,33
    8001f2fe:	00002097          	auipc	ra,0x2
    8001f302:	9cc080e7          	jalr	-1588(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f308 <.LBB14_17>:
    8001f308:	0000a517          	auipc	a0,0xa
    8001f30c:	43850513          	addi	a0,a0,1080 # 80029740 <str.1>

000000008001f310 <.LBB14_18>:
    8001f310:	0000b617          	auipc	a2,0xb
    8001f314:	9a060613          	addi	a2,a2,-1632 # 80029cb0 <.L__unnamed_50>
    8001f318:	45e5                	li	a1,25
    8001f31a:	00002097          	auipc	ra,0x2
    8001f31e:	9b0080e7          	jalr	-1616(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f324 <.LBB14_19>:
        if (addr - self.base) % bs > 0 {
    8001f324:	0000a517          	auipc	a0,0xa
    8001f328:	3ac50513          	addi	a0,a0,940 # 800296d0 <str.0>

000000008001f32c <.LBB14_20>:
    8001f32c:	0000b617          	auipc	a2,0xb
    8001f330:	99c60613          	addi	a2,a2,-1636 # 80029cc8 <.L__unnamed_51>
    8001f334:	02100593          	li	a1,33
    8001f338:	00002097          	auipc	ra,0x2
    8001f33c:	992080e7          	jalr	-1646(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f342 <.LBB14_21>:
    8001f342:	0000a517          	auipc	a0,0xa
    8001f346:	75e50513          	addi	a0,a0,1886 # 80029aa0 <str.3>

000000008001f34a <.LBB14_22>:
    8001f34a:	0000b617          	auipc	a2,0xb
    8001f34e:	97e60613          	addi	a2,a2,-1666 # 80029cc8 <.L__unnamed_51>
    8001f352:	03900593          	li	a1,57
    8001f356:	00002097          	auipc	ra,0x2
    8001f35a:	974080e7          	jalr	-1676(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f360 <.LBB14_23>:
            i += 1;
    8001f360:	0000a517          	auipc	a0,0xa
    8001f364:	42050513          	addi	a0,a0,1056 # 80029780 <str.2>

000000008001f368 <.LBB14_24>:
    8001f368:	0000b617          	auipc	a2,0xb
    8001f36c:	97860613          	addi	a2,a2,-1672 # 80029ce0 <.L__unnamed_52>
    8001f370:	45f1                	li	a1,28
    8001f372:	00002097          	auipc	ra,0x2
    8001f376:	958080e7          	jalr	-1704(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E:

000000008001f37c <_ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E>:

    /// Receive size k and block index bi.
    /// Return the block's raw addr at this buddy system.
    fn blk_addr(&self, k: usize, bi: usize) -> usize {
    8001f37c:	715d                	addi	sp,sp,-80
    8001f37e:	e486                	sd	ra,72(sp)
    8001f380:	f82a                	sd	a0,48(sp)
    8001f382:	fc2e                	sd	a1,56(sp)
    8001f384:	e0b2                	sd	a2,64(sp)
        self.base + (bi * self.blk_size(k))
    8001f386:	6114                	ld	a3,0(a0)
    8001f388:	f432                	sd	a2,40(sp)
    8001f38a:	f036                	sd	a3,32(sp)
    8001f38c:	00000097          	auipc	ra,0x0
    8001f390:	074080e7          	jalr	116(ra) # 8001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>
    8001f394:	ec2a                	sd	a0,24(sp)
    8001f396:	a009                	j	8001f398 <_ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E+0x1c>
    8001f398:	7522                	ld	a0,40(sp)
    8001f39a:	65e2                	ld	a1,24(sp)
    8001f39c:	02b50633          	mul	a2,a0,a1
    8001f3a0:	02b536b3          	mulhu	a3,a0,a1
    8001f3a4:	4701                	li	a4,0
    8001f3a6:	e832                	sd	a2,16(sp)
    8001f3a8:	00e69f63          	bne	a3,a4,8001f3c6 <.LBB15_6>
    8001f3ac:	a009                	j	8001f3ae <_ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E+0x32>
    8001f3ae:	7502                	ld	a0,32(sp)
    8001f3b0:	65c2                	ld	a1,16(sp)
    8001f3b2:	00b50633          	add	a2,a0,a1
    8001f3b6:	e432                	sd	a2,8(sp)
    8001f3b8:	02a66663          	bltu	a2,a0,8001f3e4 <.LBB15_8>
    8001f3bc:	a009                	j	8001f3be <_ZN9allocator11BuddySystem8blk_addr17h6ea7d0626603c731E+0x42>
    }
    8001f3be:	6522                	ld	a0,8(sp)
    8001f3c0:	60a6                	ld	ra,72(sp)
    8001f3c2:	6161                	addi	sp,sp,80
    8001f3c4:	8082                	ret

000000008001f3c6 <.LBB15_6>:
        self.base + (bi * self.blk_size(k))
    8001f3c6:	0000b517          	auipc	a0,0xb
    8001f3ca:	94a50513          	addi	a0,a0,-1718 # 80029d10 <str.5>

000000008001f3ce <.LBB15_7>:
    8001f3ce:	0000b617          	auipc	a2,0xb
    8001f3d2:	92a60613          	addi	a2,a2,-1750 # 80029cf8 <.L__unnamed_53>
    8001f3d6:	02100593          	li	a1,33
    8001f3da:	00002097          	auipc	ra,0x2
    8001f3de:	8f0080e7          	jalr	-1808(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f3e4 <.LBB15_8>:
    8001f3e4:	0000a517          	auipc	a0,0xa
    8001f3e8:	39c50513          	addi	a0,a0,924 # 80029780 <str.2>

000000008001f3ec <.LBB15_9>:
    8001f3ec:	0000b617          	auipc	a2,0xb
    8001f3f0:	94c60613          	addi	a2,a2,-1716 # 80029d38 <.L__unnamed_54>
    8001f3f4:	45f1                	li	a1,28
    8001f3f6:	00002097          	auipc	ra,0x2
    8001f3fa:	8d4080e7          	jalr	-1836(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E:

000000008001f400 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E>:

    #[inline]
    fn blk_size(&self, k: usize) -> usize {
    8001f400:	7179                	addi	sp,sp,-48
    8001f402:	f02a                	sd	a0,32(sp)
    8001f404:	f42e                	sd	a1,40(sp)
        (1 << k) * self.leaf_size
    8001f406:	fc05f613          	andi	a2,a1,-64
    8001f40a:	4685                	li	a3,1
    8001f40c:	00b695b3          	sll	a1,a3,a1
    8001f410:	4681                	li	a3,0
    8001f412:	ec2a                	sd	a0,24(sp)
    8001f414:	e82e                	sd	a1,16(sp)
    8001f416:	02d61263          	bne	a2,a3,8001f43a <.LBB16_5>
    8001f41a:	a009                	j	8001f41c <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E+0x1c>
    8001f41c:	6562                	ld	a0,24(sp)
    8001f41e:	6d0c                	ld	a1,24(a0)
    8001f420:	6642                	ld	a2,16(sp)
    8001f422:	02b60533          	mul	a0,a2,a1
    8001f426:	02b635b3          	mulhu	a1,a2,a1
    8001f42a:	4681                	li	a3,0
    8001f42c:	e42a                	sd	a0,8(sp)
    8001f42e:	02d59563          	bne	a1,a3,8001f458 <.LBB16_7>
    8001f432:	a009                	j	8001f434 <_ZN9allocator11BuddySystem8blk_size17h602024c5f883c3d3E+0x34>
    }
    8001f434:	6522                	ld	a0,8(sp)
    8001f436:	6145                	addi	sp,sp,48
    8001f438:	8082                	ret

000000008001f43a <.LBB16_5>:
        (1 << k) * self.leaf_size
    8001f43a:	0000b517          	auipc	a0,0xb
    8001f43e:	83650513          	addi	a0,a0,-1994 # 80029c70 <str.4>

000000008001f442 <.LBB16_6>:
    8001f442:	0000b617          	auipc	a2,0xb
    8001f446:	90e60613          	addi	a2,a2,-1778 # 80029d50 <.L__unnamed_55>
    8001f44a:	02300593          	li	a1,35
    8001f44e:	00002097          	auipc	ra,0x2
    8001f452:	87c080e7          	jalr	-1924(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f458 <.LBB16_7>:
    8001f458:	0000b517          	auipc	a0,0xb
    8001f45c:	8b850513          	addi	a0,a0,-1864 # 80029d10 <str.5>

000000008001f460 <.LBB16_8>:
    8001f460:	0000b617          	auipc	a2,0xb
    8001f464:	8f060613          	addi	a2,a2,-1808 # 80029d50 <.L__unnamed_55>
    8001f468:	02100593          	li	a1,33
    8001f46c:	00002097          	auipc	ra,0x2
    8001f470:	85e080e7          	jalr	-1954(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator9BuddyInfo9get_alloc17hc3d3b496184422adE:

000000008001f476 <_ZN9allocator9BuddyInfo9get_alloc17hc3d3b496184422adE>:
    split: MaybeUninit<*mut [u8]>,      // tell if a block is split into smaller size
}

impl BuddyInfo {
    /// SAFETY: must be called after the initialization of alloc field.
    unsafe fn get_alloc(&self, index: usize) -> &u8 {
    8001f476:	711d                	addi	sp,sp,-96
    8001f478:	ec86                	sd	ra,88(sp)
    8001f47a:	f82a                	sd	a0,48(sp)
    8001f47c:	fc2e                	sd	a1,56(sp)
        let alloc_slice_ptr = *self.alloc.as_ptr() as *const [u8];
    8001f47e:	0541                	addi	a0,a0,16
    8001f480:	e8aa                	sd	a0,80(sp)
    8001f482:	f42e                	sd	a1,40(sp)
    8001f484:	f02a                	sd	a0,32(sp)
    8001f486:	a009                	j	8001f488 <_ZN9allocator9BuddyInfo9get_alloc17hc3d3b496184422adE+0x12>
    8001f488:	7502                	ld	a0,32(sp)
    8001f48a:	610c                	ld	a1,0(a0)
    8001f48c:	6510                	ld	a2,8(a0)
    8001f48e:	e0ae                	sd	a1,64(sp)
    8001f490:	e4b2                	sd	a2,72(sp)
        alloc_slice_ptr.get_unchecked(index).as_ref().unwrap()
    8001f492:	852e                	mv	a0,a1
    8001f494:	85b2                	mv	a1,a2
    8001f496:	7622                	ld	a2,40(sp)
    8001f498:	00001097          	auipc	ra,0x1
    8001f49c:	d42080e7          	jalr	-702(ra) # 800201da <_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$13get_unchecked17h9a2ad196b1b4e22dE>
    8001f4a0:	ec2a                	sd	a0,24(sp)
    8001f4a2:	a009                	j	8001f4a4 <_ZN9allocator9BuddyInfo9get_alloc17hc3d3b496184422adE+0x2e>
    8001f4a4:	6562                	ld	a0,24(sp)
    8001f4a6:	00001097          	auipc	ra,0x1
    8001f4aa:	cc6080e7          	jalr	-826(ra) # 8002016c <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E>
    8001f4ae:	e82a                	sd	a0,16(sp)
    8001f4b0:	a009                	j	8001f4b2 <.LBB17_5>

000000008001f4b2 <.LBB17_5>:
    8001f4b2:	0000b597          	auipc	a1,0xb
    8001f4b6:	8b658593          	addi	a1,a1,-1866 # 80029d68 <.L__unnamed_56>
    8001f4ba:	6542                	ld	a0,16(sp)
    8001f4bc:	00001097          	auipc	ra,0x1
    8001f4c0:	e5a080e7          	jalr	-422(ra) # 80020316 <_ZN4core6option15Option$LT$T$GT$6unwrap17h504185d2abb0f0d5E>
    8001f4c4:	e42a                	sd	a0,8(sp)
    8001f4c6:	a009                	j	8001f4c8 <.LBB17_5+0x16>
    }
    8001f4c8:	6522                	ld	a0,8(sp)
    8001f4ca:	60e6                	ld	ra,88(sp)
    8001f4cc:	6125                	addi	sp,sp,96
    8001f4ce:	8082                	ret

Disassembly of section .text._ZN9allocator9BuddyInfo13get_alloc_mut17h841c53787652c18dE:

000000008001f4d0 <_ZN9allocator9BuddyInfo13get_alloc_mut17h841c53787652c18dE>:

    /// SAFETY: must be called after the initialization of alloc field.
    unsafe fn get_alloc_mut(&mut self, index: usize) -> &mut u8 {
    8001f4d0:	711d                	addi	sp,sp,-96
    8001f4d2:	ec86                	sd	ra,88(sp)
    8001f4d4:	f82a                	sd	a0,48(sp)
    8001f4d6:	fc2e                	sd	a1,56(sp)
        let alloc_slice_ptr = *self.alloc.as_ptr();
    8001f4d8:	0541                	addi	a0,a0,16
    8001f4da:	e8aa                	sd	a0,80(sp)
    8001f4dc:	f42e                	sd	a1,40(sp)
    8001f4de:	f02a                	sd	a0,32(sp)
    8001f4e0:	a009                	j	8001f4e2 <_ZN9allocator9BuddyInfo13get_alloc_mut17h841c53787652c18dE+0x12>
    8001f4e2:	7502                	ld	a0,32(sp)
    8001f4e4:	610c                	ld	a1,0(a0)
    8001f4e6:	6510                	ld	a2,8(a0)
    8001f4e8:	e0ae                	sd	a1,64(sp)
    8001f4ea:	e4b2                	sd	a2,72(sp)
        alloc_slice_ptr.get_unchecked_mut(index).as_mut().unwrap()
    8001f4ec:	852e                	mv	a0,a1
    8001f4ee:	85b2                	mv	a1,a2
    8001f4f0:	7622                	ld	a2,40(sp)
    8001f4f2:	00001097          	auipc	ra,0x1
    8001f4f6:	2ac080e7          	jalr	684(ra) # 8002079e <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h8757ca0ce9f91586E>
    8001f4fa:	ec2a                	sd	a0,24(sp)
    8001f4fc:	a009                	j	8001f4fe <_ZN9allocator9BuddyInfo13get_alloc_mut17h841c53787652c18dE+0x2e>
    8001f4fe:	6562                	ld	a0,24(sp)
    8001f500:	00001097          	auipc	ra,0x1
    8001f504:	226080e7          	jalr	550(ra) # 80020726 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E>
    8001f508:	e82a                	sd	a0,16(sp)
    8001f50a:	a009                	j	8001f50c <.LBB18_5>

000000008001f50c <.LBB18_5>:
    8001f50c:	0000b597          	auipc	a1,0xb
    8001f510:	87458593          	addi	a1,a1,-1932 # 80029d80 <.L__unnamed_57>
    8001f514:	6542                	ld	a0,16(sp)
    8001f516:	00001097          	auipc	ra,0x1
    8001f51a:	e36080e7          	jalr	-458(ra) # 8002034c <_ZN4core6option15Option$LT$T$GT$6unwrap17h5a4b65bf576d7407E>
    8001f51e:	e42a                	sd	a0,8(sp)
    8001f520:	a009                	j	8001f522 <.LBB18_5+0x16>
    }
    8001f522:	6522                	ld	a0,8(sp)
    8001f524:	60e6                	ld	ra,88(sp)
    8001f526:	6125                	addi	sp,sp,96
    8001f528:	8082                	ret

Disassembly of section .text._ZN9allocator9BuddyInfo9get_split17heecd58b5cef839bfE:

000000008001f52a <_ZN9allocator9BuddyInfo9get_split17heecd58b5cef839bfE>:

    /// SAFETY: must be called after the initialization of split field.
    unsafe fn get_split(&self, index: usize) -> &u8 {
    8001f52a:	711d                	addi	sp,sp,-96
    8001f52c:	ec86                	sd	ra,88(sp)
    8001f52e:	f82a                	sd	a0,48(sp)
    8001f530:	fc2e                	sd	a1,56(sp)
        let split_slice_ptr = *self.split.as_ptr() as *const [u8];
    8001f532:	02050513          	addi	a0,a0,32
    8001f536:	e8aa                	sd	a0,80(sp)
    8001f538:	f42e                	sd	a1,40(sp)
    8001f53a:	f02a                	sd	a0,32(sp)
    8001f53c:	a009                	j	8001f53e <_ZN9allocator9BuddyInfo9get_split17heecd58b5cef839bfE+0x14>
    8001f53e:	7502                	ld	a0,32(sp)
    8001f540:	610c                	ld	a1,0(a0)
    8001f542:	6510                	ld	a2,8(a0)
    8001f544:	e0ae                	sd	a1,64(sp)
    8001f546:	e4b2                	sd	a2,72(sp)
        split_slice_ptr.get_unchecked(index).as_ref().unwrap()
    8001f548:	852e                	mv	a0,a1
    8001f54a:	85b2                	mv	a1,a2
    8001f54c:	7622                	ld	a2,40(sp)
    8001f54e:	00001097          	auipc	ra,0x1
    8001f552:	c8c080e7          	jalr	-884(ra) # 800201da <_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$13get_unchecked17h9a2ad196b1b4e22dE>
    8001f556:	ec2a                	sd	a0,24(sp)
    8001f558:	a009                	j	8001f55a <_ZN9allocator9BuddyInfo9get_split17heecd58b5cef839bfE+0x30>
    8001f55a:	6562                	ld	a0,24(sp)
    8001f55c:	00001097          	auipc	ra,0x1
    8001f560:	c10080e7          	jalr	-1008(ra) # 8002016c <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E>
    8001f564:	e82a                	sd	a0,16(sp)
    8001f566:	a009                	j	8001f568 <.LBB19_5>

000000008001f568 <.LBB19_5>:
    8001f568:	0000b597          	auipc	a1,0xb
    8001f56c:	83058593          	addi	a1,a1,-2000 # 80029d98 <.L__unnamed_58>
    8001f570:	6542                	ld	a0,16(sp)
    8001f572:	00001097          	auipc	ra,0x1
    8001f576:	da4080e7          	jalr	-604(ra) # 80020316 <_ZN4core6option15Option$LT$T$GT$6unwrap17h504185d2abb0f0d5E>
    8001f57a:	e42a                	sd	a0,8(sp)
    8001f57c:	a009                	j	8001f57e <.LBB19_5+0x16>
    }
    8001f57e:	6522                	ld	a0,8(sp)
    8001f580:	60e6                	ld	ra,88(sp)
    8001f582:	6125                	addi	sp,sp,96
    8001f584:	8082                	ret

Disassembly of section .text._ZN9allocator9BuddyInfo13get_split_mut17h56b03e203971e6b9E:

000000008001f586 <_ZN9allocator9BuddyInfo13get_split_mut17h56b03e203971e6b9E>:

    /// SAFETY: must be called after the initialization of split field.
    unsafe fn get_split_mut(&mut self, index: usize) -> &mut u8 {
    8001f586:	711d                	addi	sp,sp,-96
    8001f588:	ec86                	sd	ra,88(sp)
    8001f58a:	f82a                	sd	a0,48(sp)
    8001f58c:	fc2e                	sd	a1,56(sp)
        let split_slice_ptr = *self.split.as_ptr();
    8001f58e:	02050513          	addi	a0,a0,32
    8001f592:	e8aa                	sd	a0,80(sp)
    8001f594:	f42e                	sd	a1,40(sp)
    8001f596:	f02a                	sd	a0,32(sp)
    8001f598:	a009                	j	8001f59a <_ZN9allocator9BuddyInfo13get_split_mut17h56b03e203971e6b9E+0x14>
    8001f59a:	7502                	ld	a0,32(sp)
    8001f59c:	610c                	ld	a1,0(a0)
    8001f59e:	6510                	ld	a2,8(a0)
    8001f5a0:	e0ae                	sd	a1,64(sp)
    8001f5a2:	e4b2                	sd	a2,72(sp)
        split_slice_ptr.get_unchecked_mut(index).as_mut().unwrap()
    8001f5a4:	852e                	mv	a0,a1
    8001f5a6:	85b2                	mv	a1,a2
    8001f5a8:	7622                	ld	a2,40(sp)
    8001f5aa:	00001097          	auipc	ra,0x1
    8001f5ae:	1f4080e7          	jalr	500(ra) # 8002079e <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h8757ca0ce9f91586E>
    8001f5b2:	ec2a                	sd	a0,24(sp)
    8001f5b4:	a009                	j	8001f5b6 <_ZN9allocator9BuddyInfo13get_split_mut17h56b03e203971e6b9E+0x30>
    8001f5b6:	6562                	ld	a0,24(sp)
    8001f5b8:	00001097          	auipc	ra,0x1
    8001f5bc:	16e080e7          	jalr	366(ra) # 80020726 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E>
    8001f5c0:	e82a                	sd	a0,16(sp)
    8001f5c2:	a009                	j	8001f5c4 <.LBB20_5>

000000008001f5c4 <.LBB20_5>:
    8001f5c4:	0000a597          	auipc	a1,0xa
    8001f5c8:	7ec58593          	addi	a1,a1,2028 # 80029db0 <.L__unnamed_59>
    8001f5cc:	6542                	ld	a0,16(sp)
    8001f5ce:	00001097          	auipc	ra,0x1
    8001f5d2:	d7e080e7          	jalr	-642(ra) # 8002034c <_ZN4core6option15Option$LT$T$GT$6unwrap17h5a4b65bf576d7407E>
    8001f5d6:	e42a                	sd	a0,8(sp)
    8001f5d8:	a009                	j	8001f5da <.LBB20_5+0x16>
    }
    8001f5da:	6522                	ld	a0,8(sp)
    8001f5dc:	60e6                	ld	ra,88(sp)
    8001f5de:	6125                	addi	sp,sp,96
    8001f5e0:	8082                	ret

Disassembly of section .text._ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E:

000000008001f5e2 <_ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E>:

    fn alloc_set(&mut self, index: usize, set_or_clear: bool) {
    8001f5e2:	715d                	addi	sp,sp,-80
    8001f5e4:	e486                	sd	ra,72(sp)
    8001f5e6:	86b2                	mv	a3,a2
    8001f5e8:	f02a                	sd	a0,32(sp)
    8001f5ea:	f42e                	sd	a1,40(sp)
    8001f5ec:	02c10ba3          	sb	a2,55(sp)
        let i1 = index / 8;
    8001f5f0:	0035d613          	srli	a2,a1,0x3
    8001f5f4:	fc32                	sd	a2,56(sp)
        let i2 = index % 8;
    8001f5f6:	899d                	andi	a1,a1,7
    8001f5f8:	e0ae                	sd	a1,64(sp)
        unsafe { self.get_alloc_mut(i1).set_bit(i2, set_or_clear); }
    8001f5fa:	ec2e                	sd	a1,24(sp)
    8001f5fc:	85b2                	mv	a1,a2
    8001f5fe:	e836                	sd	a3,16(sp)
    8001f600:	00000097          	auipc	ra,0x0
    8001f604:	ed0080e7          	jalr	-304(ra) # 8001f4d0 <_ZN9allocator9BuddyInfo13get_alloc_mut17h841c53787652c18dE>
    8001f608:	e42a                	sd	a0,8(sp)
    8001f60a:	a009                	j	8001f60c <_ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E+0x2a>
    8001f60c:	6522                	ld	a0,8(sp)
    8001f60e:	65e2                	ld	a1,24(sp)
    8001f610:	6642                	ld	a2,16(sp)
    8001f612:	00000097          	auipc	ra,0x0
    8001f616:	2ca080e7          	jalr	714(ra) # 8001f8dc <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7set_bit17hae7f7de94a09632eE>
    8001f61a:	a009                	j	8001f61c <_ZN9allocator9BuddyInfo9alloc_set17ha6db0b6b2370f5b9E+0x3a>
    }
    8001f61c:	60a6                	ld	ra,72(sp)
    8001f61e:	6161                	addi	sp,sp,80
    8001f620:	8082                	ret

Disassembly of section .text._ZN9allocator9BuddyInfo9split_set17h162917f508718dbfE:

000000008001f622 <_ZN9allocator9BuddyInfo9split_set17h162917f508718dbfE>:

    fn split_set(&mut self, index: usize, set_or_clear: bool) {
    8001f622:	715d                	addi	sp,sp,-80
    8001f624:	e486                	sd	ra,72(sp)
    8001f626:	86b2                	mv	a3,a2
    8001f628:	f02a                	sd	a0,32(sp)
    8001f62a:	f42e                	sd	a1,40(sp)
    8001f62c:	02c10ba3          	sb	a2,55(sp)
        let i1 = index / 8;
    8001f630:	0035d613          	srli	a2,a1,0x3
    8001f634:	fc32                	sd	a2,56(sp)
        let i2 = index % 8;
    8001f636:	899d                	andi	a1,a1,7
    8001f638:	e0ae                	sd	a1,64(sp)
        unsafe { self.get_split_mut(i1).set_bit(i2, set_or_clear); }
    8001f63a:	ec2e                	sd	a1,24(sp)
    8001f63c:	85b2                	mv	a1,a2
    8001f63e:	e836                	sd	a3,16(sp)
    8001f640:	00000097          	auipc	ra,0x0
    8001f644:	f46080e7          	jalr	-186(ra) # 8001f586 <_ZN9allocator9BuddyInfo13get_split_mut17h56b03e203971e6b9E>
    8001f648:	e42a                	sd	a0,8(sp)
    8001f64a:	a009                	j	8001f64c <_ZN9allocator9BuddyInfo9split_set17h162917f508718dbfE+0x2a>
    8001f64c:	6522                	ld	a0,8(sp)
    8001f64e:	65e2                	ld	a1,24(sp)
    8001f650:	6642                	ld	a2,16(sp)
    8001f652:	00000097          	auipc	ra,0x0
    8001f656:	28a080e7          	jalr	650(ra) # 8001f8dc <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7set_bit17hae7f7de94a09632eE>
    8001f65a:	a009                	j	8001f65c <_ZN9allocator9BuddyInfo9split_set17h162917f508718dbfE+0x3a>
    }
    8001f65c:	60a6                	ld	ra,72(sp)
    8001f65e:	6161                	addi	sp,sp,80
    8001f660:	8082                	ret

Disassembly of section .text._ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E:

000000008001f662 <_ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E>:

    fn is_alloc_set(&self, index: usize) -> bool {
    8001f662:	7139                	addi	sp,sp,-64
    8001f664:	fc06                	sd	ra,56(sp)
    8001f666:	ec2a                	sd	a0,24(sp)
    8001f668:	f02e                	sd	a1,32(sp)
        let i1 = index / 8;
    8001f66a:	0035d613          	srli	a2,a1,0x3
    8001f66e:	f432                	sd	a2,40(sp)
        let i2 = index % 8;
    8001f670:	899d                	andi	a1,a1,7
    8001f672:	f82e                	sd	a1,48(sp)
        unsafe { self.get_alloc(i1).get_bit(i2) }
    8001f674:	e82e                	sd	a1,16(sp)
    8001f676:	85b2                	mv	a1,a2
    8001f678:	00000097          	auipc	ra,0x0
    8001f67c:	dfe080e7          	jalr	-514(ra) # 8001f476 <_ZN9allocator9BuddyInfo9get_alloc17hc3d3b496184422adE>
    8001f680:	e42a                	sd	a0,8(sp)
    8001f682:	a009                	j	8001f684 <_ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E+0x22>
    8001f684:	6522                	ld	a0,8(sp)
    8001f686:	65c2                	ld	a1,16(sp)
    8001f688:	00000097          	auipc	ra,0x0
    8001f68c:	1d4080e7          	jalr	468(ra) # 8001f85c <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7get_bit17he52c864e565dd04cE>
    8001f690:	e02a                	sd	a0,0(sp)
    8001f692:	a009                	j	8001f694 <_ZN9allocator9BuddyInfo12is_alloc_set17h7c7ba381a2fde199E+0x32>
    }
    8001f694:	6502                	ld	a0,0(sp)
    8001f696:	70e2                	ld	ra,56(sp)
    8001f698:	6121                	addi	sp,sp,64
    8001f69a:	8082                	ret

Disassembly of section .text._ZN9allocator9BuddyInfo12is_split_set17hc01fa2399d2c9ea8E:

000000008001f69c <_ZN9allocator9BuddyInfo12is_split_set17hc01fa2399d2c9ea8E>:

    fn is_split_set(&self, index: usize) -> bool {
    8001f69c:	7139                	addi	sp,sp,-64
    8001f69e:	fc06                	sd	ra,56(sp)
    8001f6a0:	ec2a                	sd	a0,24(sp)
    8001f6a2:	f02e                	sd	a1,32(sp)
        let i1 = index / 8;
    8001f6a4:	0035d613          	srli	a2,a1,0x3
    8001f6a8:	f432                	sd	a2,40(sp)
        let i2 = index % 8;
    8001f6aa:	899d                	andi	a1,a1,7
    8001f6ac:	f82e                	sd	a1,48(sp)
        unsafe { self.get_split(i1).get_bit(i2) }
    8001f6ae:	e82e                	sd	a1,16(sp)
    8001f6b0:	85b2                	mv	a1,a2
    8001f6b2:	00000097          	auipc	ra,0x0
    8001f6b6:	e78080e7          	jalr	-392(ra) # 8001f52a <_ZN9allocator9BuddyInfo9get_split17heecd58b5cef839bfE>
    8001f6ba:	e42a                	sd	a0,8(sp)
    8001f6bc:	a009                	j	8001f6be <_ZN9allocator9BuddyInfo12is_split_set17hc01fa2399d2c9ea8E+0x22>
    8001f6be:	6522                	ld	a0,8(sp)
    8001f6c0:	65c2                	ld	a1,16(sp)
    8001f6c2:	00000097          	auipc	ra,0x0
    8001f6c6:	19a080e7          	jalr	410(ra) # 8001f85c <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7get_bit17he52c864e565dd04cE>
    8001f6ca:	e02a                	sd	a0,0(sp)
    8001f6cc:	a009                	j	8001f6ce <_ZN9allocator9BuddyInfo12is_split_set17hc01fa2399d2c9ea8E+0x32>
    }
    8001f6ce:	6502                	ld	a0,0(sp)
    8001f6d0:	70e2                	ld	ra,56(sp)
    8001f6d2:	6121                	addi	sp,sp,64
    8001f6d4:	8082                	ret

Disassembly of section .text._ZN9allocator8round_up17hace079d84f0703acE:

000000008001f6d6 <_ZN9allocator8round_up17hace079d84f0703acE>:
    ptr::write_bytes(raw_ptr, 0, len);
    ptr::slice_from_raw_parts_mut(raw_ptr, len)
}

#[inline]
fn round_up(n: usize, size: usize) -> usize {
    8001f6d6:	7179                	addi	sp,sp,-48
    8001f6d8:	f02a                	sd	a0,32(sp)
    8001f6da:	f42e                	sd	a1,40(sp)
    (((n-1)/size)+1)*size
    8001f6dc:	fff50613          	addi	a2,a0,-1
    8001f6e0:	ec2e                	sd	a1,24(sp)
    8001f6e2:	e832                	sd	a2,16(sp)
    8001f6e4:	04c56163          	bltu	a0,a2,8001f726 <.LBB25_9>
    8001f6e8:	a009                	j	8001f6ea <_ZN9allocator8round_up17hace079d84f0703acE+0x14>
    8001f6ea:	4501                	li	a0,0
    8001f6ec:	65e2                	ld	a1,24(sp)
    8001f6ee:	04a58b63          	beq	a1,a0,8001f744 <.LBB25_11>
    8001f6f2:	a009                	j	8001f6f4 <_ZN9allocator8round_up17hace079d84f0703acE+0x1e>
    8001f6f4:	6542                	ld	a0,16(sp)
    8001f6f6:	65e2                	ld	a1,24(sp)
    8001f6f8:	02b55633          	divu	a2,a0,a1
    8001f6fc:	00160693          	addi	a3,a2,1
    8001f700:	e436                	sd	a3,8(sp)
    8001f702:	04c6ef63          	bltu	a3,a2,8001f760 <.LBB25_13>
    8001f706:	a009                	j	8001f708 <_ZN9allocator8round_up17hace079d84f0703acE+0x32>
    8001f708:	6522                	ld	a0,8(sp)
    8001f70a:	65e2                	ld	a1,24(sp)
    8001f70c:	02b50533          	mul	a0,a0,a1
    8001f710:	6622                	ld	a2,8(sp)
    8001f712:	02b636b3          	mulhu	a3,a2,a1
    8001f716:	4701                	li	a4,0
    8001f718:	e02a                	sd	a0,0(sp)
    8001f71a:	06e69163          	bne	a3,a4,8001f77c <.LBB25_15>
    8001f71e:	a009                	j	8001f720 <_ZN9allocator8round_up17hace079d84f0703acE+0x4a>
}
    8001f720:	6502                	ld	a0,0(sp)
    8001f722:	6145                	addi	sp,sp,48
    8001f724:	8082                	ret

000000008001f726 <.LBB25_9>:
    (((n-1)/size)+1)*size
    8001f726:	0000a517          	auipc	a0,0xa
    8001f72a:	faa50513          	addi	a0,a0,-86 # 800296d0 <str.0>

000000008001f72e <.LBB25_10>:
    8001f72e:	0000a617          	auipc	a2,0xa
    8001f732:	69a60613          	addi	a2,a2,1690 # 80029dc8 <.L__unnamed_60>
    8001f736:	02100593          	li	a1,33
    8001f73a:	00001097          	auipc	ra,0x1
    8001f73e:	590080e7          	jalr	1424(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f744 <.LBB25_11>:
    8001f744:	0000a517          	auipc	a0,0xa
    8001f748:	ffc50513          	addi	a0,a0,-4 # 80029740 <str.1>

000000008001f74c <.LBB25_12>:
    8001f74c:	0000a617          	auipc	a2,0xa
    8001f750:	69460613          	addi	a2,a2,1684 # 80029de0 <.L__unnamed_61>
    8001f754:	45e5                	li	a1,25
    8001f756:	00001097          	auipc	ra,0x1
    8001f75a:	574080e7          	jalr	1396(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f760 <.LBB25_13>:
    8001f760:	0000a517          	auipc	a0,0xa
    8001f764:	02050513          	addi	a0,a0,32 # 80029780 <str.2>

000000008001f768 <.LBB25_14>:
    8001f768:	0000a617          	auipc	a2,0xa
    8001f76c:	69060613          	addi	a2,a2,1680 # 80029df8 <.L__unnamed_62>
    8001f770:	45f1                	li	a1,28
    8001f772:	00001097          	auipc	ra,0x1
    8001f776:	558080e7          	jalr	1368(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f77c <.LBB25_15>:
    8001f77c:	0000a517          	auipc	a0,0xa
    8001f780:	59450513          	addi	a0,a0,1428 # 80029d10 <str.5>

000000008001f784 <.LBB25_16>:
    8001f784:	0000a617          	auipc	a2,0xa
    8001f788:	67460613          	addi	a2,a2,1652 # 80029df8 <.L__unnamed_62>
    8001f78c:	02100593          	li	a1,33
    8001f790:	00001097          	auipc	ra,0x1
    8001f794:	53a080e7          	jalr	1338(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator10round_down17h96dedef5b7d39639E:

000000008001f79a <_ZN9allocator10round_down17h96dedef5b7d39639E>:

#[inline]
fn round_down(n: usize, size: usize) -> usize {
    8001f79a:	7179                	addi	sp,sp,-48
    8001f79c:	f02a                	sd	a0,32(sp)
    8001f79e:	f42e                	sd	a1,40(sp)
    8001f7a0:	4601                	li	a2,0
    (n/size)*size
    8001f7a2:	ec2e                	sd	a1,24(sp)
    8001f7a4:	e82a                	sd	a0,16(sp)
    8001f7a6:	02c58363          	beq	a1,a2,8001f7cc <.LBB26_5>
    8001f7aa:	a009                	j	8001f7ac <_ZN9allocator10round_down17h96dedef5b7d39639E+0x12>
    8001f7ac:	6542                	ld	a0,16(sp)
    8001f7ae:	65e2                	ld	a1,24(sp)
    8001f7b0:	02b55633          	divu	a2,a0,a1
    8001f7b4:	02b60533          	mul	a0,a2,a1
    8001f7b8:	02b63633          	mulhu	a2,a2,a1
    8001f7bc:	4681                	li	a3,0
    8001f7be:	e42a                	sd	a0,8(sp)
    8001f7c0:	02d61463          	bne	a2,a3,8001f7e8 <.LBB26_7>
    8001f7c4:	a009                	j	8001f7c6 <_ZN9allocator10round_down17h96dedef5b7d39639E+0x2c>
}
    8001f7c6:	6522                	ld	a0,8(sp)
    8001f7c8:	6145                	addi	sp,sp,48
    8001f7ca:	8082                	ret

000000008001f7cc <.LBB26_5>:
    (n/size)*size
    8001f7cc:	0000a517          	auipc	a0,0xa
    8001f7d0:	f7450513          	addi	a0,a0,-140 # 80029740 <str.1>

000000008001f7d4 <.LBB26_6>:
    8001f7d4:	0000a617          	auipc	a2,0xa
    8001f7d8:	63c60613          	addi	a2,a2,1596 # 80029e10 <.L__unnamed_63>
    8001f7dc:	45e5                	li	a1,25
    8001f7de:	00001097          	auipc	ra,0x1
    8001f7e2:	4ec080e7          	jalr	1260(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f7e8 <.LBB26_7>:
    8001f7e8:	0000a517          	auipc	a0,0xa
    8001f7ec:	52850513          	addi	a0,a0,1320 # 80029d10 <str.5>

000000008001f7f0 <.LBB26_8>:
    8001f7f0:	0000a617          	auipc	a2,0xa
    8001f7f4:	62060613          	addi	a2,a2,1568 # 80029e10 <.L__unnamed_63>
    8001f7f8:	02100593          	li	a1,33
    8001f7fc:	00001097          	auipc	ra,0x1
    8001f800:	4ce080e7          	jalr	1230(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator4log217h5622e82ab19455b8E:

000000008001f806 <_ZN9allocator4log217h5622e82ab19455b8E>:

fn log2(mut n: usize) -> usize {
    8001f806:	1101                	addi	sp,sp,-32
    8001f808:	e82a                	sd	a0,16(sp)
    8001f80a:	4501                	li	a0,0
    let mut k = 0;
    8001f80c:	ec2a                	sd	a0,24(sp)
    while n > 1 {
    8001f80e:	a009                	j	8001f810 <_ZN9allocator4log217h5622e82ab19455b8E+0xa>
    8001f810:	6542                	ld	a0,16(sp)
    8001f812:	4585                	li	a1,1
    8001f814:	00a5e663          	bltu	a1,a0,8001f820 <_ZN9allocator4log217h5622e82ab19455b8E+0x1a>
    8001f818:	a009                	j	8001f81a <_ZN9allocator4log217h5622e82ab19455b8E+0x14>
        k += 1;
        n >>= 1;
    }
    k
}
    8001f81a:	6562                	ld	a0,24(sp)
    8001f81c:	6105                	addi	sp,sp,32
    8001f81e:	8082                	ret
        k += 1;
    8001f820:	6562                	ld	a0,24(sp)
    8001f822:	00150593          	addi	a1,a0,1
    8001f826:	e42e                	sd	a1,8(sp)
    8001f828:	00a5ec63          	bltu	a1,a0,8001f840 <.LBB27_7>
    8001f82c:	a009                	j	8001f82e <_ZN9allocator4log217h5622e82ab19455b8E+0x28>
    8001f82e:	6522                	ld	a0,8(sp)
    8001f830:	ec2a                	sd	a0,24(sp)
        n >>= 1;
    8001f832:	65c2                	ld	a1,16(sp)
    8001f834:	8185                	srli	a1,a1,0x1
    8001f836:	e02e                	sd	a1,0(sp)
    8001f838:	a009                	j	8001f83a <_ZN9allocator4log217h5622e82ab19455b8E+0x34>
    8001f83a:	6502                	ld	a0,0(sp)
    8001f83c:	e82a                	sd	a0,16(sp)
    while n > 1 {
    8001f83e:	bfc9                	j	8001f810 <_ZN9allocator4log217h5622e82ab19455b8E+0xa>

000000008001f840 <.LBB27_7>:
        k += 1;
    8001f840:	0000a517          	auipc	a0,0xa
    8001f844:	f4050513          	addi	a0,a0,-192 # 80029780 <str.2>

000000008001f848 <.LBB27_8>:
    8001f848:	0000a617          	auipc	a2,0xa
    8001f84c:	5e060613          	addi	a2,a2,1504 # 80029e28 <.L__unnamed_64>
    8001f850:	45f1                	li	a1,28
    8001f852:	00001097          	auipc	ra,0x1
    8001f856:	478080e7          	jalr	1144(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7get_bit17he52c864e565dd04cE:

000000008001f85c <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7get_bit17he52c864e565dd04cE>:
            fn get_bit(&self, bit: usize) -> bool {
    8001f85c:	7179                	addi	sp,sp,-48
    8001f85e:	f02a                	sd	a0,32(sp)
    8001f860:	f42e                	sd	a1,40(sp)
    8001f862:	4621                	li	a2,8
                assert!(bit < Self::BIT_LENGTH);
    8001f864:	ec2e                	sd	a1,24(sp)
    8001f866:	e82a                	sd	a0,16(sp)
    8001f868:	02c5e263          	bltu	a1,a2,8001f88c <.LBB0_6+0x16>
    8001f86c:	a009                	j	8001f86e <.LBB0_5>

000000008001f86e <.LBB0_5>:
    8001f86e:	0000a517          	auipc	a0,0xa
    8001f872:	5d250513          	addi	a0,a0,1490 # 80029e40 <.L__unnamed_1>

000000008001f876 <.LBB0_6>:
    8001f876:	0000a617          	auipc	a2,0xa
    8001f87a:	65260613          	addi	a2,a2,1618 # 80029ec8 <.L__unnamed_2>
    8001f87e:	02800593          	li	a1,40
    8001f882:	00001097          	auipc	ra,0x1
    8001f886:	448080e7          	jalr	1096(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001f88a:	0000                	unimp
                (*self & (1 << bit)) != 0
    8001f88c:	6542                	ld	a0,16(sp)
    8001f88e:	00054583          	lbu	a1,0(a0)
    8001f892:	6662                	ld	a2,24(sp)
    8001f894:	ff867693          	andi	a3,a2,-8
    8001f898:	00767713          	andi	a4,a2,7
    8001f89c:	4785                	li	a5,1
    8001f89e:	00e79733          	sll	a4,a5,a4
    8001f8a2:	4781                	li	a5,0
    8001f8a4:	e42e                	sd	a1,8(sp)
    8001f8a6:	e03a                	sd	a4,0(sp)
    8001f8a8:	00f69b63          	bne	a3,a5,8001f8be <.LBB0_7>
    8001f8ac:	a009                	j	8001f8ae <.LBB0_6+0x38>
    8001f8ae:	6522                	ld	a0,8(sp)
    8001f8b0:	6582                	ld	a1,0(sp)
    8001f8b2:	00b57633          	and	a2,a0,a1
    8001f8b6:	00c03533          	snez	a0,a2
            }
    8001f8ba:	6145                	addi	sp,sp,48
    8001f8bc:	8082                	ret

000000008001f8be <.LBB0_7>:
                (*self & (1 << bit)) != 0
    8001f8be:	0000a517          	auipc	a0,0xa
    8001f8c2:	62250513          	addi	a0,a0,1570 # 80029ee0 <str.0>

000000008001f8c6 <.LBB0_8>:
    8001f8c6:	0000a617          	auipc	a2,0xa
    8001f8ca:	60260613          	addi	a2,a2,1538 # 80029ec8 <.L__unnamed_2>
    8001f8ce:	02300593          	li	a1,35
    8001f8d2:	00001097          	auipc	ra,0x1
    8001f8d6:	3f8080e7          	jalr	1016(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7set_bit17hae7f7de94a09632eE:

000000008001f8dc <_ZN42_$LT$u8$u20$as$u20$bit_field..BitField$GT$7set_bit17hae7f7de94a09632eE>:
            fn set_bit(&mut self, bit: usize, value: bool) -> &mut Self {
    8001f8dc:	7139                	addi	sp,sp,-64
    8001f8de:	86b2                	mv	a3,a2
    8001f8e0:	f42a                	sd	a0,40(sp)
    8001f8e2:	f82e                	sd	a1,48(sp)
    8001f8e4:	02c10fa3          	sb	a2,63(sp)
    8001f8e8:	4621                	li	a2,8
                assert!(bit < Self::BIT_LENGTH);
    8001f8ea:	f02e                	sd	a1,32(sp)
    8001f8ec:	ec2a                	sd	a0,24(sp)
    8001f8ee:	e836                	sd	a3,16(sp)
    8001f8f0:	02c5e263          	bltu	a1,a2,8001f914 <.LBB1_11+0x16>
    8001f8f4:	a009                	j	8001f8f6 <.LBB1_10>

000000008001f8f6 <.LBB1_10>:
    8001f8f6:	0000a517          	auipc	a0,0xa
    8001f8fa:	54a50513          	addi	a0,a0,1354 # 80029e40 <.L__unnamed_1>

000000008001f8fe <.LBB1_11>:
    8001f8fe:	0000a617          	auipc	a2,0xa
    8001f902:	5ca60613          	addi	a2,a2,1482 # 80029ec8 <.L__unnamed_2>
    8001f906:	02800593          	li	a1,40
    8001f90a:	00001097          	auipc	ra,0x1
    8001f90e:	3c0080e7          	jalr	960(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8001f912:	0000                	unimp
    8001f914:	4501                	li	a0,0
                if value {
    8001f916:	65c2                	ld	a1,16(sp)
    8001f918:	02a58063          	beq	a1,a0,8001f938 <.LBB1_11+0x3a>
    8001f91c:	a009                	j	8001f91e <.LBB1_11+0x20>
                    *self |= 1 << bit;
    8001f91e:	7502                	ld	a0,32(sp)
    8001f920:	ff857593          	andi	a1,a0,-8
    8001f924:	00757613          	andi	a2,a0,7
    8001f928:	4685                	li	a3,1
    8001f92a:	00c69633          	sll	a2,a3,a2
    8001f92e:	4681                	li	a3,0
    8001f930:	e432                	sd	a2,8(sp)
    8001f932:	04d59563          	bne	a1,a3,8001f97c <.LBB1_12>
    8001f936:	a831                	j	8001f952 <.LBB1_11+0x54>
                    *self &= !(1 << bit);
    8001f938:	7502                	ld	a0,32(sp)
    8001f93a:	ff857593          	andi	a1,a0,-8
    8001f93e:	00757613          	andi	a2,a0,7
    8001f942:	4685                	li	a3,1
    8001f944:	00c69633          	sll	a2,a3,a2
    8001f948:	4681                	li	a3,0
    8001f94a:	e032                	sd	a2,0(sp)
    8001f94c:	04d59763          	bne	a1,a3,8001f99a <.LBB1_14>
    8001f950:	a809                	j	8001f962 <.LBB1_11+0x64>
                    *self |= 1 << bit;
    8001f952:	6562                	ld	a0,24(sp)
    8001f954:	00050583          	lb	a1,0(a0)
    8001f958:	6622                	ld	a2,8(sp)
    8001f95a:	8dd1                	or	a1,a1,a2
    8001f95c:	00b50023          	sb	a1,0(a0)
                if value {
    8001f960:	a819                	j	8001f976 <.LBB1_11+0x78>
                    *self &= !(1 << bit);
    8001f962:	6502                	ld	a0,0(sp)
    8001f964:	fff54593          	not	a1,a0
    8001f968:	6662                	ld	a2,24(sp)
    8001f96a:	00060683          	lb	a3,0(a2)
    8001f96e:	8df5                	and	a1,a1,a3
    8001f970:	00b60023          	sb	a1,0(a2)
                if value {
    8001f974:	a009                	j	8001f976 <.LBB1_11+0x78>
            }
    8001f976:	6562                	ld	a0,24(sp)
    8001f978:	6121                	addi	sp,sp,64
    8001f97a:	8082                	ret

000000008001f97c <.LBB1_12>:
                    *self |= 1 << bit;
    8001f97c:	0000a517          	auipc	a0,0xa
    8001f980:	56450513          	addi	a0,a0,1380 # 80029ee0 <str.0>

000000008001f984 <.LBB1_13>:
    8001f984:	0000a617          	auipc	a2,0xa
    8001f988:	54460613          	addi	a2,a2,1348 # 80029ec8 <.L__unnamed_2>
    8001f98c:	02300593          	li	a1,35
    8001f990:	00001097          	auipc	ra,0x1
    8001f994:	33a080e7          	jalr	826(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001f99a <.LBB1_14>:
                    *self &= !(1 << bit);
    8001f99a:	0000a517          	auipc	a0,0xa
    8001f99e:	54650513          	addi	a0,a0,1350 # 80029ee0 <str.0>

000000008001f9a2 <.LBB1_15>:
    8001f9a2:	0000a617          	auipc	a2,0xa
    8001f9a6:	52660613          	addi	a2,a2,1318 # 80029ec8 <.L__unnamed_2>
    8001f9aa:	02300593          	li	a1,35
    8001f9ae:	00001097          	auipc	ra,0x1
    8001f9b2:	31c080e7          	jalr	796(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E:

000000008001f9b8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E>:
    8001f9b8:	1101                	addi	sp,sp,-32
    8001f9ba:	ec06                	sd	ra,24(sp)
    8001f9bc:	e42a                	sd	a0,8(sp)
    8001f9be:	e82e                	sd	a1,16(sp)
    8001f9c0:	6108                	ld	a0,0(a0)
    8001f9c2:	00001097          	auipc	ra,0x1
    8001f9c6:	9c0080e7          	jalr	-1600(ra) # 80020382 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E>
    8001f9ca:	e02a                	sd	a0,0(sp)
    8001f9cc:	a009                	j	8001f9ce <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha2b67469d6803096E+0x16>
    8001f9ce:	6502                	ld	a0,0(sp)
    8001f9d0:	60e2                	ld	ra,24(sp)
    8001f9d2:	6105                	addi	sp,sp,32
    8001f9d4:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E:

000000008001f9d6 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    8001f9d6:	715d                	addi	sp,sp,-80
    8001f9d8:	f82a                	sd	a0,48(sp)
    8001f9da:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    8001f9dc:	e0ae                	sd	a1,64(sp)
    8001f9de:	ec2a                	sd	a0,24(sp)
    8001f9e0:	e82e                	sd	a1,16(sp)
    8001f9e2:	a009                	j	8001f9e4 <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E+0xe>
    8001f9e4:	6562                	ld	a0,24(sp)
    8001f9e6:	e4aa                	sd	a0,72(sp)
    8001f9e8:	e42a                	sd	a0,8(sp)
    8001f9ea:	a009                	j	8001f9ec <_ZN4core3fmt10ArgumentV13new17h6074d370ee32e350E+0x16>
    8001f9ec:	6522                	ld	a0,8(sp)
    8001f9ee:	f02a                	sd	a0,32(sp)
    8001f9f0:	65c2                	ld	a1,16(sp)
    8001f9f2:	f42e                	sd	a1,40(sp)
    }
    8001f9f4:	6161                	addi	sp,sp,80
    8001f9f6:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h75a66497ffff3272E:

000000008001f9f8 <_ZN4core3fmt10ArgumentV13new17h75a66497ffff3272E>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    8001f9f8:	715d                	addi	sp,sp,-80
    8001f9fa:	f82a                	sd	a0,48(sp)
    8001f9fc:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    8001f9fe:	e0ae                	sd	a1,64(sp)
    8001fa00:	ec2a                	sd	a0,24(sp)
    8001fa02:	e82e                	sd	a1,16(sp)
    8001fa04:	a009                	j	8001fa06 <_ZN4core3fmt10ArgumentV13new17h75a66497ffff3272E+0xe>
    8001fa06:	6562                	ld	a0,24(sp)
    8001fa08:	e4aa                	sd	a0,72(sp)
    8001fa0a:	e42a                	sd	a0,8(sp)
    8001fa0c:	a009                	j	8001fa0e <_ZN4core3fmt10ArgumentV13new17h75a66497ffff3272E+0x16>
    8001fa0e:	6522                	ld	a0,8(sp)
    8001fa10:	f02a                	sd	a0,32(sp)
    8001fa12:	65c2                	ld	a1,16(sp)
    8001fa14:	f42e                	sd	a1,40(sp)
    }
    8001fa16:	6161                	addi	sp,sp,80
    8001fa18:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17hceac915837d793e3E:

000000008001fa1a <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    8001fa1a:	715d                	addi	sp,sp,-80
    8001fa1c:	f82a                	sd	a0,48(sp)
    8001fa1e:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    8001fa20:	e0ae                	sd	a1,64(sp)
    8001fa22:	ec2a                	sd	a0,24(sp)
    8001fa24:	e82e                	sd	a1,16(sp)
    8001fa26:	a009                	j	8001fa28 <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E+0xe>
    8001fa28:	6562                	ld	a0,24(sp)
    8001fa2a:	e4aa                	sd	a0,72(sp)
    8001fa2c:	e42a                	sd	a0,8(sp)
    8001fa2e:	a009                	j	8001fa30 <_ZN4core3fmt10ArgumentV13new17hceac915837d793e3E+0x16>
    8001fa30:	6522                	ld	a0,8(sp)
    8001fa32:	f02a                	sd	a0,32(sp)
    8001fa34:	65c2                	ld	a1,16(sp)
    8001fa36:	f42e                	sd	a1,40(sp)
    }
    8001fa38:	6161                	addi	sp,sp,80
    8001fa3a:	8082                	ret

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE:

000000008001fa3c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE>:
    fn next(&mut self) -> Option<A> {
    8001fa3c:	715d                	addi	sp,sp,-80
    8001fa3e:	e486                	sd	ra,72(sp)
    8001fa40:	fc2a                	sd	a0,56(sp)
        if self.start < self.end {
    8001fa42:	00850593          	addi	a1,a0,8
    8001fa46:	f02a                	sd	a0,32(sp)
    8001fa48:	00000097          	auipc	ra,0x0
    8001fa4c:	0ce080e7          	jalr	206(ra) # 8001fb16 <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h7aa2a58ee4572bb5E>
    8001fa50:	ec2a                	sd	a0,24(sp)
    8001fa52:	a009                	j	8001fa54 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x18>
    8001fa54:	4501                	li	a0,0
    8001fa56:	65e2                	ld	a1,24(sp)
    8001fa58:	00a58a63          	beq	a1,a0,8001fa6c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x30>
    8001fa5c:	a009                	j	8001fa5e <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x22>
            let n = unsafe { Step::forward_unchecked(self.start.clone(), 1) };
    8001fa5e:	7502                	ld	a0,32(sp)
    8001fa60:	00001097          	auipc	ra,0x1
    8001fa64:	d68080e7          	jalr	-664(ra) # 800207c8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17heef8476ef7136551E>
    8001fa68:	e82a                	sd	a0,16(sp)
    8001fa6a:	a021                	j	8001fa72 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x36>
    8001fa6c:	4501                	li	a0,0
            None
    8001fa6e:	f42a                	sd	a0,40(sp)
        if self.start < self.end {
    8001fa70:	a805                	j	8001faa0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x64>
    8001fa72:	4585                	li	a1,1
            let n = unsafe { Step::forward_unchecked(self.start.clone(), 1) };
    8001fa74:	6542                	ld	a0,16(sp)
    8001fa76:	00000097          	auipc	ra,0x0
    8001fa7a:	03e080e7          	jalr	62(ra) # 8001fab4 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h03330afbf69a462aE>
    8001fa7e:	85aa                	mv	a1,a0
    8001fa80:	e0aa                	sd	a0,64(sp)
    8001fa82:	e42e                	sd	a1,8(sp)
    8001fa84:	a009                	j	8001fa86 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x4a>
            Some(mem::replace(&mut self.start, n))
    8001fa86:	7502                	ld	a0,32(sp)
    8001fa88:	65a2                	ld	a1,8(sp)
    8001fa8a:	00000097          	auipc	ra,0x0
    8001fa8e:	614080e7          	jalr	1556(ra) # 8002009e <_ZN4core3mem7replace17h3fd89486113d7373E>
    8001fa92:	e02a                	sd	a0,0(sp)
    8001fa94:	a009                	j	8001fa96 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x5a>
    8001fa96:	6502                	ld	a0,0(sp)
    8001fa98:	f82a                	sd	a0,48(sp)
    8001fa9a:	4585                	li	a1,1
    8001fa9c:	f42e                	sd	a1,40(sp)
        if self.start < self.end {
    8001fa9e:	a009                	j	8001faa0 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17ha02fccad1cc457ffE+0x64>
    }
    8001faa0:	7522                	ld	a0,40(sp)
    8001faa2:	75c2                	ld	a1,48(sp)
    8001faa4:	60a6                	ld	ra,72(sp)
    8001faa6:	6161                	addi	sp,sp,80
    8001faa8:	8082                	ret

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E:

000000008001faaa <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h92e6aa52e7711fa6E>:
    fn into_iter(self) -> I {
    8001faaa:	1141                	addi	sp,sp,-16
    8001faac:	e02a                	sd	a0,0(sp)
    8001faae:	e42e                	sd	a1,8(sp)
    }
    8001fab0:	0141                	addi	sp,sp,16
    8001fab2:	8082                	ret

Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h03330afbf69a462aE:

000000008001fab4 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h03330afbf69a462aE>:
        unsafe fn forward_unchecked(start: Self, n: usize) -> Self {
    8001fab4:	1101                	addi	sp,sp,-32
    8001fab6:	ec06                	sd	ra,24(sp)
    8001fab8:	e42a                	sd	a0,8(sp)
    8001faba:	e82e                	sd	a1,16(sp)
            unsafe { start.unchecked_add(n as Self) }
    8001fabc:	00000097          	auipc	ra,0x0
    8001fac0:	0fe080e7          	jalr	254(ra) # 8001fbba <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h0cef8a5d05f2a8f9E>
    8001fac4:	e02a                	sd	a0,0(sp)
    8001fac6:	a009                	j	8001fac8 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h03330afbf69a462aE+0x14>
        }
    8001fac8:	6502                	ld	a0,0(sp)
    8001faca:	60e2                	ld	ra,24(sp)
    8001facc:	6105                	addi	sp,sp,32
    8001face:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E:

000000008001fad0 <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E>:
            }

            #[stable(feature = "rust1", since = "1.0.0")]
            impl Ord for $t {
                #[inline]
                fn cmp(&self, other: &$t) -> Ordering {
    8001fad0:	7179                	addi	sp,sp,-48
    8001fad2:	f02a                	sd	a0,32(sp)
    8001fad4:	f42e                	sd	a1,40(sp)
                    // The order here is important to generate more optimal assembly.
                    // See <https://github.com/rust-lang/rust/issues/63758> for more info.
                    if *self < *other { Less }
    8001fad6:	6110                	ld	a2,0(a0)
    8001fad8:	6194                	ld	a3,0(a1)
    8001fada:	e82e                	sd	a1,16(sp)
    8001fadc:	e42a                	sd	a0,8(sp)
    8001fade:	00d67863          	bgeu	a2,a3,8001faee <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x1e>
    8001fae2:	a009                	j	8001fae4 <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x14>
    8001fae4:	0ff00513          	li	a0,255
    8001fae8:	00a10fa3          	sb	a0,31(sp)
    8001faec:	a00d                	j	8001fb0e <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x3e>
                    else if *self == *other { Equal }
    8001faee:	6522                	ld	a0,8(sp)
    8001faf0:	610c                	ld	a1,0(a0)
    8001faf2:	6642                	ld	a2,16(sp)
    8001faf4:	6214                	ld	a3,0(a2)
    8001faf6:	00d59763          	bne	a1,a3,8001fb04 <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x34>
    8001fafa:	a009                	j	8001fafc <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x2c>
    8001fafc:	4501                	li	a0,0
    8001fafe:	00a10fa3          	sb	a0,31(sp)
    8001fb02:	a029                	j	8001fb0c <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x3c>
    8001fb04:	4505                	li	a0,1
                    else { Greater }
    8001fb06:	00a10fa3          	sb	a0,31(sp)
                    else if *self == *other { Equal }
    8001fb0a:	a009                	j	8001fb0c <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x3c>
                    if *self < *other { Less }
    8001fb0c:	a009                	j	8001fb0e <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E+0x3e>
                }
    8001fb0e:	01f10503          	lb	a0,31(sp)
    8001fb12:	6145                	addi	sp,sp,48
    8001fb14:	8082                	ret

Disassembly of section .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h7aa2a58ee4572bb5E:

000000008001fb16 <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h7aa2a58ee4572bb5E>:
                fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
    8001fb16:	1141                	addi	sp,sp,-16
    8001fb18:	e02a                	sd	a0,0(sp)
    8001fb1a:	e42e                	sd	a1,8(sp)
    8001fb1c:	6108                	ld	a0,0(a0)
    8001fb1e:	618c                	ld	a1,0(a1)
    8001fb20:	00b53533          	sltu	a0,a0,a1
    8001fb24:	0141                	addi	sp,sp,16
    8001fb26:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h33d8b55d33a5a7d5E:

000000008001fb28 <_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h33d8b55d33a5a7d5E>:
        pub const fn count_ones(self) -> u32 {
    8001fb28:	1101                	addi	sp,sp,-32
    8001fb2a:	e82a                	sd	a0,16(sp)
            intrinsics::ctpop(self as $ActualT) as u32
    8001fb2c:	00155593          	srli	a1,a0,0x1
    8001fb30:	05555637          	lui	a2,0x5555
    8001fb34:	5556061b          	addiw	a2,a2,1365
    8001fb38:	0632                	slli	a2,a2,0xc
    8001fb3a:	55560613          	addi	a2,a2,1365 # 5555555 <.Lline_table_start0+0x551d20e>
    8001fb3e:	0632                	slli	a2,a2,0xc
    8001fb40:	55560613          	addi	a2,a2,1365
    8001fb44:	0632                	slli	a2,a2,0xc
    8001fb46:	55560613          	addi	a2,a2,1365
    8001fb4a:	8df1                	and	a1,a1,a2
    8001fb4c:	8d0d                	sub	a0,a0,a1
    8001fb4e:	033335b7          	lui	a1,0x3333
    8001fb52:	3335859b          	addiw	a1,a1,819
    8001fb56:	05b2                	slli	a1,a1,0xc
    8001fb58:	33358593          	addi	a1,a1,819 # 3333333 <.Lline_table_start0+0x32fafec>
    8001fb5c:	05b2                	slli	a1,a1,0xc
    8001fb5e:	33358593          	addi	a1,a1,819
    8001fb62:	05b2                	slli	a1,a1,0xc
    8001fb64:	33358593          	addi	a1,a1,819
    8001fb68:	00b57633          	and	a2,a0,a1
    8001fb6c:	8109                	srli	a0,a0,0x2
    8001fb6e:	8d6d                	and	a0,a0,a1
    8001fb70:	9532                	add	a0,a0,a2
    8001fb72:	00455593          	srli	a1,a0,0x4
    8001fb76:	952e                	add	a0,a0,a1
    8001fb78:	00f0f5b7          	lui	a1,0xf0f
    8001fb7c:	0f15859b          	addiw	a1,a1,241
    8001fb80:	05b2                	slli	a1,a1,0xc
    8001fb82:	f0f58593          	addi	a1,a1,-241 # f0ef0f <.Lline_table_start0+0xed6bc8>
    8001fb86:	05b2                	slli	a1,a1,0xc
    8001fb88:	0f158593          	addi	a1,a1,241
    8001fb8c:	05b2                	slli	a1,a1,0xc
    8001fb8e:	f0f58593          	addi	a1,a1,-241
    8001fb92:	8d6d                	and	a0,a0,a1
    8001fb94:	010105b7          	lui	a1,0x1010
    8001fb98:	1015859b          	addiw	a1,a1,257
    8001fb9c:	05c2                	slli	a1,a1,0x10
    8001fb9e:	10158593          	addi	a1,a1,257 # 1010101 <.Lline_table_start0+0xfd7dba>
    8001fba2:	05c2                	slli	a1,a1,0x10
    8001fba4:	10158593          	addi	a1,a1,257
    8001fba8:	02b50533          	mul	a0,a0,a1
    8001fbac:	9161                	srli	a0,a0,0x38
    8001fbae:	ec2a                	sd	a0,24(sp)
    8001fbb0:	e42a                	sd	a0,8(sp)
    8001fbb2:	a009                	j	8001fbb4 <_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h33d8b55d33a5a7d5E+0x8c>
        }
    8001fbb4:	6522                	ld	a0,8(sp)
    8001fbb6:	6105                	addi	sp,sp,32
    8001fbb8:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h0cef8a5d05f2a8f9E:

000000008001fbba <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h0cef8a5d05f2a8f9E>:
        pub unsafe fn unchecked_add(self, rhs: Self) -> Self {
    8001fbba:	1101                	addi	sp,sp,-32
    8001fbbc:	e42a                	sd	a0,8(sp)
    8001fbbe:	e82e                	sd	a1,16(sp)
            unsafe { intrinsics::unchecked_add(self, rhs) }
    8001fbc0:	952e                	add	a0,a0,a1
    8001fbc2:	ec2a                	sd	a0,24(sp)
    8001fbc4:	e02a                	sd	a0,0(sp)
    8001fbc6:	a009                	j	8001fbc8 <_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h0cef8a5d05f2a8f9E+0xe>
        }
    8001fbc8:	6502                	ld	a0,0(sp)
    8001fbca:	6105                	addi	sp,sp,32
    8001fbcc:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$14trailing_zeros17h3df19012ce238149E:

000000008001fbce <_ZN4core3num23_$LT$impl$u20$usize$GT$14trailing_zeros17h3df19012ce238149E>:
        pub const fn trailing_zeros(self) -> u32 {
    8001fbce:	1101                	addi	sp,sp,-32
    8001fbd0:	e82a                	sd	a0,16(sp)
            intrinsics::cttz(self) as u32
    8001fbd2:	fff50593          	addi	a1,a0,-1
    8001fbd6:	fff54513          	not	a0,a0
    8001fbda:	8d6d                	and	a0,a0,a1
    8001fbdc:	00155593          	srli	a1,a0,0x1
    8001fbe0:	05555637          	lui	a2,0x5555
    8001fbe4:	5556061b          	addiw	a2,a2,1365
    8001fbe8:	0632                	slli	a2,a2,0xc
    8001fbea:	55560613          	addi	a2,a2,1365 # 5555555 <.Lline_table_start0+0x551d20e>
    8001fbee:	0632                	slli	a2,a2,0xc
    8001fbf0:	55560613          	addi	a2,a2,1365
    8001fbf4:	0632                	slli	a2,a2,0xc
    8001fbf6:	55560613          	addi	a2,a2,1365
    8001fbfa:	8df1                	and	a1,a1,a2
    8001fbfc:	8d0d                	sub	a0,a0,a1
    8001fbfe:	033335b7          	lui	a1,0x3333
    8001fc02:	3335859b          	addiw	a1,a1,819
    8001fc06:	05b2                	slli	a1,a1,0xc
    8001fc08:	33358593          	addi	a1,a1,819 # 3333333 <.Lline_table_start0+0x32fafec>
    8001fc0c:	05b2                	slli	a1,a1,0xc
    8001fc0e:	33358593          	addi	a1,a1,819
    8001fc12:	05b2                	slli	a1,a1,0xc
    8001fc14:	33358593          	addi	a1,a1,819
    8001fc18:	00b57633          	and	a2,a0,a1
    8001fc1c:	8109                	srli	a0,a0,0x2
    8001fc1e:	8d6d                	and	a0,a0,a1
    8001fc20:	9532                	add	a0,a0,a2
    8001fc22:	00455593          	srli	a1,a0,0x4
    8001fc26:	952e                	add	a0,a0,a1
    8001fc28:	00f0f5b7          	lui	a1,0xf0f
    8001fc2c:	0f15859b          	addiw	a1,a1,241
    8001fc30:	05b2                	slli	a1,a1,0xc
    8001fc32:	f0f58593          	addi	a1,a1,-241 # f0ef0f <.Lline_table_start0+0xed6bc8>
    8001fc36:	05b2                	slli	a1,a1,0xc
    8001fc38:	0f158593          	addi	a1,a1,241
    8001fc3c:	05b2                	slli	a1,a1,0xc
    8001fc3e:	f0f58593          	addi	a1,a1,-241
    8001fc42:	8d6d                	and	a0,a0,a1
    8001fc44:	010105b7          	lui	a1,0x1010
    8001fc48:	1015859b          	addiw	a1,a1,257
    8001fc4c:	05c2                	slli	a1,a1,0x10
    8001fc4e:	10158593          	addi	a1,a1,257 # 1010101 <.Lline_table_start0+0xfd7dba>
    8001fc52:	05c2                	slli	a1,a1,0x10
    8001fc54:	10158593          	addi	a1,a1,257
    8001fc58:	02b50533          	mul	a0,a0,a1
    8001fc5c:	9161                	srli	a0,a0,0x38
    8001fc5e:	ec2a                	sd	a0,24(sp)
    8001fc60:	e42a                	sd	a0,8(sp)
    8001fc62:	a009                	j	8001fc64 <_ZN4core3num23_$LT$impl$u20$usize$GT$14trailing_zeros17h3df19012ce238149E+0x96>
        }
    8001fc64:	6522                	ld	a0,8(sp)
    8001fc66:	6105                	addi	sp,sp,32
    8001fc68:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h2959b409ad428932E:

000000008001fc6a <_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h2959b409ad428932E>:
        pub const fn is_power_of_two(self) -> bool {
    8001fc6a:	1101                	addi	sp,sp,-32
    8001fc6c:	ec06                	sd	ra,24(sp)
    8001fc6e:	e82a                	sd	a0,16(sp)
            self.count_ones() == 1
    8001fc70:	00000097          	auipc	ra,0x0
    8001fc74:	eb8080e7          	jalr	-328(ra) # 8001fb28 <_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h33d8b55d33a5a7d5E>
    8001fc78:	e42a                	sd	a0,8(sp)
    8001fc7a:	a009                	j	8001fc7c <_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h2959b409ad428932E+0x12>
    8001fc7c:	6522                	ld	a0,8(sp)
    8001fc7e:	02051593          	slli	a1,a0,0x20
    8001fc82:	9181                	srli	a1,a1,0x20
    8001fc84:	15fd                	addi	a1,a1,-1
    8001fc86:	0015b513          	seqz	a0,a1
        }
    8001fc8a:	60e2                	ld	ra,24(sp)
    8001fc8c:	6105                	addi	sp,sp,32
    8001fc8e:	8082                	ret

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h4187d82bbc7d8c92E:

000000008001fc90 <_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h4187d82bbc7d8c92E>:
        pub const fn next_power_of_two(self) -> Self {
    8001fc90:	1101                	addi	sp,sp,-32
    8001fc92:	ec06                	sd	ra,24(sp)
    8001fc94:	e82a                	sd	a0,16(sp)
            self.one_less_than_next_power_of_two() + 1
    8001fc96:	00000097          	auipc	ra,0x0
    8001fc9a:	03e080e7          	jalr	62(ra) # 8001fcd4 <_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E>
    8001fc9e:	e42a                	sd	a0,8(sp)
    8001fca0:	a009                	j	8001fca2 <_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h4187d82bbc7d8c92E+0x12>
    8001fca2:	6522                	ld	a0,8(sp)
    8001fca4:	00150593          	addi	a1,a0,1
    8001fca8:	e02e                	sd	a1,0(sp)
    8001fcaa:	00a5e763          	bltu	a1,a0,8001fcb8 <.LBB4_4>
    8001fcae:	a009                	j	8001fcb0 <_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h4187d82bbc7d8c92E+0x20>
        }
    8001fcb0:	6502                	ld	a0,0(sp)
    8001fcb2:	60e2                	ld	ra,24(sp)
    8001fcb4:	6105                	addi	sp,sp,32
    8001fcb6:	8082                	ret

000000008001fcb8 <.LBB4_4>:
            self.one_less_than_next_power_of_two() + 1
    8001fcb8:	0000a517          	auipc	a0,0xa
    8001fcbc:	2d850513          	addi	a0,a0,728 # 80029f90 <str.0>

000000008001fcc0 <.LBB4_5>:
    8001fcc0:	0000a617          	auipc	a2,0xa
    8001fcc4:	2b860613          	addi	a2,a2,696 # 80029f78 <.L__unnamed_1>
    8001fcc8:	45f1                	li	a1,28
    8001fcca:	00001097          	auipc	ra,0x1
    8001fcce:	000080e7          	jalr	ra # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E:

000000008001fcd4 <_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E>:
        const fn one_less_than_next_power_of_two(self) -> Self {
    8001fcd4:	7139                	addi	sp,sp,-64
    8001fcd6:	f02a                	sd	a0,32(sp)
    8001fcd8:	4585                	li	a1,1
            if self <= 1 { return 0; }
    8001fcda:	e82a                	sd	a0,16(sp)
    8001fcdc:	00a5e663          	bltu	a1,a0,8001fce8 <_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E+0x14>
    8001fce0:	a009                	j	8001fce2 <_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E+0xe>
    8001fce2:	4501                	li	a0,0
    8001fce4:	ec2a                	sd	a0,24(sp)
        }
    8001fce6:	a0e1                	j	8001fdae <_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E+0xda>
            let p = self - 1;
    8001fce8:	6542                	ld	a0,16(sp)
    8001fcea:	fff50593          	addi	a1,a0,-1
    8001fcee:	f42e                	sd	a1,40(sp)
            let z = unsafe { intrinsics::ctlz_nonzero(p) };
    8001fcf0:	0015d613          	srli	a2,a1,0x1
    8001fcf4:	8dd1                	or	a1,a1,a2
    8001fcf6:	0025d613          	srli	a2,a1,0x2
    8001fcfa:	8dd1                	or	a1,a1,a2
    8001fcfc:	0045d613          	srli	a2,a1,0x4
    8001fd00:	8dd1                	or	a1,a1,a2
    8001fd02:	0085d613          	srli	a2,a1,0x8
    8001fd06:	8dd1                	or	a1,a1,a2
    8001fd08:	0105d613          	srli	a2,a1,0x10
    8001fd0c:	8dd1                	or	a1,a1,a2
    8001fd0e:	0205d613          	srli	a2,a1,0x20
    8001fd12:	8dd1                	or	a1,a1,a2
    8001fd14:	fff5c593          	not	a1,a1
    8001fd18:	0015d613          	srli	a2,a1,0x1
    8001fd1c:	055556b7          	lui	a3,0x5555
    8001fd20:	5556869b          	addiw	a3,a3,1365
    8001fd24:	06b2                	slli	a3,a3,0xc
    8001fd26:	55568693          	addi	a3,a3,1365 # 5555555 <.Lline_table_start0+0x551d20e>
    8001fd2a:	06b2                	slli	a3,a3,0xc
    8001fd2c:	55568693          	addi	a3,a3,1365
    8001fd30:	06b2                	slli	a3,a3,0xc
    8001fd32:	55568693          	addi	a3,a3,1365
    8001fd36:	8e75                	and	a2,a2,a3
    8001fd38:	8d91                	sub	a1,a1,a2
    8001fd3a:	03333637          	lui	a2,0x3333
    8001fd3e:	3336061b          	addiw	a2,a2,819
    8001fd42:	0632                	slli	a2,a2,0xc
    8001fd44:	33360613          	addi	a2,a2,819 # 3333333 <.Lline_table_start0+0x32fafec>
    8001fd48:	0632                	slli	a2,a2,0xc
    8001fd4a:	33360613          	addi	a2,a2,819
    8001fd4e:	0632                	slli	a2,a2,0xc
    8001fd50:	33360613          	addi	a2,a2,819
    8001fd54:	00c5f6b3          	and	a3,a1,a2
    8001fd58:	8189                	srli	a1,a1,0x2
    8001fd5a:	8df1                	and	a1,a1,a2
    8001fd5c:	95b6                	add	a1,a1,a3
    8001fd5e:	0045d613          	srli	a2,a1,0x4
    8001fd62:	95b2                	add	a1,a1,a2
    8001fd64:	00f0f637          	lui	a2,0xf0f
    8001fd68:	0f16061b          	addiw	a2,a2,241
    8001fd6c:	0632                	slli	a2,a2,0xc
    8001fd6e:	f0f60613          	addi	a2,a2,-241 # f0ef0f <.Lline_table_start0+0xed6bc8>
    8001fd72:	0632                	slli	a2,a2,0xc
    8001fd74:	0f160613          	addi	a2,a2,241
    8001fd78:	0632                	slli	a2,a2,0xc
    8001fd7a:	f0f60613          	addi	a2,a2,-241
    8001fd7e:	8df1                	and	a1,a1,a2
    8001fd80:	01010637          	lui	a2,0x1010
    8001fd84:	1016061b          	addiw	a2,a2,257
    8001fd88:	0642                	slli	a2,a2,0x10
    8001fd8a:	10160613          	addi	a2,a2,257 # 1010101 <.Lline_table_start0+0xfd7dba>
    8001fd8e:	0642                	slli	a2,a2,0x10
    8001fd90:	10160613          	addi	a2,a2,257
    8001fd94:	02c585b3          	mul	a1,a1,a2
    8001fd98:	91e1                	srli	a1,a1,0x38
    8001fd9a:	f82e                	sd	a1,48(sp)
    8001fd9c:	fc2e                	sd	a1,56(sp)
    8001fd9e:	e42e                	sd	a1,8(sp)
    8001fda0:	a009                	j	8001fda2 <_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E+0xce>
    8001fda2:	557d                	li	a0,-1
            <$SelfT>::MAX >> z
    8001fda4:	65a2                	ld	a1,8(sp)
    8001fda6:	00b55533          	srl	a0,a0,a1
    8001fdaa:	ec2a                	sd	a0,24(sp)
        }
    8001fdac:	a009                	j	8001fdae <_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h1a043d9b452c3e27E+0xda>
    8001fdae:	6562                	ld	a0,24(sp)
    8001fdb0:	6121                	addi	sp,sp,64
    8001fdb2:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h4ee230a8be0169edE:

000000008001fdb4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h4ee230a8be0169edE>:
    pub const unsafe fn add(self, count: usize) -> Self
    8001fdb4:	1101                	addi	sp,sp,-32
    8001fdb6:	ec06                	sd	ra,24(sp)
    8001fdb8:	e42a                	sd	a0,8(sp)
    8001fdba:	e82e                	sd	a1,16(sp)
        unsafe { self.offset(count as isize) }
    8001fdbc:	00000097          	auipc	ra,0x0
    8001fdc0:	060080e7          	jalr	96(ra) # 8001fe1c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h602a741a9381c8eaE>
    8001fdc4:	e02a                	sd	a0,0(sp)
    8001fdc6:	a009                	j	8001fdc8 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h4ee230a8be0169edE+0x14>
    }
    8001fdc8:	6502                	ld	a0,0(sp)
    8001fdca:	60e2                	ld	ra,24(sp)
    8001fdcc:	6105                	addi	sp,sp,32
    8001fdce:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hbdd1ff4f591d1bb1E:

000000008001fdd0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hbdd1ff4f591d1bb1E>:
    pub unsafe fn write(self, val: T)
    8001fdd0:	1101                	addi	sp,sp,-32
    8001fdd2:	ec06                	sd	ra,24(sp)
    8001fdd4:	e02a                	sd	a0,0(sp)
    8001fdd6:	e42e                	sd	a1,8(sp)
    8001fdd8:	e832                	sd	a2,16(sp)
        unsafe { write(self, val) }
    8001fdda:	00000097          	auipc	ra,0x0
    8001fdde:	770080e7          	jalr	1904(ra) # 8002054a <_ZN4core3ptr5write17h6f3779841722abe9E>
    8001fde2:	a009                	j	8001fde4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hbdd1ff4f591d1bb1E+0x14>
    }
    8001fde4:	60e2                	ld	ra,24(sp)
    8001fde6:	6105                	addi	sp,sp,32
    8001fde8:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E:

000000008001fdea <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    8001fdea:	7179                	addi	sp,sp,-48
    8001fdec:	f406                	sd	ra,40(sp)
    8001fdee:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    8001fdf0:	e82a                	sd	a0,16(sp)
    8001fdf2:	00000097          	auipc	ra,0x0
    8001fdf6:	046080e7          	jalr	70(ra) # 8001fe38 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd143962df68ba00fE>
    8001fdfa:	e42a                	sd	a0,8(sp)
    8001fdfc:	a009                	j	8001fdfe <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E+0x14>
    8001fdfe:	4501                	li	a0,0
    8001fe00:	65a2                	ld	a1,8(sp)
    8001fe02:	00a58663          	beq	a1,a0,8001fe0e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E+0x24>
    8001fe06:	a009                	j	8001fe08 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E+0x1e>
    8001fe08:	4501                	li	a0,0
    8001fe0a:	ec2a                	sd	a0,24(sp)
    8001fe0c:	a021                	j	8001fe14 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E+0x2a>
    8001fe0e:	6542                	ld	a0,16(sp)
    8001fe10:	ec2a                	sd	a0,24(sp)
    8001fe12:	a009                	j	8001fe14 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h90ed28d0be84fb78E+0x2a>
    }
    8001fe14:	6562                	ld	a0,24(sp)
    8001fe16:	70a2                	ld	ra,40(sp)
    8001fe18:	6145                	addi	sp,sp,48
    8001fe1a:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h602a741a9381c8eaE:

000000008001fe1c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h602a741a9381c8eaE>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    8001fe1c:	1101                	addi	sp,sp,-32
    8001fe1e:	e42a                	sd	a0,8(sp)
    8001fe20:	e82e                	sd	a1,16(sp)
    8001fe22:	03000613          	li	a2,48
        unsafe { intrinsics::offset(self, count) as *mut T }
    8001fe26:	02c585b3          	mul	a1,a1,a2
    8001fe2a:	952e                	add	a0,a0,a1
    8001fe2c:	ec2a                	sd	a0,24(sp)
    8001fe2e:	e02a                	sd	a0,0(sp)
    8001fe30:	a009                	j	8001fe32 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h602a741a9381c8eaE+0x16>
    }
    8001fe32:	6502                	ld	a0,0(sp)
    8001fe34:	6105                	addi	sp,sp,32
    8001fe36:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd143962df68ba00fE:

000000008001fe38 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd143962df68ba00fE>:
    pub const fn is_null(self) -> bool {
    8001fe38:	7179                	addi	sp,sp,-48
    8001fe3a:	f406                	sd	ra,40(sp)
    8001fe3c:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    8001fe3e:	ec2a                	sd	a0,24(sp)
    8001fe40:	a009                	j	8001fe42 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd143962df68ba00fE+0xa>
    8001fe42:	4501                	li	a0,0
    8001fe44:	65e2                	ld	a1,24(sp)
    8001fe46:	e82a                	sd	a0,16(sp)
    8001fe48:	852e                	mv	a0,a1
    8001fe4a:	65c2                	ld	a1,16(sp)
    8001fe4c:	00001097          	auipc	ra,0x1
    8001fe50:	88a080e7          	jalr	-1910(ra) # 800206d6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd4ab023ed2cd7babE>
    8001fe54:	e42a                	sd	a0,8(sp)
    8001fe56:	a009                	j	8001fe58 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd143962df68ba00fE+0x20>
    }
    8001fe58:	6522                	ld	a0,8(sp)
    8001fe5a:	70a2                	ld	ra,40(sp)
    8001fe5c:	6145                	addi	sp,sp,48
    8001fe5e:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hc24d02b68d97a26cE:

000000008001fe60 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hc24d02b68d97a26cE>:
    /// assert_eq!(slice.as_mut_ptr(), 0 as *mut i8);
    /// ```
    #[inline]
    #[unstable(feature = "slice_ptr_get", issue = "74265")]
    #[rustc_const_unstable(feature = "slice_ptr_get", issue = "74265")]
    pub const fn as_mut_ptr(self) -> *mut T {
    8001fe60:	1141                	addi	sp,sp,-16
    8001fe62:	e02a                	sd	a0,0(sp)
    8001fe64:	e42e                	sd	a1,8(sp)
        self as *mut T
    }
    8001fe66:	0141                	addi	sp,sp,16
    8001fe68:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h1d129342d292f0c1E:

000000008001fe6a <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h1d129342d292f0c1E>:
    ///     assert_eq!(x.get_unchecked_mut(1), x.as_mut_ptr().add(1));
    /// }
    /// ```
    #[unstable(feature = "slice_ptr_get", issue = "74265")]
    #[inline]
    pub unsafe fn get_unchecked_mut<I>(self, index: I) -> *mut I::Output
    8001fe6a:	7139                	addi	sp,sp,-64
    8001fe6c:	fc06                	sd	ra,56(sp)
    8001fe6e:	f02a                	sd	a0,32(sp)
    8001fe70:	f42e                	sd	a1,40(sp)
    8001fe72:	f832                	sd	a2,48(sp)
    where
        I: SliceIndex<[T]>,
    {
        // SAFETY: the caller ensures that `self` is dereferencable and `index` in-bounds.
        unsafe { index.get_unchecked_mut(self) }
    8001fe74:	ec2a                	sd	a0,24(sp)
    8001fe76:	8532                	mv	a0,a2
    8001fe78:	6662                	ld	a2,24(sp)
    8001fe7a:	e82e                	sd	a1,16(sp)
    8001fe7c:	85b2                	mv	a1,a2
    8001fe7e:	6642                	ld	a2,16(sp)
    8001fe80:	00000097          	auipc	ra,0x0
    8001fe84:	3c2080e7          	jalr	962(ra) # 80020242 <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1b07057a6f1f46d0E>
    8001fe88:	e42a                	sd	a0,8(sp)
    8001fe8a:	a009                	j	8001fe8c <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h1d129342d292f0c1E+0x22>
    }
    8001fe8c:	6522                	ld	a0,8(sp)
    8001fe8e:	70e2                	ld	ra,56(sp)
    8001fe90:	6121                	addi	sp,sp,64
    8001fe92:	8082                	ret

Disassembly of section .text._ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE:

000000008001fe94 <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE>:
unsafe fn init_slice_empty<T>(cur: &mut usize, len: usize) -> *mut [T] {
    8001fe94:	711d                	addi	sp,sp,-96
    8001fe96:	ec86                	sd	ra,88(sp)
    8001fe98:	e0aa                	sd	a0,64(sp)
    8001fe9a:	e4ae                	sd	a1,72(sp)
    let raw_ptr = *cur as *mut T;
    8001fe9c:	6110                	ld	a2,0(a0)
    8001fe9e:	e8b2                	sd	a2,80(sp)
    *cur += mem::size_of::<T>() * len;
    8001fea0:	fc2e                	sd	a1,56(sp)
    8001fea2:	f82a                	sd	a0,48(sp)
    8001fea4:	f432                	sd	a2,40(sp)
    8001fea6:	a009                	j	8001fea8 <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE+0x14>
    8001fea8:	7562                	ld	a0,56(sp)
    8001feaa:	4581                	li	a1,0
    8001feac:	f02a                	sd	a0,32(sp)
    8001feae:	e5a9                	bnez	a1,8001fef8 <.LBB7_8>
    8001feb0:	a009                	j	8001feb2 <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE+0x1e>
    8001feb2:	7542                	ld	a0,48(sp)
    8001feb4:	610c                	ld	a1,0(a0)
    8001feb6:	7602                	ld	a2,32(sp)
    8001feb8:	00c586b3          	add	a3,a1,a2
    8001febc:	ec36                	sd	a3,24(sp)
    8001febe:	04b6ec63          	bltu	a3,a1,8001ff16 <.LBB7_10>
    8001fec2:	a009                	j	8001fec4 <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE+0x30>
    8001fec4:	6562                	ld	a0,24(sp)
    8001fec6:	75c2                	ld	a1,48(sp)
    8001fec8:	e188                	sd	a0,0(a1)
    8001feca:	4601                	li	a2,0
    ptr::write_bytes(raw_ptr, 0, len);
    8001fecc:	7522                	ld	a0,40(sp)
    8001fece:	85b2                	mv	a1,a2
    8001fed0:	7662                	ld	a2,56(sp)
    8001fed2:	00001097          	auipc	ra,0x1
    8001fed6:	a0e080e7          	jalr	-1522(ra) # 800208e0 <_ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE>
    8001feda:	a009                	j	8001fedc <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE+0x48>
    ptr::slice_from_raw_parts_mut(raw_ptr, len)
    8001fedc:	7522                	ld	a0,40(sp)
    8001fede:	75e2                	ld	a1,56(sp)
    8001fee0:	00000097          	auipc	ra,0x0
    8001fee4:	5ee080e7          	jalr	1518(ra) # 800204ce <_ZN4core3ptr24slice_from_raw_parts_mut17h161906cb9cf0f72fE>
    8001fee8:	e82a                	sd	a0,16(sp)
    8001feea:	e42e                	sd	a1,8(sp)
    8001feec:	a009                	j	8001feee <_ZN9allocator16init_slice_empty17h7b9012af1cc8bb1eE+0x5a>
}
    8001feee:	6542                	ld	a0,16(sp)
    8001fef0:	65a2                	ld	a1,8(sp)
    8001fef2:	60e6                	ld	ra,88(sp)
    8001fef4:	6125                	addi	sp,sp,96
    8001fef6:	8082                	ret

000000008001fef8 <.LBB7_8>:
    *cur += mem::size_of::<T>() * len;
    8001fef8:	0000a517          	auipc	a0,0xa
    8001fefc:	10850513          	addi	a0,a0,264 # 8002a000 <str.0>

000000008001ff00 <.LBB7_9>:
    8001ff00:	0000a617          	auipc	a2,0xa
    8001ff04:	0e060613          	addi	a2,a2,224 # 80029fe0 <.L__unnamed_1>
    8001ff08:	02100593          	li	a1,33
    8001ff0c:	00001097          	auipc	ra,0x1
    8001ff10:	dbe080e7          	jalr	-578(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001ff16 <.LBB7_10>:
    8001ff16:	0000a517          	auipc	a0,0xa
    8001ff1a:	12a50513          	addi	a0,a0,298 # 8002a040 <str.1>

000000008001ff1e <.LBB7_11>:
    8001ff1e:	0000a617          	auipc	a2,0xa
    8001ff22:	10a60613          	addi	a2,a2,266 # 8002a028 <.L__unnamed_2>
    8001ff26:	45f1                	li	a1,28
    8001ff28:	00001097          	auipc	ra,0x1
    8001ff2c:	da2080e7          	jalr	-606(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN9allocator16init_slice_empty17hc89cc2da11d2a006E:

000000008001ff32 <_ZN9allocator16init_slice_empty17hc89cc2da11d2a006E>:
unsafe fn init_slice_empty<T>(cur: &mut usize, len: usize) -> *mut [T] {
    8001ff32:	711d                	addi	sp,sp,-96
    8001ff34:	ec86                	sd	ra,88(sp)
    8001ff36:	e0aa                	sd	a0,64(sp)
    8001ff38:	e4ae                	sd	a1,72(sp)
    let raw_ptr = *cur as *mut T;
    8001ff3a:	6110                	ld	a2,0(a0)
    8001ff3c:	e8b2                	sd	a2,80(sp)
    *cur += mem::size_of::<T>() * len;
    8001ff3e:	fc2e                	sd	a1,56(sp)
    8001ff40:	f82a                	sd	a0,48(sp)
    8001ff42:	f432                	sd	a2,40(sp)
    8001ff44:	a009                	j	8001ff46 <_ZN9allocator16init_slice_empty17hc89cc2da11d2a006E+0x14>
    8001ff46:	03000513          	li	a0,48
    8001ff4a:	75e2                	ld	a1,56(sp)
    8001ff4c:	02a58633          	mul	a2,a1,a0
    8001ff50:	02a5b533          	mulhu	a0,a1,a0
    8001ff54:	4681                	li	a3,0
    8001ff56:	f032                	sd	a2,32(sp)
    8001ff58:	04d51663          	bne	a0,a3,8001ffa4 <.LBB8_8>
    8001ff5c:	a009                	j	8001ff5e <_ZN9allocator16init_slice_empty17hc89cc2da11d2a006E+0x2c>
    8001ff5e:	7542                	ld	a0,48(sp)
    8001ff60:	610c                	ld	a1,0(a0)
    8001ff62:	7602                	ld	a2,32(sp)
    8001ff64:	00c586b3          	add	a3,a1,a2
    8001ff68:	ec36                	sd	a3,24(sp)
    8001ff6a:	04b6ec63          	bltu	a3,a1,8001ffc2 <.LBB8_10>
    8001ff6e:	a009                	j	8001ff70 <_ZN9allocator16init_slice_empty17hc89cc2da11d2a006E+0x3e>
    8001ff70:	6562                	ld	a0,24(sp)
    8001ff72:	75c2                	ld	a1,48(sp)
    8001ff74:	e188                	sd	a0,0(a1)
    8001ff76:	4601                	li	a2,0
    ptr::write_bytes(raw_ptr, 0, len);
    8001ff78:	7522                	ld	a0,40(sp)
    8001ff7a:	85b2                	mv	a1,a2
    8001ff7c:	7662                	ld	a2,56(sp)
    8001ff7e:	00001097          	auipc	ra,0x1
    8001ff82:	982080e7          	jalr	-1662(ra) # 80020900 <_ZN4core10intrinsics11write_bytes17haa847e3376c8ae6aE>
    8001ff86:	a009                	j	8001ff88 <_ZN9allocator16init_slice_empty17hc89cc2da11d2a006E+0x56>
    ptr::slice_from_raw_parts_mut(raw_ptr, len)
    8001ff88:	7522                	ld	a0,40(sp)
    8001ff8a:	75e2                	ld	a1,56(sp)
    8001ff8c:	00000097          	auipc	ra,0x0
    8001ff90:	554080e7          	jalr	1364(ra) # 800204e0 <_ZN4core3ptr24slice_from_raw_parts_mut17hff2f737f52da5926E>
    8001ff94:	e82a                	sd	a0,16(sp)
    8001ff96:	e42e                	sd	a1,8(sp)
    8001ff98:	a009                	j	8001ff9a <_ZN9allocator16init_slice_empty17hc89cc2da11d2a006E+0x68>
}
    8001ff9a:	6542                	ld	a0,16(sp)
    8001ff9c:	65a2                	ld	a1,8(sp)
    8001ff9e:	60e6                	ld	ra,88(sp)
    8001ffa0:	6125                	addi	sp,sp,96
    8001ffa2:	8082                	ret

000000008001ffa4 <.LBB8_8>:
    *cur += mem::size_of::<T>() * len;
    8001ffa4:	0000a517          	auipc	a0,0xa
    8001ffa8:	05c50513          	addi	a0,a0,92 # 8002a000 <str.0>

000000008001ffac <.LBB8_9>:
    8001ffac:	0000a617          	auipc	a2,0xa
    8001ffb0:	03460613          	addi	a2,a2,52 # 80029fe0 <.L__unnamed_1>
    8001ffb4:	02100593          	li	a1,33
    8001ffb8:	00001097          	auipc	ra,0x1
    8001ffbc:	d12080e7          	jalr	-750(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

000000008001ffc2 <.LBB8_10>:
    8001ffc2:	0000a517          	auipc	a0,0xa
    8001ffc6:	07e50513          	addi	a0,a0,126 # 8002a040 <str.1>

000000008001ffca <.LBB8_11>:
    8001ffca:	0000a617          	auipc	a2,0xa
    8001ffce:	05e60613          	addi	a2,a2,94 # 8002a028 <.L__unnamed_2>
    8001ffd2:	45f1                	li	a1,28
    8001ffd4:	00001097          	auipc	ra,0x1
    8001ffd8:	cf6080e7          	jalr	-778(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core3cmp3Ord3max17hcead612ea5141f10E:

000000008001ffde <_ZN4core3cmp3Ord3max17hcead612ea5141f10E>:
    fn max(self, other: Self) -> Self
    8001ffde:	1101                	addi	sp,sp,-32
    8001ffe0:	ec06                	sd	ra,24(sp)
    8001ffe2:	e42a                	sd	a0,8(sp)
    8001ffe4:	e82e                	sd	a1,16(sp)
        max_by(self, other, Ord::cmp)
    8001ffe6:	00000097          	auipc	ra,0x0
    8001ffea:	030080e7          	jalr	48(ra) # 80020016 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE>
    8001ffee:	e02a                	sd	a0,0(sp)
    8001fff0:	a009                	j	8001fff2 <_ZN4core3cmp3Ord3max17hcead612ea5141f10E+0x14>
    }
    8001fff2:	6502                	ld	a0,0(sp)
    8001fff4:	60e2                	ld	ra,24(sp)
    8001fff6:	6105                	addi	sp,sp,32
    8001fff8:	8082                	ret

Disassembly of section .text._ZN4core3cmp3max17h36b63c4617812e8bE:

000000008001fffa <_ZN4core3cmp3max17h36b63c4617812e8bE>:
pub fn max<T: Ord>(v1: T, v2: T) -> T {
    8001fffa:	1101                	addi	sp,sp,-32
    8001fffc:	ec06                	sd	ra,24(sp)
    8001fffe:	e42a                	sd	a0,8(sp)
    80020000:	e82e                	sd	a1,16(sp)
    v1.max(v2)
    80020002:	00000097          	auipc	ra,0x0
    80020006:	fdc080e7          	jalr	-36(ra) # 8001ffde <_ZN4core3cmp3Ord3max17hcead612ea5141f10E>
    8002000a:	e02a                	sd	a0,0(sp)
    8002000c:	a009                	j	8002000e <_ZN4core3cmp3max17h36b63c4617812e8bE+0x14>
}
    8002000e:	6502                	ld	a0,0(sp)
    80020010:	60e2                	ld	ra,24(sp)
    80020012:	6105                	addi	sp,sp,32
    80020014:	8082                	ret

Disassembly of section .text._ZN4core3cmp6max_by17h3d8ea688b13ba22bE:

0000000080020016 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE>:
pub fn max_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {
    80020016:	715d                	addi	sp,sp,-80
    80020018:	e486                	sd	ra,72(sp)
    8002001a:	e42a                	sd	a0,8(sp)
    8002001c:	e82e                	sd	a1,16(sp)
    8002001e:	4505                	li	a0,1
    match compare(&v1, &v2) {
    80020020:	02a10fa3          	sb	a0,63(sp)
    80020024:	02a10f23          	sb	a0,62(sp)
    80020028:	0028                	addi	a0,sp,8
    8002002a:	f42a                	sd	a0,40(sp)
    8002002c:	080c                	addi	a1,sp,16
    8002002e:	f82e                	sd	a1,48(sp)
    80020030:	00000097          	auipc	ra,0x0
    80020034:	68a080e7          	jalr	1674(ra) # 800206ba <_ZN4core3ops8function6FnOnce9call_once17haa8fdb31e4eef2dcE>
    80020038:	02a103a3          	sb	a0,39(sp)
    8002003c:	a009                	j	8002003e <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x28>
        Ordering::Less | Ordering::Equal => v2,
    8002003e:	02710503          	lb	a0,39(sp)
    80020042:	0505                	addi	a0,a0,1
    80020044:	4589                	li	a1,2
    80020046:	00b56a63          	bltu	a0,a1,8002005a <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x44>
    8002004a:	a009                	j	8002004c <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x36>
    8002004c:	4501                	li	a0,0
        Ordering::Greater => v1,
    8002004e:	02a10fa3          	sb	a0,63(sp)
    80020052:	6522                	ld	a0,8(sp)
    80020054:	ec2a                	sd	a0,24(sp)
    match compare(&v1, &v2) {
    80020056:	a801                	j	80020066 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x50>
    80020058:	0000                	unimp
    8002005a:	4501                	li	a0,0
        Ordering::Less | Ordering::Equal => v2,
    8002005c:	02a10f23          	sb	a0,62(sp)
    80020060:	6542                	ld	a0,16(sp)
    80020062:	ec2a                	sd	a0,24(sp)
    match compare(&v1, &v2) {
    80020064:	a009                	j	80020066 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x50>
}
    80020066:	03e14503          	lbu	a0,62(sp)
    8002006a:	8905                	andi	a0,a0,1
    8002006c:	e919                	bnez	a0,80020082 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x6c>
    8002006e:	a009                	j	80020070 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x5a>
    80020070:	03f14503          	lbu	a0,63(sp)
    80020074:	8905                	andi	a0,a0,1
    80020076:	e519                	bnez	a0,80020084 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x6e>
    80020078:	a009                	j	8002007a <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x64>
    8002007a:	6562                	ld	a0,24(sp)
    8002007c:	60a6                	ld	ra,72(sp)
    8002007e:	6161                	addi	sp,sp,80
    80020080:	8082                	ret
    80020082:	b7fd                	j	80020070 <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x5a>
    80020084:	bfdd                	j	8002007a <_ZN4core3cmp6max_by17h3d8ea688b13ba22bE+0x64>

Disassembly of section .text._ZN4core3mem4swap17h909a8b07da66d381E:

0000000080020086 <_ZN4core3mem4swap17h909a8b07da66d381E>:
pub fn swap<T>(x: &mut T, y: &mut T) {
    80020086:	1101                	addi	sp,sp,-32
    80020088:	ec06                	sd	ra,24(sp)
    8002008a:	e42a                	sd	a0,8(sp)
    8002008c:	e82e                	sd	a1,16(sp)
        ptr::swap_nonoverlapping_one(x, y);
    8002008e:	00000097          	auipc	ra,0x0
    80020092:	3e2080e7          	jalr	994(ra) # 80020470 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E>
    80020096:	a009                	j	80020098 <_ZN4core3mem4swap17h909a8b07da66d381E+0x12>
}
    80020098:	60e2                	ld	ra,24(sp)
    8002009a:	6105                	addi	sp,sp,32
    8002009c:	8082                	ret

Disassembly of section .text._ZN4core3mem7replace17h3fd89486113d7373E:

000000008002009e <_ZN4core3mem7replace17h3fd89486113d7373E>:
pub fn replace<T>(dest: &mut T, mut src: T) -> T {
    8002009e:	1101                	addi	sp,sp,-32
    800200a0:	ec06                	sd	ra,24(sp)
    800200a2:	e42e                	sd	a1,8(sp)
    800200a4:	e82a                	sd	a0,16(sp)
    800200a6:	002c                	addi	a1,sp,8
    swap(dest, &mut src);
    800200a8:	00000097          	auipc	ra,0x0
    800200ac:	fde080e7          	jalr	-34(ra) # 80020086 <_ZN4core3mem4swap17h909a8b07da66d381E>
    800200b0:	a009                	j	800200b2 <_ZN4core3mem7replace17h3fd89486113d7373E+0x14>
    src
    800200b2:	6522                	ld	a0,8(sp)
}
    800200b4:	60e2                	ld	ra,24(sp)
    800200b6:	6105                	addi	sp,sp,32
    800200b8:	8082                	ret

Disassembly of section .text._ZN4core3fmt9Arguments6new_v117h98223a5c059daa0eE:

00000000800200ba <_ZN4core3fmt9Arguments6new_v117h98223a5c059daa0eE>:
    pub fn new_v1(pieces: &'a [&'static str], args: &'a [ArgumentV1<'a>]) -> Arguments<'a> {
    800200ba:	7179                	addi	sp,sp,-48
    800200bc:	e82e                	sd	a1,16(sp)
    800200be:	ec32                	sd	a2,24(sp)
    800200c0:	f036                	sd	a3,32(sp)
    800200c2:	f43a                	sd	a4,40(sp)
    800200c4:	4781                	li	a5,0
        Arguments { pieces, fmt: None, args }
    800200c6:	e03e                	sd	a5,0(sp)
    800200c8:	e10c                	sd	a1,0(a0)
    800200ca:	e510                	sd	a2,8(a0)
    800200cc:	6582                	ld	a1,0(sp)
    800200ce:	6622                	ld	a2,8(sp)
    800200d0:	e90c                	sd	a1,16(a0)
    800200d2:	ed10                	sd	a2,24(a0)
    800200d4:	f114                	sd	a3,32(a0)
    800200d6:	f518                	sd	a4,40(a0)
    }
    800200d8:	6145                	addi	sp,sp,48
    800200da:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE:

00000000800200dc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    800200dc:	7179                	addi	sp,sp,-48
    800200de:	f406                	sd	ra,40(sp)
    800200e0:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    800200e2:	e82a                	sd	a0,16(sp)
    800200e4:	00000097          	auipc	ra,0x0
    800200e8:	02a080e7          	jalr	42(ra) # 8002010e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c592fe69bc75ee6E>
    800200ec:	e42a                	sd	a0,8(sp)
    800200ee:	a009                	j	800200f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE+0x14>
    800200f0:	4501                	li	a0,0
    800200f2:	65a2                	ld	a1,8(sp)
    800200f4:	00a58663          	beq	a1,a0,80020100 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE+0x24>
    800200f8:	a009                	j	800200fa <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE+0x1e>
    800200fa:	4501                	li	a0,0
    800200fc:	ec2a                	sd	a0,24(sp)
    800200fe:	a021                	j	80020106 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE+0x2a>
    80020100:	6542                	ld	a0,16(sp)
    80020102:	ec2a                	sd	a0,24(sp)
    80020104:	a009                	j	80020106 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE+0x2a>
    }
    80020106:	6562                	ld	a0,24(sp)
    80020108:	70a2                	ld	ra,40(sp)
    8002010a:	6145                	addi	sp,sp,48
    8002010c:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c592fe69bc75ee6E:

000000008002010e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c592fe69bc75ee6E>:
    pub const fn is_null(self) -> bool {
    8002010e:	7179                	addi	sp,sp,-48
    80020110:	f406                	sd	ra,40(sp)
    80020112:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    80020114:	ec2a                	sd	a0,24(sp)
    80020116:	a009                	j	80020118 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c592fe69bc75ee6E+0xa>
    80020118:	4501                	li	a0,0
    8002011a:	65e2                	ld	a1,24(sp)
    8002011c:	e82a                	sd	a0,16(sp)
    8002011e:	852e                	mv	a0,a1
    80020120:	65c2                	ld	a1,16(sp)
    80020122:	00000097          	auipc	ra,0x0
    80020126:	5b4080e7          	jalr	1460(ra) # 800206d6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd4ab023ed2cd7babE>
    8002012a:	e42a                	sd	a0,8(sp)
    8002012c:	a009                	j	8002012e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c592fe69bc75ee6E+0x20>
    }
    8002012e:	6522                	ld	a0,8(sp)
    80020130:	70a2                	ld	ra,40(sp)
    80020132:	6145                	addi	sp,sp,48
    80020134:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hb839e662a2117efcE:

0000000080020136 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hb839e662a2117efcE>:
    pub const fn guaranteed_eq(self, other: *const T) -> bool
    80020136:	1101                	addi	sp,sp,-32
    80020138:	e42a                	sd	a0,8(sp)
    8002013a:	e82e                	sd	a1,16(sp)
        intrinsics::ptr_guaranteed_eq(self, other)
    8002013c:	8d2d                	xor	a0,a0,a1
    8002013e:	00153513          	seqz	a0,a0
    80020142:	00a10fa3          	sb	a0,31(sp)
    80020146:	e02a                	sd	a0,0(sp)
    80020148:	a009                	j	8002014a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hb839e662a2117efcE+0x14>
    }
    8002014a:	6502                	ld	a0,0(sp)
    8002014c:	6105                	addi	sp,sp,32
    8002014e:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3e09147e50e9ceafE:

0000000080020150 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3e09147e50e9ceafE>:
    pub const unsafe fn add(self, count: usize) -> Self
    80020150:	1101                	addi	sp,sp,-32
    80020152:	ec06                	sd	ra,24(sp)
    80020154:	e42a                	sd	a0,8(sp)
    80020156:	e82e                	sd	a1,16(sp)
        unsafe { self.offset(count as isize) }
    80020158:	00000097          	auipc	ra,0x0
    8002015c:	046080e7          	jalr	70(ra) # 8002019e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE>
    80020160:	e02a                	sd	a0,0(sp)
    80020162:	a009                	j	80020164 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3e09147e50e9ceafE+0x14>
    }
    80020164:	6502                	ld	a0,0(sp)
    80020166:	60e2                	ld	ra,24(sp)
    80020168:	6105                	addi	sp,sp,32
    8002016a:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E:

000000008002016c <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E>:
    pub unsafe fn as_ref<'a>(self) -> Option<&'a T> {
    8002016c:	7179                	addi	sp,sp,-48
    8002016e:	f406                	sd	ra,40(sp)
    80020170:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&*self) } }
    80020172:	e82a                	sd	a0,16(sp)
    80020174:	00000097          	auipc	ra,0x0
    80020178:	03e080e7          	jalr	62(ra) # 800201b2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb556183de7398b23E>
    8002017c:	e42a                	sd	a0,8(sp)
    8002017e:	a009                	j	80020180 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E+0x14>
    80020180:	4501                	li	a0,0
    80020182:	65a2                	ld	a1,8(sp)
    80020184:	00a58663          	beq	a1,a0,80020190 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E+0x24>
    80020188:	a009                	j	8002018a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E+0x1e>
    8002018a:	4501                	li	a0,0
    8002018c:	ec2a                	sd	a0,24(sp)
    8002018e:	a021                	j	80020196 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E+0x2a>
    80020190:	6542                	ld	a0,16(sp)
    80020192:	ec2a                	sd	a0,24(sp)
    80020194:	a009                	j	80020196 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6as_ref17h5d2b198b294c2e97E+0x2a>
    }
    80020196:	6562                	ld	a0,24(sp)
    80020198:	70a2                	ld	ra,40(sp)
    8002019a:	6145                	addi	sp,sp,48
    8002019c:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE:

000000008002019e <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE>:
    pub const unsafe fn offset(self, count: isize) -> *const T
    8002019e:	1101                	addi	sp,sp,-32
    800201a0:	e42a                	sd	a0,8(sp)
    800201a2:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) }
    800201a4:	952e                	add	a0,a0,a1
    800201a6:	ec2a                	sd	a0,24(sp)
    800201a8:	e02a                	sd	a0,0(sp)
    800201aa:	a009                	j	800201ac <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7f99982b55f5447dE+0xe>
    }
    800201ac:	6502                	ld	a0,0(sp)
    800201ae:	6105                	addi	sp,sp,32
    800201b0:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb556183de7398b23E:

00000000800201b2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb556183de7398b23E>:
    pub const fn is_null(self) -> bool {
    800201b2:	7179                	addi	sp,sp,-48
    800201b4:	f406                	sd	ra,40(sp)
    800201b6:	f02a                	sd	a0,32(sp)
        (self as *const u8).guaranteed_eq(null())
    800201b8:	ec2a                	sd	a0,24(sp)
    800201ba:	a009                	j	800201bc <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb556183de7398b23E+0xa>
    800201bc:	4501                	li	a0,0
    800201be:	65e2                	ld	a1,24(sp)
    800201c0:	e82a                	sd	a0,16(sp)
    800201c2:	852e                	mv	a0,a1
    800201c4:	65c2                	ld	a1,16(sp)
    800201c6:	00000097          	auipc	ra,0x0
    800201ca:	f70080e7          	jalr	-144(ra) # 80020136 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hb839e662a2117efcE>
    800201ce:	e42a                	sd	a0,8(sp)
    800201d0:	a009                	j	800201d2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb556183de7398b23E+0x20>
    }
    800201d2:	6522                	ld	a0,8(sp)
    800201d4:	70a2                	ld	ra,40(sp)
    800201d6:	6145                	addi	sp,sp,48
    800201d8:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$13get_unchecked17h9a2ad196b1b4e22dE:

00000000800201da <_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$13get_unchecked17h9a2ad196b1b4e22dE>:
    ///     assert_eq!(x.get_unchecked(1), x.as_ptr().add(1));
    /// }
    /// ```
    #[unstable(feature = "slice_ptr_get", issue = "74265")]
    #[inline]
    pub unsafe fn get_unchecked<I>(self, index: I) -> *const I::Output
    800201da:	7139                	addi	sp,sp,-64
    800201dc:	fc06                	sd	ra,56(sp)
    800201de:	f02a                	sd	a0,32(sp)
    800201e0:	f42e                	sd	a1,40(sp)
    800201e2:	f832                	sd	a2,48(sp)
    where
        I: SliceIndex<[T]>,
    {
        // SAFETY: the caller ensures that `self` is dereferencable and `index` in-bounds.
        unsafe { index.get_unchecked(self) }
    800201e4:	ec2a                	sd	a0,24(sp)
    800201e6:	8532                	mv	a0,a2
    800201e8:	6662                	ld	a2,24(sp)
    800201ea:	e82e                	sd	a1,16(sp)
    800201ec:	85b2                	mv	a1,a2
    800201ee:	6642                	ld	a2,16(sp)
    800201f0:	00000097          	auipc	ra,0x0
    800201f4:	01e080e7          	jalr	30(ra) # 8002020e <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h38769809e480a414E>
    800201f8:	e42a                	sd	a0,8(sp)
    800201fa:	a009                	j	800201fc <_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$13get_unchecked17h9a2ad196b1b4e22dE+0x22>
    }
    800201fc:	6522                	ld	a0,8(sp)
    800201fe:	70e2                	ld	ra,56(sp)
    80020200:	6121                	addi	sp,sp,64
    80020202:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h53a720b36e03d16fE:

0000000080020204 <_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h53a720b36e03d16fE>:
    pub const fn as_ptr(self) -> *const T {
    80020204:	1141                	addi	sp,sp,-16
    80020206:	e02a                	sd	a0,0(sp)
    80020208:	e42e                	sd	a1,8(sp)
    }
    8002020a:	0141                	addi	sp,sp,16
    8002020c:	8082                	ret

Disassembly of section .text._ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h38769809e480a414E:

000000008002020e <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h38769809e480a414E>:
    unsafe fn get_unchecked(self, slice: *const [T]) -> *const T {
    8002020e:	7139                	addi	sp,sp,-64
    80020210:	fc06                	sd	ra,56(sp)
    80020212:	f02a                	sd	a0,32(sp)
    80020214:	f42e                	sd	a1,40(sp)
    80020216:	f832                	sd	a2,48(sp)
        unsafe { slice.as_ptr().add(self) }
    80020218:	ec2a                	sd	a0,24(sp)
    8002021a:	852e                	mv	a0,a1
    8002021c:	85b2                	mv	a1,a2
    8002021e:	00000097          	auipc	ra,0x0
    80020222:	fe6080e7          	jalr	-26(ra) # 80020204 <_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h53a720b36e03d16fE>
    80020226:	e82a                	sd	a0,16(sp)
    80020228:	a009                	j	8002022a <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h38769809e480a414E+0x1c>
    8002022a:	6542                	ld	a0,16(sp)
    8002022c:	65e2                	ld	a1,24(sp)
    8002022e:	00000097          	auipc	ra,0x0
    80020232:	f22080e7          	jalr	-222(ra) # 80020150 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3e09147e50e9ceafE>
    80020236:	e42a                	sd	a0,8(sp)
    80020238:	a009                	j	8002023a <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h38769809e480a414E+0x2c>
    }
    8002023a:	6522                	ld	a0,8(sp)
    8002023c:	70e2                	ld	ra,56(sp)
    8002023e:	6121                	addi	sp,sp,64
    80020240:	8082                	ret

Disassembly of section .text._ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1b07057a6f1f46d0E:

0000000080020242 <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1b07057a6f1f46d0E>:
    unsafe fn get_unchecked_mut(self, slice: *mut [T]) -> *mut T {
    80020242:	7139                	addi	sp,sp,-64
    80020244:	fc06                	sd	ra,56(sp)
    80020246:	f02a                	sd	a0,32(sp)
    80020248:	f42e                	sd	a1,40(sp)
    8002024a:	f832                	sd	a2,48(sp)
        unsafe { slice.as_mut_ptr().add(self) }
    8002024c:	ec2a                	sd	a0,24(sp)
    8002024e:	852e                	mv	a0,a1
    80020250:	85b2                	mv	a1,a2
    80020252:	00000097          	auipc	ra,0x0
    80020256:	c0e080e7          	jalr	-1010(ra) # 8001fe60 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hc24d02b68d97a26cE>
    8002025a:	e82a                	sd	a0,16(sp)
    8002025c:	a009                	j	8002025e <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1b07057a6f1f46d0E+0x1c>
    8002025e:	6542                	ld	a0,16(sp)
    80020260:	65e2                	ld	a1,24(sp)
    80020262:	00000097          	auipc	ra,0x0
    80020266:	b52080e7          	jalr	-1198(ra) # 8001fdb4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h4ee230a8be0169edE>
    8002026a:	e42a                	sd	a0,8(sp)
    8002026c:	a009                	j	8002026e <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1b07057a6f1f46d0E+0x2c>
    }
    8002026e:	6522                	ld	a0,8(sp)
    80020270:	70e2                	ld	ra,56(sp)
    80020272:	6121                	addi	sp,sp,64
    80020274:	8082                	ret

Disassembly of section .text._ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h558a61629c6b3b41E:

0000000080020276 <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h558a61629c6b3b41E>:
    unsafe fn get_unchecked_mut(self, slice: *mut [T]) -> *mut T {
    80020276:	7139                	addi	sp,sp,-64
    80020278:	fc06                	sd	ra,56(sp)
    8002027a:	f02a                	sd	a0,32(sp)
    8002027c:	f42e                	sd	a1,40(sp)
    8002027e:	f832                	sd	a2,48(sp)
        unsafe { slice.as_mut_ptr().add(self) }
    80020280:	ec2a                	sd	a0,24(sp)
    80020282:	852e                	mv	a0,a1
    80020284:	85b2                	mv	a1,a2
    80020286:	00000097          	auipc	ra,0x0
    8002028a:	50e080e7          	jalr	1294(ra) # 80020794 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h0c310f0697235e52E>
    8002028e:	e82a                	sd	a0,16(sp)
    80020290:	a009                	j	80020292 <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h558a61629c6b3b41E+0x1c>
    80020292:	6542                	ld	a0,16(sp)
    80020294:	65e2                	ld	a1,24(sp)
    80020296:	00000097          	auipc	ra,0x0
    8002029a:	45a080e7          	jalr	1114(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    8002029e:	e42a                	sd	a0,8(sp)
    800202a0:	a009                	j	800202a2 <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h558a61629c6b3b41E+0x2c>
    }
    800202a2:	6522                	ld	a0,8(sp)
    800202a4:	70e2                	ld	ra,56(sp)
    800202a6:	6121                	addi	sp,sp,64
    800202a8:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h045d6fa1fc511887E:

00000000800202aa <_ZN4core6option15Option$LT$T$GT$6unwrap17h045d6fa1fc511887E>:
    pub const fn unwrap(self) -> T {
    800202aa:	1101                	addi	sp,sp,-32
    800202ac:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    800202ae:	00a03633          	snez	a2,a0
    800202b2:	4681                	li	a3,0
    800202b4:	e42e                	sd	a1,8(sp)
    800202b6:	00d50463          	beq	a0,a3,800202be <.LBB0_5>
    800202ba:	a009                	j	800202bc <_ZN4core6option15Option$LT$T$GT$6unwrap17h045d6fa1fc511887E+0x12>
    800202bc:	a831                	j	800202d8 <.LBB0_5+0x1a>

00000000800202be <.LBB0_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    800202be:	0000a517          	auipc	a0,0xa
    800202c2:	d9e50513          	addi	a0,a0,-610 # 8002a05c <.L__unnamed_1>
    800202c6:	02b00593          	li	a1,43
    800202ca:	6622                	ld	a2,8(sp)
    800202cc:	00001097          	auipc	ra,0x1
    800202d0:	9fe080e7          	jalr	-1538(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    800202d4:	0000                	unimp
        match self {
    800202d6:	0000                	unimp
            Some(val) => val,
    800202d8:	6542                	ld	a0,16(sp)
    800202da:	ec2a                	sd	a0,24(sp)
    }
    800202dc:	6105                	addi	sp,sp,32
    800202de:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h190c40c36a1f3af3E:

00000000800202e0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h190c40c36a1f3af3E>:
    pub const fn unwrap(self) -> T {
    800202e0:	1101                	addi	sp,sp,-32
    800202e2:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    800202e4:	00a03633          	snez	a2,a0
    800202e8:	4681                	li	a3,0
    800202ea:	e42e                	sd	a1,8(sp)
    800202ec:	00d50463          	beq	a0,a3,800202f4 <.LBB1_5>
    800202f0:	a009                	j	800202f2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h190c40c36a1f3af3E+0x12>
    800202f2:	a831                	j	8002030e <.LBB1_5+0x1a>

00000000800202f4 <.LBB1_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    800202f4:	0000a517          	auipc	a0,0xa
    800202f8:	d6850513          	addi	a0,a0,-664 # 8002a05c <.L__unnamed_1>
    800202fc:	02b00593          	li	a1,43
    80020300:	6622                	ld	a2,8(sp)
    80020302:	00001097          	auipc	ra,0x1
    80020306:	9c8080e7          	jalr	-1592(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8002030a:	0000                	unimp
        match self {
    8002030c:	0000                	unimp
            Some(val) => val,
    8002030e:	6542                	ld	a0,16(sp)
    80020310:	ec2a                	sd	a0,24(sp)
    }
    80020312:	6105                	addi	sp,sp,32
    80020314:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h504185d2abb0f0d5E:

0000000080020316 <_ZN4core6option15Option$LT$T$GT$6unwrap17h504185d2abb0f0d5E>:
    pub const fn unwrap(self) -> T {
    80020316:	1101                	addi	sp,sp,-32
    80020318:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    8002031a:	00a03633          	snez	a2,a0
    8002031e:	4681                	li	a3,0
    80020320:	e42e                	sd	a1,8(sp)
    80020322:	00d50463          	beq	a0,a3,8002032a <.LBB2_5>
    80020326:	a009                	j	80020328 <_ZN4core6option15Option$LT$T$GT$6unwrap17h504185d2abb0f0d5E+0x12>
    80020328:	a831                	j	80020344 <.LBB2_5+0x1a>

000000008002032a <.LBB2_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    8002032a:	0000a517          	auipc	a0,0xa
    8002032e:	d3250513          	addi	a0,a0,-718 # 8002a05c <.L__unnamed_1>
    80020332:	02b00593          	li	a1,43
    80020336:	6622                	ld	a2,8(sp)
    80020338:	00001097          	auipc	ra,0x1
    8002033c:	992080e7          	jalr	-1646(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80020340:	0000                	unimp
        match self {
    80020342:	0000                	unimp
            Some(val) => val,
    80020344:	6542                	ld	a0,16(sp)
    80020346:	ec2a                	sd	a0,24(sp)
    }
    80020348:	6105                	addi	sp,sp,32
    8002034a:	8082                	ret

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h5a4b65bf576d7407E:

000000008002034c <_ZN4core6option15Option$LT$T$GT$6unwrap17h5a4b65bf576d7407E>:
    pub const fn unwrap(self) -> T {
    8002034c:	1101                	addi	sp,sp,-32
    8002034e:	e82a                	sd	a0,16(sp)
            Some(val) => val,
    80020350:	00a03633          	snez	a2,a0
    80020354:	4681                	li	a3,0
    80020356:	e42e                	sd	a1,8(sp)
    80020358:	00d50463          	beq	a0,a3,80020360 <.LBB3_5>
    8002035c:	a009                	j	8002035e <_ZN4core6option15Option$LT$T$GT$6unwrap17h5a4b65bf576d7407E+0x12>
    8002035e:	a831                	j	8002037a <.LBB3_5+0x1a>

0000000080020360 <.LBB3_5>:
            None => panic!("called `Option::unwrap()` on a `None` value"),
    80020360:	0000a517          	auipc	a0,0xa
    80020364:	cfc50513          	addi	a0,a0,-772 # 8002a05c <.L__unnamed_1>
    80020368:	02b00593          	li	a1,43
    8002036c:	6622                	ld	a2,8(sp)
    8002036e:	00001097          	auipc	ra,0x1
    80020372:	95c080e7          	jalr	-1700(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80020376:	0000                	unimp
        match self {
    80020378:	0000                	unimp
            Some(val) => val,
    8002037a:	6542                	ld	a0,16(sp)
    8002037c:	ec2a                	sd	a0,24(sp)
    }
    8002037e:	6105                	addi	sp,sp,32
    80020380:	8082                	ret

Disassembly of section .text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E:

0000000080020382 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E>:
macro_rules! debug {
    ($($T:ident)*) => {$(
        #[stable(feature = "rust1", since = "1.0.0")]
        impl fmt::Debug for $T {
            #[inline]
            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
    80020382:	7139                	addi	sp,sp,-64
    80020384:	fc06                	sd	ra,56(sp)
    80020386:	f42a                	sd	a0,40(sp)
    80020388:	f82e                	sd	a1,48(sp)
                if f.debug_lower_hex() {
    8002038a:	ec2a                	sd	a0,24(sp)
    8002038c:	852e                	mv	a0,a1
    8002038e:	e82e                	sd	a1,16(sp)
    80020390:	00001097          	auipc	ra,0x1
    80020394:	6fa080e7          	jalr	1786(ra) # 80021a8a <_ZN4core3fmt9Formatter15debug_lower_hex17hffada68515a2cdf7E>
    80020398:	e42a                	sd	a0,8(sp)
    8002039a:	a009                	j	8002039c <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x1a>
    8002039c:	4501                	li	a0,0
    8002039e:	65a2                	ld	a1,8(sp)
    800203a0:	00a58c63          	beq	a1,a0,800203b8 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x36>
    800203a4:	a009                	j	800203a6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x24>
                    fmt::LowerHex::fmt(self, f)
    800203a6:	6562                	ld	a0,24(sp)
    800203a8:	65c2                	ld	a1,16(sp)
    800203aa:	00003097          	auipc	ra,0x3
    800203ae:	8fc080e7          	jalr	-1796(ra) # 80022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>
    800203b2:	02a103a3          	sb	a0,39(sp)
    800203b6:	a801                	j	800203c6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x44>
                } else if f.debug_upper_hex() {
    800203b8:	6542                	ld	a0,16(sp)
    800203ba:	00001097          	auipc	ra,0x1
    800203be:	6da080e7          	jalr	1754(ra) # 80021a94 <_ZN4core3fmt9Formatter15debug_upper_hex17h3e8dade1475f5ac4E>
    800203c2:	e02a                	sd	a0,0(sp)
    800203c4:	a011                	j	800203c8 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x46>
                if f.debug_lower_hex() {
    800203c6:	a81d                	j	800203fc <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x7a>
    800203c8:	4501                	li	a0,0
                } else if f.debug_upper_hex() {
    800203ca:	6582                	ld	a1,0(sp)
    800203cc:	00a58c63          	beq	a1,a0,800203e4 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x62>
    800203d0:	a009                	j	800203d2 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x50>
                    fmt::UpperHex::fmt(self, f)
    800203d2:	6562                	ld	a0,24(sp)
    800203d4:	65c2                	ld	a1,16(sp)
    800203d6:	00003097          	auipc	ra,0x3
    800203da:	950080e7          	jalr	-1712(ra) # 80022d26 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h7a5b1e38fb0bc5b9E>
    800203de:	02a103a3          	sb	a0,39(sp)
    800203e2:	a811                	j	800203f6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x74>
                } else {
                    fmt::Display::fmt(self, f)
    800203e4:	6562                	ld	a0,24(sp)
    800203e6:	65c2                	ld	a1,16(sp)
    800203e8:	00003097          	auipc	ra,0x3
    800203ec:	c4a080e7          	jalr	-950(ra) # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    800203f0:	02a103a3          	sb	a0,39(sp)
    800203f4:	a011                	j	800203f8 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x76>
                } else if f.debug_upper_hex() {
    800203f6:	a011                	j	800203fa <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x78>
    800203f8:	a009                	j	800203fa <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x78>
                if f.debug_lower_hex() {
    800203fa:	a009                	j	800203fc <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h58aa418180475827E+0x7a>
                }
            }
    800203fc:	02714503          	lbu	a0,39(sp)
    80020400:	70e2                	ld	ra,56(sp)
    80020402:	6121                	addi	sp,sp,64
    80020404:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout4size17hc779d721a3cde4a5E:

0000000080020406 <_ZN4core5alloc6layout6Layout4size17hc779d721a3cde4a5E>:
    pub const fn size(&self) -> usize {
    80020406:	1141                	addi	sp,sp,-16
    80020408:	e42a                	sd	a0,8(sp)
        self.size_
    8002040a:	6108                	ld	a0,0(a0)
    }
    8002040c:	0141                	addi	sp,sp,16
    8002040e:	8082                	ret

Disassembly of section .text._ZN4core5alloc6layout6Layout5align17h8121a31f04b3a82aE:

0000000080020410 <_ZN4core5alloc6layout6Layout5align17h8121a31f04b3a82aE>:
    pub const fn align(&self) -> usize {
    80020410:	1101                	addi	sp,sp,-32
    80020412:	ec06                	sd	ra,24(sp)
    80020414:	e82a                	sd	a0,16(sp)
        self.align_.get()
    80020416:	6508                	ld	a0,8(a0)
    80020418:	00000097          	auipc	ra,0x0
    8002041c:	014080e7          	jalr	20(ra) # 8002042c <_ZN4core3num7nonzero12NonZeroUsize3get17h84ee6fa1657da21bE>
    80020420:	e42a                	sd	a0,8(sp)
    80020422:	a009                	j	80020424 <_ZN4core5alloc6layout6Layout5align17h8121a31f04b3a82aE+0x14>
    }
    80020424:	6522                	ld	a0,8(sp)
    80020426:	60e2                	ld	ra,24(sp)
    80020428:	6105                	addi	sp,sp,32
    8002042a:	8082                	ret

Disassembly of section .text._ZN4core3num7nonzero12NonZeroUsize3get17h84ee6fa1657da21bE:

000000008002042c <_ZN4core3num7nonzero12NonZeroUsize3get17h84ee6fa1657da21bE>:
                pub const fn get(self) -> $Int {
    8002042c:	1141                	addi	sp,sp,-16
    8002042e:	e42a                	sd	a0,8(sp)
                }
    80020430:	0141                	addi	sp,sp,16
    80020432:	8082                	ret

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h9c6f77f17ed4fb68E:

0000000080020434 <_ZN4core3ptr19swap_nonoverlapping17h9c6f77f17ed4fb68E>:
pub unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {
    80020434:	711d                	addi	sp,sp,-96
    80020436:	ec86                	sd	ra,88(sp)
    80020438:	f42a                	sd	a0,40(sp)
    8002043a:	f82e                	sd	a1,48(sp)
    8002043c:	fc32                	sd	a2,56(sp)
    let x = x as *mut u8;
    8002043e:	86aa                	mv	a3,a0
    80020440:	e0aa                	sd	a0,64(sp)
    let y = y as *mut u8;
    80020442:	852e                	mv	a0,a1
    80020444:	e4ae                	sd	a1,72(sp)
    let len = mem::size_of::<T>() * count;
    80020446:	f032                	sd	a2,32(sp)
    80020448:	ec36                	sd	a3,24(sp)
    8002044a:	e82a                	sd	a0,16(sp)
    8002044c:	a009                	j	8002044e <_ZN4core3ptr19swap_nonoverlapping17h9c6f77f17ed4fb68E+0x1a>
    8002044e:	7502                	ld	a0,32(sp)
    80020450:	00351593          	slli	a1,a0,0x3
    80020454:	e8ae                	sd	a1,80(sp)
    unsafe { swap_nonoverlapping_bytes(x, y, len) }
    80020456:	6562                	ld	a0,24(sp)
    80020458:	6642                	ld	a2,16(sp)
    8002045a:	e42e                	sd	a1,8(sp)
    8002045c:	85b2                	mv	a1,a2
    8002045e:	6622                	ld	a2,8(sp)
    80020460:	00000097          	auipc	ra,0x0
    80020464:	11c080e7          	jalr	284(ra) # 8002057c <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E>
    80020468:	a009                	j	8002046a <_ZN4core3ptr19swap_nonoverlapping17h9c6f77f17ed4fb68E+0x36>
}
    8002046a:	60e6                	ld	ra,88(sp)
    8002046c:	6125                	addi	sp,sp,96
    8002046e:	8082                	ret

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E:

0000000080020470 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E>:
pub(crate) unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {
    80020470:	7139                	addi	sp,sp,-64
    80020472:	fc06                	sd	ra,56(sp)
    80020474:	f02a                	sd	a0,32(sp)
    80020476:	f42e                	sd	a1,40(sp)
    if mem::size_of::<T>() < 32 {
    80020478:	e82e                	sd	a1,16(sp)
    8002047a:	e42a                	sd	a0,8(sp)
    8002047c:	a009                	j	8002047e <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0xe>
    8002047e:	4501                	li	a0,0
    80020480:	e919                	bnez	a0,80020496 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x26>
    80020482:	a009                	j	80020484 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x14>
            let z = read(x);
    80020484:	6522                	ld	a0,8(sp)
    80020486:	00000097          	auipc	ra,0x0
    8002048a:	07c080e7          	jalr	124(ra) # 80020502 <_ZN4core3ptr4read17h2577a7f83ffb5b32E>
    8002048e:	85aa                	mv	a1,a0
    80020490:	f82a                	sd	a0,48(sp)
    80020492:	e02e                	sd	a1,0(sp)
    80020494:	a809                	j	800204a6 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x36>
    80020496:	4605                	li	a2,1
        unsafe { swap_nonoverlapping(x, y, 1) };
    80020498:	6522                	ld	a0,8(sp)
    8002049a:	65c2                	ld	a1,16(sp)
    8002049c:	00000097          	auipc	ra,0x0
    800204a0:	f98080e7          	jalr	-104(ra) # 80020434 <_ZN4core3ptr19swap_nonoverlapping17h9c6f77f17ed4fb68E>
    800204a4:	a00d                	j	800204c6 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x56>
    800204a6:	4605                	li	a2,1
            copy_nonoverlapping(y, x, 1);
    800204a8:	6542                	ld	a0,16(sp)
    800204aa:	65a2                	ld	a1,8(sp)
    800204ac:	00000097          	auipc	ra,0x0
    800204b0:	47c080e7          	jalr	1148(ra) # 80020928 <_ZN4core10intrinsics19copy_nonoverlapping17h63f2677775101c48E>
    800204b4:	a009                	j	800204b6 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x46>
            write(y, z);
    800204b6:	6542                	ld	a0,16(sp)
    800204b8:	6582                	ld	a1,0(sp)
    800204ba:	00000097          	auipc	ra,0x0
    800204be:	0a2080e7          	jalr	162(ra) # 8002055c <_ZN4core3ptr5write17h8d2ffaa527b53219E>
    800204c2:	a009                	j	800204c4 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x54>
    if mem::size_of::<T>() < 32 {
    800204c4:	a011                	j	800204c8 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x58>
    800204c6:	a009                	j	800204c8 <_ZN4core3ptr23swap_nonoverlapping_one17h6e7fd3b15c57d426E+0x58>
}
    800204c8:	70e2                	ld	ra,56(sp)
    800204ca:	6121                	addi	sp,sp,64
    800204cc:	8082                	ret

Disassembly of section .text._ZN4core3ptr24slice_from_raw_parts_mut17h161906cb9cf0f72fE:

00000000800204ce <_ZN4core3ptr24slice_from_raw_parts_mut17h161906cb9cf0f72fE>:
pub const fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {
    800204ce:	7179                	addi	sp,sp,-48
    800204d0:	f02a                	sd	a0,32(sp)
    800204d2:	f42e                	sd	a1,40(sp)
    unsafe { Repr { raw: FatPtr { data, len } }.rust_mut }
    800204d4:	e82a                	sd	a0,16(sp)
    800204d6:	ec2e                	sd	a1,24(sp)
    800204d8:	e02a                	sd	a0,0(sp)
    800204da:	e42e                	sd	a1,8(sp)
}
    800204dc:	6145                	addi	sp,sp,48
    800204de:	8082                	ret

Disassembly of section .text._ZN4core3ptr24slice_from_raw_parts_mut17hff2f737f52da5926E:

00000000800204e0 <_ZN4core3ptr24slice_from_raw_parts_mut17hff2f737f52da5926E>:
pub const fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {
    800204e0:	7179                	addi	sp,sp,-48
    800204e2:	f02a                	sd	a0,32(sp)
    800204e4:	f42e                	sd	a1,40(sp)
    unsafe { Repr { raw: FatPtr { data, len } }.rust_mut }
    800204e6:	e82a                	sd	a0,16(sp)
    800204e8:	ec2e                	sd	a1,24(sp)
    800204ea:	e02a                	sd	a0,0(sp)
    800204ec:	e42e                	sd	a1,8(sp)
}
    800204ee:	6145                	addi	sp,sp,48
    800204f0:	8082                	ret

Disassembly of section .text._ZN4core3ptr2eq17h49624ed2eb987b95E:

00000000800204f2 <_ZN4core3ptr2eq17h49624ed2eb987b95E>:
pub fn eq<T: ?Sized>(a: *const T, b: *const T) -> bool {
    800204f2:	1141                	addi	sp,sp,-16
    800204f4:	e02a                	sd	a0,0(sp)
    800204f6:	e42e                	sd	a1,8(sp)
    a == b
    800204f8:	8d2d                	xor	a0,a0,a1
    800204fa:	00153513          	seqz	a0,a0
}
    800204fe:	0141                	addi	sp,sp,16
    80020500:	8082                	ret

Disassembly of section .text._ZN4core3ptr4read17h2577a7f83ffb5b32E:

0000000080020502 <_ZN4core3ptr4read17h2577a7f83ffb5b32E>:
pub const unsafe fn read<T>(src: *const T) -> T {
    80020502:	715d                	addi	sp,sp,-80
    80020504:	e486                	sd	ra,72(sp)
    80020506:	f02a                	sd	a0,32(sp)
    }
    80020508:	75a2                	ld	a1,40(sp)
    let mut tmp = MaybeUninit::<T>::uninit();
    8002050a:	ec2e                	sd	a1,24(sp)
    8002050c:	e82a                	sd	a0,16(sp)
    8002050e:	a009                	j	80020510 <_ZN4core3ptr4read17h2577a7f83ffb5b32E+0xe>
    80020510:	0828                	addi	a0,sp,24
    80020512:	e0aa                	sd	a0,64(sp)
        copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);
    80020514:	a009                	j	80020516 <_ZN4core3ptr4read17h2577a7f83ffb5b32E+0x14>
    80020516:	082c                	addi	a1,sp,24
    80020518:	4605                	li	a2,1
    8002051a:	6542                	ld	a0,16(sp)
    8002051c:	00000097          	auipc	ra,0x0
    80020520:	40c080e7          	jalr	1036(ra) # 80020928 <_ZN4core10intrinsics19copy_nonoverlapping17h63f2677775101c48E>
    80020524:	a009                	j	80020526 <_ZN4core3ptr4read17h2577a7f83ffb5b32E+0x24>
        tmp.assume_init()
    80020526:	6562                	ld	a0,24(sp)
    80020528:	f82a                	sd	a0,48(sp)
    8002052a:	fc2a                	sd	a0,56(sp)
    8002052c:	e42a                	sd	a0,8(sp)
    8002052e:	a009                	j	80020530 <_ZN4core3ptr4read17h2577a7f83ffb5b32E+0x2e>
}
    80020530:	6522                	ld	a0,8(sp)
    80020532:	60a6                	ld	ra,72(sp)
    80020534:	6161                	addi	sp,sp,80
    80020536:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h582c2d90f57a3b3dE:

0000000080020538 <_ZN4core3ptr5write17h582c2d90f57a3b3dE>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    80020538:	1101                	addi	sp,sp,-32
    8002053a:	e42e                	sd	a1,8(sp)
    8002053c:	e832                	sd	a2,16(sp)
    8002053e:	ec2a                	sd	a0,24(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80020540:	e510                	sd	a2,8(a0)
    80020542:	e10c                	sd	a1,0(a0)
    80020544:	a009                	j	80020546 <_ZN4core3ptr5write17h582c2d90f57a3b3dE+0xe>
}
    80020546:	6105                	addi	sp,sp,32
    80020548:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h6f3779841722abe9E:

000000008002054a <_ZN4core3ptr5write17h6f3779841722abe9E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    8002054a:	1101                	addi	sp,sp,-32
    8002054c:	e42e                	sd	a1,8(sp)
    8002054e:	e832                	sd	a2,16(sp)
    80020550:	ec2a                	sd	a0,24(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80020552:	e510                	sd	a2,8(a0)
    80020554:	e10c                	sd	a1,0(a0)
    80020556:	a009                	j	80020558 <_ZN4core3ptr5write17h6f3779841722abe9E+0xe>
}
    80020558:	6105                	addi	sp,sp,32
    8002055a:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h8d2ffaa527b53219E:

000000008002055c <_ZN4core3ptr5write17h8d2ffaa527b53219E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    8002055c:	1141                	addi	sp,sp,-16
    8002055e:	e02e                	sd	a1,0(sp)
    80020560:	e42a                	sd	a0,8(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80020562:	e10c                	sd	a1,0(a0)
    80020564:	a009                	j	80020566 <_ZN4core3ptr5write17h8d2ffaa527b53219E+0xa>
}
    80020566:	0141                	addi	sp,sp,16
    80020568:	8082                	ret

Disassembly of section .text._ZN4core3ptr5write17h8fa05473e91f2c43E:

000000008002056a <_ZN4core3ptr5write17h8fa05473e91f2c43E>:
pub unsafe fn write<T>(dst: *mut T, src: T) {
    8002056a:	1101                	addi	sp,sp,-32
    8002056c:	e42e                	sd	a1,8(sp)
    8002056e:	e832                	sd	a2,16(sp)
    80020570:	ec2a                	sd	a0,24(sp)
        copy_nonoverlapping(&src as *const T, dst, 1);
    80020572:	e510                	sd	a2,8(a0)
    80020574:	e10c                	sd	a1,0(a0)
    80020576:	a009                	j	80020578 <_ZN4core3ptr5write17h8fa05473e91f2c43E+0xe>
}
    80020578:	6105                	addi	sp,sp,32
    8002057a:	8082                	ret

Disassembly of section .text._ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E:

000000008002057c <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E>:
unsafe fn swap_nonoverlapping_bytes(x: *mut u8, y: *mut u8, len: usize) {
    8002057c:	710d                	addi	sp,sp,-352
    8002057e:	ee86                	sd	ra,344(sp)
    80020580:	eaa2                	sd	s0,336(sp)
    80020582:	1280                	addi	s0,sp,352
    80020584:	fe017113          	andi	sp,sp,-32
    80020588:	f5aa                	sd	a0,232(sp)
    8002058a:	f9ae                	sd	a1,240(sp)
    8002058c:	fdb2                	sd	a2,248(sp)
    8002058e:	02000693          	li	a3,32
    let block_size = mem::size_of::<Block>();
    80020592:	e236                	sd	a3,256(sp)
    80020594:	e532                	sd	a2,136(sp)
    80020596:	e12e                	sd	a1,128(sp)
    80020598:	fcaa                	sd	a0,120(sp)
    8002059a:	a009                	j	8002059c <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x20>
    8002059c:	4501                	li	a0,0
    let mut i = 0;
    8002059e:	ed2a                	sd	a0,152(sp)
    while i + block_size <= len {
    800205a0:	a009                	j	800205a2 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x26>
    800205a2:	656a                	ld	a0,152(sp)
    800205a4:	02050513          	addi	a0,a0,32
    800205a8:	65aa                	ld	a1,136(sp)
    800205aa:	00a5f863          	bgeu	a1,a0,800205ba <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x3e>
    800205ae:	a009                	j	800205b0 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x34>
    if i < len {
    800205b0:	656a                	ld	a0,152(sp)
    800205b2:	65aa                	ld	a1,136(sp)
    800205b4:	06b56f63          	bltu	a0,a1,80020632 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0xb6>
    800205b8:	a8b5                	j	80020634 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0xb8>
        let mut t = mem::MaybeUninit::<Block>::uninit();
    800205ba:	a009                	j	800205bc <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x40>
    800205bc:	1108                	addi	a0,sp,160
    800205be:	e6aa                	sd	a0,328(sp)
        let t = t.as_mut_ptr() as *mut u8;
    800205c0:	a009                	j	800205c2 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x46>
    800205c2:	1108                	addi	a0,sp,160
    800205c4:	e62a                	sd	a0,264(sp)
            let x = x.add(i);
    800205c6:	65ea                	ld	a1,152(sp)
    800205c8:	7666                	ld	a2,120(sp)
    800205ca:	f8aa                	sd	a0,112(sp)
    800205cc:	8532                	mv	a0,a2
    800205ce:	00000097          	auipc	ra,0x0
    800205d2:	122080e7          	jalr	290(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    800205d6:	85aa                	mv	a1,a0
    800205d8:	ea2a                	sd	a0,272(sp)
    800205da:	f4ae                	sd	a1,104(sp)
    800205dc:	a009                	j	800205de <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x62>
            let y = y.add(i);
    800205de:	65ea                	ld	a1,152(sp)
    800205e0:	650a                	ld	a0,128(sp)
    800205e2:	00000097          	auipc	ra,0x0
    800205e6:	10e080e7          	jalr	270(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    800205ea:	85aa                	mv	a1,a0
    800205ec:	ee2a                	sd	a0,280(sp)
    800205ee:	f0ae                	sd	a1,96(sp)
    800205f0:	a009                	j	800205f2 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x76>
    800205f2:	02000613          	li	a2,32
            copy_nonoverlapping(x, t, block_size);
    800205f6:	7526                	ld	a0,104(sp)
    800205f8:	75c6                	ld	a1,112(sp)
    800205fa:	00000097          	auipc	ra,0x0
    800205fe:	350080e7          	jalr	848(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    80020602:	a009                	j	80020604 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x88>
    80020604:	02000613          	li	a2,32
            copy_nonoverlapping(y, x, block_size);
    80020608:	7506                	ld	a0,96(sp)
    8002060a:	75a6                	ld	a1,104(sp)
    8002060c:	00000097          	auipc	ra,0x0
    80020610:	33e080e7          	jalr	830(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    80020614:	a009                	j	80020616 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x9a>
    80020616:	02000613          	li	a2,32
            copy_nonoverlapping(t, y, block_size);
    8002061a:	7546                	ld	a0,112(sp)
    8002061c:	7586                	ld	a1,96(sp)
    8002061e:	00000097          	auipc	ra,0x0
    80020622:	32c080e7          	jalr	812(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    80020626:	a009                	j	80020628 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0xac>
        i += block_size;
    80020628:	656a                	ld	a0,152(sp)
    8002062a:	02050513          	addi	a0,a0,32
    8002062e:	ed2a                	sd	a0,152(sp)
    while i + block_size <= len {
    80020630:	bf8d                	j	800205a2 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x26>
        let mut t = mem::MaybeUninit::<UnalignedBlock>::uninit();
    80020632:	a011                	j	80020636 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0xba>
    if i < len {
    80020634:	a8ad                	j	800206ae <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x132>
        let rem = len - i;
    80020636:	656a                	ld	a0,152(sp)
    80020638:	65aa                	ld	a1,136(sp)
    8002063a:	40a58533          	sub	a0,a1,a0
    8002063e:	f22a                	sd	a0,288(sp)
    80020640:	01b0                	addi	a2,sp,200
    80020642:	e2b2                	sd	a2,320(sp)
        let t = t.as_mut_ptr() as *mut u8;
    80020644:	ecaa                	sd	a0,88(sp)
    80020646:	e8b2                	sd	a2,80(sp)
    80020648:	a009                	j	8002064a <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0xce>
    8002064a:	6546                	ld	a0,80(sp)
    8002064c:	65c6                	ld	a1,80(sp)
    8002064e:	f62e                	sd	a1,296(sp)
            let x = x.add(i);
    80020650:	65ea                	ld	a1,152(sp)
    80020652:	7666                	ld	a2,120(sp)
    80020654:	e4aa                	sd	a0,72(sp)
    80020656:	8532                	mv	a0,a2
    80020658:	00000097          	auipc	ra,0x0
    8002065c:	098080e7          	jalr	152(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    80020660:	85aa                	mv	a1,a0
    80020662:	fa2a                	sd	a0,304(sp)
    80020664:	e0ae                	sd	a1,64(sp)
    80020666:	a009                	j	80020668 <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0xec>
            let y = y.add(i);
    80020668:	65ea                	ld	a1,152(sp)
    8002066a:	650a                	ld	a0,128(sp)
    8002066c:	00000097          	auipc	ra,0x0
    80020670:	084080e7          	jalr	132(ra) # 800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>
    80020674:	85aa                	mv	a1,a0
    80020676:	fe2a                	sd	a0,312(sp)
    80020678:	fc2e                	sd	a1,56(sp)
    8002067a:	a009                	j	8002067c <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x100>
            copy_nonoverlapping(x, t, rem);
    8002067c:	6506                	ld	a0,64(sp)
    8002067e:	65a6                	ld	a1,72(sp)
    80020680:	6666                	ld	a2,88(sp)
    80020682:	00000097          	auipc	ra,0x0
    80020686:	2c8080e7          	jalr	712(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8002068a:	a009                	j	8002068c <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x110>
            copy_nonoverlapping(y, x, rem);
    8002068c:	7562                	ld	a0,56(sp)
    8002068e:	6586                	ld	a1,64(sp)
    80020690:	6666                	ld	a2,88(sp)
    80020692:	00000097          	auipc	ra,0x0
    80020696:	2b8080e7          	jalr	696(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    8002069a:	a009                	j	8002069c <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x120>
            copy_nonoverlapping(t, y, rem);
    8002069c:	6526                	ld	a0,72(sp)
    8002069e:	75e2                	ld	a1,56(sp)
    800206a0:	6666                	ld	a2,88(sp)
    800206a2:	00000097          	auipc	ra,0x0
    800206a6:	2a8080e7          	jalr	680(ra) # 8002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>
    800206aa:	a009                	j	800206ac <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x130>
    if i < len {
    800206ac:	a009                	j	800206ae <_ZN4core3ptr25swap_nonoverlapping_bytes17ha1a599984e39d564E+0x132>
}
    800206ae:	ea040113          	addi	sp,s0,-352
    800206b2:	6456                	ld	s0,336(sp)
    800206b4:	60f6                	ld	ra,344(sp)
    800206b6:	6135                	addi	sp,sp,352
    800206b8:	8082                	ret

Disassembly of section .text._ZN4core3ops8function6FnOnce9call_once17haa8fdb31e4eef2dcE:

00000000800206ba <_ZN4core3ops8function6FnOnce9call_once17haa8fdb31e4eef2dcE>:
    #[stable(feature = "fn_once_output", since = "1.12.0")]
    type Output;

    /// Performs the call operation.
    #[unstable(feature = "fn_traits", issue = "29625")]
    extern "rust-call" fn call_once(self, args: Args) -> Self::Output;
    800206ba:	7179                	addi	sp,sp,-48
    800206bc:	f406                	sd	ra,40(sp)
    800206be:	e82a                	sd	a0,16(sp)
    800206c0:	ec2e                	sd	a1,24(sp)
    800206c2:	fffff097          	auipc	ra,0xfffff
    800206c6:	40e080e7          	jalr	1038(ra) # 8001fad0 <_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h72a49371fe578722E>
    800206ca:	e42a                	sd	a0,8(sp)
    800206cc:	a009                	j	800206ce <_ZN4core3ops8function6FnOnce9call_once17haa8fdb31e4eef2dcE+0x14>
    800206ce:	6522                	ld	a0,8(sp)
    800206d0:	70a2                	ld	ra,40(sp)
    800206d2:	6145                	addi	sp,sp,48
    800206d4:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd4ab023ed2cd7babE:

00000000800206d6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd4ab023ed2cd7babE>:
    pub const fn guaranteed_eq(self, other: *mut T) -> bool
    800206d6:	1101                	addi	sp,sp,-32
    800206d8:	e42a                	sd	a0,8(sp)
    800206da:	e82e                	sd	a1,16(sp)
        intrinsics::ptr_guaranteed_eq(self as *const _, other as *const _)
    800206dc:	8d2d                	xor	a0,a0,a1
    800206de:	00153513          	seqz	a0,a0
    800206e2:	00a10fa3          	sb	a0,31(sp)
    800206e6:	e02a                	sd	a0,0(sp)
    800206e8:	a009                	j	800206ea <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd4ab023ed2cd7babE+0x14>
    }
    800206ea:	6502                	ld	a0,0(sp)
    800206ec:	6105                	addi	sp,sp,32
    800206ee:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E:

00000000800206f0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E>:
    pub const unsafe fn add(self, count: usize) -> Self
    800206f0:	1101                	addi	sp,sp,-32
    800206f2:	ec06                	sd	ra,24(sp)
    800206f4:	e42a                	sd	a0,8(sp)
    800206f6:	e82e                	sd	a1,16(sp)
        unsafe { self.offset(count as isize) }
    800206f8:	00000097          	auipc	ra,0x0
    800206fc:	060080e7          	jalr	96(ra) # 80020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>
    80020700:	e02a                	sd	a0,0(sp)
    80020702:	a009                	j	80020704 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha2fcdcf25568b545E+0x14>
    }
    80020704:	6502                	ld	a0,0(sp)
    80020706:	60e2                	ld	ra,24(sp)
    80020708:	6105                	addi	sp,sp,32
    8002070a:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc79ca54ce92155abE:

000000008002070c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc79ca54ce92155abE>:
    pub unsafe fn write(self, val: T)
    8002070c:	1101                	addi	sp,sp,-32
    8002070e:	ec06                	sd	ra,24(sp)
    80020710:	e02a                	sd	a0,0(sp)
    80020712:	e42e                	sd	a1,8(sp)
    80020714:	e832                	sd	a2,16(sp)
        unsafe { write(self, val) }
    80020716:	00000097          	auipc	ra,0x0
    8002071a:	e22080e7          	jalr	-478(ra) # 80020538 <_ZN4core3ptr5write17h582c2d90f57a3b3dE>
    8002071e:	a009                	j	80020720 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc79ca54ce92155abE+0x14>
    }
    80020720:	60e2                	ld	ra,24(sp)
    80020722:	6105                	addi	sp,sp,32
    80020724:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E:

0000000080020726 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E>:
    pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {
    80020726:	7179                	addi	sp,sp,-48
    80020728:	f406                	sd	ra,40(sp)
    8002072a:	f02a                	sd	a0,32(sp)
        if self.is_null() { None } else { unsafe { Some(&mut *self) } }
    8002072c:	e82a                	sd	a0,16(sp)
    8002072e:	00000097          	auipc	ra,0x0
    80020732:	03e080e7          	jalr	62(ra) # 8002076c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE>
    80020736:	e42a                	sd	a0,8(sp)
    80020738:	a009                	j	8002073a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E+0x14>
    8002073a:	4501                	li	a0,0
    8002073c:	65a2                	ld	a1,8(sp)
    8002073e:	00a58663          	beq	a1,a0,8002074a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E+0x24>
    80020742:	a009                	j	80020744 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E+0x1e>
    80020744:	4501                	li	a0,0
    80020746:	ec2a                	sd	a0,24(sp)
    80020748:	a021                	j	80020750 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E+0x2a>
    8002074a:	6542                	ld	a0,16(sp)
    8002074c:	ec2a                	sd	a0,24(sp)
    8002074e:	a009                	j	80020750 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17h4d9fd265a493e350E+0x2a>
    }
    80020750:	6562                	ld	a0,24(sp)
    80020752:	70a2                	ld	ra,40(sp)
    80020754:	6145                	addi	sp,sp,48
    80020756:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E:

0000000080020758 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E>:
    pub const unsafe fn offset(self, count: isize) -> *mut T
    80020758:	1101                	addi	sp,sp,-32
    8002075a:	e42a                	sd	a0,8(sp)
    8002075c:	e82e                	sd	a1,16(sp)
        unsafe { intrinsics::offset(self, count) as *mut T }
    8002075e:	952e                	add	a0,a0,a1
    80020760:	ec2a                	sd	a0,24(sp)
    80020762:	e02a                	sd	a0,0(sp)
    80020764:	a009                	j	80020766 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3231a4e83b402c59E+0xe>
    }
    80020766:	6502                	ld	a0,0(sp)
    80020768:	6105                	addi	sp,sp,32
    8002076a:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE:

000000008002076c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE>:
    pub const fn is_null(self) -> bool {
    8002076c:	7179                	addi	sp,sp,-48
    8002076e:	f406                	sd	ra,40(sp)
    80020770:	f02a                	sd	a0,32(sp)
        (self as *mut u8).guaranteed_eq(null_mut())
    80020772:	ec2a                	sd	a0,24(sp)
    80020774:	a009                	j	80020776 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE+0xa>
    80020776:	4501                	li	a0,0
    80020778:	65e2                	ld	a1,24(sp)
    8002077a:	e82a                	sd	a0,16(sp)
    8002077c:	852e                	mv	a0,a1
    8002077e:	65c2                	ld	a1,16(sp)
    80020780:	00000097          	auipc	ra,0x0
    80020784:	f56080e7          	jalr	-170(ra) # 800206d6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hd4ab023ed2cd7babE>
    80020788:	e42a                	sd	a0,8(sp)
    8002078a:	a009                	j	8002078c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h38620d655ca0c1daE+0x20>
    }
    8002078c:	6522                	ld	a0,8(sp)
    8002078e:	70a2                	ld	ra,40(sp)
    80020790:	6145                	addi	sp,sp,48
    80020792:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h0c310f0697235e52E:

0000000080020794 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h0c310f0697235e52E>:
    pub const fn as_mut_ptr(self) -> *mut T {
    80020794:	1141                	addi	sp,sp,-16
    80020796:	e02a                	sd	a0,0(sp)
    80020798:	e42e                	sd	a1,8(sp)
    }
    8002079a:	0141                	addi	sp,sp,16
    8002079c:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h8757ca0ce9f91586E:

000000008002079e <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h8757ca0ce9f91586E>:
    pub unsafe fn get_unchecked_mut<I>(self, index: I) -> *mut I::Output
    8002079e:	7139                	addi	sp,sp,-64
    800207a0:	fc06                	sd	ra,56(sp)
    800207a2:	f02a                	sd	a0,32(sp)
    800207a4:	f42e                	sd	a1,40(sp)
    800207a6:	f832                	sd	a2,48(sp)
        unsafe { index.get_unchecked_mut(self) }
    800207a8:	ec2a                	sd	a0,24(sp)
    800207aa:	8532                	mv	a0,a2
    800207ac:	6662                	ld	a2,24(sp)
    800207ae:	e82e                	sd	a1,16(sp)
    800207b0:	85b2                	mv	a1,a2
    800207b2:	6642                	ld	a2,16(sp)
    800207b4:	00000097          	auipc	ra,0x0
    800207b8:	ac2080e7          	jalr	-1342(ra) # 80020276 <_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h558a61629c6b3b41E>
    800207bc:	e42a                	sd	a0,8(sp)
    800207be:	a009                	j	800207c0 <_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h8757ca0ce9f91586E+0x22>
    }
    800207c0:	6522                	ld	a0,8(sp)
    800207c2:	70e2                	ld	ra,56(sp)
    800207c4:	6121                	addi	sp,sp,64
    800207c6:	8082                	ret

Disassembly of section .text._ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17heef8476ef7136551E:

00000000800207c8 <_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17heef8476ef7136551E>:
                    fn clone(&self) -> Self {
    800207c8:	1141                	addi	sp,sp,-16
    800207ca:	e42a                	sd	a0,8(sp)
                        *self
    800207cc:	6108                	ld	a0,0(a0)
                    }
    800207ce:	0141                	addi	sp,sp,16
    800207d0:	8082                	ret

Disassembly of section .text._ZN9allocator4list4List4init17h408b264d91133ff0E:

00000000800207d2 <_ZN9allocator4list4List4init17h408b264d91133ff0E>:
    prev: *mut List,
    next: *mut List,
}

impl List {
    pub fn init(&mut self) {
    800207d2:	1141                	addi	sp,sp,-16
    800207d4:	e42a                	sd	a0,8(sp)
        self.prev = self;
    800207d6:	e108                	sd	a0,0(a0)
        self.next = self;
    800207d8:	e508                	sd	a0,8(a0)
    }
    800207da:	0141                	addi	sp,sp,16
    800207dc:	8082                	ret

Disassembly of section .text._ZN9allocator4list4List4push17he3c20b895e5c9a81E:

00000000800207de <_ZN9allocator4list4List4push17he3c20b895e5c9a81E>:

    pub unsafe fn push(&mut self, raw_addr: usize) {
    800207de:	715d                	addi	sp,sp,-80
    800207e0:	e486                	sd	ra,72(sp)
    800207e2:	f82a                	sd	a0,48(sp)
    800207e4:	fc2e                	sd	a1,56(sp)
        let raw_list = raw_addr as *mut List;
    800207e6:	862e                	mv	a2,a1
    800207e8:	e0ae                	sd	a1,64(sp)
        ptr::write(raw_list, List {
            prev: self,
            next: self.next,
    800207ea:	6514                	ld	a3,8(a0)
        ptr::write(raw_list, List {
    800207ec:	f02a                	sd	a0,32(sp)
    800207ee:	f436                	sd	a3,40(sp)
    800207f0:	ec2a                	sd	a0,24(sp)
    800207f2:	852e                	mv	a0,a1
    800207f4:	65e2                	ld	a1,24(sp)
    800207f6:	e832                	sd	a2,16(sp)
    800207f8:	8636                	mv	a2,a3
    800207fa:	00000097          	auipc	ra,0x0
    800207fe:	d70080e7          	jalr	-656(ra) # 8002056a <_ZN4core3ptr5write17h8fa05473e91f2c43E>
    80020802:	a009                	j	80020804 <_ZN9allocator4list4List4push17he3c20b895e5c9a81E+0x26>
        });
        self.next.as_mut().unwrap().prev = raw_list;
    80020804:	6562                	ld	a0,24(sp)
    80020806:	6508                	ld	a0,8(a0)
    80020808:	00000097          	auipc	ra,0x0
    8002080c:	8d4080e7          	jalr	-1836(ra) # 800200dc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE>
    80020810:	e42a                	sd	a0,8(sp)
    80020812:	a009                	j	80020814 <.LBB1_4>

0000000080020814 <.LBB1_4>:
    80020814:	0000a597          	auipc	a1,0xa
    80020818:	8a458593          	addi	a1,a1,-1884 # 8002a0b8 <.L__unnamed_1>
    8002081c:	6522                	ld	a0,8(sp)
    8002081e:	00000097          	auipc	ra,0x0
    80020822:	a8c080e7          	jalr	-1396(ra) # 800202aa <_ZN4core6option15Option$LT$T$GT$6unwrap17h045d6fa1fc511887E>
    80020826:	e02a                	sd	a0,0(sp)
    80020828:	a009                	j	8002082a <.LBB1_4+0x16>
    8002082a:	6542                	ld	a0,16(sp)
    8002082c:	6582                	ld	a1,0(sp)
    8002082e:	e188                	sd	a0,0(a1)
        self.next = raw_list;
    80020830:	6662                	ld	a2,24(sp)
    80020832:	e608                	sd	a0,8(a2)
    }
    80020834:	60a6                	ld	ra,72(sp)
    80020836:	6161                	addi	sp,sp,80
    80020838:	8082                	ret

Disassembly of section .text._ZN9allocator4list4List3pop17h8bc4ea807ae3c81eE:

000000008002083a <_ZN9allocator4list4List3pop17h8bc4ea807ae3c81eE>:

    pub unsafe fn pop(&mut self) -> Option<usize> {
    8002083a:	715d                	addi	sp,sp,-80
    8002083c:	e486                	sd	ra,72(sp)
    8002083e:	fc2a                	sd	a0,56(sp)
        if self.is_empty() {
    80020840:	f02a                	sd	a0,32(sp)
    80020842:	00000097          	auipc	ra,0x0
    80020846:	07c080e7          	jalr	124(ra) # 800208be <_ZN9allocator4list4List8is_empty17hc365136672504482E>
    8002084a:	ec2a                	sd	a0,24(sp)
    8002084c:	a009                	j	8002084e <_ZN9allocator4list4List3pop17h8bc4ea807ae3c81eE+0x14>
    8002084e:	4501                	li	a0,0
    80020850:	65e2                	ld	a1,24(sp)
    80020852:	00a58663          	beq	a1,a0,8002085e <_ZN9allocator4list4List3pop17h8bc4ea807ae3c81eE+0x24>
    80020856:	a009                	j	80020858 <_ZN9allocator4list4List3pop17h8bc4ea807ae3c81eE+0x1e>
    80020858:	4501                	li	a0,0
            return None
    8002085a:	f42a                	sd	a0,40(sp)
        }
        let raw_addr = self.next as usize;
        self.next.as_mut().unwrap().remove();
        Some(raw_addr)
    }
    8002085c:	a091                	j	800208a0 <.LBB2_8+0x2c>
        let raw_addr = self.next as usize;
    8002085e:	7502                	ld	a0,32(sp)
    80020860:	650c                	ld	a1,8(a0)
    80020862:	e0ae                	sd	a1,64(sp)
        self.next.as_mut().unwrap().remove();
    80020864:	6508                	ld	a0,8(a0)
    80020866:	e82e                	sd	a1,16(sp)
    80020868:	00000097          	auipc	ra,0x0
    8002086c:	874080e7          	jalr	-1932(ra) # 800200dc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6as_mut17hc52f0b3c610b25eaE>
    80020870:	e42a                	sd	a0,8(sp)
    80020872:	a009                	j	80020874 <.LBB2_8>

0000000080020874 <.LBB2_8>:
    80020874:	0000a597          	auipc	a1,0xa
    80020878:	85c58593          	addi	a1,a1,-1956 # 8002a0d0 <.L__unnamed_2>
    8002087c:	6522                	ld	a0,8(sp)
    8002087e:	00000097          	auipc	ra,0x0
    80020882:	a2c080e7          	jalr	-1492(ra) # 800202aa <_ZN4core6option15Option$LT$T$GT$6unwrap17h045d6fa1fc511887E>
    80020886:	e02a                	sd	a0,0(sp)
    80020888:	a009                	j	8002088a <.LBB2_8+0x16>
    8002088a:	6502                	ld	a0,0(sp)
    8002088c:	00000097          	auipc	ra,0x0
    80020890:	01e080e7          	jalr	30(ra) # 800208aa <_ZN9allocator4list4List6remove17h5ea282d82a225b7bE>
    80020894:	a009                	j	80020896 <.LBB2_8+0x22>
        Some(raw_addr)
    80020896:	6542                	ld	a0,16(sp)
    80020898:	f82a                	sd	a0,48(sp)
    8002089a:	4585                	li	a1,1
    8002089c:	f42e                	sd	a1,40(sp)
    }
    8002089e:	a009                	j	800208a0 <.LBB2_8+0x2c>
    800208a0:	7522                	ld	a0,40(sp)
    800208a2:	75c2                	ld	a1,48(sp)
    800208a4:	60a6                	ld	ra,72(sp)
    800208a6:	6161                	addi	sp,sp,80
    800208a8:	8082                	ret

Disassembly of section .text._ZN9allocator4list4List6remove17h5ea282d82a225b7bE:

00000000800208aa <_ZN9allocator4list4List6remove17h5ea282d82a225b7bE>:

    pub unsafe fn remove(&mut self) {
    800208aa:	1141                	addi	sp,sp,-16
    800208ac:	e42a                	sd	a0,8(sp)
        (*self.prev).next = self.next;
    800208ae:	650c                	ld	a1,8(a0)
    800208b0:	6110                	ld	a2,0(a0)
    800208b2:	e60c                	sd	a1,8(a2)
        (*self.next).prev = self.prev;
    800208b4:	610c                	ld	a1,0(a0)
    800208b6:	6508                	ld	a0,8(a0)
    800208b8:	e10c                	sd	a1,0(a0)
    }
    800208ba:	0141                	addi	sp,sp,16
    800208bc:	8082                	ret

Disassembly of section .text._ZN9allocator4list4List8is_empty17hc365136672504482E:

00000000800208be <_ZN9allocator4list4List8is_empty17hc365136672504482E>:

    pub fn is_empty(&self) -> bool {
    800208be:	1101                	addi	sp,sp,-32
    800208c0:	ec06                	sd	ra,24(sp)
    800208c2:	e82a                	sd	a0,16(sp)
        ptr::eq(self.next, self)
    800208c4:	650c                	ld	a1,8(a0)
    800208c6:	e42a                	sd	a0,8(sp)
    800208c8:	852e                	mv	a0,a1
    800208ca:	65a2                	ld	a1,8(sp)
    800208cc:	00000097          	auipc	ra,0x0
    800208d0:	c26080e7          	jalr	-986(ra) # 800204f2 <_ZN4core3ptr2eq17h49624ed2eb987b95E>
    800208d4:	e02a                	sd	a0,0(sp)
    800208d6:	a009                	j	800208d8 <_ZN9allocator4list4List8is_empty17hc365136672504482E+0x1a>
    }
    800208d8:	6502                	ld	a0,0(sp)
    800208da:	60e2                	ld	ra,24(sp)
    800208dc:	6105                	addi	sp,sp,32
    800208de:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE:

00000000800208e0 <_ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE>:
pub unsafe fn write_bytes<T>(dst: *mut T, val: u8, count: usize) {
    800208e0:	7179                	addi	sp,sp,-48
    800208e2:	f406                	sd	ra,40(sp)
    800208e4:	86ae                	mv	a3,a1
    800208e6:	e82a                	sd	a0,16(sp)
    800208e8:	00b10fa3          	sb	a1,31(sp)
    800208ec:	f032                	sd	a2,32(sp)
    unsafe { write_bytes(dst, val, count) }
    800208ee:	e436                	sd	a3,8(sp)
    800208f0:	00003097          	auipc	ra,0x3
    800208f4:	fc2080e7          	jalr	-62(ra) # 800238b2 <memset>
    800208f8:	a009                	j	800208fa <_ZN4core10intrinsics11write_bytes17h2fdec4331b23d58eE+0x1a>
}
    800208fa:	70a2                	ld	ra,40(sp)
    800208fc:	6145                	addi	sp,sp,48
    800208fe:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics11write_bytes17haa847e3376c8ae6aE:

0000000080020900 <_ZN4core10intrinsics11write_bytes17haa847e3376c8ae6aE>:
pub unsafe fn write_bytes<T>(dst: *mut T, val: u8, count: usize) {
    80020900:	7179                	addi	sp,sp,-48
    80020902:	f406                	sd	ra,40(sp)
    80020904:	86ae                	mv	a3,a1
    80020906:	e82a                	sd	a0,16(sp)
    80020908:	00b10fa3          	sb	a1,31(sp)
    8002090c:	f032                	sd	a2,32(sp)
    8002090e:	03000713          	li	a4,48
    unsafe { write_bytes(dst, val, count) }
    80020912:	02e60633          	mul	a2,a2,a4
    80020916:	e436                	sd	a3,8(sp)
    80020918:	00003097          	auipc	ra,0x3
    8002091c:	f9a080e7          	jalr	-102(ra) # 800238b2 <memset>
    80020920:	a009                	j	80020922 <_ZN4core10intrinsics11write_bytes17haa847e3376c8ae6aE+0x22>
}
    80020922:	70a2                	ld	ra,40(sp)
    80020924:	6145                	addi	sp,sp,48
    80020926:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h63f2677775101c48E:

0000000080020928 <_ZN4core10intrinsics19copy_nonoverlapping17h63f2677775101c48E>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    80020928:	7179                	addi	sp,sp,-48
    8002092a:	f406                	sd	ra,40(sp)
    8002092c:	e82a                	sd	a0,16(sp)
    8002092e:	ec2e                	sd	a1,24(sp)
    80020930:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80020932:	060e                	slli	a2,a2,0x3
    80020934:	e42a                	sd	a0,8(sp)
    80020936:	852e                	mv	a0,a1
    80020938:	65a2                	ld	a1,8(sp)
    8002093a:	00003097          	auipc	ra,0x3
    8002093e:	f26080e7          	jalr	-218(ra) # 80023860 <memcpy>
    80020942:	a009                	j	80020944 <_ZN4core10intrinsics19copy_nonoverlapping17h63f2677775101c48E+0x1c>
}
    80020944:	70a2                	ld	ra,40(sp)
    80020946:	6145                	addi	sp,sp,48
    80020948:	8082                	ret

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE:

000000008002094a <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE>:
pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {
    8002094a:	7179                	addi	sp,sp,-48
    8002094c:	f406                	sd	ra,40(sp)
    8002094e:	e82a                	sd	a0,16(sp)
    80020950:	ec2e                	sd	a1,24(sp)
    80020952:	f032                	sd	a2,32(sp)
    unsafe { copy_nonoverlapping(src, dst, count) }
    80020954:	e42a                	sd	a0,8(sp)
    80020956:	852e                	mv	a0,a1
    80020958:	65a2                	ld	a1,8(sp)
    8002095a:	00003097          	auipc	ra,0x3
    8002095e:	f06080e7          	jalr	-250(ra) # 80023860 <memcpy>
    80020962:	a009                	j	80020964 <_ZN4core10intrinsics19copy_nonoverlapping17hcac1a212ca6f9fcbE+0x1a>
}
    80020964:	70a2                	ld	ra,40(sp)
    80020966:	6145                	addi	sp,sp,48
    80020968:	8082                	ret

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hef2fc2601c683e70E:

000000008002096a <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hef2fc2601c683e70E>:
    pub const fn get(&self) -> *mut T {
    8002096a:	1141                	addi	sp,sp,-16
    8002096c:	e42a                	sd	a0,8(sp)
    }
    8002096e:	0141                	addi	sp,sp,16
    80020970:	8082                	ret

Disassembly of section .text._ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h99e80ad9ba777ad7E:

0000000080020972 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h99e80ad9ba777ad7E>:
    pub const fn guaranteed_eq(self, other: *const T) -> bool
    80020972:	1101                	addi	sp,sp,-32
    80020974:	e42a                	sd	a0,8(sp)
    80020976:	e82e                	sd	a1,16(sp)
        intrinsics::ptr_guaranteed_eq(self, other)
    80020978:	8d2d                	xor	a0,a0,a1
    8002097a:	00153513          	seqz	a0,a0
    8002097e:	00a10fa3          	sb	a0,31(sp)
    80020982:	e02a                	sd	a0,0(sp)
    80020984:	a009                	j	80020986 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h99e80ad9ba777ad7E+0x14>
    }
    80020986:	6502                	ld	a0,0(sp)
    80020988:	6105                	addi	sp,sp,32
    8002098a:	8082                	ret

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17haf816dc4f723dcb1E:

000000008002098c <_ZN4core3fmt10ArgumentV13new17haf816dc4f723dcb1E>:
    pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
    8002098c:	715d                	addi	sp,sp,-80
    8002098e:	f82a                	sd	a0,48(sp)
    80020990:	fc2e                	sd	a1,56(sp)
        unsafe { ArgumentV1 { formatter: mem::transmute(f), value: mem::transmute(x) } }
    80020992:	e0ae                	sd	a1,64(sp)
    80020994:	ec2a                	sd	a0,24(sp)
    80020996:	e82e                	sd	a1,16(sp)
    80020998:	a009                	j	8002099a <_ZN4core3fmt10ArgumentV13new17haf816dc4f723dcb1E+0xe>
    8002099a:	6562                	ld	a0,24(sp)
    8002099c:	e4aa                	sd	a0,72(sp)
    8002099e:	e42a                	sd	a0,8(sp)
    800209a0:	a009                	j	800209a2 <_ZN4core3fmt10ArgumentV13new17haf816dc4f723dcb1E+0x16>
    800209a2:	6522                	ld	a0,8(sp)
    800209a4:	f02a                	sd	a0,32(sp)
    800209a6:	65c2                	ld	a1,16(sp)
    800209a8:	f42e                	sd	a1,40(sp)
    }
    800209aa:	6161                	addi	sp,sp,80
    800209ac:	8082                	ret

Disassembly of section .text._ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E:

00000000800209ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E>:
    pub const fn guaranteed_eq(self, other: *mut T) -> bool
    800209ae:	1101                	addi	sp,sp,-32
    800209b0:	e42a                	sd	a0,8(sp)
    800209b2:	e82e                	sd	a1,16(sp)
        intrinsics::ptr_guaranteed_eq(self as *const _, other as *const _)
    800209b4:	8d2d                	xor	a0,a0,a1
    800209b6:	00153513          	seqz	a0,a0
    800209ba:	00a10fa3          	sb	a0,31(sp)
    800209be:	e02a                	sd	a0,0(sp)
    800209c0:	a009                	j	800209c2 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hc5d6085c4f115bc0E+0x14>
    }
    800209c2:	6502                	ld	a0,0(sp)
    800209c4:	6105                	addi	sp,sp,32
    800209c6:	8082                	ret

Disassembly of section .text._ZN4core4sync6atomic11atomic_load17h1d147b33793f02bdE:

00000000800209c8 <_ZN4core4sync6atomic11atomic_load17h1d147b33793f02bdE>:
unsafe fn atomic_load<T: Copy>(dst: *const T, order: Ordering) -> T {
    800209c8:	1101                	addi	sp,sp,-32
    800209ca:	862e                	mv	a2,a1
    800209cc:	00b10b23          	sb	a1,22(sp)
    800209d0:	ec2a                	sd	a0,24(sp)
            Acquire => intrinsics::atomic_load_acq(dst),
    800209d2:	0ff5f593          	zext.b	a1,a1
    800209d6:	4681                	li	a3,0
    800209d8:	e42a                	sd	a0,8(sp)
    800209da:	e02e                	sd	a1,0(sp)
    800209dc:	04d58c63          	beq	a1,a3,80020a34 <.LBB1_16+0x2a>
    800209e0:	a009                	j	800209e2 <_ZN4core4sync6atomic11atomic_load17h1d147b33793f02bdE+0x1a>
    800209e2:	4505                	li	a0,1
    800209e4:	6582                	ld	a1,0(sp)
    800209e6:	06a58963          	beq	a1,a0,80020a58 <.LBB1_17>
    800209ea:	a009                	j	800209ec <_ZN4core4sync6atomic11atomic_load17h1d147b33793f02bdE+0x24>
    800209ec:	4509                	li	a0,2
    800209ee:	6582                	ld	a1,0(sp)
    800209f0:	02a58963          	beq	a1,a0,80020a22 <.LBB1_16+0x18>
    800209f4:	a009                	j	800209f6 <_ZN4core4sync6atomic11atomic_load17h1d147b33793f02bdE+0x2e>
    800209f6:	450d                	li	a0,3
    800209f8:	6582                	ld	a1,0(sp)
    800209fa:	00a58463          	beq	a1,a0,80020a02 <.LBB1_15>
    800209fe:	a009                	j	80020a00 <_ZN4core4sync6atomic11atomic_load17h1d147b33793f02bdE+0x38>
    80020a00:	a089                	j	80020a42 <.LBB1_16+0x38>

0000000080020a02 <.LBB1_15>:
            AcqRel => panic!("there is no such thing as an acquire/release load"),
    80020a02:	00009517          	auipc	a0,0x9
    80020a06:	6e650513          	addi	a0,a0,1766 # 8002a0e8 <.L__unnamed_1>

0000000080020a0a <.LBB1_16>:
    80020a0a:	00009617          	auipc	a2,0x9
    80020a0e:	78660613          	addi	a2,a2,1926 # 8002a190 <.L__unnamed_2>
    80020a12:	03100593          	li	a1,49
    80020a16:	00000097          	auipc	ra,0x0
    80020a1a:	2b4080e7          	jalr	692(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80020a1e:	0000                	unimp
        match order {
    80020a20:	0000                	unimp
            Acquire => intrinsics::atomic_load_acq(dst),
    80020a22:	6522                	ld	a0,8(sp)
    80020a24:	00050583          	lb	a1,0(a0)
    80020a28:	0230000f          	fence	r,rw
    80020a2c:	00b10ba3          	sb	a1,23(sp)
    80020a30:	a009                	j	80020a32 <.LBB1_16+0x28>
        match order {
    80020a32:	a091                	j	80020a76 <.LBB1_18+0x16>
            Relaxed => intrinsics::atomic_load_relaxed(dst),
    80020a34:	6522                	ld	a0,8(sp)
    80020a36:	00050583          	lb	a1,0(a0)
    80020a3a:	00b10ba3          	sb	a1,23(sp)
    80020a3e:	a009                	j	80020a40 <.LBB1_16+0x36>
        match order {
    80020a40:	a81d                	j	80020a76 <.LBB1_18+0x16>
            SeqCst => intrinsics::atomic_load(dst),
    80020a42:	0330000f          	fence	rw,rw
    80020a46:	6522                	ld	a0,8(sp)
    80020a48:	00050583          	lb	a1,0(a0)
    80020a4c:	0230000f          	fence	r,rw
    80020a50:	00b10ba3          	sb	a1,23(sp)
    80020a54:	a009                	j	80020a56 <.LBB1_16+0x4c>
        match order {
    80020a56:	a005                	j	80020a76 <.LBB1_18+0x16>

0000000080020a58 <.LBB1_17>:
            Release => panic!("there is no such thing as a release load"),
    80020a58:	00009517          	auipc	a0,0x9
    80020a5c:	75050513          	addi	a0,a0,1872 # 8002a1a8 <.L__unnamed_3>

0000000080020a60 <.LBB1_18>:
    80020a60:	00009617          	auipc	a2,0x9
    80020a64:	77060613          	addi	a2,a2,1904 # 8002a1d0 <.L__unnamed_4>
    80020a68:	02800593          	li	a1,40
    80020a6c:	00000097          	auipc	ra,0x0
    80020a70:	25e080e7          	jalr	606(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    80020a74:	0000                	unimp
}
    80020a76:	01710503          	lb	a0,23(sp)
    80020a7a:	6105                	addi	sp,sp,32
    80020a7c:	8082                	ret

Disassembly of section .text._ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE:

0000000080020a7e <_ZN5alloc5alloc18handle_alloc_error17hd88389f3109c4dfdE>:
    80020a7e:	1141                	addi	sp,sp,-16
    80020a80:	e406                	sd	ra,8(sp)
    80020a82:	ffffd097          	auipc	ra,0xffffd
    80020a86:	2dc080e7          	jalr	732(ra) # 8001dd5e <__rust_alloc_error_handler>
	...

Disassembly of section .text.__rg_oom:

0000000080020a8c <__rg_oom>:
    80020a8c:	1141                	addi	sp,sp,-16
    80020a8e:	e406                	sd	ra,8(sp)
    80020a90:	ffff3097          	auipc	ra,0xffff3
    80020a94:	d34080e7          	jalr	-716(ra) # 800137c4 <rust_oom>
	...

Disassembly of section .text._ZN5alloc7raw_vec17capacity_overflow17h81167f6233698fbeE:

0000000080020a9a <_ZN5alloc7raw_vec17capacity_overflow17h81167f6233698fbeE>:
    80020a9a:	1141                	addi	sp,sp,-16
    80020a9c:	e406                	sd	ra,8(sp)

0000000080020a9e <.LBB23_1>:
    80020a9e:	00009517          	auipc	a0,0x9
    80020aa2:	76650513          	addi	a0,a0,1894 # 8002a204 <.Lanon.e90f1eee9d5e517caa26d067bfb75e11.19>

0000000080020aa6 <.LBB23_2>:
    80020aa6:	00009617          	auipc	a2,0x9
    80020aaa:	77260613          	addi	a2,a2,1906 # 8002a218 <.Lanon.e90f1eee9d5e517caa26d067bfb75e11.20>
    80020aae:	45c5                	li	a1,17
    80020ab0:	00000097          	auipc	ra,0x0
    80020ab4:	21a080e7          	jalr	538(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h95cfec27c73dbf25E:

0000000080020aba <_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h95cfec27c73dbf25E>:
    pub const fn get(&self) -> *mut T {
    80020aba:	1141                	addi	sp,sp,-16
    80020abc:	e42a                	sd	a0,8(sp)
    }
    80020abe:	0141                	addi	sp,sp,16
    80020ac0:	8082                	ret

Disassembly of section .text._ZN4core3ops8function6FnOnce9call_once17hbe6f1b732a2946a4E:

0000000080020ac2 <_ZN4core3ops8function6FnOnce9call_once17hbe6f1b732a2946a4E>:
    80020ac2:	6108                	ld	a0,0(a0)
    80020ac4:	a001                	j	80020ac4 <_ZN4core3ops8function6FnOnce9call_once17hbe6f1b732a2946a4E+0x2>

Disassembly of section .text._ZN4core3ptr102drop_in_place$LT$$RF$core..iter..adapters..copied..Copied$LT$core..slice..iter..Iter$LT$u8$GT$$GT$$GT$17h2c14ec9a62b1a876E:

0000000080020ac6 <_ZN4core3ptr102drop_in_place$LT$$RF$core..iter..adapters..copied..Copied$LT$core..slice..iter..Iter$LT$u8$GT$$GT$$GT$17h2c14ec9a62b1a876E>:
    80020ac6:	8082                	ret

Disassembly of section .text._ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c19ef341f8f601cE:

0000000080020ac8 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c19ef341f8f601cE>:
    80020ac8:	715d                	addi	sp,sp,-80
    80020aca:	e486                	sd	ra,72(sp)
    80020acc:	e0a2                	sd	s0,64(sp)
    80020ace:	fc26                	sd	s1,56(sp)
    80020ad0:	842e                	mv	s0,a1
    80020ad2:	84aa                	mv	s1,a0
    80020ad4:	00002097          	auipc	ra,0x2
    80020ad8:	2d2080e7          	jalr	722(ra) # 80022da6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE>
    80020adc:	e51d                	bnez	a0,80020b0a <.LBB76_5+0x18>
    80020ade:	7008                	ld	a0,32(s0)
    80020ae0:	740c                	ld	a1,40(s0)

0000000080020ae2 <.LBB76_4>:
    80020ae2:	00009617          	auipc	a2,0x9
    80020ae6:	75660613          	addi	a2,a2,1878 # 8002a238 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.141>
    80020aea:	e432                	sd	a2,8(sp)
    80020aec:	4605                	li	a2,1
    80020aee:	e832                	sd	a2,16(sp)
    80020af0:	ec02                	sd	zero,24(sp)

0000000080020af2 <.LBB76_5>:
    80020af2:	00009617          	auipc	a2,0x9
    80020af6:	73e60613          	addi	a2,a2,1854 # 8002a230 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.33>
    80020afa:	f432                	sd	a2,40(sp)
    80020afc:	f802                	sd	zero,48(sp)
    80020afe:	0030                	addi	a2,sp,8
    80020b00:	00001097          	auipc	ra,0x1
    80020b04:	89c080e7          	jalr	-1892(ra) # 8002139c <_ZN4core3fmt5write17h338141860f5a80fbE>
    80020b08:	c519                	beqz	a0,80020b16 <.LBB76_5+0x24>
    80020b0a:	4505                	li	a0,1
    80020b0c:	74e2                	ld	s1,56(sp)
    80020b0e:	6406                	ld	s0,64(sp)
    80020b10:	60a6                	ld	ra,72(sp)
    80020b12:	6161                	addi	sp,sp,80
    80020b14:	8082                	ret
    80020b16:	00848513          	addi	a0,s1,8
    80020b1a:	85a2                	mv	a1,s0
    80020b1c:	74e2                	ld	s1,56(sp)
    80020b1e:	6406                	ld	s0,64(sp)
    80020b20:	60a6                	ld	ra,72(sp)
    80020b22:	6161                	addi	sp,sp,80
    80020b24:	00002317          	auipc	t1,0x2
    80020b28:	28230067          	jr	642(t1) # 80022da6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE>

Disassembly of section .text._ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h7108e12ad9db6507E:

0000000080020b2c <_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h7108e12ad9db6507E>:
    80020b2c:	0160f537          	lui	a0,0x160f
    80020b30:	6275051b          	addiw	a0,a0,1575
    80020b34:	0536                	slli	a0,a0,0xd
    80020b36:	3d750513          	addi	a0,a0,983 # 160f3d7 <.Lline_table_start0+0x15d7090>
    80020b3a:	0532                	slli	a0,a0,0xc
    80020b3c:	f8150513          	addi	a0,a0,-127
    80020b40:	0532                	slli	a0,a0,0xc
    80020b42:	f4250513          	addi	a0,a0,-190
    80020b46:	8082                	ret

Disassembly of section .text._ZN4core6option13expect_failed17h7584820e4d909684E:

0000000080020b48 <_ZN4core6option13expect_failed17h7584820e4d909684E>:
    80020b48:	711d                	addi	sp,sp,-96
    80020b4a:	ec86                	sd	ra,88(sp)
    80020b4c:	e42a                	sd	a0,8(sp)
    80020b4e:	e82e                	sd	a1,16(sp)
    80020b50:	0028                	addi	a0,sp,8
    80020b52:	e4aa                	sd	a0,72(sp)

0000000080020b54 <.LBB117_1>:
    80020b54:	00003517          	auipc	a0,0x3
    80020b58:	94850513          	addi	a0,a0,-1720 # 8002349c <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E>
    80020b5c:	e8aa                	sd	a0,80(sp)

0000000080020b5e <.LBB117_2>:
    80020b5e:	00009517          	auipc	a0,0x9
    80020b62:	71a50513          	addi	a0,a0,1818 # 8002a278 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.176>
    80020b66:	ec2a                	sd	a0,24(sp)
    80020b68:	4505                	li	a0,1
    80020b6a:	f02a                	sd	a0,32(sp)
    80020b6c:	f402                	sd	zero,40(sp)
    80020b6e:	00ac                	addi	a1,sp,72
    80020b70:	fc2e                	sd	a1,56(sp)
    80020b72:	e0aa                	sd	a0,64(sp)
    80020b74:	0828                	addi	a0,sp,24
    80020b76:	85b2                	mv	a1,a2
    80020b78:	00000097          	auipc	ra,0x0
    80020b7c:	1be080e7          	jalr	446(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN4core6option18expect_none_failed17hf4b8b266798017eaE:

0000000080020b82 <_ZN4core6option18expect_none_failed17hf4b8b266798017eaE>:
    80020b82:	7119                	addi	sp,sp,-128
    80020b84:	fc86                	sd	ra,120(sp)
    80020b86:	e42a                	sd	a0,8(sp)
    80020b88:	e82e                	sd	a1,16(sp)
    80020b8a:	ec32                	sd	a2,24(sp)
    80020b8c:	f036                	sd	a3,32(sp)
    80020b8e:	0028                	addi	a0,sp,8
    80020b90:	ecaa                	sd	a0,88(sp)

0000000080020b92 <.LBB118_1>:
    80020b92:	00003517          	auipc	a0,0x3
    80020b96:	90a50513          	addi	a0,a0,-1782 # 8002349c <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E>
    80020b9a:	f0aa                	sd	a0,96(sp)
    80020b9c:	0828                	addi	a0,sp,24
    80020b9e:	f4aa                	sd	a0,104(sp)

0000000080020ba0 <.LBB118_2>:
    80020ba0:	00003517          	auipc	a0,0x3
    80020ba4:	8f450513          	addi	a0,a0,-1804 # 80023494 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc803731d5e879d1bE>
    80020ba8:	f8aa                	sd	a0,112(sp)

0000000080020baa <.LBB118_3>:
    80020baa:	00009517          	auipc	a0,0x9
    80020bae:	6e650513          	addi	a0,a0,1766 # 8002a290 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.178>
    80020bb2:	f42a                	sd	a0,40(sp)
    80020bb4:	4509                	li	a0,2
    80020bb6:	f82a                	sd	a0,48(sp)
    80020bb8:	fc02                	sd	zero,56(sp)
    80020bba:	08ac                	addi	a1,sp,88
    80020bbc:	e4ae                	sd	a1,72(sp)
    80020bbe:	e8aa                	sd	a0,80(sp)
    80020bc0:	1028                	addi	a0,sp,40
    80020bc2:	85ba                	mv	a1,a4
    80020bc4:	00000097          	auipc	ra,0x0
    80020bc8:	172080e7          	jalr	370(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN61_$LT$core..panic..PanicInfo$u20$as$u20$core..fmt..Display$GT$3fmt17hb4d6410e4677a5d3E:

0000000080020bce <_ZN61_$LT$core..panic..PanicInfo$u20$as$u20$core..fmt..Display$GT$3fmt17hb4d6410e4677a5d3E>:
    80020bce:	7175                	addi	sp,sp,-144
    80020bd0:	e506                	sd	ra,136(sp)
    80020bd2:	e122                	sd	s0,128(sp)
    80020bd4:	fca6                	sd	s1,120(sp)
    80020bd6:	f8ca                	sd	s2,112(sp)
    80020bd8:	842e                	mv	s0,a1
    80020bda:	758c                	ld	a1,40(a1)
    80020bdc:	7014                	ld	a3,32(s0)
    80020bde:	6d98                	ld	a4,24(a1)
    80020be0:	892a                	mv	s2,a0

0000000080020be2 <.LBB122_8>:
    80020be2:	00009597          	auipc	a1,0x9
    80020be6:	6ee58593          	addi	a1,a1,1774 # 8002a2d0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.180>
    80020bea:	4631                	li	a2,12
    80020bec:	8536                	mv	a0,a3
    80020bee:	9702                	jalr	a4
    80020bf0:	4485                	li	s1,1
    80020bf2:	e569                	bnez	a0,80020cbc <.LBB122_14+0x22>
    80020bf4:	01093503          	ld	a0,16(s2)
    80020bf8:	c909                	beqz	a0,80020c0a <.LBB122_9+0xa>
    80020bfa:	e42a                	sd	a0,8(sp)
    80020bfc:	0028                	addi	a0,sp,8
    80020bfe:	e82a                	sd	a0,16(sp)

0000000080020c00 <.LBB122_9>:
    80020c00:	00003517          	auipc	a0,0x3
    80020c04:	8be50513          	addi	a0,a0,-1858 # 800234be <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf8d117bc396dc3c6E>
    80020c08:	a835                	j	80020c44 <.LBB122_10+0x8>
    80020c0a:	00893503          	ld	a0,8(s2)
    80020c0e:	00093483          	ld	s1,0(s2)
    80020c12:	6d0c                	ld	a1,24(a0)
    80020c14:	8526                	mv	a0,s1
    80020c16:	9582                	jalr	a1
    80020c18:	007ef5b7          	lui	a1,0x7ef
    80020c1c:	2a95859b          	addiw	a1,a1,681
    80020c20:	05ba                	slli	a1,a1,0xe
    80020c22:	7bb58593          	addi	a1,a1,1979 # 7ef7bb <.Lline_table_start0+0x7b7474>
    80020c26:	05b2                	slli	a1,a1,0xc
    80020c28:	31f58593          	addi	a1,a1,799
    80020c2c:	05ba                	slli	a1,a1,0xe
    80020c2e:	cf458593          	addi	a1,a1,-780
    80020c32:	02b51e63          	bne	a0,a1,80020c6e <.LBB122_11+0x24>
    80020c36:	e426                	sd	s1,8(sp)
    80020c38:	0028                	addi	a0,sp,8
    80020c3a:	e82a                	sd	a0,16(sp)

0000000080020c3c <.LBB122_10>:
    80020c3c:	00003517          	auipc	a0,0x3
    80020c40:	87050513          	addi	a0,a0,-1936 # 800234ac <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h10736fa640ad137aE>
    80020c44:	ec2a                	sd	a0,24(sp)
    80020c46:	7008                	ld	a0,32(s0)
    80020c48:	740c                	ld	a1,40(s0)

0000000080020c4a <.LBB122_11>:
    80020c4a:	00009617          	auipc	a2,0x9
    80020c4e:	69660613          	addi	a2,a2,1686 # 8002a2e0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.183>
    80020c52:	e0b2                	sd	a2,64(sp)
    80020c54:	4609                	li	a2,2
    80020c56:	e4b2                	sd	a2,72(sp)
    80020c58:	e882                	sd	zero,80(sp)
    80020c5a:	0810                	addi	a2,sp,16
    80020c5c:	f0b2                	sd	a2,96(sp)
    80020c5e:	4485                	li	s1,1
    80020c60:	f4a6                	sd	s1,104(sp)
    80020c62:	0090                	addi	a2,sp,64
    80020c64:	00000097          	auipc	ra,0x0
    80020c68:	738080e7          	jalr	1848(ra) # 8002139c <_ZN4core3fmt5write17h338141860f5a80fbE>
    80020c6c:	e921                	bnez	a0,80020cbc <.LBB122_14+0x22>
    80020c6e:	01893503          	ld	a0,24(s2)
    80020c72:	01050593          	addi	a1,a0,16
    80020c76:	01450613          	addi	a2,a0,20
    80020c7a:	e82a                	sd	a0,16(sp)

0000000080020c7c <.LBB122_12>:
    80020c7c:	00003517          	auipc	a0,0x3
    80020c80:	82050513          	addi	a0,a0,-2016 # 8002349c <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E>
    80020c84:	ec2a                	sd	a0,24(sp)
    80020c86:	f02e                	sd	a1,32(sp)

0000000080020c88 <.LBB122_13>:
    80020c88:	00002517          	auipc	a0,0x2
    80020c8c:	1ee50513          	addi	a0,a0,494 # 80022e76 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h4f29d8511ba5e68eE>
    80020c90:	f42a                	sd	a0,40(sp)
    80020c92:	f832                	sd	a2,48(sp)
    80020c94:	fc2a                	sd	a0,56(sp)
    80020c96:	7008                	ld	a0,32(s0)
    80020c98:	740c                	ld	a1,40(s0)

0000000080020c9a <.LBB122_14>:
    80020c9a:	00009617          	auipc	a2,0x9
    80020c9e:	66e60613          	addi	a2,a2,1646 # 8002a308 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.185>
    80020ca2:	e0b2                	sd	a2,64(sp)
    80020ca4:	460d                	li	a2,3
    80020ca6:	e4b2                	sd	a2,72(sp)
    80020ca8:	e882                	sd	zero,80(sp)
    80020caa:	0814                	addi	a3,sp,16
    80020cac:	f0b6                	sd	a3,96(sp)
    80020cae:	f4b2                	sd	a2,104(sp)
    80020cb0:	0090                	addi	a2,sp,64
    80020cb2:	00000097          	auipc	ra,0x0
    80020cb6:	6ea080e7          	jalr	1770(ra) # 8002139c <_ZN4core3fmt5write17h338141860f5a80fbE>
    80020cba:	84aa                	mv	s1,a0
    80020cbc:	8526                	mv	a0,s1
    80020cbe:	7946                	ld	s2,112(sp)
    80020cc0:	74e6                	ld	s1,120(sp)
    80020cc2:	640a                	ld	s0,128(sp)
    80020cc4:	60aa                	ld	ra,136(sp)
    80020cc6:	6149                	addi	sp,sp,144
    80020cc8:	8082                	ret

Disassembly of section .text._ZN4core9panicking5panic17h4214b4eed8d3f37fE:

0000000080020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>:
    80020cca:	715d                	addi	sp,sp,-80
    80020ccc:	e486                	sd	ra,72(sp)
    80020cce:	fc2a                	sd	a0,56(sp)
    80020cd0:	e0ae                	sd	a1,64(sp)
    80020cd2:	1828                	addi	a0,sp,56
    80020cd4:	e42a                	sd	a0,8(sp)
    80020cd6:	4505                	li	a0,1
    80020cd8:	e82a                	sd	a0,16(sp)
    80020cda:	ec02                	sd	zero,24(sp)

0000000080020cdc <.LBB129_1>:
    80020cdc:	00009517          	auipc	a0,0x9
    80020ce0:	55450513          	addi	a0,a0,1364 # 8002a230 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.33>
    80020ce4:	f42a                	sd	a0,40(sp)
    80020ce6:	f802                	sd	zero,48(sp)
    80020ce8:	0028                	addi	a0,sp,8
    80020cea:	85b2                	mv	a1,a2
    80020cec:	00000097          	auipc	ra,0x0
    80020cf0:	04a080e7          	jalr	74(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E:

0000000080020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>:
    80020cf6:	7159                	addi	sp,sp,-112
    80020cf8:	f486                	sd	ra,104(sp)
    80020cfa:	e42a                	sd	a0,8(sp)
    80020cfc:	e82e                	sd	a1,16(sp)
    80020cfe:	0808                	addi	a0,sp,16
    80020d00:	e4aa                	sd	a0,72(sp)

0000000080020d02 <.LBB130_1>:
    80020d02:	00002517          	auipc	a0,0x2
    80020d06:	33050513          	addi	a0,a0,816 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    80020d0a:	e8aa                	sd	a0,80(sp)
    80020d0c:	002c                	addi	a1,sp,8
    80020d0e:	ecae                	sd	a1,88(sp)
    80020d10:	f0aa                	sd	a0,96(sp)

0000000080020d12 <.LBB130_2>:
    80020d12:	00009517          	auipc	a0,0x9
    80020d16:	63e50513          	addi	a0,a0,1598 # 8002a350 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.188>
    80020d1a:	ec2a                	sd	a0,24(sp)
    80020d1c:	4509                	li	a0,2
    80020d1e:	f02a                	sd	a0,32(sp)
    80020d20:	f402                	sd	zero,40(sp)
    80020d22:	00ac                	addi	a1,sp,72
    80020d24:	fc2e                	sd	a1,56(sp)
    80020d26:	e0aa                	sd	a0,64(sp)
    80020d28:	0828                	addi	a0,sp,24
    80020d2a:	85b2                	mv	a1,a2
    80020d2c:	00000097          	auipc	ra,0x0
    80020d30:	00a080e7          	jalr	10(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E:

0000000080020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>:
    80020d36:	7179                	addi	sp,sp,-48
    80020d38:	f406                	sd	ra,40(sp)

0000000080020d3a <.LBB131_1>:
    80020d3a:	00009617          	auipc	a2,0x9
    80020d3e:	4f660613          	addi	a2,a2,1270 # 8002a230 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.33>
    80020d42:	e432                	sd	a2,8(sp)

0000000080020d44 <.LBB131_2>:
    80020d44:	00009617          	auipc	a2,0x9
    80020d48:	56c60613          	addi	a2,a2,1388 # 8002a2b0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.179>
    80020d4c:	e832                	sd	a2,16(sp)
    80020d4e:	ec2a                	sd	a0,24(sp)
    80020d50:	f02e                	sd	a1,32(sp)
    80020d52:	0028                	addi	a0,sp,8
    80020d54:	ffff0097          	auipc	ra,0xffff0
    80020d58:	016080e7          	jalr	22(ra) # 80010d6a <rust_begin_unwind>
	...

Disassembly of section .text._ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E:

0000000080020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>:
    80020d5e:	715d                	addi	sp,sp,-80
    80020d60:	e486                	sd	ra,72(sp)
    80020d62:	e0a2                	sd	s0,64(sp)
    80020d64:	fc26                	sd	s1,56(sp)
    80020d66:	f84a                	sd	s2,48(sp)
    80020d68:	f44e                	sd	s3,40(sp)
    80020d6a:	f052                	sd	s4,32(sp)
    80020d6c:	ec56                	sd	s5,24(sp)
    80020d6e:	e85a                	sd	s6,16(sp)
    80020d70:	e45e                	sd	s7,8(sp)
    80020d72:	e062                	sd	s8,0(sp)
    80020d74:	ca7d                	beqz	a2,80020e6a <.LBB133_30+0x1a>
    80020d76:	84b2                	mv	s1,a2
    80020d78:	89ae                	mv	s3,a1
    80020d7a:	892a                	mv	s2,a0
    80020d7c:	4a3d                	li	s4,15
    80020d7e:	4aa9                	li	s5,10
    80020d80:	fbf00b13          	li	s6,-65
    80020d84:	4b85                	li	s7,1
    80020d86:	a809                	j	80020d98 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E+0x3a>
    80020d88:	6d94                	ld	a3,24(a1)
    80020d8a:	85ce                	mv	a1,s3
    80020d8c:	8622                	mv	a2,s0
    80020d8e:	9682                	jalr	a3
    80020d90:	ed79                	bnez	a0,80020e6e <.LBB133_30+0x1e>
    80020d92:	8c81                	sub	s1,s1,s0
    80020d94:	89e2                	mv	s3,s8
    80020d96:	c8f1                	beqz	s1,80020e6a <.LBB133_30+0x1a>
    80020d98:	01093503          	ld	a0,16(s2)
    80020d9c:	00054503          	lbu	a0,0(a0)
    80020da0:	cd09                	beqz	a0,80020dba <.LBB133_29+0xe>
    80020da2:	00893583          	ld	a1,8(s2)
    80020da6:	00093503          	ld	a0,0(s2)
    80020daa:	6d94                	ld	a3,24(a1)

0000000080020dac <.LBB133_29>:
    80020dac:	00004597          	auipc	a1,0x4
    80020db0:	a5458593          	addi	a1,a1,-1452 # 80024800 <.L__unnamed_4+0x18>
    80020db4:	4611                	li	a2,4
    80020db6:	9682                	jalr	a3
    80020db8:	e95d                	bnez	a0,80020e6e <.LBB133_30+0x1e>
    80020dba:	4401                	li	s0,0
    80020dbc:	8626                	mv	a2,s1
    80020dbe:	a029                	j	80020dc8 <.LBB133_29+0x1c>
    80020dc0:	40848633          	sub	a2,s1,s0
    80020dc4:	0484e963          	bltu	s1,s0,80020e16 <.LBB133_29+0x6a>
    80020dc8:	008985b3          	add	a1,s3,s0
    80020dcc:	02ca6063          	bltu	s4,a2,80020dec <.LBB133_29+0x40>
    80020dd0:	c239                	beqz	a2,80020e16 <.LBB133_29+0x6a>
    80020dd2:	4601                	li	a2,0
    80020dd4:	40848533          	sub	a0,s1,s0
    80020dd8:	00c586b3          	add	a3,a1,a2
    80020ddc:	0006c683          	lbu	a3,0(a3)
    80020de0:	01568e63          	beq	a3,s5,80020dfc <.LBB133_29+0x50>
    80020de4:	0605                	addi	a2,a2,1
    80020de6:	fec519e3          	bne	a0,a2,80020dd8 <.LBB133_29+0x2c>
    80020dea:	a035                	j	80020e16 <.LBB133_29+0x6a>
    80020dec:	4529                	li	a0,10
    80020dee:	00001097          	auipc	ra,0x1
    80020df2:	3da080e7          	jalr	986(ra) # 800221c8 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E>
    80020df6:	03751063          	bne	a0,s7,80020e16 <.LBB133_29+0x6a>
    80020dfa:	862e                	mv	a2,a1
    80020dfc:	00860533          	add	a0,a2,s0
    80020e00:	00150413          	addi	s0,a0,1
    80020e04:	fa957ee3          	bgeu	a0,s1,80020dc0 <.LBB133_29+0x14>
    80020e08:	954e                	add	a0,a0,s3
    80020e0a:	00054503          	lbu	a0,0(a0)
    80020e0e:	fb5519e3          	bne	a0,s5,80020dc0 <.LBB133_29+0x14>
    80020e12:	4505                	li	a0,1
    80020e14:	a019                	j	80020e1a <.LBB133_29+0x6e>
    80020e16:	4501                	li	a0,0
    80020e18:	8426                	mv	s0,s1
    80020e1a:	01093583          	ld	a1,16(s2)
    80020e1e:	00a58023          	sb	a0,0(a1)
    80020e22:	00093503          	ld	a0,0(s2)
    80020e26:	00893583          	ld	a1,8(s2)
    80020e2a:	00898c33          	add	s8,s3,s0
    80020e2e:	f4848de3          	beq	s1,s0,80020d88 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E+0x2a>
    80020e32:	04947b63          	bgeu	s0,s1,80020e88 <.LBB133_31>
    80020e36:	000c0603          	lb	a2,0(s8)
    80020e3a:	04cb5763          	bge	s6,a2,80020e88 <.LBB133_31>
    80020e3e:	6d94                	ld	a3,24(a1)
    80020e40:	85ce                	mv	a1,s3
    80020e42:	8622                	mv	a2,s0
    80020e44:	9682                	jalr	a3
    80020e46:	e505                	bnez	a0,80020e6e <.LBB133_30+0x1e>
    80020e48:	000c0503          	lb	a0,0(s8)
    80020e4c:	f4ab43e3          	blt	s6,a0,80020d92 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E+0x34>

0000000080020e50 <.LBB133_30>:
    80020e50:	00009717          	auipc	a4,0x9
    80020e54:	56870713          	addi	a4,a4,1384 # 8002a3b8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.193>
    80020e58:	854e                	mv	a0,s3
    80020e5a:	85a6                	mv	a1,s1
    80020e5c:	8622                	mv	a2,s0
    80020e5e:	86a6                	mv	a3,s1
    80020e60:	00001097          	auipc	ra,0x1
    80020e64:	79e080e7          	jalr	1950(ra) # 800225fe <_ZN4core3str16slice_error_fail17he9562343589499f6E>
    80020e68:	0000                	unimp
    80020e6a:	4501                	li	a0,0
    80020e6c:	a011                	j	80020e70 <.LBB133_30+0x20>
    80020e6e:	4505                	li	a0,1
    80020e70:	6c02                	ld	s8,0(sp)
    80020e72:	6ba2                	ld	s7,8(sp)
    80020e74:	6b42                	ld	s6,16(sp)
    80020e76:	6ae2                	ld	s5,24(sp)
    80020e78:	7a02                	ld	s4,32(sp)
    80020e7a:	79a2                	ld	s3,40(sp)
    80020e7c:	7942                	ld	s2,48(sp)
    80020e7e:	74e2                	ld	s1,56(sp)
    80020e80:	6406                	ld	s0,64(sp)
    80020e82:	60a6                	ld	ra,72(sp)
    80020e84:	6161                	addi	sp,sp,80
    80020e86:	8082                	ret

0000000080020e88 <.LBB133_31>:
    80020e88:	00009717          	auipc	a4,0x9
    80020e8c:	51870713          	addi	a4,a4,1304 # 8002a3a0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.192>
    80020e90:	854e                	mv	a0,s3
    80020e92:	85a6                	mv	a1,s1
    80020e94:	4601                	li	a2,0
    80020e96:	86a2                	mv	a3,s0
    80020e98:	00001097          	auipc	ra,0x1
    80020e9c:	766080e7          	jalr	1894(ra) # 800225fe <_ZN4core3str16slice_error_fail17he9562343589499f6E>
	...

Disassembly of section .text._ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE:

0000000080020ea2 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE>:
    80020ea2:	7135                	addi	sp,sp,-160
    80020ea4:	ed06                	sd	ra,152(sp)
    80020ea6:	e922                	sd	s0,144(sp)
    80020ea8:	e526                	sd	s1,136(sp)
    80020eaa:	e14a                	sd	s2,128(sp)
    80020eac:	fcce                	sd	s3,120(sp)
    80020eae:	f8d2                	sd	s4,112(sp)
    80020eb0:	f4d6                	sd	s5,104(sp)
    80020eb2:	f0da                	sd	s6,96(sp)
    80020eb4:	842a                	mv	s0,a0
    80020eb6:	00854503          	lbu	a0,8(a0)
    80020eba:	4b05                	li	s6,1
    80020ebc:	4485                	li	s1,1
    80020ebe:	c105                	beqz	a0,80020ede <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x3c>
    80020ec0:	00940423          	sb	s1,8(s0)
    80020ec4:	016404a3          	sb	s6,9(s0)
    80020ec8:	8522                	mv	a0,s0
    80020eca:	7b06                	ld	s6,96(sp)
    80020ecc:	7aa6                	ld	s5,104(sp)
    80020ece:	7a46                	ld	s4,112(sp)
    80020ed0:	79e6                	ld	s3,120(sp)
    80020ed2:	690a                	ld	s2,128(sp)
    80020ed4:	64aa                	ld	s1,136(sp)
    80020ed6:	644a                	ld	s0,144(sp)
    80020ed8:	60ea                	ld	ra,152(sp)
    80020eda:	610d                	addi	sp,sp,160
    80020edc:	8082                	ret
    80020ede:	89ba                	mv	s3,a4
    80020ee0:	8936                	mv	s2,a3
    80020ee2:	8a32                	mv	s4,a2
    80020ee4:	8aae                	mv	s5,a1
    80020ee6:	6008                	ld	a0,0(s0)
    80020ee8:	03056583          	lwu	a1,48(a0)
    80020eec:	00944603          	lbu	a2,9(s0)
    80020ef0:	0045f693          	andi	a3,a1,4
    80020ef4:	00163613          	seqz	a2,a2
    80020ef8:	e699                	bnez	a3,80020f06 <.LBB134_18+0xa>
    80020efa:	ea45                	bnez	a2,80020faa <.LBB134_23>

0000000080020efc <.LBB134_18>:
    80020efc:	00009597          	auipc	a1,0x9
    80020f00:	4d958593          	addi	a1,a1,1241 # 8002a3d5 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.196>
    80020f04:	a07d                	j	80020fb2 <.LBB134_23+0x8>
    80020f06:	ce19                	beqz	a2,80020f24 <.LBB134_19+0x16>
    80020f08:	750c                	ld	a1,40(a0)
    80020f0a:	7108                	ld	a0,32(a0)
    80020f0c:	6d94                	ld	a3,24(a1)

0000000080020f0e <.LBB134_19>:
    80020f0e:	00009597          	auipc	a1,0x9
    80020f12:	4c258593          	addi	a1,a1,1218 # 8002a3d0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.194>
    80020f16:	460d                	li	a2,3
    80020f18:	9682                	jalr	a3
    80020f1a:	4485                	li	s1,1
    80020f1c:	f155                	bnez	a0,80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>
    80020f1e:	6008                	ld	a0,0(s0)
    80020f20:	03056583          	lwu	a1,48(a0)
    80020f24:	4485                	li	s1,1
    80020f26:	00910fa3          	sb	s1,31(sp)
    80020f2a:	7110                	ld	a2,32(a0)
    80020f2c:	7514                	ld	a3,40(a0)
    80020f2e:	e032                	sd	a2,0(sp)
    80020f30:	e436                	sd	a3,8(sp)
    80020f32:	01f10613          	addi	a2,sp,31
    80020f36:	e832                	sd	a2,16(sp)
    80020f38:	5950                	lw	a2,52(a0)
    80020f3a:	03850683          	lb	a3,56(a0)
    80020f3e:	6118                	ld	a4,0(a0)
    80020f40:	651c                	ld	a5,8(a0)
    80020f42:	01053803          	ld	a6,16(a0)
    80020f46:	6d08                	ld	a0,24(a0)
    80020f48:	c8ae                	sw	a1,80(sp)
    80020f4a:	cab2                	sw	a2,84(sp)
    80020f4c:	04d10c23          	sb	a3,88(sp)
    80020f50:	f03a                	sd	a4,32(sp)
    80020f52:	f43e                	sd	a5,40(sp)
    80020f54:	f842                	sd	a6,48(sp)
    80020f56:	fc2a                	sd	a0,56(sp)
    80020f58:	850a                	mv	a0,sp
    80020f5a:	e0aa                	sd	a0,64(sp)

0000000080020f5c <.LBB134_20>:
    80020f5c:	00009597          	auipc	a1,0x9
    80020f60:	41458593          	addi	a1,a1,1044 # 8002a370 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.190>
    80020f64:	e4ae                	sd	a1,72(sp)
    80020f66:	85d6                	mv	a1,s5
    80020f68:	8652                	mv	a2,s4
    80020f6a:	00000097          	auipc	ra,0x0
    80020f6e:	df4080e7          	jalr	-524(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    80020f72:	f539                	bnez	a0,80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>

0000000080020f74 <.LBB134_21>:
    80020f74:	00009597          	auipc	a1,0x9
    80020f78:	31458593          	addi	a1,a1,788 # 8002a288 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.177>
    80020f7c:	850a                	mv	a0,sp
    80020f7e:	4609                	li	a2,2
    80020f80:	00000097          	auipc	ra,0x0
    80020f84:	dde080e7          	jalr	-546(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    80020f88:	fd05                	bnez	a0,80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>
    80020f8a:	0189b603          	ld	a2,24(s3)
    80020f8e:	100c                	addi	a1,sp,32
    80020f90:	854a                	mv	a0,s2
    80020f92:	9602                	jalr	a2
    80020f94:	f515                	bnez	a0,80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>
    80020f96:	65a6                	ld	a1,72(sp)
    80020f98:	6506                	ld	a0,64(sp)
    80020f9a:	6d94                	ld	a3,24(a1)

0000000080020f9c <.LBB134_22>:
    80020f9c:	00009597          	auipc	a1,0x9
    80020fa0:	43758593          	addi	a1,a1,1079 # 8002a3d3 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.195>
    80020fa4:	4609                	li	a2,2
    80020fa6:	9682                	jalr	a3
    80020fa8:	a889                	j	80020ffa <.LBB134_24+0x1c>

0000000080020faa <.LBB134_23>:
    80020faa:	00009597          	auipc	a1,0x9
    80020fae:	42d58593          	addi	a1,a1,1069 # 8002a3d7 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.197>
    80020fb2:	7514                	ld	a3,40(a0)
    80020fb4:	7108                	ld	a0,32(a0)
    80020fb6:	6e94                	ld	a3,24(a3)
    80020fb8:	00266613          	ori	a2,a2,2
    80020fbc:	9682                	jalr	a3
    80020fbe:	4485                	li	s1,1
    80020fc0:	f101                	bnez	a0,80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>
    80020fc2:	6008                	ld	a0,0(s0)
    80020fc4:	750c                	ld	a1,40(a0)
    80020fc6:	7108                	ld	a0,32(a0)
    80020fc8:	6d94                	ld	a3,24(a1)
    80020fca:	85d6                	mv	a1,s5
    80020fcc:	8652                	mv	a2,s4
    80020fce:	9682                	jalr	a3
    80020fd0:	4485                	li	s1,1
    80020fd2:	ee0517e3          	bnez	a0,80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>
    80020fd6:	6008                	ld	a0,0(s0)
    80020fd8:	750c                	ld	a1,40(a0)
    80020fda:	7108                	ld	a0,32(a0)
    80020fdc:	6d94                	ld	a3,24(a1)

0000000080020fde <.LBB134_24>:
    80020fde:	00009597          	auipc	a1,0x9
    80020fe2:	2aa58593          	addi	a1,a1,682 # 8002a288 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.177>
    80020fe6:	4609                	li	a2,2
    80020fe8:	9682                	jalr	a3
    80020fea:	4485                	li	s1,1
    80020fec:	ec051ae3          	bnez	a0,80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>
    80020ff0:	600c                	ld	a1,0(s0)
    80020ff2:	0189b603          	ld	a2,24(s3)
    80020ff6:	854a                	mv	a0,s2
    80020ff8:	9602                	jalr	a2
    80020ffa:	84aa                	mv	s1,a0
    80020ffc:	b5d1                	j	80020ec0 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE+0x1e>

Disassembly of section .text._ZN4core3fmt8builders10DebugTuple5field17h968d9eaf966503caE:

0000000080020ffe <_ZN4core3fmt8builders10DebugTuple5field17h968d9eaf966503caE>:
    80020ffe:	7175                	addi	sp,sp,-144
    80021000:	e506                	sd	ra,136(sp)
    80021002:	e122                	sd	s0,128(sp)
    80021004:	fca6                	sd	s1,120(sp)
    80021006:	f8ca                	sd	s2,112(sp)
    80021008:	f4ce                	sd	s3,104(sp)
    8002100a:	842a                	mv	s0,a0
    8002100c:	01054503          	lbu	a0,16(a0)
    80021010:	4485                	li	s1,1
    80021012:	e179                	bnez	a0,800210d8 <.LBB137_18+0x24>
    80021014:	89b2                	mv	s3,a2
    80021016:	892e                	mv	s2,a1
    80021018:	6008                	ld	a0,0(s0)
    8002101a:	03056583          	lwu	a1,48(a0)
    8002101e:	6410                	ld	a2,8(s0)
    80021020:	0045f693          	andi	a3,a1,4
    80021024:	00163613          	seqz	a2,a2
    80021028:	e699                	bnez	a3,80021036 <.LBB137_14+0xa>
    8002102a:	e649                	bnez	a2,800210b4 <.LBB137_18>

000000008002102c <.LBB137_14>:
    8002102c:	00009597          	auipc	a1,0x9
    80021030:	3a958593          	addi	a1,a1,937 # 8002a3d5 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.196>
    80021034:	a061                	j	800210bc <.LBB137_18+0x8>
    80021036:	ce11                	beqz	a2,80021052 <.LBB137_15+0x14>
    80021038:	750c                	ld	a1,40(a0)
    8002103a:	7108                	ld	a0,32(a0)
    8002103c:	6d94                	ld	a3,24(a1)

000000008002103e <.LBB137_15>:
    8002103e:	00009597          	auipc	a1,0x9
    80021042:	39f58593          	addi	a1,a1,927 # 8002a3dd <.Lanon.9d4bfc86079e95d674f3cded52b1db19.203>
    80021046:	4609                	li	a2,2
    80021048:	9682                	jalr	a3
    8002104a:	e559                	bnez	a0,800210d8 <.LBB137_18+0x24>
    8002104c:	6008                	ld	a0,0(s0)
    8002104e:	03056583          	lwu	a1,48(a0)
    80021052:	4485                	li	s1,1
    80021054:	029103a3          	sb	s1,39(sp)
    80021058:	7110                	ld	a2,32(a0)
    8002105a:	7514                	ld	a3,40(a0)
    8002105c:	e432                	sd	a2,8(sp)
    8002105e:	e836                	sd	a3,16(sp)
    80021060:	02710613          	addi	a2,sp,39
    80021064:	ec32                	sd	a2,24(sp)
    80021066:	5950                	lw	a2,52(a0)
    80021068:	03850683          	lb	a3,56(a0)
    8002106c:	6118                	ld	a4,0(a0)
    8002106e:	651c                	ld	a5,8(a0)
    80021070:	01053803          	ld	a6,16(a0)
    80021074:	6d08                	ld	a0,24(a0)
    80021076:	ccae                	sw	a1,88(sp)
    80021078:	ceb2                	sw	a2,92(sp)
    8002107a:	06d10023          	sb	a3,96(sp)
    8002107e:	f43a                	sd	a4,40(sp)
    80021080:	f83e                	sd	a5,48(sp)
    80021082:	fc42                	sd	a6,56(sp)
    80021084:	e0aa                	sd	a0,64(sp)
    80021086:	0028                	addi	a0,sp,8
    80021088:	0189b603          	ld	a2,24(s3)
    8002108c:	e4aa                	sd	a0,72(sp)

000000008002108e <.LBB137_16>:
    8002108e:	00009517          	auipc	a0,0x9
    80021092:	2e250513          	addi	a0,a0,738 # 8002a370 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.190>
    80021096:	e8aa                	sd	a0,80(sp)
    80021098:	102c                	addi	a1,sp,40
    8002109a:	854a                	mv	a0,s2
    8002109c:	9602                	jalr	a2
    8002109e:	ed0d                	bnez	a0,800210d8 <.LBB137_18+0x24>
    800210a0:	65c6                	ld	a1,80(sp)
    800210a2:	6526                	ld	a0,72(sp)
    800210a4:	6d94                	ld	a3,24(a1)

00000000800210a6 <.LBB137_17>:
    800210a6:	00009597          	auipc	a1,0x9
    800210aa:	32d58593          	addi	a1,a1,813 # 8002a3d3 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.195>
    800210ae:	4609                	li	a2,2
    800210b0:	9682                	jalr	a3
    800210b2:	a015                	j	800210d6 <.LBB137_18+0x22>

00000000800210b4 <.LBB137_18>:
    800210b4:	00009597          	auipc	a1,0x9
    800210b8:	32b58593          	addi	a1,a1,811 # 8002a3df <.Lanon.9d4bfc86079e95d674f3cded52b1db19.204>
    800210bc:	7514                	ld	a3,40(a0)
    800210be:	7108                	ld	a0,32(a0)
    800210c0:	6e94                	ld	a3,24(a3)
    800210c2:	4709                	li	a4,2
    800210c4:	40c70633          	sub	a2,a4,a2
    800210c8:	9682                	jalr	a3
    800210ca:	e519                	bnez	a0,800210d8 <.LBB137_18+0x24>
    800210cc:	600c                	ld	a1,0(s0)
    800210ce:	0189b603          	ld	a2,24(s3)
    800210d2:	854a                	mv	a0,s2
    800210d4:	9602                	jalr	a2
    800210d6:	84aa                	mv	s1,a0
    800210d8:	6408                	ld	a0,8(s0)
    800210da:	00940823          	sb	s1,16(s0)
    800210de:	0505                	addi	a0,a0,1
    800210e0:	e408                	sd	a0,8(s0)
    800210e2:	8522                	mv	a0,s0
    800210e4:	79a6                	ld	s3,104(sp)
    800210e6:	7946                	ld	s2,112(sp)
    800210e8:	74e6                	ld	s1,120(sp)
    800210ea:	640a                	ld	s0,128(sp)
    800210ec:	60aa                	ld	ra,136(sp)
    800210ee:	6149                	addi	sp,sp,144
    800210f0:	8082                	ret

Disassembly of section .text._ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E:

00000000800210f2 <_ZN4core3fmt8builders10DebugTuple6finish17h9067963986a9fe09E>:
    800210f2:	1101                	addi	sp,sp,-32
    800210f4:	ec06                	sd	ra,24(sp)
    800210f6:	e822                	sd	s0,16(sp)
    800210f8:	e426                	sd	s1,8(sp)
    800210fa:	842a                	mv	s0,a0
    800210fc:	650c                	ld	a1,8(a0)
    800210fe:	01054503          	lbu	a0,16(a0)
    80021102:	c5b9                	beqz	a1,80021150 <.LBB138_10+0x14>
    80021104:	4485                	li	s1,1
    80021106:	e131                	bnez	a0,8002114a <.LBB138_10+0xe>
    80021108:	4505                	li	a0,1
    8002110a:	02a59563          	bne	a1,a0,80021134 <.LBB138_9+0x10>
    8002110e:	01144503          	lbu	a0,17(s0)
    80021112:	c10d                	beqz	a0,80021134 <.LBB138_9+0x10>
    80021114:	6008                	ld	a0,0(s0)
    80021116:	03054583          	lbu	a1,48(a0)
    8002111a:	8991                	andi	a1,a1,4
    8002111c:	ed81                	bnez	a1,80021134 <.LBB138_9+0x10>
    8002111e:	750c                	ld	a1,40(a0)
    80021120:	7108                	ld	a0,32(a0)
    80021122:	6d94                	ld	a3,24(a1)

0000000080021124 <.LBB138_9>:
    80021124:	00009597          	auipc	a1,0x9
    80021128:	2bc58593          	addi	a1,a1,700 # 8002a3e0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.205>
    8002112c:	4605                	li	a2,1
    8002112e:	4485                	li	s1,1
    80021130:	9682                	jalr	a3
    80021132:	ed01                	bnez	a0,8002114a <.LBB138_10+0xe>
    80021134:	6008                	ld	a0,0(s0)
    80021136:	750c                	ld	a1,40(a0)
    80021138:	7108                	ld	a0,32(a0)
    8002113a:	6d94                	ld	a3,24(a1)

000000008002113c <.LBB138_10>:
    8002113c:	00009597          	auipc	a1,0x9
    80021140:	2a558593          	addi	a1,a1,677 # 8002a3e1 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.206>
    80021144:	4605                	li	a2,1
    80021146:	9682                	jalr	a3
    80021148:	84aa                	mv	s1,a0
    8002114a:	00940823          	sb	s1,16(s0)
    8002114e:	8526                	mv	a0,s1
    80021150:	00a03533          	snez	a0,a0
    80021154:	64a2                	ld	s1,8(sp)
    80021156:	6442                	ld	s0,16(sp)
    80021158:	60e2                	ld	ra,24(sp)
    8002115a:	6105                	addi	sp,sp,32
    8002115c:	8082                	ret

Disassembly of section .text._ZN4core3fmt5Write10write_char17h8aeb772118eba9e2E:

000000008002115e <_ZN4core3fmt5Write10write_char17h8aeb772118eba9e2E>:
    8002115e:	1141                	addi	sp,sp,-16
    80021160:	e406                	sd	ra,8(sp)
    80021162:	862e                	mv	a2,a1
    80021164:	2581                	sext.w	a1,a1
    80021166:	08000693          	li	a3,128
    8002116a:	c202                	sw	zero,4(sp)
    8002116c:	00d5fd63          	bgeu	a1,a3,80021186 <_ZN4core3fmt5Write10write_char17h8aeb772118eba9e2E+0x28>
    80021170:	004c                	addi	a1,sp,4
    80021172:	00c10223          	sb	a2,4(sp)
    80021176:	4605                	li	a2,1
    80021178:	00000097          	auipc	ra,0x0
    8002117c:	be6080e7          	jalr	-1050(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    80021180:	60a2                	ld	ra,8(sp)
    80021182:	0141                	addi	sp,sp,16
    80021184:	8082                	ret
    80021186:	00b6559b          	srliw	a1,a2,0xb
    8002118a:	e595                	bnez	a1,800211b6 <_ZN4core3fmt5Write10write_char17h8aeb772118eba9e2E+0x58>
    8002118c:	004c                	addi	a1,sp,4
    8002118e:	00665693          	srli	a3,a2,0x6
    80021192:	0c06e693          	ori	a3,a3,192
    80021196:	00d10223          	sb	a3,4(sp)
    8002119a:	03f67613          	andi	a2,a2,63
    8002119e:	08066613          	ori	a2,a2,128
    800211a2:	00c102a3          	sb	a2,5(sp)
    800211a6:	4609                	li	a2,2
    800211a8:	00000097          	auipc	ra,0x0
    800211ac:	bb6080e7          	jalr	-1098(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    800211b0:	60a2                	ld	ra,8(sp)
    800211b2:	0141                	addi	sp,sp,16
    800211b4:	8082                	ret
    800211b6:	0106569b          	srliw	a3,a2,0x10
    800211ba:	004c                	addi	a1,sp,4
    800211bc:	ee8d                	bnez	a3,800211f6 <_ZN4core3fmt5Write10write_char17h8aeb772118eba9e2E+0x98>
    800211be:	00c6569b          	srliw	a3,a2,0xc
    800211c2:	0e06e693          	ori	a3,a3,224
    800211c6:	00d10223          	sb	a3,4(sp)
    800211ca:	0066569b          	srliw	a3,a2,0x6
    800211ce:	03f6f693          	andi	a3,a3,63
    800211d2:	0806e693          	ori	a3,a3,128
    800211d6:	00d102a3          	sb	a3,5(sp)
    800211da:	03f67613          	andi	a2,a2,63
    800211de:	08066613          	ori	a2,a2,128
    800211e2:	00c10323          	sb	a2,6(sp)
    800211e6:	460d                	li	a2,3
    800211e8:	00000097          	auipc	ra,0x0
    800211ec:	b76080e7          	jalr	-1162(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    800211f0:	60a2                	ld	ra,8(sp)
    800211f2:	0141                	addi	sp,sp,16
    800211f4:	8082                	ret
    800211f6:	0126569b          	srliw	a3,a2,0x12
    800211fa:	0f06e693          	ori	a3,a3,240
    800211fe:	00d10223          	sb	a3,4(sp)
    80021202:	00c6569b          	srliw	a3,a2,0xc
    80021206:	03f6f693          	andi	a3,a3,63
    8002120a:	0806e693          	ori	a3,a3,128
    8002120e:	00d102a3          	sb	a3,5(sp)
    80021212:	0066569b          	srliw	a3,a2,0x6
    80021216:	03f6f693          	andi	a3,a3,63
    8002121a:	0806e693          	ori	a3,a3,128
    8002121e:	00d10323          	sb	a3,6(sp)
    80021222:	03f67613          	andi	a2,a2,63
    80021226:	08066613          	ori	a2,a2,128
    8002122a:	00c103a3          	sb	a2,7(sp)
    8002122e:	4611                	li	a2,4
    80021230:	00000097          	auipc	ra,0x0
    80021234:	b2e080e7          	jalr	-1234(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    80021238:	60a2                	ld	ra,8(sp)
    8002123a:	0141                	addi	sp,sp,16
    8002123c:	8082                	ret

Disassembly of section .text._ZN4core3fmt5Write9write_fmt17hddb7215d3127a3d2E:

000000008002123e <_ZN4core3fmt5Write9write_fmt17hddb7215d3127a3d2E>:
    8002123e:	7139                	addi	sp,sp,-64
    80021240:	fc06                	sd	ra,56(sp)
    80021242:	7590                	ld	a2,40(a1)
    80021244:	7194                	ld	a3,32(a1)
    80021246:	e02a                	sd	a0,0(sp)
    80021248:	f832                	sd	a2,48(sp)
    8002124a:	f436                	sd	a3,40(sp)
    8002124c:	6d88                	ld	a0,24(a1)
    8002124e:	6990                	ld	a2,16(a1)
    80021250:	6594                	ld	a3,8(a1)
    80021252:	618c                	ld	a1,0(a1)
    80021254:	f02a                	sd	a0,32(sp)
    80021256:	ec32                	sd	a2,24(sp)
    80021258:	e836                	sd	a3,16(sp)
    8002125a:	e42e                	sd	a1,8(sp)

000000008002125c <.LBB160_1>:
    8002125c:	00009597          	auipc	a1,0x9
    80021260:	2b458593          	addi	a1,a1,692 # 8002a510 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.228>
    80021264:	850a                	mv	a0,sp
    80021266:	0030                	addi	a2,sp,8
    80021268:	00000097          	auipc	ra,0x0
    8002126c:	134080e7          	jalr	308(ra) # 8002139c <_ZN4core3fmt5write17h338141860f5a80fbE>
    80021270:	70e2                	ld	ra,56(sp)
    80021272:	6121                	addi	sp,sp,64
    80021274:	8082                	ret

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hfa57a7fc9f8589d2E:

0000000080021276 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hfa57a7fc9f8589d2E>:
    80021276:	6108                	ld	a0,0(a0)
    80021278:	00000317          	auipc	t1,0x0
    8002127c:	ae630067          	jr	-1306(t1) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h58b6ff904fa9294fE:

0000000080021280 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h58b6ff904fa9294fE>:
    80021280:	1141                	addi	sp,sp,-16
    80021282:	e406                	sd	ra,8(sp)
    80021284:	862e                	mv	a2,a1
    80021286:	6108                	ld	a0,0(a0)
    80021288:	2581                	sext.w	a1,a1
    8002128a:	08000693          	li	a3,128
    8002128e:	c202                	sw	zero,4(sp)
    80021290:	00d5fd63          	bgeu	a1,a3,800212aa <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h58b6ff904fa9294fE+0x2a>
    80021294:	004c                	addi	a1,sp,4
    80021296:	00c10223          	sb	a2,4(sp)
    8002129a:	4605                	li	a2,1
    8002129c:	00000097          	auipc	ra,0x0
    800212a0:	ac2080e7          	jalr	-1342(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    800212a4:	60a2                	ld	ra,8(sp)
    800212a6:	0141                	addi	sp,sp,16
    800212a8:	8082                	ret
    800212aa:	00b6559b          	srliw	a1,a2,0xb
    800212ae:	e595                	bnez	a1,800212da <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h58b6ff904fa9294fE+0x5a>
    800212b0:	004c                	addi	a1,sp,4
    800212b2:	00665693          	srli	a3,a2,0x6
    800212b6:	0c06e693          	ori	a3,a3,192
    800212ba:	00d10223          	sb	a3,4(sp)
    800212be:	03f67613          	andi	a2,a2,63
    800212c2:	08066613          	ori	a2,a2,128
    800212c6:	00c102a3          	sb	a2,5(sp)
    800212ca:	4609                	li	a2,2
    800212cc:	00000097          	auipc	ra,0x0
    800212d0:	a92080e7          	jalr	-1390(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    800212d4:	60a2                	ld	ra,8(sp)
    800212d6:	0141                	addi	sp,sp,16
    800212d8:	8082                	ret
    800212da:	0106569b          	srliw	a3,a2,0x10
    800212de:	004c                	addi	a1,sp,4
    800212e0:	ee8d                	bnez	a3,8002131a <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h58b6ff904fa9294fE+0x9a>
    800212e2:	00c6569b          	srliw	a3,a2,0xc
    800212e6:	0e06e693          	ori	a3,a3,224
    800212ea:	00d10223          	sb	a3,4(sp)
    800212ee:	0066569b          	srliw	a3,a2,0x6
    800212f2:	03f6f693          	andi	a3,a3,63
    800212f6:	0806e693          	ori	a3,a3,128
    800212fa:	00d102a3          	sb	a3,5(sp)
    800212fe:	03f67613          	andi	a2,a2,63
    80021302:	08066613          	ori	a2,a2,128
    80021306:	00c10323          	sb	a2,6(sp)
    8002130a:	460d                	li	a2,3
    8002130c:	00000097          	auipc	ra,0x0
    80021310:	a52080e7          	jalr	-1454(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    80021314:	60a2                	ld	ra,8(sp)
    80021316:	0141                	addi	sp,sp,16
    80021318:	8082                	ret
    8002131a:	0126569b          	srliw	a3,a2,0x12
    8002131e:	0f06e693          	ori	a3,a3,240
    80021322:	00d10223          	sb	a3,4(sp)
    80021326:	00c6569b          	srliw	a3,a2,0xc
    8002132a:	03f6f693          	andi	a3,a3,63
    8002132e:	0806e693          	ori	a3,a3,128
    80021332:	00d102a3          	sb	a3,5(sp)
    80021336:	0066569b          	srliw	a3,a2,0x6
    8002133a:	03f6f693          	andi	a3,a3,63
    8002133e:	0806e693          	ori	a3,a3,128
    80021342:	00d10323          	sb	a3,6(sp)
    80021346:	03f67613          	andi	a2,a2,63
    8002134a:	08066613          	ori	a2,a2,128
    8002134e:	00c103a3          	sb	a2,7(sp)
    80021352:	4611                	li	a2,4
    80021354:	00000097          	auipc	ra,0x0
    80021358:	a0a080e7          	jalr	-1526(ra) # 80020d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hd6b2cc874e13c1a3E>
    8002135c:	60a2                	ld	ra,8(sp)
    8002135e:	0141                	addi	sp,sp,16
    80021360:	8082                	ret

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h242554f80beddc1fE:

0000000080021362 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h242554f80beddc1fE>:
    80021362:	7139                	addi	sp,sp,-64
    80021364:	fc06                	sd	ra,56(sp)
    80021366:	6108                	ld	a0,0(a0)
    80021368:	7590                	ld	a2,40(a1)
    8002136a:	7194                	ld	a3,32(a1)
    8002136c:	e02a                	sd	a0,0(sp)
    8002136e:	f832                	sd	a2,48(sp)
    80021370:	f436                	sd	a3,40(sp)
    80021372:	6d88                	ld	a0,24(a1)
    80021374:	6990                	ld	a2,16(a1)
    80021376:	6594                	ld	a3,8(a1)
    80021378:	618c                	ld	a1,0(a1)
    8002137a:	f02a                	sd	a0,32(sp)
    8002137c:	ec32                	sd	a2,24(sp)
    8002137e:	e836                	sd	a3,16(sp)
    80021380:	e42e                	sd	a1,8(sp)

0000000080021382 <.LBB163_1>:
    80021382:	00009597          	auipc	a1,0x9
    80021386:	18e58593          	addi	a1,a1,398 # 8002a510 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.228>
    8002138a:	850a                	mv	a0,sp
    8002138c:	0030                	addi	a2,sp,8
    8002138e:	00000097          	auipc	ra,0x0
    80021392:	00e080e7          	jalr	14(ra) # 8002139c <_ZN4core3fmt5write17h338141860f5a80fbE>
    80021396:	70e2                	ld	ra,56(sp)
    80021398:	6121                	addi	sp,sp,64
    8002139a:	8082                	ret

Disassembly of section .text._ZN4core3fmt5write17h338141860f5a80fbE:

000000008002139c <_ZN4core3fmt5write17h338141860f5a80fbE>:
    8002139c:	7135                	addi	sp,sp,-160
    8002139e:	ed06                	sd	ra,152(sp)
    800213a0:	e922                	sd	s0,144(sp)
    800213a2:	e526                	sd	s1,136(sp)
    800213a4:	e14a                	sd	s2,128(sp)
    800213a6:	fcce                	sd	s3,120(sp)
    800213a8:	f8d2                	sd	s4,112(sp)
    800213aa:	f4d6                	sd	s5,104(sp)
    800213ac:	f0da                	sd	s6,96(sp)
    800213ae:	ecde                	sd	s7,88(sp)
    800213b0:	e8e2                	sd	s8,80(sp)
    800213b2:	e4e6                	sd	s9,72(sp)
    800213b4:	8432                	mv	s0,a2
    800213b6:	4605                	li	a2,1
    800213b8:	1616                	slli	a2,a2,0x25
    800213ba:	fc32                	sd	a2,56(sp)
    800213bc:	460d                	li	a2,3
    800213be:	04c10023          	sb	a2,64(sp)
    800213c2:	6804                	ld	s1,16(s0)
    800213c4:	e402                	sd	zero,8(sp)
    800213c6:	ec02                	sd	zero,24(sp)
    800213c8:	f42a                	sd	a0,40(sp)
    800213ca:	f82e                	sd	a1,48(sp)
    800213cc:	cce9                	beqz	s1,800214a6 <.LBB167_35+0x9e>
    800213ce:	6c10                	ld	a2,24(s0)
    800213d0:	00843983          	ld	s3,8(s0)
    800213d4:	00043903          	ld	s2,0(s0)
    800213d8:	8ace                	mv	s5,s3
    800213da:	00c9e363          	bltu	s3,a2,800213e0 <_ZN4core3fmt5write17h338141860f5a80fbE+0x44>
    800213de:	8ab2                	mv	s5,a2
    800213e0:	120a8163          	beqz	s5,80021502 <.LBB167_35+0xfa>
    800213e4:	00093683          	ld	a3,0(s2)
    800213e8:	00893603          	ld	a2,8(s2)
    800213ec:	6d98                	ld	a4,24(a1)
    800213ee:	85b6                	mv	a1,a3
    800213f0:	9702                	jalr	a4
    800213f2:	12051663          	bnez	a0,8002151e <.LBB167_35+0x116>
    800213f6:	02043c03          	ld	s8,32(s0)
    800213fa:	03048493          	addi	s1,s1,48
    800213fe:	01890c93          	addi	s9,s2,24
    80021402:	00810a13          	addi	s4,sp,8
    80021406:	4b09                	li	s6,2

0000000080021408 <.LBB167_35>:
    80021408:	fffffb97          	auipc	s7,0xfffff
    8002140c:	6bab8b93          	addi	s7,s7,1722 # 80020ac2 <_ZN4core3ops8function6FnOnce9call_once17hbe6f1b732a2946a4E>
    80021410:	8456                	mv	s0,s5
    80021412:	ff84a503          	lw	a0,-8(s1)
    80021416:	de2a                	sw	a0,60(sp)
    80021418:	00048503          	lb	a0,0(s1)
    8002141c:	04a10023          	sb	a0,64(sp)
    80021420:	ffc4a503          	lw	a0,-4(s1)
    80021424:	dc2a                	sw	a0,56(sp)
    80021426:	fe84b603          	ld	a2,-24(s1)
    8002142a:	ff04b503          	ld	a0,-16(s1)
    8002142e:	ca19                	beqz	a2,80021444 <.LBB167_35+0x3c>
    80021430:	4581                	li	a1,0
    80021432:	01660c63          	beq	a2,s6,8002144a <.LBB167_35+0x42>
    80021436:	0512                	slli	a0,a0,0x4
    80021438:	9562                	add	a0,a0,s8
    8002143a:	650c                	ld	a1,8(a0)
    8002143c:	01759663          	bne	a1,s7,80021448 <.LBB167_35+0x40>
    80021440:	6108                	ld	a0,0(a0)
    80021442:	6108                	ld	a0,0(a0)
    80021444:	4585                	li	a1,1
    80021446:	a011                	j	8002144a <.LBB167_35+0x42>
    80021448:	4581                	li	a1,0
    8002144a:	e42e                	sd	a1,8(sp)
    8002144c:	e82a                	sd	a0,16(sp)
    8002144e:	fd84b603          	ld	a2,-40(s1)
    80021452:	fe04b503          	ld	a0,-32(s1)
    80021456:	ca19                	beqz	a2,8002146c <.LBB167_35+0x64>
    80021458:	4581                	li	a1,0
    8002145a:	01660c63          	beq	a2,s6,80021472 <.LBB167_35+0x6a>
    8002145e:	0512                	slli	a0,a0,0x4
    80021460:	9562                	add	a0,a0,s8
    80021462:	650c                	ld	a1,8(a0)
    80021464:	01759663          	bne	a1,s7,80021470 <.LBB167_35+0x68>
    80021468:	6108                	ld	a0,0(a0)
    8002146a:	6108                	ld	a0,0(a0)
    8002146c:	4585                	li	a1,1
    8002146e:	a011                	j	80021472 <.LBB167_35+0x6a>
    80021470:	4581                	li	a1,0
    80021472:	ec2e                	sd	a1,24(sp)
    80021474:	f02a                	sd	a0,32(sp)
    80021476:	fd04b503          	ld	a0,-48(s1)
    8002147a:	0512                	slli	a0,a0,0x4
    8002147c:	9562                	add	a0,a0,s8
    8002147e:	6510                	ld	a2,8(a0)
    80021480:	6108                	ld	a0,0(a0)
    80021482:	85d2                	mv	a1,s4
    80021484:	9602                	jalr	a2
    80021486:	ed41                	bnez	a0,8002151e <.LBB167_35+0x116>
    80021488:	147d                	addi	s0,s0,-1
    8002148a:	cc2d                	beqz	s0,80021504 <.LBB167_35+0xfc>
    8002148c:	76c2                	ld	a3,48(sp)
    8002148e:	7522                	ld	a0,40(sp)
    80021490:	ff8cb583          	ld	a1,-8(s9)
    80021494:	000cb603          	ld	a2,0(s9)
    80021498:	6e94                	ld	a3,24(a3)
    8002149a:	03848493          	addi	s1,s1,56
    8002149e:	0cc1                	addi	s9,s9,16
    800214a0:	9682                	jalr	a3
    800214a2:	d925                	beqz	a0,80021412 <.LBB167_35+0xa>
    800214a4:	a8ad                	j	8002151e <.LBB167_35+0x116>
    800214a6:	7004                	ld	s1,32(s0)
    800214a8:	7410                	ld	a2,40(s0)
    800214aa:	00843983          	ld	s3,8(s0)
    800214ae:	00043903          	ld	s2,0(s0)
    800214b2:	8ace                	mv	s5,s3
    800214b4:	00c9e363          	bltu	s3,a2,800214ba <.LBB167_35+0xb2>
    800214b8:	8ab2                	mv	s5,a2
    800214ba:	040a8463          	beqz	s5,80021502 <.LBB167_35+0xfa>
    800214be:	00093683          	ld	a3,0(s2)
    800214c2:	00893603          	ld	a2,8(s2)
    800214c6:	6d98                	ld	a4,24(a1)
    800214c8:	85b6                	mv	a1,a3
    800214ca:	9702                	jalr	a4
    800214cc:	e929                	bnez	a0,8002151e <.LBB167_35+0x116>
    800214ce:	04a1                	addi	s1,s1,8
    800214d0:	01890b13          	addi	s6,s2,24
    800214d4:	00810a13          	addi	s4,sp,8
    800214d8:	8456                	mv	s0,s5
    800214da:	6090                	ld	a2,0(s1)
    800214dc:	ff84b503          	ld	a0,-8(s1)
    800214e0:	85d2                	mv	a1,s4
    800214e2:	9602                	jalr	a2
    800214e4:	ed0d                	bnez	a0,8002151e <.LBB167_35+0x116>
    800214e6:	147d                	addi	s0,s0,-1
    800214e8:	cc11                	beqz	s0,80021504 <.LBB167_35+0xfc>
    800214ea:	76c2                	ld	a3,48(sp)
    800214ec:	7522                	ld	a0,40(sp)
    800214ee:	ff8b3583          	ld	a1,-8(s6)
    800214f2:	000b3603          	ld	a2,0(s6)
    800214f6:	6e94                	ld	a3,24(a3)
    800214f8:	04c1                	addi	s1,s1,16
    800214fa:	0b41                	addi	s6,s6,16
    800214fc:	9682                	jalr	a3
    800214fe:	dd71                	beqz	a0,800214da <.LBB167_35+0xd2>
    80021500:	a839                	j	8002151e <.LBB167_35+0x116>
    80021502:	4a81                	li	s5,0
    80021504:	013aff63          	bgeu	s5,s3,80021522 <.LBB167_35+0x11a>
    80021508:	7522                	ld	a0,40(sp)
    8002150a:	76c2                	ld	a3,48(sp)
    8002150c:	004a9593          	slli	a1,s5,0x4
    80021510:	00b90633          	add	a2,s2,a1
    80021514:	620c                	ld	a1,0(a2)
    80021516:	6610                	ld	a2,8(a2)
    80021518:	6e94                	ld	a3,24(a3)
    8002151a:	9682                	jalr	a3
    8002151c:	c119                	beqz	a0,80021522 <.LBB167_35+0x11a>
    8002151e:	4505                	li	a0,1
    80021520:	a011                	j	80021524 <.LBB167_35+0x11c>
    80021522:	4501                	li	a0,0
    80021524:	6ca6                	ld	s9,72(sp)
    80021526:	6c46                	ld	s8,80(sp)
    80021528:	6be6                	ld	s7,88(sp)
    8002152a:	7b06                	ld	s6,96(sp)
    8002152c:	7aa6                	ld	s5,104(sp)
    8002152e:	7a46                	ld	s4,112(sp)
    80021530:	79e6                	ld	s3,120(sp)
    80021532:	690a                	ld	s2,128(sp)
    80021534:	64aa                	ld	s1,136(sp)
    80021536:	644a                	ld	s0,144(sp)
    80021538:	60ea                	ld	ra,152(sp)
    8002153a:	610d                	addi	sp,sp,160
    8002153c:	8082                	ret

Disassembly of section .text._ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E:

000000008002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>:
    8002153e:	7159                	addi	sp,sp,-112
    80021540:	f486                	sd	ra,104(sp)
    80021542:	f0a2                	sd	s0,96(sp)
    80021544:	eca6                	sd	s1,88(sp)
    80021546:	e8ca                	sd	s2,80(sp)
    80021548:	e4ce                	sd	s3,72(sp)
    8002154a:	e0d2                	sd	s4,64(sp)
    8002154c:	fc56                	sd	s5,56(sp)
    8002154e:	f85a                	sd	s6,48(sp)
    80021550:	f45e                	sd	s7,40(sp)
    80021552:	f062                	sd	s8,32(sp)
    80021554:	ec66                	sd	s9,24(sp)
    80021556:	e86a                	sd	s10,16(sp)
    80021558:	e46e                	sd	s11,8(sp)
    8002155a:	89be                	mv	s3,a5
    8002155c:	893a                	mv	s2,a4
    8002155e:	8ab6                	mv	s5,a3
    80021560:	842a                	mv	s0,a0
    80021562:	c5b9                	beqz	a1,800215b0 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x72>
    80021564:	03046503          	lwu	a0,48(s0)
    80021568:	00157593          	andi	a1,a0,1
    8002156c:	00110a37          	lui	s4,0x110
    80021570:	c199                	beqz	a1,80021576 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x38>
    80021572:	02b00a13          	li	s4,43
    80021576:	01358cb3          	add	s9,a1,s3
    8002157a:	00457593          	andi	a1,a0,4
    8002157e:	c1b1                	beqz	a1,800215c2 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x84>
    80021580:	4581                	li	a1,0
    80021582:	020a8063          	beqz	s5,800215a2 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x64>
    80021586:	86d6                	mv	a3,s5
    80021588:	8732                	mv	a4,a2
    8002158a:	00074783          	lbu	a5,0(a4)
    8002158e:	0705                	addi	a4,a4,1
    80021590:	0c07f793          	andi	a5,a5,192
    80021594:	f8078793          	addi	a5,a5,-128
    80021598:	00f037b3          	snez	a5,a5
    8002159c:	16fd                	addi	a3,a3,-1
    8002159e:	95be                	add	a1,a1,a5
    800215a0:	f6ed                	bnez	a3,8002158a <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x4c>
    800215a2:	9cae                	add	s9,s9,a1
    800215a4:	8b32                	mv	s6,a2
    800215a6:	600c                	ld	a1,0(s0)
    800215a8:	4d85                	li	s11,1
    800215aa:	03b58163          	beq	a1,s11,800215cc <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x8e>
    800215ae:	a0b1                	j	800215fa <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xbc>
    800215b0:	03046503          	lwu	a0,48(s0)
    800215b4:	00198c93          	addi	s9,s3,1
    800215b8:	02d00a13          	li	s4,45
    800215bc:	00457593          	andi	a1,a0,4
    800215c0:	f1e1                	bnez	a1,80021580 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x42>
    800215c2:	4b01                	li	s6,0
    800215c4:	600c                	ld	a1,0(s0)
    800215c6:	4d85                	li	s11,1
    800215c8:	03b59963          	bne	a1,s11,800215fa <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xbc>
    800215cc:	00843d03          	ld	s10,8(s0)
    800215d0:	03acf563          	bgeu	s9,s10,800215fa <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xbc>
    800215d4:	8921                	andi	a0,a0,8
    800215d6:	ed3d                	bnez	a0,80021654 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x116>
    800215d8:	03844503          	lbu	a0,56(s0)
    800215dc:	4585                	li	a1,1
    800215de:	468d                	li	a3,3
    800215e0:	4605                	li	a2,1
    800215e2:	00d50363          	beq	a0,a3,800215e8 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xaa>
    800215e6:	862a                	mv	a2,a0
    800215e8:	8a0d                	andi	a2,a2,3
    800215ea:	419d0533          	sub	a0,s10,s9
    800215ee:	0ac5c763          	blt	a1,a2,8002169c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x15e>
    800215f2:	ea45                	bnez	a2,800216a2 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x164>
    800215f4:	8c2a                	mv	s8,a0
    800215f6:	4501                	li	a0,0
    800215f8:	a0c9                	j	800216ba <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x17c>
    800215fa:	8522                	mv	a0,s0
    800215fc:	85d2                	mv	a1,s4
    800215fe:	865a                	mv	a2,s6
    80021600:	86d6                	mv	a3,s5
    80021602:	00000097          	auipc	ra,0x0
    80021606:	174080e7          	jalr	372(ra) # 80021776 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E>
    8002160a:	c10d                	beqz	a0,8002162c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xee>
    8002160c:	856e                	mv	a0,s11
    8002160e:	6da2                	ld	s11,8(sp)
    80021610:	6d42                	ld	s10,16(sp)
    80021612:	6ce2                	ld	s9,24(sp)
    80021614:	7c02                	ld	s8,32(sp)
    80021616:	7ba2                	ld	s7,40(sp)
    80021618:	7b42                	ld	s6,48(sp)
    8002161a:	7ae2                	ld	s5,56(sp)
    8002161c:	6a06                	ld	s4,64(sp)
    8002161e:	69a6                	ld	s3,72(sp)
    80021620:	6946                	ld	s2,80(sp)
    80021622:	64e6                	ld	s1,88(sp)
    80021624:	7406                	ld	s0,96(sp)
    80021626:	70a6                	ld	ra,104(sp)
    80021628:	6165                	addi	sp,sp,112
    8002162a:	8082                	ret
    8002162c:	740c                	ld	a1,40(s0)
    8002162e:	7008                	ld	a0,32(s0)
    80021630:	6d9c                	ld	a5,24(a1)
    80021632:	85ca                	mv	a1,s2
    80021634:	864e                	mv	a2,s3
    80021636:	6da2                	ld	s11,8(sp)
    80021638:	6d42                	ld	s10,16(sp)
    8002163a:	6ce2                	ld	s9,24(sp)
    8002163c:	7c02                	ld	s8,32(sp)
    8002163e:	7ba2                	ld	s7,40(sp)
    80021640:	7b42                	ld	s6,48(sp)
    80021642:	7ae2                	ld	s5,56(sp)
    80021644:	6a06                	ld	s4,64(sp)
    80021646:	69a6                	ld	s3,72(sp)
    80021648:	6946                	ld	s2,80(sp)
    8002164a:	64e6                	ld	s1,88(sp)
    8002164c:	7406                	ld	s0,96(sp)
    8002164e:	70a6                	ld	ra,104(sp)
    80021650:	6165                	addi	sp,sp,112
    80021652:	8782                	jr	a5
    80021654:	03446b83          	lwu	s7,52(s0)
    80021658:	03000513          	li	a0,48
    8002165c:	03844c03          	lbu	s8,56(s0)
    80021660:	d848                	sw	a0,52(s0)
    80021662:	4d85                	li	s11,1
    80021664:	03b40c23          	sb	s11,56(s0)
    80021668:	8522                	mv	a0,s0
    8002166a:	85d2                	mv	a1,s4
    8002166c:	865a                	mv	a2,s6
    8002166e:	86d6                	mv	a3,s5
    80021670:	00000097          	auipc	ra,0x0
    80021674:	106080e7          	jalr	262(ra) # 80021776 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E>
    80021678:	f951                	bnez	a0,8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    8002167a:	03844503          	lbu	a0,56(s0)
    8002167e:	4585                	li	a1,1
    80021680:	468d                	li	a3,3
    80021682:	4605                	li	a2,1
    80021684:	00d50363          	beq	a0,a3,8002168a <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x14c>
    80021688:	862a                	mv	a2,a0
    8002168a:	8a0d                	andi	a2,a2,3
    8002168c:	419d0533          	sub	a0,s10,s9
    80021690:	00c5cb63          	blt	a1,a2,800216a6 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x168>
    80021694:	ee01                	bnez	a2,800216ac <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x16e>
    80021696:	8aaa                	mv	s5,a0
    80021698:	4501                	li	a0,0
    8002169a:	a041                	j	8002171a <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x1dc>
    8002169c:	458d                	li	a1,3
    8002169e:	00b61963          	bne	a2,a1,800216b0 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x172>
    800216a2:	4c01                	li	s8,0
    800216a4:	a819                	j	800216ba <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x17c>
    800216a6:	458d                	li	a1,3
    800216a8:	06b61463          	bne	a2,a1,80021710 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x1d2>
    800216ac:	4a81                	li	s5,0
    800216ae:	a0b5                	j	8002171a <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x1dc>
    800216b0:	00150593          	addi	a1,a0,1
    800216b4:	8105                	srli	a0,a0,0x1
    800216b6:	0015dc13          	srli	s8,a1,0x1
    800216ba:	00150493          	addi	s1,a0,1
    800216be:	14fd                	addi	s1,s1,-1
    800216c0:	c881                	beqz	s1,800216d0 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x192>
    800216c2:	740c                	ld	a1,40(s0)
    800216c4:	7008                	ld	a0,32(s0)
    800216c6:	7190                	ld	a2,32(a1)
    800216c8:	584c                	lw	a1,52(s0)
    800216ca:	9602                	jalr	a2
    800216cc:	d96d                	beqz	a0,800216be <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x180>
    800216ce:	a085                	j	8002172e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x1f0>
    800216d0:	03446b83          	lwu	s7,52(s0)
    800216d4:	8522                	mv	a0,s0
    800216d6:	85d2                	mv	a1,s4
    800216d8:	865a                	mv	a2,s6
    800216da:	86d6                	mv	a3,s5
    800216dc:	00000097          	auipc	ra,0x0
    800216e0:	09a080e7          	jalr	154(ra) # 80021776 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E>
    800216e4:	4d85                	li	s11,1
    800216e6:	f11d                	bnez	a0,8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    800216e8:	740c                	ld	a1,40(s0)
    800216ea:	7008                	ld	a0,32(s0)
    800216ec:	6d94                	ld	a3,24(a1)
    800216ee:	85ca                	mv	a1,s2
    800216f0:	864e                	mv	a2,s3
    800216f2:	9682                	jalr	a3
    800216f4:	fd01                	bnez	a0,8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    800216f6:	02043903          	ld	s2,32(s0)
    800216fa:	7400                	ld	s0,40(s0)
    800216fc:	001c0493          	addi	s1,s8,1
    80021700:	14fd                	addi	s1,s1,-1
    80021702:	c0b5                	beqz	s1,80021766 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x228>
    80021704:	7010                	ld	a2,32(s0)
    80021706:	854a                	mv	a0,s2
    80021708:	85de                	mv	a1,s7
    8002170a:	9602                	jalr	a2
    8002170c:	d975                	beqz	a0,80021700 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x1c2>
    8002170e:	bdfd                	j	8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    80021710:	00150593          	addi	a1,a0,1
    80021714:	8105                	srli	a0,a0,0x1
    80021716:	0015da93          	srli	s5,a1,0x1
    8002171a:	00150493          	addi	s1,a0,1
    8002171e:	14fd                	addi	s1,s1,-1
    80021720:	c889                	beqz	s1,80021732 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x1f4>
    80021722:	740c                	ld	a1,40(s0)
    80021724:	7008                	ld	a0,32(s0)
    80021726:	7190                	ld	a2,32(a1)
    80021728:	584c                	lw	a1,52(s0)
    8002172a:	9602                	jalr	a2
    8002172c:	d96d                	beqz	a0,8002171e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x1e0>
    8002172e:	4d85                	li	s11,1
    80021730:	bdf1                	j	8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    80021732:	740c                	ld	a1,40(s0)
    80021734:	03446a03          	lwu	s4,52(s0)
    80021738:	7008                	ld	a0,32(s0)
    8002173a:	6d94                	ld	a3,24(a1)
    8002173c:	85ca                	mv	a1,s2
    8002173e:	864e                	mv	a2,s3
    80021740:	9682                	jalr	a3
    80021742:	4d85                	li	s11,1
    80021744:	ec0514e3          	bnez	a0,8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    80021748:	02043903          	ld	s2,32(s0)
    8002174c:	02843983          	ld	s3,40(s0)
    80021750:	001a8493          	addi	s1,s5,1
    80021754:	14fd                	addi	s1,s1,-1
    80021756:	c891                	beqz	s1,8002176a <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x22c>
    80021758:	0209b603          	ld	a2,32(s3)
    8002175c:	854a                	mv	a0,s2
    8002175e:	85d2                	mv	a1,s4
    80021760:	9602                	jalr	a2
    80021762:	d96d                	beqz	a0,80021754 <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0x216>
    80021764:	b565                	j	8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    80021766:	4d81                	li	s11,0
    80021768:	b555                	j	8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>
    8002176a:	4d81                	li	s11,0
    8002176c:	03742a23          	sw	s7,52(s0)
    80021770:	03840c23          	sb	s8,56(s0)
    80021774:	bd61                	j	8002160c <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E+0xce>

Disassembly of section .text._ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E:

0000000080021776 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E>:
    80021776:	1101                	addi	sp,sp,-32
    80021778:	ec06                	sd	ra,24(sp)
    8002177a:	e822                	sd	s0,16(sp)
    8002177c:	e426                	sd	s1,8(sp)
    8002177e:	e04a                	sd	s2,0(sp)
    80021780:	02059713          	slli	a4,a1,0x20
    80021784:	9301                	srli	a4,a4,0x20
    80021786:	001107b7          	lui	a5,0x110
    8002178a:	8936                	mv	s2,a3
    8002178c:	84b2                	mv	s1,a2
    8002178e:	842a                	mv	s0,a0
    80021790:	00f70963          	beq	a4,a5,800217a2 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E+0x2c>
    80021794:	7410                	ld	a2,40(s0)
    80021796:	7008                	ld	a0,32(s0)
    80021798:	7210                	ld	a2,32(a2)
    8002179a:	9602                	jalr	a2
    8002179c:	85aa                	mv	a1,a0
    8002179e:	4505                	li	a0,1
    800217a0:	ed91                	bnez	a1,800217bc <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E+0x46>
    800217a2:	cc81                	beqz	s1,800217ba <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h348f9b16d5d85b52E+0x44>
    800217a4:	740c                	ld	a1,40(s0)
    800217a6:	7008                	ld	a0,32(s0)
    800217a8:	6d9c                	ld	a5,24(a1)
    800217aa:	85a6                	mv	a1,s1
    800217ac:	864a                	mv	a2,s2
    800217ae:	6902                	ld	s2,0(sp)
    800217b0:	64a2                	ld	s1,8(sp)
    800217b2:	6442                	ld	s0,16(sp)
    800217b4:	60e2                	ld	ra,24(sp)
    800217b6:	6105                	addi	sp,sp,32
    800217b8:	8782                	jr	a5
    800217ba:	4501                	li	a0,0
    800217bc:	6902                	ld	s2,0(sp)
    800217be:	64a2                	ld	s1,8(sp)
    800217c0:	6442                	ld	s0,16(sp)
    800217c2:	60e2                	ld	ra,24(sp)
    800217c4:	6105                	addi	sp,sp,32
    800217c6:	8082                	ret

Disassembly of section .text._ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E:

00000000800217c8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E>:
    800217c8:	7139                	addi	sp,sp,-64
    800217ca:	fc06                	sd	ra,56(sp)
    800217cc:	f822                	sd	s0,48(sp)
    800217ce:	f426                	sd	s1,40(sp)
    800217d0:	f04a                	sd	s2,32(sp)
    800217d2:	ec4e                	sd	s3,24(sp)
    800217d4:	e852                	sd	s4,16(sp)
    800217d6:	e456                	sd	s5,8(sp)
    800217d8:	e05a                	sd	s6,0(sp)
    800217da:	8b2a                	mv	s6,a0
    800217dc:	6914                	ld	a3,16(a0)
    800217de:	6108                	ld	a0,0(a0)
    800217e0:	89b2                	mv	s3,a2
    800217e2:	892e                	mv	s2,a1
    800217e4:	fff68593          	addi	a1,a3,-1
    800217e8:	4605                	li	a2,1
    800217ea:	0015b593          	seqz	a1,a1
    800217ee:	00c51463          	bne	a0,a2,800217f6 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x2e>
    800217f2:	e581                	bnez	a1,800217fa <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x32>
    800217f4:	a215                	j	80021918 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x150>
    800217f6:	18058b63          	beqz	a1,8002198c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1c4>
    800217fa:	018b3683          	ld	a3,24(s6)
    800217fe:	157d                	addi	a0,a0,-1
    80021800:	00153813          	seqz	a6,a0
    80021804:	01390733          	add	a4,s2,s3
    80021808:	4581                	li	a1,0
    8002180a:	c2dd                	beqz	a3,800218b0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xe8>
    8002180c:	5e7d                	li	t3,-1
    8002180e:	0e000393          	li	t2,224
    80021812:	0f000313          	li	t1,240
    80021816:	001c08b7          	lui	a7,0x1c0
    8002181a:	001102b7          	lui	t0,0x110
    8002181e:	854a                	mv	a0,s2
    80021820:	a815                	j	80021854 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x8c>
    80021822:	00064403          	lbu	s0,0(a2)
    80021826:	00160493          	addi	s1,a2,1
    8002182a:	03f47f93          	andi	t6,s0,63
    8002182e:	07ca                	slli	a5,a5,0x12
    80021830:	0117f7b3          	and	a5,a5,a7
    80021834:	00cf1413          	slli	s0,t5,0xc
    80021838:	006e9613          	slli	a2,t4,0x6
    8002183c:	8fc1                	or	a5,a5,s0
    8002183e:	8e5d                	or	a2,a2,a5
    80021840:	01f66633          	or	a2,a2,t6
    80021844:	0c560863          	beq	a2,t0,80021914 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x14c>
    80021848:	40a48533          	sub	a0,s1,a0
    8002184c:	16fd                	addi	a3,a3,-1
    8002184e:	95aa                	add	a1,a1,a0
    80021850:	8526                	mv	a0,s1
    80021852:	c2a5                	beqz	a3,800218b2 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xea>
    80021854:	0ca70063          	beq	a4,a0,80021914 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x14c>
    80021858:	00050603          	lb	a2,0(a0)
    8002185c:	00150493          	addi	s1,a0,1
    80021860:	fece44e3          	blt	t3,a2,80021848 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x80>
    80021864:	0ff67793          	zext.b	a5,a2
    80021868:	00e48c63          	beq	s1,a4,80021880 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xb8>
    8002186c:	00154603          	lbu	a2,1(a0)
    80021870:	00250493          	addi	s1,a0,2
    80021874:	03f67f13          	andi	t5,a2,63
    80021878:	8626                	mv	a2,s1
    8002187a:	fc77e7e3          	bltu	a5,t2,80021848 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x80>
    8002187e:	a029                	j	80021888 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xc0>
    80021880:	4f01                	li	t5,0
    80021882:	863a                	mv	a2,a4
    80021884:	fc77e2e3          	bltu	a5,t2,80021848 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x80>
    80021888:	00e60c63          	beq	a2,a4,800218a0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xd8>
    8002188c:	00064403          	lbu	s0,0(a2)
    80021890:	00160493          	addi	s1,a2,1
    80021894:	03f47e93          	andi	t4,s0,63
    80021898:	8626                	mv	a2,s1
    8002189a:	fa67e7e3          	bltu	a5,t1,80021848 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x80>
    8002189e:	a029                	j	800218a8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xe0>
    800218a0:	4e81                	li	t4,0
    800218a2:	863a                	mv	a2,a4
    800218a4:	fa67e2e3          	bltu	a5,t1,80021848 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x80>
    800218a8:	f6e61de3          	bne	a2,a4,80021822 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x5a>
    800218ac:	4f81                	li	t6,0
    800218ae:	b741                	j	8002182e <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x66>
    800218b0:	84ca                	mv	s1,s2
    800218b2:	06970163          	beq	a4,s1,80021914 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x14c>
    800218b6:	00048503          	lb	a0,0(s1)
    800218ba:	567d                	li	a2,-1
    800218bc:	02a65763          	bge	a2,a0,800218ea <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x122>
    800218c0:	0015b513          	seqz	a0,a1
    800218c4:	0135c633          	xor	a2,a1,s3
    800218c8:	00163613          	seqz	a2,a2
    800218cc:	8d51                	or	a0,a0,a2
    800218ce:	e919                	bnez	a0,800218e4 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x11c>
    800218d0:	0335fe63          	bgeu	a1,s3,8002190c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x144>
    800218d4:	00b90533          	add	a0,s2,a1
    800218d8:	00050503          	lb	a0,0(a0)
    800218dc:	fc000613          	li	a2,-64
    800218e0:	02c54663          	blt	a0,a2,8002190c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x144>
    800218e4:	854a                	mv	a0,s2
    800218e6:	e50d                	bnez	a0,80021910 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x148>
    800218e8:	a035                	j	80021914 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x14c>
    800218ea:	00148613          	addi	a2,s1,1
    800218ee:	0ff57513          	zext.b	a0,a0
    800218f2:	12e60d63          	beq	a2,a4,80021a2c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x264>
    800218f6:	0014c683          	lbu	a3,1(s1)
    800218fa:	00248613          	addi	a2,s1,2
    800218fe:	03f6f693          	andi	a3,a3,63
    80021902:	0e000793          	li	a5,224
    80021906:	12f57963          	bgeu	a0,a5,80021a38 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x270>
    8002190a:	bf5d                	j	800218c0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xf8>
    8002190c:	4501                	li	a0,0
    8002190e:	c119                	beqz	a0,80021914 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x14c>
    80021910:	892a                	mv	s2,a0
    80021912:	89ae                	mv	s3,a1
    80021914:	06080c63          	beqz	a6,8002198c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1c4>
    80021918:	04098563          	beqz	s3,80021962 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x19a>
    8002191c:	4581                	li	a1,0
    8002191e:	854e                	mv	a0,s3
    80021920:	864a                	mv	a2,s2
    80021922:	00064683          	lbu	a3,0(a2)
    80021926:	0605                	addi	a2,a2,1
    80021928:	0c06f693          	andi	a3,a3,192
    8002192c:	f8068693          	addi	a3,a3,-128
    80021930:	00d036b3          	snez	a3,a3
    80021934:	157d                	addi	a0,a0,-1
    80021936:	95b6                	add	a1,a1,a3
    80021938:	f56d                	bnez	a0,80021922 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x15a>
    8002193a:	008b3503          	ld	a0,8(s6)
    8002193e:	04a5f763          	bgeu	a1,a0,8002198c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1c4>
    80021942:	4581                	li	a1,0
    80021944:	864e                	mv	a2,s3
    80021946:	86ca                	mv	a3,s2
    80021948:	0006c703          	lbu	a4,0(a3)
    8002194c:	0685                	addi	a3,a3,1
    8002194e:	0c077713          	andi	a4,a4,192
    80021952:	f8070713          	addi	a4,a4,-128
    80021956:	00e03733          	snez	a4,a4
    8002195a:	167d                	addi	a2,a2,-1
    8002195c:	95ba                	add	a1,a1,a4
    8002195e:	f66d                	bnez	a2,80021948 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x180>
    80021960:	a029                	j	8002196a <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1a2>
    80021962:	008b3503          	ld	a0,8(s6)
    80021966:	4581                	li	a1,0
    80021968:	c115                	beqz	a0,8002198c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1c4>
    8002196a:	038b4603          	lbu	a2,56(s6)
    8002196e:	470d                	li	a4,3
    80021970:	4681                	li	a3,0
    80021972:	00e60363          	beq	a2,a4,80021978 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1b0>
    80021976:	86b2                	mv	a3,a2
    80021978:	0036f613          	andi	a2,a3,3
    8002197c:	4685                	li	a3,1
    8002197e:	8d0d                	sub	a0,a0,a1
    80021980:	02c6c763          	blt	a3,a2,800219ae <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1e6>
    80021984:	ea05                	bnez	a2,800219b4 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1ec>
    80021986:	8aaa                	mv	s5,a0
    80021988:	4501                	li	a0,0
    8002198a:	a825                	j	800219c2 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1fa>
    8002198c:	028b3583          	ld	a1,40(s6)
    80021990:	020b3503          	ld	a0,32(s6)
    80021994:	6d9c                	ld	a5,24(a1)
    80021996:	85ca                	mv	a1,s2
    80021998:	864e                	mv	a2,s3
    8002199a:	6b02                	ld	s6,0(sp)
    8002199c:	6aa2                	ld	s5,8(sp)
    8002199e:	6a42                	ld	s4,16(sp)
    800219a0:	69e2                	ld	s3,24(sp)
    800219a2:	7902                	ld	s2,32(sp)
    800219a4:	74a2                	ld	s1,40(sp)
    800219a6:	7442                	ld	s0,48(sp)
    800219a8:	70e2                	ld	ra,56(sp)
    800219aa:	6121                	addi	sp,sp,64
    800219ac:	8782                	jr	a5
    800219ae:	458d                	li	a1,3
    800219b0:	00b61463          	bne	a2,a1,800219b8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1f0>
    800219b4:	4a81                	li	s5,0
    800219b6:	a031                	j	800219c2 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1fa>
    800219b8:	00150593          	addi	a1,a0,1
    800219bc:	8105                	srli	a0,a0,0x1
    800219be:	0015da93          	srli	s5,a1,0x1
    800219c2:	00150493          	addi	s1,a0,1
    800219c6:	14fd                	addi	s1,s1,-1
    800219c8:	cc81                	beqz	s1,800219e0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x218>
    800219ca:	028b3583          	ld	a1,40(s6)
    800219ce:	020b3503          	ld	a0,32(s6)
    800219d2:	7190                	ld	a2,32(a1)
    800219d4:	034b2583          	lw	a1,52(s6)
    800219d8:	9602                	jalr	a2
    800219da:	d575                	beqz	a0,800219c6 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x1fe>
    800219dc:	4905                	li	s2,1
    800219de:	a825                	j	80021a16 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x24e>
    800219e0:	028b3583          	ld	a1,40(s6)
    800219e4:	034b6a03          	lwu	s4,52(s6)
    800219e8:	020b3503          	ld	a0,32(s6)
    800219ec:	6d94                	ld	a3,24(a1)
    800219ee:	85ca                	mv	a1,s2
    800219f0:	864e                	mv	a2,s3
    800219f2:	9682                	jalr	a3
    800219f4:	4905                	li	s2,1
    800219f6:	e105                	bnez	a0,80021a16 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x24e>
    800219f8:	020b3983          	ld	s3,32(s6)
    800219fc:	028b3403          	ld	s0,40(s6)
    80021a00:	001a8493          	addi	s1,s5,1
    80021a04:	14fd                	addi	s1,s1,-1
    80021a06:	c499                	beqz	s1,80021a14 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x24c>
    80021a08:	7010                	ld	a2,32(s0)
    80021a0a:	854e                	mv	a0,s3
    80021a0c:	85d2                	mv	a1,s4
    80021a0e:	9602                	jalr	a2
    80021a10:	d975                	beqz	a0,80021a04 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x23c>
    80021a12:	a011                	j	80021a16 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x24e>
    80021a14:	4901                	li	s2,0
    80021a16:	854a                	mv	a0,s2
    80021a18:	6b02                	ld	s6,0(sp)
    80021a1a:	6aa2                	ld	s5,8(sp)
    80021a1c:	6a42                	ld	s4,16(sp)
    80021a1e:	69e2                	ld	s3,24(sp)
    80021a20:	7902                	ld	s2,32(sp)
    80021a22:	74a2                	ld	s1,40(sp)
    80021a24:	7442                	ld	s0,48(sp)
    80021a26:	70e2                	ld	ra,56(sp)
    80021a28:	6121                	addi	sp,sp,64
    80021a2a:	8082                	ret
    80021a2c:	4681                	li	a3,0
    80021a2e:	863a                	mv	a2,a4
    80021a30:	0e000793          	li	a5,224
    80021a34:	e8f566e3          	bltu	a0,a5,800218c0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xf8>
    80021a38:	00e60d63          	beq	a2,a4,80021a52 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x28a>
    80021a3c:	00064483          	lbu	s1,0(a2)
    80021a40:	00160793          	addi	a5,a2,1
    80021a44:	03f4f613          	andi	a2,s1,63
    80021a48:	0f000493          	li	s1,240
    80021a4c:	00957963          	bgeu	a0,s1,80021a5e <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x296>
    80021a50:	bd85                	j	800218c0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xf8>
    80021a52:	4601                	li	a2,0
    80021a54:	87ba                	mv	a5,a4
    80021a56:	0f000493          	li	s1,240
    80021a5a:	e69563e3          	bltu	a0,s1,800218c0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xf8>
    80021a5e:	00e78763          	beq	a5,a4,80021a6c <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x2a4>
    80021a62:	0007c703          	lbu	a4,0(a5) # 110000 <.Lline_table_start0+0xd7cb9>
    80021a66:	03f77713          	andi	a4,a4,63
    80021a6a:	a011                	j	80021a6e <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x2a6>
    80021a6c:	4701                	li	a4,0
    80021a6e:	054a                	slli	a0,a0,0x12
    80021a70:	001c07b7          	lui	a5,0x1c0
    80021a74:	8d7d                	and	a0,a0,a5
    80021a76:	06b2                	slli	a3,a3,0xc
    80021a78:	061a                	slli	a2,a2,0x6
    80021a7a:	8d55                	or	a0,a0,a3
    80021a7c:	8d51                	or	a0,a0,a2
    80021a7e:	8d59                	or	a0,a0,a4
    80021a80:	00110637          	lui	a2,0x110
    80021a84:	e8c508e3          	beq	a0,a2,80021914 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0x14c>
    80021a88:	bd25                	j	800218c0 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E+0xf8>

Disassembly of section .text._ZN4core3fmt9Formatter15debug_lower_hex17hffada68515a2cdf7E:

0000000080021a8a <_ZN4core3fmt9Formatter15debug_lower_hex17hffada68515a2cdf7E>:
    80021a8a:	03054503          	lbu	a0,48(a0)
    80021a8e:	8941                	andi	a0,a0,16
    80021a90:	8111                	srli	a0,a0,0x4
    80021a92:	8082                	ret

Disassembly of section .text._ZN4core3fmt9Formatter15debug_upper_hex17h3e8dade1475f5ac4E:

0000000080021a94 <_ZN4core3fmt9Formatter15debug_upper_hex17h3e8dade1475f5ac4E>:
    80021a94:	03054503          	lbu	a0,48(a0)
    80021a98:	02057513          	andi	a0,a0,32
    80021a9c:	8115                	srli	a0,a0,0x5
    80021a9e:	8082                	ret

Disassembly of section .text._ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE:

0000000080021aa0 <_ZN4core3fmt9Formatter11debug_tuple17h33e702ebb7966d6cE>:
    80021aa0:	1101                	addi	sp,sp,-32
    80021aa2:	ec06                	sd	ra,24(sp)
    80021aa4:	e822                	sd	s0,16(sp)
    80021aa6:	e426                	sd	s1,8(sp)
    80021aa8:	e04a                	sd	s2,0(sp)
    80021aaa:	842e                	mv	s0,a1
    80021aac:	7598                	ld	a4,40(a1)
    80021aae:	718c                	ld	a1,32(a1)
    80021ab0:	6f18                	ld	a4,24(a4)
    80021ab2:	8936                	mv	s2,a3
    80021ab4:	84aa                	mv	s1,a0
    80021ab6:	852e                	mv	a0,a1
    80021ab8:	85b2                	mv	a1,a2
    80021aba:	8636                	mv	a2,a3
    80021abc:	9702                	jalr	a4
    80021abe:	00193593          	seqz	a1,s2
    80021ac2:	e080                	sd	s0,0(s1)
    80021ac4:	00a48823          	sb	a0,16(s1)
    80021ac8:	0004b423          	sd	zero,8(s1)
    80021acc:	00b488a3          	sb	a1,17(s1)
    80021ad0:	6902                	ld	s2,0(sp)
    80021ad2:	64a2                	ld	s1,8(sp)
    80021ad4:	6442                	ld	s0,16(sp)
    80021ad6:	60e2                	ld	ra,24(sp)
    80021ad8:	6105                	addi	sp,sp,32
    80021ada:	8082                	ret

Disassembly of section .text._ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE:

0000000080021adc <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE>:
    80021adc:	7135                	addi	sp,sp,-160
    80021ade:	ed06                	sd	ra,152(sp)
    80021ae0:	e922                	sd	s0,144(sp)
    80021ae2:	e526                	sd	s1,136(sp)
    80021ae4:	e14a                	sd	s2,128(sp)
    80021ae6:	fcce                	sd	s3,120(sp)
    80021ae8:	f8d2                	sd	s4,112(sp)
    80021aea:	f4d6                	sd	s5,104(sp)
    80021aec:	f0da                	sd	s6,96(sp)
    80021aee:	ecde                	sd	s7,88(sp)
    80021af0:	e8e2                	sd	s8,80(sp)
    80021af2:	e4e6                	sd	s9,72(sp)
    80021af4:	e0ea                	sd	s10,64(sp)
    80021af6:	fc6e                	sd	s11,56(sp)
    80021af8:	8a32                	mv	s4,a2
    80021afa:	7614                	ld	a3,40(a2)
    80021afc:	7210                	ld	a2,32(a2)
    80021afe:	7294                	ld	a3,32(a3)
    80021b00:	89ae                	mv	s3,a1
    80021b02:	f82a                	sd	a0,48(sp)
    80021b04:	02200593          	li	a1,34
    80021b08:	8532                	mv	a0,a2
    80021b0a:	9682                	jalr	a3
    80021b0c:	3a051c63          	bnez	a0,80021ec4 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x3e8>
    80021b10:	4481                	li	s1,0
    80021b12:	38098e63          	beqz	s3,80021eae <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x3d2>
    80021b16:	4a81                	li	s5,0
    80021b18:	7dc2                	ld	s11,48(sp)
    80021b1a:	013d8b33          	add	s6,s11,s3
    80021b1e:	f0100513          	li	a0,-255
    80021b22:	1502                	slli	a0,a0,0x20
    80021b24:	157d                	addi	a0,a0,-1
    80021b26:	f42a                	sd	a0,40(sp)
    80021b28:	05555537          	lui	a0,0x5555
    80021b2c:	5555051b          	addiw	a0,a0,1365
    80021b30:	0532                	slli	a0,a0,0xc
    80021b32:	55550513          	addi	a0,a0,1365 # 5555555 <.Lline_table_start0+0x551d20e>
    80021b36:	0532                	slli	a0,a0,0xc
    80021b38:	55550513          	addi	a0,a0,1365
    80021b3c:	0532                	slli	a0,a0,0xc
    80021b3e:	55550513          	addi	a0,a0,1365
    80021b42:	f02a                	sd	a0,32(sp)
    80021b44:	03333537          	lui	a0,0x3333
    80021b48:	3335051b          	addiw	a0,a0,819
    80021b4c:	0532                	slli	a0,a0,0xc
    80021b4e:	33350513          	addi	a0,a0,819 # 3333333 <.Lline_table_start0+0x32fafec>
    80021b52:	0532                	slli	a0,a0,0xc
    80021b54:	33350513          	addi	a0,a0,819
    80021b58:	0532                	slli	a0,a0,0xc
    80021b5a:	33350513          	addi	a0,a0,819
    80021b5e:	ec2a                	sd	a0,24(sp)
    80021b60:	00f0f537          	lui	a0,0xf0f
    80021b64:	0f15051b          	addiw	a0,a0,241
    80021b68:	0532                	slli	a0,a0,0xc
    80021b6a:	f0f50513          	addi	a0,a0,-241 # f0ef0f <.Lline_table_start0+0xed6bc8>
    80021b6e:	0532                	slli	a0,a0,0xc
    80021b70:	0f150513          	addi	a0,a0,241
    80021b74:	0532                	slli	a0,a0,0xc
    80021b76:	f0f50513          	addi	a0,a0,-241
    80021b7a:	e82a                	sd	a0,16(sp)
    80021b7c:	01010537          	lui	a0,0x1010
    80021b80:	1015051b          	addiw	a0,a0,257
    80021b84:	0542                	slli	a0,a0,0x10
    80021b86:	10150513          	addi	a0,a0,257 # 1010101 <.Lline_table_start0+0xfd7dba>
    80021b8a:	0542                	slli	a0,a0,0x10
    80021b8c:	10150513          	addi	a0,a0,257
    80021b90:	e42a                	sd	a0,8(sp)
    80021b92:	4515                	li	a0,5
    80021b94:	1502                	slli	a0,a0,0x20
    80021b96:	e02a                	sd	a0,0(sp)
    80021b98:	896e                	mv	s2,s11
    80021b9a:	00090583          	lb	a1,0(s2)
    80021b9e:	00190513          	addi	a0,s2,1
    80021ba2:	0ff5f413          	zext.b	s0,a1
    80021ba6:	0005c463          	bltz	a1,80021bae <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0xd2>
    80021baa:	892a                	mv	s2,a0
    80021bac:	a871                	j	80021c48 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x16c>
    80021bae:	05650763          	beq	a0,s6,80021bfc <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x120>
    80021bb2:	00194503          	lbu	a0,1(s2)
    80021bb6:	00290613          	addi	a2,s2,2
    80021bba:	03f57593          	andi	a1,a0,63
    80021bbe:	8932                	mv	s2,a2
    80021bc0:	01f47513          	andi	a0,s0,31
    80021bc4:	0e000693          	li	a3,224
    80021bc8:	04d46363          	bltu	s0,a3,80021c0e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x132>
    80021bcc:	05660563          	beq	a2,s6,80021c16 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x13a>
    80021bd0:	00064683          	lbu	a3,0(a2) # 110000 <.Lline_table_start0+0xd7cb9>
    80021bd4:	00160913          	addi	s2,a2,1
    80021bd8:	03f6f693          	andi	a3,a3,63
    80021bdc:	864a                	mv	a2,s2
    80021bde:	059a                	slli	a1,a1,0x6
    80021be0:	8dd5                	or	a1,a1,a3
    80021be2:	0f000693          	li	a3,240
    80021be6:	04d46063          	bltu	s0,a3,80021c26 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x14a>
    80021bea:	05660263          	beq	a2,s6,80021c2e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x152>
    80021bee:	00064683          	lbu	a3,0(a2)
    80021bf2:	00160913          	addi	s2,a2,1
    80021bf6:	03f6f613          	andi	a2,a3,63
    80021bfa:	a81d                	j	80021c30 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x154>
    80021bfc:	4581                	li	a1,0
    80021bfe:	892a                	mv	s2,a0
    80021c00:	865a                	mv	a2,s6
    80021c02:	01f47513          	andi	a0,s0,31
    80021c06:	0e000693          	li	a3,224
    80021c0a:	fcd471e3          	bgeu	s0,a3,80021bcc <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0xf0>
    80021c0e:	051a                	slli	a0,a0,0x6
    80021c10:	00b56433          	or	s0,a0,a1
    80021c14:	a815                	j	80021c48 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x16c>
    80021c16:	4681                	li	a3,0
    80021c18:	865a                	mv	a2,s6
    80021c1a:	059a                	slli	a1,a1,0x6
    80021c1c:	8dd5                	or	a1,a1,a3
    80021c1e:	0f000693          	li	a3,240
    80021c22:	fcd474e3          	bgeu	s0,a3,80021bea <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x10e>
    80021c26:	0532                	slli	a0,a0,0xc
    80021c28:	00a5e433          	or	s0,a1,a0
    80021c2c:	a831                	j	80021c48 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x16c>
    80021c2e:	4601                	li	a2,0
    80021c30:	054a                	slli	a0,a0,0x12
    80021c32:	001c06b7          	lui	a3,0x1c0
    80021c36:	8d75                	and	a0,a0,a3
    80021c38:	059a                	slli	a1,a1,0x6
    80021c3a:	8d4d                	or	a0,a0,a1
    80021c3c:	00c56433          	or	s0,a0,a2
    80021c40:	00110537          	lui	a0,0x110
    80021c44:	24a40363          	beq	s0,a0,80021e8a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x3ae>
    80021c48:	4b89                	li	s7,2
    80021c4a:	02100513          	li	a0,33
    80021c4e:	00854e63          	blt	a0,s0,80021c6a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x18e>
    80021c52:	4525                	li	a0,9
    80021c54:	02a40963          	beq	s0,a0,80021c86 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x1aa>
    80021c58:	4529                	li	a0,10
    80021c5a:	0aa40a63          	beq	s0,a0,80021d0e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x232>
    80021c5e:	4535                	li	a0,13
    80021c60:	02a41663          	bne	s0,a0,80021c8c <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x1b0>
    80021c64:	07200c13          	li	s8,114
    80021c68:	a06d                	j	80021d12 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x236>
    80021c6a:	02200513          	li	a0,34
    80021c6e:	00a40a63          	beq	s0,a0,80021c82 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x1a6>
    80021c72:	02700513          	li	a0,39
    80021c76:	00a40663          	beq	s0,a0,80021c82 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x1a6>
    80021c7a:	05c00513          	li	a0,92
    80021c7e:	00a41763          	bne	s0,a0,80021c8c <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x1b0>
    80021c82:	8c22                	mv	s8,s0
    80021c84:	a079                	j	80021d12 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x236>
    80021c86:	07400c13          	li	s8,116
    80021c8a:	a061                	j	80021d12 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x236>
    80021c8c:	8522                	mv	a0,s0
    80021c8e:	00002097          	auipc	ra,0x2
    80021c92:	91c080e7          	jalr	-1764(ra) # 800235aa <_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc6378705226a5029E>
    80021c96:	e901                	bnez	a0,80021ca6 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x1ca>
    80021c98:	8522                	mv	a0,s0
    80021c9a:	00001097          	auipc	ra,0x1
    80021c9e:	c3e080e7          	jalr	-962(ra) # 800228d8 <_ZN4core7unicode9printable12is_printable17hd298c127375d0caaE>
    80021ca2:	1c051d63          	bnez	a0,80021e7c <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x3a0>
    80021ca6:	00146513          	ori	a0,s0,1
    80021caa:	00155593          	srli	a1,a0,0x1
    80021cae:	8d4d                	or	a0,a0,a1
    80021cb0:	00255593          	srli	a1,a0,0x2
    80021cb4:	8d4d                	or	a0,a0,a1
    80021cb6:	00455593          	srli	a1,a0,0x4
    80021cba:	8d4d                	or	a0,a0,a1
    80021cbc:	00855593          	srli	a1,a0,0x8
    80021cc0:	8d4d                	or	a0,a0,a1
    80021cc2:	01055593          	srli	a1,a0,0x10
    80021cc6:	8d4d                	or	a0,a0,a1
    80021cc8:	02055593          	srli	a1,a0,0x20
    80021ccc:	8d4d                	or	a0,a0,a1
    80021cce:	fff54513          	not	a0,a0
    80021cd2:	00155593          	srli	a1,a0,0x1
    80021cd6:	7602                	ld	a2,32(sp)
    80021cd8:	8df1                	and	a1,a1,a2
    80021cda:	8d0d                	sub	a0,a0,a1
    80021cdc:	6662                	ld	a2,24(sp)
    80021cde:	00c575b3          	and	a1,a0,a2
    80021ce2:	8109                	srli	a0,a0,0x2
    80021ce4:	8d71                	and	a0,a0,a2
    80021ce6:	952e                	add	a0,a0,a1
    80021ce8:	00455593          	srli	a1,a0,0x4
    80021cec:	952e                	add	a0,a0,a1
    80021cee:	65c2                	ld	a1,16(sp)
    80021cf0:	8d6d                	and	a0,a0,a1
    80021cf2:	65a2                	ld	a1,8(sp)
    80021cf4:	02b50533          	mul	a0,a0,a1
    80021cf8:	9161                	srli	a0,a0,0x38
    80021cfa:	1501                	addi	a0,a0,-32
    80021cfc:	0025551b          	srliw	a0,a0,0x2
    80021d00:	00754c93          	xori	s9,a0,7
    80021d04:	6502                	ld	a0,0(sp)
    80021d06:	00a46d33          	or	s10,s0,a0
    80021d0a:	4b8d                	li	s7,3
    80021d0c:	a019                	j	80021d12 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x236>
    80021d0e:	06e00c13          	li	s8,110
    80021d12:	1e9aef63          	bltu	s5,s1,80021f10 <.LBB196_73>
    80021d16:	0014b513          	seqz	a0,s1
    80021d1a:	0134c5b3          	xor	a1,s1,s3
    80021d1e:	0015b593          	seqz	a1,a1
    80021d22:	8d4d                	or	a0,a0,a1
    80021d24:	75c2                	ld	a1,48(sp)
    80021d26:	95a6                	add	a1,a1,s1
    80021d28:	e909                	bnez	a0,80021d3a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x25e>
    80021d2a:	1f34f363          	bgeu	s1,s3,80021f10 <.LBB196_73>
    80021d2e:	00058503          	lb	a0,0(a1)
    80021d32:	fbf00613          	li	a2,-65
    80021d36:	1ca65d63          	bge	a2,a0,80021f10 <.LBB196_73>
    80021d3a:	001ab513          	seqz	a0,s5
    80021d3e:	013ac633          	xor	a2,s5,s3
    80021d42:	00163613          	seqz	a2,a2
    80021d46:	8d51                	or	a0,a0,a2
    80021d48:	e919                	bnez	a0,80021d5e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x282>
    80021d4a:	1d3af363          	bgeu	s5,s3,80021f10 <.LBB196_73>
    80021d4e:	7542                	ld	a0,48(sp)
    80021d50:	9556                	add	a0,a0,s5
    80021d52:	00050503          	lb	a0,0(a0) # 110000 <.Lline_table_start0+0xd7cb9>
    80021d56:	fbf00613          	li	a2,-65
    80021d5a:	1aa65b63          	bge	a2,a0,80021f10 <.LBB196_73>
    80021d5e:	028a3603          	ld	a2,40(s4) # 110028 <.Lline_table_start0+0xd7ce1>
    80021d62:	020a3503          	ld	a0,32(s4)
    80021d66:	6e14                	ld	a3,24(a2)
    80021d68:	409a8633          	sub	a2,s5,s1
    80021d6c:	9682                	jalr	a3
    80021d6e:	4489                	li	s1,2
    80021d70:	c51d                	beqz	a0,80021d9e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2c2>
    80021d72:	aa89                	j	80021ec4 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x3e8>
    80021d74:	557d                	li	a0,-1
    80021d76:	00acfcb3          	and	s9,s9,a0
    80021d7a:	7522                	ld	a0,40(sp)
    80021d7c:	00ad7533          	and	a0,s10,a0
    80021d80:	4585                	li	a1,1
    80021d82:	1586                	slli	a1,a1,0x21
    80021d84:	00b56d33          	or	s10,a0,a1
    80021d88:	4b8d                	li	s7,3
    80021d8a:	07b00593          	li	a1,123
    80021d8e:	028a3603          	ld	a2,40(s4)
    80021d92:	020a3503          	ld	a0,32(s4)
    80021d96:	7210                	ld	a2,32(a2)
    80021d98:	9602                	jalr	a2
    80021d9a:	12051563          	bnez	a0,80021ec4 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x3e8>
    80021d9e:	020b9513          	slli	a0,s7,0x20
    80021da2:	9101                	srli	a0,a0,0x20
    80021da4:	4b85                	li	s7,1
    80021da6:	00abc663          	blt	s7,a0,80021db2 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2d6>
    80021daa:	c55d                	beqz	a0,80021e58 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x37c>
    80021dac:	4b81                	li	s7,0
    80021dae:	85e2                	mv	a1,s8
    80021db0:	bff9                	j	80021d8e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2b2>
    80021db2:	05c00593          	li	a1,92
    80021db6:	fc950ce3          	beq	a0,s1,80021d8e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2b2>
    80021dba:	020d5513          	srli	a0,s10,0x20
    80021dbe:	0ff57513          	zext.b	a0,a0
    80021dc2:	02a4c063          	blt	s1,a0,80021de2 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x306>
    80021dc6:	c949                	beqz	a0,80021e58 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x37c>
    80021dc8:	4585                	li	a1,1
    80021dca:	04b51063          	bne	a0,a1,80021e0a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x32e>
    80021dce:	557d                	li	a0,-1
    80021dd0:	00acfcb3          	and	s9,s9,a0
    80021dd4:	7522                	ld	a0,40(sp)
    80021dd6:	00ad7d33          	and	s10,s10,a0
    80021dda:	4b8d                	li	s7,3
    80021ddc:	07d00593          	li	a1,125
    80021de0:	b77d                	j	80021d8e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2b2>
    80021de2:	460d                	li	a2,3
    80021de4:	f8c508e3          	beq	a0,a2,80021d74 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x298>
    80021de8:	4611                	li	a2,4
    80021dea:	04c51263          	bne	a0,a2,80021e2e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x352>
    80021dee:	557d                	li	a0,-1
    80021df0:	00acfcb3          	and	s9,s9,a0
    80021df4:	7522                	ld	a0,40(sp)
    80021df6:	00ad7533          	and	a0,s10,a0
    80021dfa:	4b8d                	li	s7,3
    80021dfc:	020b9593          	slli	a1,s7,0x20
    80021e00:	00b56d33          	or	s10,a0,a1
    80021e04:	07500593          	li	a1,117
    80021e08:	b759                	j	80021d8e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2b2>
    80021e0a:	002c9513          	slli	a0,s9,0x2
    80021e0e:	00ad553b          	srlw	a0,s10,a0
    80021e12:	893d                	andi	a0,a0,15
    80021e14:	03000593          	li	a1,48
    80021e18:	4629                	li	a2,10
    80021e1a:	00c56463          	bltu	a0,a2,80021e22 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x346>
    80021e1e:	05700593          	li	a1,87
    80021e22:	95aa                	add	a1,a1,a0
    80021e24:	000c8e63          	beqz	s9,80021e40 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x364>
    80021e28:	1cfd                	addi	s9,s9,-1
    80021e2a:	4b8d                	li	s7,3
    80021e2c:	b78d                	j	80021d8e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2b2>
    80021e2e:	557d                	li	a0,-1
    80021e30:	00acfcb3          	and	s9,s9,a0
    80021e34:	7522                	ld	a0,40(sp)
    80021e36:	00ad7533          	and	a0,s10,a0
    80021e3a:	4605                	li	a2,1
    80021e3c:	160a                	slli	a2,a2,0x22
    80021e3e:	a809                	j	80021e50 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x374>
    80021e40:	557d                	li	a0,-1
    80021e42:	00acfcb3          	and	s9,s9,a0
    80021e46:	7522                	ld	a0,40(sp)
    80021e48:	00ad7533          	and	a0,s10,a0
    80021e4c:	4605                	li	a2,1
    80021e4e:	1602                	slli	a2,a2,0x20
    80021e50:	00c56d33          	or	s10,a0,a2
    80021e54:	4b8d                	li	s7,3
    80021e56:	bf25                	j	80021d8e <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x2b2>
    80021e58:	4505                	li	a0,1
    80021e5a:	08000593          	li	a1,128
    80021e5e:	00b46d63          	bltu	s0,a1,80021e78 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x39c>
    80021e62:	00b45593          	srli	a1,s0,0xb
    80021e66:	4509                	li	a0,2
    80021e68:	c981                	beqz	a1,80021e78 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x39c>
    80021e6a:	01045513          	srli	a0,s0,0x10
    80021e6e:	00153513          	seqz	a0,a0
    80021e72:	4591                	li	a1,4
    80021e74:	40a58533          	sub	a0,a1,a0
    80021e78:	015504b3          	add	s1,a0,s5
    80021e7c:	41ba8533          	sub	a0,s5,s11
    80021e80:	01250ab3          	add	s5,a0,s2
    80021e84:	8dca                	mv	s11,s2
    80021e86:	d12b1ae3          	bne	s6,s2,80021b9a <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0xbe>
    80021e8a:	0014b513          	seqz	a0,s1
    80021e8e:	0134c5b3          	xor	a1,s1,s3
    80021e92:	0015b593          	seqz	a1,a1
    80021e96:	8d4d                	or	a0,a0,a1
    80021e98:	e919                	bnez	a0,80021eae <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x3d2>
    80021e9a:	0934f863          	bgeu	s1,s3,80021f2a <.LBB196_74>
    80021e9e:	7542                	ld	a0,48(sp)
    80021ea0:	9526                	add	a0,a0,s1
    80021ea2:	00050503          	lb	a0,0(a0)
    80021ea6:	fbf00593          	li	a1,-65
    80021eaa:	08a5d063          	bge	a1,a0,80021f2a <.LBB196_74>
    80021eae:	028a3583          	ld	a1,40(s4)
    80021eb2:	020a3503          	ld	a0,32(s4)
    80021eb6:	6d94                	ld	a3,24(a1)
    80021eb8:	75c2                	ld	a1,48(sp)
    80021eba:	95a6                	add	a1,a1,s1
    80021ebc:	40998633          	sub	a2,s3,s1
    80021ec0:	9682                	jalr	a3
    80021ec2:	c10d                	beqz	a0,80021ee4 <_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h001384d9b7357fffE+0x408>
    80021ec4:	4505                	li	a0,1
    80021ec6:	7de2                	ld	s11,56(sp)
    80021ec8:	6d06                	ld	s10,64(sp)
    80021eca:	6ca6                	ld	s9,72(sp)
    80021ecc:	6c46                	ld	s8,80(sp)
    80021ece:	6be6                	ld	s7,88(sp)
    80021ed0:	7b06                	ld	s6,96(sp)
    80021ed2:	7aa6                	ld	s5,104(sp)
    80021ed4:	7a46                	ld	s4,112(sp)
    80021ed6:	79e6                	ld	s3,120(sp)
    80021ed8:	690a                	ld	s2,128(sp)
    80021eda:	64aa                	ld	s1,136(sp)
    80021edc:	644a                	ld	s0,144(sp)
    80021ede:	60ea                	ld	ra,152(sp)
    80021ee0:	610d                	addi	sp,sp,160
    80021ee2:	8082                	ret
    80021ee4:	028a3583          	ld	a1,40(s4)
    80021ee8:	020a3503          	ld	a0,32(s4)
    80021eec:	719c                	ld	a5,32(a1)
    80021eee:	02200593          	li	a1,34
    80021ef2:	7de2                	ld	s11,56(sp)
    80021ef4:	6d06                	ld	s10,64(sp)
    80021ef6:	6ca6                	ld	s9,72(sp)
    80021ef8:	6c46                	ld	s8,80(sp)
    80021efa:	6be6                	ld	s7,88(sp)
    80021efc:	7b06                	ld	s6,96(sp)
    80021efe:	7aa6                	ld	s5,104(sp)
    80021f00:	7a46                	ld	s4,112(sp)
    80021f02:	79e6                	ld	s3,120(sp)
    80021f04:	690a                	ld	s2,128(sp)
    80021f06:	64aa                	ld	s1,136(sp)
    80021f08:	644a                	ld	s0,144(sp)
    80021f0a:	60ea                	ld	ra,152(sp)
    80021f0c:	610d                	addi	sp,sp,160
    80021f0e:	8782                	jr	a5

0000000080021f10 <.LBB196_73>:
    80021f10:	00008717          	auipc	a4,0x8
    80021f14:	65070713          	addi	a4,a4,1616 # 8002a560 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.236>
    80021f18:	7542                	ld	a0,48(sp)
    80021f1a:	85ce                	mv	a1,s3
    80021f1c:	8626                	mv	a2,s1
    80021f1e:	86d6                	mv	a3,s5
    80021f20:	00000097          	auipc	ra,0x0
    80021f24:	6de080e7          	jalr	1758(ra) # 800225fe <_ZN4core3str16slice_error_fail17he9562343589499f6E>
	...

0000000080021f2a <.LBB196_74>:
    80021f2a:	00008717          	auipc	a4,0x8
    80021f2e:	64e70713          	addi	a4,a4,1614 # 8002a578 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.237>
    80021f32:	7542                	ld	a0,48(sp)
    80021f34:	85ce                	mv	a1,s3
    80021f36:	8626                	mv	a2,s1
    80021f38:	86ce                	mv	a3,s3
    80021f3a:	00000097          	auipc	ra,0x0
    80021f3e:	6c4080e7          	jalr	1732(ra) # 800225fe <_ZN4core3str16slice_error_fail17he9562343589499f6E>
	...

Disassembly of section .text._ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h669958e415ffd666E:

0000000080021f44 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h669958e415ffd666E>:
    80021f44:	86ae                	mv	a3,a1
    80021f46:	85aa                	mv	a1,a0
    80021f48:	8532                	mv	a0,a2
    80021f4a:	8636                	mv	a2,a3
    80021f4c:	00000317          	auipc	t1,0x0
    80021f50:	87c30067          	jr	-1924(t1) # 800217c8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E>

Disassembly of section .text._ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E:

0000000080021f54 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E>:
    80021f54:	7159                	addi	sp,sp,-112
    80021f56:	f486                	sd	ra,104(sp)
    80021f58:	f0a2                	sd	s0,96(sp)
    80021f5a:	eca6                	sd	s1,88(sp)
    80021f5c:	e8ca                	sd	s2,80(sp)
    80021f5e:	e4ce                	sd	s3,72(sp)
    80021f60:	e0d2                	sd	s4,64(sp)
    80021f62:	fc56                	sd	s5,56(sp)
    80021f64:	f85a                	sd	s6,48(sp)
    80021f66:	f45e                	sd	s7,40(sp)
    80021f68:	f062                	sd	s8,32(sp)
    80021f6a:	ec66                	sd	s9,24(sp)
    80021f6c:	e86a                	sd	s10,16(sp)
    80021f6e:	e46e                	sd	s11,8(sp)
    80021f70:	842e                	mv	s0,a1
    80021f72:	758c                	ld	a1,40(a1)
    80021f74:	7010                	ld	a2,32(s0)
    80021f76:	7194                	ld	a3,32(a1)
    80021f78:	84aa                	mv	s1,a0
    80021f7a:	02700593          	li	a1,39
    80021f7e:	8532                	mv	a0,a2
    80021f80:	9682                	jalr	a3
    80021f82:	c10d                	beqz	a0,80021fa4 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x50>
    80021f84:	4505                	li	a0,1
    80021f86:	6da2                	ld	s11,8(sp)
    80021f88:	6d42                	ld	s10,16(sp)
    80021f8a:	6ce2                	ld	s9,24(sp)
    80021f8c:	7c02                	ld	s8,32(sp)
    80021f8e:	7ba2                	ld	s7,40(sp)
    80021f90:	7b42                	ld	s6,48(sp)
    80021f92:	7ae2                	ld	s5,56(sp)
    80021f94:	6a06                	ld	s4,64(sp)
    80021f96:	69a6                	ld	s3,72(sp)
    80021f98:	6946                	ld	s2,80(sp)
    80021f9a:	64e6                	ld	s1,88(sp)
    80021f9c:	7406                	ld	s0,96(sp)
    80021f9e:	70a6                	ld	ra,104(sp)
    80021fa0:	6165                	addi	sp,sp,112
    80021fa2:	8082                	ret
    80021fa4:	0004ea83          	lwu	s5,0(s1)
    80021fa8:	02100513          	li	a0,33
    80021fac:	4489                	li	s1,2
    80021fae:	01554e63          	blt	a0,s5,80021fca <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x76>
    80021fb2:	4525                	li	a0,9
    80021fb4:	04aa8763          	beq	s5,a0,80022002 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xae>
    80021fb8:	4529                	li	a0,10
    80021fba:	04aa8763          	beq	s5,a0,80022008 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb4>
    80021fbe:	4535                	li	a0,13
    80021fc0:	02aa9163          	bne	s5,a0,80021fe2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x8e>
    80021fc4:	07200a93          	li	s5,114
    80021fc8:	a091                	j	8002200c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb8>
    80021fca:	02200513          	li	a0,34
    80021fce:	02aa8f63          	beq	s5,a0,8002200c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb8>
    80021fd2:	02700513          	li	a0,39
    80021fd6:	02aa8b63          	beq	s5,a0,8002200c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb8>
    80021fda:	05c00513          	li	a0,92
    80021fde:	02aa8763          	beq	s5,a0,8002200c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb8>
    80021fe2:	8556                	mv	a0,s5
    80021fe4:	00001097          	auipc	ra,0x1
    80021fe8:	5c6080e7          	jalr	1478(ra) # 800235aa <_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc6378705226a5029E>
    80021fec:	10051b63          	bnez	a0,80022102 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x1ae>
    80021ff0:	8556                	mv	a0,s5
    80021ff2:	00001097          	auipc	ra,0x1
    80021ff6:	8e6080e7          	jalr	-1818(ra) # 800228d8 <_ZN4core7unicode9printable12is_printable17hd298c127375d0caaE>
    80021ffa:	10050463          	beqz	a0,80022102 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x1ae>
    80021ffe:	4485                	li	s1,1
    80022000:	a031                	j	8002200c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb8>
    80022002:	07400a93          	li	s5,116
    80022006:	a019                	j	8002200c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb8>
    80022008:	06e00a93          	li	s5,110
    8002200c:	4a09                	li	s4,2
    8002200e:	4b05                	li	s6,1
    80022010:	f0100513          	li	a0,-255
    80022014:	1502                	slli	a0,a0,0x20
    80022016:	fff50b93          	addi	s7,a0,-1
    8002201a:	4c29                	li	s8,10
    8002201c:	020b1c93          	slli	s9,s6,0x20
    80022020:	4d0d                	li	s10,3
    80022022:	021b1d93          	slli	s11,s6,0x21
    80022026:	4911                	li	s2,4
    80022028:	a039                	j	80022036 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xe2>
    8002202a:	4485                	li	s1,1
    8002202c:	7410                	ld	a2,40(s0)
    8002202e:	7008                	ld	a0,32(s0)
    80022030:	7210                	ld	a2,32(a2)
    80022032:	9602                	jalr	a2
    80022034:	f921                	bnez	a0,80021f84 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x30>
    80022036:	02049513          	slli	a0,s1,0x20
    8002203a:	9101                	srli	a0,a0,0x20
    8002203c:	00ab4663          	blt	s6,a0,80022048 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xf4>
    80022040:	cd49                	beqz	a0,800220da <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x186>
    80022042:	4481                	li	s1,0
    80022044:	85d6                	mv	a1,s5
    80022046:	b7dd                	j	8002202c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd8>
    80022048:	05c00593          	li	a1,92
    8002204c:	fd450fe3          	beq	a0,s4,8002202a <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd6>
    80022050:	0209d513          	srli	a0,s3,0x20
    80022054:	0ff57513          	zext.b	a0,a0
    80022058:	00aa4b63          	blt	s4,a0,8002206e <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x11a>
    8002205c:	cd3d                	beqz	a0,800220da <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x186>
    8002205e:	03651663          	bne	a0,s6,8002208a <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x136>
    80022062:	0179f9b3          	and	s3,s3,s7
    80022066:	448d                	li	s1,3
    80022068:	07d00593          	li	a1,125
    8002206c:	b7c1                	j	8002202c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd8>
    8002206e:	05a50063          	beq	a0,s10,800220ae <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x15a>
    80022072:	05251663          	bne	a0,s2,800220be <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x16a>
    80022076:	0179f533          	and	a0,s3,s7
    8002207a:	448d                	li	s1,3
    8002207c:	02049593          	slli	a1,s1,0x20
    80022080:	00b569b3          	or	s3,a0,a1
    80022084:	07500593          	li	a1,117
    80022088:	b755                	j	8002202c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd8>
    8002208a:	6602                	ld	a2,0(sp)
    8002208c:	00261513          	slli	a0,a2,0x2
    80022090:	00a9d53b          	srlw	a0,s3,a0
    80022094:	893d                	andi	a0,a0,15
    80022096:	03000593          	li	a1,48
    8002209a:	01856463          	bltu	a0,s8,800220a2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x14e>
    8002209e:	05700593          	li	a1,87
    800220a2:	95aa                	add	a1,a1,a0
    800220a4:	c60d                	beqz	a2,800220ce <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0x17a>
    800220a6:	167d                	addi	a2,a2,-1
    800220a8:	e032                	sd	a2,0(sp)
    800220aa:	448d                	li	s1,3
    800220ac:	b741                	j	8002202c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd8>
    800220ae:	0179f533          	and	a0,s3,s7
    800220b2:	01b569b3          	or	s3,a0,s11
    800220b6:	448d                	li	s1,3
    800220b8:	07b00593          	li	a1,123
    800220bc:	bf85                	j	8002202c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd8>
    800220be:	0179f533          	and	a0,s3,s7
    800220c2:	022b1613          	slli	a2,s6,0x22
    800220c6:	00c569b3          	or	s3,a0,a2
    800220ca:	448d                	li	s1,3
    800220cc:	b785                	j	8002202c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd8>
    800220ce:	0179f533          	and	a0,s3,s7
    800220d2:	019569b3          	or	s3,a0,s9
    800220d6:	448d                	li	s1,3
    800220d8:	bf91                	j	8002202c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xd8>
    800220da:	740c                	ld	a1,40(s0)
    800220dc:	7008                	ld	a0,32(s0)
    800220de:	719c                	ld	a5,32(a1)
    800220e0:	02700593          	li	a1,39
    800220e4:	6da2                	ld	s11,8(sp)
    800220e6:	6d42                	ld	s10,16(sp)
    800220e8:	6ce2                	ld	s9,24(sp)
    800220ea:	7c02                	ld	s8,32(sp)
    800220ec:	7ba2                	ld	s7,40(sp)
    800220ee:	7b42                	ld	s6,48(sp)
    800220f0:	7ae2                	ld	s5,56(sp)
    800220f2:	6a06                	ld	s4,64(sp)
    800220f4:	69a6                	ld	s3,72(sp)
    800220f6:	6946                	ld	s2,80(sp)
    800220f8:	64e6                	ld	s1,88(sp)
    800220fa:	7406                	ld	s0,96(sp)
    800220fc:	70a6                	ld	ra,104(sp)
    800220fe:	6165                	addi	sp,sp,112
    80022100:	8782                	jr	a5
    80022102:	001ae513          	ori	a0,s5,1
    80022106:	00155593          	srli	a1,a0,0x1
    8002210a:	8d4d                	or	a0,a0,a1
    8002210c:	00255593          	srli	a1,a0,0x2
    80022110:	8d4d                	or	a0,a0,a1
    80022112:	00455593          	srli	a1,a0,0x4
    80022116:	8d4d                	or	a0,a0,a1
    80022118:	00855593          	srli	a1,a0,0x8
    8002211c:	8d4d                	or	a0,a0,a1
    8002211e:	01055593          	srli	a1,a0,0x10
    80022122:	8d4d                	or	a0,a0,a1
    80022124:	02055593          	srli	a1,a0,0x20
    80022128:	8d4d                	or	a0,a0,a1
    8002212a:	fff54513          	not	a0,a0
    8002212e:	00155593          	srli	a1,a0,0x1
    80022132:	05555637          	lui	a2,0x5555
    80022136:	5556061b          	addiw	a2,a2,1365
    8002213a:	0632                	slli	a2,a2,0xc
    8002213c:	55560613          	addi	a2,a2,1365 # 5555555 <.Lline_table_start0+0x551d20e>
    80022140:	0632                	slli	a2,a2,0xc
    80022142:	55560613          	addi	a2,a2,1365
    80022146:	0632                	slli	a2,a2,0xc
    80022148:	55560613          	addi	a2,a2,1365
    8002214c:	8df1                	and	a1,a1,a2
    8002214e:	8d0d                	sub	a0,a0,a1
    80022150:	033335b7          	lui	a1,0x3333
    80022154:	3335859b          	addiw	a1,a1,819
    80022158:	05b2                	slli	a1,a1,0xc
    8002215a:	33358593          	addi	a1,a1,819 # 3333333 <.Lline_table_start0+0x32fafec>
    8002215e:	05b2                	slli	a1,a1,0xc
    80022160:	33358593          	addi	a1,a1,819
    80022164:	05b2                	slli	a1,a1,0xc
    80022166:	33358593          	addi	a1,a1,819
    8002216a:	00b57633          	and	a2,a0,a1
    8002216e:	8109                	srli	a0,a0,0x2
    80022170:	8d6d                	and	a0,a0,a1
    80022172:	9532                	add	a0,a0,a2
    80022174:	00455593          	srli	a1,a0,0x4
    80022178:	952e                	add	a0,a0,a1
    8002217a:	00f0f5b7          	lui	a1,0xf0f
    8002217e:	0f15859b          	addiw	a1,a1,241
    80022182:	05b2                	slli	a1,a1,0xc
    80022184:	f0f58593          	addi	a1,a1,-241 # f0ef0f <.Lline_table_start0+0xed6bc8>
    80022188:	05b2                	slli	a1,a1,0xc
    8002218a:	0f158593          	addi	a1,a1,241
    8002218e:	05b2                	slli	a1,a1,0xc
    80022190:	f0f58593          	addi	a1,a1,-241
    80022194:	8d6d                	and	a0,a0,a1
    80022196:	010105b7          	lui	a1,0x1010
    8002219a:	1015859b          	addiw	a1,a1,257
    8002219e:	05c2                	slli	a1,a1,0x10
    800221a0:	10158593          	addi	a1,a1,257 # 1010101 <.Lline_table_start0+0xfd7dba>
    800221a4:	05c2                	slli	a1,a1,0x10
    800221a6:	10158593          	addi	a1,a1,257
    800221aa:	02b50533          	mul	a0,a0,a1
    800221ae:	9161                	srli	a0,a0,0x38
    800221b0:	1501                	addi	a0,a0,-32
    800221b2:	0025551b          	srliw	a0,a0,0x2
    800221b6:	00754513          	xori	a0,a0,7
    800221ba:	e02a                	sd	a0,0(sp)
    800221bc:	4515                	li	a0,5
    800221be:	1502                	slli	a0,a0,0x20
    800221c0:	00aae9b3          	or	s3,s5,a0
    800221c4:	448d                	li	s1,3
    800221c6:	b599                	j	8002200c <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E+0xb8>

Disassembly of section .text._ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E:

00000000800221c8 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E>:
    800221c8:	1141                	addi	sp,sp,-16
    800221ca:	e406                	sd	ra,8(sp)
    800221cc:	00758693          	addi	a3,a1,7
    800221d0:	9ae1                	andi	a3,a3,-8
    800221d2:	8e8d                	sub	a3,a3,a1
    800221d4:	0ff57813          	zext.b	a6,a0
    800221d8:	c68d                	beqz	a3,80022202 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0x3a>
    800221da:	8532                	mv	a0,a2
    800221dc:	00d66363          	bltu	a2,a3,800221e2 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0x1a>
    800221e0:	8536                	mv	a0,a3
    800221e2:	c105                	beqz	a0,80022202 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0x3a>
    800221e4:	4681                	li	a3,0
    800221e6:	00d58733          	add	a4,a1,a3
    800221ea:	00074703          	lbu	a4,0(a4)
    800221ee:	0d070463          	beq	a4,a6,800222b6 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xee>
    800221f2:	0685                	addi	a3,a3,1
    800221f4:	fed519e3          	bne	a0,a3,800221e6 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0x1e>
    800221f8:	ff060893          	addi	a7,a2,-16
    800221fc:	00a8f663          	bgeu	a7,a0,80022208 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0x40>
    80022200:	a049                	j	80022282 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xba>
    80022202:	4501                	li	a0,0
    80022204:	ff060893          	addi	a7,a2,-16
    80022208:	feff06b7          	lui	a3,0xfeff0
    8002220c:	eff6869b          	addiw	a3,a3,-257
    80022210:	06c2                	slli	a3,a3,0x10
    80022212:	eff68693          	addi	a3,a3,-257 # fffffffffefefeff <end+0xffffffff7ef80abd>
    80022216:	06c2                	slli	a3,a3,0x10
    80022218:	eff68293          	addi	t0,a3,-257
    8002221c:	76c1                	lui	a3,0xffff0
    8002221e:	1016869b          	addiw	a3,a3,257
    80022222:	06c2                	slli	a3,a3,0x10
    80022224:	10168693          	addi	a3,a3,257 # ffffffffffff0101 <end+0xffffffff7ff80cbf>
    80022228:	06c2                	slli	a3,a3,0x10
    8002222a:	10168693          	addi	a3,a3,257
    8002222e:	06be                	slli	a3,a3,0xf
    80022230:	08068313          	addi	t1,a3,128
    80022234:	010106b7          	lui	a3,0x1010
    80022238:	1016869b          	addiw	a3,a3,257
    8002223c:	06c2                	slli	a3,a3,0x10
    8002223e:	10168693          	addi	a3,a3,257 # 1010101 <.Lline_table_start0+0xfd7dba>
    80022242:	06c2                	slli	a3,a3,0x10
    80022244:	10168693          	addi	a3,a3,257
    80022248:	02d803b3          	mul	t2,a6,a3
    8002224c:	00a587b3          	add	a5,a1,a0
    80022250:	6398                	ld	a4,0(a5)
    80022252:	679c                	ld	a5,8(a5)
    80022254:	00774733          	xor	a4,a4,t2
    80022258:	fff74693          	not	a3,a4
    8002225c:	9716                	add	a4,a4,t0
    8002225e:	0066f6b3          	and	a3,a3,t1
    80022262:	8ef9                	and	a3,a3,a4
    80022264:	0077c733          	xor	a4,a5,t2
    80022268:	fff74793          	not	a5,a4
    8002226c:	9716                	add	a4,a4,t0
    8002226e:	0067f7b3          	and	a5,a5,t1
    80022272:	8f7d                	and	a4,a4,a5
    80022274:	8ed9                	or	a3,a3,a4
    80022276:	e681                	bnez	a3,8002227e <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xb6>
    80022278:	0541                	addi	a0,a0,16
    8002227a:	fca8f9e3          	bgeu	a7,a0,8002224c <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0x84>
    8002227e:	02a66e63          	bltu	a2,a0,800222ba <.LBB203_24>
    80022282:	4681                	li	a3,0
    80022284:	00c51463          	bne	a0,a2,8002228c <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xc4>
    80022288:	4581                	li	a1,0
    8002228a:	a005                	j	800222aa <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xe2>
    8002228c:	8e09                	sub	a2,a2,a0
    8002228e:	95aa                	add	a1,a1,a0
    80022290:	00d58733          	add	a4,a1,a3
    80022294:	00074703          	lbu	a4,0(a4)
    80022298:	01070863          	beq	a4,a6,800222a8 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xe0>
    8002229c:	0685                	addi	a3,a3,1
    8002229e:	fed619e3          	bne	a2,a3,80022290 <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xc8>
    800222a2:	4581                	li	a1,0
    800222a4:	86b2                	mv	a3,a2
    800222a6:	a011                	j	800222aa <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xe2>
    800222a8:	4585                	li	a1,1
    800222aa:	96aa                	add	a3,a3,a0
    800222ac:	852e                	mv	a0,a1
    800222ae:	85b6                	mv	a1,a3
    800222b0:	60a2                	ld	ra,8(sp)
    800222b2:	0141                	addi	sp,sp,16
    800222b4:	8082                	ret
    800222b6:	4585                	li	a1,1
    800222b8:	bfd5                	j	800222ac <_ZN4core5slice6memchr19memchr_general_case17h70a7e3c60d21a994E+0xe4>

00000000800222ba <.LBB203_24>:
    800222ba:	00008697          	auipc	a3,0x8
    800222be:	2de68693          	addi	a3,a3,734 # 8002a598 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.242>
    800222c2:	85b2                	mv	a1,a2
    800222c4:	8636                	mv	a2,a3
    800222c6:	00000097          	auipc	ra,0x0
    800222ca:	00a080e7          	jalr	10(ra) # 800222d0 <_ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E>
	...

Disassembly of section .text._ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E:

00000000800222d0 <_ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E>:
    800222d0:	7159                	addi	sp,sp,-112
    800222d2:	f486                	sd	ra,104(sp)
    800222d4:	e42a                	sd	a0,8(sp)
    800222d6:	e82e                	sd	a1,16(sp)
    800222d8:	0028                	addi	a0,sp,8
    800222da:	e4aa                	sd	a0,72(sp)

00000000800222dc <.LBB205_1>:
    800222dc:	00001517          	auipc	a0,0x1
    800222e0:	d5650513          	addi	a0,a0,-682 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    800222e4:	e8aa                	sd	a0,80(sp)
    800222e6:	080c                	addi	a1,sp,16
    800222e8:	ecae                	sd	a1,88(sp)
    800222ea:	f0aa                	sd	a0,96(sp)

00000000800222ec <.LBB205_2>:
    800222ec:	00008517          	auipc	a0,0x8
    800222f0:	2fc50513          	addi	a0,a0,764 # 8002a5e8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.247>
    800222f4:	ec2a                	sd	a0,24(sp)
    800222f6:	4509                	li	a0,2
    800222f8:	f02a                	sd	a0,32(sp)
    800222fa:	f402                	sd	zero,40(sp)
    800222fc:	00ac                	addi	a1,sp,72
    800222fe:	fc2e                	sd	a1,56(sp)
    80022300:	e0aa                	sd	a0,64(sp)
    80022302:	0828                	addi	a0,sp,24
    80022304:	85b2                	mv	a1,a2
    80022306:	fffff097          	auipc	ra,0xfffff
    8002230a:	a30080e7          	jalr	-1488(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN4core5slice5index24slice_end_index_len_fail17h397499141087200aE:

0000000080022310 <_ZN4core5slice5index24slice_end_index_len_fail17h397499141087200aE>:
    80022310:	7159                	addi	sp,sp,-112
    80022312:	f486                	sd	ra,104(sp)
    80022314:	e42a                	sd	a0,8(sp)
    80022316:	e82e                	sd	a1,16(sp)
    80022318:	0028                	addi	a0,sp,8
    8002231a:	e4aa                	sd	a0,72(sp)

000000008002231c <.LBB206_1>:
    8002231c:	00001517          	auipc	a0,0x1
    80022320:	d1650513          	addi	a0,a0,-746 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    80022324:	e8aa                	sd	a0,80(sp)
    80022326:	080c                	addi	a1,sp,16
    80022328:	ecae                	sd	a1,88(sp)
    8002232a:	f0aa                	sd	a0,96(sp)

000000008002232c <.LBB206_2>:
    8002232c:	00008517          	auipc	a0,0x8
    80022330:	2dc50513          	addi	a0,a0,732 # 8002a608 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.249>
    80022334:	ec2a                	sd	a0,24(sp)
    80022336:	4509                	li	a0,2
    80022338:	f02a                	sd	a0,32(sp)
    8002233a:	f402                	sd	zero,40(sp)
    8002233c:	00ac                	addi	a1,sp,72
    8002233e:	fc2e                	sd	a1,56(sp)
    80022340:	e0aa                	sd	a0,64(sp)
    80022342:	0828                	addi	a0,sp,24
    80022344:	85b2                	mv	a1,a2
    80022346:	fffff097          	auipc	ra,0xfffff
    8002234a:	9f0080e7          	jalr	-1552(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN4core5slice5index22slice_index_order_fail17h17f07731262cfc7fE:

0000000080022350 <_ZN4core5slice5index22slice_index_order_fail17h17f07731262cfc7fE>:
    80022350:	7159                	addi	sp,sp,-112
    80022352:	f486                	sd	ra,104(sp)
    80022354:	e42a                	sd	a0,8(sp)
    80022356:	e82e                	sd	a1,16(sp)
    80022358:	0028                	addi	a0,sp,8
    8002235a:	e4aa                	sd	a0,72(sp)

000000008002235c <.LBB207_1>:
    8002235c:	00001517          	auipc	a0,0x1
    80022360:	cd650513          	addi	a0,a0,-810 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    80022364:	e8aa                	sd	a0,80(sp)
    80022366:	080c                	addi	a1,sp,16
    80022368:	ecae                	sd	a1,88(sp)
    8002236a:	f0aa                	sd	a0,96(sp)

000000008002236c <.LBB207_2>:
    8002236c:	00008517          	auipc	a0,0x8
    80022370:	2e450513          	addi	a0,a0,740 # 8002a650 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.252>
    80022374:	ec2a                	sd	a0,24(sp)
    80022376:	4509                	li	a0,2
    80022378:	f02a                	sd	a0,32(sp)
    8002237a:	f402                	sd	zero,40(sp)
    8002237c:	00ac                	addi	a1,sp,72
    8002237e:	fc2e                	sd	a1,56(sp)
    80022380:	e0aa                	sd	a0,64(sp)
    80022382:	0828                	addi	a0,sp,24
    80022384:	85b2                	mv	a1,a2
    80022386:	fffff097          	auipc	ra,0xfffff
    8002238a:	9b0080e7          	jalr	-1616(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN4core3str8converts9from_utf817h36a155da9055aca2E:

0000000080022390 <_ZN4core3str8converts9from_utf817h36a155da9055aca2E>:
    80022390:	711d                	addi	sp,sp,-96
    80022392:	eca2                	sd	s0,88(sp)
    80022394:	e8a6                	sd	s1,80(sp)
    80022396:	e4ca                	sd	s2,72(sp)
    80022398:	e0ce                	sd	s3,64(sp)
    8002239a:	fc52                	sd	s4,56(sp)
    8002239c:	f856                	sd	s5,48(sp)
    8002239e:	f45a                	sd	s6,40(sp)
    800223a0:	f05e                	sd	s7,32(sp)
    800223a2:	ec62                	sd	s8,24(sp)
    800223a4:	e866                	sd	s9,16(sp)
    800223a6:	e46a                	sd	s10,8(sp)
    800223a8:	ff160693          	addi	a3,a2,-15
    800223ac:	00d63733          	sltu	a4,a2,a3
    800223b0:	4d01                	li	s10,0
    800223b2:	e311                	bnez	a4,800223b6 <_ZN4core3str8converts9from_utf817h36a155da9055aca2E+0x26>
    800223b4:	8d36                	mv	s10,a3
    800223b6:	20060463          	beqz	a2,800225be <.LBB212_49+0x1f0>
    800223ba:	4681                	li	a3,0
    800223bc:	00758713          	addi	a4,a1,7
    800223c0:	9b61                	andi	a4,a4,-8
    800223c2:	40b70833          	sub	a6,a4,a1
    800223c6:	00180713          	addi	a4,a6,1
    800223ca:	00173c13          	seqz	s8,a4

00000000800223ce <.LBB212_49>:
    800223ce:	00008897          	auipc	a7,0x8
    800223d2:	2a288893          	addi	a7,a7,674 # 8002a670 <_ZN4core3str11validations15UTF8_CHAR_WIDTH17h8bfa167165964ee9E>
    800223d6:	4291                	li	t0,4
    800223d8:	0f400313          	li	t1,244
    800223dc:	08000393          	li	t2,128
    800223e0:	0f000e13          	li	t3,240
    800223e4:	03000e93          	li	t4,48
    800223e8:	4f09                	li	t5,2
    800223ea:	5ffd                	li	t6,-1
    800223ec:	0bf00913          	li	s2,191
    800223f0:	4b8d                	li	s7,3
    800223f2:	0ed00b13          	li	s6,237
    800223f6:	0e000993          	li	s3,224
    800223fa:	0a000a13          	li	s4,160
    800223fe:	4aad                	li	s5,11
    80022400:	7741                	lui	a4,0xffff0
    80022402:	1017071b          	addiw	a4,a4,257
    80022406:	0742                	slli	a4,a4,0x10
    80022408:	10170713          	addi	a4,a4,257 # ffffffffffff0101 <end+0xffffffff7ff80cbf>
    8002240c:	0742                	slli	a4,a4,0x10
    8002240e:	10170713          	addi	a4,a4,257
    80022412:	073e                	slli	a4,a4,0xf
    80022414:	08070413          	addi	s0,a4,128
    80022418:	a029                	j	80022422 <.LBB212_49+0x54>
    8002241a:	00178693          	addi	a3,a5,1 # 1c0001 <.Lline_table_start0+0x187cba>
    8002241e:	1ac6f063          	bgeu	a3,a2,800225be <.LBB212_49+0x1f0>
    80022422:	00d58733          	add	a4,a1,a3
    80022426:	00074783          	lbu	a5,0(a4)
    8002242a:	03879713          	slli	a4,a5,0x38
    8002242e:	43875493          	srai	s1,a4,0x38
    80022432:	0004cc63          	bltz	s1,8002244a <.LBB212_49+0x7c>
    80022436:	000c1663          	bnez	s8,80022442 <.LBB212_49+0x74>
    8002243a:	40d80733          	sub	a4,a6,a3
    8002243e:	8b1d                	andi	a4,a4,7
    80022440:	cf05                	beqz	a4,80022478 <.LBB212_49+0xaa>
    80022442:	0685                	addi	a3,a3,1
    80022444:	fcc6efe3          	bltu	a3,a2,80022422 <.LBB212_49+0x54>
    80022448:	aa9d                	j	800225be <.LBB212_49+0x1f0>
    8002244a:	01178733          	add	a4,a5,a7
    8002244e:	00074703          	lbu	a4,0(a4)
    80022452:	04570b63          	beq	a4,t0,800224a8 <.LBB212_49+0xda>
    80022456:	07770b63          	beq	a4,s7,800224cc <.LBB212_49+0xfe>
    8002245a:	17e71663          	bne	a4,t5,800225c6 <.LBB212_49+0x1f8>
    8002245e:	00168793          	addi	a5,a3,1
    80022462:	16c7f563          	bgeu	a5,a2,800225cc <.LBB212_49+0x1fe>
    80022466:	00f58733          	add	a4,a1,a5
    8002246a:	00074703          	lbu	a4,0(a4)
    8002246e:	0c077713          	andi	a4,a4,192
    80022472:	fa7704e3          	beq	a4,t2,8002241a <.LBB212_49+0x4c>
    80022476:	aa81                	j	800225c6 <.LBB212_49+0x1f8>
    80022478:	01a6fc63          	bgeu	a3,s10,80022490 <.LBB212_49+0xc2>
    8002247c:	00d58733          	add	a4,a1,a3
    80022480:	631c                	ld	a5,0(a4)
    80022482:	6718                	ld	a4,8(a4)
    80022484:	8f5d                	or	a4,a4,a5
    80022486:	8f61                	and	a4,a4,s0
    80022488:	e701                	bnez	a4,80022490 <.LBB212_49+0xc2>
    8002248a:	06c1                	addi	a3,a3,16
    8002248c:	ffa6e8e3          	bltu	a3,s10,8002247c <.LBB212_49+0xae>
    80022490:	fac6fae3          	bgeu	a3,a2,80022444 <.LBB212_49+0x76>
    80022494:	00d58733          	add	a4,a1,a3
    80022498:	00070703          	lb	a4,0(a4)
    8002249c:	fa0744e3          	bltz	a4,80022444 <.LBB212_49+0x76>
    800224a0:	0685                	addi	a3,a3,1
    800224a2:	fed619e3          	bne	a2,a3,80022494 <.LBB212_49+0xc6>
    800224a6:	aa21                	j	800225be <.LBB212_49+0x1f0>
    800224a8:	00168713          	addi	a4,a3,1
    800224ac:	12c77063          	bgeu	a4,a2,800225cc <.LBB212_49+0x1fe>
    800224b0:	972e                	add	a4,a4,a1
    800224b2:	00074703          	lbu	a4,0(a4)
    800224b6:	02678b63          	beq	a5,t1,800224ec <.LBB212_49+0x11e>
    800224ba:	05c79363          	bne	a5,t3,80022500 <.LBB212_49+0x132>
    800224be:	07070713          	addi	a4,a4,112
    800224c2:	0ff77713          	zext.b	a4,a4
    800224c6:	05d76d63          	bltu	a4,t4,80022520 <.LBB212_49+0x152>
    800224ca:	a8f5                	j	800225c6 <.LBB212_49+0x1f8>
    800224cc:	00168713          	addi	a4,a3,1
    800224d0:	0ec77e63          	bgeu	a4,a2,800225cc <.LBB212_49+0x1fe>
    800224d4:	972e                	add	a4,a4,a1
    800224d6:	00074c83          	lbu	s9,0(a4)
    800224da:	07678c63          	beq	a5,s6,80022552 <.LBB212_49+0x184>
    800224de:	09379463          	bne	a5,s3,80022566 <.LBB212_49+0x198>
    800224e2:	0e0cf713          	andi	a4,s9,224
    800224e6:	0b470d63          	beq	a4,s4,800225a0 <.LBB212_49+0x1d2>
    800224ea:	a8f1                	j	800225c6 <.LBB212_49+0x1f8>
    800224ec:	03871793          	slli	a5,a4,0x38
    800224f0:	97e1                	srai	a5,a5,0x38
    800224f2:	0007a793          	slti	a5,a5,0
    800224f6:	09073713          	sltiu	a4,a4,144
    800224fa:	8f7d                	and	a4,a4,a5
    800224fc:	e315                	bnez	a4,80022520 <.LBB212_49+0x152>
    800224fe:	a0e1                	j	800225c6 <.LBB212_49+0x1f8>
    80022500:	00f48793          	addi	a5,s1,15
    80022504:	0ff7f793          	zext.b	a5,a5
    80022508:	00ff37b3          	sltu	a5,t5,a5
    8002250c:	03871493          	slli	s1,a4,0x38
    80022510:	94e1                	srai	s1,s1,0x38
    80022512:	009fa4b3          	slt	s1,t6,s1
    80022516:	8fc5                	or	a5,a5,s1
    80022518:	00e93733          	sltu	a4,s2,a4
    8002251c:	8f5d                	or	a4,a4,a5
    8002251e:	e745                	bnez	a4,800225c6 <.LBB212_49+0x1f8>
    80022520:	00268713          	addi	a4,a3,2
    80022524:	0ac77463          	bgeu	a4,a2,800225cc <.LBB212_49+0x1fe>
    80022528:	972e                	add	a4,a4,a1
    8002252a:	00074703          	lbu	a4,0(a4)
    8002252e:	0c077713          	andi	a4,a4,192
    80022532:	4485                	li	s1,1
    80022534:	0c771163          	bne	a4,t2,800225f6 <.LBB212_49+0x228>
    80022538:	00368793          	addi	a5,a3,3
    8002253c:	08c7f863          	bgeu	a5,a2,800225cc <.LBB212_49+0x1fe>
    80022540:	00f58733          	add	a4,a1,a5
    80022544:	00074703          	lbu	a4,0(a4)
    80022548:	0c077713          	andi	a4,a4,192
    8002254c:	ec7707e3          	beq	a4,t2,8002241a <.LBB212_49+0x4c>
    80022550:	a06d                	j	800225fa <.LBB212_49+0x22c>
    80022552:	038c9713          	slli	a4,s9,0x38
    80022556:	9761                	srai	a4,a4,0x38
    80022558:	00072713          	slti	a4,a4,0
    8002255c:	0a0cb793          	sltiu	a5,s9,160
    80022560:	8f7d                	and	a4,a4,a5
    80022562:	ef1d                	bnez	a4,800225a0 <.LBB212_49+0x1d2>
    80022564:	a08d                	j	800225c6 <.LBB212_49+0x1f8>
    80022566:	01f48713          	addi	a4,s1,31
    8002256a:	0ff77793          	zext.b	a5,a4
    8002256e:	038c9713          	slli	a4,s9,0x38
    80022572:	00faea63          	bltu	s5,a5,80022586 <.LBB212_49+0x1b8>
    80022576:	9761                	srai	a4,a4,0x38
    80022578:	00072713          	slti	a4,a4,0
    8002257c:	0c0cb793          	sltiu	a5,s9,192
    80022580:	8f7d                	and	a4,a4,a5
    80022582:	ef19                	bnez	a4,800225a0 <.LBB212_49+0x1d2>
    80022584:	a089                	j	800225c6 <.LBB212_49+0x1f8>
    80022586:	ffe4f793          	andi	a5,s1,-2
    8002258a:	07c9                	addi	a5,a5,18
    8002258c:	00f037b3          	snez	a5,a5
    80022590:	9761                	srai	a4,a4,0x38
    80022592:	00efa733          	slt	a4,t6,a4
    80022596:	8f5d                	or	a4,a4,a5
    80022598:	019937b3          	sltu	a5,s2,s9
    8002259c:	8f5d                	or	a4,a4,a5
    8002259e:	e705                	bnez	a4,800225c6 <.LBB212_49+0x1f8>
    800225a0:	00268793          	addi	a5,a3,2
    800225a4:	02c7f463          	bgeu	a5,a2,800225cc <.LBB212_49+0x1fe>
    800225a8:	00f58733          	add	a4,a1,a5
    800225ac:	00074703          	lbu	a4,0(a4)
    800225b0:	0c077713          	andi	a4,a4,192
    800225b4:	e67703e3          	beq	a4,t2,8002241a <.LBB212_49+0x4c>
    800225b8:	4485                	li	s1,1
    800225ba:	4589                	li	a1,2
    800225bc:	a811                	j	800225d0 <.LBB212_49+0x202>
    800225be:	4681                	li	a3,0
    800225c0:	e50c                	sd	a1,8(a0)
    800225c2:	e910                	sd	a2,16(a0)
    800225c4:	a819                	j	800225da <.LBB212_49+0x20c>
    800225c6:	4585                	li	a1,1
    800225c8:	4485                	li	s1,1
    800225ca:	a019                	j	800225d0 <.LBB212_49+0x202>
    800225cc:	4581                	li	a1,0
    800225ce:	4481                	li	s1,0
    800225d0:	05a2                	slli	a1,a1,0x8
    800225d2:	8dc5                	or	a1,a1,s1
    800225d4:	e514                	sd	a3,8(a0)
    800225d6:	e90c                	sd	a1,16(a0)
    800225d8:	4685                	li	a3,1
    800225da:	e114                	sd	a3,0(a0)
    800225dc:	6d22                	ld	s10,8(sp)
    800225de:	6cc2                	ld	s9,16(sp)
    800225e0:	6c62                	ld	s8,24(sp)
    800225e2:	7b82                	ld	s7,32(sp)
    800225e4:	7b22                	ld	s6,40(sp)
    800225e6:	7ac2                	ld	s5,48(sp)
    800225e8:	7a62                	ld	s4,56(sp)
    800225ea:	6986                	ld	s3,64(sp)
    800225ec:	6926                	ld	s2,72(sp)
    800225ee:	64c6                	ld	s1,80(sp)
    800225f0:	6466                	ld	s0,88(sp)
    800225f2:	6125                	addi	sp,sp,96
    800225f4:	8082                	ret
    800225f6:	4589                	li	a1,2
    800225f8:	bfe1                	j	800225d0 <.LBB212_49+0x202>
    800225fa:	458d                	li	a1,3
    800225fc:	bfd1                	j	800225d0 <.LBB212_49+0x202>

Disassembly of section .text._ZN4core3str16slice_error_fail17he9562343589499f6E:

00000000800225fe <_ZN4core3str16slice_error_fail17he9562343589499f6E>:
    800225fe:	7115                	addi	sp,sp,-224
    80022600:	ed86                	sd	ra,216(sp)
    80022602:	e432                	sd	a2,8(sp)
    80022604:	e836                	sd	a3,16(sp)
    80022606:	10100793          	li	a5,257
    8002260a:	4885                	li	a7,1
    8002260c:	882e                	mv	a6,a1
    8002260e:	04f5e263          	bltu	a1,a5,80022652 <_ZN4core3str16slice_error_fail17he9562343589499f6E+0x54>
    80022612:	4381                	li	t2,0
    80022614:	f0158893          	addi	a7,a1,-255
    80022618:	10050293          	addi	t0,a0,256
    8002261c:	fbf00313          	li	t1,-65
    80022620:	10038813          	addi	a6,t2,256
    80022624:	00b87863          	bgeu	a6,a1,80022634 <_ZN4core3str16slice_error_fail17he9562343589499f6E+0x36>
    80022628:	007287b3          	add	a5,t0,t2
    8002262c:	00078783          	lb	a5,0(a5)
    80022630:	02f34b63          	blt	t1,a5,80022666 <.LBB228_49+0xc>
    80022634:	0ff38793          	addi	a5,t2,255
    80022638:	00f03833          	snez	a6,a5
    8002263c:	0078c7b3          	xor	a5,a7,t2
    80022640:	00f037b3          	snez	a5,a5
    80022644:	00f877b3          	and	a5,a6,a5
    80022648:	13fd                	addi	t2,t2,-1
    8002264a:	fbf9                	bnez	a5,80022620 <_ZN4core3str16slice_error_fail17he9562343589499f6E+0x22>
    8002264c:	4881                	li	a7,0
    8002264e:	10038813          	addi	a6,t2,256
    80022652:	ec2a                	sd	a0,24(sp)
    80022654:	f042                	sd	a6,32(sp)
    80022656:	00089d63          	bnez	a7,80022670 <.LBB228_49+0x16>

000000008002265a <.LBB228_49>:
    8002265a:	00008797          	auipc	a5,0x8
    8002265e:	11678793          	addi	a5,a5,278 # 8002a770 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.310>
    80022662:	4815                	li	a6,5
    80022664:	a819                	j	8002267a <.LBB228_50+0x8>
    80022666:	4881                	li	a7,0
    80022668:	ec2a                	sd	a0,24(sp)
    8002266a:	f042                	sd	a6,32(sp)
    8002266c:	fe0887e3          	beqz	a7,8002265a <.LBB228_49>
    80022670:	4801                	li	a6,0

0000000080022672 <.LBB228_50>:
    80022672:	00008797          	auipc	a5,0x8
    80022676:	bbe78793          	addi	a5,a5,-1090 # 8002a230 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.33>
    8002267a:	f43e                	sd	a5,40(sp)
    8002267c:	00c5b8b3          	sltu	a7,a1,a2
    80022680:	0018c293          	xori	t0,a7,1
    80022684:	00d5b7b3          	sltu	a5,a1,a3
    80022688:	0017c793          	xori	a5,a5,1
    8002268c:	00f2f7b3          	and	a5,t0,a5
    80022690:	f842                	sd	a6,48(sp)
    80022692:	ef8d                	bnez	a5,800226cc <.LBB228_53+0xe>
    80022694:	00089363          	bnez	a7,8002269a <.LBB228_50+0x28>
    80022698:	8636                	mv	a2,a3
    8002269a:	e4b2                	sd	a2,72(sp)
    8002269c:	00a8                	addi	a0,sp,72
    8002269e:	e52a                	sd	a0,136(sp)

00000000800226a0 <.LBB228_51>:
    800226a0:	00001517          	auipc	a0,0x1
    800226a4:	99250513          	addi	a0,a0,-1646 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    800226a8:	e92a                	sd	a0,144(sp)
    800226aa:	0828                	addi	a0,sp,24
    800226ac:	ed2a                	sd	a0,152(sp)

00000000800226ae <.LBB228_52>:
    800226ae:	00001517          	auipc	a0,0x1
    800226b2:	dee50513          	addi	a0,a0,-530 # 8002349c <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E>
    800226b6:	f12a                	sd	a0,160(sp)
    800226b8:	102c                	addi	a1,sp,40
    800226ba:	f52e                	sd	a1,168(sp)
    800226bc:	f92a                	sd	a0,176(sp)

00000000800226be <.LBB228_53>:
    800226be:	00008517          	auipc	a0,0x8
    800226c2:	0da50513          	addi	a0,a0,218 # 8002a798 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.313>
    800226c6:	ecaa                	sd	a0,88(sp)
    800226c8:	450d                	li	a0,3
    800226ca:	aadd                	j	800228c0 <.LBB228_62+0xc>
    800226cc:	02c6fd63          	bgeu	a3,a2,80022706 <.LBB228_56+0xe>
    800226d0:	0028                	addi	a0,sp,8
    800226d2:	e52a                	sd	a0,136(sp)

00000000800226d4 <.LBB228_54>:
    800226d4:	00001517          	auipc	a0,0x1
    800226d8:	95e50513          	addi	a0,a0,-1698 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    800226dc:	e92a                	sd	a0,144(sp)
    800226de:	080c                	addi	a1,sp,16
    800226e0:	ed2e                	sd	a1,152(sp)
    800226e2:	f12a                	sd	a0,160(sp)
    800226e4:	0828                	addi	a0,sp,24
    800226e6:	f52a                	sd	a0,168(sp)

00000000800226e8 <.LBB228_55>:
    800226e8:	00001517          	auipc	a0,0x1
    800226ec:	db450513          	addi	a0,a0,-588 # 8002349c <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E>
    800226f0:	f92a                	sd	a0,176(sp)
    800226f2:	102c                	addi	a1,sp,40
    800226f4:	fd2e                	sd	a1,184(sp)
    800226f6:	e1aa                	sd	a0,192(sp)

00000000800226f8 <.LBB228_56>:
    800226f8:	00008517          	auipc	a0,0x8
    800226fc:	0e050513          	addi	a0,a0,224 # 8002a7d8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.317>
    80022700:	ecaa                	sd	a0,88(sp)
    80022702:	4511                	li	a0,4
    80022704:	aa75                	j	800228c0 <.LBB228_62+0xc>
    80022706:	00163813          	seqz	a6,a2
    8002270a:	00c5c7b3          	xor	a5,a1,a2
    8002270e:	0017b793          	seqz	a5,a5
    80022712:	00f867b3          	or	a5,a6,a5
    80022716:	c399                	beqz	a5,8002271c <.LBB228_56+0x24>
    80022718:	8636                	mv	a2,a3
    8002271a:	a819                	j	80022730 <.LBB228_56+0x38>
    8002271c:	00b67a63          	bgeu	a2,a1,80022730 <.LBB228_56+0x38>
    80022720:	00c507b3          	add	a5,a0,a2
    80022724:	00078803          	lb	a6,0(a5)
    80022728:	fc000793          	li	a5,-64
    8002272c:	fef856e3          	bge	a6,a5,80022718 <.LBB228_56+0x20>
    80022730:	00163693          	seqz	a3,a2
    80022734:	00b647b3          	xor	a5,a2,a1
    80022738:	0017b793          	seqz	a5,a5
    8002273c:	8edd                	or	a3,a3,a5
    8002273e:	fc32                	sd	a2,56(sp)
    80022740:	ca81                	beqz	a3,80022750 <.LBB228_56+0x58>
    80022742:	87b2                	mv	a5,a2
    80022744:	04410313          	addi	t1,sp,68
    80022748:	863e                	mv	a2,a5
    8002274a:	02b60f63          	beq	a2,a1,80022788 <.LBB228_57>
    8002274e:	a8a9                	j	800227a8 <.LBB228_57+0x20>
    80022750:	00158893          	addi	a7,a1,1
    80022754:	fc000813          	li	a6,-64
    80022758:	00b67863          	bgeu	a2,a1,80022768 <.LBB228_56+0x70>
    8002275c:	00c507b3          	add	a5,a0,a2
    80022760:	00078783          	lb	a5,0(a5)
    80022764:	0307de63          	bge	a5,a6,800227a0 <.LBB228_57+0x18>
    80022768:	fff60793          	addi	a5,a2,-1
    8002276c:	0017b693          	seqz	a3,a5
    80022770:	00c8c633          	xor	a2,a7,a2
    80022774:	00163613          	seqz	a2,a2
    80022778:	8ed1                	or	a3,a3,a2
    8002277a:	863e                	mv	a2,a5
    8002277c:	def1                	beqz	a3,80022758 <.LBB228_56+0x60>
    8002277e:	04410313          	addi	t1,sp,68
    80022782:	863e                	mv	a2,a5
    80022784:	02b61263          	bne	a2,a1,800227a8 <.LBB228_57+0x20>

0000000080022788 <.LBB228_57>:
    80022788:	00008517          	auipc	a0,0x8
    8002278c:	ac050513          	addi	a0,a0,-1344 # 8002a248 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.175>
    80022790:	02b00593          	li	a1,43
    80022794:	863a                	mv	a2,a4
    80022796:	ffffe097          	auipc	ra,0xffffe
    8002279a:	534080e7          	jalr	1332(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
    8002279e:	0000                	unimp
    800227a0:	04410313          	addi	t1,sp,68
    800227a4:	feb602e3          	beq	a2,a1,80022788 <.LBB228_57>
    800227a8:	00c506b3          	add	a3,a0,a2
    800227ac:	00068783          	lb	a5,0(a3)
    800227b0:	0ff7f393          	zext.b	t2,a5
    800227b4:	0007c663          	bltz	a5,800227c0 <.LBB228_57+0x38>
    800227b8:	c29e                	sw	t2,68(sp)
    800227ba:	00a8                	addi	a0,sp,72
    800227bc:	4785                	li	a5,1
    800227be:	a855                	j	80022872 <.LBB228_57+0xea>
    800227c0:	952e                	add	a0,a0,a1
    800227c2:	00168593          	addi	a1,a3,1
    800227c6:	00a59f63          	bne	a1,a0,800227e4 <.LBB228_57+0x5c>
    800227ca:	4881                	li	a7,0
    800227cc:	85aa                	mv	a1,a0
    800227ce:	0e000693          	li	a3,224
    800227d2:	01f3f813          	andi	a6,t2,31
    800227d6:	02d3f363          	bgeu	t2,a3,800227fc <.LBB228_57+0x74>
    800227da:	00681513          	slli	a0,a6,0x6
    800227de:	011565b3          	or	a1,a0,a7
    800227e2:	a0bd                	j	80022850 <.LBB228_57+0xc8>
    800227e4:	0016c783          	lbu	a5,1(a3)
    800227e8:	00268593          	addi	a1,a3,2
    800227ec:	03f7f893          	andi	a7,a5,63
    800227f0:	0e000693          	li	a3,224
    800227f4:	01f3f813          	andi	a6,t2,31
    800227f8:	fed3e1e3          	bltu	t2,a3,800227da <.LBB228_57+0x52>
    800227fc:	00a59563          	bne	a1,a0,80022806 <.LBB228_57+0x7e>
    80022800:	4581                	li	a1,0
    80022802:	82aa                	mv	t0,a0
    80022804:	a039                	j	80022812 <.LBB228_57+0x8a>
    80022806:	0005c683          	lbu	a3,0(a1)
    8002280a:	00158293          	addi	t0,a1,1
    8002280e:	03f6f593          	andi	a1,a3,63
    80022812:	00689693          	slli	a3,a7,0x6
    80022816:	0f000793          	li	a5,240
    8002281a:	8dd5                	or	a1,a1,a3
    8002281c:	00f3e663          	bltu	t2,a5,80022828 <.LBB228_57+0xa0>
    80022820:	00a29863          	bne	t0,a0,80022830 <.LBB228_57+0xa8>
    80022824:	4501                	li	a0,0
    80022826:	a809                	j	80022838 <.LBB228_57+0xb0>
    80022828:	00c81513          	slli	a0,a6,0xc
    8002282c:	8dc9                	or	a1,a1,a0
    8002282e:	a00d                	j	80022850 <.LBB228_57+0xc8>
    80022830:	0002c503          	lbu	a0,0(t0) # 110000 <.Lline_table_start0+0xd7cb9>
    80022834:	03f57513          	andi	a0,a0,63
    80022838:	01281693          	slli	a3,a6,0x12
    8002283c:	001c07b7          	lui	a5,0x1c0
    80022840:	8efd                	and	a3,a3,a5
    80022842:	059a                	slli	a1,a1,0x6
    80022844:	8dd5                	or	a1,a1,a3
    80022846:	8dc9                	or	a1,a1,a0
    80022848:	00110537          	lui	a0,0x110
    8002284c:	f2a58ee3          	beq	a1,a0,80022788 <.LBB228_57>
    80022850:	c2ae                	sw	a1,68(sp)
    80022852:	00a8                	addi	a0,sp,72
    80022854:	08000693          	li	a3,128
    80022858:	4785                	li	a5,1
    8002285a:	00d5ec63          	bltu	a1,a3,80022872 <.LBB228_57+0xea>
    8002285e:	00b5d693          	srli	a3,a1,0xb
    80022862:	4789                	li	a5,2
    80022864:	c699                	beqz	a3,80022872 <.LBB228_57+0xea>
    80022866:	81c1                	srli	a1,a1,0x10
    80022868:	0015b593          	seqz	a1,a1
    8002286c:	4691                	li	a3,4
    8002286e:	40b687b3          	sub	a5,a3,a1
    80022872:	00c785b3          	add	a1,a5,a2
    80022876:	e4b2                	sd	a2,72(sp)
    80022878:	e8ae                	sd	a1,80(sp)
    8002287a:	182c                	addi	a1,sp,56
    8002287c:	e52e                	sd	a1,136(sp)

000000008002287e <.LBB228_58>:
    8002287e:	00000597          	auipc	a1,0x0
    80022882:	7b458593          	addi	a1,a1,1972 # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    80022886:	e92e                	sd	a1,144(sp)
    80022888:	ed1a                	sd	t1,152(sp)

000000008002288a <.LBB228_59>:
    8002288a:	fffff597          	auipc	a1,0xfffff
    8002288e:	6ca58593          	addi	a1,a1,1738 # 80021f54 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17hebe9382637ae1ba8E>
    80022892:	f12e                	sd	a1,160(sp)
    80022894:	f52a                	sd	a0,168(sp)

0000000080022896 <.LBB228_60>:
    80022896:	ffffe517          	auipc	a0,0xffffe
    8002289a:	23250513          	addi	a0,a0,562 # 80020ac8 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c19ef341f8f601cE>
    8002289e:	f92a                	sd	a0,176(sp)
    800228a0:	0828                	addi	a0,sp,24
    800228a2:	fd2a                	sd	a0,184(sp)

00000000800228a4 <.LBB228_61>:
    800228a4:	00001517          	auipc	a0,0x1
    800228a8:	bf850513          	addi	a0,a0,-1032 # 8002349c <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E>
    800228ac:	e1aa                	sd	a0,192(sp)
    800228ae:	102c                	addi	a1,sp,40
    800228b0:	e5ae                	sd	a1,200(sp)
    800228b2:	e9aa                	sd	a0,208(sp)

00000000800228b4 <.LBB228_62>:
    800228b4:	00008517          	auipc	a0,0x8
    800228b8:	f9450513          	addi	a0,a0,-108 # 8002a848 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.321>
    800228bc:	ecaa                	sd	a0,88(sp)
    800228be:	4515                	li	a0,5
    800228c0:	f0aa                	sd	a0,96(sp)
    800228c2:	f482                	sd	zero,104(sp)
    800228c4:	012c                	addi	a1,sp,136
    800228c6:	fcae                	sd	a1,120(sp)
    800228c8:	e12a                	sd	a0,128(sp)
    800228ca:	08a8                	addi	a0,sp,88
    800228cc:	85ba                	mv	a1,a4
    800228ce:	ffffe097          	auipc	ra,0xffffe
    800228d2:	468080e7          	jalr	1128(ra) # 80020d36 <_ZN4core9panicking9panic_fmt17ha4e041b5d1f17023E>
	...

Disassembly of section .text._ZN4core7unicode9printable12is_printable17hd298c127375d0caaE:

00000000800228d8 <_ZN4core7unicode9printable12is_printable17hd298c127375d0caaE>:
    800228d8:	1141                	addi	sp,sp,-16
    800228da:	e406                	sd	ra,8(sp)
    800228dc:	0105559b          	srliw	a1,a0,0x10
    800228e0:	e1f1                	bnez	a1,800229a4 <.LBB244_43+0x4c>
    800228e2:	4581                	li	a1,0
    800228e4:	6641                	lui	a2,0x10
    800228e6:	f006061b          	addiw	a2,a2,-256
    800228ea:	8e69                	and	a2,a2,a0
    800228ec:	00865313          	srli	t1,a2,0x8

00000000800228f0 <.LBB244_41>:
    800228f0:	00008717          	auipc	a4,0x8
    800228f4:	00070713          	mv	a4,a4
    800228f8:	12300813          	li	a6,291

00000000800228fc <.LBB244_42>:
    800228fc:	00008897          	auipc	a7,0x8
    80022900:	04688893          	addi	a7,a7,70 # 8002a942 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.345>
    80022904:	05270293          	addi	t0,a4,82 # 8002a942 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.345>
    80022908:	0ff57793          	zext.b	a5,a0
    8002290c:	a811                	j	80022920 <.LBB244_42+0x24>
    8002290e:	00d335b3          	sltu	a1,t1,a3
    80022912:	00574633          	xor	a2,a4,t0
    80022916:	00163613          	seqz	a2,a2
    8002291a:	8e4d                	or	a2,a2,a1
    8002291c:	859e                	mv	a1,t2
    8002291e:	ea15                	bnez	a2,80022952 <.LBB244_42+0x56>
    80022920:	00074683          	lbu	a3,0(a4)
    80022924:	00174603          	lbu	a2,1(a4)
    80022928:	0709                	addi	a4,a4,2
    8002292a:	00c583b3          	add	t2,a1,a2
    8002292e:	fe6690e3          	bne	a3,t1,8002290e <.LBB244_42+0x12>
    80022932:	1eb3e063          	bltu	t2,a1,80022b12 <.LBB244_47>
    80022936:	1f03f963          	bgeu	t2,a6,80022b28 <.LBB244_48>
    8002293a:	95c6                	add	a1,a1,a7
    8002293c:	ca01                	beqz	a2,8002294c <.LBB244_42+0x50>
    8002293e:	0005c683          	lbu	a3,0(a1)
    80022942:	0585                	addi	a1,a1,1
    80022944:	167d                	addi	a2,a2,-1
    80022946:	fef69be3          	bne	a3,a5,8002293c <.LBB244_42+0x40>
    8002294a:	a26d                	j	80022af4 <.LBB244_46+0xd4>
    8002294c:	859e                	mv	a1,t2
    8002294e:	fc5719e3          	bne	a4,t0,80022920 <.LBB244_42+0x24>
    80022952:	65c1                	lui	a1,0x10
    80022954:	35fd                	addiw	a1,a1,-1
    80022956:	8de9                	and	a1,a1,a0

0000000080022958 <.LBB244_43>:
    80022958:	00008717          	auipc	a4,0x8
    8002295c:	10c70713          	addi	a4,a4,268 # 8002aa64 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.346>
    80022960:	4505                	li	a0,1
    80022962:	587d                	li	a6,-1
    80022964:	13570693          	addi	a3,a4,309
    80022968:	00070783          	lb	a5,0(a4)
    8002296c:	00170613          	addi	a2,a4,1
    80022970:	00f85963          	bge	a6,a5,80022982 <.LBB244_43+0x2a>
    80022974:	0ff7f793          	zext.b	a5,a5
    80022978:	8732                	mv	a4,a2
    8002297a:	9d9d                	subw	a1,a1,a5
    8002297c:	0005df63          	bgez	a1,8002299a <.LBB244_43+0x42>
    80022980:	aa9d                	j	80022af6 <.LBB244_46+0xd6>
    80022982:	1cd60663          	beq	a2,a3,80022b4e <.LBB244_50>
    80022986:	00174603          	lbu	a2,1(a4)
    8002298a:	07f7f793          	andi	a5,a5,127
    8002298e:	07a2                	slli	a5,a5,0x8
    80022990:	0709                	addi	a4,a4,2
    80022992:	8fd1                	or	a5,a5,a2
    80022994:	9d9d                	subw	a1,a1,a5
    80022996:	1605c063          	bltz	a1,80022af6 <.LBB244_46+0xd6>
    8002299a:	00154513          	xori	a0,a0,1
    8002299e:	fcd715e3          	bne	a4,a3,80022968 <.LBB244_43+0x10>
    800229a2:	aa91                	j	80022af6 <.LBB244_46+0xd6>
    800229a4:	0115559b          	srliw	a1,a0,0x11
    800229a8:	e1f1                	bnez	a1,80022a6c <.LBB244_46+0x4c>
    800229aa:	4581                	li	a1,0
    800229ac:	6641                	lui	a2,0x10
    800229ae:	f006061b          	addiw	a2,a2,-256
    800229b2:	8e69                	and	a2,a2,a0
    800229b4:	00865313          	srli	t1,a2,0x8

00000000800229b8 <.LBB244_44>:
    800229b8:	00008717          	auipc	a4,0x8
    800229bc:	1e170713          	addi	a4,a4,481 # 8002ab99 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.347>
    800229c0:	0b000813          	li	a6,176

00000000800229c4 <.LBB244_45>:
    800229c4:	00008897          	auipc	a7,0x8
    800229c8:	22188893          	addi	a7,a7,545 # 8002abe5 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.348>
    800229cc:	04c70293          	addi	t0,a4,76
    800229d0:	0ff57793          	zext.b	a5,a0
    800229d4:	a811                	j	800229e8 <.LBB244_45+0x24>
    800229d6:	00d335b3          	sltu	a1,t1,a3
    800229da:	00574633          	xor	a2,a4,t0
    800229de:	00163613          	seqz	a2,a2
    800229e2:	8e4d                	or	a2,a2,a1
    800229e4:	859e                	mv	a1,t2
    800229e6:	ea15                	bnez	a2,80022a1a <.LBB244_45+0x56>
    800229e8:	00074683          	lbu	a3,0(a4)
    800229ec:	00174603          	lbu	a2,1(a4)
    800229f0:	0709                	addi	a4,a4,2
    800229f2:	00c583b3          	add	t2,a1,a2
    800229f6:	fe6690e3          	bne	a3,t1,800229d6 <.LBB244_45+0x12>
    800229fa:	10b3ec63          	bltu	t2,a1,80022b12 <.LBB244_47>
    800229fe:	1303fc63          	bgeu	t2,a6,80022b36 <.LBB244_49>
    80022a02:	95c6                	add	a1,a1,a7
    80022a04:	ca01                	beqz	a2,80022a14 <.LBB244_45+0x50>
    80022a06:	0005c683          	lbu	a3,0(a1) # 10000 <.Lline_table_start0+0x811>
    80022a0a:	0585                	addi	a1,a1,1
    80022a0c:	167d                	addi	a2,a2,-1
    80022a0e:	fef69be3          	bne	a3,a5,80022a04 <.LBB244_45+0x40>
    80022a12:	a0cd                	j	80022af4 <.LBB244_46+0xd4>
    80022a14:	859e                	mv	a1,t2
    80022a16:	fc5719e3          	bne	a4,t0,800229e8 <.LBB244_45+0x24>
    80022a1a:	65c1                	lui	a1,0x10
    80022a1c:	35fd                	addiw	a1,a1,-1
    80022a1e:	8de9                	and	a1,a1,a0

0000000080022a20 <.LBB244_46>:
    80022a20:	00008717          	auipc	a4,0x8
    80022a24:	27470713          	addi	a4,a4,628 # 8002ac94 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.349>
    80022a28:	4505                	li	a0,1
    80022a2a:	587d                	li	a6,-1
    80022a2c:	1a370693          	addi	a3,a4,419
    80022a30:	00070783          	lb	a5,0(a4)
    80022a34:	00170613          	addi	a2,a4,1
    80022a38:	00f85963          	bge	a6,a5,80022a4a <.LBB244_46+0x2a>
    80022a3c:	0ff7f793          	zext.b	a5,a5
    80022a40:	8732                	mv	a4,a2
    80022a42:	9d9d                	subw	a1,a1,a5
    80022a44:	0005df63          	bgez	a1,80022a62 <.LBB244_46+0x42>
    80022a48:	a07d                	j	80022af6 <.LBB244_46+0xd6>
    80022a4a:	10d60263          	beq	a2,a3,80022b4e <.LBB244_50>
    80022a4e:	00174603          	lbu	a2,1(a4)
    80022a52:	07f7f793          	andi	a5,a5,127
    80022a56:	07a2                	slli	a5,a5,0x8
    80022a58:	0709                	addi	a4,a4,2
    80022a5a:	8fd1                	or	a5,a5,a2
    80022a5c:	9d9d                	subw	a1,a1,a5
    80022a5e:	0805cc63          	bltz	a1,80022af6 <.LBB244_46+0xd6>
    80022a62:	00154513          	xori	a0,a0,1
    80022a66:	fcd715e3          	bne	a4,a3,80022a30 <.LBB244_46+0x10>
    80022a6a:	a071                	j	80022af6 <.LBB244_46+0xd6>
    80022a6c:	fffd65b7          	lui	a1,0xfffd6
    80022a70:	9225859b          	addiw	a1,a1,-1758
    80022a74:	9da9                	addw	a1,a1,a0
    80022a76:	0225b593          	sltiu	a1,a1,34
    80022a7a:	fffd5637          	lui	a2,0xfffd5
    80022a7e:	8cb6061b          	addiw	a2,a2,-1845
    80022a82:	9e29                	addw	a2,a2,a0
    80022a84:	00b63613          	sltiu	a2,a2,11
    80022a88:	8dd1                	or	a1,a1,a2
    80022a8a:	00200637          	lui	a2,0x200
    80022a8e:	3679                	addiw	a2,a2,-2
    80022a90:	8e69                	and	a2,a2,a0
    80022a92:	0002c6b7          	lui	a3,0x2c
    80022a96:	81e6869b          	addiw	a3,a3,-2018
    80022a9a:	8e35                	xor	a2,a2,a3
    80022a9c:	00163613          	seqz	a2,a2
    80022aa0:	8dd1                	or	a1,a1,a2
    80022aa2:	fffd3637          	lui	a2,0xfffd3
    80022aa6:	15e6061b          	addiw	a2,a2,350
    80022aaa:	9e29                	addw	a2,a2,a0
    80022aac:	00e63613          	sltiu	a2,a2,14
    80022ab0:	8dd1                	or	a1,a1,a2
    80022ab2:	fffd1637          	lui	a2,0xfffd1
    80022ab6:	41f6061b          	addiw	a2,a2,1055
    80022aba:	9e29                	addw	a2,a2,a0
    80022abc:	6685                	lui	a3,0x1
    80022abe:	c1f6869b          	addiw	a3,a3,-993
    80022ac2:	00d63633          	sltu	a2,a2,a3
    80022ac6:	8dd1                	or	a1,a1,a2
    80022ac8:	fffd0637          	lui	a2,0xfffd0
    80022acc:	5e26061b          	addiw	a2,a2,1506
    80022ad0:	9e29                	addw	a2,a2,a0
    80022ad2:	5e263613          	sltiu	a2,a2,1506
    80022ad6:	8dd1                	or	a1,a1,a2
    80022ad8:	fffcf637          	lui	a2,0xfffcf
    80022adc:	cb56061b          	addiw	a2,a2,-843
    80022ae0:	9e29                	addw	a2,a2,a0
    80022ae2:	000af6b7          	lui	a3,0xaf
    80022ae6:	db56869b          	addiw	a3,a3,-587
    80022aea:	00d63633          	sltu	a2,a2,a3
    80022aee:	8dd1                	or	a1,a1,a2
    80022af0:	8985                	andi	a1,a1,1
    80022af2:	c591                	beqz	a1,80022afe <.LBB244_46+0xde>
    80022af4:	4501                	li	a0,0
    80022af6:	8905                	andi	a0,a0,1
    80022af8:	60a2                	ld	ra,8(sp)
    80022afa:	0141                	addi	sp,sp,16
    80022afc:	8082                	ret
    80022afe:	2501                	sext.w	a0,a0
    80022b00:	000e05b7          	lui	a1,0xe0
    80022b04:	1f05859b          	addiw	a1,a1,496
    80022b08:	00b53533          	sltu	a0,a0,a1
    80022b0c:	60a2                	ld	ra,8(sp)
    80022b0e:	0141                	addi	sp,sp,16
    80022b10:	8082                	ret

0000000080022b12 <.LBB244_47>:
    80022b12:	00008617          	auipc	a2,0x8
    80022b16:	dae60613          	addi	a2,a2,-594 # 8002a8c0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.342>
    80022b1a:	852e                	mv	a0,a1
    80022b1c:	859e                	mv	a1,t2
    80022b1e:	00000097          	auipc	ra,0x0
    80022b22:	832080e7          	jalr	-1998(ra) # 80022350 <_ZN4core5slice5index22slice_index_order_fail17h17f07731262cfc7fE>
	...

0000000080022b28 <.LBB244_48>:
    80022b28:	00008617          	auipc	a2,0x8
    80022b2c:	d9860613          	addi	a2,a2,-616 # 8002a8c0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.342>
    80022b30:	12200593          	li	a1,290
    80022b34:	a039                	j	80022b42 <.LBB244_49+0xc>

0000000080022b36 <.LBB244_49>:
    80022b36:	00008617          	auipc	a2,0x8
    80022b3a:	d8a60613          	addi	a2,a2,-630 # 8002a8c0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.342>
    80022b3e:	0af00593          	li	a1,175
    80022b42:	851e                	mv	a0,t2
    80022b44:	fffff097          	auipc	ra,0xfffff
    80022b48:	7cc080e7          	jalr	1996(ra) # 80022310 <_ZN4core5slice5index24slice_end_index_len_fail17h397499141087200aE>
	...

0000000080022b4e <.LBB244_50>:
    80022b4e:	00007517          	auipc	a0,0x7
    80022b52:	6fa50513          	addi	a0,a0,1786 # 8002a248 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.175>

0000000080022b56 <.LBB244_51>:
    80022b56:	00008617          	auipc	a2,0x8
    80022b5a:	d8260613          	addi	a2,a2,-638 # 8002a8d8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.343>
    80022b5e:	02b00593          	li	a1,43
    80022b62:	ffffe097          	auipc	ra,0xffffe
    80022b66:	168080e7          	jalr	360(ra) # 80020cca <_ZN4core9panicking5panic17h4214b4eed8d3f37fE>
	...

Disassembly of section .text._ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h6db9c97b6577249aE:

0000000080022b6c <_ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h6db9c97b6577249aE>:
    80022b6c:	7139                	addi	sp,sp,-64
    80022b6e:	fc06                	sd	ra,56(sp)
    80022b70:	f822                	sd	s0,48(sp)
    80022b72:	f426                	sd	s1,40(sp)
    80022b74:	842e                	mv	s0,a1
    80022b76:	758c                	ld	a1,40(a1)
    80022b78:	7014                	ld	a3,32(s0)
    80022b7a:	6d98                	ld	a4,24(a1)
    80022b7c:	84aa                	mv	s1,a0

0000000080022b7e <.LBB312_8>:
    80022b7e:	00008597          	auipc	a1,0x8
    80022b82:	34a58593          	addi	a1,a1,842 # 8002aec8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.423>
    80022b86:	463d                	li	a2,15
    80022b88:	8536                	mv	a0,a3
    80022b8a:	9702                	jalr	a4
    80022b8c:	e422                	sd	s0,8(sp)
    80022b8e:	00a10c23          	sb	a0,24(sp)
    80022b92:	e802                	sd	zero,16(sp)
    80022b94:	00010ca3          	sb	zero,25(sp)
    80022b98:	f026                	sd	s1,32(sp)

0000000080022b9a <.LBB312_9>:
    80022b9a:	00008617          	auipc	a2,0x8
    80022b9e:	33e60613          	addi	a2,a2,830 # 8002aed8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.424>
    80022ba2:	0028                	addi	a0,sp,8
    80022ba4:	100c                	addi	a1,sp,32
    80022ba6:	ffffe097          	auipc	ra,0xffffe
    80022baa:	458080e7          	jalr	1112(ra) # 80020ffe <_ZN4core3fmt8builders10DebugTuple5field17h968d9eaf966503caE>
    80022bae:	6542                	ld	a0,16(sp)
    80022bb0:	01814583          	lbu	a1,24(sp)
    80022bb4:	c931                	beqz	a0,80022c08 <.LBB312_11+0x14>
    80022bb6:	4405                	li	s0,1
    80022bb8:	e5a9                	bnez	a1,80022c02 <.LBB312_11+0xe>
    80022bba:	01914583          	lbu	a1,25(sp)
    80022bbe:	157d                	addi	a0,a0,-1
    80022bc0:	00a03533          	snez	a0,a0
    80022bc4:	0015b593          	seqz	a1,a1
    80022bc8:	8d4d                	or	a0,a0,a1
    80022bca:	e10d                	bnez	a0,80022bec <.LBB312_10+0x10>
    80022bcc:	6522                	ld	a0,8(sp)
    80022bce:	03054583          	lbu	a1,48(a0)
    80022bd2:	8991                	andi	a1,a1,4
    80022bd4:	ed81                	bnez	a1,80022bec <.LBB312_10+0x10>
    80022bd6:	750c                	ld	a1,40(a0)
    80022bd8:	7108                	ld	a0,32(a0)
    80022bda:	6d94                	ld	a3,24(a1)

0000000080022bdc <.LBB312_10>:
    80022bdc:	00008597          	auipc	a1,0x8
    80022be0:	80458593          	addi	a1,a1,-2044 # 8002a3e0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.205>
    80022be4:	4605                	li	a2,1
    80022be6:	4405                	li	s0,1
    80022be8:	9682                	jalr	a3
    80022bea:	ed01                	bnez	a0,80022c02 <.LBB312_11+0xe>
    80022bec:	6522                	ld	a0,8(sp)
    80022bee:	750c                	ld	a1,40(a0)
    80022bf0:	7108                	ld	a0,32(a0)
    80022bf2:	6d94                	ld	a3,24(a1)

0000000080022bf4 <.LBB312_11>:
    80022bf4:	00007597          	auipc	a1,0x7
    80022bf8:	7ed58593          	addi	a1,a1,2029 # 8002a3e1 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.206>
    80022bfc:	4605                	li	a2,1
    80022bfe:	9682                	jalr	a3
    80022c00:	842a                	mv	s0,a0
    80022c02:	00810c23          	sb	s0,24(sp)
    80022c06:	85a2                	mv	a1,s0
    80022c08:	00b03533          	snez	a0,a1
    80022c0c:	74a2                	ld	s1,40(sp)
    80022c0e:	7442                	ld	s0,48(sp)
    80022c10:	70e2                	ld	ra,56(sp)
    80022c12:	6121                	addi	sp,sp,64
    80022c14:	8082                	ret

Disassembly of section .text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h4c4c08db6a399c7cE:

0000000080022c16 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h4c4c08db6a399c7cE>:
    80022c16:	7175                	addi	sp,sp,-144
    80022c18:	e506                	sd	ra,136(sp)
    80022c1a:	882e                	mv	a6,a1
    80022c1c:	4581                	li	a1,0
    80022c1e:	00056703          	lwu	a4,0(a0)
    80022c22:	00810893          	addi	a7,sp,8
    80022c26:	10000537          	lui	a0,0x10000
    80022c2a:	357d                	addiw	a0,a0,-1
    80022c2c:	42a9                	li	t0,10
    80022c2e:	a039                	j	80022c3c <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h4c4c08db6a399c7cE+0x26>
    80022c30:	03760613          	addi	a2,a2,55
    80022c34:	06c78fa3          	sb	a2,127(a5) # 1c007f <.Lline_table_start0+0x187d38>
    80022c38:	15fd                	addi	a1,a1,-1
    80022c3a:	c30d                	beqz	a4,80022c5c <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h4c4c08db6a399c7cE+0x46>
    80022c3c:	00b887b3          	add	a5,a7,a1
    80022c40:	00475693          	srli	a3,a4,0x4
    80022c44:	00f77613          	andi	a2,a4,15
    80022c48:	00a6f733          	and	a4,a3,a0
    80022c4c:	fe5672e3          	bgeu	a2,t0,80022c30 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h4c4c08db6a399c7cE+0x1a>
    80022c50:	03066613          	ori	a2,a2,48
    80022c54:	06c78fa3          	sb	a2,127(a5)
    80022c58:	15fd                	addi	a1,a1,-1
    80022c5a:	f36d                	bnez	a4,80022c3c <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h4c4c08db6a399c7cE+0x26>
    80022c5c:	08058513          	addi	a0,a1,128
    80022c60:	08100613          	li	a2,129
    80022c64:	02c57663          	bgeu	a0,a2,80022c90 <.LBB453_8>
    80022c68:	40b007b3          	neg	a5,a1
    80022c6c:	00b88533          	add	a0,a7,a1
    80022c70:	08050713          	addi	a4,a0,128 # 10000080 <.Lline_table_start0+0xffc7d39>

0000000080022c74 <.LBB453_7>:
    80022c74:	00007617          	auipc	a2,0x7
    80022c78:	7cc60613          	addi	a2,a2,1996 # 8002a440 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.224>
    80022c7c:	4585                	li	a1,1
    80022c7e:	4689                	li	a3,2
    80022c80:	8542                	mv	a0,a6
    80022c82:	fffff097          	auipc	ra,0xfffff
    80022c86:	8bc080e7          	jalr	-1860(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    80022c8a:	60aa                	ld	ra,136(sp)
    80022c8c:	6149                	addi	sp,sp,144
    80022c8e:	8082                	ret

0000000080022c90 <.LBB453_8>:
    80022c90:	00007617          	auipc	a2,0x7
    80022c94:	79860613          	addi	a2,a2,1944 # 8002a428 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.221>
    80022c98:	08000593          	li	a1,128
    80022c9c:	fffff097          	auipc	ra,0xfffff
    80022ca0:	634080e7          	jalr	1588(ra) # 800222d0 <_ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E>
	...

Disassembly of section .text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E:

0000000080022ca6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E>:
    80022ca6:	7175                	addi	sp,sp,-144
    80022ca8:	e506                	sd	ra,136(sp)
    80022caa:	6114                	ld	a3,0(a0)
    80022cac:	852e                	mv	a0,a1
    80022cae:	4581                	li	a1,0
    80022cb0:	00810813          	addi	a6,sp,8
    80022cb4:	4729                	li	a4,10
    80022cb6:	a039                	j	80022cc4 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E+0x1e>
    80022cb8:	05760613          	addi	a2,a2,87
    80022cbc:	06c78fa3          	sb	a2,127(a5)
    80022cc0:	15fd                	addi	a1,a1,-1
    80022cc2:	ce91                	beqz	a3,80022cde <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E+0x38>
    80022cc4:	00b807b3          	add	a5,a6,a1
    80022cc8:	00f6f613          	andi	a2,a3,15
    80022ccc:	8291                	srli	a3,a3,0x4
    80022cce:	fee675e3          	bgeu	a2,a4,80022cb8 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E+0x12>
    80022cd2:	03066613          	ori	a2,a2,48
    80022cd6:	06c78fa3          	sb	a2,127(a5)
    80022cda:	15fd                	addi	a1,a1,-1
    80022cdc:	f6e5                	bnez	a3,80022cc4 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17he21e11f173f31e15E+0x1e>
    80022cde:	08058693          	addi	a3,a1,128
    80022ce2:	08100613          	li	a2,129
    80022ce6:	02c6f463          	bgeu	a3,a2,80022d0e <.LBB456_8>
    80022cea:	40b007b3          	neg	a5,a1
    80022cee:	95c2                	add	a1,a1,a6
    80022cf0:	08058713          	addi	a4,a1,128

0000000080022cf4 <.LBB456_7>:
    80022cf4:	00007617          	auipc	a2,0x7
    80022cf8:	74c60613          	addi	a2,a2,1868 # 8002a440 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.224>
    80022cfc:	4585                	li	a1,1
    80022cfe:	4689                	li	a3,2
    80022d00:	fffff097          	auipc	ra,0xfffff
    80022d04:	83e080e7          	jalr	-1986(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    80022d08:	60aa                	ld	ra,136(sp)
    80022d0a:	6149                	addi	sp,sp,144
    80022d0c:	8082                	ret

0000000080022d0e <.LBB456_8>:
    80022d0e:	00007617          	auipc	a2,0x7
    80022d12:	71a60613          	addi	a2,a2,1818 # 8002a428 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.221>
    80022d16:	08000593          	li	a1,128
    80022d1a:	8536                	mv	a0,a3
    80022d1c:	fffff097          	auipc	ra,0xfffff
    80022d20:	5b4080e7          	jalr	1460(ra) # 800222d0 <_ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E>
	...

Disassembly of section .text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h7a5b1e38fb0bc5b9E:

0000000080022d26 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h7a5b1e38fb0bc5b9E>:
    80022d26:	7175                	addi	sp,sp,-144
    80022d28:	e506                	sd	ra,136(sp)
    80022d2a:	6114                	ld	a3,0(a0)
    80022d2c:	852e                	mv	a0,a1
    80022d2e:	4581                	li	a1,0
    80022d30:	00810813          	addi	a6,sp,8
    80022d34:	4729                	li	a4,10
    80022d36:	a039                	j	80022d44 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h7a5b1e38fb0bc5b9E+0x1e>
    80022d38:	03760613          	addi	a2,a2,55
    80022d3c:	06c78fa3          	sb	a2,127(a5)
    80022d40:	15fd                	addi	a1,a1,-1
    80022d42:	ce91                	beqz	a3,80022d5e <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h7a5b1e38fb0bc5b9E+0x38>
    80022d44:	00b807b3          	add	a5,a6,a1
    80022d48:	00f6f613          	andi	a2,a3,15
    80022d4c:	8291                	srli	a3,a3,0x4
    80022d4e:	fee675e3          	bgeu	a2,a4,80022d38 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h7a5b1e38fb0bc5b9E+0x12>
    80022d52:	03066613          	ori	a2,a2,48
    80022d56:	06c78fa3          	sb	a2,127(a5)
    80022d5a:	15fd                	addi	a1,a1,-1
    80022d5c:	f6e5                	bnez	a3,80022d44 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h7a5b1e38fb0bc5b9E+0x1e>
    80022d5e:	08058693          	addi	a3,a1,128
    80022d62:	08100613          	li	a2,129
    80022d66:	02c6f463          	bgeu	a3,a2,80022d8e <.LBB457_8>
    80022d6a:	40b007b3          	neg	a5,a1
    80022d6e:	95c2                	add	a1,a1,a6
    80022d70:	08058713          	addi	a4,a1,128

0000000080022d74 <.LBB457_7>:
    80022d74:	00007617          	auipc	a2,0x7
    80022d78:	6cc60613          	addi	a2,a2,1740 # 8002a440 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.224>
    80022d7c:	4585                	li	a1,1
    80022d7e:	4689                	li	a3,2
    80022d80:	ffffe097          	auipc	ra,0xffffe
    80022d84:	7be080e7          	jalr	1982(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    80022d88:	60aa                	ld	ra,136(sp)
    80022d8a:	6149                	addi	sp,sp,144
    80022d8c:	8082                	ret

0000000080022d8e <.LBB457_8>:
    80022d8e:	00007617          	auipc	a2,0x7
    80022d92:	69a60613          	addi	a2,a2,1690 # 8002a428 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.221>
    80022d96:	08000593          	li	a1,128
    80022d9a:	8536                	mv	a0,a3
    80022d9c:	fffff097          	auipc	ra,0xfffff
    80022da0:	534080e7          	jalr	1332(ra) # 800222d0 <_ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E>
	...

Disassembly of section .text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE:

0000000080022da6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE>:
    80022da6:	7175                	addi	sp,sp,-144
    80022da8:	e506                	sd	ra,136(sp)
    80022daa:	882e                	mv	a6,a1
    80022dac:	0305e583          	lwu	a1,48(a1)
    80022db0:	0105f613          	andi	a2,a1,16
    80022db4:	ea19                	bnez	a2,80022dca <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x24>
    80022db6:	0205f593          	andi	a1,a1,32
    80022dba:	e1a9                	bnez	a1,80022dfc <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x56>
    80022dbc:	85c2                	mv	a1,a6
    80022dbe:	60aa                	ld	ra,136(sp)
    80022dc0:	6149                	addi	sp,sp,144
    80022dc2:	00000317          	auipc	t1,0x0
    80022dc6:	27030067          	jr	624(t1) # 80023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>
    80022dca:	6108                	ld	a0,0(a0)
    80022dcc:	4581                	li	a1,0
    80022dce:	0030                	addi	a2,sp,8
    80022dd0:	46a9                	li	a3,10
    80022dd2:	a039                	j	80022de0 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x3a>
    80022dd4:	05778793          	addi	a5,a5,87
    80022dd8:	06f70fa3          	sb	a5,127(a4)
    80022ddc:	15fd                	addi	a1,a1,-1
    80022dde:	c539                	beqz	a0,80022e2c <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x86>
    80022de0:	00b60733          	add	a4,a2,a1
    80022de4:	00f57793          	andi	a5,a0,15
    80022de8:	8111                	srli	a0,a0,0x4
    80022dea:	fed7f5e3          	bgeu	a5,a3,80022dd4 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x2e>
    80022dee:	0307e793          	ori	a5,a5,48
    80022df2:	06f70fa3          	sb	a5,127(a4)
    80022df6:	15fd                	addi	a1,a1,-1
    80022df8:	f565                	bnez	a0,80022de0 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x3a>
    80022dfa:	a80d                	j	80022e2c <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x86>
    80022dfc:	6108                	ld	a0,0(a0)
    80022dfe:	4581                	li	a1,0
    80022e00:	0030                	addi	a2,sp,8
    80022e02:	46a9                	li	a3,10
    80022e04:	a039                	j	80022e12 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x6c>
    80022e06:	03778793          	addi	a5,a5,55
    80022e0a:	06f70fa3          	sb	a5,127(a4)
    80022e0e:	15fd                	addi	a1,a1,-1
    80022e10:	cd11                	beqz	a0,80022e2c <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x86>
    80022e12:	00b60733          	add	a4,a2,a1
    80022e16:	00f57793          	andi	a5,a0,15
    80022e1a:	8111                	srli	a0,a0,0x4
    80022e1c:	fed7f5e3          	bgeu	a5,a3,80022e06 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x60>
    80022e20:	0307e793          	ori	a5,a5,48
    80022e24:	06f70fa3          	sb	a5,127(a4)
    80022e28:	15fd                	addi	a1,a1,-1
    80022e2a:	f565                	bnez	a0,80022e12 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE+0x6c>
    80022e2c:	08058513          	addi	a0,a1,128
    80022e30:	08100693          	li	a3,129
    80022e34:	02d57663          	bgeu	a0,a3,80022e60 <.LBB462_15>
    80022e38:	40b007b3          	neg	a5,a1
    80022e3c:	00b60533          	add	a0,a2,a1
    80022e40:	08050713          	addi	a4,a0,128

0000000080022e44 <.LBB462_14>:
    80022e44:	00007617          	auipc	a2,0x7
    80022e48:	5fc60613          	addi	a2,a2,1532 # 8002a440 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.224>
    80022e4c:	4585                	li	a1,1
    80022e4e:	4689                	li	a3,2
    80022e50:	8542                	mv	a0,a6
    80022e52:	ffffe097          	auipc	ra,0xffffe
    80022e56:	6ec080e7          	jalr	1772(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    80022e5a:	60aa                	ld	ra,136(sp)
    80022e5c:	6149                	addi	sp,sp,144
    80022e5e:	8082                	ret

0000000080022e60 <.LBB462_15>:
    80022e60:	00007617          	auipc	a2,0x7
    80022e64:	5c860613          	addi	a2,a2,1480 # 8002a428 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.221>
    80022e68:	08000593          	li	a1,128
    80022e6c:	fffff097          	auipc	ra,0xfffff
    80022e70:	464080e7          	jalr	1124(ra) # 800222d0 <_ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E>
	...

Disassembly of section .text._ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h4f29d8511ba5e68eE:

0000000080022e76 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h4f29d8511ba5e68eE>:
    80022e76:	715d                	addi	sp,sp,-80
    80022e78:	e486                	sd	ra,72(sp)
    80022e7a:	e0a2                	sd	s0,64(sp)
    80022e7c:	fc26                	sd	s1,56(sp)
    80022e7e:	f84a                	sd	s2,48(sp)
    80022e80:	00056903          	lwu	s2,0(a0)
    80022e84:	852e                	mv	a0,a1
    80022e86:	00495593          	srli	a1,s2,0x4
    80022e8a:	02700693          	li	a3,39
    80022e8e:	27100713          	li	a4,625

0000000080022e92 <.LBB468_10>:
    80022e92:	00007817          	auipc	a6,0x7
    80022e96:	5b080813          	addi	a6,a6,1456 # 8002a442 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.225>
    80022e9a:	02e5f363          	bgeu	a1,a4,80022ec0 <.LBB468_10+0x2e>
    80022e9e:	06300593          	li	a1,99
    80022ea2:	0f25e063          	bltu	a1,s2,80022f82 <.LBB468_10+0xf0>
    80022ea6:	45a5                	li	a1,9
    80022ea8:	1325cd63          	blt	a1,s2,80022fe2 <.LBB468_10+0x150>
    80022eac:	fff68593          	addi	a1,a3,-1 # aefff <.Lline_table_start0+0x76cb8>
    80022eb0:	00910613          	addi	a2,sp,9
    80022eb4:	962e                	add	a2,a2,a1
    80022eb6:	03090693          	addi	a3,s2,48
    80022eba:	00d60023          	sb	a3,0(a2)
    80022ebe:	a291                	j	80023002 <.LBB468_10+0x170>
    80022ec0:	4681                	li	a3,0
    80022ec2:	001a35b7          	lui	a1,0x1a3
    80022ec6:	6e35859b          	addiw	a1,a1,1763
    80022eca:	05ba                	slli	a1,a1,0xe
    80022ecc:	ac758593          	addi	a1,a1,-1337 # 1a2ac7 <.Lline_table_start0+0x16a780>
    80022ed0:	05ba                	slli	a1,a1,0xe
    80022ed2:	43358593          	addi	a1,a1,1075
    80022ed6:	05b6                	slli	a1,a1,0xd
    80022ed8:	94b58893          	addi	a7,a1,-1717
    80022edc:	6589                	lui	a1,0x2
    80022ede:	7105831b          	addiw	t1,a1,1808
    80022ee2:	65c1                	lui	a1,0x10
    80022ee4:	ffc58e1b          	addiw	t3,a1,-4
    80022ee8:	0051f737          	lui	a4,0x51f
    80022eec:	b857071b          	addiw	a4,a4,-1147
    80022ef0:	0736                	slli	a4,a4,0xd
    80022ef2:	3d770713          	addi	a4,a4,983 # 51f3d7 <.Lline_table_start0+0x4e7090>
    80022ef6:	073a                	slli	a4,a4,0xe
    80022ef8:	28f70713          	addi	a4,a4,655
    80022efc:	0732                	slli	a4,a4,0xc
    80022efe:	5c370e93          	addi	t4,a4,1475
    80022f02:	06400293          	li	t0,100
    80022f06:	ffe58f1b          	addiw	t5,a1,-2
    80022f0a:	00910393          	addi	t2,sp,9
    80022f0e:	05f5e5b7          	lui	a1,0x5f5e
    80022f12:	0ff58f9b          	addiw	t6,a1,255
    80022f16:	864a                	mv	a2,s2
    80022f18:	031937b3          	mulhu	a5,s2,a7
    80022f1c:	00b7d913          	srli	s2,a5,0xb
    80022f20:	02690733          	mul	a4,s2,t1
    80022f24:	40e60733          	sub	a4,a2,a4
    80022f28:	01c775b3          	and	a1,a4,t3
    80022f2c:	8189                	srli	a1,a1,0x2
    80022f2e:	03d5b5b3          	mulhu	a1,a1,t4
    80022f32:	8189                	srli	a1,a1,0x2
    80022f34:	00159413          	slli	s0,a1,0x1
    80022f38:	025585b3          	mul	a1,a1,t0
    80022f3c:	40b705b3          	sub	a1,a4,a1
    80022f40:	0586                	slli	a1,a1,0x1
    80022f42:	01e5f5b3          	and	a1,a1,t5
    80022f46:	01040733          	add	a4,s0,a6
    80022f4a:	00d38433          	add	s0,t2,a3
    80022f4e:	00074483          	lbu	s1,0(a4)
    80022f52:	00170703          	lb	a4,1(a4)
    80022f56:	95c2                	add	a1,a1,a6
    80022f58:	00158783          	lb	a5,1(a1) # 5f5e001 <.Lline_table_start0+0x5f25cba>
    80022f5c:	0005c583          	lbu	a1,0(a1)
    80022f60:	02e40223          	sb	a4,36(s0)
    80022f64:	029401a3          	sb	s1,35(s0)
    80022f68:	02f40323          	sb	a5,38(s0)
    80022f6c:	02b402a3          	sb	a1,37(s0)
    80022f70:	16f1                	addi	a3,a3,-4
    80022f72:	facfe2e3          	bltu	t6,a2,80022f16 <.LBB468_10+0x84>
    80022f76:	02768693          	addi	a3,a3,39
    80022f7a:	06300593          	li	a1,99
    80022f7e:	f325f4e3          	bgeu	a1,s2,80022ea6 <.LBB468_10+0x14>
    80022f82:	65c1                	lui	a1,0x10
    80022f84:	ffc5861b          	addiw	a2,a1,-4
    80022f88:	00c97633          	and	a2,s2,a2
    80022f8c:	8209                	srli	a2,a2,0x2
    80022f8e:	0051f737          	lui	a4,0x51f
    80022f92:	b857071b          	addiw	a4,a4,-1147
    80022f96:	0736                	slli	a4,a4,0xd
    80022f98:	3d770713          	addi	a4,a4,983 # 51f3d7 <.Lline_table_start0+0x4e7090>
    80022f9c:	073a                	slli	a4,a4,0xe
    80022f9e:	28f70713          	addi	a4,a4,655
    80022fa2:	0732                	slli	a4,a4,0xc
    80022fa4:	5c370713          	addi	a4,a4,1475
    80022fa8:	02e63633          	mulhu	a2,a2,a4
    80022fac:	8209                	srli	a2,a2,0x2
    80022fae:	06400713          	li	a4,100
    80022fb2:	02e60733          	mul	a4,a2,a4
    80022fb6:	40e90733          	sub	a4,s2,a4
    80022fba:	0706                	slli	a4,a4,0x1
    80022fbc:	35f9                	addiw	a1,a1,-2
    80022fbe:	8df9                	and	a1,a1,a4
    80022fc0:	16f9                	addi	a3,a3,-2
    80022fc2:	95c2                	add	a1,a1,a6
    80022fc4:	00158703          	lb	a4,1(a1) # 10001 <.Lline_table_start0+0x812>
    80022fc8:	0005c583          	lbu	a1,0(a1)
    80022fcc:	00910793          	addi	a5,sp,9
    80022fd0:	97b6                	add	a5,a5,a3
    80022fd2:	00e780a3          	sb	a4,1(a5)
    80022fd6:	00b78023          	sb	a1,0(a5)
    80022fda:	8932                	mv	s2,a2
    80022fdc:	45a5                	li	a1,9
    80022fde:	ed25d7e3          	bge	a1,s2,80022eac <.LBB468_10+0x1a>
    80022fe2:	00191613          	slli	a2,s2,0x1
    80022fe6:	ffe68593          	addi	a1,a3,-2
    80022fea:	9642                	add	a2,a2,a6
    80022fec:	00160683          	lb	a3,1(a2)
    80022ff0:	00064603          	lbu	a2,0(a2)
    80022ff4:	00910713          	addi	a4,sp,9
    80022ff8:	972e                	add	a4,a4,a1
    80022ffa:	00d700a3          	sb	a3,1(a4)
    80022ffe:	00c70023          	sb	a2,0(a4)
    80023002:	00910613          	addi	a2,sp,9
    80023006:	00b60733          	add	a4,a2,a1
    8002300a:	02700613          	li	a2,39
    8002300e:	40b607b3          	sub	a5,a2,a1

0000000080023012 <.LBB468_11>:
    80023012:	00007617          	auipc	a2,0x7
    80023016:	21e60613          	addi	a2,a2,542 # 8002a230 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.33>
    8002301a:	4585                	li	a1,1
    8002301c:	4681                	li	a3,0
    8002301e:	ffffe097          	auipc	ra,0xffffe
    80023022:	520080e7          	jalr	1312(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    80023026:	7942                	ld	s2,48(sp)
    80023028:	74e2                	ld	s1,56(sp)
    8002302a:	6406                	ld	s0,64(sp)
    8002302c:	60a6                	ld	ra,72(sp)
    8002302e:	6161                	addi	sp,sp,80
    80023030:	8082                	ret

Disassembly of section .text._ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E:

0000000080023032 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h056fc685b1c7ea74E>:
    80023032:	715d                	addi	sp,sp,-80
    80023034:	e486                	sd	ra,72(sp)
    80023036:	e0a2                	sd	s0,64(sp)
    80023038:	fc26                	sd	s1,56(sp)
    8002303a:	f84a                	sd	s2,48(sp)
    8002303c:	00053903          	ld	s2,0(a0)
    80023040:	852e                	mv	a0,a1
    80023042:	00495593          	srli	a1,s2,0x4
    80023046:	02700693          	li	a3,39
    8002304a:	27100713          	li	a4,625

000000008002304e <.LBB470_10>:
    8002304e:	00007817          	auipc	a6,0x7
    80023052:	3f480813          	addi	a6,a6,1012 # 8002a442 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.225>
    80023056:	02e5f363          	bgeu	a1,a4,8002307c <.LBB470_10+0x2e>
    8002305a:	06300593          	li	a1,99
    8002305e:	0f25c063          	blt	a1,s2,8002313e <.LBB470_10+0xf0>
    80023062:	45a5                	li	a1,9
    80023064:	1325cd63          	blt	a1,s2,8002319e <.LBB470_10+0x150>
    80023068:	fff68593          	addi	a1,a3,-1
    8002306c:	00910613          	addi	a2,sp,9
    80023070:	962e                	add	a2,a2,a1
    80023072:	03090693          	addi	a3,s2,48
    80023076:	00d60023          	sb	a3,0(a2)
    8002307a:	a291                	j	800231be <.LBB470_10+0x170>
    8002307c:	4681                	li	a3,0
    8002307e:	001a35b7          	lui	a1,0x1a3
    80023082:	6e35859b          	addiw	a1,a1,1763
    80023086:	05ba                	slli	a1,a1,0xe
    80023088:	ac758593          	addi	a1,a1,-1337 # 1a2ac7 <.Lline_table_start0+0x16a780>
    8002308c:	05ba                	slli	a1,a1,0xe
    8002308e:	43358593          	addi	a1,a1,1075
    80023092:	05b6                	slli	a1,a1,0xd
    80023094:	94b58893          	addi	a7,a1,-1717
    80023098:	6589                	lui	a1,0x2
    8002309a:	7105831b          	addiw	t1,a1,1808
    8002309e:	65c1                	lui	a1,0x10
    800230a0:	ffc58e1b          	addiw	t3,a1,-4
    800230a4:	0051f737          	lui	a4,0x51f
    800230a8:	b857071b          	addiw	a4,a4,-1147
    800230ac:	0736                	slli	a4,a4,0xd
    800230ae:	3d770713          	addi	a4,a4,983 # 51f3d7 <.Lline_table_start0+0x4e7090>
    800230b2:	073a                	slli	a4,a4,0xe
    800230b4:	28f70713          	addi	a4,a4,655
    800230b8:	0732                	slli	a4,a4,0xc
    800230ba:	5c370e93          	addi	t4,a4,1475
    800230be:	06400293          	li	t0,100
    800230c2:	ffe58f1b          	addiw	t5,a1,-2
    800230c6:	00910393          	addi	t2,sp,9
    800230ca:	05f5e5b7          	lui	a1,0x5f5e
    800230ce:	0ff58f9b          	addiw	t6,a1,255
    800230d2:	864a                	mv	a2,s2
    800230d4:	031937b3          	mulhu	a5,s2,a7
    800230d8:	00b7d913          	srli	s2,a5,0xb
    800230dc:	02690733          	mul	a4,s2,t1
    800230e0:	40e60733          	sub	a4,a2,a4
    800230e4:	01c775b3          	and	a1,a4,t3
    800230e8:	8189                	srli	a1,a1,0x2
    800230ea:	03d5b5b3          	mulhu	a1,a1,t4
    800230ee:	8189                	srli	a1,a1,0x2
    800230f0:	00159413          	slli	s0,a1,0x1
    800230f4:	025585b3          	mul	a1,a1,t0
    800230f8:	40b705b3          	sub	a1,a4,a1
    800230fc:	0586                	slli	a1,a1,0x1
    800230fe:	01e5f5b3          	and	a1,a1,t5
    80023102:	01040733          	add	a4,s0,a6
    80023106:	00d38433          	add	s0,t2,a3
    8002310a:	00074483          	lbu	s1,0(a4)
    8002310e:	00170703          	lb	a4,1(a4)
    80023112:	95c2                	add	a1,a1,a6
    80023114:	00158783          	lb	a5,1(a1) # 5f5e001 <.Lline_table_start0+0x5f25cba>
    80023118:	0005c583          	lbu	a1,0(a1)
    8002311c:	02e40223          	sb	a4,36(s0)
    80023120:	029401a3          	sb	s1,35(s0)
    80023124:	02f40323          	sb	a5,38(s0)
    80023128:	02b402a3          	sb	a1,37(s0)
    8002312c:	16f1                	addi	a3,a3,-4
    8002312e:	facfe2e3          	bltu	t6,a2,800230d2 <.LBB470_10+0x84>
    80023132:	02768693          	addi	a3,a3,39
    80023136:	06300593          	li	a1,99
    8002313a:	f325d4e3          	bge	a1,s2,80023062 <.LBB470_10+0x14>
    8002313e:	65c1                	lui	a1,0x10
    80023140:	ffc5861b          	addiw	a2,a1,-4
    80023144:	00c97633          	and	a2,s2,a2
    80023148:	8209                	srli	a2,a2,0x2
    8002314a:	0051f737          	lui	a4,0x51f
    8002314e:	b857071b          	addiw	a4,a4,-1147
    80023152:	0736                	slli	a4,a4,0xd
    80023154:	3d770713          	addi	a4,a4,983 # 51f3d7 <.Lline_table_start0+0x4e7090>
    80023158:	073a                	slli	a4,a4,0xe
    8002315a:	28f70713          	addi	a4,a4,655
    8002315e:	0732                	slli	a4,a4,0xc
    80023160:	5c370713          	addi	a4,a4,1475
    80023164:	02e63633          	mulhu	a2,a2,a4
    80023168:	8209                	srli	a2,a2,0x2
    8002316a:	06400713          	li	a4,100
    8002316e:	02e60733          	mul	a4,a2,a4
    80023172:	40e90733          	sub	a4,s2,a4
    80023176:	0706                	slli	a4,a4,0x1
    80023178:	35f9                	addiw	a1,a1,-2
    8002317a:	8df9                	and	a1,a1,a4
    8002317c:	16f9                	addi	a3,a3,-2
    8002317e:	95c2                	add	a1,a1,a6
    80023180:	00158703          	lb	a4,1(a1) # 10001 <.Lline_table_start0+0x812>
    80023184:	0005c583          	lbu	a1,0(a1)
    80023188:	00910793          	addi	a5,sp,9
    8002318c:	97b6                	add	a5,a5,a3
    8002318e:	00e780a3          	sb	a4,1(a5)
    80023192:	00b78023          	sb	a1,0(a5)
    80023196:	8932                	mv	s2,a2
    80023198:	45a5                	li	a1,9
    8002319a:	ed25d7e3          	bge	a1,s2,80023068 <.LBB470_10+0x1a>
    8002319e:	00191613          	slli	a2,s2,0x1
    800231a2:	ffe68593          	addi	a1,a3,-2
    800231a6:	9642                	add	a2,a2,a6
    800231a8:	00160683          	lb	a3,1(a2)
    800231ac:	00064603          	lbu	a2,0(a2)
    800231b0:	00910713          	addi	a4,sp,9
    800231b4:	972e                	add	a4,a4,a1
    800231b6:	00d700a3          	sb	a3,1(a4)
    800231ba:	00c70023          	sb	a2,0(a4)
    800231be:	00910613          	addi	a2,sp,9
    800231c2:	00b60733          	add	a4,a2,a1
    800231c6:	02700613          	li	a2,39
    800231ca:	40b607b3          	sub	a5,a2,a1

00000000800231ce <.LBB470_11>:
    800231ce:	00007617          	auipc	a2,0x7
    800231d2:	06260613          	addi	a2,a2,98 # 8002a230 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.33>
    800231d6:	4585                	li	a1,1
    800231d8:	4681                	li	a3,0
    800231da:	ffffe097          	auipc	ra,0xffffe
    800231de:	364080e7          	jalr	868(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    800231e2:	7942                	ld	s2,48(sp)
    800231e4:	74e2                	ld	s1,56(sp)
    800231e6:	6406                	ld	s0,64(sp)
    800231e8:	60a6                	ld	ra,72(sp)
    800231ea:	6161                	addi	sp,sp,80
    800231ec:	8082                	ret

Disassembly of section .text._ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9b30d63a2778a2bdE:

00000000800231ee <_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9b30d63a2778a2bdE>:
    800231ee:	7590                	ld	a2,40(a1)
    800231f0:	7188                	ld	a0,32(a1)
    800231f2:	6e1c                	ld	a5,24(a2)

00000000800231f4 <.LBB494_1>:
    800231f4:	00008597          	auipc	a1,0x8
    800231f8:	d0458593          	addi	a1,a1,-764 # 8002aef8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.541>
    800231fc:	4615                	li	a2,5
    800231fe:	8782                	jr	a5

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3d7355099627c911E:

0000000080023200 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3d7355099627c911E>:
    80023200:	1141                	addi	sp,sp,-16
    80023202:	e406                	sd	ra,8(sp)
    80023204:	6108                	ld	a0,0(a0)
    80023206:	6108                	ld	a0,0(a0)
    80023208:	e02a                	sd	a0,0(sp)
    8002320a:	850a                	mv	a0,sp
    8002320c:	00000097          	auipc	ra,0x0
    80023210:	b9a080e7          	jalr	-1126(ra) # 80022da6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE>
    80023214:	60a2                	ld	ra,8(sp)
    80023216:	0141                	addi	sp,sp,16
    80023218:	8082                	ret

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h583af7b57dae1f0cE:

000000008002321a <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h583af7b57dae1f0cE>:
    8002321a:	6108                	ld	a0,0(a0)
    8002321c:	00000317          	auipc	t1,0x0
    80023220:	b8a30067          	jr	-1142(t1) # 80022da6 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h65700e50f045d1fbE>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60a88569702d73e5E:

0000000080023224 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h60a88569702d73e5E>:
    80023224:	7175                	addi	sp,sp,-144
    80023226:	e506                	sd	ra,136(sp)
    80023228:	882e                	mv	a6,a1
    8002322a:	0305e583          	lwu	a1,48(a1)
    8002322e:	6108                	ld	a0,0(a0)
    80023230:	0105f613          	andi	a2,a1,16
    80023234:	e625                	bnez	a2,8002329c <.LBB526_19+0x22>
    80023236:	00054503          	lbu	a0,0(a0)
    8002323a:	0205f593          	andi	a1,a1,32
    8002323e:	e9d1                	bnez	a1,800232d2 <.LBB526_19+0x58>
    80023240:	06400593          	li	a1,100
    80023244:	0eb56963          	bltu	a0,a1,80023336 <.LBB526_20+0x1c>
    80023248:	0fc57613          	andi	a2,a0,252
    8002324c:	8209                	srli	a2,a2,0x2
    8002324e:	0051f6b7          	lui	a3,0x51f
    80023252:	b856869b          	addiw	a3,a3,-1147
    80023256:	06b6                	slli	a3,a3,0xd
    80023258:	3d768693          	addi	a3,a3,983 # 51f3d7 <.Lline_table_start0+0x4e7090>
    8002325c:	06ba                	slli	a3,a3,0xe
    8002325e:	28f68693          	addi	a3,a3,655
    80023262:	06b2                	slli	a3,a3,0xc
    80023264:	5c368693          	addi	a3,a3,1475
    80023268:	02d63633          	mulhu	a2,a2,a3
    8002326c:	8209                	srli	a2,a2,0x2
    8002326e:	02b605b3          	mul	a1,a2,a1
    80023272:	8d0d                	sub	a0,a0,a1
    80023274:	0506                	slli	a0,a0,0x1
    80023276:	0fe57513          	andi	a0,a0,254

000000008002327a <.LBB526_19>:
    8002327a:	00007597          	auipc	a1,0x7
    8002327e:	1c858593          	addi	a1,a1,456 # 8002a442 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.225>
    80023282:	952e                	add	a0,a0,a1
    80023284:	00150583          	lb	a1,1(a0)
    80023288:	00054503          	lbu	a0,0(a0)
    8002328c:	02b10723          	sb	a1,46(sp)
    80023290:	02a106a3          	sb	a0,45(sp)
    80023294:	02400593          	li	a1,36
    80023298:	8532                	mv	a0,a2
    8002329a:	a05d                	j	80023340 <.LBB526_20+0x26>
    8002329c:	00054503          	lbu	a0,0(a0)
    800232a0:	4581                	li	a1,0
    800232a2:	0030                	addi	a2,sp,8
    800232a4:	46a9                	li	a3,10
    800232a6:	a039                	j	800232b4 <.LBB526_19+0x3a>
    800232a8:	05778793          	addi	a5,a5,87
    800232ac:	06f70fa3          	sb	a5,127(a4)
    800232b0:	15fd                	addi	a1,a1,-1
    800232b2:	c921                	beqz	a0,80023302 <.LBB526_19+0x88>
    800232b4:	00b60733          	add	a4,a2,a1
    800232b8:	00f57793          	andi	a5,a0,15
    800232bc:	8111                	srli	a0,a0,0x4
    800232be:	893d                	andi	a0,a0,15
    800232c0:	fed7f4e3          	bgeu	a5,a3,800232a8 <.LBB526_19+0x2e>
    800232c4:	0307e793          	ori	a5,a5,48
    800232c8:	06f70fa3          	sb	a5,127(a4)
    800232cc:	15fd                	addi	a1,a1,-1
    800232ce:	f17d                	bnez	a0,800232b4 <.LBB526_19+0x3a>
    800232d0:	a80d                	j	80023302 <.LBB526_19+0x88>
    800232d2:	4581                	li	a1,0
    800232d4:	0030                	addi	a2,sp,8
    800232d6:	46a9                	li	a3,10
    800232d8:	a039                	j	800232e6 <.LBB526_19+0x6c>
    800232da:	03778793          	addi	a5,a5,55
    800232de:	06f70fa3          	sb	a5,127(a4)
    800232e2:	15fd                	addi	a1,a1,-1
    800232e4:	cd19                	beqz	a0,80023302 <.LBB526_19+0x88>
    800232e6:	00b60733          	add	a4,a2,a1
    800232ea:	00f57793          	andi	a5,a0,15
    800232ee:	8111                	srli	a0,a0,0x4
    800232f0:	893d                	andi	a0,a0,15
    800232f2:	fed7f4e3          	bgeu	a5,a3,800232da <.LBB526_19+0x60>
    800232f6:	0307e793          	ori	a5,a5,48
    800232fa:	06f70fa3          	sb	a5,127(a4)
    800232fe:	15fd                	addi	a1,a1,-1
    80023300:	f17d                	bnez	a0,800232e6 <.LBB526_19+0x6c>
    80023302:	08058513          	addi	a0,a1,128
    80023306:	08100693          	li	a3,129
    8002330a:	08d57763          	bgeu	a0,a3,80023398 <.LBB526_23>
    8002330e:	40b007b3          	neg	a5,a1
    80023312:	00b60533          	add	a0,a2,a1
    80023316:	08050713          	addi	a4,a0,128

000000008002331a <.LBB526_20>:
    8002331a:	00007617          	auipc	a2,0x7
    8002331e:	12660613          	addi	a2,a2,294 # 8002a440 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.224>
    80023322:	4585                	li	a1,1
    80023324:	4689                	li	a3,2
    80023326:	8542                	mv	a0,a6
    80023328:	ffffe097          	auipc	ra,0xffffe
    8002332c:	216080e7          	jalr	534(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    80023330:	60aa                	ld	ra,136(sp)
    80023332:	6149                	addi	sp,sp,144
    80023334:	8082                	ret
    80023336:	4625                	li	a2,9
    80023338:	02600593          	li	a1,38
    8002333c:	00a66963          	bltu	a2,a0,8002334e <.LBB526_20+0x34>
    80023340:	0030                	addi	a2,sp,8
    80023342:	962e                	add	a2,a2,a1
    80023344:	03050513          	addi	a0,a0,48
    80023348:	00a60023          	sb	a0,0(a2)
    8002334c:	a00d                	j	8002336e <.LBB526_21+0x1e>
    8002334e:	0506                	slli	a0,a0,0x1

0000000080023350 <.LBB526_21>:
    80023350:	00007597          	auipc	a1,0x7
    80023354:	0f258593          	addi	a1,a1,242 # 8002a442 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.225>
    80023358:	952e                	add	a0,a0,a1
    8002335a:	00150583          	lb	a1,1(a0)
    8002335e:	00054503          	lbu	a0,0(a0)
    80023362:	02b10723          	sb	a1,46(sp)
    80023366:	02a106a3          	sb	a0,45(sp)
    8002336a:	02500593          	li	a1,37
    8002336e:	0028                	addi	a0,sp,8
    80023370:	00b50733          	add	a4,a0,a1
    80023374:	02700513          	li	a0,39
    80023378:	40b507b3          	sub	a5,a0,a1

000000008002337c <.LBB526_22>:
    8002337c:	00007617          	auipc	a2,0x7
    80023380:	eb460613          	addi	a2,a2,-332 # 8002a230 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.33>
    80023384:	4585                	li	a1,1
    80023386:	8542                	mv	a0,a6
    80023388:	4681                	li	a3,0
    8002338a:	ffffe097          	auipc	ra,0xffffe
    8002338e:	1b4080e7          	jalr	436(ra) # 8002153e <_ZN4core3fmt9Formatter12pad_integral17h005290bf5c80af87E>
    80023392:	60aa                	ld	ra,136(sp)
    80023394:	6149                	addi	sp,sp,144
    80023396:	8082                	ret

0000000080023398 <.LBB526_23>:
    80023398:	00007617          	auipc	a2,0x7
    8002339c:	09060613          	addi	a2,a2,144 # 8002a428 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.221>
    800233a0:	08000593          	li	a1,128
    800233a4:	fffff097          	auipc	ra,0xfffff
    800233a8:	f2c080e7          	jalr	-212(ra) # 800222d0 <_ZN4core5slice5index26slice_start_index_len_fail17h43348ae2a84bde06E>
	...

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb2d2d27b812270d6E:

00000000800233ae <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb2d2d27b812270d6E>:
    800233ae:	7139                	addi	sp,sp,-64
    800233b0:	fc06                	sd	ra,56(sp)
    800233b2:	f822                	sd	s0,48(sp)
    800233b4:	f426                	sd	s1,40(sp)
    800233b6:	6110                	ld	a2,0(a0)
    800233b8:	00064503          	lbu	a0,0(a2)
    800233bc:	4685                	li	a3,1
    800233be:	842e                	mv	s0,a1
    800233c0:	0ad51263          	bne	a0,a3,80023464 <.LBB548_13+0x22>
    800233c4:	740c                	ld	a1,40(s0)
    800233c6:	7008                	ld	a0,32(s0)
    800233c8:	6d94                	ld	a3,24(a1)
    800233ca:	00160493          	addi	s1,a2,1

00000000800233ce <.LBB548_10>:
    800233ce:	00001597          	auipc	a1,0x1
    800233d2:	43658593          	addi	a1,a1,1078 # 80024804 <.L__unnamed_4+0x1c>
    800233d6:	4611                	li	a2,4
    800233d8:	9682                	jalr	a3
    800233da:	e422                	sd	s0,8(sp)
    800233dc:	00a10c23          	sb	a0,24(sp)
    800233e0:	e802                	sd	zero,16(sp)
    800233e2:	00010ca3          	sb	zero,25(sp)
    800233e6:	f026                	sd	s1,32(sp)

00000000800233e8 <.LBB548_11>:
    800233e8:	00007617          	auipc	a2,0x7
    800233ec:	00060613          	mv	a2,a2
    800233f0:	0028                	addi	a0,sp,8
    800233f2:	100c                	addi	a1,sp,32
    800233f4:	ffffe097          	auipc	ra,0xffffe
    800233f8:	c0a080e7          	jalr	-1014(ra) # 80020ffe <_ZN4core3fmt8builders10DebugTuple5field17h968d9eaf966503caE>
    800233fc:	6542                	ld	a0,16(sp)
    800233fe:	01814583          	lbu	a1,24(sp)
    80023402:	c931                	beqz	a0,80023456 <.LBB548_13+0x14>
    80023404:	4405                	li	s0,1
    80023406:	e5a9                	bnez	a1,80023450 <.LBB548_13+0xe>
    80023408:	01914583          	lbu	a1,25(sp)
    8002340c:	157d                	addi	a0,a0,-1
    8002340e:	00a03533          	snez	a0,a0
    80023412:	0015b593          	seqz	a1,a1
    80023416:	8d4d                	or	a0,a0,a1
    80023418:	e10d                	bnez	a0,8002343a <.LBB548_12+0x10>
    8002341a:	6522                	ld	a0,8(sp)
    8002341c:	03054583          	lbu	a1,48(a0)
    80023420:	8991                	andi	a1,a1,4
    80023422:	ed81                	bnez	a1,8002343a <.LBB548_12+0x10>
    80023424:	750c                	ld	a1,40(a0)
    80023426:	7108                	ld	a0,32(a0)
    80023428:	6d94                	ld	a3,24(a1)

000000008002342a <.LBB548_12>:
    8002342a:	00007597          	auipc	a1,0x7
    8002342e:	fb658593          	addi	a1,a1,-74 # 8002a3e0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.205>
    80023432:	4605                	li	a2,1
    80023434:	4405                	li	s0,1
    80023436:	9682                	jalr	a3
    80023438:	ed01                	bnez	a0,80023450 <.LBB548_13+0xe>
    8002343a:	6522                	ld	a0,8(sp)
    8002343c:	750c                	ld	a1,40(a0)
    8002343e:	7108                	ld	a0,32(a0)
    80023440:	6d94                	ld	a3,24(a1)

0000000080023442 <.LBB548_13>:
    80023442:	00007597          	auipc	a1,0x7
    80023446:	f9f58593          	addi	a1,a1,-97 # 8002a3e1 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.206>
    8002344a:	4605                	li	a2,1
    8002344c:	9682                	jalr	a3
    8002344e:	842a                	mv	s0,a0
    80023450:	00810c23          	sb	s0,24(sp)
    80023454:	85a2                	mv	a1,s0
    80023456:	00b03533          	snez	a0,a1
    8002345a:	74a2                	ld	s1,40(sp)
    8002345c:	7442                	ld	s0,48(sp)
    8002345e:	70e2                	ld	ra,56(sp)
    80023460:	6121                	addi	sp,sp,64
    80023462:	8082                	ret
    80023464:	740c                	ld	a1,40(s0)
    80023466:	7008                	ld	a0,32(s0)
    80023468:	6d9c                	ld	a5,24(a1)

000000008002346a <.LBB548_14>:
    8002346a:	00001597          	auipc	a1,0x1
    8002346e:	3ba58593          	addi	a1,a1,954 # 80024824 <.L__unnamed_4+0x3c>
    80023472:	4611                	li	a2,4
    80023474:	74a2                	ld	s1,40(sp)
    80023476:	7442                	ld	s0,48(sp)
    80023478:	70e2                	ld	ra,56(sp)
    8002347a:	6121                	addi	sp,sp,64
    8002347c:	8782                	jr	a5

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc3a74066347440a3E:

000000008002347e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc3a74066347440a3E>:
    8002347e:	00007697          	auipc	a3,0x7
    80023482:	11268693          	addi	a3,a3,274 # 8002a590 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.238>
    80023486:	4609                	li	a2,2
    80023488:	852e                	mv	a0,a1
    8002348a:	85b6                	mv	a1,a3
    8002348c:	ffffe317          	auipc	t1,0xffffe
    80023490:	33c30067          	jr	828(t1) # 800217c8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc803731d5e879d1bE:

0000000080023494 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc803731d5e879d1bE>:
    80023494:	6510                	ld	a2,8(a0)
    80023496:	6108                	ld	a0,0(a0)
    80023498:	6e1c                	ld	a5,24(a2)
    8002349a:	8782                	jr	a5

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E:

000000008002349c <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0ab56ae6638005b3E>:
    8002349c:	6114                	ld	a3,0(a0)
    8002349e:	6510                	ld	a2,8(a0)
    800234a0:	852e                	mv	a0,a1
    800234a2:	85b6                	mv	a1,a3
    800234a4:	ffffe317          	auipc	t1,0xffffe
    800234a8:	32430067          	jr	804(t1) # 800217c8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E>

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h10736fa640ad137aE:

00000000800234ac <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h10736fa640ad137aE>:
    800234ac:	6108                	ld	a0,0(a0)
    800234ae:	6114                	ld	a3,0(a0)
    800234b0:	6510                	ld	a2,8(a0)
    800234b2:	852e                	mv	a0,a1
    800234b4:	85b6                	mv	a1,a3
    800234b6:	ffffe317          	auipc	t1,0xffffe
    800234ba:	31230067          	jr	786(t1) # 800217c8 <_ZN4core3fmt9Formatter3pad17hcc8646e0ded6ea87E>

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf8d117bc396dc3c6E:

00000000800234be <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf8d117bc396dc3c6E>:
    800234be:	7139                	addi	sp,sp,-64
    800234c0:	fc06                	sd	ra,56(sp)
    800234c2:	6110                	ld	a2,0(a0)
    800234c4:	7614                	ld	a3,40(a2)
    800234c6:	7188                	ld	a0,32(a1)
    800234c8:	758c                	ld	a1,40(a1)
    800234ca:	f836                	sd	a3,48(sp)
    800234cc:	7214                	ld	a3,32(a2)
    800234ce:	f436                	sd	a3,40(sp)
    800234d0:	6e14                	ld	a3,24(a2)
    800234d2:	f036                	sd	a3,32(sp)
    800234d4:	6a14                	ld	a3,16(a2)
    800234d6:	ec36                	sd	a3,24(sp)
    800234d8:	6614                	ld	a3,8(a2)
    800234da:	e836                	sd	a3,16(sp)
    800234dc:	6210                	ld	a2,0(a2)
    800234de:	e432                	sd	a2,8(sp)
    800234e0:	0030                	addi	a2,sp,8
    800234e2:	ffffe097          	auipc	ra,0xffffe
    800234e6:	eba080e7          	jalr	-326(ra) # 8002139c <_ZN4core3fmt5write17h338141860f5a80fbE>
    800234ea:	70e2                	ld	ra,56(sp)
    800234ec:	6121                	addi	sp,sp,64
    800234ee:	8082                	ret

Disassembly of section .text._ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h3ebd7e5e05aa8206E:

00000000800234f0 <_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h3ebd7e5e05aa8206E>:
    800234f0:	7139                	addi	sp,sp,-64
    800234f2:	fc06                	sd	ra,56(sp)
    800234f4:	f822                	sd	s0,48(sp)
    800234f6:	f426                	sd	s1,40(sp)
    800234f8:	f04a                	sd	s2,32(sp)
    800234fa:	842e                	mv	s0,a1
    800234fc:	758c                	ld	a1,40(a1)
    800234fe:	7014                	ld	a3,32(s0)
    80023500:	6d98                	ld	a4,24(a1)
    80023502:	84aa                	mv	s1,a0
    80023504:	00850913          	addi	s2,a0,8

0000000080023508 <.LBB586_8>:
    80023508:	00008597          	auipc	a1,0x8
    8002350c:	9f558593          	addi	a1,a1,-1547 # 8002aefd <.Lanon.9d4bfc86079e95d674f3cded52b1db19.565>
    80023510:	4625                	li	a2,9
    80023512:	8536                	mv	a0,a3
    80023514:	9702                	jalr	a4
    80023516:	e42a                	sd	a0,8(sp)
    80023518:	e022                	sd	s0,0(sp)
    8002351a:	ec26                	sd	s1,24(sp)

000000008002351c <.LBB586_9>:
    8002351c:	00008597          	auipc	a1,0x8
    80023520:	9ea58593          	addi	a1,a1,-1558 # 8002af06 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.566>

0000000080023524 <.LBB586_10>:
    80023524:	00008717          	auipc	a4,0x8
    80023528:	98470713          	addi	a4,a4,-1660 # 8002aea8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.418>
    8002352c:	840a                	mv	s0,sp
    8002352e:	0834                	addi	a3,sp,24
    80023530:	462d                	li	a2,11
    80023532:	8522                	mv	a0,s0
    80023534:	ffffe097          	auipc	ra,0xffffe
    80023538:	96e080e7          	jalr	-1682(ra) # 80020ea2 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE>
    8002353c:	ec4a                	sd	s2,24(sp)

000000008002353e <.LBB586_11>:
    8002353e:	00008597          	auipc	a1,0x8
    80023542:	9d358593          	addi	a1,a1,-1581 # 8002af11 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.567>

0000000080023546 <.LBB586_12>:
    80023546:	00008717          	auipc	a4,0x8
    8002354a:	9da70713          	addi	a4,a4,-1574 # 8002af20 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.568>
    8002354e:	0834                	addi	a3,sp,24
    80023550:	4625                	li	a2,9
    80023552:	8522                	mv	a0,s0
    80023554:	ffffe097          	auipc	ra,0xffffe
    80023558:	94e080e7          	jalr	-1714(ra) # 80020ea2 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE>
    8002355c:	00914503          	lbu	a0,9(sp)
    80023560:	00814583          	lbu	a1,8(sp)
    80023564:	c91d                	beqz	a0,8002359a <.LBB586_14+0x12>
    80023566:	4505                	li	a0,1
    80023568:	e595                	bnez	a1,80023594 <.LBB586_14+0xc>
    8002356a:	6502                	ld	a0,0(sp)
    8002356c:	750c                	ld	a1,40(a0)
    8002356e:	03054603          	lbu	a2,48(a0)
    80023572:	7108                	ld	a0,32(a0)
    80023574:	6d94                	ld	a3,24(a1)
    80023576:	00467593          	andi	a1,a2,4
    8002357a:	e599                	bnez	a1,80023588 <.LBB586_14>

000000008002357c <.LBB586_13>:
    8002357c:	00007597          	auipc	a1,0x7
    80023580:	e5f58593          	addi	a1,a1,-417 # 8002a3db <.Lanon.9d4bfc86079e95d674f3cded52b1db19.202>
    80023584:	4609                	li	a2,2
    80023586:	a031                	j	80023592 <.LBB586_14+0xa>

0000000080023588 <.LBB586_14>:
    80023588:	00007597          	auipc	a1,0x7
    8002358c:	e5258593          	addi	a1,a1,-430 # 8002a3da <.Lanon.9d4bfc86079e95d674f3cded52b1db19.201>
    80023590:	4605                	li	a2,1
    80023592:	9682                	jalr	a3
    80023594:	00a10423          	sb	a0,8(sp)
    80023598:	85aa                	mv	a1,a0
    8002359a:	00b03533          	snez	a0,a1
    8002359e:	7902                	ld	s2,32(sp)
    800235a0:	74a2                	ld	s1,40(sp)
    800235a2:	7442                	ld	s0,48(sp)
    800235a4:	70e2                	ld	ra,56(sp)
    800235a6:	6121                	addi	sp,sp,64
    800235a8:	8082                	ret

Disassembly of section .text._ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc6378705226a5029E:

00000000800235aa <_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc6378705226a5029E>:
    800235aa:	1141                	addi	sp,sp,-16
    800235ac:	e406                	sd	ra,8(sp)
    800235ae:	4681                	li	a3,0
    800235b0:	0005059b          	sext.w	a1,a0
    800235b4:	6645                	lui	a2,0x11
    800235b6:	d246071b          	addiw	a4,a2,-732
    800235ba:	00b5161b          	slliw	a2,a0,0xb
    800235be:	00e5e363          	bltu	a1,a4,800235c4 <_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc6378705226a5029E+0x1a>
    800235c2:	46bd                	li	a3,15
    800235c4:	00868713          	addi	a4,a3,8
    800235c8:	00271793          	slli	a5,a4,0x2

00000000800235cc <.LBB614_29>:
    800235cc:	00008597          	auipc	a1,0x8
    800235d0:	97458593          	addi	a1,a1,-1676 # 8002af40 <_ZN4core7unicode12unicode_data15grapheme_extend17SHORT_OFFSET_RUNS17hfd93ef645f5e63d2E>
    800235d4:	97ae                	add	a5,a5,a1
    800235d6:	439c                	lw	a5,0(a5)
    800235d8:	00b7979b          	slliw	a5,a5,0xb
    800235dc:	00f66363          	bltu	a2,a5,800235e2 <.LBB614_29+0x16>
    800235e0:	86ba                	mv	a3,a4
    800235e2:	00468713          	addi	a4,a3,4
    800235e6:	00271793          	slli	a5,a4,0x2
    800235ea:	97ae                	add	a5,a5,a1
    800235ec:	439c                	lw	a5,0(a5)
    800235ee:	00b7979b          	slliw	a5,a5,0xb
    800235f2:	00f66363          	bltu	a2,a5,800235f8 <.LBB614_29+0x2c>
    800235f6:	86ba                	mv	a3,a4
    800235f8:	00268713          	addi	a4,a3,2
    800235fc:	00271793          	slli	a5,a4,0x2
    80023600:	97ae                	add	a5,a5,a1
    80023602:	439c                	lw	a5,0(a5)
    80023604:	00b7979b          	slliw	a5,a5,0xb
    80023608:	00f66363          	bltu	a2,a5,8002360e <.LBB614_29+0x42>
    8002360c:	86ba                	mv	a3,a4
    8002360e:	00168713          	addi	a4,a3,1
    80023612:	00271793          	slli	a5,a4,0x2
    80023616:	97ae                	add	a5,a5,a1
    80023618:	439c                	lw	a5,0(a5)
    8002361a:	00b7979b          	slliw	a5,a5,0xb
    8002361e:	00f66363          	bltu	a2,a5,80023624 <.LBB614_29+0x58>
    80023622:	86ba                	mv	a3,a4
    80023624:	00269713          	slli	a4,a3,0x2
    80023628:	972e                	add	a4,a4,a1
    8002362a:	4318                	lw	a4,0(a4)
    8002362c:	00b7171b          	slliw	a4,a4,0xb
    80023630:	00c737b3          	sltu	a5,a4,a2
    80023634:	8e39                	xor	a2,a2,a4
    80023636:	00163613          	seqz	a2,a2
    8002363a:	963e                	add	a2,a2,a5
    8002363c:	00d60733          	add	a4,a2,a3
    80023640:	46f9                	li	a3,30
    80023642:	0ae6e463          	bltu	a3,a4,800236ea <.LBB614_32>
    80023646:	00271793          	slli	a5,a4,0x2
    8002364a:	2b100613          	li	a2,689
    8002364e:	00d70763          	beq	a4,a3,8002365c <.LBB614_29+0x90>
    80023652:	00f58633          	add	a2,a1,a5
    80023656:	00466603          	lwu	a2,4(a2) # 11004 <.Lline_table_start0+0x1f3>
    8002365a:	8255                	srli	a2,a2,0x15
    8002365c:	fff70693          	addi	a3,a4,-1
    80023660:	00d77463          	bgeu	a4,a3,80023668 <.LBB614_29+0x9c>
    80023664:	4701                	li	a4,0
    80023666:	a821                	j	8002367e <.LBB614_29+0xb2>
    80023668:	477d                	li	a4,31
    8002366a:	08e6fb63          	bgeu	a3,a4,80023700 <.LBB614_33>
    8002366e:	068a                	slli	a3,a3,0x2
    80023670:	96ae                	add	a3,a3,a1
    80023672:	0006e683          	lwu	a3,0(a3)
    80023676:	00200737          	lui	a4,0x200
    8002367a:	377d                	addiw	a4,a4,-1
    8002367c:	8f75                	and	a4,a4,a3
    8002367e:	95be                	add	a1,a1,a5
    80023680:	0005e583          	lwu	a1,0(a1)
    80023684:	81d5                	srli	a1,a1,0x15
    80023686:	00158693          	addi	a3,a1,1
    8002368a:	02d60f63          	beq	a2,a3,800236c8 <.LBB614_30+0x22>
    8002368e:	2b100793          	li	a5,689
    80023692:	882e                	mv	a6,a1
    80023694:	00b7e463          	bltu	a5,a1,8002369c <.LBB614_29+0xd0>
    80023698:	2b100813          	li	a6,689
    8002369c:	4781                	li	a5,0
    8002369e:	40e5073b          	subw	a4,a0,a4
    800236a2:	fff60513          	addi	a0,a2,-1

00000000800236a6 <.LBB614_30>:
    800236a6:	00008617          	auipc	a2,0x8
    800236aa:	91660613          	addi	a2,a2,-1770 # 8002afbc <_ZN4core7unicode12unicode_data15grapheme_extend7OFFSETS17h95afd816ac45989cE>
    800236ae:	02b80263          	beq	a6,a1,800236d2 <.LBB614_31>
    800236b2:	00c586b3          	add	a3,a1,a2
    800236b6:	0006c683          	lbu	a3,0(a3)
    800236ba:	9fb5                	addw	a5,a5,a3
    800236bc:	00f76663          	bltu	a4,a5,800236c8 <.LBB614_30+0x22>
    800236c0:	0585                	addi	a1,a1,1
    800236c2:	feb516e3          	bne	a0,a1,800236ae <.LBB614_30+0x8>
    800236c6:	85aa                	mv	a1,a0
    800236c8:	0015f513          	andi	a0,a1,1
    800236cc:	60a2                	ld	ra,8(sp)
    800236ce:	0141                	addi	sp,sp,16
    800236d0:	8082                	ret

00000000800236d2 <.LBB614_31>:
    800236d2:	00007617          	auipc	a2,0x7
    800236d6:	7a660613          	addi	a2,a2,1958 # 8002ae78 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.355>
    800236da:	2b100593          	li	a1,689
    800236de:	8542                	mv	a0,a6
    800236e0:	ffffd097          	auipc	ra,0xffffd
    800236e4:	616080e7          	jalr	1558(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

00000000800236ea <.LBB614_32>:
    800236ea:	00007617          	auipc	a2,0x7
    800236ee:	77660613          	addi	a2,a2,1910 # 8002ae60 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.354>
    800236f2:	45fd                	li	a1,31
    800236f4:	853a                	mv	a0,a4
    800236f6:	ffffd097          	auipc	ra,0xffffd
    800236fa:	600080e7          	jalr	1536(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

0000000080023700 <.LBB614_33>:
    80023700:	00007617          	auipc	a2,0x7
    80023704:	79060613          	addi	a2,a2,1936 # 8002ae90 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.356>
    80023708:	45fd                	li	a1,31
    8002370a:	8536                	mv	a0,a3
    8002370c:	ffffd097          	auipc	ra,0xffffd
    80023710:	5ea080e7          	jalr	1514(ra) # 80020cf6 <_ZN4core9panicking18panic_bounds_check17ha760e6d8204f3836E>
	...

Disassembly of section .text._ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17h0283edf57016c8a1E:

0000000080023716 <_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17h0283edf57016c8a1E>:
    80023716:	7139                	addi	sp,sp,-64
    80023718:	fc06                	sd	ra,56(sp)
    8002371a:	f822                	sd	s0,48(sp)
    8002371c:	f426                	sd	s1,40(sp)
    8002371e:	f04a                	sd	s2,32(sp)
    80023720:	842e                	mv	s0,a1
    80023722:	758c                	ld	a1,40(a1)
    80023724:	7014                	ld	a3,32(s0)
    80023726:	6d98                	ld	a4,24(a1)
    80023728:	84aa                	mv	s1,a0
    8002372a:	00850913          	addi	s2,a0,8

000000008002372e <.LBB624_8>:
    8002372e:	00008597          	auipc	a1,0x8
    80023732:	b3f58593          	addi	a1,a1,-1217 # 8002b26d <.Lanon.9d4bfc86079e95d674f3cded52b1db19.641>
    80023736:	4619                	li	a2,6
    80023738:	8536                	mv	a0,a3
    8002373a:	9702                	jalr	a4
    8002373c:	e42a                	sd	a0,8(sp)
    8002373e:	e022                	sd	s0,0(sp)
    80023740:	ec26                	sd	s1,24(sp)

0000000080023742 <.LBB624_9>:
    80023742:	00008597          	auipc	a1,0x8
    80023746:	b3158593          	addi	a1,a1,-1231 # 8002b273 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.642>

000000008002374a <.LBB624_10>:
    8002374a:	00007717          	auipc	a4,0x7
    8002374e:	75e70713          	addi	a4,a4,1886 # 8002aea8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.418>
    80023752:	840a                	mv	s0,sp
    80023754:	0834                	addi	a3,sp,24
    80023756:	4615                	li	a2,5
    80023758:	8522                	mv	a0,s0
    8002375a:	ffffd097          	auipc	ra,0xffffd
    8002375e:	748080e7          	jalr	1864(ra) # 80020ea2 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE>
    80023762:	ec4a                	sd	s2,24(sp)

0000000080023764 <.LBB624_11>:
    80023764:	00008597          	auipc	a1,0x8
    80023768:	b1458593          	addi	a1,a1,-1260 # 8002b278 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.643>

000000008002376c <.LBB624_12>:
    8002376c:	00008717          	auipc	a4,0x8
    80023770:	b1470713          	addi	a4,a4,-1260 # 8002b280 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.644>
    80023774:	0834                	addi	a3,sp,24
    80023776:	4619                	li	a2,6
    80023778:	8522                	mv	a0,s0
    8002377a:	ffffd097          	auipc	ra,0xffffd
    8002377e:	728080e7          	jalr	1832(ra) # 80020ea2 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE>
    80023782:	00914503          	lbu	a0,9(sp)
    80023786:	00814583          	lbu	a1,8(sp)
    8002378a:	c91d                	beqz	a0,800237c0 <.LBB624_14+0x12>
    8002378c:	4505                	li	a0,1
    8002378e:	e595                	bnez	a1,800237ba <.LBB624_14+0xc>
    80023790:	6502                	ld	a0,0(sp)
    80023792:	750c                	ld	a1,40(a0)
    80023794:	03054603          	lbu	a2,48(a0)
    80023798:	7108                	ld	a0,32(a0)
    8002379a:	6d94                	ld	a3,24(a1)
    8002379c:	00467593          	andi	a1,a2,4
    800237a0:	e599                	bnez	a1,800237ae <.LBB624_14>

00000000800237a2 <.LBB624_13>:
    800237a2:	00007597          	auipc	a1,0x7
    800237a6:	c3958593          	addi	a1,a1,-967 # 8002a3db <.Lanon.9d4bfc86079e95d674f3cded52b1db19.202>
    800237aa:	4609                	li	a2,2
    800237ac:	a031                	j	800237b8 <.LBB624_14+0xa>

00000000800237ae <.LBB624_14>:
    800237ae:	00007597          	auipc	a1,0x7
    800237b2:	c2c58593          	addi	a1,a1,-980 # 8002a3da <.Lanon.9d4bfc86079e95d674f3cded52b1db19.201>
    800237b6:	4605                	li	a2,1
    800237b8:	9682                	jalr	a3
    800237ba:	00a10423          	sb	a0,8(sp)
    800237be:	85aa                	mv	a1,a0
    800237c0:	00b03533          	snez	a0,a1
    800237c4:	7902                	ld	s2,32(sp)
    800237c6:	74a2                	ld	s1,40(sp)
    800237c8:	7442                	ld	s0,48(sp)
    800237ca:	70e2                	ld	ra,56(sp)
    800237cc:	6121                	addi	sp,sp,64
    800237ce:	8082                	ret

Disassembly of section .text._ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a81e23d49d1c40bE:

00000000800237d0 <_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a81e23d49d1c40bE>:
    800237d0:	7179                	addi	sp,sp,-48
    800237d2:	f406                	sd	ra,40(sp)
    800237d4:	f022                	sd	s0,32(sp)
    800237d6:	ec26                	sd	s1,24(sp)
    800237d8:	842e                	mv	s0,a1
    800237da:	758c                	ld	a1,40(a1)
    800237dc:	7014                	ld	a3,32(s0)
    800237de:	6d98                	ld	a4,24(a1)
    800237e0:	84aa                	mv	s1,a0

00000000800237e2 <.LBB625_8>:
    800237e2:	00008597          	auipc	a1,0x8
    800237e6:	abe58593          	addi	a1,a1,-1346 # 8002b2a0 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.645>
    800237ea:	462d                	li	a2,11
    800237ec:	8536                	mv	a0,a3
    800237ee:	9702                	jalr	a4
    800237f0:	e42a                	sd	a0,8(sp)
    800237f2:	e022                	sd	s0,0(sp)
    800237f4:	e826                	sd	s1,16(sp)

00000000800237f6 <.LBB625_9>:
    800237f6:	00008597          	auipc	a1,0x8
    800237fa:	ab558593          	addi	a1,a1,-1355 # 8002b2ab <.Lanon.9d4bfc86079e95d674f3cded52b1db19.646>

00000000800237fe <.LBB625_10>:
    800237fe:	00007717          	auipc	a4,0x7
    80023802:	6da70713          	addi	a4,a4,1754 # 8002aed8 <.Lanon.9d4bfc86079e95d674f3cded52b1db19.424>
    80023806:	850a                	mv	a0,sp
    80023808:	0814                	addi	a3,sp,16
    8002380a:	461d                	li	a2,7
    8002380c:	ffffd097          	auipc	ra,0xffffd
    80023810:	696080e7          	jalr	1686(ra) # 80020ea2 <_ZN4core3fmt8builders11DebugStruct5field17h376881aa7803673dE>
    80023814:	00914503          	lbu	a0,9(sp)
    80023818:	00814583          	lbu	a1,8(sp)
    8002381c:	c91d                	beqz	a0,80023852 <.LBB625_12+0x12>
    8002381e:	4505                	li	a0,1
    80023820:	e595                	bnez	a1,8002384c <.LBB625_12+0xc>
    80023822:	6502                	ld	a0,0(sp)
    80023824:	750c                	ld	a1,40(a0)
    80023826:	03054603          	lbu	a2,48(a0)
    8002382a:	7108                	ld	a0,32(a0)
    8002382c:	6d94                	ld	a3,24(a1)
    8002382e:	00467593          	andi	a1,a2,4
    80023832:	e599                	bnez	a1,80023840 <.LBB625_12>

0000000080023834 <.LBB625_11>:
    80023834:	00007597          	auipc	a1,0x7
    80023838:	ba758593          	addi	a1,a1,-1113 # 8002a3db <.Lanon.9d4bfc86079e95d674f3cded52b1db19.202>
    8002383c:	4609                	li	a2,2
    8002383e:	a031                	j	8002384a <.LBB625_12+0xa>

0000000080023840 <.LBB625_12>:
    80023840:	00007597          	auipc	a1,0x7
    80023844:	b9a58593          	addi	a1,a1,-1126 # 8002a3da <.Lanon.9d4bfc86079e95d674f3cded52b1db19.201>
    80023848:	4605                	li	a2,1
    8002384a:	9682                	jalr	a3
    8002384c:	00a10423          	sb	a0,8(sp)
    80023850:	85aa                	mv	a1,a0
    80023852:	00b03533          	snez	a0,a1
    80023856:	64e2                	ld	s1,24(sp)
    80023858:	7402                	ld	s0,32(sp)
    8002385a:	70a2                	ld	ra,40(sp)
    8002385c:	6145                	addi	sp,sp,48
    8002385e:	8082                	ret

Disassembly of section .text.memcpy:

0000000080023860 <memcpy>:
    80023860:	ca11                	beqz	a2,80023874 <memcpy+0x14>
    80023862:	86aa                	mv	a3,a0
    80023864:	00058703          	lb	a4,0(a1)
    80023868:	00e68023          	sb	a4,0(a3)
    8002386c:	167d                	addi	a2,a2,-1
    8002386e:	0685                	addi	a3,a3,1
    80023870:	0585                	addi	a1,a1,1
    80023872:	fa6d                	bnez	a2,80023864 <memcpy+0x4>
    80023874:	8082                	ret

Disassembly of section .text.memmove:

0000000080023876 <memmove>:
    80023876:	40b506b3          	sub	a3,a0,a1
    8002387a:	02c6f163          	bgeu	a3,a2,8002389c <memmove+0x26>
    8002387e:	fff50693          	addi	a3,a0,-1
    80023882:	15fd                	addi	a1,a1,-1
    80023884:	00c58733          	add	a4,a1,a2
    80023888:	00070703          	lb	a4,0(a4)
    8002388c:	fff60793          	addi	a5,a2,-1
    80023890:	9636                	add	a2,a2,a3
    80023892:	00e60023          	sb	a4,0(a2)
    80023896:	863e                	mv	a2,a5
    80023898:	f7f5                	bnez	a5,80023884 <memmove+0xe>
    8002389a:	a819                	j	800238b0 <memmove+0x3a>
    8002389c:	ca11                	beqz	a2,800238b0 <memmove+0x3a>
    8002389e:	86aa                	mv	a3,a0
    800238a0:	00058703          	lb	a4,0(a1)
    800238a4:	00e68023          	sb	a4,0(a3)
    800238a8:	167d                	addi	a2,a2,-1
    800238aa:	0685                	addi	a3,a3,1
    800238ac:	0585                	addi	a1,a1,1
    800238ae:	fa6d                	bnez	a2,800238a0 <memmove+0x2a>
    800238b0:	8082                	ret

Disassembly of section .text.memset:

00000000800238b2 <memset>:
    800238b2:	c619                	beqz	a2,800238c0 <memset+0xe>
    800238b4:	86aa                	mv	a3,a0
    800238b6:	00b68023          	sb	a1,0(a3)
    800238ba:	167d                	addi	a2,a2,-1
    800238bc:	0685                	addi	a3,a3,1
    800238be:	fe65                	bnez	a2,800238b6 <memset+0x4>
    800238c0:	8082                	ret
